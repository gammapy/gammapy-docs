Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[425, null]], "0.10 (Jan 28, 2019)": [[426, null]], "0.11 (Mar 29, 2019)": [[427, null]], "0.12 (May 30, 2019)": [[428, null]], "0.13 (Jul 26, 2019)": [[429, null]], "0.14 (Sep 30, 2019)": [[430, null]], "0.15 (Dec 3, 2019)": [[431, null]], "0.16 (Feb 1, 2020)": [[432, null]], "0.17 (Apr 1, 2020)": [[433, null]], "0.18 (Nov 4th, 2020)": [[434, null]], "0.18.1 (Nov 6th, 2020)": [[435, null]], "0.18.2 (Nov 19th, 2020)": [[436, null]], "0.19 (Nov 22nd, 2021)": [[437, null]], "0.2 (Apr 13, 2015)": [[438, null]], "0.20 (May 12th, 2022)": [[439, null]], "0.20.1 (June 16th, 2022)": [[440, null]], "0.3 (Aug 13, 2015)": [[441, null]], "0.4 (Apr 20, 2016)": [[442, null]], "0.5 (Nov 22, 2016)": [[443, null]], "0.6 (Apr 28, 2017)": [[444, null]], "0.7 (Feb 28, 2018)": [[445, null]], "0.8 (Sep 23, 2018)": [[446, null]], "0.9 (Nov 29, 2018)": [[447, null]], "1.0 (November 10th, 2022)": [[448, null]], "1.0.1 (March 14th, 2023)": [[449, null]], "1.0.2 (December 6th, 2023)": [[450, null]], "1.1 (June 13th 2023)": [[451, null]], "1.2 (February 29th 2024)": [[452, null]], "1.3 (November 26th, 2024)": [[453, null]], "1D Spectral": [[504, "d-spectral"]], "1D spectrum simulation": [[464, null]], "2.0 (unreleased)": [[454, null]], "2D Image": [[504, "d-image"]], "2D map fitting": [[466, null]], "3D Cube": [[504, "d-cube"]], "3D detailed analysis": [[469, null]], "3D map simulation": [[477, null]], "A fully configured Flux Points Estimation": [[488, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[461, "a-note-on-statistics"]], "A note on the internal representation": [[488, "a-note-on-the-internal-representation"]], "API Links": [[386, "api-links"]], "API changes": [[448, "api-changes"], [451, "api-changes"], [452, "api-changes"], [453, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[121, null]], "Abstract": [[390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"], [413, "abstract"], [414, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[388, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[492, "accessing-data"]], "Accessing and visualising results": [[465, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[488, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[487, "accessing-contents-of-a-dataset"]], "Accessor methods": [[536, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[457, null]], "Adaptive smoothing": [[465, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[171, null]], "Add a model on multiple datasets": [[494, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[396, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[492, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[492, "adding-non-contiguous-axes"]], "Additional Models": [[408, "additional-models"]], "Additional PSF classes": [[530, "additional-psf-classes"]], "Additional utilities": [[582, "additional-utilities"]], "Aim": [[494, "aim"]], "Alternative": [[409, "alternative"]], "Alternatives": [[393, "alternatives"], [396, "alternatives"], [399, "alternatives"], [401, "alternatives"], [402, "alternatives"], [403, "alternatives"], [405, "alternatives"], [406, "alternatives"], [412, "alternatives"]], "Alternatives / Outlook": [[398, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[462, "analysis-configuration"], [469, "analysis-configuration"], [478, "analysis-configuration"], [508, "analysis-configuration"]], "Analysis steps": [[582, "analysis-steps"]], "Analysis workflow": [[582, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[530, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[385, "assert-convention"]], "Assign to model to all datasets": [[479, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[494, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[515, null]], "Astrophysical source population models": [[514, null]], "Astrophysics": [[513, null]], "Authorship policy": [[411, "authorship-policy"]], "BACKEND_DEFAULT": [[327, null]], "BSD or GPL license?": [[385, "bsd-or-gpl-license"]], "Background": [[499, "background"], [527, null]], "Background / What we have now": [[400, "background-what-we-have-now"]], "Background Model Handling": [[407, "background-model-handling"]], "Background estimation": [[491, "background-estimation"], [532, "background-estimation"]], "Background2D": [[150, null]], "Background3D": [[151, null]], "BackgroundIRF": [[152, null]], "BackgroundIRFModel": [[396, "backgroundirfmodel"]], "BackgroundModel": [[396, "backgroundmodel"]], "Basic image exploration and fitting": [[471, null]], "Basic operators": [[492, "basic-operators"]], "Bayesian blocks": [[484, "bayesian-blocks"]], "Bin volume and angular size": [[537, "bin-volume-and-angular-size"]], "Boundary mask": [[493, "boundary-mask"]], "Broken power law spectral model": [[551, null]], "BrokenPowerLawSpectralModel": [[221, null]], "Bug fixes and improvements": [[439, "bug-fixes-and-improvements"], [448, "bug-fixes-and-improvements"], [451, "bug-fixes-and-improvements"], [452, "bug-fixes-and-improvements"], [453, "bug-fixes-and-improvements"]], "Build": [[416, "build"]], "Building 1D datasets from the new observations": [[479, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[478, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[478, "building-the-3d-analysis-configuration"]], "Built-in models": [[581, "built-in-models"]], "Bundled gammapy.extern code": [[385, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[411, "citation-cff"]], "CLUMPY": [[512, "clumpy"]], "CTA 1DC": [[499, "cta-1dc"]], "CTAO with Gammapy": [[499, null]], "Caplog fixture": [[385, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[413, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[414, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[413, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[414, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[414, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[413, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[414, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[585, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[586, "cash-counts-statistic"]], "CashCountsStatistic": [[292, null]], "Catalog table": [[486, "catalog-table"]], "Caveat": [[585, "caveat"]], "Changelog": [[405, "changelog"]], "Check Python code": [[386, "check-python-code"]], "Check broken links": [[386, "check-broken-links"]], "Check setup": [[456, "check-setup"], [458, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [474, "check-setup"], [475, "check-setup"], [478, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"], [485, "check-setup"], [486, "check-setup"], [487, "check-setup"], [489, "check-setup"], [491, "check-setup"], [492, "check-setup"], [493, "check-setup"], [494, "check-setup"], [495, "check-setup"], [497, "check-setup"], [499, "check-setup"], [500, "check-setup"], [501, "check-setup"], [502, "check-setup"], [508, "check-setup"], [509, "check-setup"], [510, "check-setup"]], "Check the dataset we produced": [[501, "check-the-dataset-we-produced"]], "Check your setup": [[421, "check-your-setup"]], "Checker": [[359, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[386, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[411, "citation-scheme"]], "Class attributes": [[386, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[404, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[385, "clobber-or-overwrite"]], "Code in RST files": [[386, "code-in-rst-files"]], "Code in docstrings in Python files": [[386, "code-in-docstrings-in-python-files"]], "Code quality": [[416, "code-quality"]], "Collection of the personal information of authors": [[411, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[589, "colormaps"]], "Combining event lists and GTIs": [[521, "combining-event-lists-and-gtis"]], "Combining two Models": [[494, "combining-two-models"]], "Command line tools": [[584, null]], "Command line tools using click": [[385, "command-line-tools-using-click"]], "Command not found": [[584, "command-not-found"]], "Common API": [[488, "common-api"]], "Compare against the literature": [[463, "compare-against-the-literature"]], "Compare results": [[478, "compare-results"]], "Compound Spectral Model": [[495, "compound-spectral-model"]], "Compound spectral model": [[552, null]], "CompoundSpectralModel": [[222, null]], "Computation times": [[455, null], [460, null], [468, null], [476, null], [482, null], [498, null], [503, null], [505, null], [507, null], [511, null], [539, null], [549, null], [570, null], [580, null]], "Compute Flux Points": [[461, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[467, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[471, "compute-images"]], "Compute sensitivity": [[456, "compute-sensitivity"]], "Computing contours using stat_contour": [[489, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[489, "computing-contours-using-stat-surface"]], "Computing flux points": [[509, "computing-flux-points"]], "Conda Environments": [[417, "conda-environments"]], "Confidence contours": [[489, "confidence-contours"]], "Configurable analysis": [[582, "configurable-analysis"]], "Configuration": [[475, "configuration"]], "Configuration for stacked and joint analysis": [[469, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[462, "configuration-of-the-analysis"]], "Constant spatial model": [[540, null]], "Constant spectral model": [[553, null]], "Constant temporal model": [[571, null]], "ConstantFluxSpatialModel": [[223, null]], "ConstantSpatialModel": [[224, null]], "ConstantSpectralModel": [[225, null]], "ConstantTemporalModel": [[226, null]], "Context": [[458, "context"], [459, "context"], [461, "context"], [462, "context"], [463, "context"], [464, "context"], [465, "context"], [466, "context"], [467, "context"], [470, "context"], [472, "context"], [473, "context"], [475, "context"], [477, "context"], [478, "context"], [479, "context"], [480, "context"], [483, "context"], [484, "context"], [493, "context"], [496, "context"], [497, "context"], [508, "context"], [509, "context"]], "Continuous integration": [[416, "continuous-integration"]], "Contribution in conferences": [[411, "contribution-in-conferences"]], "Contributors": [[425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"], [452, "contributors"], [453, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[385, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[385, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[537, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[386, "correct-format-for-bullet-point-list"]], "Counts": [[500, "counts"]], "Counts and fit statistics": [[586, "counts-and-fit-statistics"]], "Counts statistics classes": [[586, "counts-statistics-classes"]], "Covariance": [[212, null]], "Covariance and parameters errors": [[489, "covariance-and-parameters-errors"]], "CovarianceResult": [[213, null]], "Create DL4 product - PSFMap": [[490, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[488, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[493, "create-a-mask-in-energy"]], "Create a stacked dataset": [[467, "create-a-stacked-dataset"]], "Create edisp kernel map": [[490, "create-edisp-kernel-map"]], "Create exclusion mask": [[461, "create-exclusion-mask"], [467, "create-exclusion-mask"]], "Create exposure map": [[490, "create-exposure-map"]], "Create the energy-dependent temporal model": [[474, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[509, "create-the-maker-classes-to-be-used"]], "Create the makers": [[458, "create-the-makers"]], "Create the mask from a catalog of sources": [[493, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[493, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[493, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[493, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[474, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[492, "creating-wcs-maps"]], "Creating a RegionGeom": [[537, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[537, "creating-a-regionndmap"]], "Creating a mask for fitting": [[493, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[493, "creating-a-mask-manually"]], "Creating an empty dataset": [[487, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[493, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[492, "creating-from-a-map-geometry"]], "Creating the config file": [[466, "creating-the-config-file"], [467, "creating-the-config-file"]], "Creation of the Flux points": [[462, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[479, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[479, "creation-of-the-datasets"]], "Creation of the model": [[462, "creation-of-the-model"]], "Cube plotting": [[492, "cube-plotting"]], "Cumulative excess and significance": [[458, "cumulative-excess-and-significance"]], "Current status": [[410, "current-status"]], "Custom models": [[581, "custom-models"]], "Cutouts": [[492, "cutouts"]], "Cython": [[416, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[411, "dco-implementation"]], "DL3 DR1": [[502, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[312, null]], "Dark matter": [[512, null]], "Dark matter spatial and spectral models": [[485, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[400, "data-fitting"]], "Data access and selection (DL3)": [[521, null]], "Data analysis": [[504, "data-analysis"]], "Data analysis subpackages in gammapy": [[391, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[394, "data-and-observation-handling"]], "Data and models files": [[470, "data-and-models-files"]], "Data exploration": [[504, "data-exploration"]], "Data reduction": [[400, "data-reduction"], [469, "data-reduction"], [469, "id1"], [483, "data-reduction"], [508, "data-reduction"], [509, "data-reduction"]], "Data reduction (DL3 to DL4)": [[532, null]], "Data reduction into a MapDataset": [[501, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[491, "data-reduction-loop"]], "Data selection": [[483, "data-selection"]], "Data structures": [[510, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [397, "dataset"], [491, "dataset"]], "Dataset helper / convenience methods": [[397, "dataset-helper-convenience-methods"]], "Dataset serialization": [[397, "dataset-serialization"]], "Dataset simulations": [[463, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[488, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[227, null]], "Datasets": [[100, null], [394, "datasets"], [397, "datasets"], [412, "datasets"], [487, "datasets"]], "Datasets (DL4)": [[520, null]], "Datasets - Reduced data, IRFs, models": [[487, null]], "Datasets serialization": [[470, "datasets-serialization"]], "DatasetsMaker": [[172, null]], "Datastore": [[499, "datastore"]], "Dealing with links": [[386, "dealing-with-links"]], "Decision": [[390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"], [413, "decision"], [414, "decision"]], "Define Target Region": [[461, "define-target-region"]], "Define an Observation": [[473, "define-an-observation"]], "Define an observation and make a dataset": [[474, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[456, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[471, "define-map-geometry"]], "Define the MapDataset": [[473, "define-the-mapdataset"]], "Define the ON region": [[463, "define-the-on-region"]], "Define the Sky model: a point-like source": [[473, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[458, "define-the-geometries"]], "Define the geometry": [[493, "define-the-geometry"]], "Define the model": [[509, "define-the-model"]], "Define the model to be used": [[478, "define-the-model-to-be-used"], [478, "id3"]], "Define the simulation source model": [[474, "define-the-simulation-source-model"]], "Define time intervals": [[479, "define-time-intervals"]], "Define underlying model": [[479, "define-underlying-model"]], "Defining the datastore and selecting observations": [[509, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[479, "defining-the-geometry"]], "Definition of a Contributor": [[411, "definition-of-a-contributor"]], "Definition of the Maintainer": [[411, "definition-of-the-maintainer"]], "Definition of the data selection": [[478, "definition-of-the-data-selection"], [478, "id1"]], "Definition of the dataset geometry": [[478, "definition-of-the-dataset-geometry"], [478, "id2"]], "Dependencies": [[384, null], [402, "dependencies"]], "Deprecating a function or a class": [[385, "deprecating-a-function-or-a-class"]], "Deprecation": [[410, "deprecation"]], "Derivation of the WStat formula": [[587, null]], "Detailed plan": [[392, "detailed-plan"]], "Developer How To": [[385, null]], "Developer guide": [[387, null]], "Discussion / Alternatives": [[400, "discussion-alternatives"]], "Disk spatial model": [[541, null]], "DiskSpatialModel": [[228, null]], "Dissolve gammapy.background": [[404, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[404, "dissolve-gammapy-image"]], "Distributions": [[402, "distributions"], [402, "id1"]], "Documentation": [[394, "documentation"], [452, "documentation"]], "Documentation How To": [[386, null]], "Documentation building": [[386, "documentation-building"]], "Documentation guidelines": [[386, "documentation-guidelines"]], "Documentation improvements": [[453, "documentation-improvements"]], "Download": [[416, "download"]], "EBL absorption spectral model": [[550, null]], "EBLAbsorptionNormSpectralModel": [[229, null]], "EBL_DATA_BUILTIN": [[230, null]], "EDispKernel": [[153, null]], "EDispKernelMap": [[154, null]], "EDispMap": [[155, null]], "ESTIMATOR_REGISTRY": [[122, null]], "Effective Area": [[490, "effective-area"]], "Effective area": [[499, "effective-area"], [526, null]], "EffectiveAreaTable2D": [[156, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[408, "energy-dependent-spatial-models"]], "Energy Dispersion": [[490, "energy-dispersion"], [500, "energy-dispersion"], [528, null]], "Energy dispersion": [[499, "energy-dispersion"]], "Energy edges": [[522, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[123, null]], "EnergyDependentMultiGaussPSF": [[157, null]], "EnergyDispersion2D": [[158, null]], "Estimating TS": [[586, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[484, null]], "Estimator": [[124, null]], "Estimators": [[412, "estimators"], [488, null]], "Estimators (DL4 to DL5, and DL6)": [[522, null]], "Event Simulation": [[394, "event-simulation"]], "Event lists": [[510, "event-lists"]], "Event sampling": [[473, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[499, "events"], [500, "events"]], "Example": [[585, "example"], [585, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[497, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[497, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[569, "example-of-extrapolation"]], "Example plot": [[540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [568, "example-plot"], [569, "example-plot"], [571, "example-plot"], [572, "example-plot"], [573, "example-plot"], [574, "example-plot"], [575, "example-plot"], [576, "example-plot"], [577, "example-plot"]], "Examples using FluxPointsEstimator": [[522, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[522, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[520, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[532, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[520, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[532, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[523, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[531, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[533, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[586, "excess-and-significance"], [586, "id2"]], "Excess errors": [[586, "excess-errors"], [586, "id4"]], "Excess estimators": [[409, "excess-estimators"]], "ExcessMapEstimator": [[125, null]], "Exclusion masks": [[493, "exclusion-masks"]], "Execution": [[584, "execution"]], "Exemplary additional prior subclasses:": [[413, "exemplary-additional-prior-subclasses"]], "Exercises": [[456, "exercises"], [459, "exercises"], [461, "exercises"], [464, "exercises"], [469, "exercises"], [471, "exercises"], [473, "exercises"], [474, "exercises"], [480, "exercises"], [483, "exercises"], [499, "exercises"], [500, "exercises"], [501, "exercises"], [502, "exercises"], [510, "exercises"], [510, "id1"], [510, "id2"], [510, "id3"]], "Existing code": [[391, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[231, null]], "ExpCutoffPowerLawNormSpectralModel": [[232, null]], "ExpCutoffPowerLawSpectralModel": [[233, null]], "ExpDecay temporal model": [[572, null]], "ExpDecayTemporalModel": [[234, null]], "Expected number of detected events": [[529, "expected-number-of-detected-events"]], "Exploration of the fit results": [[462, "exploration-of-the-fit-results"]], "Explore the fit results": [[458, "explore-the-fit-results"]], "Explore the results": [[458, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[459, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[556, null]], "Exponential cutoff power law spectral model": [[554, null]], "Exponential cutoff power law spectral model used for 3FGL": [[555, null]], "Expose model parameters as attributes": [[396, "expose-model-parameters-as-attributes"]], "Exposure": [[500, "exposure"]], "Extended source using a template": [[473, "extended-source-using-a-template"]], "Extract the light curve": [[479, "extract-the-light-curve"]], "Extract the lightcurve": [[480, "extract-the-lightcurve"]], "Extracting the light curve": [[478, "extracting-the-light-curve"]], "Extracting the ring background": [[467, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[529, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[415, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[470, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[500, null]], "FermiST": [[512, "fermist"]], "FermipyDatasetsReader": [[101, null]], "Files": [[499, "files"]], "Filling a RegionNDMap": [[537, "filling-a-regionndmap"]], "Filling maps from event lists": [[492, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[492, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[479, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[390, "final-remarks"]], "Final result": [[587, "final-result"]], "Fit": [[214, null], [477, "fit"], [500, "fit"]], "Fit quality and model residuals": [[461, "fit-quality-and-model-residuals"], [463, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[489, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[469, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[469, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[461, "fit-spectrum"], [463, "fit-spectrum"]], "Fit statistics": [[585, null]], "Fit the datasets": [[480, "fit-the-datasets"]], "Fit the model": [[509, "fit-the-model"]], "FitResult": [[215, null]], "Fitting": [[394, "fitting"], [489, null]], "Fitting Multiple Datasets with and without the Prior": [[497, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[497, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[489, "fitting-options"]], "Fitting temporal models": [[480, "fitting-temporal-models"]], "Fitting the obtained light curve": [[480, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[385, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[385, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[488, "flux-points-estimation"]], "Flux Profile Estimation": [[475, null]], "Flux maps": [[522, "flux-maps"]], "Flux maps for annihilation": [[485, "flux-maps-for-annihilation"]], "Flux maps for decay": [[485, "flux-maps-for-decay"]], "Flux point fitting": [[459, null]], "Flux points": [[486, "flux-points"], [508, "flux-points"], [522, "flux-points"]], "Flux quantities": [[522, "flux-quantities"]], "FluxMaps": [[126, null]], "FluxMetaData": [[127, null]], "FluxPoints": [[128, null]], "FluxPointsDataset": [[102, null], [397, "fluxpointsdataset"], [487, "fluxpointsdataset"]], "FluxPointsEstimator": [[129, null]], "FluxProfileEstimator": [[130, null]], "FoV background": [[491, "fov-background"], [531, null]], "FoVAlignment": [[159, null]], "FoVBackgroundMaker": [[173, null]], "FoVBackgroundModel": [[235, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[484, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[494, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[386, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[385, "functions-returning-several-values"]], "Further extensions": [[457, "further-extensions"]], "Further references": [[585, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[500, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[514, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[485, "gamma-ray-spectra-at-production"]], "Gammapy": [[423, null]], "Gammapy Binder": [[416, "id1"]], "Gammapy analysis workflow and package structure": [[582, null]], "Gammapy overview": [[405, "gammapy-overview"]], "Gammapy repository": [[416, "gammapy-repository"]], "Gammapy webpages": [[416, "gammapy-webpages"]], "Gaussian spatial model": [[542, null]], "Gaussian spectral model": [[557, null]], "Gaussian temporal model": [[573, null]], "GaussianPrior": [[236, null]], "GaussianSpatialModel": [[237, null]], "GaussianSpectralModel": [[238, null]], "GaussianTemporalModel": [[239, null]], "General Gammapy publications": [[411, "general-gammapy-publications"]], "General code style guidelines": [[391, "general-code-style-guidelines"]], "General conventions": [[385, "general-conventions"]], "General idea and class diagram": [[395, "general-idea-and-class-diagram"]], "General method": [[522, "general-method"]], "General organization of the new approach": [[400, "general-organization-of-the-new-approach"]], "Generalist estimators": [[409, "generalist-estimators"]], "Generalized Gaussian temporal model": [[574, null]], "Generalized gaussian spatial model": [[543, null]], "GeneralizedGaussianSpatialModel": [[240, null]], "GeneralizedGaussianTemporalModel": [[241, null]], "Generating log messages": [[385, "generating-log-messages"]], "Geom": [[194, null]], "Get a fit stat profile for the redshift": [[457, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[388, "get-in-touch-early"]], "Get set up": [[388, "get-set-up"]], "Get the flux points": [[457, "get-the-flux-points"]], "Getting started": [[405, "getting-started"], [418, null], [513, "getting-started"], [514, "getting-started"], [515, "getting-started"]], "Getting started section restructuring": [[405, "getting-started-section-restructuring"]], "Getting started with data": [[521, "getting-started-with-data"]], "Getting started with maps": [[536, "getting-started-with-maps"]], "Getting the reduced dataset": [[466, "getting-the-reduced-dataset"], [467, "getting-the-reduced-dataset"]], "Global Model Handling": [[407, "global-model-handling"]], "Glossary": [[583, "glossary"]], "Glossary and references": [[583, null]], "Goodness of fit": [[587, "goodness-of-fit"]], "Guidelines and specific actions": [[405, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[502, null]], "HAWC data access and reduction": [[501, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[501, null]], "HAWC: 1D dataset for flux point fitting": [[470, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[320, null]], "HEALPix geometry": [[535, "healpix-geometry"]], "HEALPix-based maps": [[535, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[470, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[411, "handling-of-conference-material"]], "Help!?": [[421, "help"]], "Hierarchical clustering of observations": [[496, "hierarchical-clustering-of-observations"]], "Hierarchy": [[412, "hierarchy"]], "High Level Analysis Interface": [[523, null]], "High level interface": [[394, "high-level-interface"], [508, null]], "How To": [[405, "how-to"], [524, null]], "How to contribute to Gammapy": [[388, null]], "How to get data values": [[492, "how-to-get-data-values"]], "How to handle API breaking changes?": [[385, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[415, null]], "How to make a pull request": [[385, "how-to-make-a-pull-request"]], "How to set data values": [[492, "how-to-set-data-values"]], "How to use logging": [[385, "how-to-use-logging"]], "How to use random numbers": [[385, "how-to-use-random-numbers"]], "How to write code": [[385, "how-to-write-code"]], "How to write tests": [[385, "how-to-write-tests"]], "HpxGeom": [[195, null]], "HpxMap": [[196, null]], "HpxNDMap": [[197, null]], "IPython": [[422, "id3"]], "IRF": [[160, null], [412, "irf"]], "IRF axis naming": [[529, "irf-axis-naming"]], "IRFMap": [[161, null]], "IRF_REGISTRY": [[162, null]], "IRFs": [[394, "irfs"], [499, "irfs"]], "Image Plotting": [[492, "image-plotting"]], "ImageProfile": [[131, null]], "ImageProfileEstimator": [[132, null]], "Images and masks": [[399, "images-and-masks"]], "Implement default parameters": [[396, "implement-default-parameters"]], "Implement evaluation region specifications": [[396, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[396, "implement-sky-coordinate-handling"]], "Implementation": [[405, "implementation"], [413, "implementation"]], "Implementation Outline": [[413, "implementation-outline"]], "Implementation impact": [[414, "implementation-impact"]], "Implementation road map": [[395, "implementation-road-map"]], "Implementing a custom model": [[495, "implementing-a-custom-model"]], "Implementing a custom prior": [[497, "implementing-a-custom-prior"]], "Imports and versions": [[477, "imports-and-versions"]], "Improve SourceModels class": [[396, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[396, "improve-and-implement-model-serilization"]], "Improve spatial models": [[396, "improve-spatial-models"]], "In the RST files": [[386, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[490, "inbuilt-gammapy-irfs"]], "Include png files as images": [[386, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[492, "indexing-and-slicing-sub-maps"]], "Infrastructure": [[453, "infrastructure"]], "Inspect the reduced dataset": [[509, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[509, "inspecting-residuals"]], "Install issues": [[421, "install-issues"]], "Installation": [[405, "installation"], [418, "installation"], [419, null]], "Instrument Response Functions (DL3)": [[529, null]], "Interaction Between Models and Dataset Objects": [[407, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[536, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[492, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[385, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[408, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[409, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[409, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[409, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[406, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[406, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[406, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[404, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[406, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[396, "introduce-naming-scheme-for-models"]], "Introduction": [[396, "introduction"], [399, "introduction"], [400, "introduction"], [402, "introduction"], [403, "introduction"], [405, "introduction"], [409, "introduction"], [411, "introduction"], [412, "introduction"], [456, "introduction"], [461, "introduction"], [463, "introduction"], [471, "introduction"], [481, "introduction"], [485, "introduction"], [486, "introduction"], [487, "introduction"], [491, "introduction"], [492, "introduction"], [499, "introduction"], [500, "introduction"], [501, "introduction"], [502, "introduction"], [504, "introduction"], [510, "introduction"], [512, "introduction"], [514, "introduction"], [515, "introduction"], [585, "introduction"]], "Introduction of background models": [[396, "introduction-of-background-models"]], "Introduction of model name attributes": [[396, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[396, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[334, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[500, "isotropic-diffuse-background"]], "Iterating by image": [[492, "iterating-by-image"]], "J Factors": [[485, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[520, "joint-analysis"]], "Joint analysis": [[469, "joint-analysis"], [470, "joint-analysis"]], "Jupyter": [[418, "id2"], [420, "jupyter"]], "Jupyter notebooks": [[422, "jupyter-notebooks"]], "Key Features": [[488, "key-features"]], "Known issues": [[453, "known-issues"]], "LabelMapAxis": [[198, null], [492, "labelmapaxis"]], "Latest CTAO performance files": [[499, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[397, "lazy-loading-of-datasets"]], "LazyFitsData": [[321, null]], "Let\u2019s simulate the model": [[474, "let-s-simulate-the-model"]], "Light Curve Fitting": [[400, "light-curve-fitting"]], "Light Curve estimation by observation": [[478, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[579, null]], "Light curves": [[478, null]], "Light curves for flares": [[479, null]], "LightCurveEstimator": [[133, null]], "LightCurveTemplateTemporalModel": [[242, null]], "Lightcurve": [[400, "lightcurve"]], "Lightcurves": [[486, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[400, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[395, "limitations"]], "Linear temporal model": [[575, null]], "LinearTemporalModel": [[243, null]], "Links to documentation": [[386, "links-to-documentation"]], "Links to other tutorials": [[386, "links-to-other-tutorials"]], "List available catalogs": [[486, "list-available-catalogs"]], "Load Data": [[461, "load-data"]], "Load IRFs and prepare dataset": [[456, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[486, "load-catalogs"]], "Load data": [[463, "load-data"]], "Load spectral points": [[459, "load-spectral-points"]], "Load the data": [[457, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[488, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[501, "load-the-tables"]], "Loading models from a catalog": [[494, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[385, "locate-origin-of-warnings"]], "Log parabola spectral model": [[558, null]], "Log parabola spectral norm model": [[559, null]], "Log-Parabola Fit": [[459, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[244, null]], "LogParabolaSpectralModel": [[245, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[246, null]], "Long Term Support releases": [[411, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[509, null]], "Low level map and cube analysis": [[391, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[174, null]], "METHOD_DEFAULT": [[328, null]], "METHOD_KWARGS_DEFAULT": [[329, null]], "MODEL_REGISTRY": [[247, null]], "Maintainer and developer perspective": [[392, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[394, "maintenance-and-code-quality"]], "Make a Bugfix release": [[415, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[481, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[471, "make-sky-images"]], "Make small pull requests": [[388, "make-small-pull-requests"]], "Maker": [[175, null]], "Makers": [[412, "makers"]], "Makers - Data reduction": [[491, null]], "Making a butterfly plot": [[509, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[385, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[385, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[385, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[496, "manual-grouping-of-observations"]], "Map": [[199, null]], "Map Analysis / Data Reduction": [[394, "map-analysis-data-reduction"]], "MapAxes": [[200, null]], "MapAxis": [[201, null]], "MapCoord": [[202, null], [536, "mapcoord"]], "MapDataset": [[103, null], [397, "mapdataset"], [487, "mapdataset"]], "MapDatasetEventSampler": [[104, null], [398, "mapdataseteventsampler"]], "MapDatasetMaker": [[176, null]], "MapDatasetMetaData": [[105, null]], "MapDatasetOnOff": [[106, null], [397, "mapdatasetonoff"]], "MapDatasetWeighted": [[107, null]], "MapPanelPlotter": [[372, null]], "Maps": [[203, null], [394, "maps"], [492, null], [510, "maps"]], "Maps operations": [[492, "maps-operations"]], "Mask dilation and erosion": [[493, "mask-dilation-and-erosion"]], "Mask maps": [[493, null]], "Mask modifications": [[493, "mask-modifications"]], "Mask some sky regions": [[493, "mask-some-sky-regions"]], "Masks for fitting": [[493, "masks-for-fitting"]], "Masks operations": [[493, "masks-operations"]], "Meetings": [[394, "meetings"]], "Metadata API": [[412, "metadata-api"]], "Metadata files": [[411, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[412, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[484, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[248, null]], "Minor changes": [[406, "minor-changes"]], "Mission elapsed times (MET)": [[588, "mission-elapsed-times-met"]], "Model": [[249, null]], "Model and dataset": [[489, "model-and-dataset"], [497, "model-and-dataset"]], "Model fit": [[471, "model-fit"]], "Model fitting": [[462, "model-fitting"], [508, "model-fitting"]], "Model gallery": [[538, null]], "Model lists and serialisation": [[495, "model-lists-and-serialisation"]], "Model the observed spectrum": [[457, "model-the-observed-spectrum"]], "ModelBase": [[250, null]], "Modeling": [[394, "modeling"], [412, "modeling"], [483, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[581, null]], "Modeling and fitting": [[469, "modeling-and-fitting"]], "Modelling": [[466, "modelling"], [494, null]], "Models": [[251, null], [495, null]], "Models with energy dependent morphology": [[495, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[495, "models-with-shared-parameter"]], "Modifying Data": [[492, "modifying-data"]], "Modifying model parameters": [[495, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[472, null]], "Motivation": [[413, "motivation"], [414, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[470, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[330, null]], "Naima spectral model": [[560, null]], "NaimaSpectralModel": [[252, null]], "New features": [[448, "new-features"], [451, "new-features"], [452, "new-features"], [453, "new-features"]], "Next steps": [[499, "next-steps"], [501, "next-steps"], [502, "next-steps"]], "Night-wise LC estimation": [[478, "night-wise-lc-estimation"]], "Norm Spectral Models": [[495, "norm-spectral-models"]], "Notations": [[586, "notations"]], "Notes": [[585, "notes"]], "OGIPDatasetReader": [[108, null]], "OGIPDatasetWriter": [[109, null]], "Object text repr, str and info": [[385, "object-text-repr-str-and-info"]], "Objective": [[466, "objective"], [467, "objective"], [473, "objective"], [474, "objective"], [496, "objective"]], "Objectives": [[395, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[491, "observation-duration-and-effective-livetime"]], "Observation selection": [[462, "observation-selection"], [508, "observation-selection"]], "ObservationEventSampler": [[110, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[496, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[472, "obtain-the-data-to-use"]], "Obtain the observations": [[496, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[456, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[416, "old-example-data"]], "On-Off analysis": [[464, "on-off-analysis"]], "Opening the data": [[481, "opening-the-data"]], "OptimizeResult": [[216, null]], "Optional dependencies": [[384, "optional-dependencies"], [402, "optional-dependencies"]], "Other folders": [[416, "other-folders"]], "Other packages": [[512, "other-packages"]], "Other repositories": [[416, "other-repositories"]], "Others": [[385, "others"], [416, "others"]], "Outlook": [[397, "outlook"], [399, "outlook"], [401, "outlook"], [402, "outlook"], [404, "outlook"], [405, "outlook"], [406, "outlook"], [409, "outlook"]], "Output in Jupyter notebook cells": [[385, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[414, "outputs-from-the-nested-sampling"]], "Overview": [[531, "overview"], [533, "overview"], [534, "overview"]], "PIG 1 - PIG purpose and guidelines": [[390, null]], "PIG 10 - Regions": [[399, null]], "PIG 11 - Light curves": [[400, null]], "PIG 12 - High level interface": [[401, null]], "PIG 13 - Gammapy dependencies and distribution": [[402, null]], "PIG 14 - Uncertainty estimation": [[403, null]], "PIG 16 - Gammapy package structure": [[404, null]], "PIG 18 - Documentation": [[405, null]], "PIG 19 - Gammapy package structure follow up": [[406, null]], "PIG 2 - Organization of low level analysis code": [[391, null]], "PIG 20 - Global Model API": [[407, null]], "PIG 21 - Models improvements": [[408, null]], "PIG 22 - Unified flux estimators API": [[409, null]], "PIG 23 - Gammapy release cycle and version numbering": [[410, null]], "PIG 24 - Authorship policy": [[411, null]], "PIG 25 - Metadata container for Gammapy": [[412, null]], "PIG 26 - Model Priors API": [[413, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[414, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[392, null]], "PIG 4 - Setup for tutorial notebooks and data": [[393, null]], "PIG 5 - Gammapy 1.0 roadmap": [[394, null]], "PIG 6 - CTA observation handling": [[395, null]], "PIG 7 - Models": [[396, null]], "PIG 8 - Datasets": [[397, null]], "PIG 9 - Event sampling": [[398, null]], "PIG review": [[390, "pig-review"]], "PIG status": [[390, "pig-status"]], "PIGs": [[389, null]], "POOL_KWARGS_DEFAULT": [[331, null]], "PSF": [[490, "psf"], [500, "psf"]], "PSF3D": [[163, null]], "PSFKernel": [[164, null]], "PSFKing": [[165, null]], "PSFMap": [[166, null]], "PWN": [[50, null]], "Package / API": [[504, "package-api"]], "Package and docs": [[416, "package-and-docs"]], "Package structure and dependencies": [[439, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[394, "papers"]], "Parallel evaluation of datasets": [[397, "parallel-evaluation-of-datasets"]], "Parameter": [[217, null]], "ParameterEstimator": [[134, null]], "Parameters": [[218, null]], "ParametricPSF": [[167, null]], "Perform spectral model fitting": [[458, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[509, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[458, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[398, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[578, null]], "Phase-resolved map": [[481, "phase-resolved-map"]], "Phase-resolved spectrum": [[481, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[177, null]], "Phasogram": [[481, "phasogram"]], "Piecewise  norm spectral model": [[561, null]], "Piecewise norm spatial model": [[544, null]], "PiecewiseNormSpatialModel": [[253, null]], "PiecewiseNormSpectralModel": [[254, null]], "Pixel coordinate convention": [[385, "pixel-coordinate-convention"]], "Plot": [[471, "plot"]], "Plot off regions": [[461, "plot-off-regions"]], "Plot the fitted spectrum": [[509, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[457, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[475, "plotting-results"]], "Plotting a RegionGeom": [[537, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[494, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[462, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[537, "plotting-the-map-content"]], "Plotting the results": [[472, "plotting-the-results"]], "Plotting the underlying region": [[537, "plotting-the-underlying-region"]], "Point Spread Function": [[530, null]], "Point source sensitivity": [[456, null]], "Point spatial model": [[545, null]], "Point spread function": [[499, "point-spread-function"]], "PointSpatialModel": [[255, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[411, "possible-implementations"]], "Post release": [[415, "post-release"]], "Power Law Fit": [[459, "power-law-fit"]], "Power law 2 spectral model": [[563, null]], "Power law norm spectral model": [[564, null]], "Power law spectral model": [[562, null]], "PowerLaw temporal model": [[576, null]], "PowerLaw2SpectralModel": [[256, null]], "PowerLawNormSpectralModel": [[257, null]], "PowerLawSpectralModel": [[258, null]], "PowerLawTemporalModel": [[259, null]], "Predicted counts": [[520, "predicted-counts"]], "Prepare and run the event sampler": [[474, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[458, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[509, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[458, "prerequisites"], [459, "prerequisites"], [461, "prerequisites"], [462, "prerequisites"], [463, "prerequisites"], [464, "prerequisites"], [466, "prerequisites"], [470, "prerequisites"], [472, "prerequisites"], [473, "prerequisites"], [474, "prerequisites"], [475, "prerequisites"], [477, "prerequisites"], [478, "prerequisites"], [479, "prerequisites"], [480, "prerequisites"], [484, "prerequisites"], [489, "prerequisites"], [493, "prerequisites"], [494, "prerequisites"], [497, "prerequisites"], [508, "prerequisites"], [509, "prerequisites"]], "Pretty-print source information": [[486, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[260, null]], "PriorParameter": [[219, null]], "PriorParameters": [[220, null]], "Priors": [[497, null]], "Profile Estimation": [[475, "profile-estimation"]], "Profile Likelihood": [[587, "profile-likelihood"]], "Profiles": [[485, "profiles"]], "Project Management": [[394, "project-management"]], "Project setup": [[416, null]], "Projects": [[394, "projects"]], "Proposal": [[393, "proposal"], [395, "proposal"], [396, "proposal"], [397, "proposal"], [398, "proposal"], [399, "proposal"], [400, "proposal"], [401, "proposal"], [403, "proposal"], [404, "proposal"], [405, "proposal"], [406, "proposal"], [407, "proposal"], [408, "proposal"], [414, "proposal"]], "Proposal of API for flux estimate results": [[409, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[475, "proposed-approach"]], "Proposed approach": [[458, "proposed-approach"], [459, "proposed-approach"], [462, "proposed-approach"], [464, "proposed-approach"], [465, "proposed-approach"], [466, "proposed-approach"], [467, "proposed-approach"], [470, "proposed-approach"], [473, "proposed-approach"], [474, "proposed-approach"], [477, "proposed-approach"], [478, "proposed-approach"], [479, "proposed-approach"], [480, "proposed-approach"], [483, "proposed-approach"], [484, "proposed-approach"], [489, "proposed-approach"], [493, "proposed-approach"], [494, "proposed-approach"], [496, "proposed-approach"], [508, "proposed-approach"], [509, "proposed-approach"]], "Proposed class diagram": [[395, "proposed-class-diagram"]], "Proposed metadata classes": [[412, "proposed-metadata-classes"]], "Proposed solution": [[412, "proposed-solution"]], "Pull Requests": [[439, "pull-requests"], [440, "pull-requests"], [448, "pull-requests"], [449, "pull-requests"], [450, "pull-requests"], [451, "pull-requests"], [452, "pull-requests"], [453, "pull-requests"]], "Pull requests": [[425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"], [446, "pull-requests"], [447, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[516, null]], "Pulsar Wind Nebula Source Models": [[517, null]], "Pulsar analysis": [[481, null]], "Python": [[422, "id2"]], "Python scripts": [[422, "python-scripts"]], "Python version support": [[385, "python-version-support"]], "RadMax2D": [[168, null]], "Read and Introduce Data": [[475, "read-and-introduce-data"]], "Read in input images": [[465, "read-in-input-images"]], "Read the datasets": [[494, "read-the-datasets"]], "Read the energy-dependent model": [[474, "read-the-energy-dependent-model"]], "Reading Maps": [[492, "reading-maps"]], "Reading and Writing": [[492, "reading-and-writing"]], "Reading and writing masks": [[493, "reading-and-writing-masks"]], "Reading different datasets": [[470, "reading-different-datasets"]], "RecoPSFMap": [[169, null]], "Recommended Setup": [[418, "recommended-setup"], [420, null]], "Reference": [[405, "reference"], [584, "reference"]], "References": [[583, "publications"]], "Reflected regions background": [[491, "reflected-regions-background"], [533, null]], "ReflectedRegionsBackgroundMaker": [[178, null]], "ReflectedRegionsFinder": [[179, null]], "Region arguments": [[399, "region-arguments"]], "RegionGeom": [[204, null], [537, "regiongeom"]], "RegionGeom and RegionNDMap": [[537, null]], "RegionGeom and coordinates": [[537, "regiongeom-and-coordinates"]], "RegionNDMap": [[205, null], [537, "regionndmap"]], "RegionsFinder": [[180, null]], "Relation to WCS geometries": [[537, "relation-to-wcs-geometries"]], "Release notes": [[385, "release-notes"], [424, null]], "Release preparation, feature freeze": [[410, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[410, "release-scheduling-and-lts"]], "Releases": [[394, "releases"], [411, "releases"], [416, "releases"]], "Releasing the final version of the major release": [[415, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[415, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[494, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[385, "removing-an-attribute"]], "Renaming an argument": [[385, "renaming-an-argument"]], "Required dependencies": [[384, "required-dependencies"], [402, "required-dependencies"]], "Requirements": [[412, "requirements"]], "Resampling datasets": [[487, "resampling-datasets"]], "Resolve gammapy.detect": [[406, "resolve-gammapy-detect"]], "Results": [[456, "results"]], "Results exploration": [[462, "results-exploration"]], "Ring background": [[491, "ring-background"], [534, null]], "Ring background map": [[467, null]], "RingBackgroundMaker": [[181, null]], "Rotated regions": [[399, "rotated-regions"]], "Run Estimation": [[475, "run-estimation"]], "Run Estimator": [[472, "run-estimator"]], "Run data reduction chain": [[461, "run-data-reduction-chain"], [463, "run-data-reduction-chain"]], "Run the 1D data reduction": [[478, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[478, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[584, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[388, "running-tests-building-documentation"]], "Running the Data Reduction": [[462, "running-the-data-reduction"]], "Running the analysis": [[508, "running-the-analysis"]], "Running the estimation": [[462, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[462, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[462, "running-the-fit"]], "Running the light curve extraction in 1D": [[478, "running-the-light-curve-extraction-in-1d"]], "SED types": [[522, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[261, null]], "SPECTRAL_MODEL_REGISTRY": [[262, null]], "Safe data range definition": [[532, "safe-data-range-definition"]], "Safe data range handling": [[491, "safe-data-range-handling"]], "SafeMaskMaker": [[182, null]], "Sample a source with energy-dependent temporal evolution": [[474, null]], "Sampling methods": [[398, "sampling-methods"]], "Sampling the source and background events": [[473, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[462, "save-dataset-to-disk"], [508, "save-dataset-to-disk"], [509, "save-dataset-to-disk"]], "ScaleSpectralModel": [[263, null]], "ScaledRegularGridInterpolator": [[324, null]], "Scripts": [[504, "scripts"]], "Select a catalog subset": [[486, "select-a-catalog-subset"]], "Select a source": [[486, "select-a-source"]], "Select observations": [[471, "select-observations"]], "Select the ON region": [[458, "select-the-on-region"]], "Select the data": [[458, "select-the-data"], [479, "select-the-data"]], "Selecting models contributing to a given region": [[494, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[494, "selecting-models-from-a-list"]], "SensitivityEstimator": [[135, null]], "Serialisation": [[413, "serialisation"], [490, "serialisation"], [490, "id1"], [490, "id2"], [500, "serialisation"]], "Serialisation and I/O": [[475, "serialisation-and-i-o"]], "Serialisation of datasets": [[520, "serialisation-of-datasets"]], "Serialisation of the fit result": [[462, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[462, "serialisation-of-the-results"]], "Serialisation of the samples": [[414, "serialisation-of-the-samples"]], "Serialising models": [[494, "serialising-models"]], "Serialization": [[412, "serialization"]], "Setting fitting parameters": [[462, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[508, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[508, "setting-the-background-normalization-maker"]], "Setting the data to use": [[508, "setting-the-data-to-use"]], "Setting the exclusion mask": [[462, "setting-the-exclusion-mask"], [508, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[508, "setting-the-reduced-datasets-geometry"]], "Setup": [[456, "setup"], [457, "setup"], [458, "setup"], [459, "setup"], [461, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [466, "setup"], [467, "setup"], [471, "setup"], [472, "setup"], [473, "setup"], [474, "setup"], [475, "setup"], [478, "setup"], [479, "setup"], [480, "setup"], [483, "setup"], [484, "setup"], [485, "setup"], [487, "setup"], [491, "setup"], [492, "setup"], [493, "setup"], [494, "setup"], [495, "setup"], [499, "setup"], [500, "setup"], [508, "setup"], [509, "setup"], [510, "setup"]], "Shell spatial model": [[546, null]], "Shell2 spatial model": [[547, null]], "Shell2SpatialModel": [[264, null]], "ShellSpatialModel": [[265, null]], "Show images": [[471, "show-images"]], "Show the results tables": [[472, "show-the-results-tables"]], "Show various observation quantities": [[496, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[408, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[408, "simplify-yaml-representation"]], "Simulate multiple event lists": [[473, "simulate-multiple-event-lists"]], "Simulating a light curve": [[480, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[480, null]], "Simulation": [[477, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[397, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[464, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[577, null]], "SineTemporalModel": [[266, null]], "Skip unit tests for some Astropy versions": [[385, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[399, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[536, null]], "SkyModel": [[267, null], [495, "skymodel"]], "Smooth broken power law spectral model": [[565, null]], "SmoothBrokenPowerLawSpectralModel": [[268, null]], "Some terminology": [[395, "some-terminology"]], "Source Detection": [[471, "source-detection"]], "Source candidates": [[465, "source-candidates"]], "Source catalogs": [[486, null], [510, "source-catalogs"], [519, null]], "Source detection and significance maps": [[465, null]], "Source information": [[486, "source-information"]], "Source models": [[486, "source-models"], [499, "source-models"]], "Source object": [[486, "source-object"]], "Source statistic": [[461, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[396, "sourceirfmodel"]], "Spatial analysis": [[471, "spatial-analysis"]], "Spatial models": [[495, "spatial-models"], [538, "spatial-models"]], "SpatialIRFModel": [[396, "spatialirfmodel"]], "SpatialModel": [[269, null]], "Special cases": [[587, "special-cases"]], "Specificities of the HGPS catalog": [[486, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[408, "spectral-absorption-model"]], "Spectral Norm Models": [[408, "spectral-norm-models"]], "Spectral analysis": [[461, null]], "Spectral analysis of extended sources": [[458, null]], "Spectral analysis with energy-dependent directional cuts": [[463, null]], "Spectral analysis with the HLI": [[462, null]], "Spectral models": [[495, "spectral-models"], [538, "spectral-models"]], "Spectral models and flux points": [[510, "spectral-models-and-flux-points"]], "Spectral points": [[471, "spectral-points"]], "SpectralIRFModel": [[396, "spectralirfmodel"]], "SpectralModel": [[270, null]], "Spectrum": [[471, "spectrum"]], "Spectrum dataset": [[491, "spectrum-dataset"]], "SpectrumDataset": [[111, null], [397, "spectrumdataset"], [487, "spectrumdataset"]], "SpectrumDatasetMaker": [[183, null]], "SpectrumDatasetOnOff": [[112, null], [397, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[386, "sphinx-gallery-extension"]], "Spiral arm models": [[514, "spiral-arm-models"]], "Stack observations": [[461, "stack-observations"]], "Stacked analysis": [[469, "stacked-analysis"]], "Stacking Multiple Datasets": [[520, "stacking-multiple-datasets"]], "Statistical utility functions": [[586, null]], "Status": [[395, "status"], [404, "status"]], "Storing the energy dispersion information as a function of sky position": [[528, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[400, "storing-the-results-and-further-studies"]], "Sub-packages": [[513, "sub-packages"]], "Suggestions": [[411, "suggestions"]], "Summary": [[425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [452, "summary"], [453, "summary"], [469, "summary"], [500, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[568, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[567, null]], "Super exponential cutoff power law model used for 3FGL": [[566, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[271, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[272, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[273, null]], "Supernova Remnant Models": [[518, null]], "Support for Asymmetric IRFs": [[490, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[410, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[506, null]], "Survey panel plots": [[589, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[274, null]], "TS map estimation": [[465, "ts-map-estimation"]], "TSMapEstimator": [[136, null]], "Table conversion": [[488, "table-conversion"]], "Task List": [[397, "task-list"]], "Task list": [[396, "task-list"], [398, "task-list"], [399, "task-list"], [400, "task-list"], [401, "task-list"], [402, "task-list"], [414, "task-list"]], "Template spatial model": [[548, null]], "Template spectral model": [[569, null]], "TemplateNDSpatialModel": [[275, null]], "TemplateNDSpectralModel": [[276, null]], "TemplateNPredModel": [[277, null]], "TemplatePhaseCurveTemporalModel": [[278, null]], "TemplateSpatialModel": [[279, null]], "TemplateSpectralModel": [[280, null]], "Temporal models": [[495, "temporal-models"], [538, "temporal-models"]], "TemporalModel": [[281, null]], "Testing of plotting functions": [[385, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[391, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[472, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[416, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[416, "the-gammapy-extra-repository"]], "The index tables": [[521, "the-index-tables"]], "The reflected region finder": [[533, "the-reflected-region-finder"]], "The results for testing energy dependence": [[472, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[472, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[470, "the-setup"], [488, "the-setup"], [489, "the-setup"], [497, "the-setup"]], "Theta squared event distribution": [[502, "theta-squared-event-distribution"]], "Time": [[504, "time"]], "Time bin preparation": [[400, "time-bin-preparation"]], "Time bins": [[400, "time-bins"]], "Time differences": [[588, "time-differences"]], "Time format and scale": [[588, "time-format-and-scale"]], "Time handling in Gammapy": [[588, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[483, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[483, null]], "Time variable source using a lightcurve": [[473, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[206, null], [492, "timemapaxis"]], "Timing Analysis": [[394, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[293, null]], "Troubleshooting": [[421, null], [584, "troubleshooting"]], "Tutorial overview": [[472, "tutorial-overview"], [499, "tutorial-overview"], [501, "tutorial-overview"]], "Tutorials": [[405, "tutorials"], [504, null]], "Tutorials Overview": [[418, "tutorials-overview"]], "Type validation": [[412, "type-validation"]], "Types of supported datasets": [[520, "types-of-supported-datasets"]], "Unification of flux estimators?": [[409, "unification-of-flux-estimators"]], "UniformPrior": [[282, null]], "Unify calling interface for models": [[396, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[537, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[413, "use-cases"], [414, "use-cases"]], "Use cases / scenarios": [[395, "use-cases-scenarios"]], "User guide": [[525, null]], "User perspective": [[392, "user-perspective"]], "User testing of the API": [[414, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[419, "using-anaconda-miniconda"]], "Using Factory Methods": [[492, "using-factory-methods"]], "Using Gammapy": [[422, null]], "Using Gammapy IRFs": [[490, null]], "Using Mamba": [[419, "using-mamba"]], "Using YAML configuration files": [[508, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[462, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[462, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[523, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[512, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[515, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[519, "using-gammapy-catalog"]], "Using gammapy.data": [[521, "using-gammapy-data"]], "Using gammapy.datasets": [[520, "using-gammapy-datasets"]], "Using gammapy.estimators": [[522, "using-gammapy-estimators"]], "Using gammapy.irf": [[529, "using-gammapy-irf"]], "Using gammapy.makers": [[532, "using-gammapy-makers"]], "Using gammapy.maps": [[536, "using-gammapy-maps"]], "Using gammapy.modeling": [[581, "using-gammapy-modeling"]], "Using masks": [[487, "using-masks"]], "Using other package managers": [[419, "using-other-package-managers"]], "Using pip": [[419, "using-pip"]], "Using regions": [[533, "using-regions"]], "Using the reflected background estimator": [[533, "using-the-reflected-background-estimator"]], "Utility functions": [[588, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[514, "velocity-distributions"]], "Venv Environments": [[417, "venv-environments"]], "Version 0.1": [[424, "version-0-1"]], "Version 0.10": [[424, "version-0-10"]], "Version 0.11": [[424, "version-0-11"]], "Version 0.12": [[424, "version-0-12"]], "Version 0.13": [[424, "version-0-13"]], "Version 0.14": [[424, "version-0-14"]], "Version 0.15": [[424, "version-0-15"]], "Version 0.16": [[424, "version-0-16"]], "Version 0.17": [[424, "version-0-17"]], "Version 0.18": [[424, "version-0-18"]], "Version 0.19": [[424, "version-0-19"]], "Version 0.2": [[424, "version-0-2"]], "Version 0.20": [[424, "version-0-20"]], "Version 0.20.1": [[424, "version-0-20-1"]], "Version 0.3": [[424, "version-0-3"]], "Version 0.4": [[424, "version-0-4"]], "Version 0.5": [[424, "version-0-5"]], "Version 0.6": [[424, "version-0-6"]], "Version 0.7": [[424, "version-0-7"]], "Version 0.8": [[424, "version-0-8"]], "Version 0.9": [[424, "version-0-9"]], "Version 1.0": [[424, "version-1-0"]], "Version 1.0.1": [[424, "version-1-0-1"]], "Version 1.0.2": [[424, "version-1-0-2"]], "Version 1.1": [[424, "version-1-1"]], "Version 1.2": [[424, "version-1-2"]], "Version 1.3": [[424, "version-1-3"]], "Version numbering": [[410, "version-numbering"]], "Virtual Environments": [[417, null]], "Visualing a RegionNDMap": [[537, "visualing-a-regionndmap"]], "Visualising the results": [[483, "visualising-the-results"]], "Visualization": [[589, null]], "Visualizing and Plotting": [[492, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[585, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[586, "wstat-counts-statistic"]], "WStatCountsStatistic": [[294, null]], "WcsGeom": [[207, null]], "WcsMap": [[208, null]], "WcsNDMap": [[209, null]], "What checks and conversions should I do for inputs?": [[385, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[390, "what-is-a-pig"]], "What is this?": [[388, "what-is-this"]], "What next?": [[459, "what-next"], [461, "what-next"], [465, "what-next"], [471, "what-next"], [478, "what-next"], [510, "what-next"]], "What others have": [[395, "what-others-have"]], "What we have": [[393, "what-we-have"], [401, "what-we-have"], [409, "what-we-have"]], "What\u2019s new?": [[426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [439, "what-s-new"], [440, "what-s-new"], [442, "what-s-new"], [443, "what-s-new"], [444, "what-s-new"], [445, "what-s-new"], [446, "what-s-new"], [447, "what-s-new"]], "What\u2019s next": [[508, "whats-next"]], "What\u2019s next?": [[462, "whats-next"]], "Where should I import from?": [[385, "where-should-i-import-from"]], "WobbleRegionsFinder": [[184, null]], "Working with event lists": [[521, "working-with-event-lists"]], "Write your own CLI": [[584, "write-your-own-cli"]], "Writing Maps": [[492, "writing-maps"]], "Writing a PIG": [[390, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[537, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[521, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [571, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"], [578, "yaml-representation"], [579, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[366, null]], "add_colorbar": [[373, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[374, null]], "apply_edisp": [[113, null], [118, null]], "arbitrary type input and validation": [[412, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[528, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[527, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[527, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[528, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[526, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[360, null]], "assert_skycoord_allclose": [[361, null]], "assert_time_allclose": [[362, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[313, null]], "cash": [[295, null]], "cash_sum_cython": [[296, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[411, "codemeta-json"]], "colormap_hess": [[375, null]], "colormap_milagro": [[376, null]], "combine_flux_maps": [[137, null]], "combine_significance_maps": [[138, null]], "compound_region_to_regions": [[343, null]], "compute_chisq": [[297, null]], "compute_flux_doubling": [[298, null]], "compute_fpp": [[299, null]], "compute_fvar": [[300, null]], "compute_lightcurve_discrete_correlation": [[139, null]], "compute_lightcurve_doublingtime": [[140, null]], "compute_lightcurve_fpp": [[141, null]], "compute_lightcurve_fvar": [[142, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[210, null]], "containment_region": [[211, null]], "create_cosmic_ray_spectral_model": [[283, null]], "create_crab_spectral_model": [[284, null]], "create_empty_map_dataset_from_irfs": [[114, null]], "create_fermi_isotropic_diffuse_model": [[285, null]], "create_map_dataset_from_dl4": [[119, null]], "create_map_dataset_from_observation": [[115, null]], "create_map_dataset_geoms": [[116, null]], "cstat": [[301, null]], "data": [[412, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[302, null]], "docs.gammapy.org": [[416, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[335, null]], "earth_location_from_dict": [[322, null]], "estimate_exposure_reco_energy": [[143, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[303, null]], "find_peaks": [[144, null]], "find_peaks_in_flux_map": [[145, null]], "fov_to_sky": [[314, null]], "from_yaml": [[348, null]], "galactic": [[315, null]], "gamLike": [[512, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[416, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[146, null]], "get_combined_significance_maps": [[147, null]], "get_images_paths": [[349, null]], "get_irfs_features": [[96, null]], "get_random_state": [[336, null]], "get_rebinned_axis": [[148, null]], "get_wstat_gof_terms": [[304, null]], "get_wstat_mu_bkg": [[305, null]], "hierarchical_clustering": [[310, null]], "hstack_columns": [[355, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[286, null]], "interpolate_profile": [[325, null]], "interpolation_scale": [[326, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[170, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[344, null]], "make_counts_rad_max": [[185, null]], "make_edisp_kernel_map": [[186, null]], "make_edisp_map": [[187, null]], "make_effective_livetime_map": [[188, null]], "make_map_background_irf": [[189, null]], "make_map_exposure_true_energy": [[190, null]], "make_observation_time_map": [[191, null]], "make_orthogonal_rectangle_sky_regions": [[345, null]], "make_path": [[350, null]], "make_psf_map": [[192, null]], "make_theta_squared_table": [[193, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[316, null]], "mpl_plot_check": [[363, null]], "multiprocessing_manager": [[332, null]], "norm_bounds_cython": [[306, null]], "normalize": [[337, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[338, null]], "plot_contour_line": [[377, null]], "plot_distribution": [[378, null]], "plot_heatmap": [[379, null]], "plot_map_rgb": [[380, null]], "plot_npred_signal": [[381, null]], "plot_spectrum_datasets_off_regions": [[382, null]], "plot_theta_squared_table": [[383, null]], "polar": [[317, null]], "pydantic": [[412, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[287, null], [289, null]], "read_yaml": [[351, null]], "recursive_merge_dicts": [[352, null]], "region_to_frame": [[346, null]], "regions_to_compound_region": [[347, null]], "requires_data": [[364, null]], "requires_dependency": [[365, null]], "resample_energy_edges": [[149, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[333, null]], "sample_powerlaw": [[339, null]], "sample_sphere": [[340, null]], "sample_sphere_distance": [[341, null]], "sample_times": [[342, null]], "scale_plot_flux": [[288, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[290, null]], "sky_to_fov": [[318, null]], "split_dataset": [[117, null], [120, null]], "standard_scaler": [[311, null]], "standardise_unit": [[370, null]], "stat_profile_ul_scipy": [[291, null]], "stats - Statistics": [[12, null]], "structure_function": [[307, null]], "table_row_to_dict": [[356, null]], "table_standardise_units_copy": [[357, null]], "table_standardise_units_inplace": [[358, null]], "the base class": [[412, "the-base-class"]], "time_ref_from_dict": [[367, null]], "time_ref_to_dict": [[368, null]], "time_relative_to_ref": [[369, null]], "to_yaml": [[353, null]], "trapz_loglog": [[323, null]], "unit_from_fits_image_hdu": [[371, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[319, null]], "visualization - Plotting features": [[14, null]], "weighted_cash_sum_cython": [[308, null]], "workflow": [[11, "gammapy-workflow"]], "write_yaml": [[354, null]], "wstat": [[309, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.MapDatasetWeighted", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.weighted_cash_sum_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.MapDatasetWeighted.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.weighted_cash_sum_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[583, "term-1D-Analysis", true]], "3d analysis": [[583, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[324, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[366, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[373, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[583, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[126, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[128, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[374, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[113, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[360, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[361, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[362, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[327, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[150, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[151, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[152, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[583, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[313, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[583, "term-Cash", true]], "cash() (in module gammapy.stats)": [[295, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[296, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[292, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[359, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[375, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[376, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[343, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[297, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[298, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[299, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[300, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[210, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[211, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[124, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[132, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[212, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[213, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[202, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[249, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[267, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[283, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[284, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[101, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[116, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[301, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[312, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[583, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[172, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[302, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[583, "term-DL3", true]], "dl4": [[583, "term-DL4", true]], "dl5": [[583, "term-DL5", true]], "dl6": [[583, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[335, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[322, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[230, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[583, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[153, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[154, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[155, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[156, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[158, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[583, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[124, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[122, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[236, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[243, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[246, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[266, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[282, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[110, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[110, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[303, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[101, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[214, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[215, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[583, "term-FoV", true]], "fov background": [[583, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[314, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[159, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[173, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[227, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[236, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[243, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[246, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[249, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[250, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[251, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[255, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[260, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[265, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[266, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[267, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[269, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[270, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[277, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[281, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[282, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[205, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[194, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[236, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[243, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[246, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[250, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[255, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[260, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[265, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[266, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[267, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[269, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[270, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[277, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[281, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[282, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[255, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[265, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[269, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[199, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[227, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[251, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[348, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[583, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[315, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[194, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[203, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[109, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[320, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[349, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[195, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[336, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[121, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[304, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[305, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[583, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[320, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[310, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[583, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[195, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[196, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[197, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[355, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[320, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[325, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[326, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[334, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[583, "term-IRF", true]], "irf (class in gammapy.irf)": [[160, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[162, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[161, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[583, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[198, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[321, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[320, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[170, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[344, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[345, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[350, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[193, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[583, "term-Maker", true]], "maker (class in gammapy.makers)": [[175, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[174, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[199, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[200, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[201, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[202, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[176, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetOnOff", false]], "mapdatasetweighted (class in gammapy.datasets)": [[107, "gammapy.datasets.MapDatasetWeighted", false]], "mappanelplotter (class in gammapy.visualization)": [[372, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[203, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[583, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.message", false]], "met": [[583, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[328, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[329, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[247, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[316, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[363, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[332, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[330, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[306, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[337, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[110, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[109, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[216, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[217, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[218, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[167, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[320, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[338, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[177, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[372, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[377, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[378, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[379, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[380, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[381, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[372, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[382, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[383, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[317, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[331, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[219, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[220, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.projection", false]], "psf": [[583, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[163, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[164, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[165, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[166, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[168, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[101, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[227, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[251, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[289, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[351, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[583, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[169, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[352, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[583, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[179, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[346, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[204, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[205, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[347, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[364, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[365, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[149, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[583, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[181, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[583, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[124, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[132, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[175, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[179, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[180, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[184, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[359, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[333, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[182, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[334, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[334, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[339, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[340, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[341, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[342, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[288, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[324, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[583, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[290, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_lim() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.set_lim", false]], "set_lim() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.set_lim", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[318, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[261, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[262, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[183, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[112, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[117, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[120, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[311, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[370, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[291, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[307, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[356, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[357, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[358, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[101, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[108, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[109, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[175, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[177, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[181, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[274, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[367, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[368, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[369, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[243, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[266, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[281, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[206, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[293, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[213, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[216, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[353, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[323, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[136, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[282, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[371, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[319, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[207, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[208, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[209, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.weight", false]], "weighted_cash_sum_cython() (in module gammapy.stats)": [[308, "gammapy.stats.weighted_cash_sum_cython", false]], "width (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[184, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[215, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[354, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[309, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[294, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FermipyDatasetsReader"], [102, 1, 1, "", "FluxPointsDataset"], [103, 1, 1, "", "MapDataset"], [104, 1, 1, "", "MapDatasetEventSampler"], [105, 1, 1, "", "MapDatasetMetaData"], [106, 1, 1, "", "MapDatasetOnOff"], [107, 1, 1, "", "MapDatasetWeighted"], [108, 1, 1, "", "OGIPDatasetReader"], [109, 1, 1, "", "OGIPDatasetWriter"], [110, 1, 1, "", "ObservationEventSampler"], [111, 1, 1, "", "SpectrumDataset"], [112, 1, 1, "", "SpectrumDatasetOnOff"], [113, 4, 1, "", "apply_edisp"], [114, 4, 1, "", "create_empty_map_dataset_from_irfs"], [115, 4, 1, "", "create_map_dataset_from_observation"], [116, 4, 1, "", "create_map_dataset_geoms"], [117, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[101, 3, 1, "", "create_dataset"], [101, 3, 1, "", "read"], [101, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[102, 2, 1, "", "available_stat_type"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "data_shape"], [102, 3, 1, "", "flux_pred"], [102, 3, 1, "", "from_dict"], [102, 2, 1, "", "gti"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_valid"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "plot_fit"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_spectrum"], [102, 3, 1, "", "read"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[103, 2, 1, "", "background"], [103, 2, 1, "", "background_model"], [103, 3, 1, "", "copy"], [103, 2, 1, "", "counts"], [103, 3, 1, "", "create"], [103, 3, 1, "", "cutout"], [103, 2, 1, "", "data_shape"], [103, 3, 1, "", "downsample"], [103, 2, 1, "", "edisp"], [103, 2, 1, "", "energy_range"], [103, 2, 1, "", "energy_range_fit"], [103, 2, 1, "", "energy_range_safe"], [103, 2, 1, "", "energy_range_total"], [103, 2, 1, "", "evaluators"], [103, 2, 1, "", "excess"], [103, 2, 1, "", "exposure"], [103, 3, 1, "", "fake"], [103, 3, 1, "", "from_dict"], [103, 3, 1, "", "from_geoms"], [103, 3, 1, "", "from_hdulist"], [103, 2, 1, "", "geoms"], [103, 2, 1, "", "gti"], [103, 3, 1, "", "info_dict"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_fit"], [103, 2, 1, "", "mask_fit_image"], [103, 2, 1, "", "mask_image"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_safe_edisp"], [103, 2, 1, "", "mask_safe_image"], [103, 2, 1, "", "mask_safe_psf"], [103, 2, 1, "", "meta"], [103, 2, 1, "", "meta_table"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "npred"], [103, 3, 1, "", "npred_background"], [103, 3, 1, "", "npred_signal"], [103, 3, 1, "", "pad"], [103, 3, 1, "", "peek"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_residuals_spatial"], [103, 3, 1, "", "plot_residuals_spectral"], [103, 2, 1, "", "psf"], [103, 3, 1, "", "read"], [103, 3, 1, "", "resample_energy_axis"], [103, 3, 1, "", "reset_data_cache"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "slice_by_energy"], [103, 3, 1, "", "slice_by_idx"], [103, 3, 1, "", "stack"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "to_hdulist"], [103, 3, 1, "", "to_image"], [103, 3, 1, "", "to_masked"], [103, 3, 1, "", "to_region_map_dataset"], [103, 3, 1, "", "to_spectrum_dataset"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[104, 3, 1, "", "event_det_coords"], [104, 3, 1, "", "event_list_meta"], [104, 3, 1, "", "run"], [104, 3, 1, "", "sample_background"], [104, 3, 1, "", "sample_edisp"], [104, 3, 1, "", "sample_psf"], [104, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[105, 3, 1, "", "construct"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "dict"], [105, 3, 1, "", "from_header"], [105, 3, 1, "", "from_orm"], [105, 3, 1, "", "json"], [105, 2, 1, "", "model_computed_fields"], [105, 2, 1, "", "model_config"], [105, 3, 1, "", "model_construct"], [105, 3, 1, "", "model_copy"], [105, 3, 1, "", "model_dump"], [105, 3, 1, "", "model_dump_json"], [105, 2, 1, "", "model_extra"], [105, 2, 1, "", "model_fields"], [105, 2, 1, "", "model_fields_set"], [105, 3, 1, "", "model_json_schema"], [105, 3, 1, "", "model_parametrized_name"], [105, 3, 1, "", "model_post_init"], [105, 3, 1, "", "model_rebuild"], [105, 3, 1, "", "model_validate"], [105, 3, 1, "", "model_validate_json"], [105, 3, 1, "", "model_validate_strings"], [105, 3, 1, "", "parse_file"], [105, 3, 1, "", "parse_obj"], [105, 3, 1, "", "parse_raw"], [105, 3, 1, "", "schema"], [105, 3, 1, "", "schema_json"], [105, 3, 1, "", "stack"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_header"], [105, 3, 1, "", "to_yaml"], [105, 3, 1, "", "update_forward_refs"], [105, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[106, 2, 1, "", "alpha"], [106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 3, 1, "", "from_map_dataset"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_off"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_map_dataset"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetWeighted": [[107, 2, 1, "", "background"], [107, 2, 1, "", "background_model"], [107, 3, 1, "", "copy"], [107, 2, 1, "", "counts"], [107, 3, 1, "", "create"], [107, 3, 1, "", "cutout"], [107, 2, 1, "", "data_shape"], [107, 3, 1, "", "downsample"], [107, 2, 1, "", "edisp"], [107, 2, 1, "", "energy_range"], [107, 2, 1, "", "energy_range_fit"], [107, 2, 1, "", "energy_range_safe"], [107, 2, 1, "", "energy_range_total"], [107, 2, 1, "", "evaluators"], [107, 2, 1, "", "excess"], [107, 2, 1, "", "exposure"], [107, 3, 1, "", "fake"], [107, 3, 1, "", "from_dict"], [107, 3, 1, "", "from_geoms"], [107, 3, 1, "", "from_hdulist"], [107, 2, 1, "", "geoms"], [107, 2, 1, "", "gti"], [107, 3, 1, "", "info_dict"], [107, 2, 1, "", "mask"], [107, 2, 1, "", "mask_fit"], [107, 2, 1, "", "mask_fit_image"], [107, 2, 1, "", "mask_image"], [107, 2, 1, "", "mask_safe"], [107, 2, 1, "", "mask_safe_edisp"], [107, 2, 1, "", "mask_safe_image"], [107, 2, 1, "", "mask_safe_psf"], [107, 2, 1, "", "meta"], [107, 2, 1, "", "meta_table"], [107, 2, 1, "", "models"], [107, 2, 1, "", "name"], [107, 3, 1, "", "npred"], [107, 3, 1, "", "npred_background"], [107, 3, 1, "", "npred_signal"], [107, 3, 1, "", "pad"], [107, 3, 1, "", "peek"], [107, 3, 1, "", "plot_residuals"], [107, 3, 1, "", "plot_residuals_spatial"], [107, 3, 1, "", "plot_residuals_spectral"], [107, 2, 1, "", "psf"], [107, 3, 1, "", "read"], [107, 3, 1, "", "resample_energy_axis"], [107, 3, 1, "", "reset_data_cache"], [107, 3, 1, "", "residuals"], [107, 3, 1, "", "slice_by_energy"], [107, 3, 1, "", "slice_by_idx"], [107, 3, 1, "", "stack"], [107, 3, 1, "", "stat_array"], [107, 3, 1, "", "stat_sum"], [107, 2, 1, "", "stat_type"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_dict"], [107, 3, 1, "", "to_hdulist"], [107, 3, 1, "", "to_image"], [107, 3, 1, "", "to_masked"], [107, 3, 1, "", "to_region_map_dataset"], [107, 3, 1, "", "to_spectrum_dataset"], [107, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_valid_path"], [108, 3, 1, "", "read"], [108, 3, 1, "", "read_arf"], [108, 3, 1, "", "read_bkg"], [108, 3, 1, "", "read_pha"], [108, 3, 1, "", "read_rmf"], [108, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[109, 3, 1, "", "get_filenames"], [109, 3, 1, "", "get_ogip_meta"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_counts_hdulist"], [109, 3, 1, "", "write"], [109, 3, 1, "", "write_arf"], [109, 3, 1, "", "write_bkg"], [109, 3, 1, "", "write_pha"], [109, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[110, 3, 1, "", "event_det_coords"], [110, 3, 1, "", "event_list_meta"], [110, 3, 1, "", "run"], [110, 3, 1, "", "sample_background"], [110, 3, 1, "", "sample_edisp"], [110, 3, 1, "", "sample_psf"], [110, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[112, 2, 1, "", "alpha"], [112, 2, 1, "", "background"], [112, 2, 1, "", "background_model"], [112, 3, 1, "", "copy"], [112, 2, 1, "", "counts"], [112, 3, 1, "", "create"], [112, 3, 1, "", "cutout"], [112, 2, 1, "", "data_shape"], [112, 3, 1, "", "downsample"], [112, 2, 1, "", "edisp"], [112, 2, 1, "", "energy_range"], [112, 2, 1, "", "energy_range_fit"], [112, 2, 1, "", "energy_range_safe"], [112, 2, 1, "", "energy_range_total"], [112, 2, 1, "", "evaluators"], [112, 2, 1, "", "excess"], [112, 2, 1, "", "exposure"], [112, 3, 1, "", "fake"], [112, 3, 1, "", "from_dict"], [112, 3, 1, "", "from_geoms"], [112, 3, 1, "", "from_hdulist"], [112, 3, 1, "", "from_map_dataset"], [112, 3, 1, "", "from_spectrum_dataset"], [112, 2, 1, "", "geoms"], [112, 2, 1, "", "gti"], [112, 3, 1, "", "info_dict"], [112, 2, 1, "", "mask"], [112, 2, 1, "", "mask_fit"], [112, 2, 1, "", "mask_fit_image"], [112, 2, 1, "", "mask_image"], [112, 2, 1, "", "mask_safe"], [112, 2, 1, "", "mask_safe_edisp"], [112, 2, 1, "", "mask_safe_image"], [112, 2, 1, "", "mask_safe_psf"], [112, 2, 1, "", "meta"], [112, 2, 1, "", "meta_table"], [112, 2, 1, "", "models"], [112, 2, 1, "", "name"], [112, 3, 1, "", "npred"], [112, 3, 1, "", "npred_background"], [112, 3, 1, "", "npred_off"], [112, 3, 1, "", "npred_signal"], [112, 3, 1, "", "pad"], [112, 3, 1, "", "peek"], [112, 3, 1, "", "plot_counts"], [112, 3, 1, "", "plot_excess"], [112, 3, 1, "", "plot_fit"], [112, 3, 1, "", "plot_masks"], [112, 3, 1, "", "plot_residuals"], [112, 3, 1, "", "plot_residuals_spatial"], [112, 3, 1, "", "plot_residuals_spectral"], [112, 2, 1, "", "psf"], [112, 3, 1, "", "read"], [112, 3, 1, "", "resample_energy_axis"], [112, 3, 1, "", "reset_data_cache"], [112, 3, 1, "", "residuals"], [112, 3, 1, "", "slice_by_energy"], [112, 3, 1, "", "slice_by_idx"], [112, 3, 1, "", "stack"], [112, 3, 1, "", "stat_array"], [112, 3, 1, "", "stat_sum"], [112, 2, 1, "", "stat_type"], [112, 2, 1, "", "tag"], [112, 3, 1, "", "to_dict"], [112, 3, 1, "", "to_hdulist"], [112, 3, 1, "", "to_image"], [112, 3, 1, "", "to_map_dataset"], [112, 3, 1, "", "to_masked"], [112, 3, 1, "", "to_region_map_dataset"], [112, 3, 1, "", "to_spectrum_dataset"], [112, 3, 1, "", "write"]], "gammapy.datasets.utils": [[118, 4, 1, "", "apply_edisp"], [119, 4, 1, "", "create_map_dataset_from_dl4"], [120, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[121, 1, 1, "", "ASmoothMapEstimator"], [122, 5, 1, "", "ESTIMATOR_REGISTRY"], [123, 1, 1, "", "EnergyDependentMorphologyEstimator"], [124, 1, 1, "", "Estimator"], [125, 1, 1, "", "ExcessMapEstimator"], [126, 1, 1, "", "FluxMaps"], [127, 1, 1, "", "FluxMetaData"], [128, 1, 1, "", "FluxPoints"], [129, 1, 1, "", "FluxPointsEstimator"], [130, 1, 1, "", "FluxProfileEstimator"], [131, 1, 1, "", "ImageProfile"], [132, 1, 1, "", "ImageProfileEstimator"], [133, 1, 1, "", "LightCurveEstimator"], [134, 1, 1, "", "ParameterEstimator"], [135, 1, 1, "", "SensitivityEstimator"], [136, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "estimate_maps"], [121, 3, 1, "", "get_kernels"], [121, 3, 1, "", "get_scales"], [121, 3, 1, "", "run"], [121, 3, 1, "", "selection_all"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "estimate_energy_dependence"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "correlation_radius"], [125, 3, 1, "", "estimate_excess_map"], [125, 3, 1, "", "estimate_exposure_reco_energy"], [125, 3, 1, "", "estimate_kernel"], [125, 3, 1, "", "estimate_mask_default"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[126, 2, 1, "", "acceptance_off"], [126, 2, 1, "", "acceptance_on"], [126, 3, 1, "", "all_quantities"], [126, 2, 1, "", "alpha"], [126, 2, 1, "", "available_quantities"], [126, 3, 1, "", "copy"], [126, 2, 1, "", "counts"], [126, 2, 1, "", "dnde"], [126, 2, 1, "", "dnde_err"], [126, 2, 1, "", "dnde_errn"], [126, 2, 1, "", "dnde_errp"], [126, 2, 1, "", "dnde_ref"], [126, 2, 1, "", "dnde_scan_values"], [126, 2, 1, "", "dnde_ul"], [126, 2, 1, "", "e2dnde"], [126, 2, 1, "", "e2dnde_err"], [126, 2, 1, "", "e2dnde_errn"], [126, 2, 1, "", "e2dnde_errp"], [126, 2, 1, "", "e2dnde_ref"], [126, 2, 1, "", "e2dnde_ul"], [126, 2, 1, "", "eflux"], [126, 2, 1, "", "eflux_err"], [126, 2, 1, "", "eflux_errn"], [126, 2, 1, "", "eflux_errp"], [126, 2, 1, "", "eflux_ref"], [126, 2, 1, "", "eflux_ul"], [126, 2, 1, "", "energy_axis"], [126, 2, 1, "", "energy_max"], [126, 2, 1, "", "energy_min"], [126, 2, 1, "", "energy_ref"], [126, 2, 1, "", "filter_success_nan"], [126, 2, 1, "", "flux"], [126, 2, 1, "", "flux_err"], [126, 2, 1, "", "flux_errn"], [126, 2, 1, "", "flux_errp"], [126, 2, 1, "", "flux_ref"], [126, 2, 1, "", "flux_sensitivity"], [126, 2, 1, "", "flux_ul"], [126, 3, 1, "", "from_hdulist"], [126, 3, 1, "", "from_maps"], [126, 3, 1, "", "from_stack"], [126, 2, 1, "", "geom"], [126, 3, 1, "", "get_flux_points"], [126, 2, 1, "", "has_any_ts"], [126, 2, 1, "", "has_stat_profiles"], [126, 2, 1, "", "has_success"], [126, 2, 1, "", "has_ul"], [126, 2, 1, "", "is_convertible_to_flux_sed_type"], [126, 2, 1, "", "is_ul"], [126, 3, 1, "", "iter_by_axis"], [126, 2, 1, "", "n_dof"], [126, 2, 1, "", "n_sigma"], [126, 2, 1, "", "n_sigma_ul"], [126, 2, 1, "", "niter"], [126, 2, 1, "", "norm"], [126, 2, 1, "", "norm_err"], [126, 2, 1, "", "norm_errn"], [126, 2, 1, "", "norm_errp"], [126, 2, 1, "", "norm_sensitivity"], [126, 2, 1, "", "norm_ul"], [126, 2, 1, "", "npred"], [126, 2, 1, "", "npred_background"], [126, 2, 1, "", "npred_excess"], [126, 2, 1, "", "npred_excess_err"], [126, 2, 1, "", "npred_excess_errn"], [126, 2, 1, "", "npred_excess_errp"], [126, 2, 1, "", "npred_excess_ref"], [126, 2, 1, "", "npred_excess_ul"], [126, 3, 1, "", "read"], [126, 2, 1, "", "reference_model"], [126, 2, 1, "", "reference_model_default"], [126, 2, 1, "", "reference_spectral_model"], [126, 2, 1, "", "sed_type_init"], [126, 2, 1, "", "sed_type_plot_default"], [126, 3, 1, "", "slice_by_coord"], [126, 3, 1, "", "slice_by_energy"], [126, 3, 1, "", "slice_by_idx"], [126, 3, 1, "", "slice_by_time"], [126, 2, 1, "", "sqrt_ts"], [126, 2, 1, "", "sqrt_ts_threshold_ul"], [126, 2, 1, "", "stat"], [126, 2, 1, "", "stat_null"], [126, 2, 1, "", "stat_scan"], [126, 2, 1, "", "success"], [126, 3, 1, "", "to_hdulist"], [126, 3, 1, "", "to_maps"], [126, 2, 1, "", "ts"], [126, 2, 1, "", "ts_scan"], [126, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[127, 3, 1, "", "construct"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "dict"], [127, 3, 1, "", "from_header"], [127, 3, 1, "", "from_orm"], [127, 3, 1, "", "json"], [127, 2, 1, "", "model_computed_fields"], [127, 2, 1, "", "model_config"], [127, 3, 1, "", "model_construct"], [127, 3, 1, "", "model_copy"], [127, 3, 1, "", "model_dump"], [127, 3, 1, "", "model_dump_json"], [127, 2, 1, "", "model_extra"], [127, 2, 1, "", "model_fields"], [127, 2, 1, "", "model_fields_set"], [127, 3, 1, "", "model_json_schema"], [127, 3, 1, "", "model_parametrized_name"], [127, 3, 1, "", "model_post_init"], [127, 3, 1, "", "model_rebuild"], [127, 3, 1, "", "model_validate"], [127, 3, 1, "", "model_validate_json"], [127, 3, 1, "", "model_validate_strings"], [127, 3, 1, "", "parse_file"], [127, 3, 1, "", "parse_obj"], [127, 3, 1, "", "parse_raw"], [127, 3, 1, "", "schema"], [127, 3, 1, "", "schema_json"], [127, 2, 1, "", "tag"], [127, 3, 1, "", "to_header"], [127, 3, 1, "", "to_yaml"], [127, 3, 1, "", "update_forward_refs"], [127, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[128, 2, 1, "", "acceptance_off"], [128, 2, 1, "", "acceptance_on"], [128, 3, 1, "", "all_quantities"], [128, 2, 1, "", "alpha"], [128, 2, 1, "", "available_quantities"], [128, 3, 1, "", "copy"], [128, 2, 1, "", "counts"], [128, 2, 1, "", "dnde"], [128, 2, 1, "", "dnde_err"], [128, 2, 1, "", "dnde_errn"], [128, 2, 1, "", "dnde_errp"], [128, 2, 1, "", "dnde_ref"], [128, 2, 1, "", "dnde_scan_values"], [128, 2, 1, "", "dnde_ul"], [128, 2, 1, "", "e2dnde"], [128, 2, 1, "", "e2dnde_err"], [128, 2, 1, "", "e2dnde_errn"], [128, 2, 1, "", "e2dnde_errp"], [128, 2, 1, "", "e2dnde_ref"], [128, 2, 1, "", "e2dnde_ul"], [128, 2, 1, "", "eflux"], [128, 2, 1, "", "eflux_err"], [128, 2, 1, "", "eflux_errn"], [128, 2, 1, "", "eflux_errp"], [128, 2, 1, "", "eflux_ref"], [128, 2, 1, "", "eflux_ul"], [128, 2, 1, "", "energy_axis"], [128, 2, 1, "", "energy_max"], [128, 2, 1, "", "energy_min"], [128, 2, 1, "", "energy_ref"], [128, 2, 1, "", "filter_success_nan"], [128, 2, 1, "", "flux"], [128, 2, 1, "", "flux_err"], [128, 2, 1, "", "flux_errn"], [128, 2, 1, "", "flux_errp"], [128, 2, 1, "", "flux_ref"], [128, 2, 1, "", "flux_sensitivity"], [128, 2, 1, "", "flux_ul"], [128, 3, 1, "", "from_hdulist"], [128, 3, 1, "", "from_maps"], [128, 3, 1, "", "from_stack"], [128, 3, 1, "", "from_table"], [128, 2, 1, "", "geom"], [128, 3, 1, "", "get_flux_points"], [128, 2, 1, "", "has_any_ts"], [128, 2, 1, "", "has_stat_profiles"], [128, 2, 1, "", "has_success"], [128, 2, 1, "", "has_ul"], [128, 2, 1, "", "is_convertible_to_flux_sed_type"], [128, 2, 1, "", "is_ul"], [128, 3, 1, "", "iter_by_axis"], [128, 2, 1, "", "n_dof"], [128, 2, 1, "", "n_sigma"], [128, 2, 1, "", "n_sigma_ul"], [128, 2, 1, "", "niter"], [128, 2, 1, "", "norm"], [128, 2, 1, "", "norm_err"], [128, 2, 1, "", "norm_errn"], [128, 2, 1, "", "norm_errp"], [128, 2, 1, "", "norm_sensitivity"], [128, 2, 1, "", "norm_ul"], [128, 2, 1, "", "npred"], [128, 2, 1, "", "npred_background"], [128, 2, 1, "", "npred_excess"], [128, 2, 1, "", "npred_excess_err"], [128, 2, 1, "", "npred_excess_errn"], [128, 2, 1, "", "npred_excess_errp"], [128, 2, 1, "", "npred_excess_ref"], [128, 2, 1, "", "npred_excess_ul"], [128, 3, 1, "", "plot"], [128, 3, 1, "", "plot_ts_profiles"], [128, 3, 1, "", "read"], [128, 3, 1, "", "recompute_ul"], [128, 2, 1, "", "reference_model"], [128, 2, 1, "", "reference_model_default"], [128, 2, 1, "", "reference_spectral_model"], [128, 3, 1, "", "resample_axis"], [128, 2, 1, "", "sed_type_init"], [128, 2, 1, "", "sed_type_plot_default"], [128, 3, 1, "", "slice_by_coord"], [128, 3, 1, "", "slice_by_energy"], [128, 3, 1, "", "slice_by_idx"], [128, 3, 1, "", "slice_by_time"], [128, 2, 1, "", "sqrt_ts"], [128, 2, 1, "", "sqrt_ts_threshold_ul"], [128, 2, 1, "", "stat"], [128, 2, 1, "", "stat_null"], [128, 2, 1, "", "stat_scan"], [128, 2, 1, "", "success"], [128, 3, 1, "", "to_hdulist"], [128, 3, 1, "", "to_maps"], [128, 3, 1, "", "to_table"], [128, 2, 1, "", "ts"], [128, 2, 1, "", "ts_scan"], [128, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_flux_point"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_npred_excess"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "get_scale_model"], [130, 2, 1, "", "n_jobs"], [130, 2, 1, "", "parallel_backend"], [130, 2, 1, "", "projected_distance_axis"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[131, 3, 1, "", "normalize"], [131, 3, 1, "", "peek"], [131, 3, 1, "", "plot"], [131, 3, 1, "", "plot_err"], [131, 2, 1, "", "profile"], [131, 2, 1, "", "profile_err"], [131, 3, 1, "", "smooth"], [131, 2, 1, "", "x_max"], [131, 2, 1, "", "x_min"], [131, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_flux_point"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_npred_excess"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_time_bin_flux"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "expand_map"], [133, 3, 1, "", "get_scale_model"], [133, 2, 1, "", "n_jobs"], [133, 2, 1, "", "parallel_backend"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[134, 2, 1, "", "config_parameters"], [134, 3, 1, "", "copy"], [134, 3, 1, "", "estimate_best_fit"], [134, 3, 1, "", "estimate_counts"], [134, 3, 1, "", "estimate_errn_errp"], [134, 3, 1, "", "estimate_npred"], [134, 3, 1, "", "estimate_scan"], [134, 3, 1, "", "estimate_ts"], [134, 3, 1, "", "estimate_ul"], [134, 3, 1, "", "run"], [134, 2, 1, "", "selection_optional"], [134, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[135, 2, 1, "", "config_parameters"], [135, 3, 1, "", "copy"], [135, 3, 1, "", "estimate_min_e2dnde"], [135, 3, 1, "", "estimate_min_excess"], [135, 3, 1, "", "run"], [135, 2, 1, "", "selection_optional"], [135, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[136, 2, 1, "", "config_parameters"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "estimate_fit_input_maps"], [136, 3, 1, "", "estimate_flux_default"], [136, 3, 1, "", "estimate_flux_map"], [136, 3, 1, "", "estimate_kernel"], [136, 3, 1, "", "estimate_mask_default"], [136, 3, 1, "", "estimate_pad_width"], [136, 2, 1, "", "n_jobs"], [136, 2, 1, "", "parallel_backend"], [136, 3, 1, "", "run"], [136, 2, 1, "", "selection_all"], [136, 2, 1, "", "selection_optional"], [136, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[137, 4, 1, "", "combine_flux_maps"], [138, 4, 1, "", "combine_significance_maps"], [139, 4, 1, "", "compute_lightcurve_discrete_correlation"], [140, 4, 1, "", "compute_lightcurve_doublingtime"], [141, 4, 1, "", "compute_lightcurve_fpp"], [142, 4, 1, "", "compute_lightcurve_fvar"], [143, 4, 1, "", "estimate_exposure_reco_energy"], [144, 4, 1, "", "find_peaks"], [145, 4, 1, "", "find_peaks_in_flux_map"], [146, 4, 1, "", "get_combined_flux_maps"], [147, 4, 1, "", "get_combined_significance_maps"], [148, 4, 1, "", "get_rebinned_axis"], [149, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[150, 1, 1, "", "Background2D"], [151, 1, 1, "", "Background3D"], [152, 1, 1, "", "BackgroundIRF"], [153, 1, 1, "", "EDispKernel"], [154, 1, 1, "", "EDispKernelMap"], [155, 1, 1, "", "EDispMap"], [156, 1, 1, "", "EffectiveAreaTable2D"], [157, 1, 1, "", "EnergyDependentMultiGaussPSF"], [158, 1, 1, "", "EnergyDispersion2D"], [159, 1, 1, "", "FoVAlignment"], [160, 1, 1, "", "IRF"], [161, 1, 1, "", "IRFMap"], [162, 5, 1, "", "IRF_REGISTRY"], [163, 1, 1, "", "PSF3D"], [164, 1, 1, "", "PSFKernel"], [165, 1, 1, "", "PSFKing"], [166, 1, 1, "", "PSFMap"], [167, 1, 1, "", "ParametricPSF"], [168, 1, 1, "", "RadMax2D"], [169, 1, 1, "", "RecoPSFMap"], [170, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot"], [150, 3, 1, "", "plot_at_energy"], [150, 3, 1, "", "plot_energy_dependence"], [150, 3, 1, "", "plot_offset_dependence"], [150, 3, 1, "", "plot_spectrum"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_3d"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_at_energy"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_2d"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_diagonal_response"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 3, 1, "", "get_bias"], [153, 3, 1, "", "get_bias_energy"], [153, 3, 1, "", "get_mean"], [153, 3, 1, "", "get_resolution"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "pdf_in_safe_range"], [153, 2, 1, "", "pdf_matrix"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_bias"], [153, 3, 1, "", "plot_matrix"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[154, 3, 1, "", "copy"], [154, 3, 1, "", "cutout"], [154, 3, 1, "", "downsample"], [154, 2, 1, "", "edisp_map"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_edisp_kernel"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_geom"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "get_edisp_kernel"], [154, 2, 1, "", "has_single_spatial_bin"], [154, 2, 1, "", "mask_safe_image"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "resample_energy_axis"], [154, 3, 1, "", "slice_by_idx"], [154, 3, 1, "", "stack"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_image"], [154, 3, 1, "", "to_region_nd_map"], [154, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "edisp_map"], [155, 3, 1, "", "from_diagonal_response"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_edisp_kernel"], [155, 2, 1, "", "has_single_spatial_bin"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "sample_coord"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_edisp_kernel_map"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 2, 1, "", "default_unit"], [156, 3, 1, "", "evaluate"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_parametrization"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot"], [156, 3, 1, "", "plot_energy_dependence"], [156, 3, 1, "", "plot_offset_dependence"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 3, 1, "", "evaluate_containment"], [157, 3, 1, "", "evaluate_direct"], [157, 3, 1, "", "evaluate_parameters"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "info"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 2, 1, "", "required_parameters"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_psf3d"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 2, 1, "", "default_unit"], [158, 3, 1, "", "evaluate"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_gauss"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_bias"], [158, 3, 1, "", "plot_migration"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_edisp_kernel"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[159, 2, 1, "", "ALTAZ"], [159, 2, 1, "", "RADEC"], [159, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[161, 3, 1, "", "copy"], [161, 3, 1, "", "cutout"], [161, 3, 1, "", "downsample"], [161, 3, 1, "", "from_hdulist"], [161, 2, 1, "", "has_single_spatial_bin"], [161, 2, 1, "", "mask_safe_image"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "stack"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_region_nd_map"], [161, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[163, 2, 1, "", "axes"], [163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "cumsum"], [163, 2, 1, "", "data"], [163, 2, 1, "", "default_interp_kwargs"], [163, 2, 1, "", "default_unit"], [163, 3, 1, "", "evaluate"], [163, 2, 1, "", "fov_alignment"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "from_table"], [163, 2, 1, "", "has_offset_axis"], [163, 3, 1, "", "info"], [163, 3, 1, "", "integral"], [163, 3, 1, "", "integrate_log_log"], [163, 3, 1, "", "interp_missing_data"], [163, 3, 1, "", "is_allclose"], [163, 2, 1, "", "is_pointlike"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "pad"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "quantity"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 3, 1, "", "slice_by_idx"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_table"], [163, 3, 1, "", "to_table_hdu"], [163, 3, 1, "", "to_unit"], [163, 2, 1, "", "unit"], [163, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[164, 2, 1, "", "data"], [164, 3, 1, "", "from_gauss"], [164, 3, 1, "", "from_spatial_model"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_kernel"], [164, 2, 1, "", "psf_kernel_map"], [164, 3, 1, "", "read"], [164, 3, 1, "", "slice_by_idx"], [164, 3, 1, "", "to_image"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[165, 2, 1, "", "axes"], [165, 3, 1, "", "containment"], [165, 3, 1, "", "containment_radius"], [165, 3, 1, "", "cumsum"], [165, 2, 1, "", "data"], [165, 2, 1, "", "default_interp_kwargs"], [165, 3, 1, "", "evaluate"], [165, 3, 1, "", "evaluate_containment"], [165, 3, 1, "", "evaluate_direct"], [165, 3, 1, "", "evaluate_parameters"], [165, 2, 1, "", "fov_alignment"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "from_table"], [165, 2, 1, "", "has_offset_axis"], [165, 3, 1, "", "info"], [165, 3, 1, "", "integral"], [165, 3, 1, "", "integrate_log_log"], [165, 3, 1, "", "interp_missing_data"], [165, 3, 1, "", "is_allclose"], [165, 2, 1, "", "is_pointlike"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "pad"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_containment_radius"], [165, 3, 1, "", "plot_containment_radius_vs_energy"], [165, 3, 1, "", "plot_psf_vs_rad"], [165, 2, 1, "", "quantity"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 2, 1, "", "required_parameters"], [165, 3, 1, "", "slice_by_idx"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_psf3d"], [165, 3, 1, "", "to_table"], [165, 3, 1, "", "to_table_hdu"], [165, 3, 1, "", "to_unit"], [165, 2, 1, "", "unit"], [165, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "containment_radius_map"], [166, 3, 1, "", "copy"], [166, 3, 1, "", "cutout"], [166, 3, 1, "", "downsample"], [166, 2, 1, "", "energy_name"], [166, 3, 1, "", "from_gauss"], [166, 3, 1, "", "from_geom"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "get_psf_kernel"], [166, 2, 1, "", "has_single_spatial_bin"], [166, 2, 1, "", "mask_safe_image"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "psf_map"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 3, 1, "", "sample_coord"], [166, 3, 1, "", "slice_by_idx"], [166, 3, 1, "", "stack"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_image"], [166, 3, 1, "", "to_region_nd_map"], [166, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[167, 2, 1, "", "axes"], [167, 3, 1, "", "containment"], [167, 3, 1, "", "containment_radius"], [167, 3, 1, "", "cumsum"], [167, 2, 1, "", "data"], [167, 2, 1, "", "default_interp_kwargs"], [167, 3, 1, "", "evaluate"], [167, 3, 1, "", "evaluate_containment"], [167, 3, 1, "", "evaluate_direct"], [167, 3, 1, "", "evaluate_parameters"], [167, 2, 1, "", "fov_alignment"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "from_table"], [167, 2, 1, "", "has_offset_axis"], [167, 3, 1, "", "info"], [167, 3, 1, "", "integral"], [167, 3, 1, "", "integrate_log_log"], [167, 3, 1, "", "interp_missing_data"], [167, 3, 1, "", "is_allclose"], [167, 2, 1, "", "is_pointlike"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "pad"], [167, 3, 1, "", "peek"], [167, 3, 1, "", "plot_containment_radius"], [167, 3, 1, "", "plot_containment_radius_vs_energy"], [167, 3, 1, "", "plot_psf_vs_rad"], [167, 2, 1, "", "quantity"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 2, 1, "", "required_parameters"], [167, 3, 1, "", "slice_by_idx"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_psf3d"], [167, 3, 1, "", "to_table"], [167, 3, 1, "", "to_table_hdu"], [167, 3, 1, "", "to_unit"], [167, 2, 1, "", "unit"], [167, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[168, 2, 1, "", "axes"], [168, 3, 1, "", "cumsum"], [168, 2, 1, "", "data"], [168, 2, 1, "", "default_interp_kwargs"], [168, 2, 1, "", "default_unit"], [168, 3, 1, "", "evaluate"], [168, 2, 1, "", "fov_alignment"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "from_irf"], [168, 3, 1, "", "from_table"], [168, 2, 1, "", "has_offset_axis"], [168, 3, 1, "", "integral"], [168, 3, 1, "", "integrate_log_log"], [168, 3, 1, "", "interp_missing_data"], [168, 3, 1, "", "is_allclose"], [168, 2, 1, "", "is_fixed_rad_max"], [168, 2, 1, "", "is_pointlike"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "pad"], [168, 3, 1, "", "plot_rad_max_vs_energy"], [168, 2, 1, "", "quantity"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 3, 1, "", "slice_by_idx"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_table"], [168, 3, 1, "", "to_table_hdu"], [168, 3, 1, "", "to_unit"], [168, 2, 1, "", "unit"], [168, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[169, 3, 1, "", "containment"], [169, 3, 1, "", "containment_radius"], [169, 3, 1, "", "containment_radius_map"], [169, 3, 1, "", "copy"], [169, 3, 1, "", "cutout"], [169, 3, 1, "", "downsample"], [169, 2, 1, "", "energy_name"], [169, 3, 1, "", "from_gauss"], [169, 3, 1, "", "from_geom"], [169, 3, 1, "", "from_hdulist"], [169, 3, 1, "", "get_psf_kernel"], [169, 2, 1, "", "has_single_spatial_bin"], [169, 2, 1, "", "mask_safe_image"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "peek"], [169, 3, 1, "", "plot_containment_radius_vs_energy"], [169, 3, 1, "", "plot_psf_vs_rad"], [169, 2, 1, "", "psf_map"], [169, 3, 1, "", "read"], [169, 2, 1, "", "required_axes"], [169, 3, 1, "", "sample_coord"], [169, 3, 1, "", "slice_by_idx"], [169, 3, 1, "", "stack"], [169, 2, 1, "", "tag"], [169, 3, 1, "", "to_hdulist"], [169, 3, 1, "", "to_image"], [169, 3, 1, "", "to_region_nd_map"], [169, 3, 1, "", "write"]], "gammapy.makers": [[171, 1, 1, "", "AdaptiveRingBackgroundMaker"], [172, 1, 1, "", "DatasetsMaker"], [173, 1, 1, "", "FoVBackgroundMaker"], [174, 5, 1, "", "MAKER_REGISTRY"], [175, 1, 1, "", "Maker"], [176, 1, 1, "", "MapDatasetMaker"], [177, 1, 1, "", "PhaseBackgroundMaker"], [178, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [179, 1, 1, "", "ReflectedRegionsFinder"], [180, 1, 1, "", "RegionsFinder"], [181, 1, 1, "", "RingBackgroundMaker"], [182, 1, 1, "", "SafeMaskMaker"], [183, 1, 1, "", "SpectrumDatasetMaker"], [184, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[171, 3, 1, "", "kernels"], [171, 3, 1, "", "make_cubes"], [171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[172, 3, 1, "", "callback"], [172, 3, 1, "", "error_callback"], [172, 3, 1, "", "make_dataset"], [172, 2, 1, "", "n_jobs"], [172, 2, 1, "", "offset_max"], [172, 2, 1, "", "parallel_backend"], [172, 3, 1, "", "run"], [172, 2, 1, "", "safe_mask_maker"], [172, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[173, 2, 1, "", "available_methods"], [173, 3, 1, "", "make_background_fit"], [173, 3, 1, "", "make_background_scale"], [173, 3, 1, "", "make_default_fov_background_model"], [173, 3, 1, "", "make_exclusion_mask"], [173, 2, 1, "", "method"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[176, 2, 1, "", "available_selection"], [176, 3, 1, "", "make_background"], [176, 3, 1, "", "make_counts"], [176, 3, 1, "", "make_edisp"], [176, 3, 1, "", "make_edisp_kernel"], [176, 3, 1, "", "make_exposure"], [176, 3, 1, "", "make_exposure_irf"], [176, 3, 1, "", "make_meta_table"], [176, 3, 1, "", "make_psf"], [176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[177, 3, 1, "", "make_counts"], [177, 3, 1, "", "make_counts_off"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[178, 3, 1, "", "make_counts_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[179, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[181, 3, 1, "", "kernel"], [181, 3, 1, "", "make_maps_off"], [181, 3, 1, "", "run"], [181, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[182, 2, 1, "", "available_methods"], [182, 3, 1, "", "make_mask_bkg_invalid"], [182, 3, 1, "", "make_mask_energy_aeff_default"], [182, 3, 1, "", "make_mask_energy_aeff_max"], [182, 3, 1, "", "make_mask_energy_bkg_peak"], [182, 3, 1, "", "make_mask_energy_edisp_bias"], [182, 3, 1, "", "make_mask_offset_max"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[183, 2, 1, "", "available_selection"], [183, 3, 1, "", "make_background"], [183, 3, 1, "", "make_counts"], [183, 3, 1, "", "make_edisp"], [183, 3, 1, "", "make_edisp_kernel"], [183, 3, 1, "", "make_exposure"], [183, 3, 1, "", "make_exposure_irf"], [183, 3, 1, "", "make_meta_table"], [183, 3, 1, "", "make_psf"], [183, 3, 1, "", "run"], [183, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[184, 3, 1, "", "run"]], "gammapy.makers.utils": [[185, 4, 1, "", "make_counts_rad_max"], [186, 4, 1, "", "make_edisp_kernel_map"], [187, 4, 1, "", "make_edisp_map"], [188, 4, 1, "", "make_effective_livetime_map"], [189, 4, 1, "", "make_map_background_irf"], [190, 4, 1, "", "make_map_exposure_true_energy"], [191, 4, 1, "", "make_observation_time_map"], [192, 4, 1, "", "make_psf_map"], [193, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[194, 1, 1, "", "Geom"], [195, 1, 1, "", "HpxGeom"], [196, 1, 1, "", "HpxMap"], [197, 1, 1, "", "HpxNDMap"], [198, 1, 1, "", "LabelMapAxis"], [199, 1, 1, "", "Map"], [200, 1, 1, "", "MapAxes"], [201, 1, 1, "", "MapAxis"], [202, 1, 1, "", "MapCoord"], [203, 1, 1, "", "Maps"], [204, 1, 1, "", "RegionGeom"], [205, 1, 1, "", "RegionNDMap"], [206, 1, 1, "", "TimeMapAxis"], [207, 1, 1, "", "WcsGeom"], [208, 1, 1, "", "WcsMap"], [209, 1, 1, "", "WcsNDMap"], [210, 4, 1, "", "containment_radius"], [211, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create_mask"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 2, 1, "", "has_energy_axis"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_image"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "axes"], [195, 2, 1, "", "axes_names"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "create_mask"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cutout"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 2, 1, "", "data_shape_axes"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 2, 1, "", "frame"], [195, 3, 1, "", "from_hdu"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_header"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 3, 1, "", "get_index_list"], [195, 3, 1, "", "global_to_local"], [195, 2, 1, "", "has_energy_axis"], [195, 3, 1, "", "interp_weights"], [195, 2, 1, "", "ipix"], [195, 3, 1, "", "is_aligned"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_hpx"], [195, 2, 1, "", "is_image"], [195, 2, 1, "", "is_region"], [195, 2, 1, "", "is_regular"], [195, 3, 1, "", "local_to_global"], [195, 2, 1, "", "ndim"], [195, 2, 1, "", "nest"], [195, 2, 1, "", "npix"], [195, 2, 1, "", "npix_max"], [195, 2, 1, "", "nside"], [195, 2, 1, "", "order"], [195, 2, 1, "", "ordering"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 2, 1, "", "pixel_scales"], [195, 2, 1, "", "projection"], [195, 2, 1, "", "region"], [195, 3, 1, "", "region_mask"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "separation"], [195, 2, 1, "", "shape_axes"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_binsz"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_header"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "to_nside"], [195, 3, 1, "", "to_swapped"], [195, 3, 1, "", "to_wcs_geom"], [195, 3, 1, "", "to_wcs_tiles"], [195, 3, 1, "", "upsample"], [195, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_unit"], [196, 3, 1, "", "to_wcs"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "convolve"], [197, 3, 1, "", "convolve_full"], [197, 3, 1, "", "convolve_wcs"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 3, 1, "", "cutout"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdu"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_wcs_tiles"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 3, 1, "", "plot_mask"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "smooth"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "stack"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_nside"], [197, 3, 1, "", "to_region_nd_map"], [197, 3, 1, "", "to_swapped"], [197, 3, 1, "", "to_unit"], [197, 3, 1, "", "to_wcs"], [197, 3, 1, "", "to_wcs_tiles"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "center"], [198, 3, 1, "", "concatenate"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_header"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[199, 3, 1, "", "coadd"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cumsum"], [199, 2, 1, "", "data"], [199, 3, 1, "", "dot"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "fill_by_coord"], [199, 3, 1, "", "fill_by_idx"], [199, 3, 1, "", "fill_by_pix"], [199, 3, 1, "", "fill_events"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_stack"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get_by_coord"], [199, 3, 1, "", "get_by_idx"], [199, 3, 1, "", "get_by_pix"], [199, 3, 1, "", "get_image_by_coord"], [199, 3, 1, "", "get_image_by_idx"], [199, 3, 1, "", "get_image_by_pix"], [199, 3, 1, "", "get_spectrum"], [199, 3, 1, "", "integral"], [199, 3, 1, "", "interp_by_coord"], [199, 3, 1, "", "interp_by_pix"], [199, 3, 1, "", "interp_to_geom"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_mask"], [199, 3, 1, "", "iter_by_axis"], [199, 3, 1, "", "iter_by_image"], [199, 3, 1, "", "iter_by_image_data"], [199, 3, 1, "", "iter_by_image_index"], [199, 3, 1, "", "mask_nearest_position"], [199, 2, 1, "", "meta"], [199, 3, 1, "", "normalize"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "plot_grid"], [199, 3, 1, "", "plot_interactive"], [199, 2, 1, "", "quantity"], [199, 3, 1, "", "read"], [199, 3, 1, "", "reduce"], [199, 3, 1, "", "reduce_over_axes"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "reorder_axes"], [199, 3, 1, "", "reproject_by_image"], [199, 3, 1, "", "reproject_to_geom"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "sample_coord"], [199, 3, 1, "", "set_by_coord"], [199, 3, 1, "", "set_by_idx"], [199, 3, 1, "", "set_by_pix"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "split_by_axis"], [199, 3, 1, "", "sum_over_axes"], [199, 2, 1, "", "tag"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_unit"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"], [199, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[200, 3, 1, "", "assert_names"], [200, 3, 1, "", "bin_volume"], [200, 2, 1, "", "center_coord"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "count"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "drop"], [200, 3, 1, "", "from_default"], [200, 3, 1, "", "from_table"], [200, 3, 1, "", "from_table_hdu"], [200, 3, 1, "", "get_coord"], [200, 3, 1, "", "index"], [200, 3, 1, "", "index_data"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_flat"], [200, 2, 1, "", "is_unidimensional"], [200, 2, 1, "", "iter_with_reshape"], [200, 2, 1, "", "names"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 2, 1, "", "primary_axis"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "replace"], [200, 3, 1, "", "resample"], [200, 2, 1, "", "reverse"], [200, 2, 1, "", "shape"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_header"], [200, 3, 1, "", "to_table"], [200, 3, 1, "", "to_table_hdu"], [200, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[201, 2, 1, "", "as_plot_center"], [201, 2, 1, "", "as_plot_edges"], [201, 2, 1, "", "as_plot_labels"], [201, 2, 1, "", "as_plot_scale"], [201, 2, 1, "", "as_plot_xerr"], [201, 3, 1, "", "assert_name"], [201, 2, 1, "", "bin_width"], [201, 2, 1, "", "bounds"], [201, 2, 1, "", "center"], [201, 3, 1, "", "concatenate"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "downsample"], [201, 2, 1, "", "edges"], [201, 2, 1, "", "edges_max"], [201, 2, 1, "", "edges_min"], [201, 3, 1, "", "format_plot_xaxis"], [201, 3, 1, "", "format_plot_yaxis"], [201, 3, 1, "", "from_bounds"], [201, 3, 1, "", "from_edges"], [201, 3, 1, "", "from_energy_bounds"], [201, 3, 1, "", "from_energy_edges"], [201, 3, 1, "", "from_nodes"], [201, 3, 1, "", "from_stack"], [201, 3, 1, "", "from_table"], [201, 3, 1, "", "from_table_hdu"], [201, 3, 1, "", "group_table"], [201, 2, 1, "", "interp"], [201, 3, 1, "", "is_aligned"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_energy_axis"], [201, 2, 1, "", "iter_by_edges"], [201, 2, 1, "", "name"], [201, 2, 1, "", "nbin"], [201, 2, 1, "", "nbin_per_decade"], [201, 2, 1, "", "node_type"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 3, 1, "", "rename"], [201, 3, 1, "", "round"], [201, 3, 1, "", "slice"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_header"], [201, 3, 1, "", "to_node_type"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_table_hdu"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 2, 1, "", "use_center_as_plot_labels"], [201, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[202, 3, 1, "", "apply_mask"], [202, 2, 1, "", "axis_names"], [202, 2, 1, "", "broadcasted"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 2, 1, "", "flat"], [202, 2, 1, "", "frame"], [202, 2, 1, "", "lat"], [202, 2, 1, "", "lon"], [202, 2, 1, "", "match_by_name"], [202, 2, 1, "", "ndim"], [202, 2, 1, "", "phi"], [202, 2, 1, "", "shape"], [202, 2, 1, "", "size"], [202, 2, 1, "", "skycoord"], [202, 2, 1, "", "theta"], [202, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[203, 3, 1, "", "clear"], [203, 3, 1, "", "from_geom"], [203, 3, 1, "", "from_hdulist"], [203, 2, 1, "", "geom"], [203, 3, 1, "", "get"], [203, 3, 1, "", "items"], [203, 3, 1, "", "keys"], [203, 3, 1, "", "pop"], [203, 3, 1, "", "popitem"], [203, 3, 1, "", "read"], [203, 3, 1, "", "setdefault"], [203, 3, 1, "", "to_hdulist"], [203, 3, 1, "", "update"], [203, 3, 1, "", "values"], [203, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[204, 2, 1, "", "as_energy_true"], [204, 2, 1, "", "axes"], [204, 2, 1, "", "axes_names"], [204, 3, 1, "", "bin_volume"], [204, 2, 1, "", "binsz_wcs"], [204, 2, 1, "", "center_coord"], [204, 2, 1, "", "center_pix"], [204, 2, 1, "", "center_skydir"], [204, 3, 1, "", "contains"], [204, 3, 1, "", "contains_pix"], [204, 3, 1, "", "contains_wcs_pix"], [204, 3, 1, "", "coord_to_idx"], [204, 3, 1, "", "coord_to_pix"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "create_mask"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "data_nbytes"], [204, 2, 1, "", "data_shape"], [204, 2, 1, "", "data_shape_axes"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "drop"], [204, 3, 1, "", "energy_mask"], [204, 2, 1, "", "frame"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_regions"], [204, 3, 1, "", "get_coord"], [204, 3, 1, "", "get_idx"], [204, 3, 1, "", "get_wcs_coord_and_weights"], [204, 2, 1, "", "has_energy_axis"], [204, 2, 1, "", "is_all_point_sky_regions"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_allsky"], [204, 2, 1, "", "is_flat"], [204, 2, 1, "", "is_hpx"], [204, 2, 1, "", "is_image"], [204, 2, 1, "", "is_region"], [204, 2, 1, "", "is_regular"], [204, 2, 1, "", "npix"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "pix_to_coord"], [204, 3, 1, "", "pix_to_idx"], [204, 3, 1, "", "plot_region"], [204, 2, 1, "", "projection"], [204, 2, 1, "", "region"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "replace_axis"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "separation"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "solid_angle"], [204, 3, 1, "", "squash"], [204, 3, 1, "", "to_bands_hdu"], [204, 3, 1, "", "to_binsz"], [204, 3, 1, "", "to_binsz_wcs"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "to_image"], [204, 3, 1, "", "to_wcs_geom"], [204, 3, 1, "", "union"], [204, 3, 1, "", "upsample"], [204, 2, 1, "", "wcs"], [204, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[205, 3, 1, "", "coadd"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 3, 1, "", "cutout"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 3, 1, "", "from_table"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_axis_data"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_hist"], [205, 3, 1, "", "plot_interactive"], [205, 3, 1, "", "plot_mask"], [205, 3, 1, "", "plot_region"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "stack"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_region_nd_map"], [205, 3, 1, "", "to_table"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[206, 2, 1, "", "as_plot_center"], [206, 2, 1, "", "as_plot_edges"], [206, 2, 1, "", "as_plot_labels"], [206, 2, 1, "", "as_plot_xerr"], [206, 3, 1, "", "assert_name"], [206, 2, 1, "", "bin_width"], [206, 2, 1, "", "bounds"], [206, 2, 1, "", "center"], [206, 3, 1, "", "coord_to_idx"], [206, 3, 1, "", "coord_to_pix"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "downsample"], [206, 2, 1, "", "edges"], [206, 2, 1, "", "edges_max"], [206, 2, 1, "", "edges_min"], [206, 3, 1, "", "format_plot_xaxis"], [206, 3, 1, "", "from_gti"], [206, 3, 1, "", "from_gti_bounds"], [206, 3, 1, "", "from_table"], [206, 3, 1, "", "from_time_bounds"], [206, 3, 1, "", "from_time_edges"], [206, 3, 1, "", "group_table"], [206, 2, 1, "", "interp"], [206, 3, 1, "", "is_aligned"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_contiguous"], [206, 2, 1, "", "iter_by_edges"], [206, 2, 1, "", "name"], [206, 2, 1, "", "nbin"], [206, 2, 1, "", "node_type"], [206, 3, 1, "", "pix_to_coord"], [206, 3, 1, "", "pix_to_idx"], [206, 2, 1, "", "reference_time"], [206, 3, 1, "", "slice"], [206, 3, 1, "", "squash"], [206, 2, 1, "", "time_bounds"], [206, 2, 1, "", "time_delta"], [206, 2, 1, "", "time_edges"], [206, 2, 1, "", "time_format"], [206, 2, 1, "", "time_max"], [206, 2, 1, "", "time_mid"], [206, 2, 1, "", "time_min"], [206, 3, 1, "", "to_contiguous"], [206, 3, 1, "", "to_gti"], [206, 3, 1, "", "to_header"], [206, 3, 1, "", "to_table"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[207, 2, 1, "", "as_energy_true"], [207, 2, 1, "", "axes"], [207, 2, 1, "", "axes_names"], [207, 3, 1, "", "bin_volume"], [207, 3, 1, "", "binary_structure"], [207, 3, 1, "", "boundary_mask"], [207, 2, 1, "", "center_coord"], [207, 2, 1, "", "center_pix"], [207, 2, 1, "", "center_skydir"], [207, 3, 1, "", "contains"], [207, 3, 1, "", "contains_pix"], [207, 3, 1, "", "coord_to_idx"], [207, 3, 1, "", "coord_to_pix"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "create"], [207, 3, 1, "", "create_mask"], [207, 3, 1, "", "crop"], [207, 3, 1, "", "cutout"], [207, 3, 1, "", "cutout_slices"], [207, 3, 1, "", "data_nbytes"], [207, 2, 1, "", "data_shape"], [207, 2, 1, "", "data_shape_axes"], [207, 2, 1, "", "data_shape_image"], [207, 3, 1, "", "downsample"], [207, 3, 1, "", "drop"], [207, 3, 1, "", "energy_mask"], [207, 2, 1, "", "footprint"], [207, 2, 1, "", "footprint_rectangle_sky_region"], [207, 2, 1, "", "frame"], [207, 3, 1, "", "from_aligned"], [207, 3, 1, "", "from_hdulist"], [207, 3, 1, "", "from_header"], [207, 3, 1, "", "get_coord"], [207, 3, 1, "", "get_idx"], [207, 3, 1, "", "get_pix"], [207, 2, 1, "", "has_energy_axis"], [207, 3, 1, "", "is_aligned"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_allsky"], [207, 2, 1, "", "is_flat"], [207, 2, 1, "", "is_hpx"], [207, 2, 1, "", "is_image"], [207, 2, 1, "", "is_region"], [207, 2, 1, "", "is_regular"], [207, 2, 1, "", "ndim"], [207, 2, 1, "", "npix"], [207, 3, 1, "", "pad"], [207, 3, 1, "", "pix_to_coord"], [207, 3, 1, "", "pix_to_idx"], [207, 2, 1, "", "pixel_area"], [207, 2, 1, "", "pixel_scales"], [207, 2, 1, "", "projection"], [207, 3, 1, "", "region_mask"], [207, 3, 1, "", "region_weights"], [207, 3, 1, "", "rename_axes"], [207, 3, 1, "", "replace_axis"], [207, 3, 1, "", "resample_axis"], [207, 3, 1, "", "separation"], [207, 2, 1, "", "shape_axes"], [207, 3, 1, "", "slice_by_idx"], [207, 3, 1, "", "solid_angle"], [207, 3, 1, "", "squash"], [207, 3, 1, "", "to_bands_hdu"], [207, 3, 1, "", "to_binsz"], [207, 3, 1, "", "to_cube"], [207, 3, 1, "", "to_even_npix"], [207, 3, 1, "", "to_header"], [207, 3, 1, "", "to_image"], [207, 3, 1, "", "to_odd_npix"], [207, 3, 1, "", "upsample"], [207, 2, 1, "", "wcs"], [207, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[208, 3, 1, "", "coadd"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cumsum"], [208, 2, 1, "", "data"], [208, 3, 1, "", "dot"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "fill_by_coord"], [208, 3, 1, "", "fill_by_idx"], [208, 3, 1, "", "fill_by_pix"], [208, 3, 1, "", "fill_events"], [208, 3, 1, "", "from_geom"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_stack"], [208, 2, 1, "", "geom"], [208, 3, 1, "", "get_by_coord"], [208, 3, 1, "", "get_by_idx"], [208, 3, 1, "", "get_by_pix"], [208, 3, 1, "", "get_image_by_coord"], [208, 3, 1, "", "get_image_by_idx"], [208, 3, 1, "", "get_image_by_pix"], [208, 3, 1, "", "get_spectrum"], [208, 3, 1, "", "integral"], [208, 3, 1, "", "interp_by_coord"], [208, 3, 1, "", "interp_by_pix"], [208, 3, 1, "", "interp_to_geom"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_mask"], [208, 3, 1, "", "iter_by_axis"], [208, 3, 1, "", "iter_by_image"], [208, 3, 1, "", "iter_by_image_data"], [208, 3, 1, "", "iter_by_image_index"], [208, 3, 1, "", "mask_nearest_position"], [208, 2, 1, "", "meta"], [208, 3, 1, "", "normalize"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 2, 1, "", "quantity"], [208, 3, 1, "", "read"], [208, 3, 1, "", "reduce"], [208, 3, 1, "", "reduce_over_axes"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "reorder_axes"], [208, 3, 1, "", "reproject_by_image"], [208, 3, 1, "", "reproject_to_geom"], [208, 3, 1, "", "resample"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "sample_coord"], [208, 3, 1, "", "set_by_coord"], [208, 3, 1, "", "set_by_idx"], [208, 3, 1, "", "set_by_pix"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "split_by_axis"], [208, 3, 1, "", "sum_over_axes"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_hdu"], [208, 3, 1, "", "to_hdulist"], [208, 3, 1, "", "to_unit"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "upsample"], [208, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[209, 3, 1, "", "binary_dilate"], [209, 3, 1, "", "binary_erode"], [209, 3, 1, "", "coadd"], [209, 3, 1, "", "convolve"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "create"], [209, 3, 1, "", "crop"], [209, 3, 1, "", "cumsum"], [209, 3, 1, "", "cutout"], [209, 3, 1, "", "cutout_and_mask_region"], [209, 2, 1, "", "data"], [209, 3, 1, "", "dot"], [209, 3, 1, "", "downsample"], [209, 3, 1, "", "fill_by_coord"], [209, 3, 1, "", "fill_by_idx"], [209, 3, 1, "", "fill_by_pix"], [209, 3, 1, "", "fill_events"], [209, 3, 1, "", "from_geom"], [209, 3, 1, "", "from_hdu"], [209, 3, 1, "", "from_hdulist"], [209, 3, 1, "", "from_stack"], [209, 2, 1, "", "geom"], [209, 3, 1, "", "get_by_coord"], [209, 3, 1, "", "get_by_idx"], [209, 3, 1, "", "get_by_pix"], [209, 3, 1, "", "get_image_by_coord"], [209, 3, 1, "", "get_image_by_idx"], [209, 3, 1, "", "get_image_by_pix"], [209, 3, 1, "", "get_spectrum"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "interp_by_coord"], [209, 3, 1, "", "interp_by_pix"], [209, 3, 1, "", "interp_to_geom"], [209, 3, 1, "", "is_allclose"], [209, 2, 1, "", "is_mask"], [209, 3, 1, "", "iter_by_axis"], [209, 3, 1, "", "iter_by_image"], [209, 3, 1, "", "iter_by_image_data"], [209, 3, 1, "", "iter_by_image_index"], [209, 3, 1, "", "mask_contains_region"], [209, 3, 1, "", "mask_nearest_position"], [209, 2, 1, "", "meta"], [209, 3, 1, "", "normalize"], [209, 3, 1, "", "pad"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_grid"], [209, 3, 1, "", "plot_interactive"], [209, 3, 1, "", "plot_mask"], [209, 2, 1, "", "quantity"], [209, 3, 1, "", "read"], [209, 3, 1, "", "reduce"], [209, 3, 1, "", "reduce_over_axes"], [209, 3, 1, "", "rename_axes"], [209, 3, 1, "", "reorder_axes"], [209, 3, 1, "", "reproject_by_image"], [209, 3, 1, "", "reproject_to_geom"], [209, 3, 1, "", "resample"], [209, 3, 1, "", "resample_axis"], [209, 3, 1, "", "sample_coord"], [209, 3, 1, "", "set_by_coord"], [209, 3, 1, "", "set_by_idx"], [209, 3, 1, "", "set_by_pix"], [209, 3, 1, "", "slice_by_idx"], [209, 3, 1, "", "smooth"], [209, 3, 1, "", "split_by_axis"], [209, 3, 1, "", "stack"], [209, 3, 1, "", "sum_over_axes"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_cube"], [209, 3, 1, "", "to_hdu"], [209, 3, 1, "", "to_hdulist"], [209, 3, 1, "", "to_region_nd_map"], [209, 3, 1, "", "to_region_nd_map_histogram"], [209, 3, 1, "", "to_unit"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "upsample"], [209, 3, 1, "", "write"]], "gammapy.modeling": [[212, 1, 1, "", "Covariance"], [213, 1, 1, "", "CovarianceResult"], [214, 1, 1, "", "Fit"], [215, 1, 1, "", "FitResult"], [216, 1, 1, "", "OptimizeResult"], [217, 1, 1, "", "Parameter"], [218, 1, 1, "", "Parameters"], [219, 1, 1, "", "PriorParameter"], [220, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [290, 4, 1, "", "select_nested_models"], [291, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[212, 2, 1, "", "correlation"], [212, 2, 1, "", "data"], [212, 3, 1, "", "from_factor_matrix"], [212, 3, 1, "", "from_stack"], [212, 3, 1, "", "get_subcovariance"], [212, 3, 1, "", "plot_correlation"], [212, 2, 1, "", "scipy_mvn"], [212, 3, 1, "", "set_subcovariance"], [212, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[213, 2, 1, "", "backend"], [213, 2, 1, "", "matrix"], [213, 2, 1, "", "message"], [213, 2, 1, "", "method"], [213, 2, 1, "", "success"], [213, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[214, 3, 1, "", "confidence"], [214, 3, 1, "", "covariance"], [214, 3, 1, "", "optimize"], [214, 3, 1, "", "run"], [214, 3, 1, "", "stat_contour"], [214, 3, 1, "", "stat_profile"], [214, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[215, 2, 1, "", "backend"], [215, 2, 1, "", "covariance_result"], [215, 2, 1, "", "message"], [215, 2, 1, "", "method"], [215, 2, 1, "", "minuit"], [215, 2, 1, "", "models"], [215, 2, 1, "", "nfev"], [215, 2, 1, "", "optimize_result"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "success"], [215, 2, 1, "", "total_stat"], [215, 2, 1, "", "trace"], [215, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[216, 2, 1, "", "backend"], [216, 2, 1, "", "message"], [216, 2, 1, "", "method"], [216, 2, 1, "", "minuit"], [216, 2, 1, "", "models"], [216, 2, 1, "", "nfev"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "success"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "total_stat"], [216, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 2, 1, "", "conf_max"], [217, 2, 1, "", "conf_min"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "error"], [217, 2, 1, "", "factor"], [217, 2, 1, "", "factor_max"], [217, 2, 1, "", "factor_min"], [217, 2, 1, "", "frozen"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "name"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 2, 1, "", "quantity"], [217, 2, 1, "", "scale"], [217, 2, 1, "", "scale_method"], [217, 2, 1, "", "scan_max"], [217, 2, 1, "", "scan_min"], [217, 2, 1, "", "scan_n_sigma"], [217, 2, 1, "", "scan_values"], [217, 3, 1, "", "set_lim"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 2, 1, "", "unit"], [217, 3, 1, "", "update_from_dict"], [217, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 2, 1, "", "free_parameters"], [218, 3, 1, "", "freeze_all"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_stack"], [218, 3, 1, "", "index"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "names"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 3, 1, "", "restore_status"], [218, 3, 1, "", "select"], [218, 3, 1, "", "set_parameter_factors"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "to_table"], [218, 2, 1, "", "types"], [218, 3, 1, "", "unfreeze_all"], [218, 2, 1, "", "unique_parameters"], [218, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 2, 1, "", "conf_max"], [219, 2, 1, "", "conf_min"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "error"], [219, 2, 1, "", "factor"], [219, 2, 1, "", "factor_max"], [219, 2, 1, "", "factor_min"], [219, 2, 1, "", "frozen"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "name"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 2, 1, "", "quantity"], [219, 2, 1, "", "scale"], [219, 2, 1, "", "scale_method"], [219, 2, 1, "", "scan_max"], [219, 2, 1, "", "scan_min"], [219, 2, 1, "", "scan_n_sigma"], [219, 2, 1, "", "scan_values"], [219, 3, 1, "", "set_lim"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 2, 1, "", "unit"], [219, 3, 1, "", "update_from_dict"], [219, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[220, 3, 1, "", "autoscale"], [220, 3, 1, "", "check_limits"], [220, 3, 1, "", "copy"], [220, 3, 1, "", "count"], [220, 2, 1, "", "free_parameters"], [220, 3, 1, "", "freeze_all"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_stack"], [220, 3, 1, "", "index"], [220, 2, 1, "", "max"], [220, 2, 1, "", "min"], [220, 2, 1, "", "names"], [220, 2, 1, "", "prior"], [220, 3, 1, "", "prior_stat_sum"], [220, 3, 1, "", "restore_status"], [220, 3, 1, "", "select"], [220, 3, 1, "", "set_parameter_factors"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_table"], [220, 2, 1, "", "types"], [220, 3, 1, "", "unfreeze_all"], [220, 2, 1, "", "unique_parameters"], [220, 2, 1, "", "value"]], "gammapy.modeling.models": [[221, 1, 1, "", "BrokenPowerLawSpectralModel"], [222, 1, 1, "", "CompoundSpectralModel"], [223, 1, 1, "", "ConstantFluxSpatialModel"], [224, 1, 1, "", "ConstantSpatialModel"], [225, 1, 1, "", "ConstantSpectralModel"], [226, 1, 1, "", "ConstantTemporalModel"], [227, 1, 1, "", "DatasetModels"], [228, 1, 1, "", "DiskSpatialModel"], [229, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [230, 5, 1, "", "EBL_DATA_BUILTIN"], [231, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [232, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [233, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [234, 1, 1, "", "ExpDecayTemporalModel"], [235, 1, 1, "", "FoVBackgroundModel"], [236, 1, 1, "", "GaussianPrior"], [237, 1, 1, "", "GaussianSpatialModel"], [238, 1, 1, "", "GaussianSpectralModel"], [239, 1, 1, "", "GaussianTemporalModel"], [240, 1, 1, "", "GeneralizedGaussianSpatialModel"], [241, 1, 1, "", "GeneralizedGaussianTemporalModel"], [242, 1, 1, "", "LightCurveTemplateTemporalModel"], [243, 1, 1, "", "LinearTemporalModel"], [244, 1, 1, "", "LogParabolaNormSpectralModel"], [245, 1, 1, "", "LogParabolaSpectralModel"], [246, 1, 1, "", "LogUniformPrior"], [247, 5, 1, "", "MODEL_REGISTRY"], [248, 1, 1, "", "MeyerCrabSpectralModel"], [249, 1, 1, "", "Model"], [250, 1, 1, "", "ModelBase"], [251, 1, 1, "", "Models"], [252, 1, 1, "", "NaimaSpectralModel"], [253, 1, 1, "", "PiecewiseNormSpatialModel"], [254, 1, 1, "", "PiecewiseNormSpectralModel"], [255, 1, 1, "", "PointSpatialModel"], [256, 1, 1, "", "PowerLaw2SpectralModel"], [257, 1, 1, "", "PowerLawNormSpectralModel"], [258, 1, 1, "", "PowerLawSpectralModel"], [259, 1, 1, "", "PowerLawTemporalModel"], [260, 1, 1, "", "Prior"], [261, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [262, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [263, 1, 1, "", "ScaleSpectralModel"], [264, 1, 1, "", "Shell2SpatialModel"], [265, 1, 1, "", "ShellSpatialModel"], [266, 1, 1, "", "SineTemporalModel"], [267, 1, 1, "", "SkyModel"], [268, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [269, 1, 1, "", "SpatialModel"], [270, 1, 1, "", "SpectralModel"], [271, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [272, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [273, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [274, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [275, 1, 1, "", "TemplateNDSpatialModel"], [276, 1, 1, "", "TemplateNDSpectralModel"], [277, 1, 1, "", "TemplateNPredModel"], [278, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [279, 1, 1, "", "TemplateSpatialModel"], [280, 1, 1, "", "TemplateSpectralModel"], [281, 1, 1, "", "TemporalModel"], [282, 1, 1, "", "UniformPrior"], [283, 4, 1, "", "create_cosmic_ray_spectral_model"], [284, 4, 1, "", "create_crab_spectral_model"], [285, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [286, 4, 1, "", "integrate_spectrum"], [287, 4, 1, "", "read_hermes_cube"], [288, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "amplitude"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 2, 1, "", "ebreak"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 2, 1, "", "index1"], [221, 2, 1, "", "index2"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 3, 1, "", "reference_fluxes"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[222, 3, 1, "", "__call__"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_geom"], [223, 2, 1, "", "evaluation_bin_size_min"], [223, 2, 1, "", "evaluation_radius"], [223, 2, 1, "", "evaluation_region"], [223, 2, 1, "", "frame"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 3, 1, "", "from_position"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integrate_geom"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "phi_0"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "plot_grid"], [223, 3, 1, "", "plot_interactive"], [223, 3, 1, "", "plot_position_error"], [223, 2, 1, "", "position"], [223, 2, 1, "", "position_error"], [223, 2, 1, "", "position_lonlat"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_region"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_geom"], [224, 2, 1, "", "evaluation_bin_size_min"], [224, 2, 1, "", "evaluation_radius"], [224, 2, 1, "", "evaluation_region"], [224, 2, 1, "", "frame"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 3, 1, "", "from_position"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integrate_geom"], [224, 2, 1, "", "is_energy_dependent"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "phi_0"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "plot_grid"], [224, 3, 1, "", "plot_interactive"], [224, 3, 1, "", "plot_position_error"], [224, 2, 1, "", "position"], [224, 2, 1, "", "position_error"], [224, 2, 1, "", "position_lonlat"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 3, 1, "", "to_region"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"], [224, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[225, 3, 1, "", "__call__"], [225, 2, 1, "", "const"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "energy_flux"], [225, 3, 1, "", "energy_flux_error"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_error"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 3, 1, "", "integral_error"], [225, 3, 1, "", "inverse"], [225, 3, 1, "", "inverse_all"], [225, 2, 1, "", "is_norm_spectral_model"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "pivot_energy"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "reassign"], [225, 3, 1, "", "reference_fluxes"], [225, 3, 1, "", "spectral_index"], [225, 3, 1, "", "spectral_index_error"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "reference_time"], [226, 3, 1, "", "sample_time"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "time_sum"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[227, 3, 1, "", "copy"], [227, 3, 1, "", "count"], [227, 2, 1, "", "covariance"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_yaml"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "index"], [227, 2, 1, "", "names"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 3, 1, "", "plot_positions"], [227, 3, 1, "", "plot_regions"], [227, 2, 1, "", "positions"], [227, 3, 1, "", "read"], [227, 3, 1, "", "read_covariance"], [227, 3, 1, "", "reassign"], [227, 3, 1, "", "restore_status"], [227, 3, 1, "", "select"], [227, 3, 1, "", "select_from_geom"], [227, 3, 1, "", "select_mask"], [227, 3, 1, "", "select_region"], [227, 3, 1, "", "selection_mask"], [227, 3, 1, "", "set_parameters_bounds"], [227, 3, 1, "", "to_dict"], [227, 3, 1, "", "to_parameters_table"], [227, 3, 1, "", "to_regions"], [227, 3, 1, "", "to_template_sky_model"], [227, 3, 1, "", "to_template_spectral_model"], [227, 3, 1, "", "to_yaml"], [227, 3, 1, "", "unfreeze"], [227, 3, 1, "", "update_link_label"], [227, 3, 1, "", "update_parameters_from_table"], [227, 2, 1, "", "wcs_geom"], [227, 3, 1, "", "write"], [227, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "e"], [228, 2, 1, "", "edge_width"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_geom"], [228, 2, 1, "", "evaluation_bin_size_min"], [228, 2, 1, "", "evaluation_radius"], [228, 2, 1, "", "evaluation_region"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 3, 1, "", "from_position"], [228, 3, 1, "", "from_region"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integrate_geom"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "lat_0"], [228, 2, 1, "", "lon_0"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "phi"], [228, 2, 1, "", "phi_0"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "plot_grid"], [228, 3, 1, "", "plot_interactive"], [228, 3, 1, "", "plot_position_error"], [228, 2, 1, "", "position"], [228, 2, 1, "", "position_error"], [228, 2, 1, "", "position_lonlat"], [228, 2, 1, "", "r_0"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 3, 1, "", "to_region"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "alpha_norm"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "energy_flux"], [229, 3, 1, "", "energy_flux_error"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_error"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 3, 1, "", "integral_error"], [229, 3, 1, "", "inverse"], [229, 3, 1, "", "inverse_all"], [229, 2, 1, "", "is_norm_spectral_model"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "pivot_energy"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "read"], [229, 3, 1, "", "read_builtin"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "redshift"], [229, 3, 1, "", "reference_fluxes"], [229, 3, 1, "", "spectral_index"], [229, 3, 1, "", "spectral_index_error"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "amplitude"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "ecut"], [231, 3, 1, "", "energy_flux"], [231, 3, 1, "", "energy_flux_error"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_error"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 2, 1, "", "index"], [231, 3, 1, "", "integral"], [231, 3, 1, "", "integral_error"], [231, 3, 1, "", "inverse"], [231, 3, 1, "", "inverse_all"], [231, 2, 1, "", "is_norm_spectral_model"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "pivot_energy"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference"], [231, 3, 1, "", "reference_fluxes"], [231, 3, 1, "", "spectral_index"], [231, 3, 1, "", "spectral_index_error"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[232, 3, 1, "", "__call__"], [232, 2, 1, "", "alpha"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "energy_flux"], [232, 3, 1, "", "energy_flux_error"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_error"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "index"], [232, 3, 1, "", "integral"], [232, 3, 1, "", "integral_error"], [232, 3, 1, "", "inverse"], [232, 3, 1, "", "inverse_all"], [232, 2, 1, "", "is_norm_spectral_model"], [232, 2, 1, "", "lambda_"], [232, 2, 1, "", "norm"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "pivot_energy"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference"], [232, 3, 1, "", "reference_fluxes"], [232, 3, 1, "", "spectral_index"], [232, 3, 1, "", "spectral_index_error"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "alpha"], [233, 2, 1, "", "amplitude"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "e_peak"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 2, 1, "", "index"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "lambda_"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 2, 1, "", "is_energy_dependent"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference_time"], [234, 3, 1, "", "sample_time"], [234, 2, 1, "", "t0"], [234, 2, 1, "", "t_ref"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "time_sum"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[235, 3, 1, "", "contributes"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_geom"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "name"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 3, 1, "", "reassign"], [235, 3, 1, "", "reset_to_default"], [235, 2, 1, "", "spatial_model"], [235, 2, 1, "", "spectral_model"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 2, 1, "", "mu"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "sigma"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"], [236, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 2, 1, "", "e"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_geom"], [237, 2, 1, "", "evaluation_bin_size_min"], [237, 2, 1, "", "evaluation_radius"], [237, 2, 1, "", "evaluation_region"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 3, 1, "", "from_position"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integrate_geom"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "lat_0"], [237, 2, 1, "", "lon_0"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "phi"], [237, 2, 1, "", "phi_0"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "plot_grid"], [237, 3, 1, "", "plot_interactive"], [237, 3, 1, "", "plot_position_error"], [237, 2, 1, "", "position"], [237, 2, 1, "", "position_error"], [237, 2, 1, "", "position_lonlat"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "sigma"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 3, 1, "", "to_region"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "amplitude"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "energy_flux"], [238, 3, 1, "", "energy_flux_error"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_error"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 3, 1, "", "integral_error"], [238, 3, 1, "", "inverse"], [238, 3, 1, "", "inverse_all"], [238, 2, 1, "", "is_norm_spectral_model"], [238, 2, 1, "", "mean"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 2, 1, "", "pivot_energy"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "reference_fluxes"], [238, 2, 1, "", "sigma"], [238, 3, 1, "", "spectral_index"], [238, 3, 1, "", "spectral_index_error"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference_time"], [239, 3, 1, "", "sample_time"], [239, 2, 1, "", "sigma"], [239, 2, 1, "", "t_ref"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "time_sum"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[240, 3, 1, "", "__call__"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 2, 1, "", "e"], [240, 2, 1, "", "eta"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_geom"], [240, 2, 1, "", "evaluation_bin_size_min"], [240, 2, 1, "", "evaluation_radius"], [240, 2, 1, "", "evaluation_region"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 3, 1, "", "from_position"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integrate_geom"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "lat_0"], [240, 2, 1, "", "lon_0"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "phi"], [240, 2, 1, "", "phi_0"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "plot_grid"], [240, 3, 1, "", "plot_interactive"], [240, 3, 1, "", "plot_position_error"], [240, 2, 1, "", "position"], [240, 2, 1, "", "position_error"], [240, 2, 1, "", "position_lonlat"], [240, 2, 1, "", "r_0"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 3, 1, "", "to_region"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 2, 1, "", "eta"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "t_decay"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "t_rise"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_table"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "read"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference_time"], [242, 3, 1, "", "sample_time"], [242, 2, 1, "", "t_ref"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "time_sum"], [242, 3, 1, "", "to_dict"], [242, 3, 1, "", "to_table"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"], [242, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "alpha"], [243, 2, 1, "", "beta"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference_time"], [243, 3, 1, "", "sample_time"], [243, 2, 1, "", "t_ref"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "time_sum"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[244, 3, 1, "", "__call__"], [244, 2, 1, "", "alpha"], [244, 2, 1, "", "beta"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_log10"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "norm"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "alpha"], [245, 2, 1, "", "amplitude"], [245, 2, 1, "", "beta"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "e_peak"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_log10"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 2, 1, "", "max"], [246, 2, 1, "", "min"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"], [246, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "coefficients"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "energy_flux"], [248, 3, 1, "", "energy_flux_error"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_error"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 3, 1, "", "integral_error"], [248, 3, 1, "", "inverse"], [248, 3, 1, "", "inverse_all"], [248, 2, 1, "", "is_norm_spectral_model"], [248, 2, 1, "", "norm"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "pivot_energy"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "reassign"], [248, 3, 1, "", "reference_fluxes"], [248, 3, 1, "", "spectral_index"], [248, 3, 1, "", "spectral_index_error"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[249, 3, 1, "", "create"], [249, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[251, 3, 1, "", "append"], [251, 3, 1, "", "clear"], [251, 3, 1, "", "copy"], [251, 3, 1, "", "count"], [251, 2, 1, "", "covariance"], [251, 3, 1, "", "extend"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_yaml"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "index"], [251, 3, 1, "", "insert"], [251, 2, 1, "", "names"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 3, 1, "", "plot_positions"], [251, 3, 1, "", "plot_regions"], [251, 3, 1, "", "pop"], [251, 2, 1, "", "positions"], [251, 3, 1, "", "read"], [251, 3, 1, "", "read_covariance"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "remove"], [251, 3, 1, "", "restore_status"], [251, 3, 1, "", "reverse"], [251, 3, 1, "", "select"], [251, 3, 1, "", "select_from_geom"], [251, 3, 1, "", "select_mask"], [251, 3, 1, "", "select_region"], [251, 3, 1, "", "selection_mask"], [251, 3, 1, "", "set_parameters_bounds"], [251, 3, 1, "", "set_prior"], [251, 3, 1, "", "to_dict"], [251, 3, 1, "", "to_parameters_table"], [251, 3, 1, "", "to_regions"], [251, 3, 1, "", "to_template_sky_model"], [251, 3, 1, "", "to_template_spectral_model"], [251, 3, 1, "", "to_yaml"], [251, 3, 1, "", "unfreeze"], [251, 3, 1, "", "update_link_label"], [251, 3, 1, "", "update_parameters_from_table"], [251, 2, 1, "", "wcs_geom"], [251, 3, 1, "", "write"], [251, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[252, 3, 1, "", "__call__"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "include_ssc"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "particle_distribution"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "ssc_model"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "coords"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_geom"], [253, 2, 1, "", "evaluation_bin_size_min"], [253, 2, 1, "", "evaluation_radius"], [253, 2, 1, "", "evaluation_region"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 3, 1, "", "from_position"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integrate_geom"], [253, 2, 1, "", "is_energy_dependent"], [253, 2, 1, "", "norms"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "phi_0"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "plot_grid"], [253, 3, 1, "", "plot_interactive"], [253, 3, 1, "", "plot_position_error"], [253, 2, 1, "", "position"], [253, 2, 1, "", "position_error"], [253, 2, 1, "", "position_lonlat"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 2, 1, "", "energy"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "norms"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "lat_0"], [255, 2, 1, "", "lon_0"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 3, 1, "", "to_region"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "amplitude"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 2, 1, "", "emax"], [256, 2, 1, "", "emin"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "evaluate_integral"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 2, 1, "", "index"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_energy_flux"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "evaluate_integral"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "norm"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "reference"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 2, 1, "", "tilt"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "amplitude"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_energy_flux"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "evaluate_integral"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "index"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "reference"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "alpha"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integral"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference_time"], [259, 3, 1, "", "sample_time"], [259, 2, 1, "", "t0"], [259, 2, 1, "", "t_ref"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "time_sum"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 3, 1, "", "reassign"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"], [260, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "energy_flux"], [263, 3, 1, "", "energy_flux_error"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_error"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integral"], [263, 3, 1, "", "integral_error"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "inverse_all"], [263, 2, 1, "", "is_norm_spectral_model"], [263, 2, 1, "", "norm"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "pivot_energy"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "reassign"], [263, 3, 1, "", "reference_fluxes"], [263, 3, 1, "", "spectral_index"], [263, 3, 1, "", "spectral_index_error"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 2, 1, "", "eta"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_geom"], [264, 2, 1, "", "evaluation_bin_size_min"], [264, 2, 1, "", "evaluation_radius"], [264, 2, 1, "", "evaluation_region"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 3, 1, "", "from_position"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integrate_geom"], [264, 2, 1, "", "is_energy_dependent"], [264, 2, 1, "", "lat_0"], [264, 2, 1, "", "lon_0"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "phi_0"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "plot_grid"], [264, 3, 1, "", "plot_interactive"], [264, 3, 1, "", "plot_position_error"], [264, 2, 1, "", "position"], [264, 2, 1, "", "position_error"], [264, 2, 1, "", "position_lonlat"], [264, 2, 1, "", "r_0"], [264, 2, 1, "", "r_in"], [264, 3, 1, "", "reassign"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 3, 1, "", "to_region"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_geom"], [265, 2, 1, "", "evaluation_bin_size_min"], [265, 2, 1, "", "evaluation_radius"], [265, 2, 1, "", "evaluation_region"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 3, 1, "", "from_position"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integrate_geom"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "lat_0"], [265, 2, 1, "", "lon_0"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "phi_0"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "plot_grid"], [265, 3, 1, "", "plot_interactive"], [265, 3, 1, "", "plot_position_error"], [265, 2, 1, "", "position"], [265, 2, 1, "", "position_error"], [265, 2, 1, "", "position_lonlat"], [265, 2, 1, "", "radius"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 3, 1, "", "to_region"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"], [265, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[266, 3, 1, "", "__call__"], [266, 2, 1, "", "amp"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "omega"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "reference_time"], [266, 3, 1, "", "sample_time"], [266, 2, 1, "", "t_ref"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "time_sum"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "contributes"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 3, 1, "", "create"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 2, 1, "", "frame"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "name"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_lonlat"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "spatial_model"], [267, 2, 1, "", "spectral_model"], [267, 2, 1, "", "tag"], [267, 2, 1, "", "temporal_model"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[268, 3, 1, "", "__call__"], [268, 2, 1, "", "amplitude"], [268, 2, 1, "", "beta"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 2, 1, "", "ebreak"], [268, 3, 1, "", "energy_flux"], [268, 3, 1, "", "energy_flux_error"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_error"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 2, 1, "", "index1"], [268, 2, 1, "", "index2"], [268, 3, 1, "", "integral"], [268, 3, 1, "", "integral_error"], [268, 3, 1, "", "inverse"], [268, 3, 1, "", "inverse_all"], [268, 2, 1, "", "is_norm_spectral_model"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "pivot_energy"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference"], [268, 3, 1, "", "reference_fluxes"], [268, 3, 1, "", "spectral_index"], [268, 3, 1, "", "spectral_index_error"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate_geom"], [269, 2, 1, "", "evaluation_bin_size_min"], [269, 2, 1, "", "evaluation_radius"], [269, 2, 1, "", "evaluation_region"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 3, 1, "", "from_position"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integrate_geom"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "phi_0"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "plot_grid"], [269, 3, 1, "", "plot_interactive"], [269, 3, 1, "", "plot_position_error"], [269, 2, 1, "", "position"], [269, 2, 1, "", "position_error"], [269, 2, 1, "", "position_lonlat"], [269, 3, 1, "", "reassign"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[271, 3, 1, "", "__call__"], [271, 2, 1, "", "amplitude"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 2, 1, "", "ecut"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_error"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 2, 1, "", "index_1"], [271, 2, 1, "", "index_2"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "reassign"], [271, 2, 1, "", "reference"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[272, 3, 1, "", "__call__"], [272, 2, 1, "", "amplitude"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "energy_flux"], [272, 3, 1, "", "energy_flux_error"], [272, 3, 1, "", "evaluate"], [272, 3, 1, "", "evaluate_error"], [272, 2, 1, "", "expfactor"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 2, 1, "", "index_1"], [272, 2, 1, "", "index_2"], [272, 3, 1, "", "integral"], [272, 3, 1, "", "integral_error"], [272, 3, 1, "", "inverse"], [272, 3, 1, "", "inverse_all"], [272, 2, 1, "", "is_norm_spectral_model"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "pivot_energy"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "reference"], [272, 3, 1, "", "reference_fluxes"], [272, 3, 1, "", "spectral_index"], [272, 3, 1, "", "spectral_index_error"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[273, 3, 1, "", "__call__"], [273, 2, 1, "", "amplitude"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_error"], [273, 2, 1, "", "expfactor"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 2, 1, "", "index_1"], [273, 2, 1, "", "index_2"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "reference"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[275, 3, 1, "", "__call__"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_geom"], [275, 2, 1, "", "evaluation_bin_size_min"], [275, 2, 1, "", "evaluation_radius"], [275, 2, 1, "", "evaluation_region"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 3, 1, "", "from_position"], [275, 2, 1, "", "frozen"], [275, 3, 1, "", "integrate_geom"], [275, 2, 1, "", "is_energy_dependent"], [275, 2, 1, "", "map"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "phi_0"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "plot_grid"], [275, 3, 1, "", "plot_interactive"], [275, 3, 1, "", "plot_position_error"], [275, 2, 1, "", "position"], [275, 2, 1, "", "position_error"], [275, 2, 1, "", "position_lonlat"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"], [275, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[276, 3, 1, "", "__call__"], [276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 2, 1, "", "default_parameters"], [276, 3, 1, "", "energy_flux"], [276, 3, 1, "", "energy_flux_error"], [276, 3, 1, "", "evaluate"], [276, 3, 1, "", "evaluate_error"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 2, 1, "", "frozen"], [276, 3, 1, "", "integral"], [276, 3, 1, "", "integral_error"], [276, 3, 1, "", "inverse"], [276, 3, 1, "", "inverse_all"], [276, 2, 1, "", "is_norm_spectral_model"], [276, 2, 1, "", "map"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 2, 1, "", "pivot_energy"], [276, 3, 1, "", "plot"], [276, 3, 1, "", "plot_error"], [276, 3, 1, "", "reassign"], [276, 3, 1, "", "reference_fluxes"], [276, 3, 1, "", "spectral_index"], [276, 3, 1, "", "spectral_index_error"], [276, 2, 1, "", "tag"], [276, 3, 1, "", "to_dict"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"], [276, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 3, 1, "", "cutout"], [277, 2, 1, "", "default_parameters"], [277, 2, 1, "", "energy_center"], [277, 3, 1, "", "evaluate"], [277, 2, 1, "", "evaluation_radius"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 2, 1, "", "frozen"], [277, 2, 1, "", "map"], [277, 2, 1, "", "name"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "position"], [277, 3, 1, "", "reassign"], [277, 3, 1, "", "slice_by_energy"], [277, 2, 1, "", "spectral_model"], [277, 3, 1, "", "stack"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"], [277, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "evaluate"], [278, 2, 1, "", "f0"], [278, 2, 1, "", "f1"], [278, 2, 1, "", "f2"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integral"], [278, 2, 1, "", "is_energy_dependent"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "phi_ref"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "plot_phasogram"], [278, 3, 1, "", "read"], [278, 3, 1, "", "reassign"], [278, 2, 1, "", "reference_time"], [278, 3, 1, "", "sample_time"], [278, 2, 1, "", "t_ref"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "time_sum"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[279, 3, 1, "", "__call__"], [279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 2, 1, "", "default_parameters"], [279, 3, 1, "", "evaluate"], [279, 3, 1, "", "evaluate_geom"], [279, 2, 1, "", "evaluation_bin_size_min"], [279, 2, 1, "", "evaluation_radius"], [279, 2, 1, "", "evaluation_region"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 3, 1, "", "from_position"], [279, 2, 1, "", "frozen"], [279, 3, 1, "", "integrate_geom"], [279, 2, 1, "", "is_energy_dependent"], [279, 2, 1, "", "lat_0"], [279, 2, 1, "", "lon_0"], [279, 2, 1, "", "map"], [279, 2, 1, "", "map_center"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "phi_0"], [279, 3, 1, "", "plot"], [279, 3, 1, "", "plot_error"], [279, 3, 1, "", "plot_grid"], [279, 3, 1, "", "plot_interactive"], [279, 3, 1, "", "plot_position_error"], [279, 2, 1, "", "position"], [279, 2, 1, "", "position_error"], [279, 2, 1, "", "position_lonlat"], [279, 3, 1, "", "read"], [279, 3, 1, "", "reassign"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 3, 1, "", "to_region"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[280, 3, 1, "", "__call__"], [280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 2, 1, "", "default_parameters"], [280, 3, 1, "", "energy_flux"], [280, 3, 1, "", "energy_flux_error"], [280, 3, 1, "", "evaluate"], [280, 3, 1, "", "evaluate_error"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 3, 1, "", "from_region_map"], [280, 2, 1, "", "frozen"], [280, 3, 1, "", "integral"], [280, 3, 1, "", "integral_error"], [280, 3, 1, "", "inverse"], [280, 3, 1, "", "inverse_all"], [280, 2, 1, "", "is_norm_spectral_model"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 2, 1, "", "pivot_energy"], [280, 3, 1, "", "plot"], [280, 3, 1, "", "plot_error"], [280, 3, 1, "", "read_xspec_model"], [280, 3, 1, "", "reassign"], [280, 3, 1, "", "reference_fluxes"], [280, 3, 1, "", "spectral_index"], [280, 3, 1, "", "spectral_index_error"], [280, 2, 1, "", "tag"], [280, 3, 1, "", "to_dict"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 2, 1, "", "frozen"], [281, 3, 1, "", "integral"], [281, 2, 1, "", "is_energy_dependent"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 3, 1, "", "plot"], [281, 3, 1, "", "reassign"], [281, 2, 1, "", "reference_time"], [281, 3, 1, "", "sample_time"], [281, 3, 1, "", "time_sum"], [281, 3, 1, "", "to_dict"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[282, 3, 1, "", "__call__"], [282, 3, 1, "", "copy"], [282, 2, 1, "", "covariance"], [282, 2, 1, "", "default_parameters"], [282, 3, 1, "", "evaluate"], [282, 3, 1, "", "freeze"], [282, 3, 1, "", "from_dict"], [282, 3, 1, "", "from_parameters"], [282, 2, 1, "", "frozen"], [282, 2, 1, "", "max"], [282, 2, 1, "", "min"], [282, 2, 1, "", "parameters"], [282, 2, 1, "", "parameters_unique_names"], [282, 3, 1, "", "reassign"], [282, 2, 1, "", "tag"], [282, 3, 1, "", "to_dict"], [282, 2, 1, "", "type"], [282, 3, 1, "", "unfreeze"], [282, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[289, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[292, 1, 1, "", "CashCountsStatistic"], [293, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [294, 1, 1, "", "WStatCountsStatistic"], [295, 4, 1, "", "cash"], [296, 4, 1, "", "cash_sum_cython"], [297, 4, 1, "", "compute_chisq"], [298, 4, 1, "", "compute_flux_doubling"], [299, 4, 1, "", "compute_fpp"], [300, 4, 1, "", "compute_fvar"], [301, 4, 1, "", "cstat"], [302, 4, 1, "", "discrete_correlation"], [303, 4, 1, "", "f_cash_root_cython"], [304, 4, 1, "", "get_wstat_gof_terms"], [305, 4, 1, "", "get_wstat_mu_bkg"], [306, 4, 1, "", "norm_bounds_cython"], [307, 4, 1, "", "structure_function"], [308, 4, 1, "", "weighted_cash_sum_cython"], [309, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[292, 3, 1, "", "compute_errn"], [292, 3, 1, "", "compute_errp"], [292, 3, 1, "", "compute_upper_limit"], [292, 2, 1, "", "error"], [292, 3, 1, "", "info_dict"], [292, 2, 1, "", "n_bkg"], [292, 2, 1, "", "n_sig"], [292, 3, 1, "", "n_sig_matching_significance"], [292, 2, 1, "", "p_value"], [292, 2, 1, "", "sqrt_ts"], [292, 2, 1, "", "stat_max"], [292, 2, 1, "", "stat_null"], [292, 3, 1, "", "sum"], [292, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[294, 3, 1, "", "compute_errn"], [294, 3, 1, "", "compute_errp"], [294, 3, 1, "", "compute_upper_limit"], [294, 2, 1, "", "error"], [294, 3, 1, "", "info_dict"], [294, 2, 1, "", "n_bkg"], [294, 2, 1, "", "n_sig"], [294, 3, 1, "", "n_sig_matching_significance"], [294, 2, 1, "", "p_value"], [294, 2, 1, "", "sqrt_ts"], [294, 2, 1, "", "stat_max"], [294, 2, 1, "", "stat_null"], [294, 3, 1, "", "sum"], [294, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[310, 4, 1, "", "hierarchical_clustering"], [311, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[312, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [313, 4, 1, "", "cartesian"], [314, 4, 1, "", "fov_to_sky"], [315, 4, 1, "", "galactic"], [316, 4, 1, "", "motion_since_birth"], [317, 4, 1, "", "polar"], [318, 4, 1, "", "sky_to_fov"], [319, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[320, 1, 1, "", "HDULocation"], [321, 1, 1, "", "LazyFitsData"], [322, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[320, 3, 1, "", "get_hdu"], [320, 3, 1, "", "info"], [320, 3, 1, "", "load"], [320, 3, 1, "", "path"]], "gammapy.utils.integrate": [[323, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[324, 1, 1, "", "ScaledRegularGridInterpolator"], [325, 4, 1, "", "interpolate_profile"], [326, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[324, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[327, 5, 1, "", "BACKEND_DEFAULT"], [328, 5, 1, "", "METHOD_DEFAULT"], [329, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [330, 5, 1, "", "N_JOBS_DEFAULT"], [331, 5, 1, "", "POOL_KWARGS_DEFAULT"], [332, 1, 1, "", "multiprocessing_manager"], [333, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[334, 1, 1, "", "InverseCDFSampler"], [335, 4, 1, "", "draw"], [336, 4, 1, "", "get_random_state"], [337, 4, 1, "", "normalize"], [338, 4, 1, "", "pdf"], [339, 4, 1, "", "sample_powerlaw"], [340, 4, 1, "", "sample_sphere"], [341, 4, 1, "", "sample_sphere_distance"], [342, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[334, 3, 1, "", "sample"], [334, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[343, 4, 1, "", "compound_region_to_regions"], [344, 4, 1, "", "make_concentric_annulus_sky_regions"], [345, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [346, 4, 1, "", "region_to_frame"], [347, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[348, 4, 1, "", "from_yaml"], [349, 4, 1, "", "get_images_paths"], [350, 4, 1, "", "make_path"], [351, 4, 1, "", "read_yaml"], [352, 4, 1, "", "recursive_merge_dicts"], [353, 4, 1, "", "to_yaml"], [354, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[355, 4, 1, "", "hstack_columns"], [356, 4, 1, "", "table_row_to_dict"], [357, 4, 1, "", "table_standardise_units_copy"], [358, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[359, 1, 1, "", "Checker"], [360, 4, 1, "", "assert_quantity_allclose"], [361, 4, 1, "", "assert_skycoord_allclose"], [362, 4, 1, "", "assert_time_allclose"], [363, 4, 1, "", "mpl_plot_check"], [364, 4, 1, "", "requires_data"], [365, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[359, 3, 1, "", "run"]], "gammapy.utils.time": [[366, 4, 1, "", "absolute_time"], [367, 4, 1, "", "time_ref_from_dict"], [368, 4, 1, "", "time_ref_to_dict"], [369, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[370, 4, 1, "", "standardise_unit"], [371, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[372, 1, 1, "", "MapPanelPlotter"], [373, 4, 1, "", "add_colorbar"], [374, 4, 1, "", "annotate_heatmap"], [375, 4, 1, "", "colormap_hess"], [376, 4, 1, "", "colormap_milagro"], [377, 4, 1, "", "plot_contour_line"], [378, 4, 1, "", "plot_distribution"], [379, 4, 1, "", "plot_heatmap"], [380, 4, 1, "", "plot_map_rgb"], [381, 4, 1, "", "plot_npred_signal"], [382, 4, 1, "", "plot_spectrum_datasets_off_regions"], [383, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[372, 3, 1, "", "plot"], [372, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 127, 128, 129, 133, 136, 144, 145, 150, 151, 152, 156, 176, 182, 203, 209, 221, 225, 226, 231, 233, 234, 238, 239, 241, 242, 243, 245, 249, 251, 252, 256, 258, 259, 266, 267, 268, 271, 272, 273, 278, 281, 283, 284, 290, 300, 320, 370, 374, 375, 382, 385, 386, 388, 390, 395, 396, 397, 399, 401, 402, 403, 404, 405, 408, 411, 415, 416, 418, 419, 421, 422, 423, 424, 452, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 506, 509, 510, 516, 517, 518, 519, 522, 524, 529, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 588], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 219, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 288, 290, 292, 293, 294, 295, 298, 299, 300, 301, 302, 310, 311, 330, 334, 341, 342, 362, 373, 375, 376, 380, 382, 385, 386, 388, 389, 392, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 422, 423, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 516, 518, 522, 526, 528, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587], "00": [67, 87, 88, 89, 91, 102, 200, 386, 400, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 476, 477, 479, 480, 482, 483, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 503, 505, 507, 508, 509, 510, 511, 539, 549, 569, 570, 580, 588], "000": [67, 87, 88, 91, 128, 400, 457, 459, 461, 462, 464, 465, 469, 470, 471, 473, 474, 477, 479, 480, 483, 486, 487, 488, 492, 494, 495, 500, 507, 508, 510, 539], "0000": 411, "00000": 145, "000000": 486, "000000000000002": 492, "00000000000001": 464, "00000000000003": 481, "00000000000004": 486, "0000000000016": 86, "0000000000018": 94, "000000000002": 473, "0000000000064": 473, "000000000007": 486, "00000000001": 486, "00000000e": [489, 490], "00000001": 86, "0000000e": 490, "00000143": [386, 588], "0000e": [102, 457, 458, 461, 462, 463, 464, 466, 469, 477, 479, 480, 489, 495, 497, 509, 569], "0001": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 376, 471], "00010298": 487, "00015": 488, "000150": 459, "0002": [459, 510], "00020": 459, "0002000": 459, "0003": 471, "00050": 459, "000500": 459, "0006": 459, "00074287037": [94, 474], "000742870370370241": 94, "0008": 486, "0009": 459, "000e": [457, 461, 464, 466, 469, 470, 477, 480, 486, 489, 495, 497, 509, 510, 569], "000true": 459, "001": [50, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 362, 473, 489, 547], "001247": 467, "0016288e": 490, "001e": 67, "002018": 500, "0025508e": 490, "0028272e": 490, "0029": 410, "0029202684427718766": 508, "002e": [67, 462], "003": [481, 494, 500], "003026327991562108": 470, "0031052863692021915": 508, "0033": 586, "00336861061002e": 483, "0036925550381217": 464, "00375698": 242, "004": 67, "00422666667": 484, "00449161": 248, "00472179200096": 414, "00490": 471, "00490483": 471, "0049409": 499, "005": [455, 460, 486], "00521472221220211": 470, "005875": 550, "005909017160171437": 472, "0064830e": 490, "00688029": 242, "007": 486, "0076540e": 490, "0077e": 477, "008": [486, 585], "008166963876141447": 472, "008891944789387447": 472, "00894": 510, "009": [483, 486], "00931e": 456, "009433226692021113": 472, "00e": [83, 456, 462, 465, 473, 477, 480, 481, 483, 487, 490, 491, 500, 508], "01": [39, 52, 75, 83, 87, 88, 91, 94, 103, 106, 107, 111, 112, 114, 115, 130, 136, 179, 180, 184, 194, 195, 200, 204, 207, 228, 234, 239, 241, 243, 259, 266, 386, 414, 422, 455, 456, 457, 460, 461, 463, 465, 466, 469, 470, 473, 477, 480, 481, 482, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 508, 509, 510, 516, 521, 531, 533, 534, 537, 541, 543, 545, 549, 567, 572, 573, 574, 580, 585, 588], "010": [494, 503], "010066705375548107": 414, "010e": 67, "011": 494, "01183": 145, "011872336272724": 508, "012": 494, "0120e": 477, "0122385e": 490, "01235137e": 490, "012733796525585": 496, "0139252e": 490, "014": [85, 103, 106, 107, 111, 112, 176, 462, 469, 486, 491, 508, 509, 533], "0143724": 242, "0143764": 499, "01449": 83, "0145": 493, "01450": [478, 509], "0148015517529894": 414, "014811633859834": 414, "0149044e": 490, "015": 486, "01551196351647377": 242, "0163": 471, "01648855015875024": 584, "01700709977114979": 484, "017442925431194484": 484, "018": 67, "018182745349064267": 470, "0183519e": 490, "01960784313726": 475, "019672": 488, "019899368286133": 470, "01e": [176, 422, 456, 477, 486], "01t00": [87, 91, 94, 200, 386, 465, 473, 588], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 103, 105, 106, 107, 111, 112, 113, 118, 127, 164, 171, 176, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 422, 455, 456, 457, 459, 461, 462, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 486, 489, 490, 491, 492, 493, 494, 495, 498, 500, 505, 508, 509, 510, 511, 531, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "020": [470, 486, 488], "020420144596410953": 496, "021": [67, 486], "0225e": 486, "0226e": 477, "02288737": 242, "023": 486, "023472814714293713": 508, "024": 486, "02432": 486, "024715584699834": 508, "024897178551308": 414, "024e": 510, "025": [486, 500], "0250e": 480, "0251191207999763": 471, "025e": 145, "026": [53, 67, 486], "02653": [465, 471], "026891": 486, "026914": 486, "027": 67, "027771": 571, "028549898215494e": 414, "028854": 493, "029e": [457, 486], "02e": [83, 483], "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 105, 127, 206, 398, 413, 455, 456, 457, 459, 470, 471, 473, 480, 486, 490, 492, 494, 496, 497, 498, 502, 503, 509, 544], "03034567e": 488, "031511": 540, "032": 486, "0322": 67, "0322775e": 490, "033": [67, 486], "033176650892097": 96, "03383": 499, "034": 585, "0344": 67, "03447394e": 488, "03493": 488, "034e": 459, "035": 488, "0354700e": 490, "0356": 456, "0356551": 456, "036": 67, "036e": 486, "037": 494, "03745318352059925": 578, "0375512e": 490, "0376213e": 490, "03893": 488, "039": [469, 470, 488], "039215686274545": 475, "03921700077803329": 470, "0395135e": 490, "03978226e": 495, "04": [30, 67, 94, 455, 460, 462, 464, 465, 467, 470, 473, 480, 481, 486, 490, 492, 495, 500, 546], "040": 461, "040e": 465, "041": 500, "0414": 465, "0415": 510, "041882": 486, "042": 486, "0423761": 456, "042e": 486, "043": 67, "04357249662280083": 461, "04454": 500, "0454683": 499, "046": 67, "0462798e": 490, "046549": 554, "047": 67, "0473174": 248, "0474750e": 490, "048": [469, 500], "0482342e": 490, "04897634344908595": 96, "048e": 67, "049": [459, 469], "04939e": 456, "049676": 486, "04d": 473, "04e": 491, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 125, 126, 128, 135, 207, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 344, 413, 455, 456, 457, 458, 459, 460, 461, 465, 468, 469, 470, 471, 474, 477, 479, 485, 486, 487, 489, 490, 491, 494, 497, 498, 499, 501, 503, 508, 509, 536, 541, 542, 543], "050": 494, "05019": 145, "0503641": 456, "0505949e": 490, "05075": 490, "0508075688763": 486, "05088486522436142": 461, "050e": 465, "051": [19, 20, 26, 494], "0515e": 480, "051c": [17, 21, 22, 24, 25, 27], "052": 486, "0520119e": 490, "0521419985089": 472, "05227": 486, "053": 469, "053212009682775": 496, "054833602905273e": 470, "0548e": 470, "054e": 67, "055": 486, "055466": 466, "055e": 459, "0560": 510, "056130": 486, "05628243": 510, "05637e": 456, "05673": 510, "057": 486, "05762513693893088": 470, "058": 67, "058201": 486, "05853": 465, "058823529411775": 475, "059": 67, "05901956e": 490, "0598579": 456, "05deg": 207, "06": [150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 455, 460, 469, 470, 471, 476, 486, 487, 489, 490, 491, 492, 498, 500, 503, 545, 547, 548, 570], "061": 510, "062": [473, 494, 495, 500], "0625": 495, "0628": 510, "063": 67, "0631757e": 490, "06334488877417636": 496, "064108e": 486, "06430": 471, "0643032": 471, "06450": 145, "065071": 486, "065119": 510, "06549": 145, "066": [461, 580], "066442": 486, "067": 465, "068245": 486, "0689": 489, "068e": 459, "069": 67, "07": [103, 176, 360, 400, 422, 455, 459, 460, 462, 469, 471, 479, 481, 482, 483, 486, 487, 490, 492, 494, 500, 503, 511, 540, 544, 558], "07022": 145, "070483": 486, "0711412": 456, "072": 67, "073": 67, "0739282e": 490, "074": [486, 500], "074030": 495, "07454639": 471, "07455": 471, "0746": 510, "0748": [486, 510], "075": 67, "07512322002655547": 470, "0756e": 456, "076": 510, "077": 456, "078": 459, "07843137254903": 475, "07871368968": 487, "07943648658692837": 496, "07944657408": 486, "079464e": 510, "0799109224230051": 496, "07e": 481, "08": [86, 380, 422, 463, 464, 466, 467, 469, 470, 477, 486, 487, 489, 491, 500, 508, 509, 550, 559, 561, 563], "0800792e": 490, "08075": 490, "08081469527619482": 464, "08088": 182, "080e": 465, "0811551760882139": 496, "08142": 485, "08191603310406206": 496, "08192": 471, "08192101": 471, "082": 486, "082691868487906": 484, "08269984": 510, "082e": 128, "083": [67, 486], "08328557573258877": 496, "0833333358168602": 461, "0833333432674408": 461, "08342": 145, "08388624433428049": 496, "084": 67, "084074": 555, "08447355125099419": 496, "0845515": 456, "085": 486, "08529426": 97, "0855013383552432": 496, "0859117235629056e": 483, "08675": 487, "086e": 486, "087": 510, "08795162606984375": 496, "087e": 486, "088742": 486, "08880368117243051": 496, "08894569035619496": 496, "089": 140, "0894640e": 490, "0897868126630783": 496, "089881": 486, "08e": [477, 494], "09": [33, 105, 127, 128, 176, 455, 457, 460, 462, 465, 467, 469, 486, 487, 490, 491, 495, 508, 509, 510, 556, 568, 586], "0902437e": 490, "0907128e": 490, "0910": [257, 258], "0914": [52, 53], "093477": 471, "09348": 471, "09375": 483, "09426693227142095": 496, "094834": 486, "095232": 486, "09562941": 510, "095707": 510, "096": [462, 477], "0960": 510, "09607": 510, "09610314778983592": 496, "09623312838375568": 496, "09740295372903346": 496, "097e": 67, "09805": 145, "098903": 486, "09907043184188653": 496, "09e": 491, "0b100": 330, "0d": [130, 475, 487, 545], "0e": [408, 462, 464, 465, 466, 470, 473, 477, 480, 483, 487, 488, 490, 492, 494, 495, 500, 508, 540, 541, 542, 543, 545, 546, 547, 548, 551, 552, 554, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "0f": [489, 500, 510], "0ptyhzsp": 491, "0rc": 415, "0rc1": 415, "0true": 471, "0x105fd0cf8": 385, "0x105fe3b70": 385, "0x129602550": 385, "0x7fa4b67a4100": 475, "0x7fa4b67a4970": 475, "0x7fa4b69ea760": 496, "0x7fa4ba9c7a90": 496, "0x7fa4ba9c7bb0": 496, "0x7fa4bb1da0a0": 497, "0x7fa4bb544310": 499, "0x7fa4bb5587f0": 499, "0x7fa4bb7ec1c0": 487, "0x7fa4bb7ec310": 487, "0x7fa4bb7ec400": 487, "0x7fa4bc87e670": 496, "0x7fa4bc9bba00": 495, "0x7fa4bda95460": 499, "0x7fa4bf173370": 499, "0x7fa4cad03be0": 484, "0x7fa4ccb6d760": 569, "0x7fa4cd556280": 487, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 103, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 128, 129, 130, 131, 133, 134, 136, 140, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 171, 176, 179, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 252, 254, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 290, 292, 293, 294, 298, 299, 310, 311, 323, 324, 330, 331, 332, 341, 342, 344, 345, 370, 372, 375, 376, 380, 382, 385, 386, 388, 389, 392, 393, 395, 396, 397, 399, 400, 402, 405, 407, 408, 409, 410, 411, 412, 415, 416, 419, 422, 426, 427, 429, 430, 434, 436, 437, 438, 441, 442, 443, 444, 445, 446, 447, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 505, 508, 509, 510, 512, 516, 517, 518, 521, 522, 524, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 585, 586, 587], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 84, 86, 87, 88, 89, 90, 91, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 118, 121, 125, 126, 127, 128, 129, 130, 134, 135, 136, 138, 144, 145, 147, 150, 151, 153, 155, 157, 158, 163, 164, 165, 166, 167, 169, 176, 182, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 228, 231, 244, 245, 248, 249, 271, 284, 293, 299, 330, 332, 342, 373, 378, 380, 382, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 407, 408, 409, 413, 414, 416, 422, 427, 429, 440, 442, 445, 449, 451, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 508, 509, 510, 512, 518, 522, 528, 531, 533, 534, 535, 536, 546, 547, 550, 552, 555, 556, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 572, 573, 574, 584, 585, 588], "100": [19, 20, 26, 46, 47, 74, 94, 128, 136, 155, 156, 166, 207, 209, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 286, 342, 385, 386, 388, 393, 404, 414, 425, 456, 458, 461, 464, 469, 470, 471, 473, 474, 475, 477, 481, 484, 485, 486, 487, 488, 490, 491, 492, 495, 497, 499, 500, 501, 510, 514, 516, 517, 518, 522, 533, 536, 537, 540, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 585], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197, 202, 385, 388, 459, 486, 487, 490, 497, 500, 510, 536], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 104, 110, 155, 166, 169, 179, 486, 500], "100000": [74, 486, 508], "1000000": [51, 52, 54, 486, 569], "10000000": 569, "100000000000": 488, "1000e": 497, "1001": [444, 473, 474], "1002": 444, "10041": 144, "10045": [65, 273, 568], "10049": 456, "1006": 444, "101": [430, 455, 469, 481, 486, 580], "1012": 485, "1013": 445, "1014": 445, "101430": 481, "10172": 495, "102": [176, 462, 465, 468, 585, 586], "1021": 445, "1025": 445, "1026": 445, "10262943822890519": [96, 496], "1027": 445, "102877228833871": 496, "1029": 445, "10295505": 510, "102e": 486, "103": [144, 425, 448], "103000133": 501, "1031": 445, "1032": 445, "1032531953505502": 508, "1034": 510, "1035": 445, "1035002116788955": 462, "1036": 465, "1038": 445, "104": [469, 471], "1040": 445, "10409": 471, "10409446": 471, "10416667": 483, "1043": 445, "104317": [103, 487, 494], "1044": 465, "1045": 445, "1046": 403, "10470702368766069": 496, "10477": 510, "105": [82, 455, 502, 580], "1051": 445, "1052": 486, "1053": 445, "1054": 445, "1054498": 140, "1057": 445, "10592": 588, "105953": 510, "105e": 465, "106": [455, 580], "1061971e": 490, "106217": 83, "1062535e": 490, "1064": 486, "1065": 445, "1067": 445, "1069": 445, "107": [456, 480, 492], "1070": [445, 510], "1072542e": 490, "1073": 445, "10752883769757363": 496, "1076": 445, "1078": 445, "107e": [465, 486], "108": [442, 455, 580], "108034597491956e": 495, "108043": 469, "1082": 445, "1083": 445, "1084": 445, "1085": 445, "1085000": 469, "1086": 299, "1087": 445, "1088": 445, "1089": 445, "109": [425, 455, 457, 492, 503, 580], "1090": 445, "1092": [445, 465], "1093": [445, 465], "1098": 445, "1099306e": 490, "109e": 471, "10d": 475, "10e": [176, 486, 490], "10k": 197, "10th": [412, 424], "11": [67, 87, 91, 94, 128, 129, 133, 134, 217, 344, 389, 392, 394, 402, 409, 413, 425, 426, 447, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 491, 493, 494, 497, 498, 500, 508, 509, 510, 533, 535, 550, 562, 565, 586], "110": [486, 500], "1100": [445, 461], "110000": [487, 491], "1102": 445, "1102e": 458, "1103": 445, "110380": [83, 401, 466, 469, 471, 499], "1104": 445, "1105": 445, "1107": 445, "1108": 445, "111": [373, 392, 445, 469, 486], "1110": 445, "1111": [138, 147, 486, 510], "111140": [401, 466, 469, 471], "111159": [401, 466, 469, 471, 499], "11132": 64, "1115": 445, "111507416": 481, "111630": [89, 481, 499], "111797": 486, "11184": [65, 272, 567], "112": [456, 461], "11208": 65, "11220184543": 488, "1127": 445, "11291820875721864": 496, "113": 510, "1131": [393, 467], "1133": 445, "1134": 445, "1136": 445, "114416978060044": 480, "115": 67, "1150": 445, "11517": 510, "11553325504064559": [96, 496], "11587179071752986": 96, "116": [425, 457, 458, 464], "1160": 486, "11610": 510, "1162": 445, "1162290917256776e": 478, "1166": 445, "1167": [392, 399], "1169": 445, "116e": 67, "117": [425, 550], "1170": 445, "1172": 399, "1173775": 486, "1176": 445, "117877e": 486, "1179": 445, "118": [144, 469], "1183": 445, "118355": 486, "11839": 145, "119": [455, 457, 465, 469, 580], "1190": 445, "119432": 456, "1195": 445, "119e": 461, "11af4c": 425, "11e": 486, "12": [17, 38, 42, 67, 86, 87, 91, 103, 106, 107, 114, 115, 128, 145, 166, 169, 195, 196, 197, 199, 205, 208, 209, 221, 225, 231, 233, 238, 245, 256, 258, 268, 271, 272, 273, 284, 389, 391, 392, 393, 394, 396, 397, 402, 405, 408, 414, 425, 429, 430, 431, 443, 448, 456, 457, 459, 461, 462, 463, 464, 465, 466, 469, 471, 472, 473, 478, 479, 480, 483, 484, 486, 487, 488, 489, 492, 494, 495, 497, 500, 508, 510, 522, 533, 536, 537, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 554, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579], "120": [53, 400, 455, 460, 461, 463, 500, 544], "120000": 466, "120154": 486, "1204": 445, "1207": 445, "120e": [67, 510], "121": [67, 471, 494], "1210": 445, "1211": [445, 486], "121241": 469, "12148": 465, "1215": 445, "1216": 458, "12186": 510, "1219": 486, "122": [67, 144, 425, 455, 459, 494, 580], "1220": 445, "1226": 445, "1227": 445, "12276676166802643": 496, "122e": 470, "123": [87, 91, 397, 465], "1231": 446, "1234": 88, "123456789": [200, 386, 588], "1235": 445, "1237": 393, "1238": 445, "123890826": 86, "123892513": 86, "1239": 390, "123944": 83, "123e": 465, "124": [144, 397, 465, 486, 494], "1240": 445, "12423250e": 490, "1243": 510, "1244969200533408": 311, "1246": 445, "12493874": 490, "124e": 67, "125": [67, 128, 144, 461, 471, 492, 500, 510, 585], "12518": 470, "12525306": 484, "12546": 65, "1258925411": 488, "1258e": 497, "126": [67, 459, 486, 489], "12611": 145, "1264500e": 490, "126585": 456, "1266": 445, "1268": 445, "12688": 83, "1269263e": 490, "12697": 470, "127": [455, 465, 475, 476], "12704": [144, 145], "1271v": 300, "12751": 456, "1277": 391, "1278": 392, "12794487": 495, "128": [425, 481, 512], "12809": [103, 487, 494], "1281": 445, "12816": 510, "12856": 500, "1287": 445, "1289": 445, "128e": 459, "129": [451, 509], "1290": 445, "1291": 445, "1294": 445, "1299": 486, "12nan5": 459, "12r_": 53, "12th": [410, 424], "13": [67, 102, 105, 127, 128, 145, 206, 310, 389, 390, 394, 399, 404, 413, 423, 430, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 508, 509, 510, 518, 567, 569, 586], "130": 533, "1300": 445, "1301v": 38, "13030": 510, "1305": 445, "13061": 495, "131": 459, "1310": 510, "1312": 445, "13133": 510, "13152": 471, "1316": 445, "1317": 446, "1318": 445, "1319": [94, 445], "13197": 469, "132": 465, "13226": 510, "1323e": 470, "132472": 471, "132e": 461, "133": [145, 455, 549], "1331": 446, "1334": 446, "1335": 480, "1337": 446, "1339": 446, "133e": 459, "134": [145, 462, 465, 471], "1341": 446, "1342a": 156, "1343": 446, "1344": 486, "1345": 446, "1346": 446, "1347": 446, "13499879586502125": 472, "135": [38, 102, 145, 459, 475, 486, 489], "13500212963": 486, "1351e": 486, "1354": 446, "135498046875": 461, "1357": 446, "1359316": 510, "135e": 128, "136": 486, "1360": 446, "1361": 486, "1362": 446, "1367": 446, "1369": [393, 446], "137": [145, 465, 472], "1372": 446, "137254901960785": 475, "1373": 446, "1374": 446, "137521287529426e": 508, "1376": 446, "1376407570489014e": 478, "1377": 446, "1378": 446, "1379190199428797": 311, "137990": 486, "138": [425, 459, 473, 510], "1381": 446, "1386": 446, "1387": 446, "138e": 471, "139": [461, 465, 500], "13911": 510, "1393881668086242e": 483, "1394": 556, "13944023e": 488, "1395": 446, "1396": [385, 462], "13960": 510, "1397": 446, "1397412321592923": 496, "13e": 487, "13nan6": 459, "13t09": [462, 466, 467, 469, 495, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "13th": 424, "14": [28, 65, 67, 86, 273, 386, 389, 394, 397, 402, 404, 405, 414, 444, 455, 456, 459, 461, 462, 465, 469, 480, 481, 483, 486, 487, 488, 489, 491, 493, 494, 495, 498, 508, 509, 510, 511, 554, 564, 566, 568, 585], "140": 501, "1401": 446, "1406": 446, "14079": 144, "1408": [446, 510], "141": [309, 455, 460, 471, 486], "1411180": 469, "1412": 446, "14121": 471, "1412536400000000": 510, "14149953611195087": [96, 496], "14150": 471, "1419": [393, 447], "141945": 456, "142": [67, 425, 459, 486, 510], "14201": 144, "1421": 446, "14210": 459, "1426": 446, "142e": 486, "1432": 446, "1433": 446, "1435": 446, "1438": 179, "1438465e": 490, "1439110308062257": 496, "144": [459, 494, 510], "14419991": 97, "1442739329466746e": 495, "1443": 446, "1444": 446, "1445": 399, "14457": 510, "1446": 446, "1447": 446, "145": 486, "1451": 400, "14531053887243": 471, "1456": 446, "1456479e": 490, "146": 510, "14610": 588, "146472": 486, "1467": [138, 147], "147": [444, 455, 486, 492, 549], "1470": [446, 510], "1474": 446, "1475": 446, "1476": 446, "14773": 500, "147e": 486, "148": 465, "1482": 486, "1485314": 97, "1486415e": 490, "1489": [446, 471], "149": [461, 491, 494], "1492": 446, "1494": 471, "149445429667434": 472, "1495": 446, "1499472780781963": 311, "149e": 486, "14e": [466, 485], "14msts37sst": [473, 474, 499], "14nan3": 459, "14nan5": 459, "14th": [409, 412, 424], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 153, 154, 155, 156, 157, 158, 163, 164, 165, 167, 206, 375, 376, 380, 394, 402, 425, 429, 434, 439, 442, 443, 444, 446, 455, 456, 461, 465, 467, 469, 470, 471, 473, 474, 475, 477, 481, 483, 484, 486, 487, 488, 489, 491, 492, 494, 495, 498, 500, 510, 533, 541, 553, 555, 557], "150": [134, 144, 145, 425, 459, 461, 473, 474, 492, 510], "150071": 552, "1505": 446, "15076259": 97, "151": [425, 494], "1510": 140, "1510240e": 490, "1513": 480, "15140": 465, "1515": 446, "15154854": 97, "1517": 446, "152": [465, 471], "1521": 471, "1523": 473, "15246": 473, "152477": 500, "1527": 446, "153": 486, "1530": 487, "15319": 473, "153600": 487, "154": [425, 456, 486], "1543": 446, "154e": 471, "155": 425, "15518": 510, "1552": 467, "1553": [486, 510], "1554": 446, "1554106e": 490, "1556": [446, 486, 510], "1556008e": 490, "1558": 446, "156": [425, 461, 462, 465, 471, 488, 494], "1562": 446, "15621": 510, "1564": 446, "156525": 486, "156608": 578, "1567629e": 490, "1568": 446, "15686274509804": 475, "157": [425, 510], "1573": 446, "1576": 446, "157e": 480, "158": [145, 456, 462, 469], "1582": 446, "15848931924": 488, "1586": 94, "15899": 465, "1594": 446, "1597317": 97, "15990": 145, "159t": 52, "15e": 467, "15h14m00": 486, "15nan8": 459, "16": [16, 24, 53, 67, 94, 111, 112, 195, 389, 393, 402, 405, 406, 414, 430, 445, 450, 452, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 535, 571, 574, 575, 577, 579, 585, 586], "160": [31, 128, 425, 434, 475, 494], "1600": 474, "1600e": 457, "1605": 446, "16056": 465, "1606": 446, "1607": 485, "160e": 67, "161": [144, 393, 461, 471, 486], "1610e": [457, 486], "161250": 477, "1613279491744304": 496, "1616": 446, "1618850e": 490, "1619e": 102, "162": 67, "16227766": 492, "1622776601683795": [491, 492, 508], "16240": 509, "1626e": 466, "16287": 510, "1629219e": 490, "163": [475, 585], "1630": [446, 510], "16303": 471, "16303044": 471, "1634": 446, "164": 486, "1642": 456, "164e": 480, "165": 494, "1650": 510, "16506": 456, "16511": 471, "16511148": 471, "1658": 446, "165e": 465, "166": [425, 455, 471, 486, 549], "1660": 446, "166015625": 458, "1661916367760008e": 483, "1665478": 97, "166871893629602e": 483, "167": [425, 471, 477], "167219": 486, "1675": 446, "168": [486, 487, 510], "1681": 446, "1685": 446, "1686": 486, "1687": 86, "168702": 456, "169": 471, "1691": 456, "1695": 446, "1696": 446, "1697": 446, "1698": 461, "169871": 477, "16th": 424, "17": [20, 21, 40, 67, 86, 396, 399, 402, 434, 451, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 572, 573, 576, 578, 586], "170": 458, "17016482e": 489, "1702": 446, "17020": 465, "170218": 477, "171": 480, "1710": 447, "1711": 446, "1713": 458, "1715": 399, "1717": 510, "171749": 510, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 283, "172": 475, "17229679": 97, "173": 486, "1731": [446, 494], "1732": 486, "17320": 486, "1736": 465, "1737799900000000": 510, "174": 461, "1742": 67, "17445": 510, "1746": [446, 510], "1748": [446, 494], "1750": 446, "1751": 446, "17511": 145, "1753": 510, "1755": 446, "1756": 462, "1759": 446, "175e": 486, "176": [145, 425, 481, 486], "1760": 446, "1761": 446, "1762": 512, "1763": [447, 486], "1764": [446, 471], "176470588235294": 475, "1766": 447, "1768896e": 490, "177": [425, 500, 501], "17776": 456, "1778279410": 488, "177e": 486, "178": 445, "178442": 67, "1785": [446, 456], "1789e": 463, "1791": 446, "179475": 248, "1799": 446, "17a": [60, 486], "17e": 494, "17g": 50, "17th": 440, "18": [11, 87, 91, 144, 206, 389, 404, 410, 431, 437, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "180": [399, 418, 420, 425, 486, 492], "1800": [446, 474, 492, 499], "180000": [473, 474, 499], "1804": 486, "180458": 469, "18046952655570045": 311, "1805": 399, "1807": 447, "1808": [446, 486, 510], "181": 465, "1810": 480, "1811": 464, "1812": 446, "1813": 486, "181653": 567, "1818": 446, "1821": 446, "1822": 446, "1825": 486, "18257": 465, "182720": 543, "183": 461, "1830e": 461, "183139597": 86, "1834": 458, "1835": 94, "1836": 447, "1836544903987521": 496, "1837": 447, "18385658": 471, "18386": 471, "18392464": 524, "184": [86, 94, 439, 443, 465, 469, 473, 479, 483, 493, 494], "18400002": 479, "1841": 394, "1845": 447, "1846": 447, "18465": 510, "1849": 447, "184989894219835": 484, "185": 493, "1854": [447, 486], "1855": 447, "1857": 447, "1859": 447, "186": [438, 471, 486], "1861": 447, "1862": 447, "186484131475074": 342, "1866": 491, "186643": 510, "187": [431, 438, 471], "1871": 447, "1877": 395, "188": [438, 456, 486], "1883": 447, "1884": 447, "18842984749525210": 471, "1888": 447, "188e": 459, "189": [461, 490], "1890": 447, "1891": 447, "18921591": 490, "1893": 447, "1893e": [457, 486], "1894": 447, "1895": 447, "1896e": 457, "1898": 447, "18988": 510, "1899070e": 490, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 206, 389, 401, 403, 405, 425, 433, 434, 436, 448, 455, 462, 465, 472, 475, 476, 481, 483, 484, 486, 487, 492, 494], "190": [455, 480, 486, 570], "1901": 480, "1902": [65, 273, 568], "1903": 447, "1904": 447, "1905": 470, "1908": 447, "1909": 447, "190e": 461, "191": [144, 438, 455, 487, 498, 580], "1910": 182, "1912": 447, "1917": 510, "1918": 447, "1919": 447, "192": 145, "1920": 510, "1921": 447, "19214093": 97, "1922": 447, "1926": 447, "1926520e": 490, "1927": 447, "1928": 486, "1929": 447, "193": [455, 465, 549], "1930": 447, "1933": 447, "1934": 447, "19354": 471, "1936925": 97, "1937": [447, 486], "193e": 462, "194": [438, 465], "1943186": 97, "1947565": 97, "1949": 447, "195": [145, 242, 461], "1950rspsa": 52, "1951": 426, "1953": 414, "1953830": 97, "1955810e": 490, "1958e": 489, "196": [67, 456, 494], "1960784313725492": 475, "1961": [138, 147], "1962": 426, "1963": 486, "19644": 500, "1965tralm": 21, "1966": 426, "1969": 426, "196991563774588": 284, "197": [67, 471, 500], "1971": 396, "19736017641361556": 472, "1975": 426, "1976572e": 490, "1978": 486, "1979": [295, 301, 426, 583], "1979892": 471, "1980": 486, "1982": 37, "1983": 583, "1986": 397, "1986027": 510, "1987": 471, "19879005": 179, "1988": [139, 302, 426], "1988apj": [139, 302], "1989": 426, "199": [471, 494], "1990": [37, 426], "1990apj": [36, 37], "1991": 426, "1991mnra": 22, "19932878": 490, "1994": [426, 583], "1994a": [52, 53], "1995": [425, 426], "1995a": 293, "1995apj": 17, "1996": [27, 465, 484, 583], "1996mnra": 27, "1997": 508, "1997apj": 25, "1998": [87, 91, 426, 583], "1998apj": 28, "1999": [53, 200, 386, 588], "19991": 508, "199999809265137": 486, "19999999999999998": 464, "1999apj": 53, "19e": 491, "19th": 424, "1av4pndi": 457, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 111, 112, 130, 154, 155, 164, 178, 195, 197, 337, 378, 391, 395, 396, 398, 399, 400, 401, 404, 405, 406, 418, 428, 430, 431, 432, 433, 437, 439, 442, 446, 448, 449, 452, 455, 456, 458, 459, 460, 461, 463, 465, 469, 476, 480, 483, 487, 489, 491, 493, 495, 496, 497, 499, 500, 508, 520, 522, 524, 537, 583], "1dc": [82, 83, 89, 103, 106, 107, 111, 112, 117, 120, 121, 125, 144, 145, 151, 155, 156, 157, 166, 373, 378, 380, 393, 395, 401, 405, 427, 456, 464, 466, 469, 471, 477, 480, 481, 487, 488, 490, 494, 522], "1deg": 207, "1e": [19, 20, 26, 86, 100, 133, 134, 136, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 249, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 295, 301, 344, 360, 362, 385, 396, 457, 459, 461, 463, 465, 467, 469, 471, 473, 474, 477, 478, 479, 480, 481, 486, 489, 495, 497, 500, 501, 518, 522, 526, 550, 551, 552, 554, 557, 558, 562, 563, 565, 566, 567, 568], "1e0": 516, "1e10": [51, 156], "1e12": [516, 526], "1e2": [459, 516, 518], "1e3": [500, 526], "1e30": 560, "1e4": [489, 500, 501], "1e40": 517, "1e5": [463, 500, 518, 536, 537], "1e51": 52, "1e6": [45, 500, 514, 569], "1e7": [130, 569], "1f": 462, "1fhl": [431, 444], "1fhl_name": 71, "1h": 166, "1k": [103, 107, 111], "1kpc": 518, "1lhaaso": [57, 70, 452, 486], "1lhaaso_catalog": 57, "1rc1": 415, "1tev": [52, 53, 134, 474], "1yfctu8l": 483, "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 103, 105, 106, 107, 111, 112, 116, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 143, 145, 148, 149, 153, 154, 155, 156, 158, 164, 166, 169, 176, 179, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 214, 217, 218, 220, 221, 225, 229, 231, 233, 238, 240, 241, 245, 246, 249, 256, 257, 258, 264, 265, 267, 268, 271, 272, 273, 278, 283, 284, 290, 292, 293, 294, 295, 300, 301, 307, 310, 330, 332, 370, 373, 378, 380, 382, 385, 386, 389, 390, 394, 396, 397, 399, 400, 401, 402, 405, 408, 409, 410, 411, 412, 415, 422, 423, 425, 426, 427, 428, 429, 430, 437, 442, 443, 444, 445, 446, 447, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 508, 509, 510, 518, 521, 522, 524, 529, 530, 531, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 587], "20": [16, 38, 83, 87, 89, 91, 103, 106, 107, 111, 112, 157, 158, 163, 165, 167, 176, 196, 197, 199, 205, 208, 209, 214, 293, 310, 386, 389, 390, 391, 393, 398, 400, 403, 405, 410, 448, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 491, 492, 494, 495, 497, 499, 502, 508, 509, 510, 512, 531, 533, 534, 535, 541, 542, 543, 546, 547, 556, 559, 564, 569, 570, 585], "200": [52, 87, 91, 136, 207, 409, 438, 455, 461, 462, 465, 471, 475, 477, 486, 492, 495, 510, 549, 585], "2000": [88, 103, 106, 107, 111, 112, 130, 234, 239, 241, 243, 259, 266, 426, 473, 474, 475, 491, 500, 510, 583], "2000000": 469, "20000000000000004": 464, "20009124": 490, "2000apj": 284, "2000e": 495, "2001": [94, 426, 465, 583], "20016447648031e": 483, "2002": [87, 91, 299, 484], "2003": [300, 484], "2003mnra": 300, "2004": [86, 94, 414, 484, 502], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 583], "200503": 456, "2005a": 486, "2006": [31, 33, 400, 465, 472, 479, 483], "200638": 510, "2006a": 284, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 121], "2007": [403, 583], "20072608": 490, "2008": [38, 86, 229, 280, 457, 500, 512, 550], "2008aj": 38, "2009": [136, 303, 427, 465, 583], "20097159": 490, "2009851": 490, "20099855": 490, "201": [52, 492], "2010": [130, 156, 229, 248, 307, 386, 453, 550, 583, 588], "2010a": [248, 284], "2010mnra": 156, "2011": [229, 457, 512, 550], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 427, 583], "2013": [102, 140, 405, 411, 416, 425, 484], "20136": [82, 311, 502], "20137": [311, 502], "2013aph": 283, "2013apj": 60, "2014": [138, 147, 424, 512], "2015": [52, 86, 399, 402, 424, 500], "20151": 311, "2015apj": 61, "2015jheap": 284, "2016": [26, 399, 402, 424, 427, 484, 491, 499], "2016apj": 58, "2017": [229, 390, 392, 402, 405, 422, 424, 427, 471, 499, 550], "2017apj": [59, 62], "2017icrc": 499, "2018": [52, 390, 391, 392, 393, 394, 395, 396, 400, 402, 404, 405, 424, 451, 499, 502, 583], "2019": [392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 424, 446, 447, 472, 583], "202": [471, 477], "2020": [206, 394, 405, 406, 407, 408, 409, 424, 472, 473, 480, 492, 572, 573, 574], "2021": [89, 229, 407, 409, 424, 451, 495, 499, 550], "2021345e": 490, "2022": [410, 411, 414, 424, 427, 501], "2023": [397, 412, 413, 414, 424, 427], "2023arxiv230517030c": 57, "2024": [414, 424, 499], "2024e": 509, "2025": [105, 127, 414, 423, 462, 466, 467, 469, 495, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "2026": [397, 427], "2028": 427, "203": [455, 570], "2030": [397, 427], "2031": 427, "20326": [310, 458], "20327": [310, 458], "2033": 427, "20339": 310, "2034": 427, "20343": 310, "20344": 310, "20345": 310, "20346": 310, "20349": 458, "2035": [126, 128, 427], "20350": 458, "2036": [126, 128], "2037": 427, "20372": 499, "2038": 427, "2039": 427, "20396": 458, "20397": 458, "204": [144, 455, 471, 476], "2040469e": 490, "2041222e": 490, "20421": 458, "20422": 458, "204381": 548, "2045": 397, "2046": 427, "2049": [427, 486, 510], "205": [438, 471, 492], "2050": 427, "20508075688775": 486, "2051": 427, "20517": 458, "20518": 458, "20519": 458, "205192": 486, "205201": 559, "20521": 458, "2053315944536949e": 499, "205357": 486, "2054": 427, "20559": 510, "2058705e": 490, "206": [455, 486, 570], "2061": 486, "2062580e": 490, "2064": 427, "2064335": 97, "2065": 427, "2066": 427, "2068682e": 490, "2069": 427, "207": [467, 471, 475, 494], "2071": [397, 427], "2075": 413, "207520865": 479, "207521165": 483, "207521465": 479, "207521627": 483, "2076": 427, "2077": [427, 480], "2079930e": 490, "207e": 465, "208": [60, 455, 467, 489, 498], "2085": 427, "2089": [399, 429], "20898": 458, "20899": 458, "209": 471, "20900": 458, "2093": 427, "2095": 471, "2097": 427, "2097e": 461, "2098": 427, "20deg": [473, 474], "20e": 490, "20th": 411, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 130, 151, 388, 389, 434, 440, 449, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 537, 585], "210": [438, 486], "2103": 486, "2104": 428, "2104353e": 490, "2106": 428, "2108": 428, "211": [486, 487], "2111": 428, "2112": [428, 509], "21134890398": 488, "2114": 428, "2115": 428, "211770556360534": 481, "2118": 428, "2119": 428, "211e": 486, "212": [67, 438, 453, 461, 486], "2121": 428, "2121164e": 490, "2123": 428, "21236e": 456, "2124": 428, "2126": [428, 456, 464, 466, 469, 471, 477, 480, 499], "2128": 428, "2129": [399, 429], "213": 463, "2130": 428, "2131": [428, 486], "2132": 428, "21325": 500, "2133": 428, "2136": [398, 430], "2139": 428, "214": [459, 465], "2140": 428, "2141": 428, "2142": 428, "2145": 428, "2146": 428, "21464892": 510, "214e": 461, "215": [67, 438, 452, 486], "21500000000003": 544, "2151": 428, "2152": 428, "21525804550772332": 472, "2153": [428, 486], "2154": [428, 486], "2155": [432, 457, 479, 480, 483, 484, 486, 496, 510, 550], "215686274509824": 475, "2157": 428, "2159e": 102, "215e": 486, "216": [242, 455, 461, 492, 494, 549, 570, 579], "2160": 428, "2162670e": 490, "2163": 428, "2164425e": 490, "2166": 428, "2169": 428, "217": [461, 486], "2171": 428, "21731921e": 492, "21733761e": 492, "21735587e": 492, "218": 61, "2190": 403, "2192": 429, "2197": 471, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 103, 106, 107, 111, 112, 136, 171, 176, 179, 194, 195, 204, 207, 389, 424, 437, 455, 461, 462, 463, 464, 465, 470, 478, 480, 483, 486, 487, 491, 492, 493, 497, 498, 501, 502, 508, 509, 510, 521, 528, 531, 533, 534, 537], "220": [486, 494, 585, 586], "2200": 429, "2201": [65, 272, 486, 510, 567], "2202e": 510, "2204": 429, "2206": 429, "220e": 486, "221": [399, 438, 455, 570], "22149": 465, "2217": 429, "2217412e": 490, "2218": [402, 430], "2219": [401, 430], "222": [58, 455, 486, 494, 570], "2221": 486, "22245374e": 128, "2227134679628": 480, "22271346796282": 480, "222713467962826": 480, "2229": [398, 429], "223": 494, "2230": 429, "2231": 486, "2235": 429, "2237": [429, 510], "2238": 429, "2239": 429, "224": 480, "2240": 429, "2243": 429, "2244": 429, "224436": 510, "225": [96, 310, 311, 409, 438, 460, 486], "2250": 429, "22500": 467, "2254": 429, "2255": [403, 496], "225575051666": 486, "2255890": [479, 483, 496], "2257": 429, "2259": 429, "226": [455, 471, 500, 570], "22608": 487, "2262": 429, "22635140877790516": 489, "2264": [397, 429], "22646133647326874": 489, "2264827111476982": 489, "22648881839710966": 489, "2265163003209506": 489, "22662622801631419": 489, "227": [455, 498], "2270": 402, "2272": 429, "2274": [404, 430, 456], "2276": 429, "2277": 429, "2278": 429, "2278975306934438": 489, "2279": [402, 430], "227e": 486, "228": [295, 301, 393, 399, 462, 467, 486, 491, 502], "2287": 429, "2289": 429, "229": [67, 486], "2290": 404, "2292": 430, "2294": 429, "2296": 429, "2297": 429, "22974080e": 500, "2298": 429, "22e": 491, "22nd": 424, "23": [77, 94, 179, 385, 389, 411, 424, 448, 458, 461, 463, 464, 465, 470, 480, 483, 486, 489, 492, 494, 496, 503, 510, 533], "230": [438, 465], "2300": 429, "2304": 403, "2305": 429, "230542e": 486, "2307": [64, 65], "2308": 430, "231": [438, 455, 511], "2310": 429, "2313": 430, "2314": 430, "23166729767495": 480, "232": 62, "2320": [430, 486, 487], "2321": 430, "2323": 430, "2326": 430, "2327": [486, 494], "23273": 500, "233": 462, "2330": 430, "23306": 465, "2332": 494, "2334": 430, "2335": 430, "2338": 430, "2339": [458, 486, 510], "234": [438, 481], "234132519034915": 492, "23413252": 492, "2342": 430, "2343": 430, "234359264373779": 491, "2343e": 494, "2344": 430, "2345": 430, "2346": 430, "2347": 430, "235": 438, "2350": 431, "2351": 430, "23523": [149, 176, 214, 422, 461, 462, 470, 478, 487, 489, 491, 502, 508, 509, 521, 524, 584], "23526": [149, 214, 461, 462, 470, 478, 487, 489, 491, 502, 508, 509, 584], "235294117647083": 475, "2354": 430, "23559": [461, 462, 478, 487, 491, 508, 509, 531, 533, 534, 584], "2356": 430, "2357": 494, "2358": 430, "2359": 430, "23592": [461, 462, 478, 487, 491, 508, 509, 531, 533, 534, 584], "236": [438, 486], "2360": 430, "2362506e": 490, "23628": 500, "2365": 430, "2366": 430, "2367": 430, "2368": 430, "237": 456, "23734": 510, "2375": 430, "2377": 430, "2378": 430, "2379": 430, "238": [455, 469, 549, 570], "2381": 430, "238298": 456, "2384": 456, "2385": 430, "239": [67, 471, 480], "23905561": 490, "239439": 510, "239557417": 86, "2399": 486, "239e": 486, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 388, 389, 402, 406, 441, 446, 456, 462, 465, 480, 483, 486, 487, 492, 494, 499, 500, 508, 511, 533, 550, 557, 566, 567, 568], "240": [103, 106, 107, 111, 112, 125, 486, 487, 488, 522], "2400": 430, "2401": 430, "2404": 430, "2405": 431, "240e": 461, "241": 486, "2412": 430, "2414": 486, "2419": 456, "2428255": 488, "242835": 67, "243": [461, 488], "2431": 486, "2432": 465, "2433": 431, "2435": 431, "243742672227972e": 483, "244": [67, 438, 461], "2440": 486, "2441": 431, "244140625": 494, "2443672e": 490, "2444": 431, "2446": [431, 494], "2448": 431, "2449": 431, "245": 438, "2450": [431, 494], "245152": 471, "245296": 551, "2454": 431, "2455": 431, "24579": 488, "2459": 431, "246": [438, 488], "2461": 431, "24611324074": 486, "2463": [405, 431], "2464": 431, "2465055e": 490, "2468": 431, "24685677e": 490, "247": [67, 438], "2470": 431, "2471938975366008": 310, "2472": 431, "2475": 431, "2476": 431, "2477": 431, "2478": 431, "2479": [431, 509], "248": [438, 570], "2481": 431, "248122": 486, "2483": 431, "2485": 508, "2486": 431, "249": [22, 438], "2490": 431, "2491": 431, "2492": 431, "2493": 431, "2496": 431, "24968": 456, "2497": 431, "2498": 431, "2499": 431, "249965667724609": 491, "249e": 145, "24e": [486, 494], "25": [33, 52, 87, 91, 102, 144, 145, 155, 166, 179, 295, 301, 389, 402, 409, 424, 445, 452, 453, 456, 457, 461, 462, 465, 471, 480, 481, 483, 486, 490, 492, 494, 510, 542, 547], "250": [492, 583], "2501": 431, "250185": 491, "2502": [431, 471], "2505": 431, "2505121": 97, "2505703": 481, "2509": 486, "251": [465, 469], "2510": 431, "251185": 510, "2511884200000000": 510, "2511886431": 488, "25162e": 456, "2518": 486, "251932": 486, "252": [438, 471, 486], "2520": 431, "2521": 431, "2523": 431, "2525": 431, "2528": 431, "252e": 480, "253": [464, 494], "2535": 431, "2536": [431, 494], "2537": 494, "2538": 431, "254": 438, "2540": 431, "2546": 431, "254901960784338": 475, "25496": 510, "254e": 480, "2551": 431, "2552": [431, 486], "2553": 431, "2555": 406, "2557": 431, "255750516626": 486, "2558": 431, "2559": 431, "256": [67, 441], "2560538e": 490, "2561": 431, "2562": 431, "2563": 431, "2564": 431, "2567": 431, "2568710719919036": 472, "257": [144, 464], "2574": 431, "25743553e": 489, "25763": 465, "257642": 486, "257836": 544, "2579999": 499, "258": [464, 548], "2580": 431, "25823909e": 488, "2585": 431, "2587": 431, "2589254117941673": 508, "259": [464, 510], "2591e": [457, 486], "2594": 431, "2595": 431, "2595e": 469, "259e": [145, 465], "25b": 17, "25e": 494, "25t_": 53, "25th": 411, "26": [19, 87, 91, 145, 389, 424, 452, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 512, 560, 578], "260": [441, 510], "2604": 431, "2609": 494, "261": [441, 510], "2616": 431, "26173": 465, "2619": 431, "262": [441, 465, 494, 510], "2620": 431, "262554796103245": 508, "2625818241224747": 489, "2627": 431, "262728": 499, "26272868097919794": 496, "2628525e": 490, "262964": 579, "263": [144, 145, 465, 494], "2633e": 470, "2635": 431, "2635108e": 490, "2637": 431, "2639554729438709": 496, "264": [144, 441, 471], "2645": 431, "26475": 467, "2648150": 97, "2649e": 489, "265": [32, 145, 399, 456, 465, 471, 494, 510], "2651": 431, "2654": 431, "266": [144, 145, 399, 464, 465, 471, 473, 477, 492, 494, 510], "2660": 431, "266192": 456, "26665050077722524": 496, "2667": 432, "267": [67, 145, 464, 465, 471, 494, 499], "2672": 432, "2673": 432, "26739753": 97, "2674": 432, "268": [411, 455, 465, 471, 486, 494, 508, 510, 549], "2681": 432, "2684": 432, "2685": 432, "268663733018811": 496, "2687": 432, "26883694": 510, "26887783978974283": 496, "2689": 471, "269": [455, 460, 475, 510], "2692": 432, "269385": 486, "269627": 499, "2697": 432, "2699878e": 490, "26a": [39, 40, 50, 52, 53, 248, 284, 293, 486], "26e": [486, 494], "26th": [407, 424], "27": [145, 389, 391, 452, 455, 461, 465, 471, 483, 485, 487, 498, 510, 585], "270": [458, 465, 486, 494, 510], "2703": 432, "2705": 432, "27057337686547633": 496, "2707": 432, "2708": 248, "2709": 432, "27093776e": 490, "2709748590921": 480, "271": [461, 464, 465, 469, 510], "2711": 432, "2712": 432, "2713": 432, "2715": 432, "271777777777796": 458, "27177778": 94, "2718": 432, "2719": 432, "272": [464, 465, 486, 494], "2720": [406, 433], "27209": 510, "2723": 432, "2725": 432, "2726": 432, "2726e": 510, "2727": 432, "2727693": 499, "2727e": 461, "2728": 432, "2729": 432, "273": [83, 441, 459, 465, 510], "2730": 432, "2731": 432, "2733": 432, "2734": 128, "2735": 432, "2737": 432, "2738": 432, "2739": 432, "274": 492, "27409496735322464": 496, "2741": 432, "2742": 432, "2743": 432, "274509803921596": 475, "2746": 432, "2747": 432, "27473": 471, "275": [464, 486, 578], "2750": 432, "2751": 432, "2752": 432, "2753": 432, "2755": 432, "2756": 432, "2759": 433, "276": [441, 455, 570], "2761": 433, "2762": 433, "2764": 433, "2765": 433, "2767": 433, "2768": 433, "277": 464, "2771": 433, "2772": 433, "27727": 494, "2774e": 463, "2775": 433, "277522283785622": 472, "2776": 433, "2777": 433, "2777074437073429": 496, "2778": 433, "2779": 433, "278": [27, 441, 464, 477, 486, 494], "2781": 433, "2782": 433, "2783": 433, "2784": 433, "2785": 433, "2785e": 461, "2787": 433, "2788": 433, "2789": 433, "278e": 465, "279": 441, "2790": 433, "2791": 433, "2792": 433, "2793": 433, "2794": 433, "2796": 433, "2797": 433, "2798": 433, "2799": 433, "27ddeti": 491, "27e": 486, "27t20": 89, "28": [21, 24, 67, 94, 144, 145, 394, 424, 459, 461, 463, 464, 465, 471, 473, 477, 483, 486, 488, 491, 492, 494, 499, 510], "280": [67, 441, 461, 464, 492], "2800": [473, 494, 510], "2801": 433, "2802": 433, "280268045755": 480, "2803": 433, "2804": 433, "2805": 433, "2808": 433, "2809": 433, "281": [464, 486], "2810": 433, "2811": 433, "28118133544922": 486, "2812": 433, "28120079": 486, "2815": 433, "2816": [433, 494], "2817": 433, "2818": 433, "2818047723094509": 496, "28183829312": 488, "282": [144, 145], "2820": 433, "2822": [433, 494], "2823": 433, "2825456e": 490, "2827": 433, "28275990e": 488, "2827988e": 490, "2828": 433, "2829": 433, "282951078740491e": 483, "282e": 486, "283": [441, 455, 464, 570], "2832": 433, "283218": 456, "283487": 486, "2837": 433, "28382603": 490, "2838398": 499, "28385358839966657": 496, "2839": 433, "284": [464, 486, 588], "2841": 433, "2842": 433, "28429": 471, "2845": 433, "2846": [433, 471], "285": [441, 464, 480], "2852": 494, "28551": 145, "2859229": 488, "285f": [83, 88], "286": [441, 464, 488], "2861432787940619": 496, "286e": [465, 486], "287": [52, 53], "2872": 434, "28720322": 97, "2874": [434, 510], "28755283551095173": 496, "2878662980210884": 311, "288": 128, "2880470e": 490, "2885": 434, "288e": 459, "289": [441, 464], "28905": 500, "2891": 434, "28958": 465, "2896": 434, "2897": 434, "28e": [103, 459, 469, 471, 487, 500], "29": [67, 145, 278, 400, 410, 414, 424, 452, 456, 459, 462, 464, 465, 471, 476, 477, 479, 483, 486, 492, 494, 495, 499, 508, 510], "290": [442, 464, 472, 488], "2900": 494, "290098": 488, "2903": [434, 494], "2903e": 463, "2907": 434, "291": 441, "2912": 434, "29158": 145, "29170324": 487, "291e": 510, "2922477": 97, "2923272203680937e": 483, "2924": 434, "2927": 434, "2929": 434, "293": 464, "2930": 486, "2931": 434, "2932": 434, "29355238360800506": 496, "2938": 434, "2939": 434, "294": [455, 480, 570], "2942": 407, "2943": 434, "2944": [408, 434], "2945": 434, "2947": 434, "2948": 434, "295": [441, 455, 498], "2950": 434, "2951": 434, "2953": 471, "2956": 434, "29585273e": 500, "2959": 494, "295e": 486, "296": 441, "2965": 434, "2966": 434, "2967": 434, "297": [455, 456, 549, 570], "2971e": 486, "2974": 434, "2976": 434, "2978e": 457, "298": [455, 464, 471, 486, 570], "2981": 434, "2984": 434, "29882214027996945": 496, "299": [441, 464, 486], "2990": 434, "2991": 434, "2992": 434, "2993": 434, "2995484265169": 484, "2996": 510, "2998": 434, "2999": [434, 486], "299940468335294": 471, "299995937905366": 471, "299e": 486, "299t": 53, "29t20": [479, 483], "29t21": 483, "29t22": 483, "29t23": 483, "29th": 424, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 237, 391, 396, 401, 404, 405, 406, 418, 426, 432, 445, 446, 447, 455, 465, 467, 468, 471, 492, 493, 510, 520, 523, 534, 535, 536, 548], "2degx2deg": 473, "2e": [201, 456, 458, 459, 473, 474, 483, 486, 489, 494], "2e3": [201, 492], "2e6": 500, "2f": [374, 456, 462, 496, 509, 586], "2fhl": [58, 71, 431, 443, 444, 486, 510, 519], "2hwc": [59, 72, 431, 437, 445, 486, 519], "2k": [103, 107, 111], "2m": [248, 284], "2nd": [60, 410], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 453, 486], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 101, 103, 106, 107, 111, 112, 113, 118, 121, 128, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 220, 229, 237, 240, 249, 272, 278, 280, 283, 284, 292, 293, 294, 299, 310, 311, 332, 341, 362, 373, 378, 380, 382, 385, 386, 388, 389, 391, 396, 397, 399, 400, 401, 402, 404, 409, 410, 411, 415, 417, 422, 425, 426, 427, 429, 430, 435, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 511, 512, 514, 517, 518, 521, 522, 526, 528, 530, 531, 533, 534, 537, 541, 543, 544, 546, 547, 550, 555, 556, 558, 559, 560, 561, 563, 564, 567, 569, 573, 574, 578, 582, 583, 585, 586], "30": [24, 52, 67, 83, 96, 103, 114, 115, 144, 156, 195, 310, 311, 392, 393, 398, 405, 412, 424, 426, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 522, 528, 533, 534, 541, 542, 556, 559, 560, 561, 564, 569], "300": [74, 87, 91, 293, 464, 466, 470, 473, 474, 477, 480, 486, 500], "3000": [395, 486, 536], "30000": 486, "3000000": 569, "30000000": 569, "3000020211954284": 471, "3000e": 457, "3001": 434, "30015e": 456, "3002": 434, "3003": 494, "3004625872247901": 470, "3005": 434, "3006": 510, "3006942": 97, "3007": 434, "301": [441, 464, 477], "3011061699260256": 496, "3012": 434, "3013": 486, "301668796295": 486, "302": 464, "3020791585772495": 310, "30287": 465, "3028e": 494, "302e": 486, "303": [461, 464, 486], "3030": 434, "3032": 434, "3034": 486, "3035": 434, "3037": 434, "3037632e": 490, "3038": [434, 510], "3039": 434, "304": [457, 464, 479, 480, 483, 484, 486, 496, 510, 550], "3041": 434, "3042": 434, "3043": 494, "3045": 434, "3046875": [487, 494], "3049664466089965": 311, "304_steadi": 457, "305": [67, 464], "3051": 434, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 434, "3053": 434, "30535345877453707": 496, "3054": 434, "3054538213469855": 472, "30561": 145, "3058": 434, "3058422e": 490, "305e": 486, "306": [441, 585], "3060": 434, "306196370000000": 510, "3063": 434, "3069": 434, "306e": 486, "307": 464, "3070": 434, "3071": 486, "3072": 434, "3074": 434, "3075": 409, "3076": 434, "307e": 486, "308": [464, 471, 544], "3080": 434, "3081": 434, "3083": 434, "3085": 434, "3086": 434, "3088": 434, "3089": 434, "309": [455, 494, 498], "3091": 434, "3092": 434, "30997": 510, "30a": 284, "30d00m00": 412, "30diwgv": 483, "30e": [457, 490, 494], "30t00": 483, "30t01": 483, "30t02": 483, "30th": 397, "31": [144, 145, 394, 395, 408, 409, 422, 449, 455, 457, 459, 460, 461, 462, 464, 465, 469, 472, 475, 479, 480, 483, 486, 487, 488, 491, 492, 494, 497, 501, 508, 510], "3100": 434, "3106": 434, "31060624622": 577, "31061133404": 575, "31062175004": 576, "31067517": 486, "3107": [486, 510], "311": [544, 586], "3110": 435, "3111": 435, "3112": 435, "3113": 435, "31139074e": 489, "3114": 435, "311489174710791e": 510, "3116": 435, "3117988e": 490, "31186857659616535": 496, "3119611261122878": 496, "312": 441, "3122": 436, "3123": 436, "3124": 436, "3125": 436, "3126": 436, "3127": 436, "3129": 436, "313": [464, 470], "3130": 436, "3131": [437, 494], "3135914081482271": 496, "3136": 437, "313714614138": 487, "3138": 437, "314": 446, "3140": 437, "3141": 437, "3145": 437, "3148": 437, "315": 486, "3152": 437, "3153": 437, "3155": 437, "315767542862533": 508, "3158": 437, "316": [464, 500, 501], "3162": 437, "316227": 486, "316227766016838": 491, "3165": 437, "3168": 437, "3169": 437, "317": [441, 464], "3173": 437, "3178": 437, "317a": 284, "317e": [457, 486], "318": 441, "3180": 437, "3182": 437, "31834": 145, "3185": 437, "3189697265625": 461, "31898": 145, "319": [442, 500], "3191": 437, "3195": 510, "3197": 437, "319725": 499, "3199": 437, "32": [83, 144, 195, 455, 461, 465, 467, 469, 476, 483, 491, 492, 510], "320": [103, 106, 107, 111, 112, 125, 486, 487, 488, 494, 522], "3202": 437, "3207": 437, "3208": 437, "32095": 510, "321": [475, 480], "3211": 437, "3216": 437, "3217": 437, "3219": 437, "322": 464, "3222": 437, "3228": 437, "3229": 471, "323": 464, "3230": 437, "3232943": 352, "3233356": 352, "32377509405904137": 96, "323779": 299, "3237948931463171": 496, "3238": 437, "3241": 437, "3243": 437, "3246": 437, "32465247": 495, "325": 464, "3254": 437, "3257": 437, "3258": 437, "325e": 462, "326": 441, "3262": 437, "32684": 510, "32684833": 499, "327": 471, "3272": 437, "3276": 437, "3277": 437, "3278": 437, "3279": 437, "3279955e": 490, "328": 471, "3281": 437, "3283": 437, "3284": 437, "32843": 510, "32847": 456, "3285": 437, "329": [96, 310, 311, 455, 479, 483, 486, 496, 524, 570], "3293": 437, "3299": 486, "329e": [461, 486], "33": [480, 482, 483, 484, 485, 489, 492, 510, 524], "330": [442, 464, 494], "3301": 437, "33013e": 456, "3302": 437, "3302565e": 490, "3303": 437, "330376": 67, "3304": 437, "3305": 437, "330505": 499, "33055e": 456, "3306": 437, "3307": 437, "3308": 437, "3309": 437, "331": 480, "3310": 437, "3314": 437, "33164865722698683": 496, "3319": 437, "3319831545301117": 310, "332": [67, 442, 500], "3320": 437, "3323": [437, 487], "332525": 486, "3328": 437, "332e": [465, 471], "332f": [30, 31, 32, 33], "333": [139, 302], "3330487": 97, "3331": 510, "3331761": 97, "3333": 437, "33333333": 385, "3333333333333344": 475, "3335": 437, "33368e": 456, "3337": 437, "3338": 437, "334": [128, 500], "3342": 437, "3343": 437, "3346": 437, "3347": 437, "33484": 456, "3349": 437, "3349654391": 488, "334e": 486, "335": 442, "3353": 437, "3357": 437, "3358": 437, "335e": 459, "336": [475, 486], "3363": 437, "3364130e": 490, "336444e": 486, "336606": 456, "3368855e": 490, "3369": 437, "337": [442, 464], "3374": 437, "3377": 437, "33787": [96, 496], "33788": [96, 145, 496], "33789": [96, 496], "3379": 437, "33790": 496, "33791": 496, "33792": 496, "33793": 496, "33794": 496, "33795": 496, "33796": 496, "33797": 496, "33798": 496, "33799": 496, "338": [442, 455, 482, 486], "33800": 496, "33800122": 97, "33801": 496, "3380311e": 490, "3381": 437, "339": [442, 461, 475], "3390": 437, "3392": 437, "3393": 437, "3395": 437, "3397": 437, "339835555384604": 496, "3398360": 490, "33983991887701287": 96, "3399": 437, "33e": [467, 481], "34": [52, 53, 67, 425, 456, 471, 479, 483, 487, 492, 494, 510], "34005": 456, "3402": 437, "3403": 437, "340391": 510, "3404": 437, "34047": 456, "3406": 437, "3409": [94, 437], "341": 456, "3413": 437, "3416": 437, "3418": 437, "342": 442, "3420": 437, "3423": 437, "3426": 437, "3428": 437, "3434": 437, "3438": 437, "3439": 437, "343e": 459, "344": 486, "344238": 510, "3443842": 499, "3445": 437, "3446": 437, "3447": 437, "3449": 437, "344e": 67, "345": [300, 456, 494], "3453": 437, "3454": 437, "345692": 510, "3458": 437, "346": 494, "34613054105945": 472, "346488e": 486, "3466": 437, "3468": 437, "347": [442, 458], "3471": 437, "3474": 437, "348": [36, 37, 442, 461], "3480": 437, "3481e": 469, "3488": 437, "348e": [67, 486], "3491": [437, 465], "3493": 144, "34932": 145, "349530550405035": 489, "349530725254468": 489, "34953073943366": 489, "34953075819191": 489, "34953077463306": 489, "34953079334042": 489, "349530807529028": 489, "349535814693404": 489, "349536723056637": 489, "349537158300407": 489, "349537804239922": 489, "34953807814367": 489, "34953910575007": 489, "34953932636892": 489, "349542158419318": 489, "349559366703698": 489, "349655": 488, "34971209244579": 489, "349724940685938": 489, "3499075e": 490, "349e": 465, "34e": [486, 494], "35": [67, 402, 409, 422, 455, 461, 479, 482, 483, 486, 489, 497, 499], "350": [475, 481, 488], "350105": 471, "3502": 486, "35030398537787": 489, "3503706026275275": 496, "3504": 510, "35052105086856": 489, "350556388466543": 489, "350d": 475, "351": [442, 486, 510], "3514e": 509, "3515": 437, "352": [442, 486], "3521": 458, "3523": 437, "3529": 437, "3529411764705888": 475, "353": [24, 442, 510], "3535": 439, "353592500058824e": 508, "3536": 456, "353e": 471, "354": 475, "3544": 437, "35569283": 490, "355804": 510, "3559": 437, "356": 510, "3561": 437, "3568": 437, "357": [486, 510], "35722435185": 486, "3576e": 458, "358": [471, 486, 510], "3583": 471, "3584": 437, "359": [442, 471, 486, 510], "3590188e": 490, "3592": 437, "3599": 473, "359e": 510, "36": [67, 86, 151, 330, 458, 471, 473, 486, 487, 490, 510], "360": [399, 492, 512], "3600": [464, 473, 474, 492], "36014": 469, "36073833513766157": 496, "361": [67, 442], "3619e": 509, "36228879": 510, "36273": 510, "363472509034498": 496, "3639946": 481, "364": 442, "365": [455, 570], "3659253e": 490, "366": [488, 509], "366486": 488, "36669663417038234": 496, "3669": 439, "367": [442, 475, 494], "3674884": 486, "368": 121, "36834038301420274": 496, "368346217294295": 96, "3684": 439, "3689322e": 490, "369": 442, "3690": 510, "3699": 439, "36e": [485, 486], "37": [456, 457, 462, 464, 467, 488, 489, 500, 586], "370": [475, 486, 494], "370113": 566, "37058": 145, "371": 442, "3710784e": 490, "3712": 439, "3713": 439, "3715810e": 490, "3718745": 97, "372": [35, 128, 510], "3720": 439, "3722": 439, "3725490196078436": 475, "3728": 439, "373": 471, "3733": 439, "373892759762174e": 483, "3739292e": 490, "374": 475, "3740": 439, "37455141": 510, "3748": 439, "375": [442, 492], "3750": 471, "37506": 510, "37517": 465, "3752": 439, "3759377929871826": 496, "376": 67, "3760": 439, "3761": 439, "3765": 456, "3777": 439, "37773": 465, "3779": 510, "3783": 439, "3784": 144, "379": [442, 461], "3792": 494, "3796": 439, "3797": 439, "38": [22, 67, 455, 456, 458, 468, 473, 476, 486, 492, 494, 510, 569], "3802": 439, "3804": 439, "3806": 439, "381": [455, 476, 477, 494], "3810": 439, "3812": [486, 510], "3812120e": 490, "3812160e": 490, "38143003": 97, "3817": 439, "38258165e": 488, "382629": 573, "3829": 510, "382e": 461, "383": [67, 442, 486, 492], "3833": 439, "3837": 439, "383e": 67, "384": 488, "3841385": 488, "3842": 439, "3846": 439, "3848912826152664e": 510, "3856": 439, "385e": 145, "3860": 439, "3862": 448, "387": [442, 510], "3872": 486, "3873": 439, "3874": 439, "3876": 439, "387834": 510, "388": 548, "388405": 510, "3885947175689592": 496, "3886270e": 490, "3887": 439, "389": 390, "3892": 439, "3895": 439, "3898": 439, "389e": 510, "39": [17, 18, 21, 22, 24, 25, 27, 59, 145, 462, 467, 480, 485, 486, 492, 500, 548, 569], "390": 437, "3904": 439, "39042": 86, "3905": 439, "3906": 439, "39090679010462": 480, "391": 486, "3915": 439, "3918": 439, "392": [442, 462], "39200283e": 483, "392156862745098": 475, "39224": 465, "3925": 448, "393": [210, 211], "3933": 439, "3935": 458, "3936": 439, "394": 442, "3941": 439, "3945": [458, 486], "3947637541758": 480, "394765638937866": 508, "3948": 440, "395": [442, 455, 460], "3950": [410, 448], "395004": 510, "3956": 448, "3959": 440, "396": 442, "3962942e": 490, "3966": 440, "397": 461, "3970": 411, "397035933646679e": 483, "39728": 510, "3975": 440, "3979": [440, 584], "397918129147546": [422, 584], "39791813": [422, 584], "398": [442, 467, 469], "3981": 510, "39810717055": 488, "3981075200000000": 510, "3983": 440, "3986": 440, "3987": 440, "3988": 440, "398e": 486, "3990": 440, "39e": 486, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 151, 157, 164, 165, 167, 176, 287, 289, 391, 394, 395, 396, 400, 401, 404, 405, 406, 418, 426, 427, 428, 430, 431, 432, 433, 444, 445, 446, 453, 455, 456, 457, 459, 461, 462, 465, 466, 467, 471, 472, 473, 474, 475, 476, 479, 480, 483, 487, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 508, 509, 520, 522, 523, 524, 531, 536, 581, 583], "3d33m15": 67, "3dataset": 470, "3e": [20, 128, 134, 471, 474, 477, 478, 481, 483, 486, 494], "3e4": 500, "3e5": 500, "3e6": 569, "3e7": 569, "3f": [128, 472, 585, 586], "3fgl": [61, 67, 74, 231, 271, 408, 438, 441, 443, 444, 445, 455, 459, 486, 495, 510, 519, 538, 570], "3fgl_name": 71, "3fhl": [62, 75, 86, 130, 132, 136, 290, 405, 444, 445, 459, 465, 473, 475, 486, 492, 493, 494, 495, 500, 510, 519, 521], "3fhl_data_fermi": 470, "3fhl_dataset": [290, 470, 493], "3fhl_model": [290, 470, 494], "3g": [485, 486], "3hwc": [63, 76, 437, 448, 486, 519], "3ml": [403, 500], "3pc": [64, 69, 77, 453, 486], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 102, 103, 106, 107, 111, 112, 117, 120, 131, 136, 145, 148, 153, 156, 164, 176, 179, 195, 196, 197, 198, 199, 200, 205, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 290, 291, 330, 372, 385, 386, 388, 389, 397, 399, 402, 405, 409, 410, 422, 425, 434, 436, 437, 438, 441, 443, 444, 447, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 508, 509, 510, 512, 517, 518, 519, 533, 536, 537, 541, 542, 545, 550, 555, 568, 569, 577, 583, 584, 585, 586, 587], "40": [59, 111, 112, 392, 438, 458, 459, 461, 462, 467, 469, 471, 479, 480, 483, 492, 495, 499, 510, 533, 556, 559, 564, 569, 585], "400": [136, 465, 466, 471, 475, 486, 492, 510, 578], "4000": 448, "40000": [176, 509], "400056": 456, "40050506591797": 486, "40051035": 486, "40071076": 97, "400x200": 475, "401": 462, "40112": 510, "4013": 448, "4014": 448, "4015": 448, "4017": 448, "4018": 448, "401e": 465, "402": 156, "4022": 448, "40235": 469, "4024": 448, "4025": 448, "4026": 448, "402712": 486, "403": [442, 471, 494], "4035": 510, "4037": 448, "404": 307, "4043": 448, "4044": 448, "40481": 469, "405": 393, "4051": 448, "40525": 469, "4054": 448, "4058": 448, "406": 510, "40611": 510, "4067": 448, "40671": 467, "40672": 467, "407": 486, "4071": 448, "4073": 448, "4073799600000000": 510, "4075": 448, "4076": 448, "4079": 448, "408": [461, 492], "4080": 448, "4080942e": 490, "40822469e": 495, "4083": 448, "4084": 448, "4088": 448, "4089": 448, "40919": 465, "4093": 448, "409416": 510, "4095": 448, "4098": 448, "40a": 59, "40deg": 499, "41": [67, 86, 94, 399, 480, 486, 487, 492, 500, 510], "410": 475, "41009347393684": 487, "4101e": 480, "4103": 448, "4105": 448, "4106": 448, "4107": 448, "4108": 448, "411": 510, "4110e": 486, "4112": [128, 448], "4113": 448, "4115": 448, "41176470588239": 475, "4119": 448, "411e": 459, "4120719e": 490, "412165": 471, "412779907405": 486, "413": 471, "414": [442, 455, 570], "4140541880588": 472, "41415047": 97, "4142135623730951": 121, "41449": 465, "414e": 465, "415": [442, 560], "4151e": 469, "4155": [486, 510], "4156e": 480, "41584196": 484, "416": [67, 469, 486, 491], "4161e": 469, "417": [455, 482, 486], "418007850646973": 422, "41803": 467, "41866": 500, "419": 494, "4191": 451, "41924": 144, "4198250e": 490, "41995": 465, "419e": 486, "41e19": [19, 20], "42": [25, 27, 94, 156, 352, 399, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 537, 540], "420": [455, 472, 476], "42050348": 487, "4208": 451, "4209": [451, 465], "421": [442, 475, 510, 583], "4210": 451, "4212": 451, "4212028e": 490, "4213": 451, "4215": 451, "4216": 451, "4217": 452, "4219": 451, "422": [39, 40], "4220": 469, "4221": 449, "422549": 462, "4225498e": 490, "4225631e": 490, "42267": 471, "4226731": 471, "422925": 565, "423": [455, 461], "4231": [449, 451], "42361": 465, "42399798": 471, "423e": 128, "424": [455, 497, 498], "42400": 471, "4242": 451, "4243": 451, "4245": 451, "42463": 500, "424650": 487, "42474": 510, "425": 510, "4252": 451, "426": 486, "426250": 553, "4264": 451, "4267e": 480, "4268": 449, "427": [455, 460, 462], "4275": [449, 451], "4277": 451, "428": 476, "4280": 451, "4281": 486, "4282": 451, "4288": 451, "429": 461, "4294": 451, "42e": [489, 494], "43": [283, 352, 399, 462, 471, 480, 487, 492, 510, 537], "430": 486, "43000": [52, 53], "4301": [449, 451], "4303606e": 490, "4305": 451, "431": [140, 393, 475, 487], "431023787974766e": 508, "43113": 456, "43137254901962": 475, "4313847458879893": 496, "4319": 510, "43197": 465, "4324": [449, 451], "4326": 451, "432878": 486, "432e": 486, "433": 465, "4336": [449, 451], "43366": 578, "4338e": 457, "434": 486, "43416595": 481, "4344": 449, "4346": 451, "435": 442, "4350": 451, "4351637481047363": 496, "4352": 451, "4359": [449, 451], "435e": 461, "435l": 486, "436": 442, "4360750e": 490, "4369": 451, "437": [486, 494], "4370": 451, "4373240195300975": 496, "438": 494, "4380": [450, 451], "4381": [413, 452], "4382": 450, "439": 461, "4393": [450, 451], "4394": 450, "4395": 451, "4397": [450, 451], "439e": 486, "43e": 494, "44": [21, 50, 86, 352, 457, 464, 479, 481, 492], "4402": 451, "44055555555555603": 94, "4406": 451, "4408": 452, "4409": 451, "4412": [450, 451], "4417": 451, "4418": 451, "4420073e": 490, "4420222e": 490, "4428": 451, "4428634e": 490, "443": 461, "4430": 451, "44319": 487, "4432": 452, "4433": 453, "4435": [450, 451], "4444": 451, "444e": 470, "445": 465, "4450": 510, "44528685": 510, "4453": [450, 451], "44573": 94, "4458": 451, "4459": 451, "446": [494, 586], "4466": [451, 469], "4466832000000000": 510, "4466835921": 488, "447": 442, "44742": 510, "44749e": 456, "44755": 467, "447552": 456, "447e": [471, 486], "447l": 17, "448": [455, 475, 570], "4480056e": 490, "44802852": 510, "4481": 486, "4485": 452, "4486": [450, 451], "448730": 556, "448e": 145, "4491": [412, 452], "4495": 451, "4497": 487, "4498": 144, "44e": 422, "45": [51, 54, 464, 470, 481, 483, 487, 492, 493, 495, 512, 537, 542, 543], "450": 494, "4500": [450, 451], "4501": 452, "4504": 451, "4506": 451, "4508": 451, "4509803921569": 475, "4510": [451, 469, 510], "4515": 485, "4517490659800822": 478, "4520": 450, "4521": 451, "4524": 450, "453": [457, 494], "454": 461, "4540": 452, "4545": 451, "4546": 452, "455": [442, 459], "45515263080596924": 458, "45517415e": 488, "455870": 471, "455e": 67, "456": 442, "4561": 452, "45646095": 481, "4567": 452, "457": [284, 442, 494], "457251": 510, "4574": [450, 452], "4575": 94, "4578": 450, "4579e": 456, "458": [475, 486], "4584": 452, "45856": 510, "4586649826004114": 310, "459": [442, 487, 494], "4593": 450, "45935": 510, "4595": 452, "4599": 452, "45\u00ba": 501, "46": [53, 67, 111, 112, 399, 486, 492], "460249999": 86, "4608": 452, "461": [442, 483], "4615": 452, "46186956763267517": 458, "4619": 450, "462": [442, 461], "4620": [413, 452], "4620e": 486, "46225": 465, "4628": 452, "463": 510, "4631": 450, "4635": 452, "4638": 452, "4638e": 466, "464": 477, "4642048e": 490, "4647544e": 490, "465": [461, 486, 494], "4653": 450, "4657": [450, 452], "465784": 510, "4660": 452, "4664": 452, "4668": 452, "4669": 452, "4671": 452, "46711": 465, "4675e": 479, "4677": [450, 452], "468": [481, 486], "4681": 450, "4684": 458, "468805426856864e": 52, "468e": 67, "4697": 452, "46e": [83, 466, 471], "47": [67, 480, 483, 486, 492, 510], "4703": 452, "47038413681308": 480, "470588235294144": 475, "4711": 510, "4712": 465, "4714": 452, "471489": 545, "4721": 450, "4726": 452, "4728": 450, "4729": 452, "473": [442, 461, 498], "4738": 452, "474": [442, 455, 498], "4740": 452, "4741": 452, "474e": 486, "475": [442, 494], "4750": 452, "475103": 508, "4753": [450, 452], "475468": 456, "4755": 450, "4759": 452, "4770": 452, "4772": 450, "47797": 465, "477e": 486, "478": 442, "47802": 496, "47803": 496, "47804": 496, "47827": 496, "47828": 496, "47829": [82, 496, 502], "4783": 452, "4785": 452, "47e": 486, "48": [33, 176, 425, 469, 470, 480, 492, 494, 500], "480": [455, 458, 486, 494, 570], "4802": 452, "4805": 452, "480554966154": 469, "48068": 465, "4808": 452, "480922127508": 480, "480e": 486, "481": [390, 442], "4810": 452, "4814": [452, 510], "4817": 452, "48180882997916e": 508, "4819444e": 490, "482": 456, "48215685": 97, "4822": 452, "48248": 486, "4825": [486, 510], "4828": 452, "4829": 452, "483307": 577, "4834": 452, "4834488e": 490, "4835": 452, "4837": 452, "484": 442, "48442": 278, "4845": 452, "4847": 452, "4848653": 486, "4849": [452, 486, 510], "484e": 145, "485": 442, "4850": 452, "4851": 452, "4854": 452, "485p": [36, 37], "487": [442, 508], "4875723e": 490, "4876": 450, "487722": 508, "4879": 452, "4881": [257, 258], "4886": 452, "48871": 456, "488z": 27, "489e": 486, "48e": [486, 494, 509], "49": [53, 465, 469, 486, 494, 500, 508, 536], "490": 25, "4902": 452, "4904": 452, "4904078e": 490, "49078e": 456, "4913": 450, "49152": 500, "4917": 452, "493": 25, "493043594026": 469, "4933657e": 490, "4936": [450, 452], "4937": [450, 452], "4940": 452, "49417615": 86, "4942": 452, "494e": 461, "4958277": 97, "496021": 499, "4963": 510, "4966": 510, "4968236e": 490, "4970": 452, "4971": 452, "49716789e": 488, "4971704e": 490, "4973": 452, "4975": 452, "4978": 452, "498": 510, "498192092628464": 480, "4983": 453, "498784": 486, "4989": 452, "498e": [486, 510], "499": [67, 486], "49919925926": [242, 579], "4992": 452, "4994": 452, "4996": 453, "49972277488662115": 496, "4999833830074": 471, "4d": 404, "4e": [481, 486, 494, 569], "4f": [584, 585, 586], "4fgl": [65, 78, 272, 273, 408, 429, 431, 437, 439, 452, 455, 457, 470, 486, 493, 495, 519, 538, 570], "4th": [397, 424], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 103, 104, 106, 107, 110, 111, 112, 121, 125, 128, 129, 131, 133, 135, 144, 145, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 179, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 225, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 284, 307, 312, 344, 375, 376, 380, 382, 385, 386, 389, 390, 392, 396, 397, 399, 400, 401, 402, 404, 408, 409, 410, 414, 417, 422, 425, 427, 429, 430, 437, 439, 441, 442, 444, 445, 446, 450, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 512, 517, 518, 521, 528, 531, 533, 534, 535, 536, 537, 541, 542, 543, 544, 546, 550, 551, 556, 558, 559, 560, 564, 565, 569, 572, 573, 574, 575, 577, 583, 585, 586], "50": [87, 91, 94, 113, 118, 352, 392, 412, 456, 462, 463, 467, 469, 477, 479, 480, 481, 486, 487, 490, 492, 494, 495, 496, 499, 500, 502, 508, 509, 510, 533, 536, 544, 586], "500": [196, 197, 199, 205, 208, 209, 465, 471, 473, 474, 492, 499, 500, 510, 536, 541], "5000": [19, 20, 87, 91, 512, 536], "5000056568267741": 471, "5000e": 464, "50022222": 94, "500249": 486, "5004": 471, "501": [455, 479, 482], "5015": 452, "502": 442, "5029747": 463, "503": 442, "5030": 510, "504": 28, "5040": 452, "5044": 452, "5049": 510, "505": [67, 486, 487], "505523195905": 469, "5057": 453, "5058": 453, "506": 442, "5066": 486, "507": 442, "5074834": 97, "5078068": 97, "50807568877": 486, "509587": 488, "509632": 488, "509e": 486, "50e": [464, 494], "51": [52, 53, 67, 105, 127, 145, 467, 469, 475, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "510": [442, 488], "5106": 510, "51095676": 481, "511": [67, 442], "5115": 453, "51179": [386, 588], "5118": 453, "512": 461, "5125": 453, "5126": 67, "5129": 453, "513": [422, 492], "51312": 471, "5135": 453, "513765": 508, "5144": [94, 456], "5145": 453, "514854": 499, "51544": [464, 473, 474, 477], "5156": 453, "516": [455, 465, 468], "5160": 453, "5161": 453, "5162628e": 490, "5163273": 499, "5169": 453, "5176": 453, "518": [442, 494], "5180": 453, "5184": 453, "5186": 453, "5188": 453, "5188338e": 490, "51910": 94, "5192420e": 490, "5194769e": 490, "51948705e": 495, "51958055e": 488, "52": [53, 128, 176, 456, 458, 462, 465, 466, 467, 469, 480, 486, 499, 502, 510], "5200": 453, "5205": [453, 500], "5206": 453, "5207": 453, "52074074074": 83, "521": 443, "5222": 453, "523": [443, 492], "5230376e": 490, "52318414": 97, "523681640625": 461, "5237647004325865": 496, "52389101852": 486, "523a": [248, 284], "523b": 22, "523e": 462, "524": [443, 486, 494], "5248": 510, "524807800000000": 510, "5254": 453, "5255": 453, "5258": 453, "52587": 465, "526": 443, "52607": 510, "5269": 453, "527": [443, 500], "5270": 453, "5271": 453, "5275": 453, "5279": 453, "527e": 462, "528": [461, 494], "5280": 453, "52826166": 486, "5283": [486, 510], "52839183495354": 480, "5285": 453, "5289": 453, "529": 443, "5292": 487, "529411764705883": 475, "5297": 453, "5297030e": 490, "5298": 453, "52e": [481, 508], "53": [28, 466, 467, 469, 471, 483, 497, 541, 550], "530": 443, "5300": 453, "53025": 94, "5303": 453, "5304": 453, "531": [443, 475], "5312": 453, "5314": 453, "5316": 453, "5320": 453, "5320849811542": 480, "53213": 471, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 486, "53343": [422, 478], "53344": 478, "53345": 478, "53346": 478, "53347": 478, "53348": 478, "5342": 453, "5345275e": 490, "5346": 453, "53482e": 456, "535": [443, 486], "5350": 453, "535058216604496": 284, "5353": 453, "5356": 453, "53566": 456, "53616": 248, "5366": 453, "5370": 453, "5378": 453, "5380": 453, "5381": 453, "5382": 453, "53849342472254e": 483, "5385": 453, "5389": 453, "539": [284, 494, 548], "5390": 453, "5390438": 97, "5392e": 479, "539397": 486, "53945": 479, "53946": [483, 484], "539572": 561, "539e": 486, "53e": [422, 464], "54": [67, 458, 461, 486, 490], "5400": 487, "5405": 453, "5405e": 480, "5407": 453, "5407363826067": 521, "5407363826070": 521, "5408": 453, "5409": 453, "541": 443, "5411": 456, "5423": 453, "5427": 453, "5427520e": 490, "54282": 465, "5433": 453, "5437": 453, "5438": 453, "5438860e": 490, "544": [443, 486, 500], "5445": 453, "5448": 453, "5449": 453, "545": 443, "5453": 453, "54566271": 585, "545y": [39, 40], "546": 443, "5461745": 97, "5462": 453, "5466": 453, "54676837e": 489, "54682": [465, 486, 500, 510], "547": [443, 456, 486], "5472": 453, "54721e": 456, "5477": 486, "54772": 486, "547e": 480, "54892": 465, "548e": 486, "549": 443, "549007644529844e": 508, "549019607843138": 475, "5499840": 499, "54e": 494, "55": [39, 42, 87, 91, 214, 480, 481, 489, 493, 497], "550": 461, "55027": 145, "55045": 486, "551": 486, "55197": [386, 588], "552": 486, "5525": 453, "55275": 500, "552979516754": 480, "553": [457, 486], "5531e": 457, "553337": 510, "5538": 510, "5538942e": 490, "553e": 465, "554": 67, "55410": 486, "5545": 453, "5545130e": 490, "55461982e": 488, "554e": 459, "556": [443, 461, 586], "5561760e": 490, "557": [443, 494], "55775": 486, "558": 443, "558338072878877": 508, "559": 443, "5594": 83, "56": [456, 462, 481, 492, 501], "560": [37, 486], "5606985": 481, "5607778e": 490, "56093766": 97, "56141": 486, "562": 486, "5622482": 97, "56234132519": 488, "563058": 477, "56353481": 585, "563e": [461, 471], "564": [299, 443, 461, 494], "564139576925786": 472, "5644": 487, "565": 443, "56506": 486, "565095": 456, "566e": 461, "56711": 510, "568": [455, 505], "5686274509803928": 475, "56871": 486, "569": 443, "56922612": 585, "5692809e": 490, "56973": 510, "57": [33, 465, 469, 471, 481, 492], "57011": 471, "571": [455, 486, 503], "57185": 521, "5719922e": 490, "571e": 486, "572": 462, "57233": 510, "57236": [465, 486, 500, 510], "572e": [459, 465], "573": [67, 461, 510], "57300957": 179, "5733e": 477, "5754970e": 490, "576": 494, "5760": 510, "57602": 486, "5763635e": 490, "5768262e": 490, "576e": 465, "577398": 500, "5779092e": 490, "578": [486, 488, 585], "5782814": 488, "579": 486, "579178801616083e": 483, "57944657408": 486, "57967": 486, "57e": 486, "58": [422, 425, 464, 469, 472, 486, 491, 492, 494, 495, 502, 508], "580": 586, "581": 462, "5819e": 463, "582": [443, 455, 511], "583300": 541, "58332": 486, "5833e": 486, "5835918e": 490, "583e": 465, "5842497e": 490, "585": 486, "58540702": 97, "5867488e": 490, "58693695": 481, "58698": 486, "5882352941176467": 475, "588e": 486, "58909": 480, "58926": 465, "5892966e": 490, "5895": 458, "58999": 242, "58e": [477, 486, 488], "59": [83, 467, 477, 478, 486, 491, 502, 510], "590": 461, "59000": [242, 579], "59001": 242, "59063": 486, "5908": 486, "590835686434463": 496, "591": [443, 486], "59100": [578, 579], "59123": [572, 573, 574], "5915030546513255": 484, "5915e": 486, "59200": 578, "59233": 495, "59235": [83, 499], "59240": 495, "5924e": 509, "59250": 495, "59254e": 456, "59265": 456, "593": 443, "59300": 481, "59344": 510, "59348": 510, "59365": 579, "5938e": 497, "594": 443, "59400008": 97, "59428": 486, "59451": 465, "59497703e": 483, "5951631e": 490, "5956621435": 488, "596": 494, "59696": 465, "596e": 486, "597194451442478e": 483, "597774": 490, "59793": 486, "598": 510, "5985": 510, "5987726": 97, "599": [443, 475, 479, 494], "599625": 499, "59976": 486, "599999904632568": 486, "59d09m41": 486, "59e": [486, 494, 500], "5a": 58, "5e": [464, 474, 486, 488, 494], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 103, 107, 111, 113, 118, 128, 133, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 242, 284, 373, 376, 389, 392, 397, 401, 402, 405, 410, 419, 422, 435, 437, 439, 445, 446, 450, 452, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 516, 533, 537, 543, 547, 567, 583, 585], "60": [67, 91, 158, 450, 462, 464, 465, 486, 489, 500], "600": [462, 465, 470], "6000": 536, "6000000000000001": 495, "600661": 490, "60075": 490, "60090769e": 495, "600e": 461, "6018166e": 490, "601e": 486, "6024e": 509, "603": [494, 510], "6033": 456, "60350": 459, "603625": 490, "604": 461, "6046689e": 490, "605271": 572, "60603928": 495, "60719": [575, 576, 577], "607843137254942": 475, "60e": 486, "61": [67, 145, 432, 469, 486, 494, 500, 586], "610": [455, 494, 503], "61051": 500, "6105760e": 490, "611": [465, 488, 585], "611168": 488, "6116853": 486, "611e": 486, "6125": 502, "612e": 465, "613114": 484, "61422433": 97, "61453755944866": 472, "61489": 490, "61526": 145, "615316": 510, "617835": 490, "6181862e": 490, "61862": 242, "619": 486, "6194453e": 490, "61975454954816": 508, "62": [486, 501, 509], "620": 486, "620398": 490, "6205": 510, "62111": 465, "621499": 510, "6218742e": 490, "6219": 459, "622": [443, 459], "62258": 486, "6227766": 492, "62277660168379": 492, "6228e": 459, "623": [486, 510], "62320": 459, "623397": 490, "62341325": 492, "623413251903492": 492, "624": 494, "624122": 471, "624d": 24, "624e": 461, "62503": 486, "62514628": 490, "6253652e": 490, "6256e": 463, "6259962e": 490, "6266": 510, "6267247": 510, "627450980392158": 475, "628": 443, "62842028": 487, "63": [194, 195, 204, 207, 456, 461, 463, 487, 491, 501, 502, 508, 509, 531, 533, 534, 537], "630": [82, 494, 502, 508], "6309576500000000": 510, "630e": 67, "631": [443, 469], "631155605": 473, "631159205": 473, "631170005": 473, "631173605": 473, "631177205": 473, "631180805": 473, "6318811e": 490, "632627": 510, "633": [85, 103, 106, 107, 111, 112, 176, 462, 470, 491, 508, 509, 533], "63307": 83, "63308": [478, 509], "633083": 493, "63310241699219": 470, "63326": 465, "6333": 94, "63342": 510, "633600": 494, "635": 443, "63500212963": 486, "6354": 510, "63541": 499, "63668832485633": 480, "638": 494, "639": 486, "6390": 456, "63902": 456, "6395e": 466, "6397": 510, "63e": 487, "64": [39, 67, 83, 128, 195, 425, 477, 486, 500], "640": 443, "6402822e": 490, "641": [443, 510], "64103": 499, "6413": 471, "6417": 471, "6419578e": 490, "642": 510, "6423836025257211": 472, "6429005895278312": 496, "642e": 461, "643": [30, 31, 32, 33], "64323": 465, "64438": 500, "6444": 456, "644527": 488, "645": [487, 488], "6451": 471, "6457": 480, "6464": 456, "646e": [139, 302], "647": 443, "647058823529452": 475, "6471115e": 490, "64794383e": 495, "648": 443, "648e": 67, "649": 443, "64987376": 97, "64e": 462, "65": [63, 145, 409, 425, 427, 487], "650": 487, "6509": 456, "651": 486, "651058": 510, "6514": 510, "652": 470, "6522806": 510, "652368617859867": 470, "653": [443, 458], "65357608e": 490, "654": [456, 486], "65412": 471, "654e": 486, "655": 465, "655283": 465, "6554088e": 490, "6556248e": 490, "6557": 465, "655e": [67, 462], "656": 585, "65603222222": 500, "65603794185": 486, "6561e": 469, "6577182894355391": 496, "658": 494, "658909145253801e": 510, "6589622747787678": 496, "659": [461, 465], "65e": 121, "66": [52, 53, 425, 428, 464, 470, 487, 489, 494, 497, 500, 508], "660": [443, 455, 468], "6604475": 471, "660e": 510, "660fals": 459, "661": 443, "66104": 456, "662": 486, "663": [461, 585], "663742400000000": 510, "664502403": 499, "664502405": 499, "664502408": 499, "664502409": 499, "664502414": 499, "664e": 465, "6652219e": 490, "6656409356335768": 472, "66650390625": 458, "6666666666583865": 479, "6666666666666666": 574, "666666666666696": 475, "6678": 465, "66813": 471, "66984341": 490, "669e": [145, 465], "66e": [469, 487], "67": [17, 425, 486, 510], "670": 486, "6705024680435898": 310, "671": [463, 473, 502, 572], "671616": 456, "6728": [486, 510], "67304": 97, "67375": 456, "67457342435522e": 510, "675": 461, "6768369882260035": 462, "6768e": 462, "677": 443, "6772235e": 490, "67759236e": 490, "678": [86, 472], "67824": 487, "6784": 585, "67861": 490, "678683717532289e": 462, "679": 443, "679478008080033e": 462, "6795e": 462, "67992517": 97, "67e21": 485, "68": [67, 83, 96, 157, 163, 165, 166, 167, 169, 237, 425, 456, 486, 489, 490, 492, 499, 510, 586], "680": 494, "6803": 510, "6812310184489": 480, "68125": 490, "6823": 456, "683535101178161e": 483, "684": 176, "68542112": 97, "68588096384626e": 483, "68628538586": 487, "687": 494, "687214": 491, "687500": 491, "687685": 486, "68e": [457, 469, 486], "69": [103, 452, 465, 477, 486, 487], "690": 67, "690557685186": 486, "6909290e": 490, "691": 486, "691299354164691": 472, "69138": 465, "691680": [103, 487, 494], "692": 465, "692e": 462, "693": [455, 482], "69314486": 493, "693940": 469, "6953125": 487, "69543812": 97, "6959369197218669": 496, "695e": 465, "697317": 500, "69735": 490, "697e": 459, "697fals": 459, "6985": 458, "6992": 471, "6e": [459, 486, 494], "6h": 501, "6th": 424, "6y97lpuv": 483, "7": [30, 31, 38, 52, 53, 67, 87, 91, 128, 134, 144, 176, 179, 206, 212, 214, 240, 375, 376, 385, 389, 390, 397, 401, 402, 405, 422, 426, 427, 429, 430, 436, 437, 442, 443, 444, 446, 447, 456, 461, 462, 464, 465, 470, 472, 473, 478, 479, 480, 481, 483, 484, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 508, 510, 537, 541, 542, 578, 585, 586], "70": [67, 91, 103, 462, 471, 486, 487, 585], "700": [393, 474, 488, 493], "70000000e": 495, "7000e": 495, "70016": 471, "7007": 471, "701": 533, "70181": 145, "702": [478, 486, 500, 509], "702e": 465, "703": 422, "70358483e": 495, "704": [482, 494], "70428": 510, "70437": 490, "704952": 574, "705": 510, "70546": 465, "70634e": 456, "706e": [470, 486], "707846": 547, "707945784": 488, "707t": 293, "708": [461, 462], "709": 443, "7097381e": 490, "70e": 495, "71": [33, 462, 464, 494, 586], "710": 443, "71067811865478": 486, "7115414505410296e": 483, "7116851": 495, "711e": 465, "712": 472, "71220672": 487, "7123895e": 490, "712e": [478, 509], "713": [443, 486], "7132e": 510, "71387207e": 488, "714": 486, "715": 510, "716": [96, 310, 311, 492], "716062": 499, "71693826": [479, 483, 496, 524], "717": 486, "71795506": 510, "7184": 510, "719": [443, 494], "7190994e": 490, "71944e": 456, "7195": 486, "719e": 486, "72": [429, 458, 486, 491, 510], "720": [455, 474, 486, 503], "7200": 477, "722": 494, "72217": 510, "722557505166": 486, "723": 465, "723e": 486, "7240965e": 490, "72411791e": 488, "725": 486, "725490196078432": 475, "726e": 461, "727": [455, 476, 494], "72775": 510, "7284447e": 490, "729e": 465, "73": [456, 510], "7303": 510, "731": 443, "731589446928548e": 508, "731810": 569, "732e": [67, 486], "733": [67, 443], "734": 510, "7350250533013533": 496, "7350380e": 490, "7351418e": 490, "735e": 486, "736": [461, 585, 586], "737": 461, "738": [443, 486], "7385727e": 490, "739": 443, "7395744e": 490, "739770898783367e": 414, "739e": 67, "73e": [486, 508], "74": [456, 510], "740": 443, "742": [494, 511], "743e": [457, 486], "74427": 471, "74465974e": 490, "74479": 465, "745098039215687": 475, "74542e": 456, "746": [443, 455, 570], "746609": 557, "7471700e": 490, "7479085e": 490, "748": 486, "748259": 469, "74989420933": 488, "75": [67, 378, 453, 457, 461, 510], "750": 586, "751643891117176": 508, "752568": 568, "75267735": 510, "753": [443, 462], "7537086e": 490, "754": [443, 500], "75408483": 510, "7555": 491, "7559": 510, "756": 486, "756547": 564, "7567": 456, "7580410e": 490, "759": 443, "7596682e": 490, "75e": [486, 509], "76": [472, 483, 492], "7613": 422, "761c": 28, "762": [443, 455, 480, 482], "762199399999986": 548, "763": 443, "7637308880733709": 496, "7638": 465, "763e": 465, "76419591747674": 480, "7647": 510, "764705882352942": 475, "76473": 465, "7652512e": 490, "766": [443, 465], "7660168382": 486, "766d": 499, "767": 443, "76739": 486, "768000": [103, 487], "768048": 97, "7681656e": 490, "76837444": 481, "7684028": 510, "7692170e": 490, "76e": 494, "770": 67, "771667": 502, "77174": 465, "7718272408581743": 310, "771e": 486, "772": [443, 456], "77206": 510, "77218": 465, "773": 486, "7733e": [457, 486], "77351": 465, "774": [443, 477], "7743835449219": 461, "774e": 486, "775": [67, 494], "7752246942468283": 471, "7755386e": 490, "7760": 510, "7763307219821931": 310, "7765957e": 490, "77678": 456, "7769775": 499, "777": 443, "7771617763704126": 310, "77751797": 97, "777e": [67, 459], "777l": 35, "778": [443, 461, 486], "77827941": 492, "778279410038923": 492, "779": [462, 486], "7796942": 510, "779e": 461, "77e": [464, 486], "78": [492, 493, 501, 509], "780": [31, 128], "7800e": 461, "7804888e": 490, "78083": [144, 145], "780e": 128, "781": 480, "78181": 145, "78188": 465, "78188096": 97, "782": 500, "7827941": 492, "78279410038923": 492, "783": [443, 486, 510], "78332719": 471, "78333": 471, "783587001383003": 499, "783e": 471, "784": [444, 462], "7843137254901955": 475, "78499999999997": 544, "785": 544, "7853981633974483": 577, "787": [67, 176], "787169465401243e": 478, "7875405607868806": 496, "7876233e": 490, "788": 486, "7887840e": 490, "788e": 486, "789": 443, "78910994": 97, "7894": 471, "78952750835169": 480, "78e": 494, "79": [458, 486], "790": 443, "791": 444, "7913e": 461, "7922": 456, "793": [444, 455, 465, 469, 476], "794": 488, "7941697": 488, "79432823": 495, "7943282347": 488, "79469899": 471, "79470": 471, "794e": 465, "796": [444, 494], "797": 444, "7972": 491, "798": 444, "798218": 456, "799": 461, "7990194e": 490, "7997221e": 490, "799999952316284": 486, "7c": 492, "7d": 486, "7e": [486, 494, 495], "7e955f": 425, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 101, 103, 106, 107, 111, 112, 113, 118, 131, 145, 150, 151, 200, 207, 240, 242, 312, 385, 389, 392, 393, 402, 426, 427, 430, 432, 433, 437, 438, 439, 442, 443, 444, 447, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 517, 519, 528, 533, 537, 541, 550, 561, 569, 585], "80": [179, 463, 464, 465, 487, 492, 500, 533, 560, 569], "800080": 546, "800932": 486, "801": [510, 533], "801668796295": 486, "802": [480, 494, 510], "803": 461, "8031431e": 490, "8037638e": 490, "803921568627494": 475, "804": 494, "804492": 477, "80492": 145, "80571": 144, "8062607e": 490, "80683246": 490, "807": [465, 548], "8071": 465, "807201": 510, "8075": [486, 510], "8075185": 486, "8084e": 469, "808687936570502e": 489, "80871364": 97, "8090746": 499, "809505": 486, "80982039": 490, "80e": 457, "81": [433, 457, 478, 550], "810": [444, 486], "810000": 477, "8100e": 457, "810e": 486, "811": 444, "8115337251905373e": 489, "812": 444, "812075194992371e": 489, "8122169596532167e": 489, "8122425483643125e": 489, "8122e": 489, "812358724314062e": 489, "8129257829574434e": 489, "812951371538087e": 489, "813": 444, "814": 444, "8150": 510, "815257": 558, "8157971601581226e": 489, "816": 444, "8160964882165554": 310, "81699e": 456, "816e": 486, "818388e": 510, "81847286": 481, "818e": 459, "819": 486, "81e": 550, "82": [67, 425, 469, 486, 509, 537], "820": 444, "8205513": 499, "820562952023891": 310, "820734654694367e": 483, "8222980e": 490, "823": 461, "82352941176471": 475, "824": [140, 444, 494], "8241471833009617": 496, "825": [444, 456, 472, 486], "8256": 510, "826": 444, "826414166666": 94, "827": 444, "8272": 512, "82739": 465, "827e": 145, "829": [455, 498], "8290458e": 490, "8293": 510, "82946153": 510, "82e": 470, "83": [30, 67, 83, 85, 94, 103, 106, 107, 111, 112, 176, 179, 194, 195, 204, 207, 461, 462, 463, 465, 470, 478, 487, 491, 492, 493, 501, 502, 508, 509, 528, 531, 533, 534, 537], "830": 444, "8300": 510, "831": 444, "831874": 562, "832": 444, "83242471": 490, "833": [444, 462, 465], "833333333336": 481, "834": 444, "8341884287660133": 496, "8349780e": 490, "835": 444, "835e": [462, 471], "835fals": 459, "836": [444, 481, 486], "836731": 486, "8369650e": 490, "837": [444, 494], "8377268e": 490, "837e": 480, "838": 465, "838003": 560, "8383396349722769": 310, "84": [24, 145, 425, 455, 461, 463, 471, 486, 494, 537], "840": [444, 465], "841": 486, "84196311": 97, "842": [444, 486], "84233": 465, "842x": [138, 147], "843": [59, 456, 481], "843137254902004": 475, "843863242310971e": 508, "843e": 67, "8441040e": 490, "844770648146": 94, "8449575657133206": 310, "845": 445, "84529": 486, "8455480e": 490, "845693": 456, "846": [465, 486, 585], "847": 444, "847306": 462, "8475576e": 490, "8475650e": 490, "84e": 469, "85": [87, 91, 451, 471, 541, 542], "851": 444, "85157506": 510, "8515948e": 490, "85188496e": 490, "85202": 510, "85287": 500, "852e": 486, "854": [444, 455, 491, 498], "854166666664": 481, "85416667": 479, "85469291": 97, "855": 444, "85527": 471, "85527359": 471, "8555500e": 490, "85624": 466, "85625": 466, "8568": 510, "856e": 486, "857": 549, "8570719e": 490, "85722435185": 486, "858": 444, "858e": 486, "859": [444, 461], "85900": 471, "85900392": 471, "85925": 510, "8593054": 486, "859e": 465, "85e": 486, "86": [459, 461, 462, 465, 492, 510, 521], "860": 486, "861": 510, "86111111": 479, "861150": 459, "8613613e": 490, "86178": 144, "8620": 477, "8623": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "862745098039234": 475, "864": [444, 510], "865": [444, 465], "86676": 500, "8669": 456, "8672": 471, "86793518066406": 458, "868": [444, 455, 476, 486], "86831929": 97, "8699": 456, "8699165e": 490, "87": [67, 471, 492], "870": [67, 444], "8704": 465, "871": 444, "871091": 105, "871730083414263e": 483, "871985": 462, "872": [444, 465], "873": 462, "8733348": 499, "87358893e": 488, "8736082200157": 472, "873659477745188": 496, "874": 458, "875": 444, "876": 494, "87621184": 467, "8769240e": 490, "876e": 465, "87710186": 97, "877563": 486, "878": [486, 494], "87897": 471, "87897418": 471, "8799800e": 490, "87e": 21, "88": [425, 447, 463, 471, 472, 483, 486, 492, 510], "880e": 465, "881": [444, 456, 465], "8815212313941426": 496, "882": 67, "882352941176466": 475, "883": 444, "8834862e": 490, "883e": 67, "884": 444, "88470839": 495, "885": 444, "886": 486, "8865": 510, "887": [455, 498], "88781": 465, "888": 444, "888174": 495, "8885138e": 490, "889": 486, "8893600e": 490, "88e": [459, 486], "89": [33, 492], "8903051145328": 480, "8908866e": 490, "8909e": 480, "890e": 67, "892": 494, "89243456": 510, "8926": 510, "89287": 456, "893": 444, "893793": 542, "894": [455, 459, 460], "8943121e": 490, "89492144e": 489, "895": 481, "8954039e": 490, "89595846": 495, "8967": 477, "89709472": 510, "898": 444, "8986348363207728": 496, "89873": 471, "8989213": 471, "898e": [465, 486], "899": [67, 455, 498], "8999": 471, "899a": 284, "89e": 487, "8e": [459, 469, 472, 474, 494, 500, 569], "8pvdbj7f": 483, "9": [31, 33, 35, 67, 83, 87, 91, 144, 200, 212, 240, 242, 342, 349, 382, 389, 390, 394, 402, 422, 428, 430, 441, 444, 446, 449, 451, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 536, 543, 547, 548, 549, 556, 572, 580, 585], "90": [57, 67, 408, 464, 467, 470, 471, 486, 492, 495, 512], "900": 486, "9002269877996247": 481, "900269": 490, "9023670e": 490, "90242058e": 487, "9032163": 86, "904": 510, "905": 486, "9053655e": 490, "9053906e": 490, "906": [444, 486], "90605275e": 500, "90677811e": 488, "90685": 465, "907": 486, "9074812e": 490, "9077294": 499, "908587": 576, "909": [455, 473, 476, 485, 498], "90e": [103, 462, 469, 487], "91": [464, 480, 492, 497, 537], "910688": 469, "911": 444, "911552434768802e": 478, "912": 486, "912525e": 510, "912779907405": 486, "913196574074": 478, "913e": 465, "914": 67, "915": 486, "91507": [103, 487], "91612243652344": 458, "9163195e": 490, "916529": 127, "91719": 487, "918": 67, "918070": 575, "918365": 486, "918843": 469, "919": 444, "919e": 486, "91e": 494, "92": [145, 464, 465, 492, 499], "920": 461, "92052435e": 488, "9205875e": 490, "921": 462, "9215375e": 490, "92234009259": [422, 478], "924": 462, "9240e": 495, "92490": 465, "925106": 471, "926": [455, 467, 468], "9269494e": 490, "9277492e": 490, "928": 486, "9280475e": 490, "929": [455, 456, 462, 508, 511], "92960065298276": 508, "93": [67, 126, 128, 464, 465, 492, 499], "93026": 486, "9303": [486, 510], "931": 307, "93128e": 456, "932": 444, "93271046296": 478, "933": 444, "9332549000000": 510, "9343": 456, "935826709880043": 484, "93702": 500, "9382336444241555": 496, "938e": [471, 486], "939": [295, 301], "9391360e": 490, "93988308": 97, "93e": 486, "94": [464, 486, 492, 499, 508, 510], "940e": 486, "940fals": 459, "94111838": 97, "941176470588236": 475, "94186555556": [422, 478], "942829": 467, "943282347242818": 508, "944060876": 488, "9441e": 466, "9453950989269149": 496, "9462": 471, "946923": 278, "94722599": 471, "94723": 471, "947e": 465, "948683": 456, "9489822e": 490, "949": 494, "9499210e": 490, "94e": [471, 486], "95": [33, 67, 157, 163, 165, 166, 167, 169, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 464, 465, 471, 477, 480, 486, 487, 489, 492, 493, 499, 541, 586], "950": 444, "9500979841335693": 310, "95024543e": 489, "950e": 461, "952": 67, "9529719e": 490, "953": 494, "9537056583888585e": 414, "95421509259": 478, "95451985e": 128, "9546285068162436": 496, "95615": 456, "957": 67, "9580e": 463, "95883": 510, "959198": 486, "959d": [52, 53], "96": [425, 457, 464, 487, 492, 550], "9606540e": 490, "960784313725491": 475, "9608912e": 490, "9619812963": 478, "96374320": 467, "966": [444, 455, 498], "96602": 466, "967546": 465, "9677107409819438": 310, "968": [461, 471], "96814": 510, "96833546296": [486, 500], "968488": 307, "969": 486, "969169": 563, "9692e": 457, "96e": 459, "96r": 492, "97": [464, 477, 486, 490, 496, 509], "97003": 510, "97054": 465, "970e": 486, "97116": 471, "9721952295357764e": 483, "973": [480, 486], "9730e": 470, "97369425926": 478, "974e": 486, "975": [444, 455, 460], "97529": 144, "97596": 465, "976": 444, "97749": 471, "97749371": 471, "9776920e": 490, "979": [67, 444, 492], "97934": 465, "97978": 83, "97e": 486, "98": [83, 352, 458, 463, 464, 465, 469, 478, 480, 490, 508], "980": 67, "9803921568627443": 475, "98049": 465, "98149518519": 478, "9816452e": 490, "982075849517389e": 495, "98258": 465, "9833462074166": 486, "9834338e": 490, "98359211196148547": 471, "98429": 465, "9845": 456, "9847406e": 490, "984e": 465, "985": [444, 459], "985502122122975": 496, "9868440049211211": 508, "9876": 456, "98772": 144, "988": [444, 486, 494], "988409870698051e": 52, "988413141629203e": 414, "9885e": 477, "989": 477, "9890": 510, "989779066475214e": 414, "98e": 486, "99": [352, 464, 465, 466, 477, 480, 488, 509, 510], "99004": 145, "991": 486, "9910796e": 490, "9912648e": 490, "9912712e": 490, "993": [455, 458, 482, 483], "9931": 510, "994": 444, "99467": 145, "994e": 486, "995": 494, "9952623149688797": 508, "9969731e": 490, "997": 444, "9977859e": 490, "9978": 510, "998": 472, "99848e": 500, "99878762e": 488, "999": [50, 166, 169, 486], "99919925926": 242, "99993896484375": 461, "9999912037958": 471, "999999": 486, "99999994": 86, "9999999995": 486, "9999999997835": 458, "99999999999545": 483, "999999999997": 473, "9999999999977": 486, "9999999999978": 479, "9999999999998": 486, "99999999999994": 486, "99999999999999": [464, 486], "99e": 486, "9e": [457, 459, 486, 569], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 107, 110, 111, 112, 126, 127, 128, 136, 139, 144, 145, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 292, 294, 302, 303, 312, 321, 374, 375, 376, 378, 379, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 424, 426, 430, 431, 432, 433, 434, 437, 439, 440, 443, 444, 445, 446, 448, 450, 451, 452, 453, 456, 458, 463, 465, 469, 471, 472, 475, 478, 479, 480, 481, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 507, 509, 510, 512, 520, 521, 522, 524, 525, 533, 534, 536, 537, 539, 541, 578, 579, 582, 583, 586], "AND": [493, 494], "AS": 415, "And": [284, 385, 388, 403, 405, 411, 417, 458, 459, 461, 462, 469, 473, 475, 480, 487, 489, 492, 493, 495, 499, 508, 509, 510], "As": [83, 312, 342, 385, 386, 388, 393, 397, 398, 399, 401, 403, 411, 412, 415, 422, 427, 446, 456, 457, 458, 461, 462, 463, 465, 466, 467, 471, 473, 474, 478, 479, 480, 483, 484, 485, 486, 487, 489, 491, 492, 495, 497, 500, 502, 508, 510, 524, 533, 586], "At": [267, 399, 402, 411, 412, 414, 416, 430, 473, 492, 499, 529, 582], "But": [385, 390, 393, 399, 404, 412, 416, 422, 446, 461, 462, 489, 497, 499, 508, 584], "By": [19, 20, 26, 50, 65, 87, 91, 102, 103, 106, 107, 111, 112, 125, 129, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 173, 176, 183, 193, 195, 196, 197, 199, 205, 208, 209, 221, 222, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 382, 385, 411, 412, 413, 431, 432, 434, 473, 474, 479, 484, 489, 492, 497, 509, 531, 535, 541, 542, 543, 587], "FOR": [139, 302], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 111, 112, 121, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 153, 154, 155, 161, 166, 169, 176, 181, 182, 183, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 268, 269, 271, 272, 273, 275, 279, 280, 293, 295, 299, 301, 309, 315, 330, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 410, 411, 412, 413, 416, 417, 421, 422, 424, 427, 428, 429, 431, 432, 433, 434, 437, 444, 448, 451, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 508, 509, 510, 512, 519, 520, 522, 524, 534, 536, 537, 542, 547, 579, 583, 584, 586, 587, 588], "IN": [92, 100, 251], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 123, 125, 126, 127, 128, 129, 131, 133, 136, 139, 143, 144, 146, 148, 153, 154, 155, 161, 164, 166, 169, 170, 172, 173, 176, 178, 179, 182, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 291, 309, 312, 324, 325, 330, 371, 374, 378, 379, 380, 381, 385, 386, 387, 388, 390, 392, 393, 398, 399, 401, 402, 403, 406, 407, 408, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 445, 446, 447, 456, 458, 459, 461, 463, 464, 466, 469, 471, 474, 477, 478, 479, 480, 481, 483, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 510, 522, 524, 535, 537, 543, 545, 558, 584, 585, 586, 587], "In": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 84, 87, 88, 90, 91, 94, 102, 104, 105, 110, 127, 128, 153, 172, 195, 197, 200, 203, 209, 217, 219, 279, 291, 325, 385, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 427, 428, 429, 430, 431, 432, 433, 434, 437, 448, 451, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 500, 501, 508, 509, 510, 520, 522, 524, 529, 532, 533, 534, 536, 537, 538, 541, 542, 547, 560, 579, 582, 583, 584, 585, 586, 587, 588], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 107, 111, 112, 113, 116, 118, 126, 144, 153, 157, 164, 165, 166, 167, 169, 179, 182, 186, 187, 192, 196, 197, 199, 201, 204, 205, 208, 209, 211, 221, 222, 225, 228, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 263, 267, 268, 270, 271, 272, 273, 276, 280, 293, 297, 299, 300, 320, 334, 339, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 416, 417, 421, 423, 427, 428, 429, 430, 434, 437, 439, 440, 441, 446, 448, 450, 451, 452, 453, 456, 462, 467, 470, 472, 474, 477, 481, 484, 486, 487, 488, 489, 491, 492, 493, 495, 497, 499, 500, 501, 502, 508, 509, 510, 512, 513, 520, 521, 523, 524, 528, 529, 531, 533, 537, 551, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568, 581, 582, 583, 584, 585, 586, 588], "Its": [397, 411, 412, 437, 439, 475, 479, 497, 509, 526, 527, 528, 530], "NOT": 493, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 396, 406, 409, 410, 445, 447, 454, 475, 483, 486, 489, 491, 492, 510], "Not": [106, 111, 112, 198, 204, 206, 393, 569], "ON": [103, 106, 107, 135, 183, 184, 185, 193, 383, 391, 439, 453, 456, 457, 461, 464, 467, 471, 478, 479, 481, 489, 491, 497, 524, 533, 585, 587], "OR": [103, 107, 111, 487, 493, 494], "Of": [385, 388, 422, 469, 487, 492, 500, 584, 587], "On": [59, 171, 177, 178, 181, 293, 300, 307, 385, 386, 391, 393, 400, 401, 415, 417, 418, 419, 420, 441, 469, 470, 489, 504, 586], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103, 106, 107, 111, 112, 227, 236, 251, 338, 385, 386, 391, 393, 394, 395, 396, 399, 401, 402, 403, 411, 414, 451, 458, 462, 467, 478, 491, 492, 493, 508, 510, 533, 537, 560, 584, 586], "Ones": 312, "Or": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 386, 404, 405, 462, 469, 483, 487, 488, 492, 499, 500, 522], "Such": [397, 490, 528], "THE": [139, 302], "That": [16, 19, 20, 84, 90, 105, 127, 214, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 385, 386, 390, 399, 402, 405, 489, 510, 584], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 177, 178, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 284, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 307, 312, 324, 330, 332, 333, 336, 352, 368, 369, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 423, 426, 427, 429, 430, 431, 432, 433, 434, 437, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 504, 508, 509, 510, 512, 513, 514, 515, 519, 520, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 541, 543, 545, 546, 547, 550, 556, 558, 560, 569, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589], "Their": 493, "Then": [67, 103, 107, 109, 111, 388, 390, 395, 398, 400, 401, 402, 403, 409, 419, 458, 461, 469, 470, 473, 477, 478, 489, 493, 495, 497, 509], "There": [87, 91, 144, 385, 386, 390, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 409, 412, 414, 416, 418, 419, 445, 453, 471, 475, 484, 485, 486, 487, 489, 490, 491, 493, 494, 501, 512, 520, 521, 524, 537], "These": [77, 95, 201, 283, 385, 386, 390, 391, 396, 398, 399, 400, 401, 405, 406, 411, 414, 429, 431, 432, 433, 437, 445, 451, 456, 470, 472, 473, 480, 484, 485, 487, 490, 492, 495, 496, 501, 504, 512, 529, 534, 536, 537, 585, 586, 587], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 105, 110, 125, 127, 129, 133, 195, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 283, 293, 375, 376, 387, 388, 392, 393, 396, 397, 398, 400, 401, 406, 407, 408, 409, 410, 411, 414, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 432, 433, 437, 439, 445, 446, 448, 451, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 504, 508, 510, 520, 521, 522, 525, 529, 531, 533, 534, 541, 582, 584, 585, 586], "With": [83, 101, 246, 385, 394, 395, 411, 433, 446, 497, 520, 586], "_": [103, 107, 111, 131, 238, 258, 385, 399, 409, 411, 461, 464, 467, 485, 486, 489, 494, 497, 520, 533], "_0": [50, 51], "_1": [106, 112, 521], "_2": [106, 112], "__all__": 385, "__array__": 312, "__array_ufunc__": [463, 473, 502, 572], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 324, 391, 396, 413, 433], "__class__": [385, 409, 485, 518], "__dict__": [16, 84, 90, 105, 127, 385], "__enter__": 363, "__eq__": 439, "__exit__": 363, "__fields__": 412, "__getitem__": [395, 396, 397, 453], "__init__": [16, 84, 90, 105, 127, 204, 279, 385, 391, 397, 409, 414, 448], "__int__": 330, "__len__": 395, "__main__": [262, 385, 497, 506, 584], "__name__": [385, 467, 478, 479, 480, 483, 485, 506, 518, 584], "__neq__": 439, "__pydantic_extra__": [16, 84, 90, 105, 127], "__pydantic_fields_set__": [16, 84, 90, 105, 127], "__repr__": [385, 432, 446], "__str__": [385, 397, 412, 429], "__subclasses__": 485, "__version__": 421, "_basemodel__context": [16, 84, 90, 105, 127], "_build": [386, 416, 524], "_check_interv": 451, "_compute_flux_spati": 437, "_covari": [227, 251], "_data": 409, "_dataset": 386, "_dom_class": [469, 477, 492, 508, 509], "_energy_t": 409, "_err": 483, "_errn": [129, 130, 133, 134], "_errp": [129, 130, 133, 134], "_evaluate_timevar_sourc": 451, "_f_cash_root_cython": 306, "_factr": 489, "_fields_set": [16, 84, 90, 105, 127], "_i": 131, "_k": [103, 107, 111, 520], "_l": 520, "_lat": 385, "_lon": 385, "_map": 378, "_model": 126, "_new_attribut": 385, "_old_attribut": 385, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 105, 127], "_parse_dataset": 414, "_phi": 385, "_prior": 413, "_propagate_error": 436, "_reco": 385, "_repr_html_": 385, "_row_index": 69, "_sampl": 414, "_sample_coord_time_energi": 451, "_sampler": 414, "_scan": 489, "_time_group": 409, "_time_t": 409, "_true": 385, "_type": [413, 497], "_types_namespac": [16, 84, 90, 105, 127], "_update_model": 414, "_was_": [16, 84, 90, 105, 127], "_wc": 548, "_weight": 413, "a_": [106, 112, 156, 526, 529, 586], "a_off": 586, "a_on": 586, "a_scan": 497, "aa": [87, 91, 312, 411], "aaguasca": 448, "aaiy7h": 483, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 121, 138, 139, 147, 156, 209, 217, 219, 248, 283, 284, 293, 300, 302, 485, 486], "abc": [18, 56, 99, 124, 175, 194, 199, 491], "abcmeta": 491, "abdalla2018": [533, 534, 583], "abeysekara": 59, "abil": [409, 414, 497], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395, 400, 403, 414, 458, 477, 478, 479, 497, 504, 584], "about": [11, 13, 16, 84, 90, 105, 127, 151, 156, 237, 242, 342, 385, 388, 390, 394, 401, 402, 404, 405, 406, 410, 411, 413, 415, 416, 421, 422, 441, 442, 446, 447, 448, 457, 459, 465, 466, 467, 469, 470, 471, 473, 486, 490, 492, 495, 500, 509, 510, 520, 521, 584, 587], "abov": [29, 44, 52, 53, 83, 125, 127, 128, 131, 135, 136, 144, 145, 171, 206, 374, 376, 385, 386, 391, 394, 395, 397, 399, 401, 402, 403, 404, 405, 409, 414, 418, 419, 422, 456, 465, 471, 473, 474, 475, 478, 481, 483, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 501, 508, 518, 520, 521, 528, 531, 537, 583, 584, 585, 586, 587], "abramowski": 156, "abruptli": [385, 410], "abs_path": 320, "absenc": [400, 467, 491, 493, 533, 585], "absolut": [82, 91, 108, 150, 151, 152, 153, 156, 158, 160, 163, 168, 196, 197, 199, 201, 205, 208, 209, 316, 342, 362, 366, 522], "absolute_tim": 588, "absopt": 403, "absorb": [280, 395, 408, 444, 550], "absorbedspectralmodel": [431, 444], "absorbt": 408, "absorpt": [229, 403, 434, 444, 453, 455, 460, 504, 538, 570], "abstract": [56, 57, 59, 99, 124, 139, 167, 175, 180, 194, 196, 199, 208, 293, 302, 396, 433, 536], "abstractsetintstr": [16, 84, 90, 105, 127], "acada": 411, "academ": [140, 307], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 106, 108, 112, 125, 126, 128, 171, 188, 193, 195, 196, 197, 199, 207, 208, 209, 227, 251, 294, 383, 389, 390, 391, 392, 393, 394, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 438, 442, 451, 453, 456, 457, 462, 463, 464, 467, 471, 474, 487, 491, 492, 500, 520, 536, 542, 560, 585, 586], "acceptance_off": [106, 108, 112, 125, 126, 128, 171, 181, 397, 456, 458, 461, 464, 467, 520, 586], "acceptance_on": [125, 126, 128], "acceptang": 125, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 103, 164, 194, 195, 204, 207, 300, 320, 385, 393, 394, 395, 396, 398, 401, 409, 416, 418, 421, 426, 427, 434, 441, 442, 444, 445, 451, 452, 459, 461, 462, 463, 469, 483, 486, 489, 490, 494, 495, 499, 502, 508, 509, 510, 519, 524, 535, 536, 537, 582], "accessor": 492, "accident": [500, 584], "accomplish": 488, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 103, 106, 107, 111, 112, 121, 126, 148, 154, 164, 171, 195, 201, 217, 219, 309, 374, 395, 396, 399, 400, 403, 409, 411, 431, 440, 452, 467, 478, 487, 491, 495, 496, 504, 520, 521, 524], "accordingli": [397, 411, 428, 434, 493], "account": [103, 106, 107, 111, 112, 125, 126, 139, 173, 189, 227, 251, 267, 292, 294, 300, 360, 393, 398, 401, 409, 411, 433, 450, 452, 455, 456, 458, 460, 461, 463, 467, 469, 475, 480, 481, 488, 489, 491, 493, 504, 509, 520, 522, 585, 586], "accur": [137, 146, 403, 414, 447, 469, 489, 531], "accuraci": [399, 489, 524], "aceptance_off": 397, "acero": [403, 414, 427, 429, 431, 434, 437, 439, 444, 446, 452, 453], "achiev": [16, 84, 90, 105, 121, 127, 171, 375, 376, 385, 394, 395, 396, 397, 398, 399, 401, 408, 411, 434, 492, 495, 496, 534], "acknowledg": [388, 411, 423], "acquir": 422, "acquisit": 583, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 121, 385, 394, 397, 416, 472, 480, 494, 500, 520, 536, 545, 583], "act": [91, 401, 494, 547], "action": [171, 390, 395, 401, 411, 415, 416, 437, 480], "activ": [91, 300, 388, 402, 417, 418, 420, 421, 422, 431, 448, 484, 524], "actual": [184, 360, 361, 362, 384, 385, 386, 390, 394, 396, 398, 400, 401, 409, 410, 412, 415, 464, 474, 477, 479, 487, 488, 489, 491, 492, 493, 497, 500, 501, 509, 510, 531, 533, 583, 584, 586], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 103, 105, 106, 111, 112, 116, 117, 120, 127, 128, 196, 197, 199, 204, 205, 208, 209, 385, 386, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 409, 411, 426, 427, 428, 430, 431, 432, 434, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 463, 467, 469, 470, 490, 491, 494, 495, 496, 497, 501, 520, 537, 587], "adapt": [121, 171, 214, 394, 395, 398, 399, 404, 405, 407, 408, 411, 415, 422, 427, 428, 430, 431, 432, 434, 435, 437, 440, 443, 444, 446, 448, 450, 451, 452, 453, 487, 490, 492, 493, 531, 534], "adaptiveringbackgroundestim": [181, 391], "adaptiveringbackgroundmak": [174, 431, 534], "adass": 405, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 126, 127, 128, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 173, 196, 197, 199, 203, 205, 208, 209, 215, 227, 251, 267, 309, 354, 373, 382, 384, 385, 386, 388, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 413, 414, 415, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 464, 469, 470, 473, 477, 478, 481, 487, 490, 491, 492, 493, 495, 497, 499, 510, 514, 515, 524, 537, 552, 584, 587], "add_artist": [495, 541, 542], "add_cbar": [103, 106, 107, 111, 112, 128, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 196, 197, 199, 205, 208, 209, 373, 465, 466, 467, 469, 471, 477, 481, 485, 487, 490, 491, 492, 494, 495, 500, 501, 508, 509, 537, 540, 541, 542, 545, 546, 548], "add_column": [87, 91], "add_enabled_unit": [456, 464, 466, 469, 471, 477, 480, 499], "add_index": [87, 91], "add_loc": 385, "add_row": [87, 91], "add_subplot": 373, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 116, 125, 127, 129, 134, 168, 196, 197, 199, 202, 205, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 385, 388, 389, 390, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 414, 416, 417, 418, 419, 428, 429, 431, 433, 434, 437, 438, 445, 446, 448, 451, 452, 453, 459, 463, 475, 481, 486, 487, 488, 489, 492, 494, 495, 497, 499, 500, 509, 510, 520, 522, 524, 531, 536, 537, 581, 587], "addition": [134, 397, 487, 489, 492, 494, 495], "address": [394, 397, 398, 399, 401, 411, 497, 523], "adequ": 204, "adher": 388, "adjac": [148, 201, 437, 479, 492, 533], "adjust": [16, 67, 196, 197, 199, 205, 208, 209, 394, 396, 408, 453, 462, 484, 487, 488, 495, 496, 508, 524, 531, 583], "admit": 405, "adonath": 391, "adopt": [37, 398, 401, 406, 463, 473, 474, 485], "adress": 414, "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 121, 139, 156, 248, 283, 284, 293, 300, 302], "adult": 385, "advanc": [397, 401, 402, 405, 413, 418, 490, 492, 524, 583, 584], "advantag": [393, 399, 402, 409, 414, 437, 492, 497, 560, 584], "advanteg": 397, "advertis": 415, "advic": [385, 411], "advis": [386, 411, 489, 497, 504], "advoc": 385, "aeff": [16, 82, 87, 88, 106, 112, 156, 182, 190, 395, 397, 398, 433, 434, 458, 461, 462, 463, 466, 467, 469, 471, 479, 483, 490, 491, 499, 501, 502, 508, 509, 526, 531, 533, 534, 583], "aeff2d": 155, "aeff_2d": [82, 87, 156, 499, 502], "aeff_3d": 490, "aeff_ev": 490, "aeff_new": 490, "aeff_perc": [182, 458, 461, 462, 471, 479, 483, 491, 501, 533], "aegi": 229, "af": 381, "affect": [139, 385, 393, 397, 399, 410, 428, 429, 440, 449, 457, 497], "affili": [399, 411, 448], "afmhot": [494, 510], "aforement": 411, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 103, 105, 106, 107, 111, 127, 166, 169, 300, 324, 342, 366, 369, 385, 388, 390, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 422, 426, 433, 435, 436, 437, 439, 445, 447, 448, 449, 459, 467, 469, 479, 483, 484, 489, 492, 494, 499, 501, 502, 524, 584, 588], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 316, 385, 514], "again": [103, 106, 107, 111, 112, 166, 388, 395, 397, 399, 401, 406, 412, 417, 432, 433, 436, 443, 448, 459, 461, 462, 469, 474, 475, 492, 495, 497, 500, 508, 510, 537, 584], "against": [16, 84, 90, 105, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 386, 388, 402, 408, 416, 486, 488, 500, 508, 519, 522], "agent": 401, "agglom": 13, "aggreg": 412, "agil": 398, "agn": [140, 298, 399, 461, 478, 480, 484, 499], "agnost": 489, "ago": 392, "agre": [198, 201, 388, 390, 399, 411], "agreement": [385, 388, 406, 481], "aguasca": [439, 448, 449, 450, 451, 453], "aharonian": 472, "ahead": [399, 426], "ahelp": 214, "aic": 414, "aim": [385, 394, 395, 411, 414, 469, 473, 485, 496, 512, 583], "air": 499, "ait": [195, 196, 197, 506], "aitoff": 399, "aka": 510, "akawnwxq": 483, "al": [26, 33, 59, 102, 139, 140, 156, 229, 299, 300, 302, 307, 395, 414, 453, 465, 472, 484, 512, 583], "alamo": 414, "albert": 583, "albert2007": 583, "alexi": [434, 437], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 121, 136, 171, 214, 293, 385, 391, 397, 398, 399, 404, 412, 414, 429, 434, 442, 443, 444, 453, 465, 484, 488, 489, 501, 522, 536, 582, 586], "alia": [16, 56, 84, 90, 105, 127, 388, 510], "alias": [16, 56, 84, 90, 105, 127], "align": [87, 91, 100, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 205, 207, 208, 209, 385, 453, 490, 493, 495], "alisha": 439, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 125, 126, 127, 128, 129, 133, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 170, 176, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 357, 358, 359, 360, 361, 362, 372, 381, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 461, 462, 463, 466, 467, 469, 471, 472, 473, 477, 478, 480, 481, 483, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 514, 520, 522, 524, 533, 535, 536, 537, 538, 560, 581, 584, 585, 586], "all_quant": [126, 128], "allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 198, 199, 201, 205, 206, 208, 209, 360], "alloc": [197, 205, 209], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 105, 121, 126, 127, 128, 135, 136, 166, 169, 195, 200, 202, 335, 385, 386, 388, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 428, 430, 431, 432, 433, 434, 437, 439, 446, 447, 448, 451, 453, 456, 461, 472, 480, 487, 488, 489, 490, 491, 492, 493, 509, 520, 522, 524, 531, 536, 537, 581, 582, 584, 589], "allow_extra": 200, "allow_pickl": [16, 84, 90, 105, 127], "allowed_channel": [26, 485], "allski": [83, 492], "alma": 404, "almeida": 434, "almost": [384, 386, 388, 399, 500, 510], "alogrithm": 414, "alon": 390, "along": [68, 102, 126, 128, 132, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 167, 168, 196, 197, 199, 205, 207, 208, 209, 298, 299, 300, 302, 323, 324, 334, 344, 345, 394, 395, 409, 414, 448, 451, 453, 466, 475, 486, 487, 490, 491, 494, 495, 521, 536, 537, 553, 583], "alpha": [21, 27, 28, 48, 103, 106, 107, 111, 112, 125, 126, 128, 171, 193, 214, 232, 233, 243, 244, 245, 259, 294, 305, 309, 382, 383, 397, 408, 410, 437, 444, 453, 456, 457, 458, 459, 461, 463, 464, 467, 469, 470, 474, 481, 486, 489, 497, 499, 541, 550, 552, 554, 556, 558, 559, 560, 569, 575, 576, 585, 586, 587], "alpha_": [106, 112], "alpha_1": [106, 112], "alpha_2": [106, 112], "alpha_norm": [229, 408, 457, 550], "alphabet": [402, 411, 427, 428, 429, 430, 431, 432, 433, 434, 437], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 127, 214, 275, 276, 277, 279, 385, 391, 392, 393, 396, 397, 398, 399, 400, 402, 405, 406, 407, 409, 412, 414, 415, 416, 446, 457, 459, 463, 465, 467, 474, 481, 485, 486, 487, 492, 493, 494, 495, 499, 500, 501, 510, 512, 537, 548], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 121, 125, 126, 128, 129, 137, 138, 144, 146, 147, 168, 173, 179, 194, 201, 203, 204, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 291, 312, 320, 325, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 437, 445, 446, 447, 451, 456, 457, 458, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 474, 475, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 508, 509, 512, 520, 521, 522, 523, 524, 531, 533, 536, 537, 560, 563, 581, 583, 584, 585, 586, 588], "alt": [83, 85, 88, 94, 95, 385, 588], "alt_pnt": 91, "altaz": [83, 85, 94, 159, 385, 490, 588], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 290, 384, 385, 388, 390, 394, 419, 437, 457, 461, 463, 465, 472, 486, 489, 490, 492, 494, 499, 520, 521, 584], "although": [385, 398, 399, 400, 402, 405, 409, 489, 499, 546, 547, 581, 588], "altitud": 458, "alwai": [77, 83, 87, 91, 153, 201, 204, 211, 217, 219, 235, 385, 386, 388, 391, 392, 393, 395, 396, 397, 399, 402, 410, 411, 414, 419, 426, 433, 448, 449, 451, 464, 465, 469, 477, 485, 489, 491, 492, 494, 496, 497, 504, 522, 536, 537], "am": 394, "ambigu": [399, 445], "amend": 388, "among": [82, 87, 91, 103, 106, 107, 111, 112, 137, 146, 401, 405, 406, 408, 413, 434, 489, 583], "amount": [392, 399, 413, 524], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 266, 577], "ampl_2": [157, 490], "ampl_3": [157, 490], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 102, 129, 134, 136, 196, 197, 199, 208, 209, 214, 221, 228, 231, 233, 238, 245, 249, 256, 257, 258, 266, 268, 271, 272, 273, 284, 290, 303, 396, 397, 400, 408, 414, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 494, 495, 499, 500, 508, 509, 510, 522, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "amplitude_err": 483, "amplitude_maximum_signific": 484, "amplitude_maximum_vari": 484, "amplitude_ref": 481, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 116, 118, 119, 126, 127, 128, 129, 130, 131, 133, 134, 136, 143, 144, 145, 151, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 172, 176, 179, 181, 184, 186, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 286, 293, 298, 300, 310, 312, 316, 330, 341, 345, 363, 369, 375, 376, 378, 381, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423, 426, 427, 430, 431, 432, 433, 434, 437, 439, 440, 441, 444, 445, 446, 448, 449, 451, 452, 453, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 477, 478, 479, 480, 481, 483, 484, 486, 488, 489, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 512, 514, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587], "anaconda": [402, 417, 418], "analog": [87, 91, 196, 197, 199, 205, 208, 209, 537], "analogi": 406, "analys": [82, 384, 385, 394, 395, 396, 397, 399, 403, 405, 407, 408, 413, 422, 423, 429, 430, 431, 433, 434, 444, 446, 449, 461, 462, 469, 479, 480, 485, 486, 493, 495, 499, 500, 501, 508, 509, 512, 520, 584], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 101, 103, 105, 106, 111, 112, 117, 120, 154, 155, 161, 166, 169, 178, 182, 384, 385, 386, 389, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 412, 414, 416, 417, 418, 419, 422, 423, 426, 427, 428, 430, 431, 432, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 455, 457, 459, 460, 465, 466, 467, 468, 472, 473, 475, 476, 477, 479, 480, 482, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 509, 510, 512, 522, 524, 525, 529, 531, 532, 533, 534, 537, 563, 581, 583, 584, 586], "analysis3d": 447, "analysis_1": [455, 508, 511], "analysis_1d": 478, "analysis_2": [386, 455, 509, 511], "analysis_3d": [446, 455, 469, 476, 478], "analysis_joint": 469, "analysis_mwl": [455, 470, 476], "analysis_stack": 469, "analysisconfig": [15, 386, 462, 466, 467, 469, 478, 508], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 156, 157, 165, 167, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 398, 403, 452, 453, 488, 490, 495, 522, 543, 587], "analyz": [139, 302, 395, 583], "andrea": 398, "andrew": 446, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 103, 106, 107, 117, 120, 121, 125, 132, 136, 150, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 179, 180, 182, 184, 194, 195, 197, 202, 204, 207, 209, 210, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 283, 340, 372, 385, 391, 399, 401, 408, 412, 425, 427, 428, 429, 446, 453, 456, 458, 461, 464, 470, 473, 474, 479, 483, 486, 492, 493, 495, 496, 499, 500, 524, 529, 533, 536, 537, 541, 542, 543, 546, 547, 583], "angle_incr": 179, "angular": [23, 103, 106, 107, 117, 120, 131, 154, 155, 161, 166, 169, 172, 197, 204, 207, 209, 228, 237, 240, 277, 316, 319, 385, 401, 450, 463, 474, 481, 529, 530, 583], "angular_extens": 41, "angular_s": 537, "angular_separ": [408, 450, 452, 495], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 105, 123, 127, 133, 155, 178, 196, 197, 199, 204, 205, 207, 208, 209, 312, 335, 370, 384, 385, 386, 388, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 411, 412, 414, 415, 418, 419, 420, 421, 422, 426, 427, 445, 446, 447, 452, 462, 471, 472, 475, 478, 479, 481, 483, 487, 491, 492, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 512, 521, 522, 534, 536, 537, 552, 584, 588], "ann": [23, 445], "anna": 385, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 448, 512], "annoi": [385, 584], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 374, 412, 541], "announc": [385, 390, 392, 399, 401, 404, 406, 408, 410, 411, 415, 416], "annuli": [475, 537], "annulu": [130, 344, 537], "anonym": 388, "anoth": [19, 20, 26, 83, 86, 87, 91, 103, 106, 107, 111, 112, 154, 155, 156, 161, 166, 168, 169, 198, 201, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 385, 399, 400, 401, 403, 405, 406, 409, 412, 414, 417, 418, 420, 422, 431, 446, 481, 487, 492, 493, 495, 537, 584], "another_posit": 533, "answer": [489, 524], "anti": [492, 493], "anticip": 394, "anymor": 448, "anyon": [390, 392, 499], "anyth": [153, 401, 584], "anytim": [388, 428], "anywai": [388, 399], "anywher": [399, 402, 404, 520], "ap": [390, 402, 410], "apart": 400, "apertur": 583, "api": [235, 389, 391, 394, 395, 396, 397, 398, 399, 401, 404, 405, 406, 410, 411, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 437, 441, 445, 446, 455, 458, 461, 462, 465, 471, 473, 479, 487, 492, 493, 494, 495, 498, 499, 500, 508, 510, 511, 522, 523, 531, 581, 582, 583, 584], "apj": [295, 301], "aplpi": 446, "apologis": [426, 427, 446], "app": [87, 91, 416, 422, 445], "appar": 414, "appear": [87, 91, 385, 386, 393, 399, 412, 440, 451, 453, 486], "append": [87, 91, 92, 100, 149, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 251, 397, 398, 400, 432, 451, 458, 461, 463, 464, 469, 470, 471, 473, 479, 480, 481, 483, 487, 488, 489, 491, 494, 495, 496, 497, 533], "append_ax": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 373], "appendix": [30, 136, 156, 248, 284, 303, 465], "appl": 422, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 104, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 128, 129, 133, 136, 153, 154, 155, 161, 166, 168, 169, 173, 179, 182, 183, 196, 197, 199, 200, 204, 205, 207, 208, 209, 217, 219, 227, 235, 251, 267, 280, 291, 292, 293, 294, 324, 325, 370, 374, 382, 385, 391, 392, 395, 396, 398, 400, 403, 409, 410, 411, 434, 439, 444, 445, 446, 447, 451, 453, 456, 461, 463, 473, 479, 480, 481, 483, 487, 488, 491, 492, 493, 494, 495, 497, 499, 502, 509, 510, 522, 524, 531, 569, 582, 585], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 385, 396, 411, 413, 433, 484, 489, 536, 583], "apply_async": [332, 333], "apply_edisp": 452, "apply_hysteresis_threshold": 493, "apply_irf": [267, 433], "apply_mask": 202, "apply_psf": [396, 430], "apply_standard_scal": 96, "apply_threshold_sensit": 125, "apply_union": 211, "approach": [87, 91, 136, 385, 391, 393, 397, 401, 406, 409, 410, 412, 451, 456, 461, 491, 504, 583, 586], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 195, 196, 197, 199, 208, 209, 312, 320, 386, 463, 467, 469, 483, 492, 584], "approv": [391, 392, 393], "approx": [52, 53], "approxim": [102, 136, 137, 146, 182, 183, 195, 196, 197, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 292, 294, 323, 396, 399, 414, 428, 453, 456, 461, 489, 499, 522, 533, 542, 543, 546, 547], "appveyor": 442, "apr": [407, 424], "april": [405, 412, 433], "apt": 419, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 114, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 139, 140, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 182, 183, 184, 189, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 290, 293, 298, 302, 307, 312, 324, 330, 332, 344, 345, 360, 374, 376, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 509, 510, 512, 513, 514, 515, 519, 520, 521, 522, 524, 526, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 541, 542, 550, 560, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589], "arakelian": 299, "arang": [121, 400, 465, 479, 483, 536], "arb": 497, "arbitrari": [202, 204, 205, 396, 408, 432, 445, 473, 487, 492, 497, 536, 537], "arbitrary_types_allow": [16, 84, 90, 105, 127, 412], "arbitrarytypemetadata": 412, "archiv": [411, 502, 509], "arcsec": 179, "arctan": 399, "area": [82, 88, 106, 109, 155, 156, 171, 182, 183, 190, 197, 205, 207, 209, 385, 386, 396, 441, 443, 456, 461, 473, 481, 491, 501, 502, 529, 536, 537, 583], "areasc": [444, 446], "aren": [361, 385, 399, 404, 405, 417, 418, 420], "arf": [108, 109, 112, 200, 201, 204, 205, 461, 537], "arf_ob": 108, "arffil": 108, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 105, 111, 112, 127, 150, 151, 152, 156, 157, 158, 160, 163, 164, 165, 167, 168, 197, 198, 205, 222, 235, 249, 256, 257, 258, 335, 584], "arg_in_kwarg": 385, "argmax": 484, "argmin": 484, "argpars": [390, 584], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 102, 103, 105, 106, 107, 110, 111, 112, 127, 128, 129, 131, 133, 136, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 172, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 291, 310, 312, 324, 330, 332, 333, 372, 373, 374, 378, 379, 380, 381, 382, 388, 391, 397, 400, 433, 434, 437, 439, 445, 451, 452, 453, 465, 469, 474, 475, 489, 491, 492, 495, 496, 500, 509, 522, 524, 535, 536, 537, 560, 584], "aris": [390, 401, 524], "arithmet": [222, 396, 447, 492, 493, 495, 552], "arjun": [444, 445], "arm": [33, 34, 38, 45, 441], "armstrong": 445, "arnau": [439, 448, 449, 450, 451, 453], "around": [56, 144, 172, 195, 197, 207, 209, 324, 399, 400, 463, 481, 485, 489, 493, 501, 510, 524, 533, 536, 537], "arpit": 444, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 102, 103, 107, 111, 112, 121, 126, 128, 129, 130, 133, 134, 136, 139, 144, 145, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 277, 278, 279, 280, 281, 291, 292, 294, 296, 302, 307, 308, 312, 323, 324, 325, 339, 340, 341, 345, 378, 379, 384, 385, 398, 399, 403, 409, 412, 422, 432, 445, 448, 450, 452, 463, 464, 473, 474, 481, 483, 486, 487, 489, 490, 492, 494, 495, 497, 499, 501, 502, 510, 536, 537, 544, 569, 572, 585, 586], "array_lik": [103, 107, 111, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 295, 301, 309], "array_shap": [450, 452], "arriba": [438, 441, 442], "arriv": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 390, 398, 431, 432, 433, 473, 583, 587], "arrow": 582, "arrowprop": 541, "arrowstyl": 541, "artefact": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "arthmet": 396, "articl": [138, 140, 147, 299, 307, 390, 458, 479], "artifact": [125, 197], "artifici": 473, "artist": [204, 227, 251, 541, 542], "arxiv": [64, 65, 182, 257, 258, 272, 273, 470, 485, 486, 567, 568], "as_arrai": [87, 91], "as_artist": [204, 205, 495, 537, 541, 542], "as_energy_tru": [194, 195, 204, 207], "as_plot_cent": [198, 201, 206, 483], "as_plot_edg": [198, 201, 206], "as_plot_label": [198, 201, 206], "as_plot_scal": 201, "as_plot_xerr": [198, 201, 206], "asanyarrai": 385, "ascii": [87, 91, 128, 385], "ashton": 414, "ashton2022": 414, "asid": 488, "asimov": 497, "asinh": 465, "asinha": 82, "ask": [386, 388, 390, 392, 399, 401, 402, 405, 411, 421, 478, 510, 524, 525, 584], "asmooth": [121, 122, 404, 432, 443, 446], "asmoothestim": 406, "asmoothmapestim": [122, 406, 432, 434, 437, 465, 524], "aspect": [388, 411, 525, 584, 589], "assert": [198, 200, 201, 206, 360, 361, 362, 388, 396, 408, 492], "assert_allclos": 385, "assert_equ": 385, "assert_nam": [198, 200, 201, 206], "assert_quantity_allclos": [385, 441], "assess": [461, 463, 484], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 104, 110, 111, 195, 217, 219, 267, 277, 381, 385, 394, 397, 400, 412, 415, 458, 477, 478, 487, 492, 495, 497, 509, 510, 536], "assist": 401, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 486, 510], "assoc2": [74, 75, 78, 510], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 486, "assoc_prob_lr": 486, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 103, 106, 126, 135, 139, 140, 141, 142, 154, 155, 166, 169, 186, 187, 192, 205, 278, 302, 312, 385, 391, 401, 409, 410, 411, 412, 413, 451, 452, 457, 458, 459, 461, 465, 470, 486, 487, 488, 491, 492, 494, 495, 497, 501, 510, 521, 522, 524, 537, 586], "association_catalog": [67, 486], "association_nam": [67, 486], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 102, 125, 126, 128, 136, 137, 138, 143, 146, 147, 156, 168, 179, 193, 195, 196, 197, 199, 202, 206, 208, 209, 214, 273, 279, 283, 290, 339, 342, 385, 388, 397, 398, 400, 408, 409, 413, 422, 423, 456, 457, 458, 461, 463, 464, 467, 473, 474, 475, 477, 485, 490, 492, 495, 497, 500, 514, 520, 522, 529, 581, 586], "assumpt": [72, 95, 103, 106, 107, 111, 112, 121, 135, 138, 147, 399, 409, 457, 529, 533, 585], "astri": 97, "astrisim": 398, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 129, 189, 196, 197, 199, 208, 209, 262, 280, 385, 386, 397, 404, 405, 409, 429, 438, 442, 446, 448, 452, 463, 485, 490, 492, 499, 513, 514, 516, 517, 518, 521, 583], "astro_dark_matt": [405, 455, 485, 498], "astromodel": 512, "astronom": [13, 399, 406, 445, 583], "astronomi": [11, 284, 384, 395, 399, 403, 414, 416, 423, 444, 458, 461, 467, 471, 491, 499, 524, 533, 534, 581, 582, 583, 584, 585, 586, 588, 589], "astrophys": [6, 23, 316, 400, 524, 582, 583], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 91, 92, 94, 96, 103, 106, 107, 111, 112, 117, 120, 121, 126, 128, 130, 132, 133, 136, 144, 145, 153, 155, 164, 166, 179, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 217, 219, 221, 222, 225, 229, 231, 232, 233, 238, 241, 242, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 267, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 293, 302, 310, 311, 312, 342, 361, 362, 371, 375, 376, 380, 384, 386, 387, 388, 390, 391, 392, 396, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 415, 422, 423, 425, 429, 430, 431, 432, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 509, 510, 514, 516, 517, 518, 520, 521, 522, 524, 526, 528, 531, 533, 534, 535, 536, 537, 541, 542, 543, 544, 545, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 585, 588], "astropy_healpix": 394, "astropy_help": [385, 427, 428, 429], "astropy_introduct": 428, "astropy_timeseri": 400, "astropy_vers": 385, "astyp": [87, 91], "asymetr": [102, 461], "asymmetr": [125, 129, 130, 133, 134, 136, 137, 146, 403, 427, 433, 452, 461, 497, 508, 522, 542], "asymmetri": 490, "asymptot": [586, 587], "atmospher": [400, 418, 423, 499], "atnf": 445, "atol": [86, 100, 133, 201, 206, 360, 362, 385], "atol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "atom": 401, "atproduction_gamma": 26, "atreye": [397, 400, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 227, 235, 251, 267, 277, 396, 406, 414, 450, 480, 489, 494, 495, 584], "attempt": [16, 84, 90, 105, 127, 388, 399, 402], "attenu": 457, "attr": 385, "attract": 405, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 312, 395, 397, 407, 412, 413, 414, 427, 428, 431, 432, 433, 434, 437, 439, 441, 443, 445, 450, 451, 452, 459, 463, 489, 491, 492, 493, 495, 510, 520, 536, 537, 586], "attributeerror": 385, "attrribut": 492, "aug": [398, 401, 402, 404, 424], "august": [392, 398, 401, 404, 471], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415], "authoris": 411, "authorship": 389, "auto": [77, 196, 197, 199, 208, 209, 386, 388, 396, 405, 432, 446, 489, 584], "autocorrel": 139, "autodiff": 403, "autogener": 405, "autograd": [396, 403], "autom": [11, 393, 401, 411, 414, 415, 416, 439, 489, 584], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 105, 114, 115, 127, 129, 133, 136, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 384, 385, 386, 388, 392, 393, 395, 396, 402, 405, 407, 411, 415, 426, 427, 433, 463, 471, 489, 492, 584, 588], "automatis": 523, "autopep8": 385, "autoscal": [217, 218, 219, 220], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 102, 103, 106, 107, 111, 112, 125, 126, 128, 129, 133, 134, 136, 137, 146, 149, 170, 176, 182, 183, 201, 214, 217, 219, 223, 224, 228, 229, 237, 240, 253, 255, 264, 265, 269, 275, 277, 279, 284, 336, 373, 385, 388, 391, 392, 393, 394, 396, 397, 398, 399, 402, 403, 405, 412, 416, 417, 418, 419, 420, 421, 427, 431, 432, 433, 437, 440, 444, 446, 448, 451, 453, 457, 461, 462, 465, 483, 488, 489, 491, 493, 495, 499, 500, 504, 508, 510, 512, 514, 515, 521, 523, 524, 526, 527, 528, 530, 538, 550, 582, 584, 586], "available_hdu": 88, "available_irf": 88, "available_method": [173, 182], "available_quant": [126, 128, 465, 488], "available_select": [176, 183], "available_stat_typ": 102, "averag": [19, 103, 106, 107, 111, 112, 176, 183, 186, 187, 189, 190, 437, 457, 458, 461, 520], "averageaz": [473, 474], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 176, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 293, 385, 386, 391, 392, 393, 395, 399, 403, 404, 407, 408, 410, 411, 413, 418, 420, 437, 439, 448, 450, 451, 453, 461, 467, 493, 497, 521, 524, 533, 584], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 292, 294], "awar": [385, 390, 397, 405, 411], "ax": [16, 19, 20, 26, 66, 67, 83, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 125, 126, 128, 130, 131, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 292, 294, 372, 373, 377, 378, 379, 380, 381, 382, 385, 394, 404, 428, 432, 437, 443, 444, 445, 448, 451, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 508, 509, 510, 520, 522, 524, 526, 531, 533, 534, 535, 536, 541, 542, 543, 547, 550, 578, 579, 583], "ax1": [456, 465, 467, 471, 481, 493, 494], "ax2": [456, 465, 467, 471, 481, 493, 494], "ax3": [465, 471], "ax_crab_3fhl": 510, "ax_ebl": 550, "ax_excess": [458, 461], "ax_model": 550, "ax_residu": [102, 111, 112, 458, 461, 462, 463, 481, 508], "ax_s": [462, 508], "ax_spati": [103, 106, 107, 111, 112], "ax_spectr": [103, 106, 107, 111, 112], "ax_spectrum": [102, 111, 112, 458, 461, 462, 463, 481], "ax_sqrt_t": [458, 461], "axcols1": 492, "axcols2": 492, "axel": [394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "axes0": [196, 197, 199, 205, 208, 209], "axes_loc": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 373], "axes_nam": [195, 196, 197, 199, 204, 205, 207, 208, 209], "axesimag": [373, 374], "axesn": [196, 197, 199, 205, 208, 209], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 125, 126, 128, 129, 130, 132, 133, 136, 137, 140, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 251, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 288, 292, 293, 294, 298, 299, 300, 302, 323, 324, 334, 373, 378, 379, 380, 381, 391, 394, 407, 409, 429, 432, 433, 434, 437, 439, 444, 446, 447, 448, 451, 456, 458, 461, 462, 463, 464, 466, 467, 469, 471, 473, 474, 475, 477, 479, 480, 483, 484, 486, 487, 490, 491, 492, 499, 500, 501, 508, 509, 510, 520, 522, 524, 528, 533, 536, 537, 579, 583], "axis0": 536, "axis1": 492, "axis2": 492, "axis_edg": 378, "axis_nam": [102, 103, 106, 107, 111, 112, 126, 128, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 475, 478, 479, 480, 487, 488], "axis_new": [128, 148, 479, 484], "axis_origin": 484, "axis_rgb": 380, "axis_tru": 471, "axisymmetr": 452, "axvlin": [464, 485, 496, 497], "axvspan": [205, 481], "axyjekzd": 491, "az": [83, 85, 88, 94, 95, 385, 588], "azimuth": 500, "azur": 433, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 105, 127, 156, 214, 352, 385, 386, 399, 408, 411, 415, 461, 472, 485, 486, 489, 492, 493, 495, 500, 510, 516, 520, 537], "b1509": 486, "b7aj": 483, "b_0": [541, 542], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 197, 324, 388, 395, 396, 399, 405, 414, 415, 461, 462, 464, 492, 495, 508, 584], "backend": [93, 102, 123, 129, 130, 133, 134, 136, 172, 213, 214, 215, 216, 290, 327, 332, 333, 384, 394, 396, 427, 446, 447, 451, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 488, 489, 500, 508, 509, 524, 581, 582], "backend_default": [130, 133, 136], "background": [16, 67, 82, 83, 88, 93, 103, 104, 106, 107, 108, 110, 111, 112, 115, 116, 121, 125, 126, 128, 135, 150, 151, 152, 162, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 189, 229, 235, 277, 285, 292, 294, 303, 304, 305, 306, 309, 381, 385, 391, 394, 397, 398, 399, 401, 405, 406, 409, 418, 423, 426, 427, 428, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 471, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 489, 490, 492, 493, 497, 501, 502, 504, 509, 520, 522, 523, 582, 583, 584, 586, 587], "background2d": [151, 152, 162, 433, 440, 448, 450, 452, 527], "background3d": [88, 150, 162, 189, 391, 433, 437, 445, 446, 447, 453, 490, 499, 527], "background_estim": 404, "background_interp_missing_data": 176, "background_map": [277, 396], "background_min": 149, "background_model": [103, 106, 107, 111, 112, 136, 397, 398, 405, 407, 433, 466, 509, 527], "background_oversampl": [176, 183, 491], "background_pad_offset": 176, "background_r": [404, 487], "backgroundconfig": 16, "backgroundestim": [400, 431], "backgroundevalu": 396, "backgroundirf": [150, 151], "backgroundirfmodel": 407, "backgroundmodel": [397, 407, 408, 430, 432, 433, 434, 437], "backgroundtempl": 396, "backport": [392, 410, 415], "backround": 394, "backscal": 205, "backward": [390, 399, 408, 409, 410, 429, 488, 522], "bad": [86, 385, 399], "badli": 416, "balanc": 520, "band": [19, 20, 26, 68, 83, 89, 123, 126, 128, 131, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 391, 403, 404, 408, 409, 418, 426, 459, 461, 462, 470, 471, 472, 481, 485, 486, 495, 500, 502, 519, 520, 522, 582], "bandshdu": 492, "banner": 416, "bar": [15, 82, 87, 91, 103, 106, 107, 111, 112, 121, 133, 136, 150, 151, 209, 214, 238, 300, 333, 379, 402, 437, 440, 441, 447, 452, 481, 497, 524, 557], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 311, 320, 321, 324, 330, 332, 334, 359, 372, 380, 385, 386, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 413, 414, 416, 418, 419, 426, 428, 429, 431, 433, 434, 437, 439, 442, 443, 444, 445, 446, 452, 453, 457, 461, 463, 464, 466, 469, 470, 471, 472, 473, 475, 481, 484, 486, 488, 490, 492, 493, 495, 496, 497, 499, 500, 509, 510, 512, 521, 522, 524, 534, 536, 548, 558, 582, 583, 585, 586], "base_dir": [82, 87, 320, 499, 501, 502, 512], "baselin": [82, 83, 243, 499], "basement": 428, "basemodel": [16, 84, 90, 105, 127, 412, 469], "baseradi": 252, "bash": [418, 420, 584], "basi": [390, 391, 401, 404, 415, 439, 441, 481, 485], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 106, 112, 128, 242, 388, 391, 395, 396, 397, 398, 399, 401, 405, 409, 412, 422, 434, 444, 446, 455, 458, 461, 463, 476, 478, 484, 485, 486, 493, 504, 510, 512, 514, 515, 522, 533, 536, 583, 584], "basicconfig": [16, 471, 506], "bayesian": [389, 403], "bayesian_block": 484, "bayesian_edg": 484, "bayesianfit": 414, "bayesianinfer": 414, "baysian": 394, "bb": [87, 91, 411], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [151, 155, 156, 157, 166, 456, 464, 477, 480, 490, 499], "becam": 392, "becaus": [16, 84, 90, 105, 127, 196, 197, 199, 203, 205, 208, 209, 385, 386, 388, 390, 392, 396, 397, 399, 400, 404, 408, 409, 412, 416, 437, 439, 453, 458, 459, 462, 475, 479, 481, 491, 492, 493, 494, 499, 500, 501, 508, 509, 510, 520, 524, 584, 587], "becom": [385, 393, 395, 396, 399, 404, 412, 414, 473, 479, 495, 524, 584, 587], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 105, 125, 126, 127, 128, 168, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 312, 390, 391, 392, 393, 394, 396, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 417, 419, 433, 434, 437, 439, 440, 446, 447, 448, 449, 450, 451, 452, 453, 457, 462, 472, 479, 480, 481, 483, 488, 492, 495, 496, 499, 501, 508, 521, 536, 569], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 105, 126, 127, 196, 197, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 324, 380, 385, 386, 388, 390, 392, 393, 394, 395, 399, 400, 401, 403, 404, 410, 415, 416, 422, 440, 446, 457, 462, 464, 478, 479, 488, 489, 492, 495, 501, 504, 508, 560, 584], "begin": [52, 87, 91, 103, 107, 111, 126, 128, 136, 405, 408, 411, 461, 463, 492, 495, 541, 546, 547, 551, 567, 586], "behav": [385, 395, 451, 466, 587], "behavior": [16, 84, 87, 90, 91, 95, 105, 127, 409, 436, 440, 451, 453], "behaviour": [360, 385, 407, 408, 434, 439, 445, 452, 479, 493, 500, 501, 520, 585], "behind": 483, "being": [125, 135, 197, 385, 390, 393, 399, 406, 409, 416, 463, 472, 484, 493, 513, 524, 537, 584], "belief": 497, "believ": [421, 497], "belong": [86, 409, 433], "below": [52, 53, 87, 91, 195, 199, 206, 207, 374, 375, 376, 380, 382, 386, 388, 389, 394, 395, 399, 401, 402, 405, 408, 409, 411, 412, 413, 414, 416, 417, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 461, 465, 481, 486, 489, 491, 493, 495, 496, 497, 499, 500, 521, 524, 542, 586], "benchmark": [401, 411, 416], "benefit": 402, "benn": 401, "berg": 583, "berge2007": [399, 533, 534, 583], "bernet": 452, "besancon": 514, "besid": [125, 136, 399, 400, 409, 414, 462, 463, 492, 500, 508, 509, 537], "best": [67, 71, 74, 75, 78, 80, 102, 126, 128, 129, 130, 133, 134, 144, 215, 216, 290, 292, 294, 378, 385, 388, 395, 398, 403, 411, 414, 418, 420, 457, 459, 461, 462, 463, 466, 469, 472, 481, 486, 488, 489, 497, 508, 522, 524, 526, 550, 556, 559, 560, 564, 586, 587, 588], "best_fit_model": 463, "beta": [27, 28, 48, 214, 243, 244, 245, 268, 408, 410, 433, 457, 459, 463, 470, 486, 489, 552, 558, 559, 560, 565, 575], "better": [385, 388, 390, 391, 392, 393, 394, 398, 399, 404, 405, 406, 409, 414, 427, 444, 445, 469, 470, 473, 481, 483, 489, 492, 493, 500, 520], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 106, 112, 123, 125, 126, 128, 130, 131, 133, 144, 145, 157, 163, 165, 166, 167, 169, 179, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 290, 309, 342, 375, 376, 383, 385, 386, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 409, 410, 412, 413, 414, 415, 424, 434, 437, 440, 451, 456, 463, 465, 470, 472, 475, 480, 481, 484, 488, 489, 491, 492, 493, 494, 497, 500, 501, 510, 520, 522, 529, 530, 533, 542, 543, 583, 586, 588], "bewar": [278, 458, 479], "bexcub": 200, "bexpcub": [195, 196, 197, 199, 208, 209, 492], "beyond": [200, 399, 409, 412, 433, 491, 512], "bfg": 489, "bgstat": 443, "bi": [444, 447], "bia": [96, 153, 154, 158, 182, 445, 451, 491, 497, 528], "bias": [463, 585], "bias_energi": 153, "bias_perc": 182, "bibliographi": 583, "bic": 414, "biederbeck": [413, 452], "big": [392, 395, 402, 415, 447, 500, 585, 587], "bigger": 197, "biggest": 404, "billion": 385, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 101, 103, 106, 107, 110, 111, 112, 114, 115, 121, 123, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 147, 148, 149, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 176, 178, 179, 180, 182, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 286, 295, 301, 302, 309, 378, 380, 383, 391, 396, 397, 398, 399, 401, 404, 405, 409, 417, 418, 428, 429, 431, 432, 434, 436, 437, 439, 442, 443, 444, 445, 446, 451, 452, 453, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 520, 522, 524, 528, 531, 532, 582, 583, 584, 585, 587], "bin_cent": 481, "bin_edg": 481, "bin_volum": [200, 204, 207, 537], "bin_width": [198, 201, 206, 481], "binari": [207, 209, 393, 399, 402, 411, 416, 437], "binary_dil": [209, 493], "binary_erod": [209, 493], "binary_eros": [209, 437], "binary_structur": 207, "bincent": 302, "bind": 388, "binder": [393, 415, 445, 448, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "binlik": 128, "binned_likelihood": 129, "binneddataaxi": [428, 444], "binnedtimeseri": [128, 400], "bins_axi": 209, "binsiz": [16, 462, 466, 467, 469, 478, 508, 509], "binsize_irf": [16, 462, 466, 467, 469, 478, 508], "binsz": [103, 106, 107, 111, 112, 113, 118, 155, 164, 166, 176, 179, 180, 184, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 401, 461, 471, 472, 473, 474, 477, 481, 485, 487, 490, 491, 492, 493, 495, 500, 501, 509, 531, 533, 534, 536, 537, 540, 542, 543, 544, 545], "binsz_irf": [103, 106, 107, 111, 112, 116, 487, 491, 524], "binsz_irf_default": [103, 106, 107, 111, 112, 491], "binsz_wc": [204, 205], "bintabl": [195, 196, 197, 199, 208, 209], "bintablehdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 200, 201, 207, 208, 209, 473, 492, 520], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 144, 386, 388, 392, 393, 399, 403, 404, 412, 453, 481, 492, 537], "bitbucket": 502, "bitpix": 492, "bkg": [16, 82, 87, 88, 103, 107, 108, 109, 111, 112, 150, 151, 152, 182, 189, 235, 407, 432, 434, 439, 453, 456, 461, 462, 466, 467, 469, 470, 473, 474, 477, 481, 487, 490, 491, 494, 499, 501, 502, 508, 509, 520, 527, 583, 585, 586, 587], "bkg_": [103, 107, 111], "bkg_2d": [87, 150], "bkg_3d": [82, 87, 151, 499, 502], "bkg_err": 481, "bkg_maker": [407, 458, 461, 463, 471, 479, 483, 533], "bkg_model": [397, 407, 413, 469, 473, 474, 477, 494, 509, 544], "bkg_ob": 108, "bkg_sy": 135, "bkg_syst_fract": [135, 456], "bkg_syst_fraction_sensit": 125, "bkgfile": 108, "bkzr": 483, "black": [111, 112, 374, 375, 382, 403, 446, 448, 456, 481, 485, 491, 496, 533, 569], "blackground": 456, "blanch": [445, 446], "blanklin": [242, 422, 522, 537], "blazar": [307, 457, 483], "blind": [448, 524], "bll": 510, "blob": 425, "block": [386, 388, 391, 398, 405, 416, 425, 445], "block_reduc": 446, "blue": [102, 103, 106, 107, 111, 112, 375, 457, 461, 467, 469, 472, 496, 533, 569], "blur": 33, "board": [394, 405], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 385, "boller": 484, "boni": [437, 440], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 125, 126, 127, 128, 129, 133, 134, 136, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 293, 309, 312, 321, 324, 325, 342, 348, 351, 353, 354, 356, 382, 385, 399, 471, 486, 491, 492], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 126, 129, 130, 133, 134, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 214, 227, 251, 267, 401, 434, 469, 486, 492, 493, 494], "boost": 473, "bootstrap": [87, 91, 414], "border": 91, "bose": 428, "bot": 391, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 153, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 219, 385, 390, 391, 396, 397, 398, 399, 400, 405, 410, 415, 427, 431, 433, 434, 437, 440, 462, 463, 473, 477, 487, 488, 492, 493, 494, 496, 497, 521, 522, 524, 536, 537, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 586], "bother": 466, "bottom": [405, 407, 457, 473, 478, 479, 480, 484, 486], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 194, 195, 201, 204, 206, 207, 214, 221, 222, 225, 226, 227, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 251, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 306, 394, 492, 497], "boundari": [201, 207, 279, 413, 414, 442, 453, 489, 495, 536], "boundary_mask": [207, 493], "boundary_typ": 201, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 385, 490], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 107, 130, 131, 204, 207, 209, 344, 345, 394, 399, 403, 409, 414, 444, 493, 495, 537], "bpl": [221, 408, 495], "bpwl_norm": 408, "bracket": [153, 214, 449, 451], "brake": 51, "branch": [385, 388, 392, 399, 410, 416, 425], "branchnam": 385, "bratio": 512, "break": [221, 268, 391, 399, 401, 410, 431, 432, 433, 453, 551, 565], "brent": 465, "brentq": [19, 20, 26, 128, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 291], "breviti": [469, 524], "brief": 588, "briefli": [501, 502], "bright": [68, 130, 267, 283, 467, 478, 479, 493, 495, 518, 533], "brighter": 473, "brightest": 486, "brigitta": [402, 427, 429, 431, 433, 442, 443, 444, 445, 446, 447, 448, 453], "bring": 390, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 202, 205, 208, 209, 267, 324, 453, 474, 490, 492, 536], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [221, 268, 411, 415, 455, 483, 538, 570], "brokenpowerlaw": 408, "brokenpowerlawspectralmodel": [262, 268, 408, 434, 495, 551], "brought": 453, "brown": [140, 484], "brown2013": 140, "brows": [87, 91, 386, 422, 510], "browser": [87, 91, 388, 416, 422, 442, 445, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "bruno": [411, 414, 429, 431, 434, 437, 440, 444, 445, 446, 448, 449, 450, 451, 452, 453], "br\u00fcgge": [445, 446], "bsd": 411, "bst": [87, 91], "buchner": [414, 437], "buchner2023": 414, "budget": 524, "buffer": 363, "bug": [385, 388, 391, 392, 410, 411, 415, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 449, 450], "bugfix": [392, 394, 410, 444, 445], "build": [16, 84, 90, 105, 127, 195, 229, 385, 391, 392, 393, 398, 399, 401, 405, 409, 410, 411, 412, 415, 433, 439, 448, 453, 465, 469, 481, 491, 493, 521, 524, 584], "build_doc": [349, 386, 388, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 556, 572], "built": [10, 183, 229, 352, 369, 384, 385, 386, 396, 397, 399, 401, 402, 404, 412, 416, 423, 446, 451, 486, 494, 500, 504, 520], "builtin": 510, "bullet": 390, "bump": [399, 444], "bunch": [104, 110, 386, 584], "bundl": [102, 103, 106, 111, 112, 394, 397, 416, 438, 446, 471, 487, 491, 520, 537, 582, 583], "bunit": [371, 446, 492], "bureaucrat": 390, "burkert": [17, 512], "burn": 414, "burst": 484, "butterfli": [445, 489, 510], "button": [448, 492], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 105, 127], "byte": [16, 84, 87, 90, 91, 105, 127, 330, 363, 385], "bytearrai": [16, 84, 90, 105, 127, 330], "bytestr": [87, 91], "bz4ifjri": 483, "b\u00fchler": 425, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 202, 212, 231, 271, 295, 301, 312, 352, 384, 385, 402, 418, 419, 421, 438, 445, 461, 467, 481, 483, 485, 489, 497, 499, 500, 512, 536, 555, 566, 584, 585, 587], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1kd7wy": 457, "c7": 102, "c_": 212, "c_0": [194, 195, 204, 207], "c_i": [194, 195, 204, 207], "c_n": [194, 195, 204, 207], "cabot": 453, "cach": [87, 88, 91, 100, 103, 106, 107, 111, 112, 277, 320, 321, 394, 395, 397, 404, 407, 416, 430, 434, 437, 452], "cahil": 439, "cal_gen_92_002": [153, 201], "cal_gen_92_002_summari": 153, "calcul": [13, 15, 19, 20, 26, 96, 106, 112, 139, 140, 141, 142, 182, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 279, 280, 297, 299, 300, 309, 311, 334, 367, 375, 376, 395, 398, 427, 433, 437, 438, 439, 445, 450, 452, 456, 481, 484, 485, 488, 497, 508, 509, 512, 524, 583, 587], "caldb": [82, 151, 153, 155, 156, 157, 166, 201, 439, 456, 464, 473, 474, 477, 480, 490, 499], "calendar": [410, 415], "calib_vers": [500, 510], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 102, 103, 105, 106, 107, 111, 112, 127, 139, 140, 141, 142, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 194, 195, 204, 207, 214, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 238, 240, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 282, 324, 336, 357, 363, 371, 374, 382, 385, 386, 388, 390, 391, 394, 397, 398, 399, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 422, 433, 437, 451, 461, 462, 471, 486, 487, 488, 489, 491, 492, 495, 500, 502, 508, 509, 510, 520, 524, 533, 534, 535, 536, 537, 584, 585, 586, 587], "callabl": [16, 45, 84, 90, 105, 127, 286, 414], "callback": [172, 584], "caller": [385, 396], "camera": [480, 490, 491], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 103, 105, 106, 107, 110, 111, 112, 116, 121, 125, 126, 127, 128, 133, 134, 136, 137, 144, 146, 151, 156, 164, 166, 169, 173, 179, 182, 194, 195, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 214, 218, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 291, 293, 298, 312, 324, 325, 330, 333, 342, 361, 363, 378, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 429, 431, 433, 434, 437, 439, 440, 444, 445, 446, 447, 448, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 509, 510, 512, 514, 515, 520, 521, 522, 524, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 558, 560, 569, 579, 581, 582, 583, 584, 585, 586, 587], "candel": 229, "candid": [410, 439, 486], "candl": [284, 583], "cannot": [16, 67, 84, 87, 90, 91, 95, 105, 114, 115, 126, 127, 128, 211, 301, 352, 382, 388, 398, 399, 451, 490, 494, 495, 522, 537], "cap": [51, 54], "capabl": [395, 500, 512], "capsiz": 497, "captur": [385, 401], "car": [103, 106, 107, 111, 112, 176, 207, 208, 209, 227, 251, 399, 429, 471, 490, 491, 492, 509, 510], "card": [83, 86, 88, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 492], "care": [126, 128, 312, 385, 394, 401, 410, 458, 463, 469, 492, 584], "carefulli": [411, 473, 474, 497], "carina": [33, 38], "carlo": [403, 414, 529, 583], "carri": [400, 408, 410, 412, 437, 459, 509], "carr\u00e9": 207, "cartesian": [41, 46, 197, 208, 209, 315, 317, 450, 510, 536], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 102, 153, 172, 184, 195, 197, 203, 204, 207, 209, 214, 217, 219, 240, 252, 275, 277, 279, 291, 301, 325, 342, 380, 385, 386, 388, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 418, 426, 427, 430, 433, 439, 440, 445, 451, 452, 456, 458, 461, 462, 463, 464, 466, 467, 469, 473, 474, 477, 478, 480, 481, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 504, 508, 510, 519, 522, 523, 524, 534, 537, 541, 542, 543, 546, 547, 551, 560, 567, 582, 584, 586], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [103, 106, 111, 112, 176, 296, 301, 308, 385, 397, 437, 464, 466, 469, 477, 480, 487, 491, 494, 497, 508, 509, 520, 583], "cash1979": [583, 586], "cash_weight": 107, "cashcountsstatist": [422, 452, 584, 586], "cast": 91, "cat": [66, 67, 79, 393, 416, 444, 445, 459, 486, 495, 519, 583, 584], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 125, 129, 399, 405, 425, 429, 431, 433, 437, 438, 439, 442, 443, 444, 445, 446, 448, 452, 453, 455, 457, 459, 465, 470, 487, 495, 498, 500, 504, 514, 548, 582, 583], "catalog_3fgl": 459, "catalog_3fhl": [459, 486], "catalog_3fhl_bright": 486, "catalog_4fgl": 486, "catalog_4fgl_roi": 486, "catalog_gammacat": [459, 486], "catalog_hgp": 486, "catalog_registri": [459, 486, 493], "catalogimageestim": 446, "catalogu": [78, 437, 444], "catch_warn": 524, "categori": [385, 396, 409, 437, 453, 493, 495, 538], "caus": [392, 399, 446, 449, 524], "cautious": 472, "caveat": [214, 307, 452, 542], "cax": 490, "cb98": 48, "cbar": 373, "cbar_kw": 379, "cbarlabel": 379, "cc": [394, 399, 401, 404, 406, 408, 411, 413], "ccube": [195, 196, 197, 199, 200, 201, 207, 208, 209, 492], "cd": [385, 386, 388, 401, 418, 419, 420], "cdelt": [207, 209], "cdelt1": 492, "cdelt2": 492, "cdf": [334, 398, 414, 473, 489], "cdot": [51, 52, 53, 54, 103, 107, 111, 256, 271, 408, 495, 520, 541, 546, 547, 551, 554, 555, 562, 563, 565, 566, 567, 568, 573, 574, 575, 577, 585], "celesti": [492, 536, 541, 545, 588], "celfix": 548, "cell": [393, 422, 448, 470, 481, 492, 499, 500, 510], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 103, 106, 107, 111, 112, 114, 115, 126, 128, 130, 131, 132, 136, 153, 154, 155, 156, 157, 158, 161, 165, 166, 167, 169, 176, 179, 180, 182, 183, 184, 186, 187, 189, 190, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 314, 318, 344, 385, 386, 399, 401, 408, 409, 427, 428, 437, 439, 452, 456, 458, 461, 463, 464, 465, 466, 467, 469, 471, 473, 474, 475, 479, 480, 481, 483, 485, 490, 491, 492, 493, 494, 495, 499, 500, 509, 510, 526, 527, 528, 529, 530, 531, 533, 534, 536, 537, 541, 542, 545], "center_coord": [194, 195, 200, 204, 207], "center_pix": [194, 195, 204, 207], "center_ski": 537, "center_skydir": [194, 195, 204, 207, 491, 492, 500, 501, 531, 533, 534], "centr": [485, 493, 512], "central": [397, 406, 459, 510], "cern": 512, "certain": [50, 83, 87, 91, 214, 298, 384, 399, 401, 403, 409, 456, 485, 491, 492, 500, 519, 537], "certainli": 388, "certif": 411, "certifi": 411, "cfa": [214, 489], "cff": 415, "cg": 516, "ch": 53, "chain": [172, 398, 401, 414, 431, 491, 524, 534, 583], "chainer": 403, "chakraborti": [443, 444], "challeng": [392, 394, 398, 444, 467, 469, 471, 499], "chanc": 390, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 105, 126, 127, 128, 195, 204, 207, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 360, 370, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 415, 416, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 443, 444, 445, 446, 447, 449, 454, 463, 464, 465, 471, 473, 474, 478, 483, 484, 487, 488, 489, 493, 495, 497, 499, 508, 520, 524, 531, 533, 537, 548, 556, 584], "changelog": [385, 415, 438, 446], "channel": [19, 20, 26, 384, 387, 388, 402, 445, 474, 485, 492, 502, 512], "channel0": 512, "channel1": 512, "channel_registri": [19, 20, 26], "chapter": 485, "charact": [87, 91, 385, 494], "character": [300, 409, 473], "characterist": [21, 25, 27, 51, 52, 53, 54, 140, 298, 396, 451, 484, 583], "charg": [411, 415, 560], "chatti": [385, 471], "cheat": 421, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 103, 106, 107, 108, 111, 112, 126, 128, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 218, 220, 227, 251, 267, 307, 359, 361, 388, 401, 407, 411, 415, 416, 418, 419, 420, 423, 432, 437, 445, 453, 459, 477, 483, 490, 504, 512, 524, 528, 537, 581, 584, 585], "check_limit": [217, 218, 219, 220], "check_random_st": 385, "check_tutorials_setup": [456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "checker": [443, 446], "checklist": 416, "checkout": [385, 388, 415, 428, 469, 473, 495], "checksum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 215, 227, 251, 348, 351, 354, 452, 470, 500], "chen": 446, "cherenkov": [156, 398, 418, 423, 458, 461, 467, 478, 491, 499, 501, 533, 534, 583], "cherri": [385, 392, 399, 410], "chi": [297, 400, 585, 586, 587], "chi2": [102, 138, 147, 397, 428, 461, 472, 480, 489, 520, 586], "chi2assym": 431, "child": 395, "children": [469, 477, 492, 508, 509], "chime": 388, "chisq": 297, "chisquar": 297, "chmod": 584, "choic": [139, 398, 402, 404, 411, 414, 461, 462, 464, 466, 489, 501, 508, 525, 581, 584], "choos": [45, 77, 194, 195, 198, 200, 201, 204, 207, 280, 326, 397, 399, 401, 405, 414, 418, 420, 437, 459, 461, 465, 469, 471, 480, 487, 489, 491, 492, 494, 495, 496, 500, 509, 524, 584], "chose": [473, 500, 501, 586, 588], "chosen": [26, 153, 166, 169, 195, 196, 197, 205, 208, 209, 227, 237, 251, 385, 388, 400, 401, 404, 462, 479, 491, 492, 496, 497, 501, 508, 522, 532, 533, 537], "christoph": [390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 425, 426, 427, 428, 429, 430, 431, 432, 438, 441, 442, 443, 444, 445, 446, 447], "chrome": [87, 91], "chromei": 439, "chunk": [155, 166, 169], "chunk_siz": [155, 166, 169], "ci": [385, 388, 392, 411, 416, 431, 437, 439, 442, 448], "circl": [83, 184, 382, 386, 399, 439, 461, 471, 480, 485, 491, 493, 496, 499, 509, 510, 521, 531, 533, 534, 537], "circle_area": 386, "circleannulusskyregion": [264, 265, 533], "circledast": 520, "circlepixelregion": 399, "circleskyregion": [103, 106, 107, 111, 112, 178, 179, 183, 207, 228, 386, 399, 456, 458, 461, 463, 464, 467, 469, 471, 473, 474, 479, 483, 485, 487, 491, 493, 494, 509, 531, 533, 534, 537], "circular": [91, 103, 106, 107, 183, 195, 197, 207, 396, 404, 406, 458, 463, 487, 496, 533, 537], "circumv": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "cirelli": [26, 512], "citat": 415, "cite": [388, 411], "cl": [16, 84, 90, 103, 105, 107, 111, 127, 412], "clabel": 489, "claim": 414, "clang": 422, "clarif": 390, "clarifi": [409, 451], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 320, 321, 324, 332, 334, 359, 372, 388, 391, 394, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 413, 414, 418, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 456, 459, 461, 462, 463, 464, 465, 466, 467, 471, 473, 474, 477, 478, 481, 486, 487, 488, 489, 490, 491, 492, 495, 497, 499, 500, 501, 508, 510, 515, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 532, 534, 535, 536, 537, 538, 560, 569, 581, 582, 583, 584, 589], "class1": 486, "class2": 486, "classic": [394, 403, 414, 418, 427, 458, 461, 467, 471, 487, 491, 522, 524, 533, 534, 583, 586], "classifi": 501, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 412], "classproperti": 437, "classvar": [16, 84, 90, 105, 127], "claudio": [450, 452, 453], "claus": [385, 411], "clean": [385, 386, 388, 393, 394, 399, 401, 403, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 444, 445, 446, 447], "cleaner": 448, "cleanup": [392, 404, 416, 425, 430, 431, 436, 437, 438, 442, 443, 445, 453], "clear": [92, 100, 203, 251, 385, 390, 392, 396, 399, 400, 404, 405, 406, 445, 472, 588], "clearer": 430, "clearli": [140, 385, 390, 391, 399, 402, 410], "cli": [11, 401, 447, 582], "click": [384, 401, 402, 422, 430, 445, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 584], "clip": [19, 20, 26, 194, 195, 198, 200, 201, 204, 206, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 279, 280, 324, 430, 431, 465], "clockwis": [228, 237, 240, 541], "clone": [388, 419, 446], "close": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 279, 360, 361, 362, 394, 399, 415, 440, 451, 452, 453, 489, 569], "closer": 510, "closest": [121, 125, 129, 133, 136, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 488, 493, 522], "cloud": [416, 504], "cluster": [6, 96, 310, 311, 398, 414, 451, 452, 455, 498, 504, 521, 524], "clutter": [469, 524], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 102, 128, 134, 136, 221, 225, 231, 233, 238, 245, 249, 256, 258, 267, 268, 271, 272, 273, 283, 370, 396, 408, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 479, 480, 481, 485, 486, 488, 489, 495, 497, 499, 500, 508, 510, 517, 518, 522, 524, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583], "cm2": [51, 54, 67, 109, 128, 145, 156, 209, 284, 370, 456, 457, 459, 461, 462, 464, 465, 469, 470, 471, 473, 474, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 492, 494, 495, 497, 500, 508, 509, 510, 522, 537, 553, 556, 559, 564, 569], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 485], "cm5": 485, "cmap": [103, 106, 107, 111, 112, 375, 376, 463, 469, 485, 492, 494, 500, 501, 508, 509, 533], "cmb": 560, "co": [53, 202, 410, 411, 456, 541, 542, 543], "coadd": [196, 197, 199, 205, 208, 209], "coars": 487, "coarser": [201, 206, 487], "codaci": 416, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 153, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 380, 388, 389, 390, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 419, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 442, 443, 444, 445, 446, 448, 451, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 512, 524, 531, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 584], "codebas": [386, 402, 414, 425, 444, 446], "codemeta": 439, "codespel": 437, "codestyl": 388, "coeffici": [131, 243, 248, 550], "coerce_numbers_to_str": 105, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 453, "coincid": 484, "col": [87, 91, 437], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 379, "collabor": [77, 375, 376, 390, 392, 394, 398, 439, 472, 500, 583], "colleagu": [388, 414, 584], "collect": [203, 251, 385, 387, 412, 414, 416, 444, 445, 462, 487, 494, 512, 521, 525, 529, 583, 588], "collis": 50, "colnam": [87, 91, 196, 197, 199, 205, 208, 209, 500, 510], "color": [102, 111, 112, 150, 151, 209, 374, 375, 376, 379, 382, 386, 456, 457, 459, 461, 462, 463, 464, 465, 467, 469, 471, 472, 475, 478, 481, 485, 488, 489, 491, 494, 496, 497, 524, 533, 537, 541, 542, 560, 569], "colorbar": [128, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 209, 373, 379, 483, 489, 492], "colorblind": 524, "colorblind10": 524, "colormap": [374, 375, 376, 425, 438, 510], "colormap_hess": [406, 589], "colormap_milagro": 589, "colour": 448, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 104, 110, 126, 128, 131, 144, 150, 151, 153, 177, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 278, 300, 310, 355, 356, 357, 358, 378, 379, 382, 383, 385, 398, 400, 409, 448, 451, 452, 456, 474, 481, 486, 492, 495, 499, 521, 524], "column_nam": 490, "column_prefix": 201, "columnclass": [87, 91], "columnspac": 382, "com": [138, 140, 147, 307, 339, 340, 352, 388, 405, 415, 416, 419], "combin": [99, 102, 103, 106, 107, 111, 112, 137, 146, 148, 182, 190, 196, 197, 199, 204, 205, 208, 209, 222, 267, 385, 391, 395, 396, 397, 398, 399, 400, 405, 408, 418, 430, 445, 451, 453, 459, 464, 469, 470, 477, 480, 487, 489, 490, 491, 492, 493, 495, 501, 509, 510, 512, 514, 524, 531, 536, 552, 582, 583], "combine_flux_map": [146, 453], "combine_significance_map": 147, "combined_ev": 521, "combining_and_defin": [456, 464, 466, 469, 471, 477, 480, 499], "come": [69, 388, 391, 392, 393, 394, 395, 399, 400, 401, 402, 404, 405, 410, 412, 415, 416, 433, 434, 437, 446, 447, 451, 461, 469, 477, 495, 499, 508, 584], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 486], "command": [6, 13, 94, 102, 128, 157, 163, 165, 167, 384, 386, 388, 393, 394, 396, 401, 402, 416, 417, 418, 419, 420, 421, 427, 431, 442, 445, 446, 448, 473, 523, 582], "commensur": 209, "comment": [128, 385, 386, 390, 394, 398, 399, 401, 402, 404, 406, 408, 410, 411, 414], "commit": [385, 388, 393, 399, 410, 411, 415, 424, 425, 448], "committe": [390, 392, 410, 411], "commod": 411, "common": [95, 384, 385, 386, 388, 390, 391, 399, 401, 405, 406, 408, 409, 411, 419, 421, 422, 437, 439, 462, 463, 475, 486, 490, 493, 495, 508, 509, 512, 519, 522, 523, 537, 542, 584], "common_irf_head": 490, "commonli": [29, 83, 399, 403, 414, 446, 475, 512, 581, 582, 584, 586, 589], "commun": [385, 401, 407, 411, 415, 417, 423, 502], "comp": 486, "compact": [16, 84, 87, 90, 91, 105, 127], "compar": [87, 91, 129, 130, 133, 134, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 290, 385, 399, 402, 405, 414, 434, 450, 451, 456, 457, 458, 461, 465, 469, 472, 475, 477, 479, 483, 486, 489, 491, 497, 500, 508, 519, 583, 585], "comparison": [86, 87, 91, 100, 133, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 342, 442, 514], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 208, 209, 235, 390, 392, 396, 399, 408, 410, 412, 413, 422, 425, 427, 429, 446, 452, 453, 492, 536], "compil": [388, 438], "complain": 388, "complaint": 403, "complement": 405, "complementari": [102, 137, 146, 461], "complet": [13, 16, 84, 90, 105, 127, 342, 385, 391, 395, 396, 397, 398, 399, 402, 403, 405, 409, 410, 411, 414, 415, 419, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 442, 443, 444, 445, 446, 447, 469, 474, 489, 496, 504, 524, 529], "complex": [385, 386, 391, 395, 399, 400, 401, 407, 409, 414, 422, 453, 458, 461, 471, 474, 480, 484, 487, 492, 493, 495, 496, 500, 533], "complianc": [411, 448], "compliant": [196, 197, 199, 208, 209, 452, 583], "complic": [399, 537], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 103, 104, 106, 107, 110, 111, 112, 133, 140, 168, 170, 204, 227, 251, 252, 267, 283, 396, 397, 398, 401, 407, 408, 427, 431, 433, 437, 445, 446, 457, 462, 463, 464, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 483, 486, 487, 488, 494, 495, 499, 500, 508, 509, 512, 520, 522, 524, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583], "component_1": 396, "component_2": 396, "component_class": 486, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391, 411], "composit": [57, 70, 80, 323, 411, 444], "compound": [204, 211, 222, 343, 347, 399, 408, 455, 457, 475, 538, 570], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 439], "compoundpixelregion": 347, "compoundskymodel": 396, "compoundskyregion": [211, 343, 347], "compoundsourcemodel": 396, "compoundspectralmodel": [262, 408, 451, 457, 495, 500, 550, 552, 556, 559, 561, 564, 569], "compress": 393, "compris": 501, "compromis": [385, 390, 398, 497], "compton": [252, 433, 560], "compulsori": 495, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 102, 103, 105, 106, 107, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 182, 183, 185, 188, 189, 190, 191, 193, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 210, 214, 221, 222, 225, 227, 229, 231, 232, 233, 238, 242, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 283, 284, 290, 291, 292, 294, 297, 298, 299, 300, 302, 306, 307, 311, 315, 316, 319, 385, 394, 395, 396, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 413, 414, 416, 418, 419, 423, 425, 427, 428, 429, 430, 433, 434, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 463, 465, 469, 470, 474, 475, 478, 479, 481, 484, 485, 487, 488, 491, 494, 495, 496, 497, 500, 501, 502, 508, 510, 512, 520, 522, 524, 529, 533, 560, 582, 583, 584, 585, 586, 587, 588], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 214, 398, 399, 520], "compute_chisq": 444, "compute_differential_jfactor": 23, "compute_errn": [292, 294, 448, 586], "compute_errp": [292, 294, 586], "compute_flux_doubl": 140, "compute_fpp": 141, "compute_fvar": [142, 299], "compute_jfactor": [23, 485], "compute_lightcurve_doublingtim": 484, "compute_lightcurve_fpp": 484, "compute_lightcurve_fvar": 484, "compute_lima_map": 433, "compute_npr": 398, "compute_upper_limit": [292, 294], "computedfieldinfo": [16, 84, 90, 105, 127], "con": [385, 401], "concaten": [83, 86, 92, 198, 201, 397, 401, 407, 451, 492], "concentr": 344, "concept": [16, 84, 90, 105, 127, 405, 406, 412, 414, 423, 485, 492, 525], "conception": [398, 407], "conceptu": 414, "concern": [388, 390, 399, 401, 402, 404, 406, 408, 411, 437, 447, 501, 586], "conclud": 394, "concret": [16, 84, 90, 105, 127, 402, 405], "conda": [384, 388, 392, 393, 402, 405, 410, 415, 416, 418, 419, 420, 421, 422, 427, 429, 445, 446, 584], "condit": [52, 53, 149, 201, 218, 220, 227, 251, 409, 413, 434, 453, 456, 461, 464, 474, 486, 493, 494, 496, 501, 520, 529], "conduct": [448, 480], "cone": [91, 399, 462, 496, 508, 509, 524], "conesearch": 401, "conf": [87, 91, 385, 386, 416, 428, 443], "conf_1d": 478, "conf_3d": 478, "conf_max": [217, 219], "conf_min": [217, 219], "confid": [125, 214, 217, 219, 292, 294, 396, 403, 428, 433, 447, 583, 586], "confidence_opt": [214, 488], "config": [15, 16, 84, 90, 105, 127, 384, 386, 391, 393, 394, 401, 402, 405, 412, 418, 420, 430, 431, 432, 437, 445, 462, 469, 508, 581], "config_dict": 508, "config_joint": 469, "config_paramet": [121, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136], "config_stack": 469, "config_str": 16, "configdict": [16, 84, 90, 105, 127], "configpars": 443, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 102, 105, 111, 112, 121, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 332, 385, 386, 388, 394, 396, 400, 401, 405, 406, 412, 415, 416, 422, 430, 432, 433, 437, 439, 448, 451, 452, 461, 463, 465, 471, 473, 474, 483, 499, 504, 523, 524, 529, 583, 584], "confirm": [388, 415], "conflict": [87, 91, 385, 388, 411], "confluenc": 502, "conform": [16, 84, 90, 105, 127, 492], "confus": [385, 386, 391, 404], "connect": [395, 461, 475, 477, 493, 509, 581], "consant": [196, 197, 199, 205, 208, 209], "consciou": 390, "consecut": [179, 342, 385, 410], "consensu": [390, 411], "consent": 385, "consequ": [411, 474, 537], "conserv": [520, 545], "consid": [19, 20, 59, 96, 176, 183, 186, 187, 189, 190, 197, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 290, 381, 390, 391, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 411, 413, 458, 461, 463, 469, 473, 474, 484, 490, 493, 521, 524, 529, 587], "consider": [401, 427, 437, 445, 469], "consist": [74, 91, 95, 126, 128, 154, 155, 166, 169, 194, 195, 196, 197, 199, 204, 207, 208, 209, 237, 240, 385, 395, 396, 398, 399, 400, 405, 412, 430, 431, 432, 433, 434, 441, 445, 446, 448, 450, 451, 452, 462, 463, 464, 465, 472, 477, 480, 489, 491, 492, 495, 497, 508, 558, 560, 585], "consol": [385, 584], "consortium": [412, 499], "const": [223, 224, 225, 226, 408, 474, 495, 553, 571], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 408, "constant": [50, 51, 52, 53, 103, 107, 111, 121, 156, 196, 197, 199, 205, 207, 208, 209, 223, 224, 225, 226, 228, 241, 243, 341, 398, 399, 404, 445, 455, 478, 500, 517, 520, 538, 549, 570, 580, 583, 587], "constant_model": 571, "constantmodel": 447, "constantnormspectralmodel": 408, "constantspatialmodel": [261, 408, 495, 500, 540], "constantspectralmodel": [262, 408, 474, 495, 553], "constanttemporalmodel": [274, 408, 430, 495, 571], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 487, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 411, 457, 466, 470, 491, 497, 531], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 524], "construct": [16, 84, 90, 105, 127, 201, 244, 245, 350, 537, 583], "constructor": [194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 451, 509, 535], "consult": 421, "consum": [414, 489, 524], "contact": [387, 392, 394, 411, 421, 423, 426, 427, 428, 442, 445], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 102, 103, 105, 106, 107, 110, 111, 112, 114, 115, 119, 126, 127, 128, 136, 137, 138, 139, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 181, 183, 188, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 298, 310, 311, 378, 380, 382, 383, 385, 388, 389, 391, 393, 394, 395, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 411, 414, 415, 416, 423, 427, 431, 432, 433, 434, 436, 437, 439, 440, 443, 444, 445, 446, 447, 451, 452, 453, 456, 459, 461, 462, 463, 466, 469, 470, 473, 474, 477, 478, 479, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 512, 513, 515, 520, 521, 522, 524, 528, 532, 533, 536, 537, 538, 581, 583, 585, 586, 587], "containment_correct": [16, 103, 106, 107, 183, 456, 461, 462, 463, 466, 467, 469, 471, 478, 479, 481, 483, 487, 491, 508], "containment_fract": 96, "containment_radiu": [157, 163, 165, 166, 167, 169, 456, 487, 490, 493], "containment_radius_map": [166, 169], "contains_pix": [194, 195, 204, 207], "contains_wcs_pix": 204, "contamin": [67, 467, 486, 493, 533], "content": [84, 90, 105, 127, 128, 196, 197, 199, 205, 208, 209, 348, 351, 385, 388, 390, 394, 400, 405, 412, 416, 431, 440, 445, 458, 492, 493, 499, 501, 521, 524, 535, 536], "content_typ": [16, 84, 90, 105, 127], "context": [16, 84, 87, 90, 91, 105, 127, 218, 220, 227, 251, 332, 363, 385, 400, 411, 416, 452, 492, 514], "contigu": [201, 206, 437], "continu": [201, 392, 394, 395, 398, 399, 401, 402, 404, 405, 410, 422, 425, 426, 429, 437, 442, 443, 444, 446, 461, 474, 483, 493, 536, 583], "continuous_upd": [469, 477, 492, 508, 509], "contour": [211, 214, 377, 394, 414, 447], "contour_": 489, "contourf": 209, "contract": 411, "contrari": [386, 393], "contrast": [405, 583], "contrera": 447, "contribut": [100, 117, 120, 227, 235, 251, 267, 381, 385, 387, 394, 399, 407, 409, 416, 423, 426, 437, 439, 441, 491, 525, 560, 581, 584, 585], "contributes_to_stat": 100, "contributor": [385, 388, 405, 416, 424, 435, 436], "control": [83, 87, 91, 103, 106, 107, 111, 112, 385, 398, 417, 419, 456, 485, 492, 497, 524, 586], "controversi": [385, 390, 391, 405], "conveni": [13, 126, 384, 385, 388, 395, 399, 407, 409, 417, 427, 429, 434, 437, 439, 444, 471, 483, 485, 486, 487, 492, 493, 494, 495, 499, 501, 510, 519, 523, 582], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 153, 195, 196, 197, 199, 207, 208, 209, 407, 409, 429, 430, 433, 434, 448, 453, 487, 491, 492, 495, 520, 522, 529, 536, 586], "converg": [413, 428, 449, 461, 463, 469, 483, 489, 520, 524, 531, 541], "convers": [84, 87, 90, 91, 105, 126, 127, 128, 137, 146, 390, 409, 412, 418, 420, 437, 450, 451, 452, 456, 537], "conversion_typ": [500, 510], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 102, 103, 106, 107, 109, 111, 112, 126, 128, 131, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 217, 218, 219, 220, 227, 242, 251, 290, 309, 312, 313, 317, 330, 346, 366, 368, 369, 386, 391, 399, 400, 409, 412, 416, 438, 450, 451, 452, 453, 456, 465, 472, 479, 480, 483, 487, 488, 489, 493, 494, 499, 510, 522, 528, 533, 536, 586, 588], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 510, "convolut": [121, 125, 131, 136, 164, 197, 209, 384, 397, 403, 425, 432, 434, 443, 445, 446, 452, 453, 467, 492, 520, 537], "convolution_method": 197, "convolv": [106, 113, 118, 136, 164, 197, 209, 396, 425, 434, 437, 446, 464, 465, 467, 492, 530, 560], "convolve_ful": 197, "convolve_wc": 197, "cookiecutt": 401, "coolwarm": [469, 500, 501, 509], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 253, 298, 396, 430, 474, 492, 493, 533, 536, 537, 544], "coord_to_idx": [194, 195, 198, 200, 201, 204, 206, 207, 492], "coord_to_pix": [194, 195, 198, 200, 201, 204, 206, 207, 492], "coordiant": 490, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 91, 94, 95, 96, 103, 104, 106, 107, 110, 111, 112, 114, 115, 126, 128, 130, 131, 132, 140, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 227, 228, 237, 240, 242, 251, 253, 255, 264, 265, 267, 279, 298, 302, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 334, 340, 344, 345, 361, 386, 390, 391, 392, 394, 398, 399, 404, 405, 408, 410, 411, 425, 427, 430, 432, 443, 445, 446, 448, 456, 458, 461, 463, 464, 467, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 487, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 509, 510, 520, 528, 533, 535, 536, 541, 542, 545, 582, 583, 588], "coordsi": 432, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 107, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 312, 357, 385, 390, 393, 395, 399, 401, 407, 414, 415, 416, 422, 437, 439, 446, 447, 448, 451, 453, 457, 458, 461, 463, 464, 469, 471, 477, 479, 480, 483, 486, 489, 491, 495, 497, 500, 524, 533, 537, 548, 584], "copy_data": [87, 91, 227, 235, 251, 267, 275, 277, 279], "copy_indic": [87, 91], "copy_ob": [82, 524], "copy_on_getitem": [87, 91], "copyright": 422, "core": [16, 53, 84, 90, 105, 127, 162, 384, 385, 392, 398, 399, 406, 410, 411, 414, 415, 423, 426, 443, 447, 451, 456, 463, 464, 466, 469, 471, 473, 475, 477, 480, 483, 494, 499, 512, 522, 584], "corner": [399, 402, 414, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "corr_coord": [166, 169], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 103, 104, 106, 107, 155, 166, 169, 183, 188, 189, 202, 235, 253, 254, 279, 385, 397, 398, 410, 411, 412, 414, 415, 429, 432, 434, 435, 436, 437, 440, 443, 444, 446, 448, 449, 450, 451, 452, 453, 456, 457, 461, 462, 463, 464, 473, 477, 478, 486, 487, 489, 491, 493, 494, 495, 497, 501, 508, 510, 521, 522, 531, 544, 556, 559, 561, 564, 569], "correctli": [19, 20, 26, 77, 101, 154, 155, 161, 166, 169, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 386, 388, 411, 412, 427, 429, 434, 439, 440, 449, 490, 491, 492, 493, 494, 497, 536, 542], "correl": [19, 20, 26, 125, 131, 139, 212, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 280, 302, 403, 408, 409, 414, 437, 447, 453, 472, 475, 489, 493, 495, 497, 508, 522, 581], "correlate_off": [125, 467], "correlation_radiu": [16, 125, 144, 145, 462, 466, 467, 469, 481, 488, 501, 508, 522], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 87, 89, 91, 100, 101, 103, 106, 107, 111, 112, 126, 128, 129, 130, 131, 133, 134, 136, 137, 146, 153, 154, 155, 161, 164, 166, 168, 169, 170, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 221, 222, 225, 229, 231, 232, 233, 237, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 310, 378, 395, 396, 397, 398, 405, 406, 409, 411, 413, 431, 434, 458, 459, 461, 462, 463, 469, 473, 474, 478, 486, 489, 491, 492, 495, 496, 497, 499, 500, 501, 508, 510, 520, 521, 522, 524, 536, 537, 547, 550, 582, 583, 588], "cosimo": [434, 437, 439, 445, 446, 448, 451], "cosmic": [52, 229, 283, 403, 499], "cosmologi": 414, "coto": 445, "could": [16, 84, 90, 105, 127, 386, 388, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 414, 416, 458, 461, 469, 471, 486, 488, 497, 499, 500, 508, 523], "count": [16, 83, 92, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 116, 121, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 143, 145, 171, 173, 176, 177, 178, 183, 185, 189, 193, 196, 197, 199, 200, 201, 205, 208, 209, 218, 220, 227, 251, 292, 294, 295, 296, 301, 303, 306, 308, 309, 334, 370, 372, 381, 383, 391, 393, 396, 397, 398, 400, 401, 405, 409, 428, 429, 432, 434, 437, 439, 440, 446, 447, 451, 452, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 475, 477, 478, 479, 480, 481, 483, 487, 489, 491, 492, 493, 497, 501, 506, 508, 509, 510, 522, 524, 528, 531, 532, 533, 534, 537, 583, 584, 585, 587], "count_bkg": 481, "count_statist": 586, "counter": [228, 237, 240, 541], "counts_3d": 492, "counts_fil": 101, "counts_imag": [475, 487], "counts_min": 149, "counts_off": [103, 106, 107, 108, 111, 112, 171, 177, 178, 181, 383, 397, 439, 450, 451, 457, 462, 463, 464, 467, 471, 481, 487, 520, 586], "counts_on": 428, "counts_rat": 487, "counts_statist": 467, "countspredictor": 396, "countsspectrum": [397, 400, 428, 429, 431, 433, 442], "countsstatist": [292, 294, 409, 433, 434, 437, 448], "coupl": [393, 399, 404, 416, 434, 446, 492], "cours": [385, 388, 392, 395, 402, 422, 462, 469, 487, 492, 500, 508, 584, 587], "cousin": [428, 434, 442, 444, 583], "cousins2007": [583, 586], "coutinho": [434, 437], "cov": [257, 258, 414, 416], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [212, 378, 447], "covar_list": 212, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 129, 130, 133, 134, 213, 214, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 378, 403, 413, 414, 433, 439, 447, 448, 451, 453, 462, 508, 586], "covariance_data": [227, 235, 251, 267, 277], "covariance_opt": 214, "covariance_result": 215, "covariance_typ": 413, "covariancegaussianprior": 413, "covariancemixin": [222, 227, 267, 453], "covarianceresult": [102, 214, 215, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 489, 500, 508, 509], "cover": [278, 385, 387, 399, 400, 401, 409, 414, 458, 478, 479, 487, 492, 504, 510, 525], "coverag": [394, 400, 416, 425, 429, 437, 443, 446, 479, 489], "coveral": [416, 425], "cpu": [129, 130, 133, 136, 332, 333, 398, 414], "cpython": 390, "cqdlvlgu": 483, "crab": [67, 83, 111, 112, 134, 149, 214, 248, 284, 290, 393, 397, 405, 414, 425, 431, 443, 445, 461, 462, 463, 470, 471, 478, 486, 487, 488, 489, 493, 497, 500, 501, 502, 508, 509, 510, 522, 533, 537, 583], "crab_10gev_100tev_dataset": 470, "crab_3fhl": 510, "crab_3fhl_spec": 510, "crab_events_pass4": 501, "crab_fp": 462, "crab_fp_tabl": 462, "crab_hess_ecpl": 284, "crab_hess_fp": [126, 128, 148], "crab_magic_lp": 463, "crab_model": 489, "crab_posit": 533, "crab_spec": 470, "crab_spectrum": 489, "crabnebula": 478, "crabspectrum": 429, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 126, 127, 128, 129, 130, 133, 136, 137, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 178, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 290, 312, 322, 343, 347, 363, 372, 374, 379, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 429, 430, 431, 434, 437, 439, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 459, 462, 463, 464, 469, 471, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 489, 491, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 510, 512, 519, 520, 521, 524, 528, 531, 533, 534, 535, 536, 540, 542, 543, 544, 545, 550, 560, 569, 581, 582, 584, 589], "create_crab_spectral_model": [461, 463, 470], "create_dataset": 101, "create_fermi_isotropic_diffuse_model": [494, 500], "create_map_dataset_from_observ": [93, 110], "create_mask": [194, 195, 204, 207], "create_t": 483, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 130, 207, 394, 395, 399, 408, 411, 431, 437, 453, 484, 495, 502], "creator": [105, 127, 388, 412, 462, 466, 467, 469, 495, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "creatormedadata": 412, "creatormetadata": [84, 90, 105, 127, 412], "credit": 422, "crimson": 463, "criteria": [15, 91, 414, 439, 491, 496, 504], "criterion": [91, 136, 310, 456, 524], "critic": [414, 497], "criticis": 376, "crop": [86, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "crop_width": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "cross": [19, 391, 405, 453, 512], "crowd": 486, "crpix": 207, "crpix1": 492, "crpix2": 492, "crucial": [412, 414, 473, 474, 487], "cruft": 416, "crux": [33, 38, 483], "crval1": 492, "crval2": 492, "cryptic": 396, "csh": 584, "csobsselect": 395, "css": [87, 91, 416, 453], "cstat": [397, 414, 431], "csv": 128, "ct": [370, 446], "cta": [82, 83, 89, 103, 106, 107, 111, 112, 117, 120, 121, 125, 144, 145, 151, 155, 156, 157, 166, 229, 373, 378, 380, 389, 392, 393, 394, 398, 401, 404, 405, 415, 426, 427, 437, 443, 444, 445, 446, 453, 455, 456, 464, 466, 469, 471, 473, 474, 477, 480, 481, 487, 488, 490, 494, 503, 504, 508, 522, 526, 583], "cta_data_analysi": [405, 455, 471, 476], "cta_dataset": 494, "cta_north": 97, "cta_sensist": 405, "cta_sensit": [455, 456, 460], "cta_simul": 426, "cta_south": [97, 456, 464, 473, 474, 477, 480], "cta_util": 446, "ctadata": 499, "ctao": [82, 155, 156, 176, 283, 385, 405, 411, 415, 418, 423, 453, 455, 456, 462, 464, 466, 471, 473, 474, 481, 496, 501, 502, 503, 504, 512, 524, 582], "ctapip": [388, 392, 394, 401, 402, 404, 405, 406], "ctaspectrumobserv": 446, "ctobssim": 398, "ctool": [395, 398, 401, 405, 558], "cts_sigma": 489, "ctselect": 395, "ctype1": 492, "ctype2": 492, "cube": [46, 103, 106, 136, 171, 189, 196, 197, 199, 205, 208, 209, 247, 267, 385, 396, 397, 398, 404, 405, 406, 408, 414, 418, 425, 429, 430, 433, 438, 441, 442, 443, 444, 445, 446, 465, 466, 471, 475, 500, 510, 520, 529, 531, 536, 537, 583], "cubic": 492, "cumbersom": [395, 403], "cumsum": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "cumul": [100, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 334, 398, 414, 461, 473, 494, 524], "cunit1": 492, "cunit2": 492, "curat": [416, 426], "curl": [67, 402, 417, 418, 420, 499], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 102, 103, 106, 107, 111, 112, 128, 129, 133, 159, 182, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 363, 379, 385, 386, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 417, 418, 419, 420, 429, 447, 462, 485, 488, 490, 491, 492, 494, 499, 501, 502, 508, 509, 513, 520, 521, 522, 537, 581, 583, 584], "curv": [15, 19, 20, 26, 73, 77, 83, 133, 140, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 300, 377, 389, 396, 398, 401, 405, 409, 418, 427, 431, 433, 434, 438, 441, 442, 444, 446, 448, 451, 452, 455, 456, 482, 483, 484, 504, 522, 523, 533, 538, 580, 582], "curve_fit": 378, "cuspi": 512, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 105, 127, 132, 394, 395, 396, 401, 403, 408, 412, 417, 431, 432, 434, 446, 456, 464, 466, 469, 471, 477, 480, 487, 490, 492, 499, 524, 569], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 495, "customis": [405, 490], "customprior": 497, "cut": [91, 125, 168, 182, 183, 395, 445, 451, 455, 456, 460, 464, 481, 487, 491, 492, 496, 499, 504, 509, 510, 532, 533], "cutoff": [231, 232, 233, 271, 272, 273, 290, 431, 451, 455, 464, 469, 538, 570], "cutout": [103, 106, 107, 111, 112, 117, 120, 154, 155, 161, 166, 169, 172, 195, 197, 205, 207, 209, 277, 391, 397, 427, 432, 437, 443, 446, 453, 466, 467, 469, 471, 475, 487, 491, 500, 509, 510, 520], "cutout2d": [103, 106, 107, 154, 155, 161, 166, 169, 172, 207, 209, 277, 391], "cutout_and_mask_region": [209, 451], "cutout_info": 431, "cutout_mod": 172, "cutout_slic": 207, "cutout_template_model": 453, "cutout_width": 172, "cval": [196, 197, 199, 205, 208, 209], "cwd": 393, "cwt": [405, 431, 443, 446], "cxc": [214, 405, 489], "cyan": 382, "cycl": [382, 388, 389, 390, 402, 404, 419, 444, 448], "cycler": [382, 456], "cython": [388, 428, 438], "d": [19, 20, 23, 87, 89, 91, 200, 203, 206, 242, 248, 259, 278, 284, 352, 388, 403, 405, 439, 448, 459, 467, 473, 474, 480, 492, 495, 496, 529, 536, 541, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584, 587], "d5f0r3ki": 483, "dai": [87, 91, 126, 128, 206, 234, 239, 241, 259, 266, 388, 399, 405, 415, 416, 492, 577, 584], "daniel": [447, 450, 452, 453], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 405, 413, 446, 451, 452, 455, 498, 504, 513, 582], "dark_matter_spectra": 26, "darkbit": 512, "darkblu": 497, "darkgreen": 497, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 262, 386, 405, 446, 485, 513], "darkmatterannihilationspectralmodel": [20, 262, 448, 485], "darkmatterdecayspectralmodel": [262, 452, 485], "darkorang": [461, 462], "darksusi": 512, "darwin": 422, "dash": [481, 485, 497], "dashboard": 416, "dat": [26, 87, 91, 227, 251, 462, 508, 512], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 126, 127, 128, 129, 130, 131, 132, 139, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 182, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 295, 300, 301, 302, 304, 305, 309, 310, 311, 320, 321, 324, 342, 348, 351, 355, 356, 364, 373, 374, 375, 376, 378, 379, 384, 386, 389, 392, 395, 396, 397, 398, 399, 401, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 418, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 455, 456, 459, 464, 465, 466, 467, 471, 473, 474, 477, 480, 485, 486, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 511, 512, 520, 522, 524, 526, 527, 528, 529, 530, 531, 533, 534, 536, 537, 543, 544, 556, 559, 561, 563, 564, 569, 581, 582, 583, 586, 587, 588], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [194, 195, 204, 207], "data_path": 501, "data_reduct": 401, "data_shap": [102, 103, 106, 107, 111, 112, 194, 195, 204, 207, 487, 537], "data_shape_ax": [195, 204, 207], "data_shape_imag": 207, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 176, 310, 311, 401, 422, 463, 471, 473, 479, 481, 483, 491, 496, 499, 501, 502, 506, 509, 521, 531, 533, 534], "data_storag": 521, "data_summari": 443, "dataaxi": 428, "databas": [391, 524], "dataclass": 385, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 138, 143, 144, 145, 146, 147, 149, 154, 155, 161, 166, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 198, 203, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 332, 378, 381, 382, 386, 388, 389, 391, 393, 398, 400, 401, 402, 404, 405, 409, 413, 414, 415, 416, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 459, 461, 464, 465, 471, 472, 473, 475, 477, 481, 483, 485, 486, 492, 495, 496, 498, 499, 500, 502, 504, 506, 510, 521, 522, 524, 529, 531, 532, 533, 534, 544, 548, 550, 578, 579, 581, 582, 583, 584, 585, 586], "dataset1": [497, 520], "dataset1_prior": 497, "dataset2": [497, 520], "dataset2_prior": 497, "dataset_1": 522, "dataset_2": 522, "dataset_3fgl": 459, "dataset_3fhl": 459, "dataset_cta": 487, "dataset_empti": [458, 461, 463, 464, 471, 479, 483, 487, 491, 501, 533], "dataset_energy_depend": 472, "dataset_fak": 464, "dataset_fp": 480, "dataset_gammacat": 459, "dataset_hawc": 470, "dataset_hess": [470, 489], "dataset_imag": [471, 487], "dataset_kwarg": [93, 110], "dataset_lc": 480, "dataset_mak": [461, 463, 471, 479, 483, 491, 533], "dataset_nam": [110, 114, 115, 133, 227, 235, 251, 407, 413, 453, 469, 473, 474, 477, 487, 494, 509, 544], "dataset_on_off": [171, 177, 178, 181, 456, 461, 463, 464, 467, 471, 479, 483, 491, 533, 534], "dataset_on_off1": 456, "dataset_onoff": 397, "dataset_simul": 463, "dataset_stack": [461, 469], "datasetmodel": [216, 251, 267, 407, 434, 473, 474, 477, 483], "datasetread": [101, 108], "datasets1": 382, "datasets2": 382, "datasets3": 382, "datasets_fil": [16, 462, 466, 467, 469, 508], "datasets_hess": 470, "datasets_in_phase_bin_3": 409, "datasets_mak": 491, "datasets_nam": [19, 20, 26, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 433, 470, 494, 508, 544], "datasets_read": [494, 500], "datasets_sl": 487, "datasets_to_fit": 483, "datasetsconfig": 16, "datasetsmak": [174, 439, 451, 491, 496, 524], "datasetsmetadata": 412, "datasetwrit": 109, "datastor": [16, 89, 96, 176, 310, 311, 391, 395, 400, 418, 422, 428, 439, 440, 442, 443, 445, 451, 452, 458, 461, 462, 463, 466, 467, 469, 471, 473, 477, 479, 481, 483, 491, 496, 501, 502, 506, 508, 521, 524, 531, 533, 534, 584], "datastorecheck": 446, "datastoreindex": 395, "datastoreinmemori": 395, "datastoremak": [428, 439], "datastoremetadata": 412, "datastoreobserv": [177, 391, 395, 432, 445], "datastorexml": 395, "datasum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209], "datat": [87, 91], "date": [87, 91, 105, 127, 366, 402, 410, 411, 412, 414, 415, 423, 445, 462, 465, 466, 467, 469, 495, 502, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 588], "datefmt": [16, 462, 466, 467, 469, 508, 584], "dateref": 465, "datetim": [105, 127, 412], "datetime64": [87, 91], "datfix": 465, "daughter": 412, "david": [395, 400, 426, 446, 447], "dc": 469, "dc1": [394, 405, 447, 473, 481, 490, 494, 499], "dc2": 394, "ddof": 484, "de": [19, 20, 26, 67, 100, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 309, 411, 415, 434, 437, 440, 485, 583], "deabsorb": 457, "deactiv": 417, "dead": [83, 86, 88, 342, 395, 414], "dead_tim": [83, 88, 342], "deadc": 395, "deadlin": [394, 398], "deadtim": [88, 90, 189, 464, 473, 477, 499], "deadtime_fract": [88, 90], "deal": [86, 385, 391, 400, 401, 464, 473, 479, 504, 524], "debanjan": 428, "debian": [402, 419, 441], "debug": [11, 385, 391, 396, 401, 448, 461, 488, 492, 524, 584], "dec": [67, 83, 85, 87, 88, 91, 94, 144, 145, 179, 385, 386, 390, 394, 396, 398, 401, 402, 405, 424, 450, 456, 461, 463, 465, 467, 471, 474, 478, 479, 481, 483, 486, 491, 493, 499, 500, 501, 502, 509, 510, 512, 524, 528, 533, 588], "dec_pnt": 502, "dec_tru": 398, "decad": [17, 18, 21, 22, 24, 25, 27, 101, 114, 115, 201, 286, 452, 473], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 234, 241, 259, 408, 473, 480, 484, 495, 512, 574], "decemb": 424, "decid": [385, 391, 394, 395, 396, 397, 399, 400, 404, 407, 408, 409, 415, 462, 496, 508], "decim": [87, 91, 307], "decis": [385, 386], "declar": [15, 87, 91, 267, 364, 365, 388, 392, 393, 396, 401, 402, 408, 416, 433, 523], "decor": [364, 365, 385, 412, 584], "decorrel": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "decoupl": 69, "dedic": [388, 399, 400, 409, 411, 412, 416, 432, 433, 434, 452, 461, 462, 463, 469, 481, 489, 508, 509, 521], "deduc": [409, 452], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 280, 281, 282, 469], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 275, 277, 279], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 293, 364, 365, 385, 386, 396, 397, 398, 399, 408, 409, 412, 413, 414, 461, 469, 483, 489, 495, 497, 506, 533, 584, 586], "def_unit": [456, 464, 466, 469, 471, 477, 480, 499], "defalut": [115, 153], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 307, 309, 310, 312, 323, 324, 325, 330, 332, 333, 339, 340, 341, 342, 344, 345, 348, 351, 353, 354, 356, 362, 367, 368, 372, 374, 375, 376, 378, 379, 381, 382, 385, 391, 397, 401, 402, 408, 411, 416, 422, 428, 430, 431, 432, 434, 437, 439, 445, 446, 448, 449, 450, 451, 452, 461, 462, 463, 465, 467, 469, 473, 474, 479, 480, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 508, 509, 510, 520, 522, 524, 531, 534, 535, 536, 537, 541, 542, 543, 550, 556, 560, 584, 588], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 368, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 444], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 413], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [150, 151, 156, 158, 163, 168, 490], "defer": [106, 112], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 125, 126, 127, 128, 129, 130, 132, 133, 136, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 172, 173, 177, 182, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 293, 295, 301, 303, 324, 334, 339, 340, 341, 342, 345, 375, 376, 385, 386, 388, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 406, 407, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 427, 428, 431, 434, 437, 440, 444, 445, 450, 451, 452, 457, 462, 464, 465, 466, 467, 469, 470, 472, 475, 477, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 508, 510, 520, 521, 522, 524, 526, 529, 533, 534, 536, 541, 543, 545, 546, 547, 550, 551, 554, 555, 557, 558, 560, 562, 563, 565, 566, 567, 568, 569, 579, 581, 582, 583, 584, 585, 586, 587], "definit": [83, 84, 86, 88, 90, 100, 103, 105, 106, 107, 111, 112, 127, 173, 204, 293, 309, 323, 385, 394, 395, 399, 406, 407, 408, 409, 412, 429, 433, 434, 450, 452, 453, 461, 463, 466, 475, 479, 490, 491, 508, 520, 522, 529, 530, 535, 537, 541, 542, 586], "deform": 537, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 103, 106, 107, 111, 112, 114, 115, 116, 117, 120, 121, 125, 130, 131, 136, 144, 145, 155, 157, 158, 163, 164, 165, 166, 167, 168, 169, 171, 179, 180, 182, 184, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 227, 228, 237, 240, 251, 255, 264, 265, 267, 310, 311, 344, 380, 385, 386, 396, 399, 401, 408, 409, 412, 422, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 508, 509, 510, 521, 522, 524, 526, 528, 531, 533, 534, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548], "deg2": 502, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 111, 112, 114, 115, 116, 123, 126, 128, 138, 147, 195, 196, 197, 199, 202, 207, 208, 209, 227, 251, 255, 267, 278, 452, 456, 458, 462, 467, 472, 479, 483, 486, 491, 492, 493, 499, 508, 522, 536, 537, 586, 587], "deil": [390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 425, 426, 427, 428, 429, 430, 431, 432, 438, 441, 442, 443, 444, 445, 446, 447], "deiml": 445, "dej2000": [486, 510], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 396], "delai": [406, 410], "deleg": 401, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 385, 396, 416, 417, 418, 420, 452, 494], "delete_interv": 86, "delimit": 128, "deliv": 401, "delta": [19, 20, 23, 87, 91, 125, 126, 131, 134, 136, 158, 206, 257, 258, 291, 307, 451, 457, 465, 489, 497, 522, 529, 530, 542, 543, 545, 586], "delta_t": [123, 291, 472], "deltacstat": 414, "demonstr": [401, 427, 430, 431, 432, 433, 434, 439, 451, 452, 478, 484, 492, 494, 504, 536], "denot": [103, 107, 111, 409, 520], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 102, 128, 158, 209, 338, 341, 378, 398, 467, 469, 485, 486, 497, 512, 514, 518, 528, 529, 530, 583], "dep": 451, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 103, 104, 107, 110, 111, 123, 126, 128, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 183, 194, 195, 204, 207, 209, 227, 242, 251, 267, 312, 365, 385, 387, 388, 389, 391, 396, 397, 398, 399, 400, 403, 404, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 426, 430, 431, 434, 441, 443, 446, 447, 449, 451, 452, 453, 455, 456, 460, 464, 466, 467, 476, 479, 486, 489, 490, 491, 492, 493, 494, 496, 497, 499, 500, 504, 520, 524, 528, 532, 533, 536, 550], "deploy": 411, "deposit": 411, "deprec": [16, 84, 85, 90, 105, 127, 428, 437, 450, 451, 452, 453, 469, 475, 500, 548], "deprecated_argument_funct": 385, "deprecated_argument_function_kwarg": 385, "deprecated_attribut": 385, "deprecated_funct": 385, "deprecated_renamed_argu": 385, "deprecatedparseprotocol": [16, 84, 90, 105, 127], "deprecation_polici": 410, "depriv": 531, "depth": [16, 84, 90, 105, 127, 352, 418, 423, 457, 484, 550], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 119, 125, 129, 133, 136, 137, 146, 278, 385, 397, 398, 403, 406, 409, 465, 488, 499, 501, 522, 536, 585, 586], "descent": 414, "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 128, 129, 131, 136, 165, 205, 214, 280, 303, 386, 388, 390, 391, 394, 395, 397, 398, 399, 401, 402, 404, 405, 408, 409, 410, 411, 414, 423, 429, 437, 445, 446, 462, 465, 473, 474, 484, 488, 489, 495, 497, 499, 501, 502, 508, 520, 524, 528, 537, 538, 583, 584, 585, 586], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 130, 214, 386, 390, 391, 399, 405, 410, 411, 423, 448, 452, 469, 477, 486, 489, 492, 499, 501, 508, 509, 524], "description1": 386, "description2": 386, "description3": 386, "description_width": [469, 477, 492, 508, 509], "descriptionstyl": [469, 477, 492, 508, 509], "descriptor": [87, 88, 91, 103, 106, 107, 111, 112, 277, 321, 386, 433], "design": [390, 391, 394, 395, 398, 399, 401, 405, 407, 409, 410, 414, 425, 445, 452], "desir": [16, 84, 87, 90, 91, 105, 127, 164, 194, 195, 204, 207, 293, 360, 361, 362, 492, 510, 537], "desktop": 423, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 103, 106, 107, 111, 112, 128, 129, 154, 155, 161, 166, 169, 172, 195, 207, 209, 214, 217, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 277, 278, 279, 385, 386, 388, 390, 393, 394, 395, 398, 399, 400, 404, 405, 406, 410, 411, 414, 417, 421, 423, 424, 431, 435, 436, 455, 456, 457, 461, 463, 464, 465, 466, 471, 472, 473, 476, 477, 480, 483, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 501, 502, 504, 509, 510, 520, 521, 523, 529, 533, 534, 536, 581, 582, 584, 588], "detect": [59, 144, 145, 290, 375, 376, 386, 401, 404, 405, 407, 425, 431, 432, 433, 443, 445, 446, 452, 455, 468, 486, 499, 501, 504, 583, 586], "detect_t": 405, "detector": [83, 88, 104, 110, 158, 493, 501, 529, 583], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 114, 115, 135, 157, 163, 165, 167, 179, 180, 182, 184, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 312, 334, 396, 400, 403, 411, 439, 451, 452, 456, 463, 466, 467, 472, 478, 491, 493, 514, 582], "determinist": 385, "deti": [83, 104, 110, 398, 499], "detx": [83, 104, 110, 398, 499], "dev": [11, 16, 82, 84, 90, 105, 127, 385, 387, 388, 401, 411, 414, 415, 416, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 550, 578, 579], "dev452": [105, 127, 423, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "develop": [386, 390, 391, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 408, 410, 411, 413, 415, 416, 419, 423, 425, 438, 445, 446, 447, 499], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 129, 197, 209, 214, 236, 293, 297, 489, 497], "devoid": [461, 527], "devop": 411, "devot": 504, "dex": 312, "df": [87, 91, 123, 138, 147, 472, 489, 491, 586], "diagnosi": 394, "diagnost": 401, "diagon": [153, 154, 155, 403, 413, 500], "diagram": 588, "dialog": [418, 420], "diamet": [195, 196, 197, 458], "diamond": 496, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 121, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 290, 291, 292, 293, 294, 298, 310, 324, 332, 333, 348, 351, 352, 353, 356, 366, 367, 368, 369, 372, 373, 374, 378, 379, 380, 381, 382, 385, 400, 402, 406, 409, 412, 430, 434, 437, 445, 462, 469, 478, 479, 483, 486, 489, 492, 496, 508, 509, 536, 541, 550], "dict_kei": [457, 550], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 123, 126, 127, 128, 129, 130, 133, 134, 136, 138, 139, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 292, 293, 294, 298, 322, 348, 351, 352, 353, 356, 366, 369, 379, 386, 402, 404, 409, 412, 413, 461, 463, 469, 489, 490, 496, 497, 579], "dictionnari": [378, 414], "did": [77, 392, 399, 404, 405, 406, 408, 411, 428, 456, 464, 466, 469, 471, 477, 480, 489, 497, 499], "didn": [83, 88, 392, 395, 399, 402, 512], "diff": [102, 103, 106, 107, 111, 112, 385, 388, 393, 397, 469, 477, 509], "diff_flux": 485, "diff_flux_point": [102, 487], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 102, 123, 125, 126, 128, 129, 130, 133, 134, 136, 144, 150, 151, 152, 153, 156, 158, 160, 163, 168, 178, 196, 197, 199, 202, 203, 204, 205, 207, 208, 209, 246, 290, 291, 292, 294, 342, 346, 360, 361, 376, 385, 386, 388, 390, 391, 393, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 411, 413, 414, 416, 418, 420, 429, 432, 434, 444, 447, 448, 449, 451, 453, 456, 461, 462, 463, 465, 466, 469, 472, 473, 474, 475, 478, 480, 483, 484, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 499, 500, 501, 504, 508, 510, 512, 520, 522, 524, 529, 536, 537, 542, 543, 582, 584, 585, 586], "different": 393, "differenti": [23, 79, 126, 128, 135, 196, 197, 199, 201, 205, 208, 209, 252, 267, 283, 284, 339, 391, 396, 403, 409, 444, 492, 495, 500, 510, 522, 583], "differential_flux": 128, "difficult": [396, 399, 416], "diffus": [68, 196, 197, 199, 205, 208, 209, 285, 385, 401, 404, 446, 447, 469, 473, 486, 492, 494, 495, 499, 581], "diffuse_cub": 495, "diffuse_galactic_fermi": 494, "diffuse_iem": [494, 500], "diffuse_iso": [494, 500], "diffuse_model": 285, "difrsp0": [500, 510], "difrsp1": [500, 510], "difrsp2": [500, 510], "difrsp3": [500, 510], "difrsp4": [500, 510], "digit": 385, "dilat": [209, 437], "dim": [163, 341, 442, 443, 471, 583], "dimens": [46, 53, 103, 106, 107, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 275, 276, 279, 312, 324, 378, 401, 414, 434, 445, 447, 451, 453, 489, 490, 492, 495, 504, 520, 536, 537, 542], "dimension": [31, 32, 37, 68, 87, 91, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 236, 237, 240, 286, 325, 338, 391, 399, 413, 418, 443, 465, 488, 489, 490, 492, 495, 510, 528, 530, 536, 537, 582, 583], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 158, 272, 273, 311, 475, 495], "dimitri": [437, 439], "dipol": [51, 54], "dirac": 19, "direct": [91, 105, 168, 186, 187, 190, 192, 201, 228, 237, 240, 316, 319, 386, 391, 397, 399, 404, 406, 409, 412, 437, 455, 460, 464, 491, 504, 521, 529, 530, 532, 533, 541, 582, 583], "directional_offset_bi": [456, 464], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 105, 127, 137, 143, 146, 147, 168, 183, 196, 197, 199, 205, 208, 209, 275, 277, 279, 385, 387, 388, 390, 392, 393, 396, 397, 398, 399, 403, 405, 412, 414, 418, 420, 421, 425, 427, 428, 429, 431, 445, 452, 459, 461, 462, 464, 469, 470, 471, 474, 475, 477, 479, 480, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 499, 500, 508, 509, 510, 512, 520, 524, 529, 533, 536, 560, 586], "directori": [11, 82, 87, 385, 401, 462, 472, 502, 508, 510, 521, 524, 584], "dirk": [428, 442, 444], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 437], "disable_unicode_literals_warn": 385, "disadvantag": 584, "disagr": 390, "disambigu": 390, "disc": [466, 467, 469, 474], "discard": [412, 483, 486], "discard_on_copi": [87, 91], "discarded_ind": 486, "discarded_spati": 486, "discarded_t": 486, "disccus": 394, "discourag": 385, "discov": 584, "discrep": 461, "discret": [91, 139, 302, 307, 398, 453, 489, 536], "discrete_correl": 139, "discrete_correlation_dict": 139, "discrete_correlation_err": [139, 302], "discuss": [13, 59, 280, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 423, 445, 497, 502, 513, 588], "disjoint": 399, "disk": [82, 112, 155, 158, 197, 207, 209, 228, 240, 242, 363, 384, 385, 395, 396, 397, 401, 408, 409, 414, 453, 455, 456, 461, 469, 470, 492, 493, 494, 495, 535, 538, 543, 547, 549], "disk_inc": 399, "diskspatialmodel": [72, 261, 408, 430, 451, 494, 495, 541], "dismiss": 100, "disp": [528, 529], "dispatch": 396, "dispers": [82, 88, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 116, 118, 153, 154, 155, 158, 176, 182, 183, 186, 187, 190, 385, 391, 396, 397, 398, 431, 433, 443, 444, 445, 447, 456, 458, 461, 462, 469, 473, 491, 501, 502, 508, 509, 520, 529, 532, 583], "displac": 316, "displai": [11, 15, 82, 87, 91, 121, 133, 136, 214, 298, 333, 378, 382, 385, 386, 416, 418, 420, 437, 440, 451, 452, 456, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 475, 477, 478, 480, 481, 486, 487, 488, 489, 492, 494, 495, 499, 500, 502, 524, 584], "display_length": [87, 91], "disrupt": [426, 427], "dissolv": 430, "dist": [335, 416], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 130, 144, 145, 204, 252, 279, 307, 315, 341, 399, 443, 450, 463, 465, 475, 485, 486, 489, 518, 533, 560], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 485], "distance_max": [46, 47, 341, 486], "distance_min": [47, 341, 486], "distance_refer": 486, "distibut": [137, 146], "distinct": [400, 401, 406, 501, 587], "distinguish": [292, 294, 409, 412, 456, 492], "distort": [399, 429], "distrib": [102, 137, 146, 461], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 102, 110, 137, 138, 146, 147, 158, 193, 233, 236, 245, 252, 292, 294, 334, 335, 339, 378, 381, 383, 384, 385, 389, 390, 393, 398, 403, 404, 407, 410, 411, 415, 416, 419, 430, 439, 445, 451, 452, 456, 461, 463, 464, 467, 469, 473, 475, 477, 478, 489, 494, 497, 499, 510, 512, 524, 528, 529, 531, 537, 545, 560, 583, 585, 586], "divers": 409, "divid": [195, 201, 206, 406, 409, 463, 473, 496, 501, 502], "divis": 201, "djangoproject": 405, "djuvsland": 452, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 182, 200, 201, 310, 311, 386, 391, 393, 394, 396, 405, 412, 418, 422, 428, 431, 433, 439, 448, 452, 458, 461, 462, 463, 466, 467, 469, 478, 479, 483, 491, 493, 496, 506, 508, 509, 520, 524, 526, 527, 528, 530, 531, 533, 534, 582, 583], "dl4": [99, 102, 103, 106, 111, 112, 119, 121, 125, 129, 133, 136, 161, 182, 386, 391, 412, 418, 433, 480, 487, 488, 489, 524, 582, 583], "dl5": [121, 125, 129, 133, 136, 412, 452, 480, 488, 489, 582, 583], "dl6": [121, 125, 129, 133, 136, 488, 582, 583], "dm": [19, 20, 26, 433, 448, 485], "dm_exampl": 512, "dmfitfunct": 512, "dmpipe": 512, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 485, 512], "dmsky": 512, "dn": [233, 245, 485, 583], "dnde": [19, 20, 26, 67, 126, 127, 128, 135, 137, 139, 140, 141, 142, 146, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 409, 437, 459, 461, 462, 471, 475, 486, 487, 488, 495, 500, 508, 510, 522], "dnde_cu": 284, "dnde_err": [126, 128, 137, 146, 522], "dnde_errn": [67, 126, 128, 137, 146, 486], "dnde_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "dnde_errp": [67, 126, 128, 137, 146, 486], "dnde_ref": [126, 128, 409], "dnde_scan_axi": [137, 146], "dnde_scan_valu": [126, 128], "dnde_ul": [67, 126, 128, 137, 146, 486, 510], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 105, 127, 153, 164, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 336, 378, 386, 388, 390, 391, 392, 395, 399, 400, 401, 402, 403, 404, 405, 408, 409, 412, 414, 415, 416, 418, 420, 431, 457, 459, 461, 462, 464, 465, 466, 467, 469, 471, 472, 473, 477, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 499, 500, 508, 509, 510, 520, 524, 531, 536, 581, 584, 587, 588], "do_someth": 385, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 105, 127, 153, 195, 201, 204, 207, 214, 227, 251, 312, 349, 385, 386, 388, 390, 393, 399, 401, 402, 404, 405, 414, 415, 422, 423, 425, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 537, 548, 550, 556, 572, 578, 579, 583, 584, 588], "docker": [402, 416], "dockerfil": [393, 415, 416], "docstr": [385, 405, 411, 437, 438, 439, 441, 444, 450, 451, 452, 453, 469, 495], "doctest": [164, 373, 386], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 320, 324, 334, 359, 372, 385, 387, 389, 390, 392, 393, 395, 399, 401, 402, 404, 406, 408, 410, 411, 414, 416, 417, 422, 423, 424, 431, 433, 434, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 492, 494, 499, 501, 502, 524, 535, 536, 537, 584], "doe": [16, 84, 87, 90, 91, 105, 127, 129, 133, 139, 156, 166, 169, 203, 242, 278, 290, 385, 386, 392, 393, 395, 397, 399, 400, 402, 404, 405, 408, 409, 411, 412, 414, 428, 437, 448, 456, 457, 461, 464, 466, 469, 471, 472, 486, 489, 490, 491, 492, 493, 501, 512, 524, 533, 584], "doesn": [69, 385, 386, 390, 392, 393, 399, 402, 403, 405, 453, 499, 500, 584], "dof": 586, "doi": [138, 147, 411], "domain": [196, 197, 199, 205, 208, 209, 385, 399, 484], "domenico": 443, "dominguez": [229, 230, 408, 457, 550], "dominquez": 229, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 153, 384, 385, 388, 390, 392, 393, 402, 412, 416, 458, 461, 466, 471, 478, 493, 495, 582, 584, 587, 588], "donath": [394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 126, 129, 154, 155, 161, 166, 169, 378, 385, 386, 388, 390, 391, 392, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 411, 415, 418, 422, 446, 451, 458, 464, 469, 470, 474, 475, 477, 480, 481, 487, 488, 491, 492, 495, 496, 520, 524, 532, 533, 537, 569, 586, 588], "dos2unix": 385, "dot": [50, 51, 54, 111, 112, 196, 197, 199, 205, 208, 209, 451], "doubl": [27, 125, 139, 140, 298, 411, 444, 452], "doubling_dict": 298, "down": [50, 51, 54, 136, 390, 392, 395, 399, 404, 415, 429, 487, 500, 587], "downgrad": [195, 384], "download": [67, 94, 102, 128, 388, 393, 401, 402, 405, 412, 415, 417, 418, 420, 422, 426, 427, 429, 430, 437, 446, 447, 448, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584], "downsampl": [103, 106, 107, 111, 112, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 428, 434, 443, 453, 487, 488], "downsampled_energi": 487, "downsampling_factor": [136, 471], "downward": [292, 294], "dozen": 385, "dpp": 411, "dr": [17, 18, 21, 22, 24, 25, 27, 543], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 158, 176, 273, 310, 311, 386, 393, 405, 422, 455, 458, 461, 462, 467, 469, 479, 483, 491, 496, 506, 508, 509, 521, 524, 526, 527, 528, 530, 531, 533, 534, 538, 570], "dr2": [65, 273, 437, 455, 538, 570], "dr3": [65, 272, 455, 495, 538, 570], "dr4": [65, 452], "draft": [385, 389, 390, 413, 446], "drag": 388, "draw": [33, 197, 334, 398, 497], "drawback": [400, 404], "drawn": [334, 398, 414], "drift": [85, 94, 95, 448], "drive": 401, "driven": [11, 15, 391, 401, 403, 405, 445, 504, 523], "drop": [52, 53, 103, 106, 107, 111, 112, 126, 128, 133, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 228, 235, 277, 370, 389, 390, 401, 402, 407, 427, 430, 431, 434, 437, 444, 447, 492, 520], "ds9": [83, 195, 204, 207, 211, 227, 251, 385, 386, 399, 429, 493, 495, 537], "ds9parser": 399, "dss": 395, "dt": [87, 91], "dtime_t": 484, "dtype": [33, 38, 87, 91, 113, 118, 151, 153, 156, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 227, 251, 312, 385, 413, 463, 466, 475, 483, 486, 487, 488, 490, 491, 492, 499, 500, 510, 522], "duck": [16, 84, 90, 105, 127], "due": [59, 87, 91, 385, 413, 414, 440, 455, 460, 461, 492, 497, 499, 504, 560, 584], "dummi": [111, 112, 399, 466, 524], "dump": [16, 84, 90, 105, 127, 401], "dumps_kwarg": [16, 84, 90, 105, 127], "duplic": [87, 91, 100, 154, 385, 386, 388, 391, 405, 406, 409, 434, 437, 453], "durat": [83, 86, 88, 94, 464, 473, 477, 479, 483, 499, 521, 524], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 103, 105, 106, 111, 112, 127, 173, 290, 386, 393, 397, 401, 404, 405, 407, 410, 411, 412, 413, 415, 416, 431, 434, 451, 452, 462, 463, 473, 478, 479, 483, 487, 491, 493, 497, 509, 520, 521, 583, 587], "dust": 229, "duti": 411, "dwarf": 512, "dx": [33, 316], "dxjyzhz": 483, "dy": [33, 316], "dynam": [382, 521], "dynesti": 414, "dz": 316, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 105, 116, 127, 128, 129, 144, 153, 154, 155, 156, 158, 182, 189, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 214, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 292, 294, 298, 312, 314, 318, 344, 352, 363, 374, 375, 380, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 431, 437, 438, 439, 443, 445, 446, 447, 451, 453, 455, 457, 458, 459, 461, 462, 463, 464, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 506, 508, 509, 510, 512, 519, 520, 521, 522, 524, 528, 529, 534, 535, 536, 541, 542, 543, 550, 551, 553, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568, 578, 581, 583, 584, 585, 586, 587, 588, 589], "e2dnd": [19, 20, 26, 126, 127, 128, 135, 139, 140, 141, 142, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 409, 437, 444, 456, 457, 459, 461, 462, 463, 470, 486, 488, 509, 510, 522, 524, 560], "e2dnde_err": [126, 128], "e2dnde_errn": [126, 128, 486], "e2dnde_errp": [126, 128, 486], "e2dnde_ref": [126, 128], "e2dnde_ul": [126, 128, 486], "e501": [19, 20, 153, 189, 200, 201, 207, 229, 382], "e_": [19, 20, 26, 50, 52, 53, 153, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 520, 526, 528, 529, 530, 551, 555, 563, 565, 566], "e_0": [231, 232, 233, 244, 245, 257, 258, 268, 271, 272, 273, 554, 555, 558, 560, 562, 565, 566, 567, 568], "e_b": 408, "e_cut": [67, 486], "e_cutoff": 560, "e_d": [257, 258], "e_edg": 434, "e_max": [67, 128, 409, 456, 461, 462, 463, 474, 478, 486, 487, 488, 489, 492, 497, 510, 522], "e_min": [67, 128, 409, 456, 461, 462, 463, 474, 478, 486, 487, 488, 489, 492, 497, 500, 510, 522], "e_peak": [233, 245], "e_reco": [113, 118, 153, 158, 481, 583], "e_ref": [67, 128, 409, 456, 461, 462, 478, 486, 488, 508, 510, 522], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 459, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 471, "e_sn": [43, 44, 52], "e_tru": [113, 118, 158, 481, 500], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 103, 106, 107, 110, 111, 112, 117, 120, 121, 123, 125, 126, 128, 129, 133, 135, 136, 138, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 302, 310, 349, 374, 383, 385, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 405, 406, 409, 411, 414, 416, 417, 424, 431, 434, 445, 448, 451, 453, 458, 464, 465, 467, 469, 470, 471, 473, 474, 478, 479, 480, 481, 483, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 501, 502, 509, 513, 519, 520, 521, 524, 528, 529, 530, 536, 537, 544, 560, 561, 583, 584, 587, 588], "eager": 401, "earli": [399, 404, 405, 499], "earlier": [392, 411], "earth": [41, 88, 283, 500], "earth_azimuth_angl": [500, 510], "earthloc": [83, 85, 88, 90, 94, 97, 322, 412], "easi": [385, 386, 391, 396, 399, 400, 401, 404, 405, 409, 412, 431, 437, 445, 492, 493, 500, 521, 581, 582, 584, 588], "easier": [385, 391, 396, 404, 409, 445, 448, 499], "easiest": 419, "easili": [87, 91, 128, 391, 396, 397, 401, 412, 414, 418, 419, 478, 479, 489, 490, 492, 500, 510, 584], "eazh3hxw": 483, "ebel": 465, "ebl": [229, 230, 280, 403, 408, 431, 434, 444, 451, 453, 455, 460, 495, 504, 538, 570], "ebl_data_builtin": [457, 550], "ebl_dominguez11": [230, 550], "ebl_franceschini": [230, 280], "ebl_franceschini_2017": 230, "ebl_saldana": 230, "eblabsorbtionnormspectralmodel": 408, "eblabsorptionnormspectralmodel": [262, 408, 434, 457, 495, 550], "ebltabl": 457, "ebound": [153, 201, 537], "ebreak": [221, 268, 551, 565], "ec": [481, 495, 537], "eccentr": [228, 237, 240, 541, 542, 543], "echo": 584, "eco": 411, "ecosystem": 412, "ecpl": [67, 80, 231, 232, 233, 290, 408, 443, 459, 486, 495], "ecpl_norm": 556, "ecsv": [59, 63, 128, 397], "ecut": [231, 271, 555, 566], "edelson": [139, 299, 302, 484], "edelson1988": [139, 302], "edelson2002": 299, "edg": [103, 106, 107, 111, 112, 121, 123, 125, 129, 132, 133, 136, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 176, 177, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 228, 378, 399, 409, 428, 434, 437, 456, 457, 461, 470, 471, 472, 473, 474, 484, 488, 490, 491, 492, 493, 500, 501, 508, 531, 541], "edge_max": [194, 195, 204, 207, 541], "edge_min": [194, 195, 204, 207, 541], "edge_width": [228, 494, 541], "edgecolor": [382, 461, 463, 465, 471, 472, 475, 481, 485, 533, 541, 542, 543], "edges_max": [198, 200, 201, 206, 492], "edges_min": [198, 200, 201, 206, 492], "edisp": [16, 82, 87, 88, 96, 103, 106, 107, 108, 111, 112, 113, 118, 153, 154, 155, 158, 162, 176, 182, 183, 186, 187, 267, 310, 311, 386, 395, 396, 397, 398, 401, 432, 434, 437, 443, 444, 445, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 477, 479, 480, 483, 487, 491, 496, 499, 500, 501, 502, 508, 520, 528, 529, 583], "edisp2d": [155, 158, 386], "edisp2d_ax": 158, "edisp3d": 490, "edisp_": 520, "edisp_2d": [82, 87, 158, 499, 502], "edisp_3d": 490, "edisp_bin": 101, "edisp_ev": 490, "edisp_fil": 101, "edisp_kernel": [153, 487, 528], "edisp_kernel_map": [154, 501], "edisp_map": [104, 110, 154, 155, 490, 528], "edisp_new": 490, "edispkernel": [106, 113, 118, 154, 158, 186, 432, 528], "edispkernelmap": [103, 106, 107, 108, 111, 112, 116, 155, 161, 162, 166, 169, 176, 183, 186, 433, 434, 465, 491, 500, 524, 528], "edispmap": [103, 104, 106, 107, 110, 111, 112, 161, 162, 166, 169, 176, 183, 186, 187, 397, 398, 406, 427, 430, 431, 432, 434, 437, 490, 520, 528], "edit": [386, 388, 390, 392, 393, 394, 401, 405, 415, 416, 419, 508, 584], "editor": [386, 411, 462, 508, 584], "editori": 411, "edm": 489, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 121, 139, 156, 195, 204, 207, 214, 227, 248, 251, 283, 284, 293, 300, 302, 405, 489, 537], "eemin": 560, "eff": [156, 526, 529, 542, 543], "eff_area": 490, "effarea": 490, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 106, 109, 155, 156, 182, 183, 188, 190, 191, 204, 227, 251, 375, 376, 385, 390, 395, 396, 398, 399, 409, 441, 443, 461, 473, 475, 478, 484, 497, 501, 502, 504, 508, 529, 537, 542, 543, 583], "effective_area": [162, 398, 499], "effective_livetim": 491, "effective_times_src": 491, "effectivearea3d": 490, "effectiveareat": [397, 425, 437, 441], "effectiveareatable2d": [88, 155, 162, 168, 190, 391, 441, 490, 499, 526], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 112, 390, 396, 397, 398, 399, 400, 407, 459, 496, 529, 534, 586], "effort": [392, 394, 401, 402, 404, 405, 408, 428, 520], "eflux": [19, 20, 26, 126, 127, 128, 139, 140, 141, 142, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 409, 437, 475, 495, 522], "eflux_err": [126, 128, 409], "eflux_errn": [126, 128], "eflux_errp": [126, 128], "eflux_ref": [126, 128], "eflux_ul": [126, 128], "eg": [385, 453, 457, 469, 477, 480, 483, 487, 490, 494, 495, 497], "egal": 499, "egg": 419, "einasto": [21, 512], "either": [67, 82, 87, 88, 91, 95, 112, 126, 128, 158, 173, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 242, 293, 312, 342, 374, 386, 388, 390, 392, 399, 401, 404, 407, 411, 418, 437, 451, 462, 469, 475, 480, 487, 489, 495, 497, 508, 520, 522, 524, 535, 537, 581, 584], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 485], "elabor": [411, 465], "elaps": [83, 394, 583], "electron": [50, 283, 499, 560], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 103, 106, 107, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 378, 403, 414, 451, 453, 486, 492, 536], "elementtre": 499, "elev": 400, "elif": [385, 399, 412], "elli": [425, 438], "ellips": [228, 399, 537, 541], "ellipseannulusskyregion": [533, 537], "ellipseskyregion": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 458, 495, 533], "ellipsoid": 489, "ellipt": [537, 543], "elong": [427, 430, 431, 541, 542], "elpas": 451, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 126, 128, 136, 203, 385, 388, 399, 402, 409, 412, 413, 416, 418, 420, 496, 584, 586], "elsewher": [117, 120], "email": [386, 388, 411, 416], "emax": [101, 133, 256, 284, 466, 472, 563], "emax_fit": 481, "embryon": 401, "emce": [394, 402, 427, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "emerg": 395, "emeri": 446, "emin": [101, 133, 256, 284, 466, 472, 563], "emin_fit": 481, "emiss": [52, 68, 140, 391, 396, 400, 461, 467, 469, 470, 473, 494, 499, 500, 520, 534, 560, 581], "emit": [82, 217, 218, 219, 220, 371, 385, 427, 445, 457, 529], "emitt": 461, "emmanoulopoulo": [307, 453], "emmanoulopoulos2010": 307, "emphas": 488, "emphasi": 489, "empir": 40, "emploi": 463, "empti": [92, 100, 103, 106, 107, 111, 112, 144, 176, 196, 197, 199, 203, 205, 208, 209, 214, 251, 371, 393, 395, 428, 440, 469, 473, 474, 477, 480, 491, 492, 501, 513, 520, 533, 534, 537], "empty_dataset": 456, "empty_i": 480, "empty_map": [103, 106, 107, 111, 112, 472, 491, 533], "emsembl": 93, "en": [34, 83, 87, 88, 91, 129, 189, 204, 214, 280, 312, 388, 405, 456, 464, 466, 469, 471, 477, 480, 489, 490, 493, 499, 521, 524, 535, 537], "enabl": [394, 397, 419, 428, 437, 446, 456, 464, 466, 469, 471, 477, 480, 499, 531], "encapsul": [207, 409, 535], "enclos": [209, 386, 458, 463, 489, 493], "enclosur": [82, 160, 453, 463, 490], "encod": [16, 84, 87, 90, 91, 105, 127], "encompass": [195, 535, 537], "encount": [170, 418, 419, 420, 421, 463, 467, 473, 480, 483, 502, 572, 584], "encourag": [385, 390, 411, 415, 445], "end": [52, 53, 86, 87, 91, 92, 94, 100, 103, 107, 111, 126, 128, 136, 201, 242, 251, 390, 392, 394, 396, 397, 399, 400, 401, 402, 404, 405, 408, 414, 438, 448, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "end_po": [130, 345, 475], "endswith": 385, "energet": 473, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 125, 126, 128, 129, 130, 133, 135, 136, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 176, 178, 182, 183, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 288, 380, 381, 385, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 407, 409, 413, 418, 422, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 457, 458, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 483, 486, 487, 488, 491, 492, 501, 502, 504, 508, 509, 510, 519, 520, 521, 524, 529, 531, 532, 533, 535, 536, 537, 544, 550, 556, 559, 561, 564, 569, 579, 582, 583, 585], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 103, 106, 107, 111, 112, 113, 114, 115, 118, 126, 128, 153, 154, 155, 158, 166, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 409, 456, 458, 461, 463, 464, 465, 467, 471, 473, 474, 479, 480, 483, 487, 490, 491, 492, 495, 500, 501, 509, 528, 531, 533, 534, 536, 537], "energy_axis_new": 487, "energy_axis_tru": [103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 153, 154, 155, 156, 158, 164, 166, 176, 386, 431, 456, 458, 461, 463, 464, 465, 467, 471, 473, 474, 477, 479, 480, 481, 483, 487, 490, 491, 500, 501, 509, 528, 531, 533, 534], "energy_bin": 401, "energy_bin_per_decade_max": [114, 115], "energy_bound": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 399, 437, 457, 459, 461, 463, 469, 470, 481, 485, 486, 489, 495, 500, 509, 510, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569], "energy_cent": 277, "energy_column": 409, "energy_depend": 472, "energy_dependent_estim": [455, 472, 476], "energy_edg": [16, 121, 123, 125, 129, 130, 133, 136, 144, 145, 149, 201, 332, 409, 457, 461, 462, 465, 466, 467, 469, 470, 471, 472, 475, 478, 479, 480, 481, 488, 501, 508, 509, 522], "energy_estim": 501, "energy_flux": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 495, 510], "energy_flux_err": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "energy_flux_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "energy_index": 163, "energy_integr": 51, "energy_logspac": 404, "energy_mask": [194, 195, 204, 207, 433, 463, 469, 481, 487, 489, 493, 497], "energy_max": [19, 20, 26, 83, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 153, 194, 195, 201, 204, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 280, 286, 399, 401, 469, 474, 481, 483, 485, 487, 491, 495, 510], "energy_min": [19, 20, 26, 52, 53, 83, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 153, 194, 195, 201, 204, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 280, 286, 399, 401, 469, 474, 481, 483, 485, 487, 491, 495, 510], "energy_nam": [166, 169], "energy_nod": [408, 495], "energy_pow": [19, 20, 26, 128, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 288, 461, 469, 481, 489, 510], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 103, 106, 107, 111, 112, 437, 487, 493, 567, 568], "energy_range_fit": [103, 106, 107, 111, 112, 487], "energy_range_saf": [103, 106, 107, 111, 112, 487], "energy_range_tot": [103, 106, 107, 111, 112, 493], "energy_reco": [385, 477], "energy_ref": [126, 128], "energy_resolut": 445, "energy_saf": 401, "energy_tru": [16, 96, 103, 106, 107, 111, 112, 113, 118, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 183, 186, 194, 195, 201, 204, 207, 310, 311, 385, 386, 398, 451, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 477, 478, 479, 480, 481, 483, 487, 490, 491, 492, 493, 495, 496, 499, 500, 501, 508, 509, 528, 529, 531, 533, 534, 536, 537], "energy_true_axi": 153, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 429, "energydependentmorphologi": 472, "energydependentmorphologyestim": [452, 472], "energydependentmultigausspsf": [162, 425, 490, 499, 530], "energydependenttablepsf": [391, 406, 426, 437], "energydispers": [153, 154, 155, 158, 397, 432, 442, 445, 446], "energydispersion2d": [88, 153, 155, 162, 168, 186, 187, 386, 391, 437, 439, 444, 490, 499, 528], "energydispersion3d": 490, "energyoffsetarrai": 442, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 388, 412], "engin": [87, 91], "english": 524, "enhanc": [390, 394, 422], "enlarg": 534, "enough": [398, 400, 401, 414, 461, 464, 467, 477, 478, 493, 531], "enrico": 401, "enrico_config": 401, "enrico_xml": 401, "enriqu": [393, 401, 405, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 445, 446, 447], "ensembl": [93, 414], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 202, 290, 385, 391, 396, 397, 408, 412, 419, 439, 453, 456, 461, 479, 488, 493, 531, 536, 545], "enter": [218, 220, 227, 251, 422], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 127, 183, 414, 458, 469, 472, 484], "entri": [43, 44, 87, 91, 94, 123, 126, 129, 130, 133, 134, 136, 138, 139, 146, 147, 214, 215, 227, 251, 290, 352, 385, 386, 397, 405, 409, 412, 415, 437, 448, 453, 458, 462, 486, 489, 492, 495, 496, 524, 525, 537], "entry_point": 438, "enum": [95, 159, 327, 328], "enumer": [414, 461, 473, 486, 489, 494, 497], "env": [388, 402, 415, 417, 418, 420, 421, 446, 584], "envelop": [398, 489, 509], "environ": [11, 82, 350, 384, 385, 388, 392, 393, 397, 402, 405, 415, 416, 418, 419, 420, 421, 422, 426, 427, 429, 445, 446, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 584], "envis": 394, "envvar": 11, "eojtnbl": 483, "eosc": 411, "episod": 140, "epoch": 368, "epsilon": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "epsilon_": [103, 107, 111, 520], "epsilon_k": [103, 107, 111, 520], "epsmch": 489, "eq": 102, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 408, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 121, 125, 129, 133, 136, 153, 201, 385, 395, 398, 447, 461, 478, 479, 493, 497, 520, 536, 587], "equat": [27, 272, 273, 299, 546, 547, 551, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568, 586, 587], "equatori": [95, 159, 195, 196, 197, 199, 202, 204, 207, 208, 209, 490], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 246, 378, 386, 397, 398, 399, 408, 409, 451, 452, 461, 486, 491, 492, 493, 495, 499, 508, 520, 522, 524, 535, 536, 537, 584, 585, 586], "er": [26, 485], "era": 229, "ereco": [153, 490], "erf": [238, 541], "erg": [52, 53, 67, 456, 461, 486, 510, 517, 524], "erlangen": 404, "erod": 209, "eros": [207, 209], "err": 489, "errat": 385, "errlo": 414, "errn": [125, 129, 133, 134, 136, 214, 448, 586], "errn_2sigma": 586, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 102, 103, 105, 106, 107, 111, 112, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 146, 172, 198, 201, 206, 217, 219, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 292, 294, 298, 299, 300, 302, 307, 363, 385, 386, 399, 400, 401, 403, 408, 409, 412, 413, 414, 427, 431, 433, 435, 437, 438, 440, 444, 445, 448, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 466, 469, 470, 471, 472, 474, 477, 478, 480, 481, 483, 484, 486, 488, 495, 496, 497, 499, 508, 509, 510, 512, 520, 522, 524, 542, 560, 569, 581, 584], "error_callback": 172, "errorbar": [83, 102, 103, 106, 107, 111, 112, 201, 205, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 456, 483, 497], "errp": [125, 129, 133, 134, 136, 214, 448, 586], "errp_2sigma": 586, "errup": 414, "escap": [385, 411, 414], "especi": [87, 91, 140, 388, 392, 395, 399, 405, 406, 416, 437, 443, 458, 471, 479, 486, 492, 497, 499, 500], "ess": 414, "essenti": [395, 397, 400, 431, 432, 433, 475, 492], "establish": [385, 398], "estim": [6, 19, 20, 26, 50, 72, 102, 106, 112, 114, 115, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 171, 177, 178, 179, 185, 194, 195, 204, 207, 209, 214, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 290, 297, 300, 305, 332, 378, 389, 391, 394, 398, 399, 400, 401, 404, 407, 413, 418, 427, 428, 431, 432, 433, 434, 437, 438, 439, 443, 444, 445, 446, 448, 451, 452, 453, 455, 456, 457, 461, 463, 467, 469, 470, 471, 474, 476, 479, 480, 481, 482, 487, 489, 493, 497, 498, 501, 504, 508, 509, 520, 524, 534, 581, 582, 583, 585, 587], "estimate_best_fit": [129, 130, 133, 134], "estimate_count": [129, 130, 133, 134], "estimate_energy_depend": 123, "estimate_errn_errp": [129, 130, 133, 134], "estimate_excess_map": 125, "estimate_exposure_reco_energi": 125, "estimate_fit_input_map": 136, "estimate_flux_default": 136, "estimate_flux_map": 136, "estimate_flux_point": [129, 130, 133], "estimate_kernel": [125, 136], "estimate_map": 121, "estimate_mask_default": [125, 136], "estimate_min_e2dnd": 135, "estimate_min_excess": 135, "estimate_npr": [129, 130, 133, 134], "estimate_npred_excess": [129, 130, 133], "estimate_pad_width": 136, "estimate_scan": [129, 130, 133, 134], "estimate_t": [129, 130, 133, 134], "estimate_time_bin_flux": 133, "estimate_ul": [129, 130, 133, 134], "estimator_result": [138, 146, 147, 481], "et": [26, 33, 59, 102, 139, 140, 156, 229, 299, 300, 302, 307, 395, 414, 453, 465, 472, 484, 512, 583], "eta": [240, 241, 264, 543, 547, 574], "eta_": 50, "eta_b": 50, "eta_rang": [543, 547], "etc": [106, 112, 126, 385, 390, 391, 395, 396, 397, 400, 401, 405, 406, 409, 411, 412, 414, 434, 462, 464, 469, 477, 478, 480, 481, 483, 487, 492, 495, 497, 500, 508, 520, 533], "etru": 490, "eu": 405, "euclidean": 310, "europ": 411, "ev": [488, 490, 524, 560], "ev2": 490, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 103, 106, 107, 110, 111, 112, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 189, 204, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 325, 385, 390, 394, 400, 403, 404, 407, 408, 409, 413, 426, 427, 428, 430, 433, 437, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 473, 474, 481, 490, 495, 497, 499, 500, 520, 542, 543, 550, 583, 586], "evaluate_contain": [157, 165, 167, 439], "evaluate_direct": [157, 165, 167], "evaluate_energy_flux": [257, 258], "evaluate_error": [19, 20, 26, 128, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 403], "evaluate_geom": [223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279, 452, 495, 543], "evaluate_integr": [256, 257, 258], "evaluate_paramet": [157, 165, 167], "evaluation_bin_size_min": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "evaluation_radiu": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 396, 397, 408, 495], "evaluation_region": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 137, 146, 207, 218, 220, 385, 388, 390, 392, 393, 399, 402, 403, 411, 412, 414, 429, 478, 481, 488, 489, 491, 492, 493, 494, 495, 508, 520, 522, 546, 547, 584], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 104, 105, 110, 116, 125, 135, 155, 166, 169, 170, 177, 185, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 342, 385, 386, 389, 391, 395, 397, 399, 400, 401, 412, 418, 422, 429, 430, 431, 433, 437, 438, 439, 444, 445, 446, 447, 448, 451, 452, 453, 455, 458, 461, 462, 463, 467, 469, 470, 476, 480, 491, 501, 504, 506, 508, 509, 524, 532, 533, 534, 582, 583, 586], "event_3fhl": 510, "event_class": [84, 500, 510], "event_det_coord": [104, 110], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [398, 499, 500, 510, 521], "event_list": [83, 385, 386, 398], "event_list_meta": [104, 110, 432], "event_sampl": [455, 473, 476], "event_sampling_nrg_depend_model": [455, 474, 476], "event_typ": [105, 500, 510], "eventlist": [84, 88, 104, 110, 185, 196, 197, 199, 205, 208, 209, 385, 386, 391, 398, 399, 400, 412, 422, 427, 434, 439, 441, 442, 443, 445, 446, 473, 474, 481, 492, 499, 500, 510, 521, 524, 533], "eventlistbas": 89, "eventlistdataset": 446, "eventlistmetadata": [83, 412], "events2": 83, "events_": 473, "events_0001": 473, "events_1": 521, "events_2": 521, "events_3fhl": 510, "events_bkg": 398, "events_gc_3fhl": 510, "events_list": 398, "events_path": [82, 473], "events_src": 398, "events_tot": 398, "events_vela": 481, "eventu": [385, 390, 401, 404, 405, 422, 495], "ever": [414, 587], "everi": [195, 197, 209, 279, 385, 388, 393, 394, 395, 397, 401, 410, 412, 416, 458, 461, 492, 509, 584], "everyon": 390, "everyth": [385, 403, 404, 524], "everywher": [385, 399, 404, 405, 426], "evid": [140, 486], "evolut": [50, 52, 53, 229, 391, 405, 455, 476, 504, 517, 518, 538], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 229, 402, 405, 412, 414, 474, 490], "evt_sampl": 473, "ex": [11, 492, 494, 495], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 403, 479, 492, 500], "exactli": [121, 125, 129, 133, 136, 201, 380, 414, 461, 463, 479, 481, 493, 497, 500, 520, 537], "exagger": 376, "examin": [411, 528], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 102, 103, 106, 107, 111, 112, 113, 117, 118, 120, 121, 123, 125, 126, 128, 130, 132, 133, 134, 135, 136, 140, 144, 145, 148, 149, 151, 153, 155, 156, 157, 158, 164, 166, 169, 176, 179, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 242, 249, 280, 284, 290, 293, 310, 311, 332, 336, 342, 352, 364, 365, 370, 373, 375, 376, 378, 380, 382, 385, 386, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 411, 412, 413, 414, 418, 419, 420, 422, 426, 428, 431, 434, 437, 438, 439, 442, 444, 445, 446, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 521, 524, 526, 527, 528, 530, 535, 537, 538, 539, 549, 570, 578, 579, 580, 581, 584, 586, 588, 589], "example_cub": 492, "example_cube_fgst": 492, "exce": [114, 115], "except": [67, 69, 80, 87, 91, 103, 106, 107, 111, 112, 172, 196, 197, 199, 205, 208, 209, 312, 382, 385, 396, 400, 404, 490, 494, 537], "excerpt": 502, "excess": [15, 67, 72, 103, 106, 107, 111, 112, 122, 125, 126, 128, 129, 130, 133, 135, 138, 141, 142, 146, 147, 176, 292, 294, 299, 300, 383, 397, 400, 433, 434, 440, 445, 452, 453, 456, 457, 461, 462, 464, 465, 466, 469, 471, 475, 477, 480, 481, 486, 487, 488, 491, 493, 494, 501, 508, 509, 522, 524], "excess_estim": 501, "excess_estimator_integr": 501, "excess_integr": 501, "excess_map": [16, 462, 466, 467, 469, 508], "excess_map_estim": 481, "excess_matching_signific": [436, 446], "excess_min": 149, "excess_r": 487, "excessestim": 409, "excessmapconfig": 16, "excessmapestim": [122, 144, 145, 146, 147, 409, 433, 434, 435, 437, 440, 450, 452, 453, 467, 469, 481, 488, 493, 501, 522], "excesspointsestim": 409, "excessprofileestim": [409, 434], "exchang": 399, "exclud": [16, 84, 90, 102, 103, 105, 106, 111, 112, 127, 132, 177, 179, 218, 220, 227, 251, 391, 449, 469, 491, 493, 533, 534], "exclude_default": [16, 84, 90, 105, 127], "exclude_non": [16, 84, 90, 105, 127], "exclude_unset": [16, 84, 90, 105, 127], "exclus": [16, 83, 171, 173, 178, 179, 180, 181, 184, 195, 207, 391, 399, 401, 433, 435, 453, 458, 466, 469, 491, 531, 533], "exclusion_mask": [171, 173, 178, 179, 180, 181, 184, 461, 467, 471, 491, 493, 509, 531, 533, 534], "exclusion_mask_2d": 491, "exclusion_mask_crab": [462, 508], "exclusion_radiu": 493, "exclusion_region": 461, "exclusionmask": 443, "execut": [11, 125, 129, 133, 134, 136, 385, 386, 388, 390, 392, 393, 394, 400, 401, 405, 416, 417, 418, 419, 420, 421, 422, 431, 439, 445, 455, 460, 468, 476, 482, 491, 492, 498, 500, 503, 504, 505, 507, 510, 511, 539, 549, 570, 580, 582], "exercis": [388, 401, 405, 411], "exhibit": 472, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 154, 155, 161, 166, 169, 181, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 215, 227, 242, 251, 275, 276, 277, 279, 354, 369, 385, 388, 390, 393, 394, 396, 397, 398, 399, 401, 402, 404, 405, 406, 408, 409, 411, 412, 414, 418, 419, 422, 423, 426, 430, 431, 445, 446, 448, 451, 465, 467, 487, 492, 493, 495, 496, 500, 521, 536, 537, 585], "exist_ok": [461, 462, 469, 470, 473, 508, 509], "exit": [11, 15, 87, 91, 218, 220, 227, 251, 427, 548, 584], "exot": 402, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 156, 234, 238, 245, 257, 258, 271, 386, 408, 480, 495, 542, 543, 550, 554, 555, 556, 557, 566, 567, 568, 572, 573, 574, 587], "expand": [133, 350, 395, 437], "expand_map": 133, "expans": [50, 52, 53], "expcutoffpowerlaw": 556, "expcutoffpowerlaw3fglspectralmodel": [262, 408, 459, 495, 555], "expcutoffpowerlawnormspectralmodel": [233, 262, 452, 495, 556], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 221, 222, 225, 229, 231, 232, 238, 244, 245, 248, 252, 254, 256, 257, 258, 262, 263, 268, 270, 271, 272, 273, 276, 280, 408, 459, 461, 469, 495, 554, 560], "expdecai": [234, 455, 538, 580], "expdecay_model": [473, 572], "expdecaytemporalmodel": [274, 408, 433, 437, 473, 480, 495, 572], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 110, 112, 126, 181, 186, 187, 192, 207, 292, 293, 294, 295, 297, 301, 309, 342, 385, 390, 398, 400, 401, 402, 405, 410, 412, 456, 458, 463, 464, 465, 467, 473, 474, 478, 484, 485, 489, 492, 493, 497, 500, 502, 520, 522, 585, 586, 587], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 461, 474], "experi": [385, 388, 390, 394, 396, 400, 413, 414, 416, 445, 512, 583, 588], "experienc": [394, 421], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 401, 584], "expert": 405, "expertis": 402, "expfactor": [272, 273, 567, 568], "expir": 398, "explain": [87, 91, 385, 388, 390, 399, 402, 404, 405, 411, 416, 418, 420, 431, 437, 456, 461, 463, 485, 489, 493, 495, 499, 524, 582, 584], "explan": [121, 125, 129, 133, 136, 386, 390, 423, 484, 588], "explicit": [87, 91, 195, 197, 385, 386, 401, 403, 409, 536, 588], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 312, 395, 407, 417, 427, 474, 494, 522, 536, 588], "explor": [196, 197, 199, 205, 208, 209, 393, 401, 414, 422, 455, 461, 466, 469, 472, 475, 476, 478, 479, 483, 484, 486, 487, 494, 501, 502, 508, 510, 524, 533], "explos": 52, "expomap": 398, "expon": [408, 495], "exponenti": [28, 30, 36, 39, 40, 77, 231, 232, 233, 234, 271, 272, 273, 386, 396, 431, 455, 469, 473, 480, 538, 570], "exponentialcutoffpowerlaw": 560, "export": [84, 87, 90, 91, 103, 105, 106, 107, 126, 127, 128, 388, 409, 412, 418, 420, 431, 441, 448, 449, 452, 462, 495, 501, 502, 508], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 399, 400, 401, 404, 405, 450, 452, 453, 492, 504, 522, 523, 582], "exposur": [16, 83, 88, 101, 103, 106, 107, 108, 110, 111, 112, 125, 136, 143, 154, 155, 161, 164, 166, 169, 171, 176, 183, 186, 187, 188, 190, 191, 192, 267, 303, 306, 309, 391, 394, 395, 396, 397, 398, 409, 429, 434, 442, 444, 445, 446, 448, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 477, 479, 480, 483, 487, 491, 492, 493, 501, 508, 509, 520, 529, 532, 537, 586], "exposure_fil": 101, "exposure_geom": 155, "exposure_hdu": [154, 155, 161, 166, 169], "exposure_hdu_band": [154, 155, 161, 166, 169], "exposure_hpx": 500, "exposure_map": [154, 155, 161, 166, 169, 186, 187, 192, 490], "exposure_max": 487, "exposure_min": 487, "exposure_tim": 398, "express": [125, 140, 292, 294, 396, 408, 409, 452, 467, 489, 490, 495, 497, 520, 536, 543, 585, 586, 587], "exptest": 443, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 171, 198, 201, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 293, 392, 396, 397, 398, 399, 405, 407, 408, 409, 412, 418, 430, 432, 437, 455, 460, 461, 465, 474, 478, 486, 492, 493, 494, 495, 500, 504, 532, 533], "extended_archive_v18": 548, "extended_source_spectral_analysi": [455, 458, 460], "extens": [41, 153, 196, 197, 199, 201, 208, 209, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 269, 275, 279, 387, 390, 391, 392, 393, 394, 396, 398, 400, 401, 402, 403, 404, 405, 415, 416, 440, 472, 473, 474, 495, 584], "extent": [207, 227, 251, 399, 465, 495], "extern": [116, 386, 411, 438, 442, 443, 446, 499, 524], "extnam": 490, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 102, 105, 127, 194, 195, 200, 204, 205, 207, 213, 214, 216, 275, 276, 310, 384, 386, 392, 393, 399, 401, 402, 405, 411, 412, 442, 445, 446, 457, 492, 493, 524, 537], "extra_term": 309, "extract": [16, 84, 90, 100, 103, 105, 106, 107, 111, 112, 126, 127, 128, 133, 154, 155, 161, 166, 169, 172, 177, 178, 183, 185, 193, 196, 197, 198, 199, 201, 206, 207, 208, 209, 277, 385, 395, 400, 409, 411, 412, 439, 440, 451, 452, 456, 458, 461, 462, 463, 464, 469, 470, 473, 474, 475, 477, 483, 487, 488, 492, 508, 520, 528, 533], "extragalact": [229, 457, 499], "extrapol": [102, 150, 151, 152, 176, 196, 197, 199, 205, 208, 209, 229, 280, 324, 325, 437, 442, 444, 445, 453, 490, 492, 499, 500, 536], "extras_requir": 402, "extrem": [385, 412, 492, 543], "ey": 414, "eyi": 483, "ezs1dxvq": 491, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 136, 149, 203, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 311, 312, 339, 385, 388, 402, 407, 408, 413, 417, 418, 420, 439, 448, 456, 458, 461, 462, 464, 470, 471, 472, 473, 474, 479, 480, 481, 483, 485, 486, 489, 491, 493, 495, 496, 497, 500, 501, 506, 508, 509, 510, 518, 533, 550, 560, 571, 572, 573, 574, 575, 576, 577, 584, 585, 586], "f0": [278, 578], "f06": 48, "f06b": [49, 514], "f06p": 49, "f1": [278, 578], "f2": [278, 578], "f4": [151, 156, 463, 487, 490, 492, 499, 500], "f8": [490, 500], "f_": [298, 300, 311, 520], "f_0": [256, 563], "f_dead": [83, 88], "f_i": 298, "f_max": 484, "f_max_err": 484, "f_mean": 484, "f_mean_err": 484, "f_min": 484, "f_min_err": 484, "f_pp": 299, "f_var": 299, "fabio": [398, 403, 414, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 444, 446, 448, 450, 451, 452, 453], "face": [390, 393], "facecolor": [382, 457, 461, 463, 471, 472, 475, 481, 485, 541, 542, 543], "facil": 410, "fact": [19, 20, 97, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 411, 458, 537], "facto": 411, "factor": [19, 20, 23, 103, 104, 106, 107, 110, 111, 112, 121, 125, 126, 154, 155, 157, 161, 163, 164, 165, 166, 167, 169, 176, 183, 189, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 253, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 281, 293, 385, 398, 400, 414, 433, 453, 456, 464, 465, 466, 469, 471, 475, 477, 480, 487, 488, 491, 495, 499, 520, 537, 550], "factor1": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279], "factor_max": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279], "factor_min": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279], "factori": [196, 197, 208, 209, 399, 404, 408, 535, 537], "factoris": [267, 408, 495, 581], "fail": [16, 84, 90, 105, 127, 214, 386, 388, 399, 414, 415, 416, 440, 453, 470, 500], "failur": [448, 451], "faint": 585, "fair": [385, 411], "fair4r": [385, 411], "fake": [103, 106, 107, 111, 112, 397, 398, 429, 463, 464, 477, 480, 497], "fall": [77, 140, 179, 206, 227, 251, 385, 392, 394, 395, 402, 414, 446, 447, 484], "fallback": 385, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 125, 126, 127, 128, 129, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 293, 312, 325, 342, 348, 351, 353, 354, 382, 385, 399, 401, 408, 413, 414, 445, 446, 452, 456, 457, 458, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 500, 508, 509, 510, 521, 524, 531, 533, 534, 548, 560, 569], "falsifi": 497, "famili": 411, "familiar": [402, 403, 492, 493, 510], "fanci": [385, 481], "far": [393, 398, 400, 402, 406, 409, 412, 414, 422, 437, 473, 512], "fashion": [400, 405], "fast": [385, 399, 403, 489], "faster": [87, 91, 137, 146, 196, 197, 199, 205, 208, 209, 363, 452, 465], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 514, "favour": [390, 398, 413, 497], "favourit": 471, "fc": [495, 537], "fcluster": [310, 496], "fcluster_kwarg": [310, 496], "fcn": [414, 489], "fdx": 385, "fe": 283, "feasibl": [399, 404, 464, 477, 487], "featur": [6, 13, 87, 91, 96, 121, 144, 310, 311, 375, 376, 385, 388, 392, 394, 395, 396, 397, 399, 401, 402, 407, 408, 409, 411, 412, 413, 419, 424, 427, 428, 429, 430, 431, 433, 434, 437, 441, 444, 445, 446, 447, 484, 492, 493, 495, 496, 522, 560], "feature_irf": 496, "features_irf": [96, 310, 311, 496], "feb": [391, 392, 402, 406, 422, 423, 424], "februari": 424, "fed": 463, "feedback": [388, 390, 394, 399, 401, 402, 405, 406, 408, 414, 415, 445, 490, 524], "feedstock": [415, 416], "feel": [395, 584], "feijen": [450, 451, 452, 453], "feldman": [428, 434, 442, 444, 583], "feldman1998": [583, 586], "fellowship": 411, "felt": 385, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 101, 129, 130, 132, 136, 196, 197, 199, 205, 206, 208, 209, 229, 283, 285, 290, 392, 393, 394, 395, 397, 398, 401, 402, 405, 416, 418, 423, 425, 426, 429, 431, 434, 438, 441, 442, 443, 444, 445, 446, 453, 455, 457, 459, 465, 473, 475, 486, 492, 493, 494, 495, 503, 504, 510, 512, 521, 524, 529, 548, 558, 563, 581, 588], "fermi_3fhl": [83, 196, 197, 199, 205, 208, 209, 494, 500, 510], "fermi_3fhl_events_select": [83, 500], "fermi_3fhl_exposure_cube_hpx": 500, "fermi_3fhl_psf_gc": 500, "fermi_bkg_model": 494, "fermi_ct": 132, "fermi_dataset": [290, 494, 500], "fermi_lat": [405, 446, 455, 500, 503], "fermi_model": 500, "fermi_prof": 130, "fermi_ts_imag": 386, "fermilat": 457, "fermipi": [101, 392, 394, 397, 401, 405, 409, 443, 445, 500, 512], "fermitool": 401, "fetch": [15, 385, 393, 415, 425, 438, 508, 584], "few": [82, 83, 87, 88, 91, 384, 385, 386, 388, 390, 391, 392, 393, 395, 397, 399, 403, 405, 410, 414, 415, 416, 422, 436, 447, 449, 452, 453, 458, 462, 467, 469, 471, 486, 488, 489, 492, 499, 508, 509, 533, 537, 589], "fewer": [399, 405], "ff": 411, "fft": 209, "fftconvolv": 209, "fgl": [206, 493], "fgst": [195, 196, 197, 199, 200, 201, 207, 208, 209, 492], "fhbpdlne": 483, "fhit": 501, "fidalgo": [395, 400, 426, 446, 447], "fiduci": 492, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 105, 127, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 235, 252, 314, 318, 372, 385, 399, 411, 412, 422, 427, 432, 439, 446, 461, 463, 467, 469, 471, 473, 490, 491, 493, 499, 500, 524, 526, 527, 528, 529, 530, 531, 533, 560, 583], "fieldinfo": [16, 84, 90, 105, 127], "fig": [209, 373, 456, 458, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 478, 480, 481, 485, 489, 493, 497, 509, 533, 534, 543, 547, 550, 582], "figsiz": [88, 103, 106, 107, 111, 112, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 373, 458, 461, 464, 465, 467, 469, 470, 471, 472, 478, 479, 480, 481, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 509, 533, 543, 547, 550], "figur": [88, 103, 106, 107, 111, 112, 131, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 363, 372, 373, 379, 385, 386, 390, 405, 416, 457, 461, 465, 469, 471, 472, 473, 475, 478, 479, 484, 485, 486, 487, 489, 491, 492, 494, 495, 499, 500, 501, 502, 584], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 177, 182, 196, 197, 199, 203, 205, 208, 209, 215, 227, 229, 242, 251, 275, 276, 277, 278, 279, 280, 320, 348, 351, 354, 384, 385, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 405, 406, 408, 409, 412, 413, 415, 416, 417, 418, 420, 422, 430, 431, 437, 439, 441, 443, 444, 445, 446, 448, 449, 451, 452, 453, 455, 456, 460, 463, 464, 468, 469, 471, 473, 474, 476, 477, 480, 482, 486, 487, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 507, 510, 511, 512, 523, 524, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588], "file_dir": 320, "file_model": 473, "file_nam": 320, "filemod": [16, 462, 466, 467, 469, 508, 584], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 130, 132, 134, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 203, 205, 208, 209, 227, 229, 242, 251, 275, 276, 277, 278, 279, 280, 285, 287, 289, 290, 320, 351, 354, 364, 385, 386, 390, 434, 453, 461, 462, 466, 467, 469, 470, 474, 475, 486, 487, 488, 492, 493, 494, 495, 499, 500, 508, 509, 510, 521, 524, 526, 527, 528, 530, 548, 550, 578, 579, 584], "filename_1": 521, "filename_2": 521, "filename_arf": 109, "filename_bkg": 109, "filename_model": [100, 126, 290, 494, 500], "filename_rmf": 109, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 103, 105, 106, 107, 110, 111, 112, 127, 153, 164, 195, 196, 197, 199, 205, 207, 208, 209, 280, 385, 393, 394, 398, 401, 405, 411, 415, 416, 431, 438, 445, 448, 458, 473, 474, 486, 490, 491, 493, 500, 509, 536], "fill_between": [19, 20, 26, 131, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 481], "fill_by_coord": [164, 196, 197, 199, 205, 208, 209, 492, 500, 536], "fill_by_idx": [196, 197, 199, 205, 208, 209, 536], "fill_by_pix": [196, 197, 199, 205, 208, 209, 536], "fill_ev": [196, 197, 199, 205, 208, 209, 440, 451, 463, 492, 500, 506], "fill_nan": 197, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 275, 276, 279, 385, 490, 492], "filled_t": [87, 91], "filter": [88, 89, 391, 395, 397, 399, 400, 446, 447, 450, 483, 493, 496, 504, 509, 510], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [126, 128], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [480, 481], "final": [133, 293, 385, 386, 392, 393, 395, 398, 399, 401, 402, 404, 406, 408, 410, 411, 416, 431, 432, 433, 456, 457, 458, 459, 461, 469, 471, 473, 474, 478, 479, 481, 485, 487, 489, 491, 493, 496, 500, 501, 504, 508, 509, 510, 520, 521, 522], "finalis": 389, "find": [19, 20, 26, 136, 144, 145, 153, 179, 180, 184, 211, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 303, 385, 390, 396, 398, 404, 415, 416, 417, 437, 439, 445, 446, 451, 452, 459, 461, 465, 486, 487, 492, 495, 499, 502, 510, 584, 586, 587], "find_peak": [145, 446, 465, 471], "find_peaks_in_flux_map": 465, "find_root": 437, "finder": [144, 179, 180, 437, 446, 465], "fine": [291, 325, 398, 467, 487, 500, 537, 584], "finer": [473, 487, 537], "fingertip": 384, "finish": [388, 392, 394, 415, 443, 445], "finit": [100, 103, 106, 107, 111, 112, 154, 155, 161, 166, 182, 197, 205, 209, 277, 403], "fink": [229, 230, 457, 550], "fir": 560, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 103, 106, 107, 111, 112, 126, 128, 130, 137, 139, 144, 146, 153, 170, 179, 196, 197, 198, 201, 205, 206, 227, 251, 284, 302, 345, 374, 385, 386, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 410, 411, 414, 416, 417, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 444, 446, 447, 448, 449, 451, 453, 456, 458, 459, 461, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 508, 509, 510, 521, 533, 536, 584], "firstli": [472, 473, 488], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 173, 176, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 219, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 277, 278, 279, 280, 290, 291, 292, 294, 295, 296, 301, 304, 308, 309, 320, 321, 322, 367, 368, 371, 373, 378, 380, 384, 385, 386, 391, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 412, 413, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 442, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 460, 464, 465, 467, 468, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 504, 506, 510, 520, 521, 522, 523, 524, 526, 527, 528, 530, 531, 532, 533, 541, 548, 550, 560, 578, 579, 582, 583, 588], "fit2": 494, "fit_covari": [462, 508], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [458, 461, 469, 470], "fit_prior": 497, "fit_rang": [16, 462, 466, 467, 469, 508], "fit_result": [214, 290, 462, 483, 488, 508], "fit_results_nul": 290, "fit_scipi": 489, "fit_sherpa": 489, "fit_stat_scan": 400, "fit_statist": [385, 467], "fit_statistics_cython": 416, "fitconfig": 16, "fitmc": 403, "fitresult": [214, 439, 451, 453, 489, 509], "fitsfixedwarn": [465, 548], "fitsonli": 499, "fitspectrum": 441, "fitstepresult": [213, 216], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 444, 445, 459], "five": 510, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 108, 109, 136, 148, 166, 168, 183, 214, 253, 254, 259, 279, 388, 390, 391, 392, 396, 397, 400, 402, 407, 409, 410, 411, 415, 416, 418, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 456, 463, 464, 466, 467, 469, 470, 473, 477, 479, 480, 483, 489, 490, 491, 494, 495, 496, 508, 534, 536, 544, 561], "fixed_altaz": 85, "fixed_bin": 148, "fixed_icr": [85, 166, 456, 464, 473, 474, 477, 480], "fixed_offset": [96, 182, 437], "fixed_r_in": 171, "fixed_width": 171, "fixedpointinginfo": [88, 166, 189, 451, 452, 456, 464, 473, 474, 477, 480], "fk5": [537, 548], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 104, 110, 126, 128, 129, 130, 133, 134, 194, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 213, 214, 215, 216, 458, 469, 473, 486, 495], "flake8": 388, "flare": [140, 298, 418, 431, 432, 455, 478, 480, 482, 483, 484, 504, 522, 533], "flask": 445, "flat": [128, 140, 158, 168, 194, 195, 200, 202, 204, 207, 210, 211, 253, 396, 409], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 195, 202, 204, 207, 484], "fledg": 413, "flexibl": [82, 336, 385, 390, 394, 395, 396, 399, 401, 405, 406, 412, 492, 524, 581], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 103, 106, 107, 111, 112, 116, 121, 125, 127, 128, 131, 134, 135, 136, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 171, 173, 182, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 211, 214, 216, 217, 219, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 290, 291, 292, 293, 294, 297, 301, 303, 312, 323, 330, 339, 341, 374, 375, 376, 491, 497, 499, 500, 584, 588], "float32": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 466, 471, 492], "float64": [87, 91, 113, 118, 153, 156, 385, 413, 422, 488, 490, 492, 522, 584], "float64float64float64": 471, "float64float64float64float64float64float64float64float32bool": 459, "float64float64float64float64float64float64float64float64": 471, "float_a": [87, 91], "flow": [412, 582, 583], "fluctuat": [292, 294, 409, 464, 477, 497, 586], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 102, 103, 106, 107, 111, 112, 121, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 221, 222, 223, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 266, 267, 268, 270, 271, 272, 273, 276, 278, 280, 281, 283, 284, 288, 297, 298, 299, 300, 302, 307, 389, 397, 398, 400, 401, 403, 405, 406, 408, 418, 425, 428, 430, 431, 433, 437, 439, 443, 444, 445, 447, 452, 453, 455, 460, 463, 465, 469, 471, 473, 474, 476, 478, 479, 480, 481, 483, 484, 487, 492, 495, 500, 504, 518, 520, 524, 529, 538, 545, 560, 581, 582, 583, 586], "flux1": 302, "flux2": 302, "flux_err": [19, 20, 26, 126, 128, 136, 145, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 299, 300, 307, 465, 478, 484], "flux_err1": 302, "flux_err2": 302, "flux_errn": [126, 128, 486], "flux_errp": [126, 128, 486], "flux_int_cu": 284, "flux_map": [126, 128, 137, 146, 409, 485], "flux_metadata_fits_kei": 127, "flux_per_omega": 495, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 102, 126, 128, 129, 397, 456, 459, 461, 462, 466, 467, 469, 471, 481, 486, 487, 508, 509, 510], "flux_point_dataset": 397, "flux_points_at_tim": 409, "flux_points_ctb_37b": 128, "flux_points_dataset": [461, 471, 481], "flux_points_dataset_no_ul": 461, "flux_points_fermi": 470, "flux_points_hawc": 470, "flux_points_hess": 470, "flux_points_intrins": 457, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 461, "flux_points_ob": 457, "flux_points_recomput": 128, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 102, "flux_profil": [455, 475, 476], "flux_profile_estim": 475, "flux_profile_fermi": 475, "flux_quant": [139, 140, 141, 142, 484], "flux_ref": [126, 128, 409], "flux_sensit": [126, 128], "flux_ul": [126, 128, 136, 486], "fluxestim": [126, 128, 129, 406, 433, 435, 436, 437, 439, 452], "fluxmap": [125, 127, 128, 136, 137, 138, 145, 146, 437, 452, 453, 465, 522], "fluxmapestim": 409, "fluxmapsmetadata": 412, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 102, 126, 127, 129, 130, 133, 139, 140, 141, 142, 148, 397, 400, 409, 412, 437, 444, 445, 451, 452, 453, 456, 459, 470, 475, 478, 479, 484, 486, 487, 510, 519, 520, 522, 524], "fluxpointdataset": 431, "fluxpointestim": [400, 428, 434, 447], "fluxpointfit": 397, "fluxpointfitt": 446, "fluxpointprofil": 447, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 103, 106, 406, 409, 412, 427, 431, 452, 453, 459, 461, 470, 471, 480, 481, 520], "fluxpointsdatasetmetadata": 412, "fluxpointsestim": [122, 130, 133, 332, 406, 407, 409, 418, 428, 433, 434, 437, 451, 452, 457, 461, 470, 471, 481, 488, 508, 509, 524], "fluxpointsetim": 409, "fluxpointsmetadata": 412, "fluxprofileestim": [122, 437, 450, 452, 475], "fly": 395, "fmt": [483, 489, 497], "focu": [395, 405, 431, 444, 463, 584], "focus": [395, 411, 414], "fold": [110, 409, 459, 470, 479, 488, 520, 522], "folder": [11, 82, 94, 102, 108, 112, 128, 349, 385, 386, 390, 393, 415, 417, 422, 427, 437, 440, 462, 469, 473, 499, 508, 509, 582, 584], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 103, 105, 107, 108, 109, 111, 112, 126, 127, 128, 131, 136, 138, 144, 147, 195, 196, 197, 199, 203, 208, 209, 214, 267, 284, 290, 375, 376, 378, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 429, 430, 431, 433, 434, 437, 439, 440, 446, 447, 451, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 469, 470, 473, 474, 478, 479, 480, 481, 483, 485, 486, 488, 489, 491, 492, 493, 494, 495, 499, 504, 508, 510, 512, 514, 515, 520, 522, 524, 526, 528, 529, 533, 535, 536, 537, 538, 546, 547, 551, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568, 569, 582, 583, 585, 586, 587, 589], "font": [196, 197, 199, 205, 208, 209, 386, 492], "fontsiz": [382, 481, 489], "foo": [87, 91], "footprint": [196, 197, 199, 205, 207, 208, 209, 544], "footprint_rectangle_sky_region": 207, "forbid": [16, 84, 90, 105, 127], "forbidden": 494, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 154, 155, 161, 164, 166, 169, 207, 209, 312, 390, 400, 427], "forecom": [385, 410], "foremost": 584, "forens": 401, "foreseen": [395, 410], "forev": 427, "forg": [384, 402, 415, 416, 418, 419, 422, 445], "forget": [462, 472, 508], "forgot": 385, "forgotten": 385, "fork": [388, 415], "form": [16, 84, 87, 90, 91, 103, 105, 127, 166, 169, 204, 324, 385, 391, 395, 400, 408, 410, 412, 414, 423, 445, 453, 493, 497, 521, 529, 542, 552, 582], "formal": [390, 413, 465], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 103, 105, 106, 107, 109, 111, 112, 126, 127, 128, 129, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 227, 235, 242, 251, 267, 277, 280, 320, 342, 366, 367, 374, 384, 393, 394, 395, 396, 397, 399, 401, 409, 411, 412, 416, 425, 437, 439, 442, 446, 448, 449, 451, 452, 453, 457, 459, 461, 462, 463, 465, 466, 467, 469, 471, 473, 474, 475, 478, 480, 484, 486, 488, 490, 492, 493, 495, 499, 500, 501, 502, 508, 510, 512, 518, 520, 521, 522, 523, 526, 527, 528, 529, 530, 537, 578, 579, 583, 584, 585], "format_plot_xaxi": [198, 201, 206, 490], "format_plot_yaxi": [201, 490], "formatt": [374, 492], "formatwarn": 385, "former": [411, 428, 433, 458, 494, 582, 585], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 165, 257, 258, 309, 456, 585], "forthcom": 488, "forum": 415, "forward": [19, 20, 26, 83, 87, 91, 103, 106, 107, 111, 112, 130, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 200, 204, 205, 206, 214, 221, 222, 225, 226, 229, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 285, 310, 374, 379, 386, 392, 395, 409, 459, 470, 479, 488, 520, 522, 537], "forwardref": [16, 84, 90, 105, 127], "found": [19, 20, 26, 82, 86, 87, 91, 140, 179, 184, 203, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 388, 389, 393, 400, 410, 411, 431, 434, 435, 436, 440, 467, 473, 484, 495, 497, 502, 521, 522, 533, 534], "four": [388, 396, 409, 415, 478, 499, 500, 528, 530, 536, 583], "fov": [125, 150, 151, 173, 174, 188, 189, 191, 193, 235, 385, 391, 399, 442, 445, 446, 453, 466, 483, 490, 493, 494, 499, 509, 532, 583], "fov_": 385, "fov_align": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 490], "fov_background": [466, 508], "fov_bkg_mak": [491, 531], "fov_lat": [151, 490, 499, 529], "fov_lat_axi": 490, "fov_lon": [151, 490, 499, 529], "fov_lon_axi": 490, "fov_theta": 385, "fovalign": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 490], "fovbackground": [413, 433], "fovbackgroundmak": [174, 432, 437, 491, 508, 509], "fovbackgroundmodel": [15, 103, 107, 110, 111, 115, 173, 247, 413, 434, 451, 452, 453, 469, 470, 473, 474, 477, 487, 494, 508, 509, 531, 544], "fp": [126, 128, 148, 409, 508, 522, 524], "fp_dataset": [461, 487], "fp_dnde": 409, "fp_energy_flux": 409, "fp_estim": 488, "fp_result": 488, "fpe": [332, 407, 409, 457, 461, 471, 481, 509], "fpe_no_ul": 461, "fpp": 299, "fpp_err": [299, 484], "fpp_tabl": 484, "fr": 411, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 106, 112, 153, 156, 212, 233, 238, 256, 258, 271, 298, 300, 311, 408, 520, 528, 529, 541, 542, 543, 546, 547, 551, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568, 572, 573, 574, 576, 586, 587], "frac_remain": 414, "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 125, 135, 142, 157, 163, 165, 166, 167, 169, 204, 210, 211, 221, 222, 225, 228, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 299, 300, 395, 400, 414, 444, 452, 456, 464, 473, 477, 487, 490, 493, 499, 500, 501], "frame": [16, 83, 85, 91, 94, 95, 96, 103, 106, 107, 111, 112, 113, 114, 115, 118, 130, 144, 166, 176, 179, 189, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279, 310, 311, 346, 361, 385, 386, 394, 396, 399, 409, 427, 428, 430, 431, 432, 458, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 487, 490, 491, 492, 493, 494, 495, 496, 500, 501, 502, 508, 509, 510, 528, 533, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548], "framework": [396, 398, 399, 401, 403, 404, 408, 414, 427, 428, 434, 446, 481, 495, 514, 524], "franceschini": [229, 230, 280, 451, 457, 550], "franceschini17": [230, 457, 550], "franceschni": 550, "frd_ab": 230, "free": [50, 52, 53, 77, 103, 106, 107, 111, 112, 129, 133, 134, 176, 214, 218, 220, 253, 254, 290, 390, 400, 427, 453, 457, 462, 464, 466, 467, 469, 471, 472, 477, 478, 480, 483, 487, 489, 491, 494, 495, 497, 500, 504, 508, 509, 512, 522, 531, 544, 560, 561, 584, 586, 587], "free_paramet": [218, 220, 290, 414, 483, 489, 494], "freedom": [123, 126, 128, 138, 147, 411, 452, 472, 522, 586, 587], "freez": [19, 20, 26, 87, 91, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 400, 411, 427, 437, 452, 466, 477, 483, 489, 495, 560], "freeze_al": [218, 220], "frenk": 512, "frequenc": [278, 293, 516], "frequent": [201, 385, 394, 403, 411, 414, 479, 480, 484, 493, 524, 525, 584], "frequentist": 403, "fridai": 394, "friendli": [385, 390, 412, 448, 462, 508, 524], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 182, 183, 185, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 290, 291, 292, 293, 294, 297, 300, 310, 311, 312, 322, 330, 332, 334, 335, 339, 342, 343, 347, 352, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588], "from_align": [207, 437], "from_attribut": [16, 84, 90, 105, 127], "from_bound": [156, 158, 166, 195, 201, 207, 409, 470, 473, 474, 487, 490, 491, 492, 502, 536, 537], "from_covariance_matrix": 413, "from_default": 200, "from_diagonal_respons": [113, 118, 153, 154, 155, 465, 500], "from_dict": [19, 20, 26, 102, 103, 106, 107, 111, 112, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 430, 437, 497], "from_dir": [82, 89, 96, 176, 310, 311, 422, 458, 461, 463, 471, 479, 481, 483, 491, 496, 499, 502, 506, 509, 521, 524, 531, 533, 534], "from_edg": [155, 196, 197, 199, 201, 205, 208, 209, 464, 477, 480, 490, 500, 501], "from_edisp_kernel": 154, "from_energy_bound": [103, 106, 107, 111, 112, 113, 118, 153, 155, 156, 158, 164, 166, 176, 194, 195, 200, 201, 204, 207, 209, 386, 456, 458, 461, 463, 470, 471, 473, 474, 479, 481, 483, 487, 490, 491, 495, 500, 501, 509, 528, 531, 533, 534, 537], "from_energy_edg": [153, 201, 380, 487, 490], "from_events_fil": [82, 473, 499], "from_factor_matrix": 212, "from_fil": [82, 521], "from_fits_head": 85, "from_gauss": [153, 154, 158, 164, 166, 169, 528], "from_gaussian": 434, "from_geom": [103, 106, 107, 111, 112, 154, 155, 164, 166, 169, 196, 197, 199, 203, 205, 208, 209, 431, 450, 487, 492, 493, 537, 543], "from_gti": 206, "from_gti_bound": 206, "from_hdu": [195, 197, 209], "from_hdulist": [103, 106, 107, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 492], "from_head": [84, 90, 105, 127, 195, 207, 412], "from_irf": 168, "from_log10": [244, 245, 558], "from_map": [126, 128], "from_map_dataset": [106, 112], "from_nam": [467, 471], "from_nod": 201, "from_orm": [16, 84, 90, 105, 127], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "from_parametr": [156, 526], "from_posit": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 474], "from_refer": 408, "from_region": [204, 228, 451, 533], "from_region_map": 280, "from_spatial_model": 164, "from_spectrum_dataset": [112, 456, 464], "from_stack": [83, 86, 92, 126, 128, 196, 197, 198, 199, 201, 205, 208, 209, 212, 218, 220, 451, 452, 521], "from_tabl": [128, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 198, 200, 201, 205, 206, 242, 448, 456], "from_table_hdu": [86, 200, 201], "from_time_bound": 206, "from_time_edg": [206, 483, 484], "from_time_interv": 86, "from_wcs_til": 197, "from_yaml": [16, 227, 251, 396, 462], "fromnumer": [463, 483], "front": [394, 414, 415, 444], "frozen": [19, 20, 26, 102, 129, 133, 173, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 400, 408, 413, 429, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 477, 479, 480, 483, 486, 487, 488, 489, 493, 494, 495, 497, 500, 508, 509, 510, 522, 531, 560, 569], "fr\u00f6se": [452, 453], "ftjnehqx": 483, "ftol": 489, "ftool": 400, "fulfil": [412, 492], "full": [82, 129, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 197, 215, 227, 251, 320, 381, 384, 385, 390, 394, 395, 398, 400, 401, 405, 411, 413, 414, 417, 424, 427, 437, 439, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 524, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582], "full_enclosur": [189, 490], "full_output": [19, 20, 26, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "fulli": [133, 194, 195, 204, 207, 278, 394, 395, 402, 406, 411, 416, 419, 429, 431, 439, 458, 484, 495, 499, 501, 502], "fun": [385, 388], "func": [17, 18, 21, 22, 24, 25, 27, 196, 197, 199, 205, 208, 209, 286, 333, 337, 338, 378, 467, 469], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 91, 100, 101, 102, 103, 104, 106, 107, 110, 111, 112, 121, 126, 133, 136, 137, 139, 140, 141, 142, 145, 146, 156, 157, 158, 160, 161, 163, 165, 166, 167, 169, 196, 197, 199, 201, 205, 208, 209, 214, 215, 216, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 266, 267, 268, 270, 271, 272, 273, 276, 280, 286, 292, 293, 294, 302, 303, 307, 325, 333, 334, 336, 337, 341, 342, 352, 370, 373, 374, 378, 380, 382, 384, 388, 391, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 418, 420, 422, 423, 425, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 456, 457, 461, 462, 463, 464, 465, 469, 471, 472, 473, 474, 475, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 501, 502, 504, 508, 509, 510, 512, 513, 514, 519, 520, 521, 523, 524, 533, 535, 537, 542, 543, 545, 572, 581, 582, 583, 584, 585, 587, 589], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [398, 407, 412, 414], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 121, 125, 129, 130, 133, 136, 202, 336, 385, 388, 389, 391, 394, 395, 398, 399, 402, 404, 405, 406, 407, 408, 432, 433, 434, 437, 439, 467, 473, 485, 486, 487, 488, 492, 509, 510, 513, 514, 529, 584], "furthermor": 499, "futur": [104, 110, 385, 390, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 445, 469, 475, 492, 500, 513, 522, 581], "fvar": [142, 300, 400, 444], "fvar_err": [300, 484], "fvar_tabl": 484, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 116, 144, 195, 196, 197, 199, 201, 205, 207, 208, 209, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 312, 352, 374, 380, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 414, 415, 416, 418, 419, 420, 437, 439, 443, 445, 446, 447, 448, 451, 458, 459, 461, 462, 464, 471, 473, 475, 485, 486, 487, 489, 492, 493, 494, 495, 499, 500, 504, 510, 512, 516, 519, 520, 521, 522, 524, 529, 534, 535, 536, 543, 581, 583, 584, 586, 588, 589], "g0": [469, 500], "g28": 67, "g320": 486, "g4492f4b7c": [105, 127, 423, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "g_1": 156, "g_2": 156, "g_3": 156, "ga": 475, "gabriel": 446, "gadf": [83, 84, 85, 86, 88, 90, 95, 103, 105, 106, 107, 111, 112, 127, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 395, 398, 409, 412, 437, 439, 448, 451, 453, 488, 490, 492, 508, 520, 524, 537, 583], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 402, 445], "gal_diffus": 401, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 103, 106, 107, 111, 112, 113, 118, 129, 130, 132, 166, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 228, 237, 240, 255, 264, 265, 319, 346, 385, 386, 396, 399, 405, 425, 427, 444, 457, 458, 461, 464, 465, 466, 469, 471, 472, 473, 475, 477, 480, 485, 486, 487, 492, 493, 494, 495, 499, 510, 512, 515, 519, 534, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 583, 589], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 229, 299, 300, 425, 458], "galelli": [450, 452, 453], "gallant": 445, "galleri": [416, 432, 434, 437, 448, 452, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 525, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "gallery_jupyt": 538, "gallery_python": 538, "galprop": [195, 196, 197, 199, 208, 209], "galprop2": [195, 196, 197, 199, 208, 209], "gambit": 512, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 125, 129, 135, 165, 189, 196, 197, 199, 208, 209, 229, 231, 232, 233, 256, 257, 258, 280, 284, 339, 385, 391, 393, 396, 397, 398, 399, 409, 416, 418, 422, 423, 428, 442, 443, 444, 445, 446, 456, 457, 459, 461, 462, 463, 467, 470, 471, 472, 473, 475, 486, 490, 492, 493, 496, 499, 501, 502, 508, 510, 512, 514, 515, 519, 520, 521, 524, 527, 529, 531, 533, 534, 543, 550, 554, 555, 562, 563, 581, 582, 583, 584, 585, 586, 589], "gamma1": [221, 551, 565], "gamma2": [221, 551, 565], "gamma_1": [268, 271, 272, 273, 408, 566, 567, 568], "gamma_2": [268, 271, 272, 273, 408, 566, 567, 568], "gamma_min": [135, 456], "gamma_min_sensit": 125, "gammacat": [55, 66, 444, 459], "gammalib": [385, 398], "gammamc_dif": 512, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 407, 408, 409, 413, 414, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 503, 504, 506, 508, 509, 510, 513, 514, 516, 517, 518, 524, 525, 526, 527, 528, 530, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 589], "gammapy_analysis_config": 401, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 102, 103, 106, 107, 111, 112, 117, 120, 121, 125, 126, 128, 130, 132, 134, 136, 144, 145, 148, 149, 151, 155, 156, 157, 158, 166, 176, 196, 197, 199, 205, 208, 209, 214, 230, 242, 280, 290, 310, 311, 364, 373, 378, 380, 385, 386, 388, 401, 414, 418, 420, 422, 426, 427, 428, 437, 446, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 521, 522, 524, 526, 527, 528, 530, 531, 533, 534, 548, 578, 579], "gammapy_extra": 426, "gammapybaseconfig": 16, "gammapydeprecationwarn": [385, 475, 500, 556], "gammmapi": [395, 402], "gap": 139, "garcia": 446, "gather": [399, 405, 415], "gauss": [42, 51, 54, 103, 106, 107, 131, 132, 157, 197, 209, 237, 238, 239, 240, 408, 443, 481, 492, 495, 510, 541, 542], "gauss_elong": 495, "gauss_temp": 495, "gaussian": [67, 68, 80, 81, 102, 121, 131, 137, 146, 153, 154, 158, 164, 166, 169, 197, 209, 236, 237, 238, 239, 240, 241, 246, 299, 300, 396, 404, 408, 413, 414, 430, 434, 453, 455, 457, 459, 461, 471, 473, 477, 480, 484, 486, 489, 490, 495, 497, 499, 510, 528, 530, 538, 549, 570, 580], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 121, "gaussian_compon": [67, 486], "gaussian_error": [137, 146], "gaussian_filt": [131, 209], "gaussian_model": 573, "gaussian_sigma": 489, "gaussianband2d": 445, "gaussianprior": [413, 457, 497], "gaussianspatialmodel": [80, 81, 117, 120, 261, 408, 430, 471, 472, 477, 495, 542], "gaussianspectralmodel": [262, 408, 495, 557], "gaussiantemporalmod": 437, "gaussiantemporalmodel": [274, 408, 433, 495, 573], "gb": [393, 395, 499, 501], "gc": [86, 103, 106, 107, 111, 112, 117, 120, 121, 125, 130, 132, 136, 144, 145, 373, 378, 380, 388, 465, 466, 469, 471, 473, 475, 485, 487, 488, 492, 494, 495, 499, 500, 510, 512, 521, 522], "gc_3fhl": 510, "gc_3fhl_cutout": 510, "gc_3fhl_smooth": 510, "gc_imag": 475, "gc_po": 500, "gc_sep": 494, "gca": 457, "gcc": 422, "ge": 90, "geminga": 59, "gen_gaussian_model": 574, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 101, 103, 104, 105, 106, 107, 110, 111, 112, 119, 127, 155, 166, 169, 196, 197, 199, 200, 201, 205, 208, 209, 214, 226, 234, 239, 240, 241, 242, 243, 259, 266, 275, 276, 278, 280, 281, 293, 334, 336, 339, 340, 341, 342, 349, 386, 388, 394, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 419, 422, 428, 432, 433, 434, 437, 439, 444, 448, 451, 452, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 520, 524, 529, 535, 537, 538, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 579, 580, 584, 586, 587], "generalconfig": 16, "generalis": [128, 404, 431, 490], "generalized_gaussian_model": 574, "generalizedgaussianspatialmodel": [261, 434, 495, 543], "generalizedgaussiantemporalmodel": [274, 439, 495, 574], "generalrandom": 429, "generatejsonschema": [16, 84, 90, 105, 127], "gengauss": [241, 495, 543], "geodeticloc": 94, "geolat": 458, "geom": [16, 23, 83, 103, 106, 107, 111, 112, 113, 116, 118, 119, 125, 126, 128, 130, 136, 154, 155, 164, 166, 169, 176, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 223, 224, 227, 228, 235, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 279, 396, 398, 400, 434, 437, 446, 452, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 501, 508, 509, 510, 522, 531, 533, 534, 535, 536, 537, 540, 542, 543, 544, 545], "geom_24_energy_bin": 537, "geom_6_energy_bin": 537, "geom_edisp": [103, 106, 107, 111, 112, 487], "geom_energi": 537, "geom_exposur": [103, 106, 107, 111, 112, 450, 487], "geom_imag": [467, 471, 537], "geom_irf": 398, "geom_psf": [103, 106, 107, 111, 112, 487], "geom_tru": 431, "geomconfig": 16, "geometri": [23, 83, 100, 103, 106, 107, 111, 112, 114, 115, 116, 119, 126, 128, 136, 137, 138, 146, 154, 155, 161, 164, 166, 169, 173, 176, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 279, 381, 391, 397, 400, 401, 431, 437, 448, 453, 461, 462, 463, 464, 466, 467, 469, 473, 474, 477, 487, 488, 491, 500, 501, 520, 522, 524, 532, 536, 582, 583], "geomspac": [128, 413, 488], "geq": [52, 53], "gerrit": 453, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 103, 105, 107, 108, 109, 111, 121, 125, 127, 129, 130, 133, 134, 136, 144, 148, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 212, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 238, 240, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 282, 283, 320, 336, 385, 386, 390, 391, 392, 393, 394, 395, 399, 400, 402, 409, 411, 412, 413, 416, 417, 419, 420, 422, 423, 426, 428, 443, 444, 445, 446, 453, 456, 462, 464, 465, 469, 470, 471, 477, 479, 483, 486, 487, 489, 490, 491, 493, 494, 495, 497, 499, 500, 501, 502, 504, 508, 509, 510, 512, 520, 524, 537, 583, 587], "get_altaz": [85, 94, 451], "get_bia": 153, "get_bias_energi": 153, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [196, 197, 199, 205, 208, 209, 491, 492, 500, 501, 536], "get_by_idx": [196, 197, 199, 205, 208, 209, 492, 536], "get_by_pix": [196, 197, 199, 205, 208, 209, 536], "get_cl": [459, 486, 493], "get_combined_flux_map": 137, "get_combined_significance_map": 138, "get_coord": [194, 195, 200, 204, 207, 430, 437, 446, 474, 492, 493, 533, 537], "get_dataset": [15, 462, 466, 467, 469, 478, 508, 524], "get_devel_vers": 388, "get_edges_fixed_bin": 148, "get_edges_min_t": 148, "get_edisp_kernel": [154, 155, 432, 437, 487, 500, 528], "get_events_meta_data": 398, "get_excess_map": [15, 508], "get_filenam": [108, 109], "get_flux_point": [15, 126, 128, 409, 432, 462, 508], "get_group_by_idx": 409, "get_hdu": 320, "get_icr": [85, 94, 451], "get_idx": [194, 195, 204, 207, 537], "get_image_by_coord": [196, 197, 199, 205, 208, 209, 492], "get_image_by_idx": [196, 197, 199, 205, 208, 209], "get_image_by_pix": [196, 197, 199, 205, 208, 209], "get_index_list": 195, "get_irfs_featur": [310, 311, 451, 496], "get_kernel": 121, "get_light_curv": 15, "get_mean": 153, "get_observ": [15, 82, 96, 310, 311, 428, 439, 458, 461, 462, 463, 466, 467, 469, 471, 473, 478, 479, 481, 483, 491, 496, 501, 502, 506, 508, 509, 524, 531, 533, 534], "get_ogip_meta": 109, "get_pix": 207, "get_pointing_altaz": [88, 496], "get_pointing_icr": [88, 451, 471, 491, 509], "get_psf_kernel": [164, 166, 169, 452, 453, 500], "get_random_st": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 339, 340, 341, 342, 385], "get_rebinned_axi": 479, "get_resolut": 153, "get_respons": 444, "get_scal": 121, "get_scale_model": [129, 130, 133], "get_spectrum": [196, 197, 199, 205, 208, 209], "get_subcovari": 212, "get_transform": [465, 471, 541, 542], "get_valid_path": 108, "get_wcs_coord_and_weight": 204, "getattr": 413, "getitem": 444, "getlogg": [385, 467, 471, 478, 479, 480, 483, 506], "getter": 386, "getting_start": 405, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 130, 136, 196, 197, 199, 201, 205, 208, 209, 459, 463, 465, 469, 470, 475, 477, 480, 481, 485, 486, 491, 492, 493, 494, 499, 500, 501, 510, 537, 560, 582, 583], "gev2": [19, 485], "gevgevgev1": 459, "gh": [385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416], "git": [86, 267, 385, 386, 388, 390, 392, 393, 411, 415, 419, 448], "github": [386, 388, 389, 390, 391, 393, 394, 403, 405, 411, 414, 415, 416, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 442, 443, 444, 445, 446, 447, 524], "giuliani": 398, "giunti": [427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 448, 451], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 143, 298, 299, 385, 390, 394, 395, 399, 400, 401, 402, 405, 406, 411, 416, 427, 429, 431, 439, 452, 461, 462, 465, 472, 474, 479, 483, 484, 486, 489, 490, 491, 492, 495, 499, 500, 508, 524, 529, 584, 585, 587, 588], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 182, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 292, 294, 300, 310, 312, 315, 316, 323, 330, 334, 337, 338, 346, 372, 373, 378, 382, 385, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 408, 409, 411, 413, 426, 431, 437, 445, 446, 451, 456, 457, 458, 459, 462, 465, 473, 474, 475, 477, 478, 479, 480, 485, 486, 487, 488, 490, 491, 492, 493, 495, 499, 500, 508, 510, 520, 521, 522, 524, 528, 529, 533, 534, 536, 537, 543, 547, 550, 581, 583, 584, 585, 586], "gky3rxyt": 469, "glast": 500, "glat": [41, 67, 68, 83, 385, 461, 486, 492, 500], "glat_err": 486, "glat_pnt": [471, 499], "glimps": [501, 504], "gll_iem_v06_cutout": [196, 197, 199, 205, 208, 209], "gll_iem_v06_gc": [473, 492, 494, 495, 500], "gll_psc_v16": 61, "gll_psc_v20": 486, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 386, 487, 488], "global": [16, 33, 42, 45, 46, 47, 100, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 336, 339, 340, 341, 342, 385, 389, 391, 414, 434, 451, 461, 471, 472, 481, 494, 497, 522, 582], "global_dataset": 491, "global_to_loc": 195, "glon": [41, 67, 68, 83, 385, 461, 486, 492, 500], "glon_pnt": [471, 499], "glossari": [405, 448, 520, 537], "glue": 524, "glueviz": 402, "go": [50, 87, 91, 388, 395, 405, 410, 414, 448, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 512, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584], "goal": [390, 399, 413, 489], "goe": [41, 52, 375, 385, 404, 416, 475, 497], "gogia": 444, "good": [82, 86, 102, 128, 304, 309, 385, 390, 392, 393, 394, 395, 396, 399, 401, 402, 403, 405, 414, 457, 461, 463, 464, 467, 477, 479, 480, 484, 485, 487, 489, 491, 493, 495, 500, 501, 504, 546, 547, 583, 588], "googl": [87, 91, 405, 415, 453], "got": 499, "gov": [58, 60, 61, 62, 64, 65, 101, 153, 201, 405, 563], "gp": [82, 83, 89, 386, 395, 401, 466, 469, 471, 481, 499, 501], "gpl3": 385, "gps_baseline_110380": [82, 83, 499], "gradient": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 414], "grai": [376, 533, 560], "grand": 385, "grant": [388, 411], "granular": 484, "grayify_colormap": 404, "grb": [480, 484], "great": [390, 399, 404, 443, 504], "greater": [173, 378], "green": [102, 111, 112, 445, 472, 496, 497], "grei": 481, "grep": 421, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 129, 132, 157, 165, 167, 196, 197, 199, 201, 205, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 286, 378, 385, 396, 401, 414, 429, 431, 489, 536, 537, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577], "gridsearch": [214, 489], "gridspec": 372, "gridspec_kw": [465, 471, 478, 480, 550], "ground": [95, 400, 499, 585], "group": [86, 87, 91, 92, 129, 130, 133, 134, 136, 154, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 310, 391, 400, 404, 405, 406, 409, 415, 418, 428, 431, 433, 437, 443, 446, 465, 478, 480, 504, 522, 524, 538, 584], "group_1": 496, "group_2": 496, "group_bi": [87, 91, 409], "group_by_axi": 409, "group_by_label": [92, 496], "group_high_zenith": 496, "group_low_zenith": 496, "group_siz": [148, 479], "group_tabl": [86, 201, 206], "grouped_observ": 496, "grow": [393, 404, 445], "grown": 405, "gr\u00e9aux": 451, "gsfc": [58, 60, 61, 62, 64, 65, 101, 153, 201, 405, 563], "gt": 490, "gtdrm": [153, 154], "gtexpcube2": 500, "gti": [82, 87, 88, 89, 100, 102, 103, 106, 107, 111, 112, 126, 128, 130, 133, 137, 146, 170, 206, 267, 391, 394, 395, 398, 399, 400, 409, 429, 431, 432, 434, 447, 451, 452, 473, 479, 480, 483, 487, 491, 499, 501, 502, 520, 583], "gti_1": 521, "gti_2": 521, "gti_t0": 480, "gtimetadata": 412, "gtmktime": [395, 500], "gtobsim": 398, "gtol": 489, "gtpsf": [154, 155, 161, 166, 169, 201, 465, 500], "gtselect": [395, 500], "guarante": [393, 408, 410, 414], "guess": [128, 195, 197, 452], "guid": [388, 401, 403, 418, 419, 420, 423, 446, 469, 504, 524, 539, 549, 570, 580], "guidelin": [385, 389, 423, 445], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 103, 106, 107, 111, 112, 117, 120, 121, 125, 130, 132, 136, 144, 145, 158, 230, 280, 373, 378, 380, 386, 407, 446, 457, 461, 462, 465, 472, 473, 474, 475, 486, 487, 488, 490, 492, 494, 495, 499, 500, 501, 506, 508, 509, 510, 521, 522, 524, 526, 527, 528, 530, 550], "h": [26, 67, 82, 86, 87, 91, 95, 129, 131, 155, 182, 196, 197, 199, 205, 208, 209, 293, 375, 405, 408, 414, 418, 422, 423, 431, 446, 453, 455, 456, 457, 458, 461, 462, 464, 467, 470, 472, 478, 479, 480, 483, 485, 489, 490, 491, 492, 495, 496, 497, 499, 500, 501, 503, 504, 506, 508, 509, 519, 524, 537, 572, 573, 583, 584], "h0": 472, "h05": [45, 49], "h1": 472, "h7bgm": 465, "h_0": [472, 586], "h_1": [472, 586], "h_i": 131, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 102, 103, 106, 107, 111, 112, 125, 126, 128, 168, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 279, 280, 378, 380, 382, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 433, 434, 437, 439, 440, 446, 447, 448, 450, 451, 452, 453, 457, 458, 461, 462, 463, 467, 472, 474, 478, 479, 481, 485, 486, 487, 489, 491, 492, 493, 495, 496, 497, 499, 501, 502, 508, 509, 520, 521, 524, 529, 533, 534, 536, 537, 541, 542, 569, 581, 584, 586], "habilit": 309, "hack": 442, "had": [385, 391, 393, 411, 434, 440, 444, 445], "hadron": [283, 391, 396, 467, 487, 499, 520, 533], "hajlaoui": [434, 437], "hal": 411, "half": [166, 169, 201, 207, 279], "halo": 512, "halv": [140, 298, 452], "halving_coord": 484, "halving_err": 484, "hand": [178, 385, 388, 393, 396, 405, 411, 413, 449, 489, 504, 524], "handbook": [405, 504], "handi": 469, "handl": [3, 16, 84, 90, 105, 126, 127, 128, 182, 203, 301, 384, 386, 389, 397, 398, 399, 401, 406, 408, 409, 412, 415, 418, 420, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 461, 463, 469, 470, 471, 473, 487, 490, 492, 494, 495, 500, 501, 504, 509, 510, 520, 521, 524, 583], "handler_map": 382, "hanna": [452, 453], "hap": 401, "happen": [82, 388, 390, 392, 393, 399, 403, 416, 462, 494, 504, 508, 509, 520, 524, 586], "happi": [388, 392, 405, 426, 427, 446], "hard": [385, 386, 408, 413, 432, 497], "harder": [392, 584], "hardli": 412, "harri": [441, 442], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 121, 139, 156, 214, 248, 283, 284, 293, 300, 302, 405, 489], "has_any_t": [126, 128], "has_energy_axi": [194, 195, 204, 207], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "has_single_spatial_bin": [154, 155, 161, 166, 169], "has_stat_profil": [126, 128], "has_success": [126, 128], "has_ul": [126, 128], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 385, "hasn": 390, "hatch": 481, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 105, 109, 113, 118, 126, 127, 128, 129, 133, 144, 145, 153, 154, 155, 164, 166, 169, 176, 178, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 312, 336, 342, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 396, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 431, 434, 437, 439, 440, 443, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 479, 480, 481, 483, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 508, 509, 510, 512, 520, 521, 522, 524, 531, 535, 536, 537, 547, 558, 581, 584, 587, 588], "haven": 422, "hawc": [55, 59, 63, 72, 76, 97, 423, 431, 437, 445, 448, 449, 451, 455, 503, 504, 519, 532, 583], "hawc19_flux_point": [128, 470, 524], "hawc_crab": [128, 470, 524], "hd": 67, "hdr": 412, "hdr_dict": 412, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 103, 106, 107, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 320, 371, 386, 395, 425, 440, 442, 445, 448, 449, 490, 492, 499, 501, 502, 520, 521, 524, 526, 527, 528, 530, 537, 579], "hdu1": 153, "hdu2": 153, "hdu_al": 473, "hdu_band": [126, 128, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209], "hdu_class": [82, 87, 320, 499, 501, 502], "hdu_class_uniqu": 87, "hdu_evt": 473, "hdu_filenam": 501, "hdu_gti": 473, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [154, 155, 157, 161, 165, 166, 167, 169, 196, 197, 208, 209], "hdu_loc": 87, "hdu_nam": 320, "hdu_ob": 82, "hdu_out": [196, 197], "hdu_region": [204, 205], "hdu_tabl": [82, 501], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 499, 501, 502], "hdu_type_uniqu": 87, "hduclas2": 490, "hduclas3": 490, "hduclas4": 490, "hduclasn": 490, "hduindext": [82, 320, 501], "hdulist": [103, 106, 107, 109, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 473, 492, 520], "hduloc": [87, 103], "he": [283, 395, 400], "hea": 400, "head": 386, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 126, 127, 128, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 279, 322, 367, 368, 371, 390, 395, 398, 412, 431, 439, 441, 446, 448, 451, 463, 474, 492, 499, 588], "healpi": [195, 384, 392, 394, 402, 417, 418, 420, 429, 437, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 535], "healpix": [13, 195, 196, 197, 199, 205, 208, 209, 384, 392, 394, 399, 437, 445, 492, 500, 536], "healpix_to_imag": 438, "heapsort": [87, 91], "hear": 414, "heart": 586, "heasarc": [153, 201], "heatmap": [374, 379], "heavi": [446, 447], "heavier": 469, "heavili": 437, "hegra": [97, 284], "heidelberg": [385, 415], "heidt": 484, "height": [16, 29, 87, 91, 94, 130, 345, 462, 466, 467, 469, 475, 478, 481, 485, 492, 493, 495, 508, 533, 537], "heighten": 484, "helen": 443, "hello": [422, 471], "help": [11, 87, 91, 295, 301, 385, 388, 390, 392, 399, 400, 401, 405, 411, 415, 416, 417, 422, 426, 427, 428, 445, 446, 448, 486, 491, 492, 494, 500, 502, 510, 524, 584], "helper": [13, 320, 325, 392, 394, 399, 400, 401, 404, 416, 422, 428, 429, 430, 431, 437, 439, 442, 444, 445, 451, 452, 475, 486, 493, 494, 533, 582, 589], "henc": [87, 91, 246, 401, 466, 467, 522, 537, 586], "here": [13, 82, 83, 87, 91, 101, 103, 107, 111, 128, 138, 147, 151, 156, 165, 214, 292, 294, 297, 373, 384, 385, 386, 387, 388, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 412, 413, 414, 415, 416, 418, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 496, 497, 499, 500, 501, 504, 508, 509, 510, 514, 520, 524, 529, 531, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584, 585, 586, 588, 589], "hereaft": 473, "herebi": 497, "heritag": 411, "herm": [287, 289, 452], "herr": 414, "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 102, 111, 112, 134, 148, 149, 156, 158, 176, 214, 290, 310, 311, 386, 393, 394, 399, 401, 405, 414, 415, 418, 422, 425, 427, 430, 441, 442, 445, 446, 455, 458, 459, 461, 462, 463, 467, 469, 471, 472, 479, 481, 483, 486, 487, 488, 489, 491, 496, 497, 500, 502, 503, 506, 508, 509, 512, 521, 522, 524, 526, 527, 528, 530, 531, 533, 534], "hess2": [156, 526], "hess_dl3_dr1_obs_id_020136": [88, 158, 386, 526, 527, 528, 530], "hess_dl3_dr1_obs_id_023523": [83, 86, 521], "hess_dl3_dr1_obs_id_023526": 521, "hess_ecpl": [284, 461], "hess_pl": 284, "hessian": 522, "heterogen": [412, 459, 470], "hfm": 67, "hgp": [67, 80, 81, 125, 405, 431, 443, 445, 446, 519], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 486], "hi": [385, 444], "hi_bnd": 201, "hi_threshold": 153, "hidden": 396, "hide": [13, 390, 407], "hierarch": [13, 310, 352, 394, 396, 412, 452, 524, 536], "hierarchi": [310, 396, 430], "hierarchical_clust": [451, 496], "high": [6, 15, 58, 62, 63, 83, 153, 201, 335, 385, 389, 390, 391, 398, 399, 400, 405, 412, 414, 429, 430, 431, 432, 433, 437, 445, 446, 455, 456, 459, 462, 465, 466, 469, 475, 477, 478, 485, 486, 487, 488, 491, 493, 499, 500, 501, 502, 504, 509, 510, 511, 519, 520, 521, 522, 529, 532, 582, 583, 584, 585], "high_zenith": 496, "higher": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 241, 388, 391, 396, 401, 404, 406, 419, 459, 474, 484, 490, 492, 531, 537], "highest": [144, 182, 484, 491, 499, 510], "highli": 495, "highlight": 584, "hint": [412, 465, 522], "hire": [157, 405, 514, 516, 517, 518, 520, 521, 526, 527, 528, 530, 533, 537, 586, 589], "hist": [83, 111, 112, 205, 209, 378, 464, 497], "histogram": [83, 111, 112, 201, 205, 209, 378, 451, 481, 537, 583], "histori": [399, 411, 448], "hit": 414, "hli": [398, 432, 433, 437, 448, 455, 460, 504, 520, 523, 583], "hli_spectrum_analysi": 462, "hline": 541, "hoc": 399, "hold": [69, 82, 89, 92, 96, 100, 164, 235, 312, 394, 395, 397, 400, 584, 586], "home": [16, 349, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 550, 556, 572, 578, 579], "homebrew": 402, "homework": 428, "homogen": [87, 91, 434], "honk": 390, "hood": [462, 504, 508], "hook": [388, 448], "hope": 390, "hopefulli": 392, "horizont": [85, 95, 159, 355, 490, 588], "host": [385, 414], "hour": [67, 94, 388, 401, 415, 416, 456, 486, 491, 492, 524], "hover": 386, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 105, 127, 128, 130, 132, 176, 197, 207, 209, 336, 342, 387, 390, 393, 397, 399, 401, 402, 404, 407, 408, 411, 412, 414, 416, 417, 418, 422, 423, 426, 427, 428, 431, 432, 439, 441, 444, 445, 446, 451, 452, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 510, 514, 520, 522, 525, 529, 533, 535, 536, 550, 569, 582, 584, 585, 586, 588, 589], "howev": [77, 87, 91, 102, 125, 299, 384, 385, 386, 388, 392, 395, 398, 399, 403, 411, 413, 414, 419, 458, 467, 475, 481, 483, 485, 486, 487, 489, 497, 501, 502, 504, 520, 524, 536, 537, 542, 558, 584], "howto": [405, 448, 449], "hpx": [195, 196, 197, 199, 208, 209, 399, 437, 492, 500], "hpx2wc": [196, 197], "hpx_map": [196, 197], "hpx_pixel": 399, "hpx_reg": 195, "hpxgeom": [126, 194, 196, 197, 432, 437, 448, 500, 535], "hpxmap": [197, 199, 535], "hpxndmap": [275, 437, 535], "hpxsparsemap": 431, "hpxtowcsmap": [196, 197], "hr": [473, 474, 477, 480], "hspace": 485, "hspec": [441, 442, 443], "hst": 229, "hstack": [87, 91, 398], "html": [26, 83, 87, 91, 101, 129, 153, 189, 195, 201, 204, 207, 214, 227, 251, 280, 312, 339, 340, 385, 386, 388, 393, 405, 410, 411, 415, 416, 424, 445, 456, 464, 466, 469, 471, 477, 480, 489, 490, 499, 521, 524, 527, 535, 537, 563], "htmlcov": 416, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 101, 105, 121, 127, 129, 138, 139, 140, 147, 153, 156, 182, 189, 195, 201, 204, 207, 214, 227, 248, 251, 257, 258, 272, 273, 280, 283, 284, 293, 299, 300, 302, 307, 312, 339, 340, 352, 388, 402, 405, 410, 411, 414, 415, 416, 417, 418, 419, 420, 424, 428, 445, 456, 461, 464, 466, 469, 470, 471, 477, 480, 485, 486, 489, 490, 499, 521, 524, 535, 537, 563, 567, 568, 584], "hubert": 446, "hue": 376, "huestart": 376, "huge": [416, 542], "hugovk": 427, "human": [366, 396, 414, 416, 439, 462, 508], "hundr": 501, "hypercub": [492, 536, 537], "hypothes": [290, 451, 524, 586], "hypothesi": [126, 128, 129, 130, 133, 134, 290, 292, 294, 453, 459, 465, 472, 488, 522, 524, 583, 586], "hysteresi": 483, "hz": [342, 510], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 307, 309, 310, 312, 314, 318, 320, 323, 324, 325, 330, 332, 333, 336, 339, 340, 341, 342, 344, 345, 348, 351, 353, 354, 356, 360, 362, 363, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 509, 510, 512, 513, 514, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589], "i0": [87, 91], "i1": [87, 91], "i4": 475, "i8": [492, 510], "i_0": [196, 197, 199, 205, 208, 209], "i_hpx": [196, 197, 199, 205, 208, 209], "i_lat": [196, 197, 199, 205, 208, 209], "i_lon": [196, 197, 199, 205, 208, 209], "i_n": [196, 197, 199, 205, 208, 209], "i_scan": 497, "iact": [82, 83, 85, 94, 176, 179, 183, 391, 394, 395, 396, 397, 399, 401, 405, 423, 428, 442, 444, 446, 459, 465, 467, 491, 492, 494, 499, 500, 502, 521, 526, 527, 528, 530, 581, 583], "iactbasicimageestim": [391, 445], "iau": [52, 425, 429], "iau2015": 52, "ic": 560, "icon": 582, "icr": [83, 85, 88, 91, 94, 95, 96, 103, 106, 107, 111, 112, 114, 115, 144, 166, 176, 179, 195, 196, 197, 199, 202, 204, 207, 208, 209, 223, 224, 228, 237, 240, 255, 264, 265, 310, 311, 346, 385, 386, 409, 430, 461, 462, 463, 464, 465, 467, 470, 471, 473, 474, 477, 478, 479, 480, 481, 483, 486, 487, 490, 491, 492, 493, 495, 496, 499, 500, 501, 502, 508, 509, 521, 524, 528, 533, 537, 541, 542, 543, 545, 546, 547], "icrc": 441, "id": [67, 80, 82, 83, 87, 88, 91, 92, 114, 115, 398, 401, 422, 462, 464, 473, 475, 477, 481, 486, 495, 499, 500, 501, 502, 508, 521], "id_obs_vela": 481, "idea": [390, 393, 400, 404, 405, 406, 462, 483, 490, 496, 500, 508], "ideal": [387, 388, 395, 399, 400, 409, 413, 415, 459, 500], "idempot": [16, 84, 90, 105, 127], "ident": [360, 388, 400, 448, 461, 463], "identif": [67, 391, 486], "identifi": [67, 88, 104, 110, 195, 267, 385, 395, 396, 398, 401, 410, 411, 416, 432, 465, 473, 484, 486, 487, 495, 499, 501, 523], "identified_object": 486, "idx": [83, 87, 91, 92, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 251, 464, 473, 480, 486, 489, 492, 536], "idx1": 489, "idx2": 489, "idx_glob": 195, "idx_loc": 195, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 411, 457, 483, 494, 495, 520, 583], "iem": [494, 500], "iem_minus_iem": 492, "iem_plus_iem": 492, "iem_times_two": 492, "ignacio": 447, "ignasi": 441, "ignor": [11, 16, 84, 87, 90, 91, 102, 105, 127, 139, 160, 170, 199, 217, 219, 235, 312, 324, 386, 439, 453, 461, 475, 480, 481, 487, 493, 508, 524, 584], "ii": [212, 443], "ij": 212, "ilist": 195, "illustr": [111, 112, 386, 395, 397, 398, 399, 401, 404, 414, 463, 465, 470, 475, 487, 491, 492, 494, 495, 500, 514, 520, 533, 534, 541, 542, 550, 582], "illustrate_colormap": 404, "iloc": [87, 91], "im": [374, 489], "imag": [103, 106, 107, 111, 112, 121, 131, 132, 144, 155, 156, 157, 163, 165, 166, 167, 169, 171, 181, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 279, 303, 306, 349, 371, 373, 374, 375, 376, 380, 385, 393, 394, 396, 401, 402, 405, 406, 416, 418, 423, 425, 426, 427, 430, 431, 432, 438, 442, 443, 444, 445, 446, 453, 455, 466, 469, 475, 476, 491, 493, 495, 499, 509, 510, 520, 529, 533, 534, 535, 536, 537, 582, 583, 589], "image_analysi": [405, 426], "image_err": 132, "image_fitting_with_sherpa": [405, 447], "image_pip": 445, "image_profil": 444, "imagehdu": [196, 197, 208, 209], "imagenorm": [375, 376], "imageprofil": 132, "images_t": 471, "imagin": 584, "img": [373, 492], "iminuit": [214, 384, 402, 411, 414, 437, 439, 446, 450, 451, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 581], "immut": 227, "impact": [392, 398, 402, 501], "imperfect": 491, "implement": [19, 20, 103, 106, 107, 111, 112, 138, 147, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 293, 299, 385, 386, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 412, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 444, 445, 447, 448, 451, 452, 453, 458, 466, 479, 484, 485, 486, 491, 492, 493, 512, 520, 522, 524, 529, 530, 531, 569, 581, 582, 583, 584, 585, 588], "implent": 385, "impli": [241, 385, 404, 414, 520, 583], "implic": 407, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 529], "implicitli": 491, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 102, 103, 105, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 128, 130, 132, 134, 136, 144, 145, 148, 149, 151, 153, 155, 156, 157, 158, 164, 166, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 249, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 290, 293, 299, 300, 310, 311, 332, 342, 352, 364, 365, 370, 373, 375, 376, 378, 380, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 421, 422, 433, 443, 445, 450, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 513, 514, 516, 517, 518, 520, 521, 522, 524, 526, 527, 528, 530, 531, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 584, 585, 586, 588], "importantli": [409, 446, 458, 584], "importerror": [87, 91], "impos": [450, 456, 533], "imposs": 414, "improv": [110, 290, 387, 389, 390, 391, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 410, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 492, 499, 524, 534, 541], "imshow": [103, 106, 107, 164, 197, 209, 373, 379, 444, 492, 510], "in2p3": 411, "in_memori": [88, 524], "in_memory_gener": 92, "in_safe_data_rang": [103, 106, 107, 111, 112], "inaccur": 385, "incex": [16, 84, 90, 105, 127], "incid": 391, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 105, 127, 133, 154, 164, 170, 172, 173, 179, 180, 184, 194, 195, 204, 207, 252, 320, 384, 385, 391, 393, 396, 397, 398, 399, 401, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 427, 429, 434, 445, 450, 451, 452, 453, 456, 469, 470, 472, 473, 475, 480, 485, 486, 488, 489, 491, 493, 494, 495, 499, 501, 512, 514, 520, 522, 523, 534, 536, 581, 585, 588], "include_irf": [88, 521, 524], "include_ssc": 252, "inclus": [83, 204, 399], "incompat": [410, 439], "incomplet": [385, 416, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "inconsist": [434, 440, 450, 451], "inconveni": [404, 446], "incorpor": [401, 405, 413, 583], "incorrect": [83, 385, 412, 421, 430, 448, 449, 491, 497], "incorrectli": [448, 493], "increas": [144, 171, 201, 206, 228, 237, 240, 385, 394, 412, 479, 488, 491, 520, 524, 541], "increment": [19, 20, 26, 121, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 399, 492, 536], "ind": [195, 207, 227, 251], "inde": [473, 542], "indefinit": 392, "indent": [16, 84, 90, 105, 127], "independ": [67, 129, 133, 137, 138, 146, 147, 309, 323, 385, 391, 395, 396, 397, 398, 399, 400, 403, 406, 407, 408, 409, 411, 418, 427, 437, 456, 462, 478, 486, 492, 493, 494, 495, 501, 508, 509, 519, 524, 529, 583, 587], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 102, 103, 106, 107, 111, 112, 121, 125, 126, 128, 129, 130, 134, 135, 136, 143, 153, 154, 155, 161, 164, 166, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 221, 222, 225, 227, 229, 231, 232, 233, 238, 244, 245, 248, 249, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 293, 320, 334, 339, 388, 391, 394, 395, 396, 397, 400, 401, 408, 409, 410, 415, 418, 428, 442, 444, 445, 451, 452, 457, 458, 459, 461, 462, 464, 465, 466, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 490, 494, 495, 499, 500, 501, 502, 508, 509, 510, 522, 524, 535, 536, 537, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 554, 555, 556, 561, 562, 563, 571, 572, 573, 574, 575, 576, 577, 578, 579], "index1": [221, 268, 551, 565], "index2": [221, 268, 551, 565], "index_1": [271, 272, 273, 566, 567, 568], "index_2": [77, 271, 272, 273, 566, 567, 568], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 200, "index_err": 483, "index_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "index_mod": [87, 91], "index_scan": 497, "indexerror": [92, 100, 251], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 385, 448, 464, 474, 484, 491, 492, 496, 497, 501, 502, 524, 536, 537, 583], "indico": 394, "indirect": [485, 512], "individu": [87, 91, 110, 123, 131, 381, 391, 397, 398, 400, 405, 408, 409, 413, 458, 461, 464, 472, 475, 479, 486, 487, 489, 491, 494, 495, 510, 520, 524, 529], "indiviud": 407, "indxschm": [196, 197, 208, 209], "ineffici": [87, 91, 388], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 240, 282, 413, 497], "infer": [126, 128, 194, 195, 196, 197, 199, 207, 208, 209, 229, 386, 389, 508, 536], "inferno": 492, "infil": 385, "infin": 497, "influenc": 497, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 157, 163, 165, 167, 292, 294, 320, 386, 400, 401, 405, 415, 421, 431, 432, 434, 441, 442, 445, 462, 466, 467, 469, 473, 479, 483, 485, 486, 487, 492, 500, 501, 502, 504, 506, 508, 584], "info_dict": [103, 106, 107, 111, 112, 292, 294, 378, 434, 452, 487], "info_t": [100, 458, 461, 462, 464, 469, 480, 487, 494, 524], "infodict": 378, "inform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 153, 157, 163, 165, 167, 168, 171, 176, 177, 182, 183, 202, 214, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 268, 271, 272, 273, 275, 276, 279, 280, 295, 301, 320, 336, 367, 368, 385, 389, 390, 395, 397, 398, 399, 400, 401, 408, 409, 412, 413, 414, 416, 421, 422, 423, 431, 433, 434, 437, 439, 445, 451, 452, 457, 459, 462, 463, 470, 473, 474, 477, 483, 484, 487, 488, 489, 491, 492, 495, 499, 500, 501, 502, 508, 509, 510, 519, 520, 521, 522, 524, 537, 584, 587], "infrar": 229, "infrastructur": [416, 424, 437, 448, 451], "ingredi": [409, 485], "inherit": [87, 91, 293, 385, 395, 397, 400, 409, 412, 413, 432, 437, 444, 487, 490, 535, 536], "init": [19, 20, 26, 87, 91, 125, 130, 136, 173, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 324, 336, 397, 434, 449, 451, 452, 453, 465, 475, 479, 486, 487, 488, 510], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 105, 126, 127, 128, 136, 194, 195, 197, 200, 201, 204, 207, 227, 251, 253, 254, 312, 385, 390, 395, 396, 397, 401, 414, 439, 456, 464, 467, 469, 470, 472, 473, 474, 477, 481, 486, 487, 492, 495, 508, 509, 510, 519, 521, 569, 583], "initialis": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 336, 339, 340, 341, 342, 385, 407, 497], "initiliaz": 414, "inject": [464, 477], "inlin": [390, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 492, 493, 494, 495, 499, 500, 502, 508, 509, 510], "inner": [44, 52, 53, 130, 171, 181, 265, 467, 510, 547], "inner_height": [533, 537], "inner_width": [533, 537], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 103, 105, 106, 107, 110, 121, 123, 125, 126, 127, 128, 129, 132, 133, 136, 140, 141, 142, 143, 145, 149, 154, 155, 157, 164, 165, 166, 167, 168, 169, 171, 173, 177, 179, 181, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 227, 242, 251, 278, 279, 280, 293, 312, 323, 333, 336, 355, 357, 378, 380, 391, 393, 395, 396, 397, 398, 399, 400, 401, 406, 422, 432, 437, 440, 447, 451, 453, 464, 473, 474, 481, 488, 492, 497, 522, 536, 537, 585], "input_map": [113, 118], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 451, "insensit": 203, "insert": [87, 91, 92, 100, 251, 411, 432, 587], "insert_row": [87, 91], "insertion_order_mww_test": 414, "inset": 438, "insid": [50, 83, 103, 107, 111, 117, 120, 153, 179, 195, 196, 197, 199, 204, 207, 208, 209, 227, 251, 267, 374, 378, 385, 386, 399, 401, 409, 437, 456, 461, 464, 466, 469, 471, 477, 480, 487, 491, 493, 494, 495, 499, 501, 521, 531, 533, 534, 537], "inside_geom": 493, "insight": 421, "inspect": [397, 401, 422, 461, 463, 469, 473, 474, 489, 492, 494, 499, 500], "inspir": [385, 409, 415], "instal": [87, 91, 384, 385, 388, 392, 393, 394, 402, 415, 416, 417, 420, 422, 423, 426, 427, 437, 441, 444, 445, 446, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 508, 509, 510, 524, 584], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 105, 123, 127, 128, 129, 131, 133, 134, 168, 170, 178, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 330, 336, 372, 374, 375, 376, 379, 381, 385, 391, 396, 397, 400, 401, 407, 409, 412, 437, 459, 461, 464, 475, 486, 488, 489, 491, 493, 494, 495, 510, 514, 524, 536, 537, 560], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 196, 197, 199, 201, 208, 209, 396, 401, 458, 462, 486, 487, 492, 495, 497, 508], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 103, 105, 106, 107, 111, 112, 116, 127, 183, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 385, 386, 388, 390, 392, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 413, 417, 418, 420, 427, 430, 433, 434, 447, 451, 453, 457, 463, 469, 473, 475, 477, 478, 480, 481, 486, 487, 490, 491, 492, 495, 497, 500, 521, 528, 529, 536, 537, 584], "instruct": [385, 394, 402, 415, 417, 418, 426, 437, 441, 445, 473, 499], "instrument": [6, 83, 95, 110, 156, 160, 161, 235, 385, 395, 396, 397, 398, 400, 405, 409, 418, 422, 431, 434, 446, 447, 448, 455, 458, 459, 461, 462, 465, 469, 476, 481, 483, 487, 489, 490, 491, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 509, 520, 521, 522, 526, 528, 530, 582, 583], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 121, 123, 127, 128, 129, 130, 133, 134, 136, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 179, 183, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 286, 288, 290, 292, 293, 294, 298, 299, 300, 302, 307, 312, 323, 324, 330, 334, 336, 339, 340, 341, 342, 344, 345, 372, 378, 385, 399, 444, 489, 514], "int64": [103, 106, 107, 111, 112, 113, 118, 125, 136, 522], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 529, 541], "int_flux": 485, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 136, 144, 145, 154, 155, 161, 166, 169, 172, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 218, 220, 227, 251, 312, 330, 336, 385, 391, 399, 536], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 102, 103, 106, 107, 111, 112, 126, 128, 131, 133, 143, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 171, 196, 197, 199, 201, 205, 208, 209, 210, 211, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 284, 286, 323, 384, 392, 394, 396, 398, 399, 400, 402, 403, 405, 409, 411, 414, 425, 427, 428, 432, 433, 437, 442, 443, 444, 445, 446, 447, 448, 451, 461, 463, 464, 466, 480, 483, 485, 486, 487, 492, 493, 495, 510, 512, 520, 522, 528, 543, 563], "integral_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 403, 434, 483], "integral_flux": 483, "integral_flux_imag": 438, "integrate_geom": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279, 437, 450, 452], "integrate_log_log": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "integrate_spectrum": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 428, 434], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 312, 395, 413, 414, 490], "intens": [196, 197, 199, 205, 208, 209, 214, 241, 395, 492, 520], "intent": 390, "interact": [19, 20, 87, 91, 166, 169, 196, 197, 199, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 384, 385, 386, 394, 395, 396, 397, 401, 405, 408, 422, 431, 457, 469, 477, 489, 492, 494, 495, 504, 508, 509, 533, 536, 560, 584], "interchang": 536, "interest": [117, 120, 129, 133, 214, 290, 390, 398, 399, 403, 405, 416, 459, 469, 473, 475, 483, 486, 487, 489, 491, 493, 496, 499, 500, 510, 521, 522, 560, 583, 586, 587], "interfac": [6, 11, 15, 19, 20, 87, 91, 212, 214, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 385, 389, 390, 391, 395, 397, 398, 400, 402, 403, 404, 405, 414, 427, 430, 432, 433, 434, 437, 441, 444, 445, 451, 455, 457, 462, 465, 466, 469, 477, 478, 489, 495, 499, 504, 509, 510, 511, 520, 521, 524, 532, 535, 560, 581, 582, 583, 584], "interfer": 415, "intermedi": [207, 394, 401, 411, 422, 458, 479], "intern": [15, 19, 20, 26, 87, 91, 126, 128, 139, 140, 141, 142, 173, 179, 204, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 286, 312, 324, 385, 397, 399, 401, 404, 409, 437, 439, 448, 451, 456, 462, 469, 478, 484, 487, 490, 492, 502, 508, 520, 524, 579], "interp": [19, 20, 158, 196, 197, 199, 201, 205, 206, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 325, 380, 408, 413, 450, 452, 464, 470, 474, 477, 480, 490, 491, 492, 495, 500, 501, 502, 536, 537, 560, 561], "interp1": 492, "interp1d": 325, "interp2": 492, "interp_by_coord": [196, 197, 199, 205, 208, 209, 279, 448, 492], "interp_by_pix": [196, 197, 199, 205, 208, 209, 275, 276, 492], "interp_kwarg": [68, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 229, 275, 276, 279, 280, 385, 490, 500, 569], "interp_map": [196, 197, 199, 205, 208, 209], "interp_missing_data": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "interp_param": 385, "interp_scal": [102, 291, 325], "interp_to_geom": [196, 197, 199, 205, 208, 209, 434, 450, 492, 500, 524], "interp_weight": 195, "interpol": [6, 26, 94, 102, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 176, 195, 196, 197, 199, 201, 205, 206, 208, 209, 229, 242, 253, 254, 275, 276, 278, 279, 280, 291, 324, 325, 326, 384, 396, 397, 398, 427, 432, 437, 439, 442, 445, 447, 448, 449, 450, 451, 452, 461, 474, 490, 491, 495, 500, 501, 524, 532, 536, 569], "interpolatedunivariatesplin": 278, "interpret": [91, 103, 106, 107, 131, 144, 145, 197, 201, 207, 208, 209, 330, 403, 413, 492, 522, 537], "intersect": [89, 179, 180, 184, 204, 399, 479], "interspers": 390, "interstellar": [45, 473], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 102, 104, 110, 128, 133, 177, 201, 206, 214, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 394, 395, 399, 400, 403, 409, 418, 431, 433, 434, 437, 446, 447, 452, 453, 478, 480, 483, 489, 492, 501, 509, 521, 536, 583, 586], "interval_edg": 206, "intervent": 414, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 252, 300, 396, 400], "intrinsic_model": 457, "intro": 414, "intro_map": 446, "introduc": [19, 20, 196, 197, 199, 201, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 385, 392, 393, 395, 397, 398, 399, 400, 402, 405, 407, 410, 413, 414, 428, 430, 431, 433, 434, 437, 439, 440, 444, 445, 446, 448, 451, 452, 453, 472, 484, 491, 495, 537, 542, 584, 587], "introduct": [388, 406, 407, 408, 414, 427, 431, 432, 433, 434, 453, 459, 462, 495, 508, 509, 513], "introductori": 484, "introspect": 312, "intuit": [406, 587], "invalid": [371, 385, 399, 412, 413, 437, 453, 463, 467, 473, 502], "invalid_pixel": 493, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 207, 221, 222, 225, 229, 231, 232, 233, 238, 241, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 292, 293, 294, 334, 341, 398, 414, 473, 493, 495, 497, 560], "inverse_al": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "inverse_cdf": [414, 473], "inversecdf": 398, "inversecdfsampl": [398, 429], "inversecompton": [252, 560], "invert": [91, 195, 207, 510], "invest": 388, "investig": [472, 479, 483], "involv": [87, 91, 103, 106, 107, 111, 112, 385, 390, 399, 401, 403, 407, 465, 584], "io": [13, 83, 86, 87, 91, 129, 189, 199, 204, 214, 280, 388, 394, 405, 414, 416, 428, 431, 443, 447, 451, 473, 489, 490, 492, 499, 521, 524, 535, 537], "iop": 299, "iopscienc": 299, "ipix": 195, "ipykernel": [418, 420], "ipynb": [393, 405, 428, 431, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "ipynb_to_galleri": 385, "ipython": [87, 91, 384, 385, 401, 402, 417, 421, 429, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 508, 509, 510, 523, 584], "ipython3": 419, "ipywidget": 492, "irap": 405, "irf": [6, 82, 88, 96, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 185, 186, 187, 189, 191, 192, 195, 204, 207, 267, 311, 385, 386, 391, 395, 396, 397, 398, 401, 404, 405, 406, 407, 413, 418, 426, 428, 431, 433, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 473, 474, 477, 478, 480, 491, 493, 496, 497, 498, 500, 501, 502, 504, 508, 509, 520, 521, 524, 526, 527, 528, 530, 531, 582, 583], "irf_dict": 170, "irf_dl3_hdu_specif": 490, "irf_fil": [88, 151, 155, 156, 157, 166, 456, 464, 477, 480, 490, 499], "irf_filenam": [473, 474, 490, 499], "irf_map": [154, 155, 161, 166, 169], "irf_path": 473, "irfmap": [154, 155, 166, 169, 418, 434, 524], "irfmetadata": 412, "irfmodel": 396, "irfs1": 499, "irfs2": 499, "irfs_path": 82, "irfstack": [434, 443], "irregular": [195, 207, 536], "irrespect": [398, 469, 492, 536], "is_align": [195, 201, 206, 207], "is_all_point_sky_region": 204, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209], "is_allski": [194, 195, 204, 207], "is_bkg": 109, "is_contigu": [206, 492], "is_convertible_to_flux_sed_typ": [126, 128], "is_energy_axi": 201, "is_energy_depend": [223, 224, 226, 228, 234, 237, 239, 240, 241, 242, 243, 253, 255, 259, 264, 265, 266, 269, 275, 278, 279, 281, 450, 495], "is_fixed_rad_max": 168, "is_flat": [194, 195, 200, 204, 207], "is_hpx": [195, 204, 207], "is_imag": [194, 195, 204, 207], "is_mask": [196, 197, 199, 205, 208, 209], "is_norm": [413, 439, 452], "is_norm_spectral_model": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 437, 495], "is_nul": 492, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 437], "is_region": [195, 204, 207], "is_regular": [195, 204, 207], "is_ul": [67, 126, 128, 437, 452, 462, 486, 488, 510], "is_unidimension": 200, "isf": [489, 586], "isinst": [385, 396, 399, 408, 412, 413, 414], "ism": [52, 53, 560], "isn": [388, 392, 399, 401, 404, 416, 471, 584], "isnan": [492, 493], "iso": [88, 128, 206, 211, 451, 480, 494, 500, 536, 578], "iso_p8r2_source_v6_v06": [494, 500], "isol": [399, 417, 493], "isot": [366, 588], "isotherm": [22, 512], "isotrop": [47, 101, 224, 285, 494], "isotropic_fil": 101, "issu": [19, 20, 26, 87, 91, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 385, 386, 388, 393, 394, 396, 397, 399, 402, 405, 410, 411, 412, 413, 415, 418, 419, 420, 424, 427, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 471, 493, 499, 520, 524, 584, 585], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 203, 251, 405, 412], "iter": [87, 91, 92, 100, 126, 128, 136, 196, 197, 199, 200, 201, 203, 205, 206, 208, 209, 251, 388, 391, 393, 401, 438, 465, 480], "iter_by_axi": [126, 128, 196, 197, 199, 205, 208, 209], "iter_by_axis_data": 205, "iter_by_coord": 429, "iter_by_edg": [201, 206], "iter_by_imag": [196, 197, 199, 205, 208, 209, 446], "iter_by_image_data": [196, 197, 199, 205, 208, 209, 492], "iter_by_image_index": [196, 197, 199, 205, 208, 209], "iter_by_pix": 429, "iter_with_reshap": 200, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 489, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 103, 106, 107, 111, 112, 126, 128, 172, 173, 182, 195, 201, 203, 221, 222, 225, 228, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 290, 385, 388, 391, 394, 395, 397, 400, 401, 402, 404, 409, 411, 412, 416, 419, 437, 451, 452, 453, 458, 462, 463, 466, 473, 474, 478, 479, 484, 486, 488, 489, 491, 492, 493, 494, 495, 497, 508, 510, 513, 529, 531, 533, 535, 536, 537, 583, 586], "itself": [87, 91, 384, 385, 400, 411, 458, 478, 479, 481, 497, 584], "iudri2df": 491, "ivoa": [385, 452], "ixhu_oxk": 483, "j": [19, 20, 23, 103, 107, 111, 131, 138, 147, 293, 386, 388, 520], "j0001": [486, 510], "j0002": [486, 510], "j0003": [486, 510], "j0006": 486, "j0007": 510, "j0008": [486, 510], "j0009": 510, "j0010": 486, "j0013": 486, "j0021": 486, "j0022": 486, "j0025": 486, "j0031": 486, "j0349": 486, "j0521": 461, "j0534": [486, 510], "j0633": 510, "j0835": [459, 510], "j0851": 486, "j1036": 486, "j1104": [486, 510], "j1506": 459, "j1507": 459, "j1513": 486, "j1514": 486, "j1555": 510, "j1653": 486, "j1713": 458, "j1731": 494, "j1732": 494, "j1741": 494, "j1744": 494, "j1745": 494, "j1746": 494, "j1747": 494, "j1748": 494, "j1753": 494, "j1800": 494, "j1801": 494, "j1802": 494, "j1809": 494, "j1811": 494, "j1824": 486, "j1825": 472, "j1843": 67, "j1844": 67, "j2028": 486, "j2158": 486, "j2347": 510, "j2350": 510, "j2351": 510, "j2352": 510, "j2356": 510, "j2357": [486, 510], "j2358": [486, 510], "j2359": [486, 510], "j_": 23, "jackson": [87, 91], "jacob": [427, 446], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 433], "jalel": [434, 437], "jan": [390, 391, 394, 397, 402, 406, 424], "jana": 452, "januari": [392, 394, 410], "jargon": 418, "jason": 427, "javascript": [87, 91], "javv5abz": 464, "jax": 403, "jbernet": 452, "jean": [445, 446], "jeffrei": 497, "jeltema": 512, "jep": 390, "jet": 376, "jfact": 485, "jfact_decai": 485, "jfact_map": 485, "jfactor": [19, 20, 451], "jfactori": 485, "jj": 212, "jk": [103, 107, 111, 520], "jkl": 520, "jl": 520, "jo": [87, 91], "job": [93, 129, 130, 133, 136, 172, 439], "johann": [430, 437, 441, 442, 443, 444, 445, 446], "johannesbuchn": 414, "john": [87, 91, 414], "join": [387, 396, 397, 499], "joint": [100, 111, 112, 123, 134, 137, 138, 147, 149, 214, 290, 393, 394, 397, 401, 405, 407, 414, 418, 427, 428, 430, 431, 446, 447, 453, 455, 458, 459, 461, 462, 463, 465, 472, 476, 480, 487, 488, 489, 491, 495, 496, 497, 500, 504, 508, 522, 524, 581, 582, 583], "joint_fit": 481, "joint_result": 481, "jointli": [496, 501], "jonathan": [441, 442], "jose": [437, 439, 445], "joshi": 437, "jos\u00e9": [393, 401, 405, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 445, 446, 447], "journal": 411, "jouvin": [427, 429, 430, 431, 434, 442, 443, 444, 445, 446], "jqjyq920": 483, "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 105, 127, 415, 439, 441, 445], "json_data": [16, 84, 90, 105, 127], "json_schema": [16, 84, 90, 105, 127], "jsonschema": [402, 430, 431], "jsviewer": [87, 91, 471], "juan": 452, "jul": [391, 400, 402, 404, 424], "juli": [391, 394, 399, 401, 402, 404, 408, 410, 412, 479, 483], "julia": 452, "julian": 588, "julien": [443, 444, 445], "jun": [399, 401, 402, 407, 408], "june": [399, 403, 424], "junior": [66, 405], "jupyt": [384, 392, 401, 402, 405, 417, 421, 423, 428, 443, 444, 445, 447, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584], "jupyterlab": [384, 402, 405, 422, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "jupytext": 405, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 156, 360, 385, 386, 387, 388, 390, 393, 395, 399, 401, 402, 403, 405, 416, 417, 419, 445, 447, 457, 461, 462, 464, 469, 471, 473, 478, 479, 481, 484, 487, 492, 500, 501, 508, 510, 521, 537, 584], "juypter": 401, "jyear": [87, 91], "k": [19, 33, 52, 53, 103, 107, 111, 203, 225, 278, 336, 459, 461, 463, 486, 489, 492, 494, 500, 520, 537, 541, 553, 560, 571], "kai": [445, 446], "kaori": 429, "kaspi": [31, 39, 45], "katrin": [413, 450, 451, 452], "kb": 393, "keep": [13, 87, 91, 100, 126, 164, 196, 197, 199, 205, 208, 209, 214, 385, 386, 388, 390, 391, 392, 393, 399, 402, 403, 404, 405, 408, 409, 414, 435, 445, 466, 467, 472, 477, 483, 489, 494, 500], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [104, 110], "keepdim": [164, 166, 169, 196, 197, 199, 205, 208, 209, 426, 431, 491], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 103, 105, 106, 107, 111, 112, 121, 127, 136, 203, 214, 348, 353, 354, 371, 393, 395, 402, 407, 409, 412, 414, 423, 446, 457, 487, 495, 550], "kept": [89, 103, 106, 107, 111, 112, 126, 128, 129, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 385, 391, 405, 409, 457, 483, 522], "kernel": [103, 106, 107, 111, 112, 121, 125, 131, 132, 136, 153, 154, 155, 164, 166, 169, 171, 176, 181, 183, 186, 197, 207, 209, 391, 412, 418, 420, 432, 433, 438, 443, 447, 448, 453, 465, 467, 481, 491, 492, 493, 500, 510, 520, 524, 528], "kernel_width": [136, 465, 471], "kernelbackgroundestim": 433, "kernelbackgroundmapestim": 406, "kev": [109, 136, 201, 465, 487, 488, 537], "keyboard": 422, "keyerror": [91, 203, 409], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 102, 103, 105, 106, 107, 111, 112, 127, 128, 130, 131, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 291, 293, 324, 332, 333, 354, 366, 368, 369, 372, 373, 374, 378, 379, 380, 381, 382, 412, 433, 437, 440, 448, 449, 463, 473, 474, 487, 492, 501, 522, 537, 548], "kg": 52, "khelifi": [414, 429, 431, 434, 437, 440, 444, 445, 446, 448, 449], "kh\u00e9lifi": [411, 448, 450, 451, 452, 453], "kill": 415, "kind": [87, 91, 360, 396, 397, 398, 403, 404, 408, 411, 446], "kinet": 44, "king": [165, 430, 441, 442, 443, 444, 445, 446, 490, 530], "kirsti": [450, 451, 452, 453], "kkae91iu": 483, "kl": 520, "klepser": 441, "km": [32, 37], "km2": 499, "km2a": [57, 70], "know": [386, 388, 390, 394, 399, 401, 402, 409, 414, 416, 428, 445, 446, 447, 471, 474, 485, 490, 491, 492, 499, 501, 502, 584], "knowledg": [413, 414, 422, 459, 464, 470, 472, 475, 477, 478, 489, 491, 492, 494, 497], "known": [292, 294, 312, 398, 424, 461, 465, 467, 472, 478, 491, 492, 493, 510, 524, 534, 584, 585, 586], "koenig": [293, 453], "konig": [293, 453], "konrad": 452, "kornecki": 452, "kovalev": 484, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 252, 312, 315, 485, 486, 518, 560], "kurt": 452, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 102, 103, 106, 107, 111, 112, 128, 129, 130, 131, 133, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 291, 324, 335, 360, 372, 373, 374, 377, 379, 380, 381, 382, 385, 396, 412, 413, 450, 459, 463, 473, 481, 491, 502, 572], "kwargs_ax": [378, 467, 469], "kwargs_background": [111, 112], "kwargs_colorbar": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 373], "kwargs_count": [111, 112], "kwargs_excess": [111, 112], "kwargs_extens": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 472], "kwargs_fit": [111, 112, 378], "kwargs_fp": 102, "kwargs_hist": [378, 467, 469], "kwargs_list": 203, "kwargs_model": 102, "kwargs_npred_sign": [111, 112], "kwargs_point": [204, 227, 251, 463], "kwargs_posit": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 472], "kwargs_residu": [102, 111, 112], "kwargs_saf": [111, 112], "kwargs_spati": [103, 106, 107, 111, 112, 469, 509], "kwargs_spectr": [103, 106, 107, 111, 112, 469, 509], "kwargs_spectrum": [102, 111, 112], "l": [23, 26, 51, 54, 102, 103, 111, 112, 176, 382, 386, 399, 408, 411, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 477, 480, 481, 486, 487, 489, 491, 492, 493, 495, 496, 497, 499, 500, 508, 509, 510, 520, 524, 537, 560, 569, 583, 585, 586, 587], "l06": [48, 514], "l_": [52, 53], "l_0": [51, 517, 541, 542], "l_snr": 44, "la": 443, "lab": [411, 418, 420, 422, 445], "label": [92, 198, 201, 206, 227, 251, 310, 373, 374, 379, 382, 385, 386, 389, 394, 398, 399, 415, 416, 437, 439, 448, 449, 451, 453, 456, 457, 459, 461, 463, 467, 469, 470, 474, 475, 478, 479, 481, 484, 485, 489, 492, 495, 496, 497, 510, 517, 518, 526, 550, 556, 559, 560, 564, 569], "label_axi": [198, 492], "label_axis2": 492, "labelcolor": 456, "labelmapaxi": [437, 451, 453], "lack": [203, 400, 481], "lafferti": [425, 583], "lafferty1994": 583, "lai": 493, "lambda": [67, 232, 233, 293, 378, 486, 499, 554, 586], "lambda_": [232, 233, 290, 459, 461, 469, 554, 556], "lancast": [138, 147], "land": 416, "landscap": 414, "langl": 19, "languag": [392, 404], "laplac": [240, 543], "laptop": 414, "lar": [401, 426, 427, 428, 444, 445, 446, 449, 451, 453], "larg": [67, 87, 91, 196, 197, 199, 205, 208, 209, 275, 277, 279, 385, 388, 390, 391, 399, 405, 406, 414, 427, 437, 446, 447, 452, 456, 461, 467, 479, 486, 493, 499, 500, 501, 510, 520, 522, 524, 525, 531, 537, 543, 581, 584, 589], "large_scale_compon": [67, 486], "larger": [27, 135, 154, 155, 161, 166, 169, 290, 299, 386, 393, 404, 451, 453, 456, 458, 461, 487, 491, 492, 493, 497, 521, 537, 543, 585, 586], "largest": [103, 106, 107, 111, 112, 209, 385], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 196, 197, 198, 199, 201, 205, 208, 209, 251, 342, 382, 392, 395, 397, 407, 411, 415, 416, 418, 420, 426, 427, 484, 531, 533], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 101, 103, 106, 107, 111, 113, 118, 125, 129, 130, 132, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 285, 290, 314, 315, 318, 340, 385, 386, 393, 394, 395, 396, 397, 398, 404, 405, 408, 416, 418, 423, 426, 431, 444, 445, 446, 453, 455, 459, 462, 465, 466, 467, 469, 471, 475, 478, 479, 483, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 503, 504, 508, 509, 510, 512, 519, 521, 522, 524, 529, 536, 537, 541, 542, 543, 544, 545, 546, 547, 581, 588], "lat_0": [228, 237, 240, 255, 264, 265, 279, 400, 408, 465, 466, 469, 470, 472, 473, 474, 477, 478, 486, 487, 494, 495, 500, 508, 509, 541, 542, 543, 545, 546, 547, 548], "lat_0_err": 472, "lat_pnt": [314, 318], "lat_rang": 340, "lat_t": [314, 318], "later": [385, 390, 391, 392, 396, 397, 398, 401, 402, 403, 404, 405, 406, 414, 425, 427, 437, 438, 440, 441, 447, 457, 461, 463, 469, 470, 487, 491, 492, 495, 500, 510, 520], "latest": [129, 189, 280, 312, 388, 392, 405, 410, 411, 415, 419, 448, 456, 464, 466, 469, 470, 471, 477, 480, 489, 521, 524, 537], "latex": [385, 386], "latex_inlin": 451, "latitud": [94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 340, 372, 430, 475, 492, 495, 529, 536, 544], "latpol": 492, "latter": [183, 214, 396, 398, 400, 406, 409, 412, 414, 431, 463, 464, 473, 474, 477, 493, 494, 531, 533, 585], "launch": [418, 420, 445, 584], "laura": [434, 437, 439, 440, 446, 448, 450, 451, 452, 453], "law": [27, 102, 121, 126, 128, 130, 135, 143, 164, 166, 169, 221, 231, 232, 233, 256, 257, 258, 259, 268, 271, 272, 273, 283, 293, 339, 398, 425, 431, 445, 455, 457, 464, 466, 469, 473, 475, 477, 479, 480, 481, 483, 494, 495, 497, 524, 538, 550, 570, 576], "law2": 563, "layer": [87, 91, 397, 404], "layout": [437, 469, 477, 492, 499, 508, 509], "lazi": [88, 100, 103, 106, 107, 111, 112, 277, 321, 445], "lazili": 103, "lazyfitsdata": 433, "lc": [86, 133, 206, 398, 400], "lc_1d": [126, 128, 148, 478, 479, 480, 484], "lc_3d": 478, "lc_estim": 400, "lc_maker_1d": [478, 479, 480], "lc_maker_3d": 478, "lc_new": 479, "lcmk": 469, "le": 90, "lea": 434, "lead": [125, 385, 394, 399, 404, 406, 408, 410, 411, 414, 430, 453, 497, 499, 501, 512, 584], "leak": [463, 533], "leakag": [293, 453, 478], "learn": [151, 156, 385, 402, 405, 415, 418, 420, 422, 446, 459, 461, 465, 471, 472, 473, 475, 484, 486, 487, 489, 492, 495, 497, 499, 504, 510, 584], "least": [43, 44, 137, 146, 385, 388, 390, 394, 473, 484, 536], "leav": [390, 397, 399, 400, 402, 405, 417, 494], "lefaucheur": [443, 444, 445], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 107, 111, 126, 128, 133, 136, 154, 156, 196, 197, 199, 205, 208, 209, 233, 238, 258, 271, 295, 301, 385, 393, 395, 399, 401, 404, 408, 422, 465, 471, 478, 480, 484, 486, 494, 522, 531, 534, 542, 543, 550, 551, 554, 555, 557, 558, 560, 562, 565, 566, 567, 568, 572, 573, 574, 576, 585, 586, 587], "legaci": [385, 445, 446], "legacy_altaz": 85, "legal": [87, 91], "legend": [382, 456, 457, 459, 461, 463, 469, 470, 474, 475, 478, 479, 481, 484, 485, 489, 495, 496, 497, 500, 517, 518, 526, 550, 556, 559, 560, 564, 569], "legend_kwarg": 382, "lemi\u00e8r": 445, "len": [83, 290, 382, 465, 472, 473, 474, 479, 481, 483, 484, 486, 491, 494, 510, 524], "lenain": [445, 446], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 172, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 293, 324, 378, 411, 414, 459, 461, 464, 471, 475, 483, 486, 489, 492, 500, 510, 541], "lengthi": 492, "lennarz": [428, 442, 444], "leq": [541, 546, 547], "less": [77, 195, 197, 201, 242, 278, 301, 385, 390, 392, 403, 414, 416, 445, 489, 495, 496, 497], "let": [67, 284, 385, 388, 390, 394, 399, 402, 418, 421, 445, 446, 447, 459, 462, 463, 464, 465, 469, 470, 471, 472, 473, 475, 480, 481, 486, 487, 489, 492, 493, 495, 497, 500, 508, 510, 584], "level": [6, 11, 15, 16, 83, 84, 90, 105, 125, 127, 214, 292, 294, 385, 386, 388, 389, 390, 396, 398, 400, 404, 405, 406, 409, 412, 418, 422, 429, 430, 431, 432, 433, 437, 445, 452, 455, 458, 459, 461, 462, 465, 466, 467, 469, 471, 473, 477, 478, 479, 480, 481, 484, 485, 488, 489, 494, 496, 499, 500, 501, 502, 504, 506, 510, 511, 520, 521, 522, 529, 531, 532, 582, 583, 584, 588], "levelnam": 385, "levmar": [214, 489], "lf": 416, "lgpl": 385, "lgtm": 416, "lhaaso": [55, 57], "li": [121, 125, 179, 391, 414, 456, 465, 467, 473, 488, 583, 586], "lib": [349, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 556, 572], "librari": [87, 91, 385, 390, 391, 395, 405, 411, 423, 458, 461, 473, 495, 499, 509, 512, 521, 524, 582, 584], "licenc": 411, "licens": [411, 422], "lie": [194, 195, 201, 204, 207, 488], "life": [392, 489], "lifetim": [20, 452], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 133, 140, 229, 242, 300, 389, 396, 398, 401, 405, 409, 418, 431, 433, 434, 441, 444, 446, 451, 452, 455, 457, 482, 483, 484, 504, 522, 523, 533, 538, 580, 582], "light_curv": [16, 242, 405, 446, 455, 462, 466, 467, 469, 478, 482, 508, 579], "light_curve_flar": [455, 479, 482], "light_curve_model": 579, "light_curve_simul": [455, 480, 482], "lightcrv_pksb1222": [242, 579], "lightcurv": [71, 73, 74, 75, 77, 78, 122, 128, 133, 139, 140, 141, 142, 148, 205, 206, 242, 297, 298, 300, 394, 396, 401, 404, 406, 409, 418, 429, 431, 432, 433, 437, 443, 444, 445, 446, 448, 449, 451, 452, 455, 478, 479, 482, 488, 504, 519, 524, 579], "lightcurve1": 139, "lightcurve2": 139, "lightcurve_at_energi": 409, "lightcurveconfig": 16, "lightcurveestim": [122, 400, 401, 406, 409, 418, 429, 431, 433, 434, 437, 445, 446, 451, 478, 479, 480, 483, 524], "lightcurvetablemodel": [396, 398], "lightcurvetempl": 396, "lightcurvetemplatemodel": [450, 451], "lightcurvetemplatetemporalmodel": [274, 408, 448, 451, 453, 474, 495, 579], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 144, 145, 160, 168, 196, 197, 199, 203, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 312, 332, 342, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 417, 418, 422, 428, 437, 439, 440, 444, 445, 447, 448, 450, 451, 456, 457, 459, 461, 462, 463, 464, 467, 474, 475, 481, 484, 485, 487, 489, 490, 492, 496, 497, 499, 500, 504, 508, 510, 512, 513, 520, 524, 529, 537, 547, 582, 584, 585, 586, 587], "likelhood": 397, "likelihood": [100, 102, 103, 106, 112, 125, 126, 127, 128, 130, 136, 137, 146, 246, 291, 308, 309, 385, 391, 394, 397, 398, 401, 403, 405, 406, 407, 409, 414, 418, 425, 427, 428, 431, 438, 441, 444, 446, 447, 452, 453, 459, 461, 462, 463, 465, 471, 475, 478, 479, 481, 487, 488, 489, 491, 497, 500, 508, 509, 512, 520, 522, 524, 560, 582, 583, 585, 586], "likelihood_profil": [396, 427], "likelihood_typ": 432, "likewis": [197, 209], "lima": 121, "lima1983": [522, 583, 586], "lima_map": 467, "lima_maps2": 467, "limamapestim": [406, 433], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 102, 114, 115, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 146, 153, 168, 171, 201, 218, 220, 256, 291, 292, 294, 332, 333, 372, 391, 393, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 413, 414, 427, 433, 437, 444, 445, 446, 447, 452, 456, 461, 465, 469, 472, 475, 478, 487, 488, 489, 492, 493, 496, 500, 508, 520, 522, 524, 533, 542, 560, 569, 582, 583, 587], "lin": [19, 20, 201, 205, 206, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 291, 324, 325, 326, 413, 474, 490, 492, 502, 537, 560], "line": [6, 13, 46, 82, 83, 87, 91, 102, 103, 106, 107, 111, 112, 157, 163, 165, 167, 204, 205, 227, 251, 344, 345, 382, 384, 386, 388, 391, 394, 396, 399, 401, 402, 409, 416, 417, 418, 420, 422, 431, 442, 445, 453, 469, 489, 491, 495, 512, 524, 537, 582], "line2d": [204, 227, 251], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 150, 151, 152, 153, 156, 158, 160, 163, 168, 196, 197, 199, 205, 206, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 324, 385, 448, 455, 469, 474, 475, 477, 492, 495, 500, 508, 509, 538, 580], "linear_model": 575, "linearli": [206, 209, 492, 520], "linearsegmentedcolormap": [375, 376], "linearstretch": [375, 376], "lineartemporalmodel": [274, 495, 575], "lineno": 385, "liner": [278, 399], "linestyl": [456, 481, 483, 485, 497, 518, 537, 541, 542], "linewidth": [382, 386, 483], "linhoff": [449, 450, 451, 452, 453], "link": [67, 69, 80, 102, 227, 229, 251, 290, 388, 390, 393, 394, 397, 405, 411, 415, 416, 422, 423, 434, 437, 439, 443, 444, 445, 457, 458, 461, 462, 463, 464, 466, 469, 470, 477, 479, 480, 486, 489, 495, 497, 499, 509, 510, 524, 569, 581], "linkag": 310, "linkage_kwarg": 310, "linkcheck": 386, "linspac": [83, 155, 196, 197, 199, 205, 208, 209, 214, 473, 475, 481, 489, 490, 492, 497, 536, 541], "lint": [16, 84, 90, 105, 127], "linux": [392, 402, 416, 419, 446, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 584], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 121, 123, 125, 126, 128, 129, 130, 133, 134, 136, 137, 138, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 182, 183, 184, 185, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 333, 343, 344, 345, 347, 374, 378, 379, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 461, 464, 465, 470, 474, 475, 477, 478, 480, 483, 484, 487, 488, 489, 490, 491, 496, 497, 499, 500, 501, 502, 504, 509, 520, 524, 527, 536, 537, 581, 582, 583, 584], "list_format": [87, 91], "listen": 524, "listenv": 388, "liter": [16, 84, 90, 105, 127, 330, 385], "literatur": [414, 512, 514, 583], "littl": [87, 91, 404, 406, 412, 492, 500, 529, 533, 584], "live": [83, 86, 88, 385, 390, 393, 395, 406, 414, 447, 450, 488], "live_point": 414, "livetim": [67, 88, 89, 106, 108, 112, 166, 188, 190, 191, 391, 456, 458, 461, 462, 464, 471, 473, 474, 477, 480, 486, 487, 490, 492, 500, 501, 510, 520, 524], "livetime_fract": 89, "ljouvin": 391, "ll": [126, 128, 136, 388, 390, 402, 419, 456, 457, 458, 461, 463, 466, 467, 471, 478, 479, 480, 481, 483, 484, 584, 586], "llvm": 422, "ln": [53, 489, 567], "lo": [23, 414, 444], "lo_bnd": 201, "lo_threshold": 153, "load": [66, 67, 83, 86, 87, 91, 100, 102, 103, 106, 107, 111, 130, 132, 170, 176, 194, 195, 196, 197, 207, 320, 385, 440, 443, 445, 451, 462, 464, 466, 467, 473, 474, 477, 480, 481, 484, 493, 499, 500, 502, 508, 510, 521], "load_cta_irf": [447, 451], "load_irf_dict_from_fil": [166, 451, 456, 464, 473, 474, 477, 480, 499], "loc": [87, 91, 209, 378, 481, 517, 518, 526, 550, 556, 559, 560, 564], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 144, 145, 181, 194, 195, 204, 205, 207, 385, 386, 388, 393, 399, 414, 415, 416, 419, 423, 427, 437, 462, 465, 466, 467, 472, 473, 485, 491, 504, 508, 524], "local_dataset": 491, "local_dens": [17, 18, 21, 22, 24, 25, 27, 485], "local_to_glob": 195, "localfold": 11, "localis": 320, "localn": [16, 84, 90, 105, 127], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 140, 154, 155, 161, 166, 169, 207, 341, 393, 399, 403, 406, 411, 412, 418, 420, 451, 453, 456, 464, 473, 474, 477, 480, 486, 501, 502, 521, 537, 584], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 103, 105, 126, 127, 128, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 201, 205, 209, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 286, 295, 301, 323, 324, 326, 371, 380, 397, 401, 414, 424, 441, 448, 452, 455, 457, 462, 464, 465, 466, 467, 469, 470, 471, 474, 477, 478, 479, 480, 483, 485, 487, 489, 490, 491, 492, 495, 497, 500, 501, 506, 508, 509, 524, 526, 536, 537, 538, 561, 569, 570, 576, 583, 584, 585, 586, 587], "log10": 481, "log_": [244, 245, 495, 558], "log_2": 298, "log_en": 495, "log_level": 11, "log_parabola": 459, "log_parabola_norm": 408, "logarithm": [34, 492, 497, 558], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 444, "loggaussian": 396, "logger": [351, 354, 385, 471], "logic": [16, 84, 86, 90, 105, 127, 182, 409, 453, 492, 493], "logical_and": [196, 197, 199, 205, 208, 209], "logical_or": [196, 197, 199, 205, 208, 209, 491], "loglog": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 323, 456, 485, 516, 517, 518], "lognorm": 485, "logo": 416, "logparabola": [396, 559], "logparabolanormspectralmodel": [245, 262, 408, 434, 495, 559], "logparabolaspectralmodel": [214, 244, 262, 408, 457, 459, 461, 463, 470, 486, 489, 495, 552, 558], "logscal": 431, "logspac": [155, 196, 197, 199, 205, 208, 209, 464, 477, 480, 481, 485, 492, 516, 517, 518, 537], "logspir": [33, 38], "loguniform": [246, 414], "logz": 414, "logz_b": 414, "logz_singl": 414, "logzerr": 414, "logzerr_b": 414, "logzerr_singl": 414, "logzerr_tail": 414, "lomb": [400, 445], "lon": [16, 47, 91, 94, 96, 103, 106, 107, 111, 113, 118, 125, 130, 132, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 314, 315, 318, 340, 385, 386, 396, 399, 404, 408, 430, 453, 462, 465, 466, 467, 469, 471, 475, 478, 479, 483, 486, 487, 488, 490, 491, 492, 495, 496, 500, 508, 509, 510, 522, 536, 537, 541, 542, 543, 544, 545, 546, 547], "lon_0": [228, 237, 240, 255, 264, 265, 279, 400, 408, 465, 466, 469, 470, 472, 473, 474, 477, 478, 486, 487, 494, 495, 500, 508, 509, 541, 542, 543, 545, 546, 547, 548], "lon_0_err": 472, "lon_pnt": [314, 318], "lon_rang": 340, "lon_t": [314, 318], "long": [385, 388, 390, 392, 399, 401, 404, 405, 407, 410, 412, 414, 439, 448, 457, 486, 504, 536], "longer": [299, 385, 391, 392, 399, 400, 402, 405, 419, 437, 440, 445, 446, 448, 451, 458, 464, 478], "longest": 200, "longitud": [68, 94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 340, 372, 399, 475, 492, 495, 529, 536, 544], "lonpol": 492, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 103, 106, 107, 111, 112, 128, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 342, 385, 387, 388, 390, 397, 399, 400, 402, 404, 405, 408, 414, 422, 445, 458, 461, 462, 464, 465, 466, 467, 469, 471, 473, 475, 477, 478, 480, 481, 487, 490, 492, 495, 499, 500, 502, 504, 508, 510, 512, 521, 524, 584], "look_up": 443, "lookup": 202, "loop": [87, 91, 333, 398, 451, 461, 486, 492, 501, 508, 524], "lopez": [229, 445, 451, 550], "lopez21": [230, 457, 550], "lopez_2021": 230, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 385, "loss": 52, "lost": [100, 103, 106, 107, 111, 112, 524, 537], "lot": [82, 385, 388, 390, 391, 392, 393, 396, 398, 399, 401, 405, 416, 426, 428, 429, 437, 445, 446, 462, 471, 500, 508, 509, 534], "low": [87, 91, 153, 201, 335, 385, 386, 389, 394, 415, 443, 445, 455, 458, 461, 465, 471, 473, 487, 493, 494, 499, 500, 504, 508, 511, 531, 585], "low_zenith": 496, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 126, 128, 153, 182, 201, 203, 206, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 385, 399, 404, 405, 412, 475, 491, 509], "lower_error": 128, "lowest": [404, 484], "lp": [244, 245, 408, 459, 486, 495, 552], "lp_norm": 559, "lss": 461, "lst": [392, 499], "lsw": 415, "lt": [385, 411, 439, 448, 546, 547], "ltcube": [195, 196, 197, 199, 208, 209, 492], "lts_author": 411, "luca": [427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 448, 451], "lui": 447, "luigi": 442, "luminos": [41, 46, 51, 52, 53, 54, 252], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 518], "lvtm": 480, "lw": [461, 463, 465, 471, 481, 489, 537, 541, 543], "lwdhgncc": 495, "ly": [437, 494], "lyne": 37, "lyo1qzjq": 491, "l\u00e9a": [427, 429, 430, 431, 434, 442, 443, 444, 445, 446], "l\u00f3pez": 445, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 113, 118, 133, 194, 195, 196, 197, 199, 205, 207, 208, 209, 293, 309, 385, 386, 388, 399, 415, 417, 418, 419, 420, 474, 485, 489, 490, 492, 495, 506, 529, 533, 535, 536, 537, 548, 584, 587], "m2": [103, 156, 176, 457, 462, 464, 466, 467, 469, 471, 477, 487, 490, 491, 499, 508, 509], "m_": [20, 50, 52, 53], "m_3fhl_gc": 492, "m_4d": 492, "m_allski": 492, "m_b": 585, "m_cube": 492, "m_ejecta": [52, 517], "m_gc": 492, "m_hpx": 492, "m_i": 585, "m_iem_10gev": 492, "m_iem_cutout": 492, "m_iem_gc": 492, "m_iem_interp": 492, "m_sub": 492, "m_sun": 517, "m_wc": [196, 197, 199, 205, 208, 209, 492], "ma": [87, 91, 121, 125, 456, 465, 467, 488, 583, 586], "mac": [87, 91, 385, 392, 416, 444, 584], "machin": [388, 392, 393, 398, 402, 416, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 469], "maco": [402, 446], "macport": [402, 444, 446], "made": [176, 183, 204, 207, 218, 220, 227, 251, 312, 344, 345, 385, 388, 390, 401, 404, 406, 409, 410, 411, 437, 448, 449, 453, 461, 465, 469, 470, 491, 499, 537, 548], "madrid": 395, "magenta": [382, 472, 496], "magic": [97, 418, 423, 439, 445, 448, 463, 500, 583], "magic_ecpl": 284, "magic_lp": [284, 463], "magnet": [42, 50, 51, 54, 560], "magnetic_field": [50, 51, 54], "magnitud": [324, 473], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 102, 105, 127, 128, 385, 386, 388, 393, 394, 398, 399, 401, 402, 410, 411, 416, 417, 419, 424, 425, 457, 466, 467, 473, 488, 499, 523, 524, 536, 543, 560, 581, 584, 588], "mail": [386, 388, 390, 392, 399, 401, 404, 406, 408, 411, 415, 421, 426, 427, 510, 584], "mailmap": [437, 448], "main": [91, 103, 111, 385, 388, 390, 391, 393, 397, 400, 401, 402, 405, 409, 411, 415, 416, 427, 433, 437, 440, 445, 451, 462, 472, 473, 475, 477, 483, 486, 490, 492, 493, 494, 506, 508, 509, 519, 521, 525, 584], "mainli": [385, 395, 396, 399, 406, 492], "maint": 453, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 385, 387, 402, 404, 405, 406, 410, 416, 446, 491], "mainten": [385, 392, 411, 416, 428, 450], "major": [204, 228, 237, 240, 385, 389, 390, 394, 402, 410, 439, 445, 446, 541, 542, 543], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 102, 105, 127, 171, 172, 176, 177, 178, 179, 181, 182, 183, 186, 187, 192, 193, 195, 196, 197, 200, 201, 204, 206, 207, 208, 209, 278, 342, 344, 345, 356, 384, 386, 387, 390, 391, 392, 395, 397, 399, 401, 402, 403, 404, 405, 406, 409, 411, 412, 416, 418, 420, 422, 425, 426, 428, 431, 432, 437, 439, 442, 443, 444, 445, 448, 450, 453, 457, 458, 461, 463, 464, 467, 469, 473, 477, 478, 490, 491, 492, 495, 499, 500, 506, 510, 521, 524, 584, 585], "make_background": [176, 183], "make_background_fit": 173, "make_background_scal": 173, "make_base_catalog_galact": [445, 514], "make_concentric_annulus_sky_region": 475, "make_contour": 489, "make_count": [176, 177, 178, 183], "make_counts_off": [177, 178], "make_cub": 171, "make_dataset": 172, "make_default_fov_background_model": 173, "make_edisp": [176, 183], "make_edisp_kernel": [176, 183], "make_edisp_kernel_map": 490, "make_edisp_map": 155, "make_effective_livetime_map": [453, 491], "make_exclusion_mask": 173, "make_exposur": [176, 183], "make_exposure_irf": [176, 183], "make_imag": 446, "make_lupton_rgb": 380, "make_map_background_irf": 440, "make_map_count": 391, "make_map_cutout": 391, "make_map_exposure_reco_energi": 391, "make_map_exposure_true_energi": [155, 391, 490], "make_map_fov_background": 391, "make_map_hadron_accept": 391, "make_map_ring_background": 391, "make_map_xxx": 391, "make_maps_off": 181, "make_mask_bkg_invalid": 182, "make_mask_energy_aeff_default": 182, "make_mask_energy_aeff_max": 182, "make_mask_energy_bkg_peak": 182, "make_mask_energy_edisp_bia": 182, "make_mask_offset_max": 182, "make_mean_edisp": 447, "make_mean_psf": 447, "make_meta_t": [176, 183], "make_model": 404, "make_more_random_stuff": 385, "make_observation_time_map": 491, "make_orthogonal_rectangle_sky_region": [130, 475], "make_path": [128, 470, 487, 488], "make_pixel_region": 399, "make_psf": [166, 176, 183, 447], "make_psf_map": 490, "make_quant": 356, "make_random_stuff": 385, "make_region": 399, "make_sky_coord": 399, "make_some_random_stuff": 385, "make_theta_squared_t": [437, 502], "makefil": [416, 441], "maker": [6, 155, 166, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 391, 398, 400, 411, 431, 433, 434, 439, 448, 451, 452, 455, 456, 461, 463, 464, 467, 471, 473, 474, 477, 480, 481, 483, 487, 490, 493, 498, 501, 502, 504, 534, 583], "maker_fov": 509, "maker_safe_mask": [471, 477, 509], "mamba": [388, 417, 418, 439], "manag": [87, 91, 218, 220, 227, 251, 332, 363, 384, 385, 388, 393, 401, 402, 404, 407, 411, 412, 415, 437, 442, 444, 448, 452, 492, 494, 584], "manconi": 429, "mandatori": [182, 388, 398, 411, 474, 495], "mandatory_keyword": 490, "mani": [87, 91, 324, 385, 386, 388, 390, 392, 394, 397, 399, 400, 401, 402, 405, 406, 411, 414, 416, 422, 428, 429, 434, 437, 443, 444, 445, 446, 447, 450, 451, 458, 461, 464, 472, 477, 484, 488, 492, 502, 504, 512, 520, 522, 534, 537, 581, 582, 583, 584, 588], "manifest": 395, "manipul": [87, 91, 409, 412, 439, 497, 536], "manner": [450, 451], "manpow": [390, 402], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 392, 397, 407, 415, 524, 532, 584, 585], "manuel": [438, 441, 442], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 224, 227, 228, 235, 237, 240, 242, 251, 253, 255, 264, 265, 267, 269, 275, 276, 277, 279, 280, 288, 293, 334, 372, 373, 378, 380, 382, 384, 385, 386, 388, 392, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 412, 414, 418, 422, 426, 427, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 451, 452, 453, 455, 456, 458, 461, 462, 463, 464, 468, 469, 472, 473, 474, 475, 476, 478, 479, 480, 483, 484, 486, 487, 488, 491, 495, 498, 499, 500, 501, 502, 504, 505, 508, 509, 512, 519, 520, 523, 524, 528, 530, 531, 532, 533, 534, 540, 542, 543, 544, 545, 548, 579, 582, 583], "map_": [210, 211, 373, 380], "map_4d": 492, "map_analysi": 404, "map_cent": 279, "map_coord": [83, 155, 166, 169], "map_dataset": [397, 481], "map_dataset_empti": 481, "map_dataset_mak": 481, "map_dataset_on_off": 481, "map_edisp": [113, 118], "map_in": [196, 197, 199, 205, 208, 209], "map_out": [106, 112, 154, 155, 161, 166, 169, 196, 197, 199, 205, 208, 209], "map_result": 465, "map_select": [16, 462, 466, 467, 469, 508], "map_typ": [196, 197, 199, 205, 208, 209, 492, 536], "mapax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 434, 437, 439, 492], "mapaxi": [19, 20, 26, 103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 126, 128, 130, 137, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 380, 386, 400, 409, 428, 429, 431, 434, 437, 447, 451, 453, 456, 458, 461, 463, 464, 470, 471, 473, 474, 477, 479, 480, 481, 483, 487, 490, 491, 492, 495, 500, 501, 502, 509, 528, 531, 533, 534, 536, 537], "mapcoord": [83, 155, 166, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 253, 445, 446, 492, 537, 544], "mapdataset": [98, 99, 101, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 125, 130, 133, 136, 143, 144, 145, 146, 147, 171, 172, 173, 176, 177, 181, 182, 235, 378, 381, 398, 400, 406, 407, 427, 428, 429, 430, 431, 432, 433, 434, 437, 451, 452, 453, 465, 466, 470, 471, 472, 474, 475, 477, 478, 480, 481, 488, 489, 491, 493, 494, 500, 508, 509, 522, 524, 531, 534, 583, 585, 586], "mapdataseteventsampl": [93, 110, 431, 432, 433, 440, 451, 453, 473, 474], "mapdatasetmak": [166, 174, 183, 398, 431, 434, 437, 440, 448, 471, 473, 474, 477, 481, 490, 491, 501, 508, 509, 524, 531, 534], "mapdatasetmetadata": [103, 106, 412], "mapdatasetoff": 439, "mapdatasetonoff": [98, 103, 107, 111, 112, 121, 125, 143, 171, 177, 181, 431, 432, 434, 437, 450, 451, 467, 481, 491, 520, 534, 585], "mapdatasetsampl": 398, "mapdatasetweight": 98, "mapevalu": [396, 397, 430, 431, 434, 437, 448, 449, 450, 452], "mapeventsampl": [429, 430], "mapfit": [396, 397, 427, 446, 447], "mapgeom": [391, 447, 448], "mapmak": [176, 401, 427, 431, 446], "mapmakerob": [430, 431], "mappabl": 409, "mappanelplott": [406, 589], "mapper": 320, "mappingintstrani": [16, 84, 90, 105, 127], "mappingnamespac": [16, 84, 90, 105, 127], "maps_off": 181, "mar": [402, 424, 449], "march": [392, 394, 424, 426, 447], "marcocirelli": 26, "margin": [101, 102, 106, 112, 117, 120, 195, 197, 207, 209, 227, 251, 267, 396, 493, 541, 585], "marion": [427, 446], "mark": [91, 385, 396, 415], "marker": [102, 103, 106, 107, 111, 112, 456, 458, 461, 463, 465, 471, 478, 479, 480, 484, 510], "markerfacecolor": [103, 106, 107, 111, 112], "markers": [102, 103, 106, 107, 111, 112, 497], "markov": [414, 583], "mask": [83, 87, 91, 99, 102, 103, 106, 107, 111, 112, 125, 129, 130, 132, 133, 134, 136, 154, 155, 161, 166, 169, 171, 173, 178, 179, 180, 181, 182, 184, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 218, 220, 227, 251, 267, 397, 413, 431, 433, 434, 435, 437, 440, 446, 448, 449, 450, 451, 453, 455, 456, 458, 469, 471, 491, 494, 498, 501, 504, 520, 531, 533, 536, 583], "mask_1": 496, "mask_2": 496, "mask_bright": 486, "mask_contains_region": 209, "mask_data": 493, "mask_energi": [487, 493], "mask_fit": [102, 103, 106, 107, 111, 112, 117, 120, 397, 431, 448, 463, 467, 469, 481, 487, 489, 493, 497, 520], "mask_fit_imag": [103, 106, 107, 111, 112], "mask_imag": [103, 106, 107, 111, 112], "mask_map": [195, 207, 455, 493, 498], "mask_map_catalog": 493, "mask_nearest_posit": [196, 197, 199, 205, 208, 209], "mask_off": 481, "mask_roi": 486, "mask_saf": [102, 103, 106, 107, 108, 111, 112, 182, 397, 431, 487, 491, 493, 520], "mask_safe_edisp": [103, 106, 107, 111, 112, 453], "mask_safe_imag": [103, 106, 107, 111, 112, 154, 155, 161, 166, 169], "mask_safe_psf": [103, 106, 107, 111, 112], "mask_spac": 487, "mask_valid": 102, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 398, 433, 452, 485, 512, 545], "massdm": [19, 20, 485], "master": [391, 392, 399, 415, 416, 425], "match": [87, 91, 110, 115, 194, 195, 197, 200, 201, 202, 204, 207, 209, 211, 292, 294, 385, 393, 445, 447, 452, 461, 464, 480, 488, 500, 519, 536], "match_by_nam": 202, "materi": 414, "math": [237, 384], "mathcal": [489, 520], "mathemat": [495, 497], "mathieu": [437, 440], "mathrm": [19, 20, 23, 103, 107, 111, 156, 485, 489, 520, 585, 587], "mathworld": [339, 340], "matomo": 453, "matplotlib": [19, 20, 26, 66, 67, 83, 132, 150, 153, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 212, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 363, 373, 374, 375, 378, 379, 380, 382, 384, 385, 386, 399, 402, 411, 419, 422, 429, 437, 439, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 516, 517, 518, 524, 526, 527, 528, 530, 533, 541, 543, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 588], "matric": 212, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 113, 118, 153, 154, 155, 158, 212, 213, 214, 218, 227, 251, 292, 294, 378, 402, 403, 413, 447, 448, 451, 453, 489, 490, 520, 522, 528], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 399, 405, 413, 446, 451, 452, 455, 491, 498, 500, 504, 513, 582, 584], "matthew": [392, 443, 445, 446], "matthia": [445, 446], "mattox": 465, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 103, 114, 115, 129, 131, 133, 168, 172, 176, 178, 182, 209, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 282, 340, 393, 401, 408, 413, 422, 433, 434, 435, 437, 439, 451, 453, 457, 458, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 475, 477, 478, 479, 480, 481, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 500, 501, 508, 509, 510, 512, 531, 533, 534, 541, 560, 563, 569, 586], "max_ag": [45, 514], "max_column": [87, 91], "max_energi": 484, "max_lin": [87, 91], "max_nit": [136, 453], "max_offset": 401, "max_percentil": 83, "max_radiu": [164, 166, 169, 207, 500], "max_region_numb": [179, 533], "max_width": [87, 91], "maxcal": 214, "maxclust": 310, "maxfev": 489, "maxim": [45, 82, 91, 114, 115, 136, 182, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 414, 449, 450, 451, 452, 453, 533], "maxima": [144, 218, 220], "maximilian": [437, 439, 440, 449, 450, 451, 452, 453], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 126, 128, 131, 166, 169, 171, 179, 182, 188, 191, 195, 201, 206, 207, 217, 219, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 292, 294, 339, 341, 344, 382, 388, 391, 399, 439, 459, 465, 484, 488, 491, 492, 497, 501, 509, 514, 522, 533, 560, 582, 583, 586], "maximum_likelihood": 414, "maxmimum": 282, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 393, 395, 396, 407], "mb": [194, 195, 204, 207, 393, 418, 420, 455, 460, 468, 476, 482, 498, 499, 500, 502, 503, 505, 507, 511, 539, 549, 570, 580], "mbox": [103, 107, 111], "mc": 403, "mc_id": [83, 395, 398, 439, 473, 499], "mcerp": 403, "mckee": [53, 452], "mcmc": [403, 405, 414, 427, 432, 434, 560, 583], "mcmc_sampl": [405, 429], "md": [388, 405, 411], "mdm": [26, 485], "mean": [42, 68, 87, 91, 96, 102, 103, 130, 132, 153, 154, 155, 158, 161, 166, 169, 236, 238, 242, 278, 293, 297, 311, 330, 385, 386, 388, 390, 392, 398, 399, 401, 402, 408, 413, 414, 419, 422, 434, 443, 461, 464, 465, 474, 484, 488, 489, 491, 495, 496, 497, 500, 501, 510, 542, 557, 584, 585], "meaning": 495, "meant": [391, 451, 456, 464, 466, 469, 471, 477, 480, 499], "measur": [27, 67, 102, 106, 112, 132, 137, 146, 201, 284, 292, 294, 297, 298, 299, 300, 302, 304, 305, 307, 309, 391, 399, 404, 409, 416, 425, 430, 438, 444, 446, 457, 458, 461, 463, 464, 467, 470, 472, 475, 477, 478, 479, 484, 486, 500, 509, 510, 522, 529, 531, 534, 582, 583, 586, 587], "mechan": [393, 403, 409, 412], "media": 411, "median": [83, 166, 169, 414, 422, 481, 496, 500], "median_zenith": 496, "medium": [45, 52, 385, 394], "meeseeksdev": 385, "meeseeksmachin": 385, "meet": [227, 251, 312, 391, 393, 405, 410, 416], "megabyt": [194, 195, 204, 207], "mem": [455, 460, 468, 476, 482, 498, 503, 505, 507, 511, 539, 549, 570, 580], "member": [83, 386, 390, 399, 411, 412, 445, 451, 488, 499, 502], "memo": [153, 201], "memori": [87, 88, 91, 92, 100, 103, 104, 106, 107, 110, 111, 112, 194, 195, 204, 207, 275, 277, 279, 363, 385, 395, 397, 398, 401, 407, 409, 431, 437, 452, 464, 477, 524], "memoryobserv": 88, "mender": [450, 451, 452], "mention": [59, 148, 385, 386, 388, 392, 393, 397, 399, 402, 404, 405, 410, 411, 415, 416, 490, 494, 495, 497, 512, 583], "mentor": [388, 405], "mere": 395, "merg": [67, 86, 87, 91, 198, 201, 227, 251, 352, 385, 388, 389, 390, 391, 398, 399, 400, 404, 405, 410, 411, 415, 416, 426, 427, 428, 429, 430, 431, 432, 433, 434, 442, 443, 444, 445, 446, 447], "merge_equ": 86, "mergesort": [87, 91], "mess": 386, "messag": [102, 213, 215, 216, 388, 399, 401, 408, 414, 435, 450, 458, 459, 461, 462, 463, 469, 470, 471, 480, 481, 483, 488, 489, 500, 508, 509, 524, 584], "met": [86, 366, 451, 479, 483, 583], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 103, 104, 106, 107, 109, 110, 111, 112, 126, 128, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 196, 197, 199, 205, 208, 209, 275, 276, 279, 280, 322, 366, 367, 368, 369, 395, 398, 399, 400, 409, 412, 415, 433, 434, 445, 449, 451, 452, 473, 481, 492, 496, 499, 501, 521, 522, 579], "meta_t": [100, 102, 103, 106, 107, 111, 112, 176, 183, 409, 412, 434, 458, 464, 491, 520], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 105, 108, 126, 127, 128, 150, 151, 152, 156, 157, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 367, 389, 391, 402, 452, 462, 466, 467, 469, 473, 495, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "metadata_fits_export_kei": [84, 90, 105, 127], "metadatabas": 412, "metadatabasemodel": 412, "metapackag": 402, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 300, 302, 310, 320, 324, 328, 332, 333, 334, 359, 372, 374, 384, 385, 388, 391, 394, 395, 396, 399, 400, 401, 403, 404, 405, 407, 409, 411, 412, 414, 418, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 519, 521, 523, 524, 528, 531, 533, 534, 535, 537, 558, 572, 581, 582, 583, 584, 586], "method_kwarg": [332, 333], "methoda": 429, "metric": 310, "metropoli": 414, "mev": [74, 83, 150, 151, 152, 156, 273, 456, 457, 464, 466, 469, 471, 477, 480, 481, 486, 490, 492, 495, 499, 500, 510, 569], "meval": 543, "mexico": 501, "meyer": [248, 284, 470, 583], "meyer2010": 583, "mgtime": 400, "michael": [450, 452], "michel": 453, "mid": [114, 440, 451, 499], "middl": [374, 401], "midli": 461, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 201, 214, 385, 390, 396, 397, 399, 402, 404, 409, 411, 412, 414, 415, 418, 420, 427, 461, 479, 481, 487, 491, 493, 500, 501, 504, 510, 512, 520, 524, 531, 537, 584, 586], "migra": [103, 106, 107, 111, 112, 155, 158, 163, 187, 401, 473, 474, 490, 529], "migra_axi": [103, 106, 107, 111, 112, 116, 155, 157, 158, 473, 474, 490, 491], "migrad": [102, 214, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 488, 489, 500, 508, 509], "migrad_opt": [214, 489], "migrat": [103, 106, 107, 111, 112, 116, 157, 158, 163, 394, 430, 437, 446, 469, 473, 491, 528, 529], "milagro": [97, 376], "mileston": [394, 415], "milki": [33, 38, 425, 514], "miller": [87, 91], "million": [385, 412], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 103, 129, 131, 133, 148, 176, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 282, 298, 340, 400, 401, 408, 413, 422, 437, 445, 453, 457, 458, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 475, 477, 478, 479, 480, 481, 483, 484, 486, 487, 489, 490, 491, 492, 495, 496, 497, 500, 508, 509, 510, 512, 533, 560, 563, 569], "min_count": 173, "min_dist": [144, 145, 179, 465, 471, 533], "min_distance_input": [179, 533], "min_energi": 484, "min_npix": [154, 155, 161, 166, 169, 207, 209], "min_npred_background": 173, "min_num_live_point": 414, "min_pix": 453, "min_signific": 400, "min_significance_lc": 400, "minaya": 447, "mind": [388, 405, 477, 489], "mini": 405, "miniconda": 417, "minim": [19, 20, 26, 114, 115, 135, 196, 197, 199, 204, 205, 208, 209, 210, 214, 221, 222, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 255, 256, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 290, 397, 400, 408, 412, 414, 439, 449, 451, 456, 473, 487, 489, 497, 509, 524, 533, 534, 537, 582, 587], "minima": [218, 220, 414, 497], "minimis": [480, 496], "minimmum": [154, 155, 161, 166, 169, 207, 209], "minimum": [19, 20, 26, 47, 83, 100, 125, 126, 128, 131, 135, 140, 144, 145, 148, 149, 171, 173, 179, 201, 204, 206, 216, 217, 219, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 282, 286, 291, 295, 298, 312, 339, 341, 344, 380, 402, 414, 439, 445, 461, 465, 473, 488, 489, 492, 497, 500, 522, 524, 533, 560, 587], "mino": [214, 489], "minor": [385, 390, 405, 408, 410, 436, 449, 542, 543], "minos_contour": [429, 447], "minu": [158, 481], "minuit": [102, 123, 214, 215, 216, 290, 396, 403, 431, 446, 447, 451, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 488, 489, 500, 508, 509], "minuit_opt": 489, "minut": [405, 416, 445, 461, 465, 467, 469, 471, 472, 473, 475, 477, 479, 480, 483, 485, 487, 489, 491, 494, 497, 508], "mireia": [448, 453], "mirror": 193, "misc": [425, 438, 442, 443, 444], "miss": [82, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 385, 388, 393, 394, 395, 396, 399, 405, 406, 409, 435, 437, 439, 445, 450, 453, 492], "mission": [83, 451, 583], "mistak": [390, 410], "mix": [384, 385, 401, 487, 492], "mixin": [87, 91], "mjd": [86, 94, 128, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 367, 369, 386, 450, 451, 465, 473, 474, 478, 479, 480, 483, 484, 492, 495, 521, 572, 573, 574, 575, 576, 577, 578, 579, 588], "mjdref": [465, 492], "mjdreff": [94, 366, 369, 474], "mjdrefi": [94, 366, 369, 474], "mkdir": [401, 461, 462, 469, 470, 473, 508, 509], "mkn": [510, 583], "mkn_421_3fhl": 510, "mncontour": 214, "mnra": [140, 307], "mnt": 448, "mock": 472, "mock_dl4": 472, "mode": [16, 84, 85, 87, 90, 91, 94, 103, 105, 106, 107, 111, 127, 131, 154, 155, 161, 166, 169, 172, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 277, 412, 414, 432, 445, 448, 452, 480], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 143, 146, 147, 150, 156, 157, 164, 165, 166, 167, 169, 173, 176, 189, 196, 197, 199, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 303, 306, 309, 381, 384, 385, 386, 389, 390, 391, 397, 398, 400, 401, 403, 405, 406, 409, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 459, 464, 465, 467, 472, 475, 477, 481, 488, 490, 491, 492, 493, 498, 500, 501, 504, 512, 513, 519, 520, 522, 524, 525, 529, 531, 532, 539, 549, 570, 580, 582, 583, 586, 587], "model1": [222, 550, 552, 556, 559, 561, 564], "model2": [222, 457, 480, 550, 552, 556, 559, 561, 564], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 462], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [495, 552], "model_best": 457, "model_best_joint": 461, "model_best_stack": 461, "model_bin_": 483, "model_bin_0": 483, "model_bkg": 487, "model_computed_field": [16, 84, 90, 105, 127], "model_config": [16, 84, 90, 105, 127, 466, 508], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 105, 127], "model_copi": [16, 84, 90, 105, 127, 469, 495], "model_dump": [16, 84, 90, 105, 127], "model_dump_json": [16, 84, 90, 105, 127], "model_extra": [16, 84, 90, 105, 127], "model_field": [16, 84, 90, 105, 127], "model_fields_set": [16, 84, 90, 105, 127], "model_fit": 480, "model_in_bin": 483, "model_joint": 469, "model_json_schema": [16, 84, 90, 105, 127], "model_manag": [455, 494, 498], "model_nam": [103, 106, 107, 111, 112, 227, 251, 381, 487], "model_parametrized_nam": [16, 84, 90, 105, 127], "model_plot": 472, "model_post_init": [16, 84, 90, 105, 127], "model_prior": 497, "model_read": 497, "model_rebuild": [16, 84, 90, 105, 127], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [464, 477, 480], "model_spectrum": 495, "model_str": 462, "model_typ": [227, 235, 249, 251, 267, 277, 290, 408, 494], "model_valid": [16, 84, 90, 105, 127], "model_validate_json": [16, 84, 90, 105, 127], "model_validate_str": [16, 84, 90, 105, 127], "model_weak": 497, "model_weak_prior": 497, "model_without_nam": 495, "modelbas": [235, 260, 267, 269, 270, 277, 281, 413], "modeldm": [19, 20], "modelevalu": 396, "modeling_2d": [455, 466, 468], "modelmetadata": 412, "modelmodel_dump": [16, 84, 90, 105, 127], "modelmodel_dump_json": [16, 84, 90, 105, 127], "models_3fhl": 494, "models_4fgl_roi": 486, "models_as_dict": [16, 84, 90, 105, 127], "models_diffus": 473, "models_fil": [16, 462, 466, 467, 469, 508], "models_fit": 477, "models_gc": 494, "models_gp": 499, "models_joint": 469, "models_or": 494, "models_read": 495, "models_select": 494, "models_stack": 469, "models_yaml": 495, "modelsmetadata": 412, "modern": [87, 91, 403], "modernis": [402, 431], "modest": [385, 542], "modif": [16, 84, 87, 90, 91, 105, 127, 385, 388, 407, 414, 415, 448], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 103, 107, 111, 128, 129, 130, 133, 136, 172, 214, 332, 357, 382, 395, 397, 401, 407, 411, 412, 414, 432, 434, 435, 437, 439, 447, 450, 451, 453, 457, 462, 474, 491, 493, 497, 501, 508, 522, 537, 588], "modul": [6, 266, 385, 386, 390, 394, 401, 406, 425, 427, 433, 445, 480, 486, 488, 491, 494, 512, 513, 514, 515, 560, 577, 588], "modular": 391, "mohanti": 102, "mohrmann": [401, 426, 427, 428, 444, 445, 446, 449, 451, 453, 583], "mohrmann2019": 583, "moment": [15, 51, 54, 86, 95, 267, 361, 391, 399, 401, 402, 405, 410, 411, 490, 492, 529], "moncar": [214, 489], "monitor": [398, 499, 524], "monkei": 385, "mono": 393, "monoton": 201, "mont": [403, 414, 529, 583], "montecarlo": [104, 110, 214], "month": [78, 388, 394, 399, 402, 404, 405, 410, 415, 419, 425, 426, 427, 428, 429, 438, 441, 442, 443, 444, 445, 446, 447], "monthli": [394, 412, 418, 447], "moor": 24, "morcuend": [447, 450, 452, 453], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 102, 103, 106, 111, 112, 137, 144, 146, 153, 182, 196, 197, 199, 208, 209, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 268, 271, 272, 273, 279, 280, 295, 301, 320, 360, 385, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 422, 431, 432, 433, 434, 437, 444, 446, 447, 451, 453, 457, 458, 461, 463, 465, 467, 469, 473, 474, 480, 483, 484, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 501, 502, 504, 510, 520, 521, 522, 524, 533, 534, 536, 537, 542, 581, 582, 584, 586, 588], "moreov": [401, 486, 491, 520], "morpholog": [123, 398, 455, 476, 504], "morphologi": [50, 52, 123, 396, 398, 408, 425, 442, 444, 458, 466, 472, 473, 474, 477, 486, 491, 538], "mosaic": 391, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 121, 128, 384, 385, 386, 388, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 416, 418, 419, 437, 444, 445, 447, 448, 451, 452, 466, 467, 475, 478, 480, 486, 488, 489, 490, 491, 492, 493, 499, 500, 504, 510, 512, 522, 523, 524, 529, 531, 537, 581, 583, 584, 587], "mostli": [56, 69, 312, 385, 386, 391, 392, 393, 394, 399, 401, 404, 405, 406, 409, 410, 412, 416, 437, 445, 486, 491, 502, 510, 586, 588], "motion": [45, 316], "motiv": [182, 390, 392, 393, 399, 402, 404, 415, 495, 524], "move": [290, 390, 391, 392, 393, 396, 399, 404, 405, 406, 409, 415, 421, 427, 428, 430, 431, 432, 433, 437, 438, 442, 443, 445, 446, 447, 448, 464], "move_axi": 451, "movement": 411, "mpatch": 475, "mpg": 67, "mpi": [67, 414], "mpl": 385, "mpl_check_plot": 385, "mpl_kwarg": [461, 471, 475], "mpl_normal": [375, 376], "mpl_plot_check": 385, "mpl_style": 445, "msg": [456, 464, 466, 469, 471, 477, 480, 499], "msh": [467, 486, 491], "msh15": 502, "mst": 499, "mu": [26, 236, 292, 294, 295, 378, 413, 457, 485, 497, 528, 529, 586], "mu_": [295, 301, 585, 586, 587], "mu_background": 584, "mu_bkg": [106, 112, 292, 305, 309, 422, 584, 586], "mu_off": 586, "mu_on": [295, 301, 586], "mu_sig": [294, 305, 309, 467, 585, 586], "mu_x": 586, "much": [197, 385, 391, 396, 399, 401, 404, 405, 414, 430, 437, 464, 469, 475, 481, 497, 500, 510, 543], "mul": [26, 457, 485, 495, 550, 556, 559, 561, 564, 569], "mulitpli": [236, 246, 260, 282], "multi": [87, 91, 195, 207, 394, 399, 413, 431, 434, 438, 445, 455, 459, 465, 476, 487, 489, 490, 495, 496, 500, 504, 522, 524, 536, 582, 583], "multicompon": 453, "multidimension": [391, 401, 413, 452, 488, 504, 529, 582], "multinorm": 403, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 102, 103, 106, 107, 110, 111, 112, 115, 117, 120, 136, 144, 170, 196, 197, 199, 205, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 385, 386, 391, 394, 397, 398, 399, 401, 403, 406, 407, 409, 413, 414, 418, 427, 434, 435, 437, 445, 451, 452, 453, 463, 469, 479, 486, 487, 488, 491, 492, 493, 495, 500, 522, 536, 560, 569, 581, 582, 583, 584, 589], "multipli": [19, 20, 26, 128, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 288, 293, 303, 306, 312, 457, 465, 467, 481, 485, 495, 550, 586], "multiprocess": [13, 93, 129, 130, 133, 136, 172, 327, 332, 333, 431, 451, 452], "multithread": 13, "multivari": 403, "multivariategaussianprior": 413, "multiwavelength": 229, "muon": 496, "muoneff": 496, "mur": [26, 485], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 102, 103, 106, 107, 108, 112, 113, 118, 128, 133, 136, 137, 144, 145, 146, 164, 172, 176, 178, 183, 190, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 299, 300, 312, 330, 380, 385, 390, 396, 397, 400, 409, 410, 411, 412, 414, 456, 461, 466, 479, 487, 488, 491, 493, 494, 495, 499, 500, 509, 510, 524, 536], "mutablemap": 203, "mutablesequ": [92, 100, 251], "mutipl": 418, "mutltipl": 388, "my": [385, 407, 408, 414, 417, 473, 474, 487, 495], "my_custom_model": 495, "my_flux_map": 409, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 407, "mybind": [416, 445], "myconfig": [11, 584], "mycustomgaussianmodel": [408, 495], "mycustomprior": 497, "mycustomspectralmodel": [262, 495], "mz6pu9nm": 488, "mzbxrh8f": 483, "n": [19, 20, 51, 82, 87, 91, 126, 128, 194, 195, 196, 197, 199, 201, 202, 205, 207, 208, 209, 217, 219, 283, 290, 385, 388, 399, 402, 414, 417, 419, 443, 477, 479, 483, 485, 486, 488, 489, 492, 494, 497, 499, 500, 501, 502, 507, 529, 536, 537, 539, 542, 543, 583, 585, 587], "n3byyeqv": 483, "n_": [103, 107, 111, 295, 301, 520, 585, 586, 587], "n_0": [238, 557], "n_bad": 500, "n_bin": 487, "n_bkg": [292, 294, 586], "n_dof": [126, 128, 522], "n_event": [196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 398], "n_event_bunch": [104, 110], "n_events_bkg": 398, "n_fit_bin": [469, 480, 487, 494], "n_free_paramet": 290, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 517, 518], "n_job": [16, 93, 129, 130, 133, 136, 172, 332, 451, 462, 465, 466, 467, 469, 475, 479, 491, 508], "n_jobs_default": [93, 129, 130, 133, 136, 172], "n_model": [72, 76], "n_ob": [464, 473, 480], "n_observ": 584, "n_off": [106, 112, 294, 304, 305, 309, 467, 585, 586], "n_off_posit": 463, "n_off_region": [184, 463], "n_on": [292, 294, 295, 301, 304, 305, 309, 422, 467, 584, 585, 586], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 413, 578], "n_scale": 121, "n_sig": [292, 294, 481, 586], "n_sig_matching_signific": [292, 294], "n_sigma": [71, 74, 75, 78, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 290, 292, 294, 456, 465, 475, 479, 486, 487, 488, 508, 510, 522], "n_sigma_sensit": [125, 126, 127, 128], "n_sigma_ul": [71, 74, 75, 78, 125, 126, 127, 128, 129, 130, 133, 134, 136, 465, 475, 478, 479, 486, 487, 488, 508, 510, 522], "n_sourc": [45, 514], "n_spatial_ax": 200, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [479, 483], "nachiketa": [443, 444], "naima": [252, 384, 402, 403, 404, 405, 408, 428, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 524, 538, 569, 570], "naimamodel": [428, 431, 433], "naimaspectralmodel": [262, 408, 437, 495, 524, 560], "nakashima": 429, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 126, 127, 128, 129, 130, 133, 134, 136, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 177, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 310, 311, 333, 364, 365, 380, 386, 388, 391, 394, 395, 397, 398, 399, 400, 403, 404, 407, 408, 409, 411, 412, 413, 414, 415, 418, 420, 427, 428, 429, 430, 431, 432, 433, 434, 437, 446, 448, 449, 451, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 512, 522, 524, 528, 531, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "name1": 489, "name2": 489, "name_err": [129, 130, 133, 134], "name_scan": [129, 130, 133, 134], "name_substr": [227, 251, 494], "name_ul": [129, 130, 133, 134], "namedtupl": 385, "nameerror": 385, "namespac": [6, 16, 84, 90, 105, 127, 385, 404, 406, 430, 433, 443, 495, 513, 588], "namibia": 502, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 103, 126, 128, 139, 176, 194, 195, 196, 197, 199, 205, 208, 209, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 385, 408, 413, 453, 457, 458, 461, 462, 463, 464, 466, 467, 469, 470, 475, 477, 478, 479, 480, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 508, 509, 510, 524, 560, 569], "nan_to_num": [100, 103, 106, 107, 111, 112, 154, 155, 161, 166, 169, 197, 205, 209, 277], "nanograv": 524, "nansum": [196, 197, 199, 208, 209], "nasa": [58, 60, 61, 62, 64, 65, 101, 153, 201, 405, 563], "nativ": [87, 91, 202, 397, 402, 437, 492], "natur": [87, 91, 385, 391, 408, 411, 495, 558], "nauroi": [309, 583], "naurois2012": 583, "navarro": 512, "navi": 457, "navig": [445, 447], "naxi": 492, "naxis1": 492, "naxis2": 492, "naxis3": 492, "naxis4": 492, "nbin": [16, 113, 118, 130, 156, 158, 164, 166, 198, 201, 206, 209, 344, 345, 401, 456, 461, 462, 463, 466, 467, 469, 470, 471, 473, 474, 475, 478, 479, 481, 483, 487, 490, 491, 492, 495, 500, 501, 502, 508, 528, 531, 533, 534, 537], "nbin_per_decad": 201, "nbstripout": 393, "ncall": 414, "nchunk": 293, "ncol": [150, 151, 196, 197, 199, 205, 208, 209, 378, 382, 458, 461, 465, 467, 469, 471, 481, 487, 489, 492, 493, 533, 550], "ncp": 484, "nd": [196, 197, 199, 205, 208, 209, 275, 276, 406, 492, 537], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 102, 121, 150, 151, 152, 153, 154, 157, 158, 160, 163, 164, 165, 166, 167, 169, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 219, 220, 227, 253, 254, 280, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 306, 307, 308, 309, 312, 323, 324, 325, 334, 339, 341, 374, 378, 379, 385, 487, 492, 510, 536, 537], "nddata": [428, 431], "nddataarrai": [429, 443, 444], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 286], "ndim": [103, 107, 111, 113, 118, 151, 153, 156, 195, 202, 207, 463, 466, 471, 475, 487, 488, 490, 491, 492, 499, 500, 510, 522, 537], "ndimag": [209, 399], "ndmap": 488, "ndmin": 312, "ne": 397, "nearest": [26, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 196, 197, 199, 201, 205, 208, 209, 324, 439, 446, 448, 492, 522, 524, 536], "nearli": [385, 437, 458], "nebula": [50, 284, 290, 431, 461, 462, 463, 467, 470, 471, 472, 478, 489, 493, 495, 497, 500, 501, 502, 508, 509, 510, 515, 537, 583], "necess": [409, 497], "necessari": [16, 84, 90, 102, 105, 127, 388, 395, 400, 411, 415, 439, 458, 461, 463, 464, 467, 473, 474, 477, 479, 480, 488, 491, 492, 494, 495, 509, 520, 521, 524], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 400, 466], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 102, 103, 105, 106, 107, 111, 112, 125, 127, 128, 154, 155, 166, 168, 169, 204, 283, 284, 312, 384, 385, 386, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 414, 416, 417, 422, 426, 427, 428, 445, 447, 452, 457, 458, 462, 464, 465, 466, 467, 471, 473, 474, 479, 480, 483, 484, 489, 490, 492, 493, 494, 495, 496, 499, 501, 508, 510, 520, 533, 535, 536, 584, 588], "need_upd": 437, "neg": [19, 20, 26, 87, 91, 126, 128, 129, 130, 133, 134, 136, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 279, 280, 292, 294, 386, 434, 452, 453, 497, 522, 586, 587], "neglect": [131, 182, 456, 491, 522, 587], "neighbor": [157, 165, 167, 439, 446], "neighbour": [324, 545], "neither": [96, 182, 402, 410], "neldermead": 214, "nep": [390, 410], "neraest": 197, "nest": [15, 195, 196, 197, 252, 290, 312, 352, 389, 451, 500, 535, 586], "nested_model": 252, "nestedsampl": 414, "net": [26, 87, 91, 461, 524], "neutrino": [52, 385], "neutron": 36, "never": [382, 384, 385, 388, 391, 395, 399, 407, 414, 501], "nevertheless": [418, 420], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 129, 133, 136, 139, 148, 150, 151, 152, 153, 156, 158, 160, 163, 168, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 227, 251, 267, 277, 302, 312, 336, 363, 370, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 438, 441, 469, 483, 484, 486, 487, 492, 494, 495, 521, 522, 524, 569, 583], "new_attribut": 385, "new_axi": 148, "new_dataset_nam": [227, 251], "new_datasets_nam": [19, 20, 26, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "new_ev": 524, "new_flux_map": 409, "new_funct": 385, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 569, "new_nam": [87, 91, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "new_ob": [88, 524], "new_observ": 92, "newaxi": 536, "newer": [402, 416, 427, 446], "newli": [431, 432, 433], "next": [87, 91, 103, 385, 386, 390, 401, 405, 406, 410, 413, 415, 443, 444, 456, 469, 472, 473, 475, 477, 486, 487, 488, 491, 492, 495, 496, 497, 500], "nfcn": 489, "nfev": [102, 214, 215, 216, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 488, 489, 500, 508, 509], "nfw": [25, 27, 512], "nfwprofil": 485, "ni": 385, "nice": [385, 390, 396, 402, 404, 412, 429, 437, 465, 469, 486, 584], "nicer": [385, 422, 510], "nieto": [434, 437, 439, 440, 448, 450, 451, 452, 453], "nieva": [448, 453], "night": [400, 479], "nightli": [418, 478], "nightwise_lc": 478, "nigro": [434, 437, 439, 445, 446, 448, 451], "niter": [126, 128, 136, 414, 465], "nmcid": 440, "nn": 501, "noah": [413, 452], "node": [19, 20, 26, 166, 169, 198, 201, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 253, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 428, 489, 490, 492, 499, 500, 544, 561], "node_typ": [158, 198, 201, 206, 473, 474, 490, 500], "noeth": [434, 435], "nois": [293, 299, 403, 583], "noisi": 499, "non": [16, 84, 87, 90, 91, 100, 103, 105, 106, 107, 111, 112, 117, 120, 126, 127, 128, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 182, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 277, 312, 375, 376, 378, 380, 391, 396, 399, 403, 405, 406, 412, 414, 427, 431, 432, 433, 437, 445, 448, 449, 451, 452, 453, 458, 483, 500, 504, 520, 524, 535, 536, 560, 583], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 290, 292, 293, 294, 309, 310, 312, 315, 320, 324, 332, 333, 334, 336, 339, 340, 341, 342, 351, 354, 360, 368, 372, 373, 374, 378, 379, 380, 381, 382, 385, 397, 399, 402, 409, 412, 413, 414, 439, 450, 451, 453, 457, 458, 459, 461, 462, 464, 465, 469, 470, 471, 473, 474, 475, 477, 479, 480, 481, 483, 485, 486, 487, 488, 491, 492, 494, 495, 497, 500, 508, 512, 520, 536, 541, 542, 543, 584], "nonposit": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "nonposx": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 437], "nonstopmod": 386, "nonzero": 39, "nooverlaperror": 450, "noqa": [19, 20, 153, 189, 200, 201, 207, 229, 382], "nor": [96, 182, 395, 406, 410, 415], "norm": [19, 20, 26, 125, 126, 128, 129, 130, 133, 136, 138, 145, 147, 173, 221, 222, 225, 226, 229, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 248, 252, 253, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 378, 396, 407, 409, 413, 431, 432, 434, 437, 452, 453, 455, 461, 465, 466, 467, 469, 470, 472, 473, 474, 475, 477, 479, 480, 481, 485, 486, 487, 488, 489, 500, 508, 509, 510, 512, 522, 524, 531, 538, 543, 549, 550, 557, 569, 570, 578, 586], "norm_0": [544, 561], "norm_1": [544, 561], "norm_2": [544, 561], "norm_3": [544, 561], "norm_4": 561, "norm_5": 561, "norm_err": [125, 126, 128, 130, 136, 145, 409, 465, 475, 479, 487, 488, 522], "norm_errn": [126, 128, 479, 486, 488, 510, 522], "norm_errp": [126, 128, 479, 486, 488, 510, 522], "norm_only_chang": 449, "norm_prior": 413, "norm_scan": [126, 409, 461, 462, 488, 522], "norm_sensit": [126, 128], "norm_ul": [126, 128, 409, 475, 479, 486, 487, 488, 510, 522], "norma": [33, 38], "normal": [42, 102, 103, 106, 107, 111, 112, 129, 130, 131, 133, 143, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 173, 196, 197, 199, 205, 206, 208, 209, 235, 253, 254, 257, 277, 279, 283, 312, 375, 376, 385, 386, 390, 391, 395, 396, 399, 403, 409, 426, 430, 439, 453, 457, 467, 473, 478, 479, 481, 491, 492, 493, 494, 495, 500, 509, 510, 536, 541, 542, 543, 546, 547, 548, 569, 585, 586], "normalis": [67, 80, 125, 126, 128, 133, 150, 151, 152, 153, 156, 158, 160, 163, 164, 168, 173, 193, 196, 197, 199, 205, 208, 209, 253, 254, 267, 383, 462, 465, 466, 467, 480, 488, 493, 494, 495, 500, 508], "normed_templ": 495, "normspectralmodel": [227, 251, 408, 434, 450, 452, 495, 531], "north": [228, 237, 240, 541], "notat": [434, 526, 528, 534, 587], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 102, 103, 104, 105, 106, 107, 110, 111, 112, 121, 125, 127, 128, 133, 136, 153, 158, 166, 168, 178, 189, 207, 211, 214, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 299, 300, 312, 333, 360, 376, 382, 384, 387, 388, 390, 393, 398, 399, 402, 405, 409, 410, 411, 413, 414, 415, 416, 419, 425, 427, 447, 449, 451, 453, 456, 457, 458, 462, 463, 465, 466, 469, 472, 474, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 520, 522, 524, 531, 536, 537, 546, 547, 558, 586, 587, 588], "notebook": [87, 91, 349, 388, 389, 394, 395, 399, 400, 401, 402, 403, 405, 415, 416, 418, 419, 420, 423, 426, 427, 428, 429, 431, 432, 433, 435, 437, 439, 443, 444, 445, 446, 447, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 523, 524, 525, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584], "noth": [336, 402, 497], "notic": [391, 489, 504], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 414, "nov": [392, 397, 402, 403, 405, 409, 424, 448], "novemb": [394, 424, 434, 435, 436, 437], "now": [16, 82, 84, 88, 90, 99, 101, 105, 126, 127, 128, 206, 252, 385, 388, 390, 391, 392, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 461, 462, 463, 464, 466, 467, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 487, 489, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 521, 522, 533, 571, 575, 576, 577, 584, 586, 587, 588], "np": [19, 20, 83, 87, 91, 103, 106, 107, 111, 112, 113, 118, 121, 125, 128, 136, 155, 196, 197, 199, 205, 208, 209, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 283, 385, 386, 396, 397, 400, 408, 409, 413, 414, 422, 448, 453, 456, 464, 465, 467, 473, 475, 477, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 516, 517, 518, 522, 524, 531, 536, 537, 541, 542, 544, 569, 577, 584], "npanel": 372, "npix": [195, 204, 207, 208, 209, 461, 471, 490, 500, 533, 537, 540, 544], "npix_max": 195, "npoint": [293, 489], "npred": [103, 106, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 136, 145, 277, 296, 308, 396, 397, 398, 407, 409, 425, 427, 434, 437, 443, 445, 453, 465, 473, 475, 479, 486, 487, 488, 497, 500, 520, 522, 586], "npred_background": [103, 106, 107, 111, 112, 126, 128, 434, 463, 464, 475, 487, 522, 586], "npred_background_min": 149, "npred_excess": [125, 126, 128, 130, 136, 138, 145, 147, 465, 467, 475, 479, 481, 488, 522], "npred_excess_err": [126, 128], "npred_excess_errn": [126, 128], "npred_excess_errp": [126, 128], "npred_excess_ref": [126, 128], "npred_excess_ul": [126, 128], "npred_min": 149, "npred_off": [106, 112, 586], "npred_sig": [103, 106, 107, 111, 112, 397], "npred_sign": [103, 106, 107, 111, 112, 381, 437, 451, 487, 586], "npred_signal_min": 149, "npred_sourc": 487, "nrow": [458, 461, 489, 550], "nside": [195, 196, 197, 448, 500, 535], "nside2resol": 197, "nside_til": [195, 197], "nsou": 465, "nstep": 400, "nu": [19, 26], "nu_e": [26, 485], "nu_mu": [26, 485], "nu_tau": [26, 485], "nuisanc": [461, 489, 583, 587], "null": [126, 128, 129, 130, 133, 134, 290, 292, 294, 453, 462, 466, 467, 469, 472, 488, 495, 508, 522, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "null_valu": [134, 290, 475], "nullabl": [87, 91], "num": 83, "numba": 402, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 101, 103, 104, 106, 107, 110, 111, 112, 114, 115, 121, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173, 176, 179, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 286, 290, 292, 293, 294, 307, 312, 330, 332, 333, 334, 335, 336, 339, 340, 341, 342, 344, 345, 372, 378, 389, 390, 391, 394, 396, 397, 398, 399, 400, 404, 406, 409, 411, 412, 414, 415, 422, 427, 437, 439, 440, 441, 446, 447, 448, 451, 452, 453, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 492, 493, 495, 496, 499, 500, 501, 502, 508, 509, 510, 514, 520, 522, 524, 531, 533, 536, 537, 583, 584, 585, 586, 587], "number_of_column": [87, 91], "number_param": 212, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 128, 201, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 312, 384, 385, 398, 403, 419, 437, 456, 464, 466, 469, 471, 477, 480, 492, 499], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 102, 113, 118, 121, 128, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 212, 214, 217, 218, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 278, 279, 292, 294, 312, 336, 341, 379, 384, 385, 386, 388, 392, 396, 398, 402, 403, 404, 411, 413, 422, 423, 430, 431, 434, 442, 443, 444, 446, 448, 449, 450, 452, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 508, 509, 510, 516, 517, 518, 522, 524, 536, 537, 541, 542, 544, 569, 577], "numpoint": [214, 489], "numpy121": 388, "nupeak_ob": 510, "nutshel": 588, "n\u00f6the": [437, 439, 440], "o": [67, 82, 87, 91, 102, 203, 385, 394, 399, 402, 406, 409, 417, 418, 420, 429, 437, 440, 443, 444, 445, 451, 456, 458, 461, 465, 471, 478, 479, 480, 483, 484, 492, 496, 497, 499, 524, 583, 584], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 166, 176, 310, 311, 397, 398, 401, 402, 407, 422, 440, 441, 450, 456, 458, 461, 464, 465, 471, 473, 477, 479, 480, 481, 483, 491, 496, 499, 500, 501, 502, 506, 509, 521, 524, 529, 531, 533, 534], "obei": 536, "obj": [16, 84, 90, 105, 127, 463, 483], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 107, 111, 112, 126, 127, 128, 131, 132, 133, 139, 140, 141, 142, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 292, 294, 312, 316, 320, 321, 324, 332, 334, 336, 342, 345, 359, 360, 361, 362, 367, 372, 378, 380, 381, 382, 391, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 409, 411, 412, 414, 418, 422, 428, 429, 431, 432, 433, 434, 437, 439, 444, 445, 446, 448, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 470, 472, 475, 477, 478, 479, 480, 483, 484, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 514, 519, 520, 521, 522, 530, 533, 535, 536, 537, 569, 581, 583, 584, 588], "obs2": 524, "obs_": 461, "obs_clust": [92, 496], "obs_col": 471, "obs_con": [16, 462, 466, 467, 469, 508], "obs_copi": 88, "obs_fil": [16, 462, 466, 467, 469, 508], "obs_filenam": 501, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 149, 214, 310, 311, 395, 397, 407, 412, 422, 458, 461, 462, 463, 464, 466, 467, 469, 470, 471, 473, 474, 478, 479, 480, 483, 489, 491, 496, 499, 501, 502, 506, 508, 509, 533], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 105, 412], "obs_list": [445, 447], "obs_list_vela": 481, "obs_mod": 95, "obs_model": 457, "obs_muoneff": 496, "obs_po": [41, 315], "obs_tabl": [82, 91, 96, 310, 311, 439, 471, 473, 479, 483, 491, 496, 499, 501, 502, 506, 509, 533], "obs_table_filenam": 82, "obs_tim": [16, 462, 466, 467, 469, 508], "obs_time_src": 491, "obs_zenith": 496, "obscor": 452, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 119, 166, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 226, 229, 234, 239, 241, 242, 243, 259, 266, 278, 281, 295, 301, 309, 311, 320, 341, 389, 391, 397, 398, 399, 400, 401, 405, 407, 409, 412, 418, 427, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 455, 456, 458, 463, 464, 466, 467, 469, 470, 477, 480, 481, 483, 484, 489, 497, 498, 499, 501, 502, 504, 506, 512, 520, 521, 524, 527, 529, 531, 533, 534, 560, 583, 584, 585, 586], "observation_clust": [455, 496, 498], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 446, "observationcta": 395, "observationeventsampl": 452, "observationfilt": [88, 395, 400, 426, 447], "observationlist": [395, 447], "observationmetadata": 412, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 452, "observationseventssampl": 453, "observationssummari": 431, "observationstat": [426, 431], "observationt": [82, 398, 399, 448, 496, 501, 509], "observationtablecheck": 446, "observationtablesummari": 443, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 398, 412, 415, 418, 438, 499, 501, 502, 519, 524], "observatory_earth_loc": [83, 88, 453], "observatory_loc": [412, 439, 456, 464, 473, 474, 477, 480], "obsinfometadata": [90, 105], "obstim": [85, 94, 189, 588], "obtain": [85, 103, 106, 107, 110, 112, 126, 128, 140, 298, 395, 400, 402, 403, 409, 447, 453, 461, 462, 463, 465, 467, 473, 474, 479, 483, 484, 489, 492, 493, 497, 508, 510, 520, 524, 528, 529, 585, 586], "obviou": [397, 404, 405, 406, 412], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 512], "occur": [196, 197, 199, 208, 209, 342, 385, 405, 406, 410, 500], "occurr": [92, 100, 200, 218, 220, 227, 251], "oct": [393, 395, 396, 400, 402, 405, 411], "octob": 394, "odd": [207, 209], "odd_npix": [207, 209], "odot": [28, 35, 39, 40, 52], "off": [103, 104, 106, 107, 109, 110, 111, 112, 125, 126, 128, 171, 177, 178, 181, 184, 193, 294, 309, 382, 383, 388, 391, 397, 399, 400, 401, 431, 437, 439, 441, 451, 453, 456, 457, 458, 462, 463, 467, 471, 478, 479, 481, 483, 487, 489, 491, 497, 520, 533, 534, 583, 585, 586, 587], "off_2": [106, 112], "off_ev": 481, "off_patch": 481, "off_phas": [177, 481], "off_phase_rang": 481, "offdatabackgroundmak": 442, "offer": [126, 388, 396, 411, 412, 418, 419, 446, 463, 488, 489, 491, 495, 524], "offici": [411, 525, 584], "offlin": [87, 91], "offset": [83, 96, 114, 115, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 188, 191, 196, 197, 199, 201, 205, 208, 209, 385, 391, 399, 422, 431, 441, 443, 445, 450, 451, 452, 453, 456, 463, 464, 466, 469, 470, 471, 477, 481, 490, 491, 496, 499, 502, 509, 521, 529, 531, 534], "offset2": 83, "offset_axi": [156, 157, 158], "offset_band": 83, "offset_from_median": 83, "offset_index": 163, "offset_max": [16, 83, 172, 182, 188, 191, 462, 466, 467, 469, 471, 477, 481, 491, 508, 509, 531, 534], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 140, 284, 375, 376, 385, 390, 399, 400, 401, 403, 444, 456, 458, 462, 466, 467, 470, 471, 477, 483, 487, 489, 491, 493, 508, 509, 520, 524, 583], "ogip": [95, 108, 109, 112, 153, 198, 200, 201, 204, 205, 206, 397, 400, 444, 457, 461, 470, 520, 528, 537], "ogip_column": 205, "ogipdatasetread": 112, "ogipdatasetwrit": [112, 450, 452], "ok": [385, 399, 489], "old": [200, 370, 385, 390, 393, 397, 401, 402, 428, 429, 444, 445, 446, 484], "old_attribut": 385, "older": [392, 402, 419, 444, 486], "oldest": 405, "olga": [442, 443], "olivera": [434, 437, 439, 440, 448, 450, 451, 452, 453], "omega": [19, 20, 23, 266, 283, 499, 541, 577], "omit": [136, 386, 469, 499, 584], "omp": 405, "on_circl": 533, "on_ellipse_annulu": 533, "on_ev": 481, "on_patch": 481, "on_phas": [177, 481], "on_phase_rang": 481, "on_posit": 193, "on_radii": 456, "on_radiu": [471, 481], "on_rectangl": 533, "on_region": [16, 103, 106, 107, 179, 456, 458, 461, 462, 463, 464, 466, 467, 469, 471, 473, 474, 478, 479, 481, 483, 487, 508, 533], "on_region_radiu": [456, 461, 464, 473, 474, 479, 483], "onc": [87, 91, 103, 207, 385, 388, 390, 395, 396, 399, 400, 401, 405, 406, 407, 409, 410, 414, 415, 416, 417, 418, 420, 463, 479, 481, 491, 494, 501, 504, 521, 524, 584], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 103, 105, 106, 107, 110, 111, 112, 115, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 139, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 178, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 286, 290, 292, 293, 294, 320, 325, 341, 356, 372, 378, 379, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 445, 448, 449, 451, 453, 456, 458, 461, 462, 463, 466, 469, 473, 478, 480, 481, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 508, 509, 510, 519, 520, 521, 522, 524, 529, 531, 533, 536, 537, 543, 581, 582, 584, 585, 586, 587, 588], "ones": [87, 91, 121, 125, 129, 133, 136, 153, 200, 389, 393, 397, 399, 402, 405, 413, 419, 422, 480, 484, 490, 492, 512, 531, 583, 584], "ones_lik": [481, 531], "ongo": [388, 391, 392, 416], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 125, 127, 128, 129, 133, 136, 137, 139, 146, 147, 154, 155, 159, 161, 166, 169, 172, 178, 183, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 277, 278, 279, 292, 294, 312, 332, 360, 382, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 419, 427, 429, 433, 437, 439, 440, 445, 449, 451, 452, 453, 458, 459, 461, 462, 463, 466, 467, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 483, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 509, 512, 520, 522, 528, 531, 534, 537, 579, 583, 584, 585, 586], "onlin": [87, 91, 386, 390, 393, 405, 422], "onlinelibrari": [138, 147], "onoff": [440, 520], "onserv": 93, "ontim": [189, 395, 473, 487], "onto": [106, 112, 196, 197, 199, 205, 207, 208, 209, 372, 391, 509, 520, 524, 536, 582], "oo": 411, "op": 401, "opac": 229, "open": [66, 87, 91, 385, 386, 388, 390, 396, 399, 402, 404, 405, 409, 410, 411, 415, 417, 418, 420, 422, 423, 444, 462, 470, 492, 499, 501, 502, 508, 519, 583, 584], "openastronomi": 445, "oper": [87, 91, 195, 207, 222, 385, 391, 396, 399, 432, 434, 437, 446, 447, 451, 457, 487, 494, 495, 536, 537, 550, 552, 556, 559, 561, 564, 569], "opinion": [390, 584], "oppos": [484, 560, 584], "opposit": [196, 197, 414], "opt": [89, 486, 550, 560], "opt_method": 489, "optic": [229, 399, 457, 550], "optim": [19, 20, 26, 102, 134, 136, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 378, 384, 385, 394, 397, 398, 407, 409, 458, 459, 461, 462, 463, 464, 465, 469, 470, 471, 481, 483, 484, 488, 489, 497, 500, 508, 509], "optimis": [19, 20, 214, 215, 216, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 399, 401, 403, 446, 453, 522, 581], "optimize_opt": [214, 469, 477, 488, 489, 509], "optimize_result": [214, 215, 451], "optimizeresult": [102, 214, 215, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 488, 489, 500, 508, 509], "optin": 411, "optinon": [111, 112], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 288, 290, 291, 292, 293, 294, 298, 299, 300, 302, 307, 309, 310, 312, 323, 333, 336, 339, 340, 341, 342, 344, 345, 348, 353, 354, 356, 367, 368, 372, 373, 374, 379, 380, 381, 382, 385, 388, 390, 391, 393, 394, 396, 397, 399, 401, 403, 405, 408, 412, 414, 416, 417, 418, 419, 420, 426, 427, 428, 431, 433, 434, 437, 439, 443, 445, 446, 447, 448, 450, 451, 452, 453, 465, 469, 477, 478, 480, 486, 487, 491, 492, 493, 495, 496, 499, 500, 508, 509, 520, 522, 524, 536, 537, 579, 583, 584], "option1": 386, "option2": 386, "option3": 386, "option_context": [87, 91], "optionali": 544, "optout": 411, "optpars": 390, "oral": 411, "orang": [386, 461, 469, 475, 478, 481, 485, 488, 497, 533], "orchestr": [391, 395, 397, 401, 462, 508, 509], "orcid": 411, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 103, 106, 107, 128, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 166, 168, 169, 172, 176, 183, 186, 187, 192, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 277, 290, 312, 382, 385, 386, 391, 396, 397, 399, 400, 401, 402, 409, 410, 411, 413, 414, 427, 428, 429, 430, 431, 432, 433, 434, 437, 453, 461, 462, 463, 465, 469, 470, 473, 481, 486, 489, 490, 491, 492, 495, 501, 508, 509, 510, 535, 536, 537, 584, 587], "ordereddict": [391, 402, 430], "ordinari": 510, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 182, 214, 257, 258, 272, 273, 299, 312, 388, 393, 402, 405, 410, 411, 415, 417, 418, 420, 424, 443, 445, 456, 464, 466, 469, 470, 471, 477, 480, 485, 486, 489, 499, 567, 568, 584], "organ": [389, 405, 410, 411, 437, 501, 502, 521, 536], "organis": [392, 401, 404, 411, 445], "orient": [151, 159, 160, 385, 396], "origin": [16, 41, 84, 87, 90, 91, 103, 105, 107, 111, 126, 127, 128, 197, 209, 275, 277, 279, 395, 399, 411, 412, 415, 443, 462, 466, 467, 469, 479, 484, 492, 495, 500, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 587, 588], "orthogon": 345, "oscar": [445, 446], "osx": 433, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 103, 105, 106, 107, 111, 112, 126, 127, 129, 133, 134, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 218, 220, 277, 291, 312, 325, 355, 374, 379, 384, 388, 390, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 417, 445, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 520, 521, 522, 524, 529, 531, 533, 537, 552, 581, 582, 584, 588], "other_id": 458, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 127, 164, 203, 207, 209, 211, 217, 218, 219, 220, 227, 251, 282, 312, 378, 398, 408, 411, 453, 494, 495, 500, 551], "oup": [140, 307], "our": [385, 388, 394, 399, 401, 402, 404, 407, 408, 409, 411, 427, 428, 444, 453, 456, 458, 461, 462, 463, 466, 467, 469, 470, 471, 474, 479, 480, 481, 483, 492, 493, 497, 501, 508, 509, 584], "ourself": 510, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 102, 128, 196, 197, 199, 205, 208, 209, 251, 264, 265, 384, 385, 386, 388, 390, 393, 395, 397, 399, 401, 403, 404, 405, 410, 414, 415, 422, 423, 425, 431, 445, 459, 463, 466, 467, 483, 492, 493, 499, 500, 508, 510, 512, 513, 533, 546, 547, 581, 584, 588], "out_fold": 401, "outcom": [390, 399], "outdat": [402, 405], "outdir": [16, 82, 93, 462, 466, 467, 469, 508], "outer": [43, 44, 52, 53, 130, 171, 264, 547], "outer_height": [533, 537], "outer_width": [533, 537], "outfil": 385, "outflow": 206, "outlin": [103, 106, 107, 111, 112, 223, 224, 228, 237, 240, 255, 264, 265, 279, 388, 390, 393, 394, 395, 396, 399, 405, 408], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 105, 119, 127, 144, 145, 153, 158, 196, 197, 199, 205, 208, 209, 215, 227, 242, 251, 293, 341, 386, 393, 395, 398, 401, 402, 406, 409, 412, 426, 441, 447, 450, 451, 453, 469, 473, 474, 477, 480, 488, 491, 492, 508, 509, 522, 524, 584, 585], "output_map": [196, 197, 199, 205, 208, 209], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 103, 106, 107, 111, 112, 117, 120, 153, 173, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 217, 219, 229, 280, 325, 373, 385, 399, 400, 401, 437, 467, 488, 489, 491, 492, 493, 524, 531, 543, 569], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 102, 103, 106, 107, 111, 112, 129, 136, 140, 153, 154, 164, 166, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 227, 251, 283, 292, 294, 298, 323, 324, 337, 376, 385, 386, 390, 393, 394, 395, 398, 399, 400, 405, 408, 412, 414, 417, 419, 437, 458, 461, 465, 467, 469, 472, 473, 480, 486, 487, 488, 491, 492, 495, 509, 510, 522, 524, 528, 585, 586], "overal": [393, 399, 453, 461], "overcom": [414, 493], "overestim": [522, 586], "overflow": [206, 463, 480, 483, 572], "overkil": 480, "overlai": [462, 488], "overlaid": [103, 106, 107, 111, 112, 461, 462], "overlap": [86, 91, 117, 120, 133, 184, 201, 206, 382, 400, 461], "overlap_ok": 86, "overlin": [103, 107, 111, 520], "overload": 437, "overplot": [486, 519], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 352, 396, 461, 463, 471, 475], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 127, 204, 382], "oversampl": [104, 110, 164, 166, 169, 176, 183, 189, 195, 196, 197, 199, 204, 205, 208, 209, 224, 228, 237, 240, 241, 242, 253, 264, 265, 267, 269, 275, 279, 281, 286, 428, 491], "oversample_energy_factor": [104, 110, 474], "oversampling_factor": [197, 207, 223, 224, 228, 237, 240, 241, 242, 253, 255, 264, 265, 267, 269, 275, 279, 281], "overview": [6, 388, 414, 416, 431, 432, 434, 437, 455, 481, 488, 492, 495, 504, 510, 511, 524, 525, 538, 585], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 215, 217, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 332, 354, 409, 446, 448, 453, 461, 462, 469, 470, 473, 474, 475, 490, 492, 493, 494, 495, 499, 500, 506, 508, 509, 520, 537, 548, 584], "overwrite_templ": [215, 227, 251], "overwritten": [166, 169, 324], "owen": [425, 438], "own": [87, 91, 99, 126, 128, 203, 205, 388, 391, 401, 407, 411, 437, 456, 473, 495, 500, 509, 524, 536, 537], "oxfxjohu": 495, "p": [38, 51, 54, 87, 91, 111, 112, 132, 297, 309, 385, 437, 462, 472, 485, 489, 508, 524, 529, 530, 586], "p0_birth": 43, "p90": 48, "p_": [526, 528, 529, 530], "p_0": [51, 196, 199, 205, 208, 209, 516], "p_dot": [51, 54], "p_i": [196, 199, 205, 208, 209], "p_lat": [196, 199, 205, 208, 209], "p_lon": [196, 199, 205, 208, 209], "p_mean": 42, "p_n": [196, 199, 205, 208, 209], "p_stdv": 42, "p_valu": [292, 294, 489, 584, 586], "pace": [393, 394], "packag": [6, 11, 144, 312, 349, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 402, 403, 405, 410, 411, 412, 414, 415, 417, 421, 422, 423, 424, 425, 427, 430, 431, 433, 434, 437, 440, 441, 442, 443, 444, 445, 446, 448, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 520, 523, 524, 525, 532, 537, 548, 556, 558, 572, 584, 588], "pacman": 442, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 103, 106, 107, 111, 112, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 373, 434, 437], "pad_width": [103, 107, 111, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "pad_with": [196, 197, 199, 205, 208, 209], "page": [6, 87, 91, 214, 295, 301, 309, 386, 388, 390, 397, 399, 402, 405, 411, 414, 415, 416, 418, 419, 423, 431, 432, 437, 440, 441, 444, 445, 446, 447, 453, 489, 492, 502, 504, 522, 524, 535, 537, 585, 588], "pain": [385, 388, 392], "pair": [16, 84, 90, 103, 105, 106, 107, 111, 112, 126, 127, 128, 140, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 401, 457], "panda": [87, 91, 384, 402, 446, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "panel": [88, 102, 103, 106, 107, 111, 112, 372, 440, 473, 489], "panel_fov": 372, "panni": 437, "papadopoulo": [437, 439], "paper": [57, 59, 63, 72, 74, 129, 182, 405, 411, 414, 446, 479, 484, 486, 491, 501, 512], "papermil": 401, "par": [396, 408, 413, 414, 457, 483, 489, 497, 499], "par_000_amplitud": 489, "par_001_alpha": 489, "par_002_beta": 489, "par_00x_": 396, "par_1": [214, 489], "par_2": [214, 489], "par_alpha": [214, 489], "par_beta": [214, 489], "par_box": 91, "par_nam": [227, 235, 251, 267, 277], "par_to_v": 499, "par_typ": [227, 235, 251, 267, 277], "parabol": [291, 325, 489], "parabola": [244, 245, 455, 470, 489, 538, 570], "paragraph": 390, "parallel": [6, 93, 129, 130, 133, 136, 172, 327, 328, 329, 330, 331, 332, 333, 388, 402, 416, 439, 451, 452, 453, 465, 487], "parallel_backend": [93, 129, 130, 133, 136, 172, 332, 475], "parallelbackendenum": 327, "parallelis": 414, "parallelmixin": [93, 129, 136, 172], "param": [16, 84, 90, 105, 127, 229, 280, 378, 401, 432, 489], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 489, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 321, 323, 324, 325, 326, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 394, 397, 398, 400, 401, 403, 404, 407, 409, 411, 423, 426, 427, 428, 429, 430, 431, 433, 434, 437, 439, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 483, 485, 486, 487, 488, 490, 491, 496, 497, 499, 500, 509, 510, 512, 520, 522, 523, 524, 531, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587], "parameter": 495, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_nam": 386, "parameter_name_scan": 214, "parameter_typ": 386, "parameterestim": [122, 433, 452], "parameteris": [526, 528], "parameters_list": [218, 220], "parameters_nam": [227, 251], "parameters_stat_sum": 413, "parameters_unique_nam": [19, 20, 26, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 489], "parametr": [16, 27, 84, 90, 102, 105, 127, 156, 157, 162, 165, 167, 244, 245, 264, 397, 401, 408, 427, 434, 437, 463, 465, 495, 499, 546, 547, 558], "parametricpsf": [157, 165, 437, 439], "parametris": [165, 408, 431, 528, 530, 541, 542, 543, 544, 551, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579], "paramnam": 414, "parent": [16, 84, 90, 105, 121, 125, 127, 129, 133, 136, 207, 385, 395, 412, 479, 488, 522, 560], "parenthes": [396, 402, 449, 451], "parfiv": [402, 430], "parnam": 497, "pars": [16, 84, 85, 90, 105, 127, 195, 204, 386, 399, 453, 456, 464, 466, 469, 471, 477, 480, 493, 499, 584], "parse_arg": 584, "parse_fil": [16, 84, 90, 105, 127], "parse_obj": [16, 84, 90, 105, 127], "parse_raw": [16, 84, 90, 105, 127], "parseabl": 312, "parser": 584, "part": [102, 385, 388, 391, 394, 396, 398, 399, 400, 401, 403, 404, 405, 410, 411, 414, 418, 420, 427, 431, 432, 433, 441, 446, 451, 452, 456, 458, 461, 469, 477, 486, 487, 492, 493, 509, 510, 524, 529, 533], "parti": 390, "partial": [91, 103, 106, 107, 154, 155, 161, 166, 169, 172, 195, 207, 209, 277, 399, 403, 432, 446, 535], "partial_overlap": 91, "particip": [390, 394, 405], "particl": [19, 26, 252, 283, 433, 512, 560], "particle_distribut": [252, 560], "particular": [87, 91, 385, 391, 398, 400, 407, 409, 410, 412, 414, 434, 437, 448, 449, 458, 461, 462, 463, 464, 466, 470, 473, 479, 480, 484, 489, 491, 494, 499, 501, 502, 508, 509, 521, 524, 531, 533, 537, 586], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [388, 394, 395, 399, 405, 406], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 106, 107, 110, 111, 112, 127, 128, 131, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 181, 189, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 291, 293, 312, 324, 332, 333, 334, 339, 340, 341, 342, 372, 373, 378, 380, 381, 385, 388, 395, 397, 398, 399, 400, 412, 433, 437, 439, 451, 452, 453, 458, 459, 461, 462, 469, 470, 474, 478, 479, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 499, 508, 509, 510, 524, 535, 536, 537, 541, 542, 584, 588], "pass4": 501, "pass8_edisp_usag": 101, "passkwarg": [463, 483], "past": [385, 390, 393, 401, 402, 405, 406, 408, 411, 413, 422, 443, 445, 446, 492, 584], "patch": [382, 385, 392, 411, 440, 449, 461, 463, 471, 475, 481], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 101, 105, 108, 109, 112, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 204, 205, 208, 209, 215, 227, 242, 251, 278, 320, 349, 350, 351, 354, 385, 388, 414, 421, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 522, 578, 579, 584], "path_effect": [204, 227, 251], "path_to_notebook": 385, "path_to_script": 385, "patheffect": [204, 227, 251], "pathlib": [16, 82, 83, 86, 87, 91, 153, 205, 215, 227, 251, 350, 461, 462, 469, 470, 473, 474, 499, 508, 509], "pathpatch": 475, "pattern": [385, 391, 399], "paula": 452, "paulakx": 452, "paz": [438, 441, 442], "pbar": 524, "pc": [46, 47, 50, 52, 517, 518], "pcolormesh": [83, 128, 150, 151, 153, 156, 157, 158, 163, 165, 167, 168, 444, 450, 489, 490], "pd": [87, 91], "pdf": [153, 157, 182, 257, 258, 272, 273, 334, 378, 386, 470, 473, 485, 514, 516, 517, 518, 520, 521, 526, 527, 528, 530, 533, 537, 567, 568, 586, 589], "pdf_in_safe_rang": 153, "pdf_matrix": 153, "pdf_threshold": [153, 154, 158], "pdflatex": 386, "peak": [68, 131, 144, 145, 153, 182, 233, 239, 241, 245, 439, 445, 452, 465, 484, 486, 491, 547], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 385, "peek": [83, 88, 103, 106, 107, 111, 112, 131, 132, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 385, 397, 422, 434, 440, 444, 448, 458, 463, 469, 473, 474, 481, 487, 490, 499, 501, 502, 521, 524, 526, 527, 528, 530], "pei": 453, "penal": 246, "penalti": [414, 497], "peopl": [390, 392, 405, 411, 415, 416, 485, 512, 524, 584], "pep": 390, "pep8": 388, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 103, 106, 107, 111, 112, 114, 115, 125, 126, 128, 129, 130, 133, 134, 138, 144, 147, 148, 149, 166, 169, 201, 234, 242, 243, 286, 295, 301, 309, 385, 391, 397, 398, 401, 409, 411, 412, 425, 433, 437, 439, 452, 456, 464, 473, 477, 478, 480, 485, 491, 492, 496, 497, 501, 502, 520, 524, 527, 531, 583, 585], "per_decad": [201, 461, 463, 473, 474, 481, 487, 500, 528, 534], "percent": 135, "percentag": [153, 182, 491], "percentil": 83, "peresano": 453, "perfect": 153, "perfectli": [542, 584], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 105, 110, 127, 173, 181, 195, 207, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 292, 294, 348, 351, 378, 385, 386, 391, 394, 395, 396, 400, 401, 409, 412, 414, 415, 416, 418, 427, 434, 437, 439, 442, 446, 449, 451, 452, 453, 456, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 474, 477, 478, 479, 480, 483, 487, 489, 491, 492, 493, 494, 496, 501, 504, 508, 520, 524, 532, 533, 536, 542, 560, 582, 583, 584, 585], "perhap": 537, "period": [42, 51, 54, 201, 278, 392, 411, 414, 445, 453, 496, 516], "period_dot": 51, "periodicmapaxi": 453, "periodogram": [293, 400, 446, 453], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 411], "perseu": [33, 38], "person": [385, 388, 390, 392, 393, 394, 398, 403, 406], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 445, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 510, "ph": 370, "pha": [108, 109, 112, 205, 397, 443, 446, 461, 470], "pha_": 487, "pha_meta": 108, "pha_ob": [108, 149, 214, 470, 488, 489], "pha_obs23523": [111, 112, 134, 290, 414, 497, 522], "pha_obs23592": 522, "phacountsspectrum": 429, "phacountsspectrumlist": 428, "phase": [50, 52, 53, 89, 174, 177, 278, 390, 395, 396, 399, 400, 402, 404, 409, 422, 427, 446, 448, 451, 453, 455, 495, 513, 524, 538, 580], "phase_axi": 409, "phase_bkg_mak": 481, "phase_column_nam": [177, 481], "phase_curve_model": 578, "phase_filt": 89, "phase_max": 481, "phase_min": 481, "phase_model": 578, "phasebackgroundestim": 431, "phasebackgroundmak": [174, 431, 451, 453, 481], "phasecurv": [278, 445, 578], "phasecurve_lsi_dc": 578, "phasecurvemodel": 408, "phasecurvetablemodel": [396, 398], "phasecurvetempl": 396, "phasogram": [278, 578], "phi": [19, 20, 26, 202, 221, 222, 225, 228, 229, 231, 232, 233, 237, 240, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 316, 408, 477, 494, 495, 500, 510, 529, 541, 542, 543, 545, 546, 547, 551, 553, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568], "phi_0": [221, 223, 224, 228, 231, 232, 233, 237, 240, 244, 245, 253, 255, 257, 258, 264, 265, 268, 269, 271, 272, 273, 275, 279, 408, 489, 551, 554, 555, 558, 562, 565, 566, 567, 568], "phi_ref": [278, 578], "philipp": [445, 446], "phone": 405, "photon": [44, 229, 252, 370, 400, 457, 464, 473, 477, 493, 495, 510, 529, 560, 583], "photutil": [144, 385, 399, 446], "php": 63, "physic": [129, 130, 133, 136, 332, 333, 384, 409, 413, 428, 462, 470, 492, 495, 497, 499, 508, 522, 524, 560, 583, 586, 587], "pi": [19, 20, 30, 31, 32, 37, 54, 238, 283, 408, 495, 518, 541, 542, 543, 546, 547, 557, 577], "pick": [385, 392, 399, 410, 427, 510], "pictur": 386, "pie": 524, "piec": [385, 391, 399, 404, 413], "piecewis": [253, 254, 455, 495, 538, 549, 570], "piecewisebrokenpowerlawnormspectralmodel": 408, "piecewisebrokenpowerlawnormspectramodel": 408, "piecewisenormsectralmodel": 434, "piecewisenormspatialmodel": [261, 451, 453, 495, 544], "piecewisenormspectralmodel": [262, 413, 434, 437, 450, 452, 495, 531, 561], "pig": [13, 385, 387, 388, 426, 427, 429, 430, 431, 433, 434, 445, 447, 448, 452], "pii": [138, 147], "pillar": 401, "pin": 446, "pink": [111, 112], "pint": [481, 524], "pintor": [398, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 448, 450, 451, 452, 453], "pip": [384, 388, 392, 402, 417, 418, 420, 427, 446, 499, 584], "pipe": [442, 443, 444], "pipelin": [398, 400, 414, 433], "piron": 583, "piron2001": 583, "pivot": [19, 20, 26, 67, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 452, 486], "pivot_energi": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "pix": [194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 536], "pix_reg": 485, "pix_reg_rec": 485, "pix_to_coord": [194, 195, 198, 200, 201, 204, 206, 207, 452], "pix_to_idx": [194, 195, 198, 200, 201, 204, 206, 207], "pix_tuple_to_idx": 453, "pixcoord": 399, "pixel": [13, 83, 103, 106, 107, 111, 112, 114, 115, 116, 121, 131, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 396, 425, 429, 443, 446, 465, 473, 475, 487, 491, 492, 500, 510, 520, 522, 534, 535, 536, 545], "pixel_area": 207, "pixel_scal": [121, 195, 207], "pixelis": 536, "pixelregion": [399, 533], "pixilis": 492, "pixreg": 543, "pixregion": 209, "pk": [140, 432, 457, 479, 480, 483, 484, 486, 496, 510, 550], "pks2155": [457, 479, 483], "pks2155_hess_lc": [126, 128, 148, 484, 488], "pl": [67, 80, 125, 130, 136, 173, 249, 256, 257, 258, 408, 459, 465, 475, 479, 486, 487, 488, 495, 510], "pl_model": 576, "pl_spectrum": 497, "place": [83, 86, 87, 91, 92, 100, 103, 106, 107, 111, 112, 144, 150, 151, 152, 153, 154, 155, 156, 160, 161, 166, 168, 169, 179, 184, 196, 197, 199, 205, 208, 209, 251, 277, 307, 358, 385, 386, 392, 393, 396, 397, 398, 399, 401, 404, 405, 406, 407, 410, 416, 430, 432, 461, 478, 492, 493, 495, 510, 520, 521, 582, 588], "placehold": 390, "plai": [405, 471], "plain": [402, 492], "plan": [389, 390, 394, 395, 399, 401, 402, 405, 410, 415, 426, 443, 445, 446, 447, 581], "planar": [279, 396], "plane": [29, 67, 68, 129, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 405, 485, 486, 492, 499, 519, 534, 537, 542, 583, 589], "plate": [207, 492], "platform": [402, 411, 437], "plausibl": [412, 472], "pleas": [104, 110, 386, 388, 390, 392, 394, 421, 426, 427, 428, 437, 445, 447, 453, 459, 461, 462, 463, 464, 466, 469, 473, 474, 479, 480, 484, 487, 488, 508, 513, 524], "pleasant": 388, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 102, 103, 106, 107, 111, 112, 128, 131, 132, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 284, 288, 363, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 386, 399, 400, 401, 403, 404, 406, 409, 414, 422, 425, 428, 431, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 456, 458, 459, 463, 465, 466, 467, 469, 470, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493, 495, 496, 497, 499, 500, 501, 502, 508, 510, 514, 516, 517, 518, 520, 524, 526, 527, 528, 530, 533, 578, 579, 583, 586, 588], "plot_absorb": [455, 550, 570], "plot_at_energi": [150, 151, 499], "plot_bia": [153, 158], "plot_broken_powerlaw": [455, 551, 570], "plot_compound": [455, 552, 570], "plot_const": [455, 540, 549], "plot_constant_spectr": [455, 553, 570], "plot_constant_tempor": [455, 571, 580], "plot_containment_radiu": [157, 163, 165, 167], "plot_containment_radius_vs_energi": [157, 163, 165, 166, 167, 169, 499, 500], "plot_contour_lin": 489, "plot_correl": [212, 489], "plot_count": [111, 112], "plot_dat": 588, "plot_disk": [455, 541, 549], "plot_distribut": [453, 467, 469], "plot_energi": [83, 474], "plot_energy_depend": [150, 156, 499, 526], "plot_energy_offset": 83, "plot_err": 131, "plot_error": [19, 20, 26, 66, 67, 102, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 403, 457, 459, 461, 463, 469, 470, 472, 486, 489, 509], "plot_excess": [111, 112, 440], "plot_exp_cutoff_powerlaw": [455, 554, 570], "plot_exp_cutoff_powerlaw_3fgl": [455, 555, 570], "plot_exp_cutoff_powerlaw_norm_spectr": [455, 556, 570], "plot_expdecay_tempor": [455, 572, 580], "plot_extension_error": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279], "plot_fit": [102, 111, 112, 458, 461, 462, 463, 471, 481, 508], "plot_gauss": [455, 542, 549], "plot_gauss_spectr": [455, 557, 570], "plot_gaussian_tempor": [455, 573, 580], "plot_gen_gauss": [455, 543, 549], "plot_generalized_gaussian_tempor": [455, 574, 580], "plot_grid": [164, 196, 197, 199, 205, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 409, 439, 450, 469, 487, 490, 491, 492, 493, 495, 501], "plot_heatmap": 212, "plot_hist": [205, 537], "plot_imag": 83, "plot_interact": [196, 197, 199, 205, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 439, 446, 469, 477, 492, 508, 509], "plot_kernel": 164, "plot_kwarg": [461, 463, 471], "plot_linear_tempor": [455, 575, 580], "plot_logparabola": [455, 558, 570], "plot_logparabola_norm_spectr": [455, 559, 570], "plot_map_rgb": 451, "plot_mask": [111, 112, 197, 205, 209, 533], "plot_matrix": [153, 487, 500], "plot_migr": 158, "plot_naima": [455, 560, 570], "plot_npred_sign": [451, 469, 471, 509], "plot_offset2_distribut": 83, "plot_offset_depend": [150, 156], "plot_panel": 372, "plot_phasogram": 278, "plot_piecewise_norm_spati": [455, 544, 549], "plot_piecewise_norm_spectr": [455, 561, 570], "plot_point": [455, 545, 549], "plot_posit": [227, 251, 494], "plot_position_error": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279], "plot_powerlaw": [455, 562, 570], "plot_powerlaw2": [455, 563, 570], "plot_powerlaw_norm_spectr": [455, 564, 570], "plot_powerlaw_tempor": [455, 576, 580], "plot_profil": 131, "plot_psf_vs_rad": [157, 163, 165, 166, 167, 169, 500], "plot_rad_max_vs_energi": [168, 453, 463], "plot_region": [204, 205, 227, 251, 382, 463, 475, 494, 533, 537], "plot_residu": [102, 103, 106, 107, 111, 112, 435, 437, 469, 509], "plot_residuals_spati": [103, 106, 107, 111, 112, 469, 477, 509], "plot_residuals_spectr": [103, 106, 107, 111, 112], "plot_rgb": 451, "plot_shel": [455, 546, 549], "plot_shell2": [455, 547, 549], "plot_sine_tempor": [455, 577, 580], "plot_smooth_broken_powerlaw": [455, 565, 570], "plot_spati": 437, "plot_spectrum": [102, 150, 469, 480, 487], "plot_spectrum_datasets_off_region": [434, 450, 451, 461, 463, 471, 533], "plot_stat": 461, "plot_super_exp_cutoff_powerlaw_3fgl": [455, 566, 570], "plot_super_exp_cutoff_powerlaw_4fgl": [455, 567, 570], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [455, 568, 570], "plot_templ": [455, 548, 549], "plot_template_phase_tempor": [455, 578, 580], "plot_template_spectr": [455, 569, 570], "plot_template_tempor": [455, 579, 580], "plot_theta_squared_t": 502, "plot_tim": 83, "plot_ts_profil": [128, 461, 462, 475, 478, 488], "plotmixin": [111, 112], "plotter": 372, "plsuperexpcutoff3fgl": 444, "plsuperexpcutoff4fgl": 429, "plt": [19, 20, 26, 66, 67, 132, 150, 156, 157, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 373, 382, 385, 386, 422, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 516, 517, 518, 524, 526, 527, 528, 530, 533, 541, 543, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 228, 405, 411, 495], "plug": 414, "pmf": 398, "png": [157, 393, 422, 514, 516, 517, 518, 520, 521, 526, 527, 528, 530, 533, 537, 586, 589], "po": [155, 207, 533], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 114, 115, 122, 126, 128, 129, 130, 133, 134, 135, 136, 137, 141, 146, 148, 155, 157, 160, 166, 168, 169, 179, 180, 182, 183, 184, 186, 187, 189, 190, 192, 193, 196, 197, 199, 204, 205, 208, 209, 214, 227, 251, 255, 267, 286, 290, 293, 299, 314, 318, 324, 330, 340, 377, 385, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 425, 428, 430, 431, 437, 439, 440, 442, 443, 444, 445, 447, 450, 451, 452, 455, 458, 460, 463, 464, 465, 469, 474, 475, 477, 478, 479, 480, 481, 483, 487, 489, 490, 491, 492, 495, 496, 500, 502, 504, 512, 513, 519, 520, 521, 524, 529, 533, 536, 538, 542, 543, 549, 560, 581, 582, 583], "point_sourc": 396, "pointer": 393, "pointing_altaz": [412, 451], "pointing_galact": 91, "pointing_info": [85, 94, 456], "pointing_posit": [166, 464, 474, 477], "pointing_radec": [83, 91, 451, 499], "pointing_t": 94, "pointing_zen": 451, "pointinginfo": [85, 443], "pointinginfometadata": [90, 105], "pointingmetadata": 412, "pointingmod": 85, "pointlik": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 445, 533], "points_scal": 324, "pointskyregion": [178, 183, 204, 255, 440, 463, 474], "pointsourc": [396, 512], "pointspatialmodel": [19, 20, 72, 80, 136, 261, 408, 409, 430, 450, 465, 466, 469, 470, 473, 474, 478, 486, 487, 494, 495, 500, 508, 509, 545], "pointspreadfunct": 490, "poisson": [106, 112, 292, 293, 294, 295, 301, 304, 305, 309, 342, 397, 398, 428, 433, 459, 464, 467, 477, 583, 584, 586], "poissonian": [293, 481, 484, 583], "poissonlikelihoodfitt": 442, "polar": [51, 54, 313, 385], "pole": [51, 399, 492], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197], "polici": 389, "pollut": 400, "polygon": [197, 211, 399], "polygonis": 399, "polygonpixelregion": 399, "polygonskyregion": [211, 399], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 248, 492], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [328, 332, 333], "pool_kwarg": [332, 333], "poolmethodenum": 328, "poon": 443, "poorli": [491, 531], "pop": [92, 100, 203, 251], "popitem": 203, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 386, 405, 444, 513, 515, 560, 582], "popular": 584, "port": 444, "pos_ob": 471, "pos_on": 193, "pos_target": [471, 481], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 103, 104, 105, 106, 107, 110, 114, 115, 126, 127, 128, 129, 130, 133, 134, 136, 154, 155, 161, 164, 166, 169, 179, 182, 184, 193, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 217, 218, 219, 220, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 290, 292, 294, 310, 311, 314, 315, 318, 319, 373, 385, 392, 396, 398, 399, 408, 409, 410, 411, 427, 429, 434, 437, 439, 452, 453, 456, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 480, 481, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 499, 500, 502, 510, 520, 521, 522, 524, 529, 530, 533, 534, 535, 537, 541, 542, 543, 545, 560, 586], "position_angl": 464, "position_error": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 431], "position_lonlat": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "position_off": 193, "positv": 448, "posixpath": [16, 349], "possibl": [33, 82, 87, 91, 139, 159, 385, 386, 388, 392, 393, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 412, 415, 416, 418, 428, 429, 437, 444, 446, 451, 453, 457, 461, 465, 466, 467, 472, 475, 487, 489, 490, 491, 492, 500, 509, 510, 522, 524, 531, 536, 537, 560, 584, 585], "possibli": [87, 91, 126, 391, 395, 396, 398, 399, 403, 404, 405, 406, 412, 415, 437, 531], "post": [52, 394, 412], "postbuild": 415, "poster": [388, 411, 416, 441], "posterior": [403, 497], "posteriori": 497, "postfix": 385, "potenti": [123, 393, 401, 414, 472, 524], "potentiel": 411, "power": [19, 20, 26, 27, 102, 121, 126, 128, 130, 135, 143, 164, 166, 169, 195, 217, 219, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 268, 270, 271, 272, 273, 276, 280, 283, 288, 293, 339, 396, 398, 425, 431, 443, 445, 453, 455, 457, 464, 466, 469, 473, 475, 477, 479, 480, 481, 483, 494, 495, 497, 524, 538, 550, 570, 576], "power_spectrum": 293, "power_spectrum_param": 293, "powerlaw": [182, 257, 259, 293, 396, 397, 401, 443, 445, 455, 458, 466, 474, 475, 486, 495, 497, 509, 538, 564, 580], "powerlaw2spectralmodel": [249, 257, 258, 262, 408, 459, 466, 495, 510, 563], "powerlaw_with_paramet": 293, "powerlawnormspectralmodel": [67, 235, 256, 258, 262, 277, 407, 408, 413, 434, 452, 469, 470, 473, 474, 477, 487, 494, 495, 500, 508, 531, 544, 564, 569], "powerlawspectr": 136, "powerlawspectralmodel": [70, 72, 76, 80, 102, 111, 112, 117, 120, 125, 128, 134, 136, 218, 220, 256, 257, 262, 284, 408, 409, 413, 457, 458, 459, 462, 464, 465, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 494, 495, 497, 499, 500, 508, 509, 510, 522, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 561, 562, 571, 572, 573, 574, 575, 576, 577, 578, 579], "powerlawspectramodel": 413, "powerlawtemporalmodel": [274, 495, 576], "pppc4dm": 512, "pppc4dmid": 26, "pprint": [87, 91, 585], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pqpstjiz": 483, "pr": [385, 395, 397, 399, 408, 409, 411, 413, 414, 415, 431, 432], "practic": [398, 402, 406, 409, 410, 411, 412, 461, 487, 493, 495, 509, 520, 524, 533, 583], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 105, 110, 127, 128, 385, 388, 394, 405, 411, 412, 417, 418, 434, 446, 448, 462, 466, 467, 470, 472, 475, 484, 486, 488, 489, 494, 497, 520, 526], "preced": [330, 399, 401, 411, 495], "precis": [136, 157, 163, 165, 167, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 385, 403, 410, 411, 474], "precision_factor": [166, 169, 196, 197, 199, 205, 208, 209], "precomput": [26, 102, 128, 453, 487, 494], "pred": 520, "predefin": [418, 420, 439, 475, 478, 479, 508], "predic": 396, "predict": [102, 103, 106, 107, 110, 111, 112, 125, 126, 128, 129, 130, 133, 134, 143, 173, 176, 182, 189, 255, 267, 296, 308, 334, 381, 391, 396, 397, 398, 434, 451, 452, 457, 462, 464, 466, 467, 469, 471, 473, 475, 477, 487, 488, 491, 497, 508, 509, 522, 524, 528, 531, 550, 583, 586], "prefer": [87, 91, 360, 385, 390, 392, 396, 404, 405, 411, 417, 418, 422, 475, 480, 492, 493, 497, 504, 584, 586], "prefix": [201, 396], "preliminari": [394, 405, 413, 442, 444, 452, 465, 490, 500], "prepar": [82, 176, 395, 396, 414, 415, 462, 470, 488, 491, 495, 500, 508, 532, 581], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91, 312], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 453, 465, 484, 492, 560, 583], "present": [15, 70, 82, 83, 85, 91, 92, 100, 108, 112, 126, 128, 170, 198, 203, 227, 235, 251, 312, 385, 386, 388, 398, 401, 405, 409, 412, 414, 416, 437, 458, 463, 466, 467, 478, 479, 483, 484, 485, 490, 491, 492, 494, 520, 522, 525, 537, 584, 586], "preserv": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 402, 487, 493], "preserve_count": [196, 197, 199, 205, 208, 209, 492], "press": 499, "pretti": [399, 405, 416, 422], "prevent": [197, 229, 312, 437, 469, 531], "preview": [388, 502], "previou": [74, 87, 91, 385, 388, 399, 405, 406, 410, 415, 428, 434, 452, 453, 463, 472, 473, 492, 495, 496, 497, 510, 519], "previous": [290, 402, 433, 445, 446, 456, 461, 469, 470, 486, 491, 493], "primari": [26, 87, 91, 196, 197, 199, 200, 208, 209, 390, 411, 433, 448, 488, 492], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 200, "primary_band": 492, "primary_hdu": 473, "primaryflux": [19, 20, 485, 512], "primaryhdu": [473, 492], "prime": 23, "primer": 403, "princip": 472, "principl": [385, 411, 413, 461, 534], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 102, 103, 107, 111, 113, 118, 125, 128, 130, 136, 144, 145, 151, 153, 156, 157, 163, 165, 167, 176, 179, 218, 220, 227, 242, 251, 284, 310, 311, 320, 352, 385, 386, 396, 397, 400, 409, 412, 421, 422, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 508, 509, 510, 522, 524, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584, 585, 586, 588], "print0": 385, "print_level": [469, 477, 489, 509], "print_stack": 385, "printout": [385, 444, 445, 487], "prior": [19, 20, 99, 102, 103, 107, 111, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 282, 389, 394, 414, 452, 453, 455, 457, 458, 461, 462, 463, 464, 466, 469, 470, 475, 477, 479, 480, 486, 489, 495, 498, 504, 509, 510, 569, 581], "prior_inverse_cdf": 414, "prior_registri": 497, "prior_stat_sum": [217, 218, 219, 220, 413, 497], "priorfitstatist": 413, "priori": [409, 467, 493], "prioriti": [382, 394, 396, 397, 399, 411, 415], "priormodel": 413, "priorparamet": [236, 246, 260, 282, 413, 497], "privat": [385, 388, 394, 408, 445, 501, 502], "pro": [385, 401], "probabl": [13, 102, 137, 146, 158, 388, 391, 392, 393, 395, 398, 399, 403, 405, 407, 413, 414, 416, 461, 464, 477, 489, 492, 495, 497, 500, 528, 529, 530, 583, 584, 586, 587], "probe": [136, 299, 414, 495], "problem": [19, 20, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 307, 363, 393, 395, 399, 406, 413, 421, 449, 489, 524], "problemat": [404, 409, 412, 479, 524], "proce": [388, 416, 418, 420, 448, 457, 458, 461, 462, 473, 477, 479, 493, 494, 499, 500, 508, 509], "procedur": [398, 410, 415, 416, 457, 465, 469], "proceed": [405, 411, 501], "process": [11, 83, 93, 129, 130, 133, 136, 137, 146, 172, 197, 209, 331, 332, 333, 342, 385, 386, 388, 390, 391, 393, 394, 395, 397, 398, 400, 401, 407, 410, 411, 412, 419, 423, 429, 434, 437, 439, 445, 452, 453, 458, 461, 465, 471, 473, 474, 486, 487, 491, 501, 506, 509, 514, 521, 523, 524, 582, 583, 584], "process_lots_of_data": 385, "processor": 405, "prod": 426, "prod3": 405, "prod3b": 499, "prod5": [473, 474, 499], "produc": [15, 103, 106, 107, 111, 112, 116, 126, 287, 289, 385, 386, 391, 400, 401, 409, 410, 412, 414, 416, 431, 457, 458, 461, 463, 465, 470, 471, 472, 473, 477, 479, 481, 485, 489, 491, 497, 499, 509, 524, 527, 529, 584], "product": [110, 137, 146, 196, 197, 199, 202, 205, 208, 209, 278, 391, 400, 401, 411, 412, 422, 437, 451, 452, 457, 459, 465, 474, 481, 487, 489, 491, 500, 502, 522, 529, 583], "prof_mak": 130, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 102, 122, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 146, 157, 163, 165, 166, 167, 169, 193, 197, 205, 214, 239, 241, 291, 309, 325, 344, 345, 397, 399, 403, 404, 411, 418, 420, 425, 427, 434, 437, 442, 444, 446, 447, 452, 453, 455, 461, 462, 471, 476, 478, 479, 480, 488, 489, 497, 504, 512, 522, 524, 541, 586], "profile_err": 131, "profile_high": 475, "profile_new": 475, "profuma": 512, "program": [385, 401], "programmat": 469, "progress": [15, 82, 121, 133, 136, 214, 333, 391, 394, 401, 402, 416, 437, 444, 445, 446, 452, 524], "progress_download": 524, "proj": [103, 106, 107, 111, 112, 176, 195, 196, 197, 207, 208, 209, 461, 491, 492, 500, 509, 533], "project": [103, 107, 111, 130, 173, 179, 195, 196, 197, 199, 204, 205, 207, 208, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 319, 345, 385, 386, 387, 388, 390, 392, 399, 401, 402, 405, 411, 429, 437, 445, 451, 462, 465, 467, 471, 475, 481, 490, 492, 493, 494, 500, 506, 508, 509, 510, 512, 533, 536, 537, 546, 547, 582, 584], "projected_distance_axi": 130, "prompt": 584, "pronounc": 524, "pronunci": 524, "prop_cycl": 382, "propag": [19, 20, 26, 53, 131, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 396, 403, 431, 451, 489], "proper": [45, 100, 400, 411, 450, 451, 463, 469, 524], "properli": [136, 189, 390, 400, 411, 449, 450, 461, 462, 488, 489, 508, 520, 585], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 105, 126, 127, 173, 207, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 300, 382, 385, 386, 396, 398, 408, 409, 412, 413, 434, 437, 439, 444, 445, 447, 450, 451, 461, 463, 471, 473, 475, 486, 493, 495, 496, 510, 521, 537, 583], "propos": [385, 387, 389, 390, 391, 392, 394, 402, 410, 411, 413, 415, 427, 430, 431, 433, 434, 445, 451], "protect": 453, "proto": [16, 84, 90, 105, 127], "proton": [283, 560], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 396, 398, 401, 402, 403, 405, 442, 444, 445, 452, 513], "proven": 401, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 102, 103, 105, 106, 107, 111, 112, 116, 127, 133, 136, 137, 139, 146, 153, 154, 172, 186, 187, 192, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 279, 293, 309, 312, 378, 385, 386, 395, 396, 398, 400, 401, 402, 405, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 427, 430, 431, 432, 434, 437, 439, 448, 451, 453, 456, 461, 463, 464, 465, 474, 477, 484, 486, 487, 488, 489, 491, 492, 493, 495, 496, 500, 501, 502, 504, 509, 510, 512, 514, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 534, 535, 536, 537, 538, 545, 548, 560, 569, 581, 582, 583, 584, 586, 589], "proxi": 395, "prune": [388, 415], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 388, "psf": [16, 82, 87, 88, 96, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 155, 157, 162, 163, 164, 165, 166, 167, 169, 176, 183, 192, 207, 227, 251, 267, 310, 311, 385, 391, 395, 396, 397, 398, 401, 425, 427, 431, 432, 433, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 456, 458, 461, 462, 463, 465, 466, 467, 469, 471, 473, 474, 477, 478, 487, 491, 493, 496, 499, 501, 502, 508, 509, 520, 522, 524, 529, 532, 537, 583], "psf3d": [88, 157, 162, 165, 167, 192, 427, 445, 530], "psf68": 456, "psf_": 520, "psf_3gauss": [87, 157, 499, 530], "psf_assym": 490, "psf_file": 101, "psf_kernel": [166, 500], "psf_kernel_map": [164, 500], "psf_king": [87, 165, 530], "psf_map": [104, 110, 166, 169], "psf_map_reco": [169, 501], "psf_mean": 500, "psf_new": 490, "psf_out": [166, 169], "psf_r95": 493, "psf_tabl": [82, 87, 163, 490, 502], "psf_theta": 385, "psf_updat": [104, 110], "psf_valu": [157, 165, 167], "psfkernel": [106, 166, 169, 197, 209, 397, 406, 446, 530], "psfking": [162, 439, 530], "psfmap": [103, 104, 106, 107, 110, 111, 112, 155, 161, 162, 164, 169, 176, 183, 192, 397, 398, 406, 427, 430, 431, 433, 434, 446, 452, 453, 465, 487, 500, 524, 530], "psfnd": 490, "psr": [481, 486, 510], "public": [6, 375, 376, 388, 390, 399, 404, 407, 410, 416, 441, 458, 470, 478, 479, 483, 582, 589], "publicli": [499, 501, 502], "publish": [11, 402, 416, 461, 500], "pull": [386, 389, 390, 393, 394, 395, 396, 397, 398, 399, 405, 410, 411, 415, 416, 424], "puls": 241, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 395, 405, 427, 429, 448, 451, 453, 455, 467, 472, 482, 495, 504, 514, 515, 524], "pulsar_analysi": [405, 455, 481, 482], "pulsar_phas": 524, "pulsar_phase_comput": 524, "pulsarastronomi": 524, "pulsat": 266, "pulse_stat": 481, "punch": [450, 452], "pure": [385, 402, 404, 405, 533], "purpl": 537, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 336, 360, 389, 391, 397, 400, 404, 408, 410, 411, 445, 465, 487, 494, 495, 528], "push": [385, 388, 415, 448], "put": [201, 385, 386, 388, 390, 392, 393, 396, 405, 415, 416, 422, 428, 464, 473, 493, 500, 524, 584], "pwbpl": 408, "pwd": [388, 418, 420], "pwl": [19, 20, 26, 128, 218, 220, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 396, 408, 413, 457, 459, 473, 488, 495, 497, 522, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552], "pwl2": 495, "pwl_decai": 473, "pwl_norm": [408, 495, 564], "pwn": [43, 486, 510, 517], "pwne": 472, "py": [385, 386, 392, 399, 402, 404, 406, 415, 416, 422, 427, 429, 430, 438, 443, 447, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 508, 509, 510, 511, 524, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584], "py310": 388, "py35": 444, "pycharm": 428, "pydant": [16, 84, 90, 105, 127, 384, 431, 450, 452, 469], "pydantic_cor": [16, 84, 90, 105, 127], "pydanticdeprecatedsince20": 469, "pydanticserializationerror": [16, 84, 90, 105, 127], "pydanticundefin": [16, 84, 90, 105, 127], "pydata": [439, 453], "pydocstyl": 386, "pyfact": [425, 443], "pyflak": 439, "pyirf": 452, "pyjok": 384, "pymc": 403, "pymotw": 584, "pypi": [402, 412, 415, 416, 418, 419], "pyplot": [19, 20, 26, 66, 67, 83, 132, 157, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 373, 378, 422, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 516, 517, 518, 524, 526, 527, 528, 530, 533, 541, 543, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577], "pyproject": 434, "pyregion": 399, "pytest": [385, 386, 388, 416, 445], "python": [11, 16, 84, 90, 105, 127, 144, 312, 353, 384, 388, 389, 390, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 429, 430, 437, 439, 442, 443, 444, 445, 446, 447, 448, 451, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 512, 523, 524, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 584], "python3": [349, 419, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 556, 572], "python_execut": [456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "python_vers": [456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "pytorch": 403, "pyx": [388, 416], "pyyaml": [384, 402, 426, 430], "q": [26, 83, 87, 91, 380, 485], "qol": 453, "qtabl": [87, 91, 400, 483], "quadrat": [492, 502, 510, 587], "qualiti": [205, 405, 445, 446, 451, 496, 509, 524, 582, 589], "quantifi": [452, 472, 483, 484, 497], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 116, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 180, 181, 182, 184, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 286, 292, 293, 294, 297, 298, 299, 300, 302, 307, 311, 312, 314, 316, 318, 319, 324, 342, 344, 345, 356, 360, 385, 386, 391, 394, 396, 399, 400, 401, 403, 408, 409, 412, 413, 428, 430, 434, 437, 438, 446, 447, 448, 456, 463, 465, 473, 474, 475, 479, 483, 484, 486, 487, 490, 491, 492, 493, 495, 499, 501, 502, 510, 516, 517, 518, 520, 524, 537, 563, 572, 574, 583, 586, 588], "quantity_support": [490, 541], "quasar": 140, "quentin": [403, 407, 408, 429, 430, 431, 432, 433, 434, 437, 439, 440, 448, 449, 450, 451, 452, 453], "queri": [401, 442, 486], "question": [352, 388, 390, 392, 393, 394, 396, 397, 398, 399, 402, 404, 409, 421, 426, 427, 445, 446, 447, 471, 510, 524, 525, 584], "questionnair": [392, 445], "quetin": 431, "quick": [83, 88, 103, 106, 107, 111, 112, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 385, 388, 405, 416, 465, 466, 469, 471, 473, 480, 487, 490, 494, 499, 501, 502, 504, 510, 512, 521], "quickest": 386, "quickli": [385, 386, 388, 390, 401, 402, 405, 411, 414, 416, 418, 444, 461, 469, 484, 501, 528, 584], "quicklook": 83, "quickplot": 197, "quicksort": [87, 91], "quickstart": 423, "quiescent": 550, "quit": [87, 91, 385, 413, 473], "quival": 396, "quot": [74, 284, 385, 386, 485], "qzn": 469, "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 158, 193, 206, 313, 385, 386, 410, 416, 462, 470, 474, 489, 491, 508, 514, 529, 533, 541, 542, 543, 547, 550], "r68": [83, 114, 115, 157, 166, 169], "r70": [67, 486], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 264, 265, 485, 543, 546, 547], "r_0": [30, 33, 38, 48, 228, 240, 264, 494, 541, 543, 547], "r_1": [39, 48], "r_eval": 240, "r_exp": [36, 48], "r_in": [44, 171, 181, 264, 467, 534], "r_m": 543, "r_out": 44, "r_out_max": 171, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 144, 145, 179, 385, 386, 398, 401, 456, 461, 463, 465, 467, 471, 474, 478, 479, 481, 483, 486, 491, 493, 499, 500, 501, 502, 509, 510, 512, 524, 528, 588], "ra_pnt": 502, "ra_tru": [385, 398], "rad": [33, 83, 88, 103, 106, 107, 111, 112, 114, 115, 116, 157, 163, 165, 166, 167, 168, 169, 179, 192, 266, 401, 439, 451, 463, 487, 490, 491, 500, 529, 530, 533, 577], "rad_axi": [103, 106, 107, 111, 112, 116, 166, 169, 487, 490, 491, 524], "rad_di": [45, 514], "rad_index": 163, "rad_max": [82, 83, 87, 88, 162, 168, 185, 439, 448, 450, 451, 463], "rad_max_2d": [87, 168, 178, 183, 185, 463], "radec": [83, 94, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 385, 386, 490, 492, 510], "radecsi": 548, "radesysa": 548, "radi": [252, 560], "radial": [28, 30, 35, 36, 39, 40, 45, 132, 193, 197, 338, 385, 396, 404, 409, 427, 442, 444, 452, 473, 475, 491, 499, 512, 514, 530, 533], "radian": [17, 18, 21, 22, 24, 25, 27, 202, 223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "radiat": [229, 524, 546, 547, 560], "radiative_model": [252, 560], "radii": [27, 485, 500, 542], "radio": [140, 399, 492], "radiobutton": [469, 477, 492, 508, 509], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 103, 106, 107, 111, 112, 125, 130, 131, 157, 163, 165, 166, 167, 169, 171, 179, 181, 197, 207, 209, 210, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 310, 311, 344, 386, 399, 401, 408, 409, 427, 436, 437, 441, 451, 456, 458, 461, 462, 464, 465, 466, 467, 469, 471, 473, 474, 478, 479, 481, 483, 485, 487, 490, 491, 493, 494, 495, 496, 499, 508, 509, 510, 517, 518, 531, 533, 534, 537, 541, 542, 543, 546, 547], "radius_inn": [52, 53], "radius_max": [344, 475], "radius_min": 344, "radius_reverse_shock": [50, 53, 517], "radmax": [439, 440, 451, 452], "radmax2d": [83, 88, 162, 185, 437, 453, 463], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 125, 129, 130, 133, 135, 136, 140, 172, 229, 283, 284, 299, 300, 332, 333, 385, 391, 396, 397, 399, 403, 414, 416, 418, 422, 423, 428, 444, 446, 451, 452, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 512, 514, 515, 519, 520, 521, 524, 527, 529, 531, 533, 534, 550, 581, 582, 583, 584, 585, 586, 589], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 105, 127, 198, 203, 227, 229, 251, 275, 276, 277, 279, 312, 363, 385, 399, 408, 409, 412, 413, 431, 448, 451, 452, 453, 474], "raise_error": [16, 84, 90, 105, 127], "raj2000": [486, 510], "ran": [415, 499], "random": [6, 33, 42, 45, 46, 47, 87, 91, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 335, 336, 337, 338, 339, 340, 341, 342, 388, 397, 398, 401, 414, 429, 441, 445, 473, 495, 524, 585, 586, 588], "random_se": 397, "random_st": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 335, 336, 339, 340, 341, 342, 385, 398, 464, 473, 474], "randomli": [46, 101, 119, 385], "randomnumb": 339, "randomst": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 336, 339, 340, 341, 342, 385], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 103, 106, 107, 111, 112, 129, 136, 153, 166, 168, 169, 182, 194, 195, 198, 200, 201, 204, 205, 207, 217, 219, 221, 222, 225, 226, 228, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 251, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 286, 325, 337, 339, 340, 341, 378, 385, 391, 397, 398, 400, 409, 428, 433, 434, 437, 445, 446, 448, 458, 461, 463, 464, 466, 469, 470, 472, 474, 479, 480, 481, 484, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 500, 501, 508, 509, 510, 520, 522, 524, 543, 553, 582, 586], "rangl": 19, "rapid": [140, 299, 391, 394, 409, 410], "rare": [384, 385, 404, 492], "raster": [95, 197], "rate": [44, 45, 83, 88, 150, 151, 182, 189, 293, 342, 398, 422, 446, 461, 463, 481, 491, 499, 500, 502, 514, 527, 583], "rather": [121, 125, 129, 133, 136, 390, 403, 406, 445, 448, 450, 452, 453, 458, 489, 492, 510, 520, 542, 586], "ratio": [106, 112, 171, 195, 196, 197, 294, 309, 409, 456, 481, 499, 534, 583, 585, 586, 587, 589], "ravel": [195, 473], "raw": [126, 182, 510], "rc": [196, 197, 199, 205, 208, 209, 382, 492], "rc_context": [196, 197, 199, 205, 208, 209, 492], "rc_param": [196, 197, 199, 205, 208, 209, 492], "rcparam": 382, "rdbu": 508, "rdbu_r": [103, 106, 107, 111, 112], "re": [87, 91, 96, 128, 129, 134, 173, 196, 197, 199, 205, 208, 209, 214, 310, 311, 378, 385, 386, 388, 390, 392, 393, 399, 400, 401, 403, 406, 407, 408, 409, 421, 425, 437, 439, 446, 459, 461, 462, 467, 469, 470, 471, 480, 489, 490, 494, 496, 500, 508, 510, 522, 524, 545, 584], "reach": [53, 135, 210, 390, 395, 398, 414, 495], "reactiv": 448, "reactivenestedsampl": 414, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 106, 107, 108, 111, 112, 117, 120, 121, 125, 126, 128, 130, 132, 134, 136, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 178, 196, 197, 199, 203, 204, 205, 208, 209, 214, 227, 229, 242, 251, 278, 279, 280, 285, 287, 289, 290, 348, 351, 371, 373, 378, 380, 385, 386, 388, 390, 395, 396, 397, 398, 401, 405, 407, 409, 411, 412, 413, 418, 420, 431, 434, 437, 445, 446, 448, 451, 452, 453, 457, 461, 462, 463, 467, 469, 472, 473, 484, 487, 488, 489, 490, 495, 497, 499, 500, 501, 504, 508, 510, 521, 522, 524, 526, 527, 528, 530, 548, 578, 579, 584, 587], "read_arf": 108, "read_bkg": 108, "read_builtin": [229, 457, 550], "read_covari": [227, 251], "read_dataset": 15, "read_fil": 414, "read_lazi": 439, "read_model": 15, "read_pha": 108, "read_rmf": 108, "read_xspec_model": 280, "readabl": [366, 396, 439, 462, 508], "reader": [412, 456, 464, 466, 469, 471, 474, 477, 480, 499], "readi": [395, 412, 421, 583], "readili": [405, 414], "readm": [388, 411], "readthedoc": [13, 129, 189, 204, 214, 280, 388, 405, 428, 443, 489, 490, 499, 521, 524, 535, 537], "real": [51, 385, 388, 416, 464, 465, 467, 474, 489, 493, 520], "realis": [390, 399, 411], "realist": 413, "realiti": 457, "realiz": [391, 583], "realli": [385, 392, 399, 402, 464, 477, 489], "rearrang": 405, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 390, 391, 392, 393, 396, 397, 398, 400, 402, 404, 406, 411, 414, 445, 457, 473, 489, 497, 501, 520, 584], "reassign": [19, 20, 26, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "rebas": [385, 399], "rebin": [128, 148, 400, 439, 452, 479, 484, 487], "rebuild": [16, 84, 90, 105, 127, 470], "recarrai": [87, 91, 157, 167], "receiv": [403, 405, 406, 408, 410], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 395, 399, 400, 401, 402, 405, 414, 419, 426, 440, 446, 470, 499, 501], "recip": [387, 401, 415, 423, 437, 481, 524, 525, 583, 586], "reco": [103, 106, 107, 111, 112, 153, 186, 385, 391, 400, 409, 447, 448, 456, 487, 491, 501, 583], "reco_exposur": [125, 453], "reco_psf": [103, 106, 107, 111, 112, 116, 491, 501], "recogn": [456, 464, 466, 469, 471, 477, 480, 499], "recognis": [396, 584], "recognit": 411, "recommend": [92, 100, 101, 102, 183, 227, 251, 291, 324, 325, 384, 385, 386, 388, 392, 394, 402, 411, 416, 417, 419, 422, 429, 446, 461, 462, 463, 472, 487, 489, 491, 495, 500, 508, 524, 531, 536, 537, 584, 585, 588], "recomput": [128, 409, 467], "recompute_ul": 128, "recon_vers": [500, 510], "reconstruct": [83, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 125, 135, 136, 143, 150, 151, 153, 154, 155, 158, 168, 169, 182, 189, 385, 391, 396, 398, 434, 449, 456, 458, 461, 464, 466, 467, 469, 473, 477, 480, 487, 491, 493, 497, 501, 520, 522, 528, 529, 530, 537, 583], "recopsfmap": [162, 448, 451], "record": [83, 88, 385, 390, 391, 411, 499], "recov": 401, "rectangl": [224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 345, 399, 475, 533], "rectangleskyregion": [207, 223, 224, 279, 344, 345, 399, 458, 485, 493, 533, 537], "rectangular": [475, 533, 537], "recurr": 400, "recurs": [352, 412], "red": [102, 293, 299, 375, 456, 457, 461, 464, 467, 469, 472, 485, 496, 497, 541, 542], "redesign": 394, "redistribut": 528, "redo": 481, "redshift": [19, 20, 229, 408, 510, 550], "redshift_scan": 457, "reduc": [6, 11, 15, 100, 103, 106, 107, 111, 112, 164, 166, 169, 174, 184, 196, 197, 199, 201, 205, 208, 209, 391, 392, 394, 396, 397, 401, 404, 406, 411, 412, 418, 425, 430, 437, 446, 452, 455, 457, 458, 459, 462, 463, 464, 469, 470, 473, 477, 478, 479, 480, 483, 493, 496, 498, 501, 504, 520, 524, 534, 537, 542, 543, 582, 583, 584], "reduce_data": 401, "reduce_over_ax": [196, 197, 199, 205, 208, 209, 466, 491, 501], "reduct": [6, 11, 172, 391, 397, 398, 401, 405, 406, 407, 412, 418, 431, 433, 451, 455, 467, 471, 472, 475, 481, 487, 490, 493, 494, 496, 498, 504, 521, 524, 531, 533, 534, 582, 583], "ref": [83, 94, 103, 107, 111, 125, 130, 136, 195, 204, 207, 227, 251, 386, 409, 465, 471, 475, 479, 486, 487, 488, 490, 492, 500, 510, 537, 572, 573, 574, 575, 576, 577, 583, 584], "ref_templ": [16, 84, 90, 105, 127], "refactor": [385, 397, 399, 400, 401, 408, 427, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 445], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 105, 106, 107, 108, 111, 112, 114, 115, 116, 126, 127, 128, 129, 131, 136, 137, 139, 140, 146, 158, 172, 173, 176, 179, 180, 183, 184, 185, 188, 189, 191, 206, 207, 208, 209, 214, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 293, 295, 299, 300, 301, 302, 307, 309, 339, 340, 366, 367, 368, 369, 385, 386, 391, 393, 396, 397, 399, 401, 403, 408, 409, 410, 411, 412, 414, 416, 423, 437, 444, 445, 453, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 491, 492, 494, 495, 497, 499, 500, 501, 508, 509, 510, 513, 520, 522, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 554, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586, 588], "referenc": [385, 583], "reference_flux": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "reference_map": 492, "reference_model": [126, 128, 137, 146, 456, 457, 465, 470, 488], "reference_model_default": [126, 128], "reference_spectral_model": [126, 128], "reference_tim": [86, 88, 103, 106, 107, 111, 112, 200, 206, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 450, 451, 474, 480, 484, 491, 492, 579], "refit": 488, "reflect": [174, 178, 179, 180, 184, 193, 394, 399, 401, 404, 406, 418, 430, 437, 439, 442, 443, 446, 457, 458, 461, 462, 463, 471, 479, 483, 493, 532, 583], "reflected_bkg_mak": 491, "reflectedbgestim": 401, "reflectedregion": 457, "reflectedregionsbackgroundmak": [174, 179, 431, 453, 458, 461, 463, 471, 479, 483, 491], "reflectedregionsfind": [178, 184, 429, 533], "refpix": [207, 208, 209], "refresh": [87, 91], "refus": 385, "reg": [103, 106, 107, 111, 112, 493, 495], "reg_dataset": 487, "regard": [409, 412, 461], "regardless": [87, 91], "regeard": [449, 450, 451, 452, 453], "regi": [391, 396, 397, 401], "region": [6, 27, 83, 91, 100, 103, 106, 107, 109, 111, 112, 117, 120, 125, 126, 128, 130, 132, 135, 140, 154, 155, 161, 166, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 214, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 280, 283, 294, 309, 343, 344, 345, 346, 347, 381, 382, 384, 386, 389, 391, 392, 400, 401, 402, 404, 407, 409, 414, 418, 429, 430, 431, 433, 437, 439, 440, 442, 443, 445, 446, 448, 450, 451, 453, 457, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 492, 495, 497, 499, 500, 501, 502, 508, 509, 510, 519, 520, 521, 522, 524, 531, 532, 534, 535, 536, 541, 542, 560, 582, 583, 585, 586, 587], "region_coord": 204, "region_ev": 481, "region_find": [178, 463], "region_io": 204, "region_map": [205, 209, 537], "region_map_1": 537, "region_map_2": 537, "region_mask": [83, 195, 207, 399, 461, 467, 471, 487, 491, 493, 509, 531, 533, 534], "region_nd_map": 205, "region_new": 346, "region_pix": 495, "region_weight": 207, "regionfind": [179, 180, 184], "regiongeom": [103, 106, 107, 111, 112, 126, 130, 176, 183, 185, 186, 187, 189, 190, 205, 224, 228, 237, 240, 253, 264, 265, 267, 269, 275, 279, 399, 400, 407, 418, 433, 434, 437, 456, 458, 461, 463, 464, 471, 475, 479, 480, 481, 483, 486, 487, 488, 491, 500, 510, 520, 533, 536], "regionndmap": [26, 108, 111, 112, 135, 177, 178, 183, 185, 196, 197, 199, 204, 208, 209, 224, 228, 237, 240, 242, 253, 264, 265, 269, 275, 276, 279, 382, 399, 418, 433, 434, 437, 440, 448, 451, 474, 488, 500, 520, 536, 579], "regions_ds9": 493, "regionsfind": [178, 179, 184, 439], "regist": 495, "registri": [55, 98, 122, 162, 174, 247, 249, 261, 262, 274, 406, 413, 430, 433, 434, 437, 446, 486, 495], "regress": 388, "regul": 411, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 195, 203, 207, 394, 413, 414, 439, 451, 477, 492, 493, 501], "regulargridinterpol": [324, 385], "regularis": 413, "regularli": [413, 502], "reichardt": 441, "reimplement": 396, "rej_sampl": 398, "reject": [389, 390, 398], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 106, 108, 112, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 264, 284, 298, 342, 400, 411, 437, 480, 484, 501, 547, 586], "rel_reduction_of_f_": 489, "relat": [11, 13, 67, 83, 85, 212, 299, 391, 393, 396, 398, 399, 402, 404, 405, 406, 411, 414, 416, 433, 434, 446, 452, 487, 495, 499, 514, 581, 586], "relative_variability_amplitud": 484, "relative_variability_error": 484, "relative_variability_signific": 484, "relativist": 560, "releas": [11, 51, 65, 95, 387, 389, 390, 392, 393, 399, 402, 403, 412, 417, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 461, 462, 470, 478, 479, 483, 499, 501, 502, 508, 509, 512, 524, 526, 527, 528, 530], "relev": [126, 292, 294, 368, 385, 391, 400, 405, 409, 414, 415, 461, 462, 465, 478, 479, 480, 483, 494, 496, 499, 501, 502, 508, 509, 520, 521, 588], "reli": [126, 385, 390, 391, 395, 396, 400, 404, 409, 410, 429, 434, 437, 448, 459, 469, 493, 512, 586], "reliabl": [388, 419, 467, 489, 493, 585], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 390, 391, 392, 393, 398, 402, 411, 427, 446, 463, 494, 530], "remaind": 501, "remark": 463, "rememb": [385, 399, 489, 504, 584], "remi": [407, 408, 429, 430, 431, 432, 433, 434, 437, 448, 449, 450, 451, 452, 453], "remind": [201, 411, 465, 471, 488], "remnant": [28, 52, 458, 472, 495, 515], "remot": [388, 415], "remov": [13, 16, 84, 87, 90, 91, 92, 96, 100, 105, 127, 166, 169, 181, 194, 195, 200, 203, 204, 207, 209, 251, 311, 388, 392, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 414, 417, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 461, 467, 469, 475, 481, 487, 493, 496, 499, 500, 513, 524, 533], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 128, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 388, 395, 396, 404, 405, 408, 425, 428, 430, 431, 432, 433, 437, 447, 448, 451, 584], "rename_ax": [194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 448], "rename_column": [87, 91, 128], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 363, 385, 386, 393, 445], "renorm": [467, 531], "renormalis": 181, "reoptim": [129, 133, 134, 214, 427, 457, 475, 478, 488, 489, 497, 508], "reorder": 453, "reorder_ax": [196, 197, 199, 205, 208, 209, 451], "reorgan": 437, "reorganis": 405, "repeat": [386, 469, 501], "repl": 385, "replac": [15, 87, 91, 100, 103, 106, 107, 111, 112, 154, 155, 161, 166, 194, 195, 197, 200, 204, 205, 207, 209, 277, 290, 385, 395, 396, 399, 403, 406, 412, 414, 419, 428, 429, 431, 433, 434, 451, 452, 453, 481], "replace_axi": [194, 195, 204, 207], "replace_column": [87, 91], "repo": [386, 393, 415, 416, 425, 438], "report": [87, 388, 401, 415, 416, 425, 439, 440, 445], "repositori": [87, 91, 385, 388, 390, 393, 395, 411, 415, 437, 446, 473, 502], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 127, 195, 197, 199, 201, 202, 204, 206, 267, 312, 320, 330, 385, 396, 397, 398, 399, 403, 406, 407, 408, 409, 427, 451, 457, 474, 475, 486, 488, 489, 491, 492, 493, 495, 500, 510, 519, 520, 522, 526, 527, 528, 530, 536, 581, 582, 583, 588], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 105, 127, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 385, 399, 412, 427, 429, 451, 459, 486, 492, 495, 536], "reprocess": 391, "reproduc": [94, 102, 128, 386, 401, 402, 403, 405, 411, 412, 417, 419, 446, 491], "reproject": [182, 196, 197, 199, 205, 208, 209, 381, 385, 391, 399, 402, 409, 431, 438, 446, 448, 452, 492, 493], "reproject_by_imag": [196, 197, 199, 205, 208, 209, 452], "reproject_to_geom": [196, 197, 199, 205, 208, 209, 448], "request": [85, 126, 128, 386, 389, 390, 392, 393, 394, 395, 396, 397, 399, 405, 409, 410, 411, 413, 416, 424, 473, 488, 493, 522], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 103, 105, 106, 107, 111, 112, 113, 118, 127, 128, 131, 136, 150, 151, 153, 156, 157, 158, 163, 165, 168, 173, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 312, 360, 364, 365, 383, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 407, 408, 409, 410, 411, 413, 414, 415, 417, 419, 425, 430, 431, 432, 433, 438, 439, 441, 442, 443, 444, 447, 448, 449, 453, 457, 458, 463, 467, 470, 479, 480, 481, 483, 484, 487, 490, 492, 493, 495, 499, 509, 522, 524, 537], "require_ev": 82, "required_ax": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 490], "required_hdu": 440, "required_irf": [16, 82, 462, 463, 466, 467, 469, 508], "required_nam": [198, 200, 201, 206], "required_paramet": [157, 165, 167], "rerun": [400, 483], "resampl": [103, 106, 107, 111, 112, 128, 148, 149, 154, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 380, 437, 439, 484, 524], "resample_axi": [128, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 380, 434, 479, 484], "resample_energy_axi": [103, 106, 107, 111, 112, 154, 434, 439, 487], "resample_energy_edg": [461, 524], "resampled_energy_edg": 149, "resampled_map": [196, 197, 199, 205, 208, 209], "rescal": 491, "research": [401, 411], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 111, 112, 235, 277, 386, 434], "reset_data_cach": [103, 106, 107, 111, 112], "reset_to_default": 235, "reshap": [196, 197, 199, 205, 208, 209, 456, 474, 490, 492], "resid": [407, 495], "residu": [72, 102, 103, 106, 107, 111, 112, 173, 396, 397, 401, 429, 434, 440, 447, 453, 467, 487, 489, 500, 520, 533, 583], "resolut": [52, 153, 154, 158, 195, 207, 394, 396, 398, 399, 445, 451, 453, 486, 500], "resolv": [16, 84, 90, 105, 127, 386, 388, 395, 399, 400, 407, 408, 421, 427, 446, 453, 455, 479, 482, 504, 533], "resort": 466, "resourc": [445, 504], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 105, 108, 127, 128, 140, 195, 197, 207, 209, 291, 385, 395, 400, 411, 413, 434, 453, 465, 467, 480, 488, 492, 493, 501, 522, 537, 587], "respond": 411, "respons": [6, 110, 153, 154, 155, 158, 160, 161, 179, 385, 391, 392, 394, 396, 397, 398, 400, 401, 409, 411, 418, 444, 445, 446, 447, 458, 461, 462, 463, 464, 477, 480, 490, 491, 494, 499, 501, 502, 504, 508, 509, 520, 521, 526, 528, 530, 582, 583], "rest": [26, 388, 402, 404, 486, 519], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 494], "restore_statu": [218, 220, 227, 251, 497], "restore_valu": [218, 220, 227, 251], "restrict": [87, 91, 399, 469, 487, 493], "restructur": [386, 400, 401, 402, 404, 406, 412, 416, 431, 437, 438, 439, 440, 442, 451], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 102, 103, 105, 106, 107, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 144, 146, 147, 158, 164, 166, 169, 182, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 213, 214, 215, 216, 227, 251, 279, 290, 293, 312, 378, 384, 385, 386, 388, 390, 392, 394, 395, 396, 397, 398, 401, 403, 404, 407, 411, 413, 414, 419, 422, 429, 437, 439, 440, 445, 447, 451, 452, 453, 457, 459, 461, 463, 464, 469, 471, 473, 474, 477, 479, 480, 481, 484, 486, 487, 489, 492, 493, 496, 497, 500, 501, 502, 508, 509, 519, 522, 524, 537, 572, 583, 585, 586], "result1": 457, "result2": 494, "result_ecpl": 459, "result_joint": [458, 461, 469], "result_list": 378, "result_log_parabola": 459, "result_minuit": 489, "result_pwl": 459, "result_scipi": 489, "result_stack": 461, "results_joint": 470, "results_prior": 497, "results_simplex": 489, "results_t": 472, "retain": [486, 537], "retriev": [87, 91, 409, 411, 458, 459, 461, 492, 495, 496, 501, 509, 521, 536, 537], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 307, 309, 310, 311, 312, 314, 316, 318, 319, 323, 325, 330, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 355, 356, 357, 366, 367, 368, 369, 370, 373, 375, 376, 378, 380, 381, 391, 395, 396, 397, 398, 399, 400, 408, 409, 412, 413, 414, 430, 431, 434, 437, 440, 446, 448, 453, 461, 463, 467, 471, 475, 479, 480, 483, 486, 487, 488, 489, 491, 492, 493, 495, 497, 510, 514, 536, 537, 569, 586], "return_delta": 342, "return_diff": 342, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [401, 434, 452], "reval": 543, "reveal": 414, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 200, 251, 492, 517], "reverse_lon_radec": 159, "revert": 453, "review": [388, 393, 394, 395, 398, 399, 401, 402, 404, 405, 406, 408, 409, 411, 413, 414, 447, 448, 536], "revis": 405, "revisit": 229, "rework": 432, "rewrit": [391, 394, 401, 432, 442, 443, 445, 446, 447, 584], "rewritten": [444, 447], "rf": 485, "rgalw0oq": 483, "rgb": [380, 382, 451, 456, 461], "rglob": [82, 473, 499], "rhe": 185, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [385, 401], "rid": 391, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 107, 111, 126, 128, 136, 156, 233, 238, 258, 271, 295, 301, 373, 385, 399, 408, 411, 465, 471, 473, 478, 480, 499, 541, 542, 543, 550, 551, 554, 555, 557, 558, 562, 565, 566, 567, 568, 572, 573, 574, 576, 584, 585, 586, 587], "rightarrow": [547, 587], "rigid": 390, "ring": [106, 125, 171, 174, 181, 195, 196, 197, 391, 394, 401, 404, 418, 427, 431, 433, 443, 444, 445, 446, 455, 468, 472, 493, 504, 523, 532, 535, 583], "ring2dkernel": [171, 181], "ring_background": [455, 467, 468], "ring_bkg_mak": 534, "ring_mak": 467, "ringbackgroundestim": [391, 445], "ringbackgroundmak": [171, 174, 431, 467, 491, 534], "rint": 453, "rise": [140, 241, 484, 574], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 411], "rm": [153, 154, 158, 273, 408, 463, 489, 526, 528, 529, 530, 543, 572, 573, 574, 575, 576, 577], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [108, 109, 112, 153, 154, 155, 443, 461], "rmf_ob": 108, "rmffile": 108, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 334, 336, 339, 340, 341, 342, 385], "roadmap": [389, 392, 401, 410, 426, 447], "roberta": [445, 446], "robust": [385, 414, 446], "roellinghoff": 453, "roi": [67, 401, 486, 502, 583], "roi_max": 401, "role": [445, 491], "rolf": 425, "rolk": 583, "rolke2005": [583, 586], "roll": 500, "room": 395, "root": [19, 20, 26, 126, 127, 136, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 303, 306, 385, 403, 437, 465, 512, 522, 584, 586], "rosillo": 448, "rotang": 474, "rotat": [51, 54, 179, 180, 184, 189, 228, 237, 240, 474, 533, 541, 542], "rough": [72, 401], "roughli": [121, 388, 393, 399, 401, 404, 405, 444, 467], "round": [87, 91, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 414, 461, 536], "round_to_edg": [194, 195, 204, 207], "round_trip": [16, 84, 90, 105, 127], "routin": 425, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 144, 153, 320, 356, 379, 400, 409, 412, 448, 451, 461, 464, 474, 475, 483, 486, 489, 492, 499, 501, 502, 510, 519], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 486], "row_label": 379, "row_specifi": [83, 87, 91], "royalblu": 481, "rpovid": 400, "rspec": [67, 486], "rst": [388, 390, 405, 411, 415, 416, 432, 437], "rtd": 446, "rtol": [136, 360, 385], "rtol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "rtol_wc": 207, "ruben": 445, "rub\u00e9n": 445, "ruiz": [393, 401, 405, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 445, 446, 447], "rule": [87, 91, 267, 286, 323, 411, 492, 536], "run": [16, 82, 83, 84, 88, 90, 93, 102, 104, 105, 110, 121, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 144, 145, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 204, 207, 214, 332, 333, 359, 378, 384, 385, 386, 392, 393, 395, 398, 400, 401, 402, 405, 407, 409, 413, 414, 415, 416, 417, 422, 428, 429, 432, 433, 444, 446, 447, 451, 453, 456, 457, 458, 459, 464, 465, 466, 467, 469, 470, 471, 473, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 509, 510, 520, 521, 522, 524, 529, 531, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "run_fit": [15, 462, 466, 508], "run_id": [500, 510], "run_multiprocess": 524, "runner": [16, 349, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 550, 556, 572, 578, 579], "runtim": [394, 412, 415], "runtimewarn": [463, 467, 473, 483, 502, 572], "rx": 458, "rxj": 458, "rxj1713_2016_250gev": 548, "r\u00e9gi": [391, 394, 395, 399, 400, 402, 404, 406, 407, 408, 409, 410, 412, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "r\u00e9my": [403, 437, 439, 440, 448], "s0167947313003204": [138, 147], "s180": 299, "s2": 278, "s3": 278, "s9nrh": 491, "s_0": 524, "s_1": 524, "safari": [87, 91], "safe": [99, 102, 103, 106, 107, 111, 112, 154, 155, 161, 166, 169, 174, 182, 385, 397, 399, 411, 431, 433, 434, 448, 449, 450, 451, 453, 458, 461, 487, 493, 509, 520, 582], "safe_mask": [16, 103, 107, 111, 462, 466, 467, 469, 508], "safe_mask_mak": [172, 458, 461, 481, 491, 501, 531, 533, 534], "safe_mask_mask": [463, 471, 479, 483, 491], "safemaskconfig": 16, "safemaskmak": [172, 174, 406, 431, 432, 437, 439, 440, 452, 458, 461, 463, 471, 477, 479, 481, 483, 491, 493, 501, 508, 509, 531, 532, 533, 534], "safer": 414, "safeti": 411, "sagittariu": [33, 38], "saha": 445, "sai": [74, 390, 404, 584], "said": [385, 390, 392, 501, 502, 584], "sake": [473, 489], "saldana": [229, 230, 451, 457, 550], "saldana21": 550, "samantha": 453, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 103, 106, 107, 108, 111, 112, 125, 136, 137, 138, 144, 145, 146, 147, 157, 158, 164, 165, 166, 167, 169, 170, 172, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 284, 293, 299, 378, 385, 388, 393, 395, 397, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 418, 419, 429, 430, 434, 437, 451, 459, 462, 463, 464, 469, 470, 473, 477, 478, 479, 481, 486, 487, 492, 493, 494, 495, 496, 497, 500, 501, 504, 508, 520, 521, 522, 528, 536, 537, 584], "sampl": [47, 93, 104, 110, 136, 139, 155, 157, 163, 165, 166, 167, 169, 196, 197, 199, 205, 207, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 291, 293, 302, 325, 334, 339, 340, 341, 342, 389, 397, 399, 400, 403, 405, 418, 425, 427, 429, 430, 433, 439, 446, 448, 451, 452, 453, 455, 463, 476, 484, 487, 489, 504, 524], "sample_axi": 334, "sample_background": [104, 110, 431], "sample_coord": [155, 166, 169, 196, 197, 199, 205, 208, 209, 431, 433, 448], "sample_edisp": [104, 110], "sample_powerlaw": 404, "sample_psf": [104, 110], "sample_sourc": [104, 110], "sample_spher": [441, 588], "sample_tim": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 437, 448, 453], "sampler": [104, 334, 394, 398, 414, 433, 437, 453, 473], "sampler_kwarg": 93, "samplerlikelihood": 414, "saniti": 445, "santiago": 453, "satisfi": [149, 173, 195, 196, 197, 312, 494, 524], "save": [15, 19, 20, 26, 100, 136, 211, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 385, 393, 401, 409, 413, 414, 453, 457, 469, 470, 473, 489, 493, 494, 501, 521], "savefig": [363, 422], "savez": 211, "saw": 423, "sbpl": [268, 408, 495], "sc": [87, 91], "scalar": [87, 91, 164, 195, 196, 197, 199, 205, 208, 209, 312, 404, 439, 450, 452, 492, 536], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 105, 106, 112, 121, 127, 129, 130, 133, 157, 173, 201, 205, 206, 207, 209, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 288, 291, 311, 324, 325, 326, 342, 366, 367, 368, 378, 386, 394, 399, 400, 403, 408, 414, 432, 437, 438, 446, 449, 450, 451, 453, 462, 465, 474, 475, 478, 479, 480, 484, 485, 486, 488, 490, 491, 492, 495, 496, 497, 499, 508, 510, 512, 550, 571, 572, 573, 574, 575, 576, 577, 578, 579], "scale10": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 413, 560], "scale_method": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 413, 560], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 485], "scaled_featur": 311, "scaled_features_irf": [310, 311, 496], "scaledregulargridinterpol": [68, 229, 280, 432, 447], "scalespectralmodel": [129, 130, 133, 262, 408, 495], "scan": [19, 20, 95, 126, 128, 129, 130, 133, 134, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 400, 409, 437, 475, 479, 488, 497, 522, 524], "scan_max": [19, 20, 129, 133, 136, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 457, 479, 488, 489], "scan_min": [19, 20, 129, 133, 136, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 457, 488, 489], "scan_n_sigma": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 489], "scan_n_valu": [19, 20, 129, 133, 134, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 457, 489, 497], "scan_prior": 497, "scan_valu": [19, 20, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 475, 489], "scargl": [400, 445, 484], "scatter": [227, 251, 406, 465, 471, 483, 541, 542], "scenario": [87, 91, 390, 397, 407, 418, 488, 492, 495, 513, 585], "scengin": [87, 91], "schedul": 394, "schema": [15, 16, 84, 90, 105, 127, 401, 404], "schema_gener": [16, 84, 90, 105, 127], "schema_json": [16, 84, 90, 105, 127], "scheme": [16, 84, 90, 102, 105, 108, 109, 127, 195, 196, 197, 206, 242, 385, 391, 395, 397, 400, 407, 408, 409, 410, 412, 415, 430, 437, 448, 452, 474, 490, 492, 495, 524, 529, 535, 536, 538], "schiavo": 453, "school": [411, 414], "scienc": [138, 147, 196, 197, 199, 208, 209, 392, 394, 398, 401, 402, 405, 411, 414, 423, 445, 446, 464, 470, 480, 492, 495, 496, 499, 500, 504, 512, 524, 558, 583, 584], "sciencedirect": [138, 147], "scientif": [386, 392, 408, 411, 419], "scientist": 499, "scikit": [144, 385, 399, 402, 405, 446, 493], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 209, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 310, 324, 365, 378, 384, 385, 388, 394, 399, 402, 403, 405, 411, 423, 427, 428, 429, 430, 442, 443, 444, 447, 449, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 581, 586], "scipy_mvn": 212, "scipy_opt": 489, "scitool": 563, "scope": [398, 399, 400, 401, 404, 412, 513], "scratch": [156, 385, 395, 399, 416, 469, 493], "screen": [87, 91, 492, 510], "script": [6, 87, 91, 128, 348, 349, 350, 351, 352, 353, 354, 386, 391, 392, 394, 396, 399, 401, 404, 405, 411, 415, 416, 426, 427, 428, 429, 437, 438, 442, 445, 446, 447, 448, 452, 455, 461, 465, 467, 469, 470, 471, 472, 473, 475, 477, 479, 480, 483, 485, 486, 487, 488, 489, 491, 494, 497, 500, 505, 508, 523, 524, 584], "scriptabl": 412, "scutum": [33, 38], "sdc": 499, "sdist": 416, "seaborn": 524, "search": [87, 91, 292, 294, 349, 385, 386, 422, 445, 446, 462, 465, 471, 472, 485, 486, 496, 508, 509, 510, 512, 524, 584], "season": 405, "sebastian": 437, "sec": [54, 83, 94, 100, 133, 342], "second": [42, 58, 83, 86, 87, 88, 91, 139, 153, 278, 302, 342, 345, 362, 366, 369, 374, 386, 393, 395, 397, 399, 403, 409, 411, 416, 431, 450, 461, 462, 465, 467, 469, 471, 472, 473, 474, 475, 477, 479, 480, 483, 485, 487, 489, 491, 492, 494, 497, 499, 504, 508, 519, 585, 588], "secpl": [271, 272, 273, 408, 495], "section": [19, 87, 91, 293, 295, 301, 385, 386, 388, 390, 399, 401, 402, 404, 408, 411, 414, 416, 434, 447, 464, 469, 473, 474, 477, 480, 486, 488, 489, 493, 494, 495, 510, 513, 524, 537, 582, 584, 588], "secur": 493, "sed": [122, 125, 126, 127, 128, 130, 136, 205, 229, 384, 401, 403, 409, 418, 425, 444, 459, 465, 475, 479, 486, 487, 488, 508, 510, 583], "sed_fit": [455, 459, 460], "sed_fitting_gammacat_fermi": 405, "sed_typ": [19, 20, 26, 126, 127, 128, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 437, 456, 457, 459, 461, 462, 463, 470, 471, 475, 478, 479, 480, 486, 488, 509, 510, 522, 524, 560, 583], "sed_type_init": [71, 74, 75, 78, 126, 127, 128], "sed_type_plot_default": [126, 128], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 518], "sedov_taylor_end": [52, 53, 518], "seds_20230803": 64, "sedtypeenum": 127, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 106, 107, 111, 112, 121, 123, 125, 128, 129, 130, 133, 135, 136, 138, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 179, 181, 182, 189, 194, 195, 197, 199, 201, 202, 204, 207, 209, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 285, 295, 301, 304, 305, 309, 312, 320, 336, 352, 375, 376, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 405, 406, 410, 411, 412, 413, 414, 416, 418, 419, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 442, 443, 444, 445, 446, 447, 448, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 504, 508, 509, 510, 512, 520, 521, 524, 534, 535, 537, 563, 567, 568, 581, 583, 584, 585, 586, 588], "seed": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 252, 259, 266, 278, 281, 293, 334, 335, 336, 339, 340, 341, 342, 385, 445, 473, 560], "seed_photon_field": [252, 560], "seem": [385, 392, 393, 396, 402, 406, 512], "seen": [385, 399, 406, 458, 465, 470, 479, 492, 495, 500], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 103, 106, 107, 111, 112, 125, 176, 183, 196, 197, 198, 199, 201, 206, 208, 209, 218, 220, 227, 251, 267, 277, 290, 381, 382, 395, 397, 398, 399, 400, 401, 405, 407, 409, 412, 418, 420, 426, 429, 437, 441, 456, 461, 463, 464, 466, 467, 469, 470, 472, 473, 474, 477, 480, 481, 487, 488, 489, 491, 492, 493, 496, 499, 501, 502, 504, 510, 522, 524, 528, 529, 533, 582, 584], "select_energi": [83, 521], "select_from_geom": [227, 251], "select_map_mask": 427, "select_mask": [83, 227, 251, 437, 494], "select_nested_model": [451, 453], "select_obs_id": [91, 471], "select_observ": [91, 96, 401, 479, 483, 496, 509, 524], "select_offset": [83, 473, 502, 521], "select_paramet": [83, 89, 481, 521], "select_phas": 395, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 227, 251, 399, 429, 437, 473, 474, 481, 494, 510, 521], "select_row_subset": 83, "select_sky_box": 399, "select_sky_circl": [91, 399], "select_tim": [83, 86, 88, 92, 100, 395, 409, 431, 474, 479, 483, 521], "select_time_rang": 91, "selected_energi": 521, "selected_ev": 83, "selected_id": 521, "selected_obs_t": [91, 496, 509], "selected_offset": 521, "selected_region": 521, "selected_tim": 521, "selection_al": [121, 136], "selection_mask": [227, 251, 494], "selection_opt": [16, 121, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 437, 453, 457, 461, 462, 465, 466, 467, 469, 470, 471, 475, 478, 479, 480, 481, 488, 493, 501, 508], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [469, 477, 492, 508, 509], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 105, 126, 127, 128, 204, 205, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 267, 268, 270, 271, 272, 273, 276, 280, 385, 386, 396, 397, 399, 402, 408, 409, 412, 413, 414, 433, 467, 492, 495], "semant": [399, 410], "semi": 228, "semiaxi": [228, 237, 240, 541, 542, 543], "semilogi": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 456, 474], "semimajor": 486, "semiminor": 486, "semver": 410, "send": 415, "sens": [385, 392, 395, 399, 401, 404, 405, 406, 467], "sensibl": 496, "sensit": [122, 125, 126, 127, 128, 135, 284, 398, 405, 432, 434, 444, 445, 451, 452, 455, 460, 477, 499, 504, 512, 529], "sensitivity_estim": 456, "sensitivity_t": 456, "sensitivityestim": [122, 426, 432, 456], "sent": 390, "sentenc": [390, 405, 411], "sep": [204, 394, 402, 408, 424, 495], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 195, 204, 207, 307, 374, 385, 386, 391, 392, 393, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 414, 433, 437, 443, 445, 446, 450, 451, 464, 467, 469, 471, 477, 480, 486, 494, 495, 496, 513, 521, 529, 530, 541, 542, 546, 547, 560, 583], "septemb": [394, 402, 404, 405, 410], "sequenc": [87, 91, 92, 100, 103, 107, 111, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 227, 251, 312, 416], "sequenti": [391, 461, 509], "seri": [87, 91, 128, 293, 298, 342, 394, 399, 400, 437, 453, 484], "serial": [16, 84, 87, 90, 91, 99, 100, 102, 103, 105, 106, 107, 111, 112, 127, 391, 396, 400, 401, 406, 409, 430, 433, 437, 439, 446, 448, 449, 450, 451, 452, 492, 495, 497, 512], "serialis": [20, 103, 106, 107, 111, 112, 221, 222, 225, 227, 229, 231, 232, 233, 235, 236, 238, 242, 244, 245, 246, 248, 250, 251, 252, 254, 256, 257, 258, 260, 263, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 397, 399, 401, 404, 406, 407, 408, 429, 431, 433, 437, 442, 445, 447, 448, 450, 451, 452, 497, 508, 524, 537, 579], "serializ": [16, 84, 90, 105, 127], "serialize_as_ani": [16, 84, 90, 105, 127], "serialize_method": [87, 91], "serializiaton": 397, "serilis": [26, 223, 224, 226, 228, 234, 237, 239, 240, 241, 243, 253, 255, 259, 264, 265, 266, 267, 269, 276, 279, 281], "sersic": 408, "sersic2d": 408, "sersicspatialmodel": 408, "serv": [87, 91, 385, 390, 397, 401, 409, 414, 416, 439, 485, 528], "server": [407, 418, 420, 504], "servic": 445, "session": [401, 411, 523], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 116, 123, 125, 126, 127, 128, 129, 130, 132, 133, 136, 138, 147, 153, 155, 166, 169, 172, 173, 176, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 271, 272, 273, 275, 278, 279, 280, 290, 302, 332, 334, 385, 386, 391, 394, 395, 397, 398, 400, 401, 402, 403, 405, 409, 410, 411, 412, 413, 416, 418, 420, 433, 439, 441, 443, 445, 448, 451, 452, 453, 456, 457, 458, 461, 463, 464, 465, 466, 469, 471, 472, 473, 474, 475, 478, 479, 481, 486, 487, 488, 489, 491, 493, 495, 496, 497, 499, 501, 502, 504, 509, 512, 520, 521, 524, 533, 535, 536, 537, 560, 581, 584, 587, 588], "set_by_coord": [196, 197, 199, 205, 208, 209, 492, 536], "set_by_idx": [196, 197, 199, 205, 208, 209, 492, 536], "set_by_pix": [196, 197, 199, 205, 208, 209, 536], "set_label": 483, "set_lim": [217, 219], "set_log": 16, "set_model": [15, 407, 462, 466, 478, 508], "set_models_paramet": 407, "set_parameter_factor": [218, 220], "set_parameters_bound": [227, 251], "set_prior": [251, 413], "set_prop_cycl": 456, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 212, "set_titl": [457, 458, 461, 465, 467, 471, 481, 485, 489, 490, 491, 494, 533, 543, 547, 550], "set_unit": [459, 488, 524], "set_xlabel": [456, 457, 458, 461, 464, 481, 483, 489, 496, 497], "set_xlim": [459, 461, 462, 470, 481, 526, 550], "set_xscal": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "set_xtick": [543, 547], "set_ylabel": [456, 457, 458, 461, 475, 481, 483, 485, 489, 496, 550], "set_ylim": [456, 459, 461, 462, 463, 478, 481, 526, 550], "set_yscal": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 475, 485, 526], "set_ytick": [543, 547], "setdefault": 203, "seterr": 385, "setlevel": 471, "setter": [386, 413, 431, 437, 487], "settl": 411, "setup": [13, 387, 388, 389, 392, 397, 398, 402, 405, 413, 443, 447, 504, 584], "setuptool": [438, 584], "sever": [87, 91, 178, 390, 391, 392, 399, 400, 401, 404, 409, 412, 414, 431, 432, 433, 437, 440, 449, 450, 451, 464, 470, 486, 499, 500, 501, 524, 584, 586], "seyfert": 299, "sf": [307, 586], "sgr": 510, "shade": [197, 205, 209, 489, 582], "shall": 388, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 103, 106, 107, 111, 112, 113, 118, 125, 126, 130, 131, 136, 143, 144, 145, 151, 153, 156, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 212, 240, 291, 312, 325, 341, 396, 399, 403, 435, 450, 453, 459, 461, 463, 465, 466, 471, 474, 475, 479, 483, 484, 486, 487, 488, 490, 491, 492, 493, 495, 499, 500, 510, 522, 536, 537, 538, 543, 547], "shape_ax": [195, 207], "share": [196, 197, 199, 203, 205, 208, 209, 385, 390, 397, 400, 404, 407, 419, 437, 439, 451, 469, 470, 493, 494, 524, 584], "sharp": [241, 375, 376, 541], "she": [395, 400], "shear": 399, "sheet": [421, 524], "shell": [52, 53, 80, 264, 265, 396, 401, 408, 418, 420, 455, 495, 538, 547, 549, 584], "shell2": [264, 455, 495, 538, 549], "shell2d": 52, "shell2spatialmodel": [261, 265, 495, 547], "shellspatialmodel": [80, 261, 264, 408, 437, 495, 546], "sherpa": [109, 112, 153, 200, 201, 204, 205, 214, 295, 301, 384, 385, 394, 402, 403, 405, 406, 417, 418, 420, 427, 441, 442, 443, 444, 446, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 537, 558, 585], "sherpa_opt": 489, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 279, 422, 453], "shim": 392, "shini": 370, "ship": [392, 393, 402, 426, 444, 464, 477, 481, 495, 524], "shock": [50, 52, 53, 517], "short": [385, 386, 389, 390, 394, 399, 402, 405, 408, 411, 434, 479, 484, 500, 524, 525, 583, 586, 589], "short_observ": [479, 483], "shortcut": [82, 422, 439], "shorten": 437, "shorter": [299, 385, 386, 399, 405, 410, 434, 464, 479, 495, 584], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 101, 103, 105, 106, 107, 110, 111, 112, 115, 117, 120, 126, 127, 128, 129, 133, 136, 139, 140, 141, 142, 148, 154, 155, 158, 164, 166, 169, 181, 186, 187, 192, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 312, 360, 374, 375, 376, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 410, 411, 412, 414, 415, 416, 418, 420, 421, 422, 427, 429, 451, 463, 469, 472, 473, 474, 480, 481, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 501, 520, 522, 524, 529, 531, 536, 584, 585, 587, 588], "shoulder": 283, "shouldn": [83, 385, 388], "show": [11, 82, 87, 91, 130, 131, 132, 157, 176, 242, 382, 385, 386, 388, 397, 399, 400, 404, 405, 413, 414, 416, 426, 427, 431, 439, 444, 445, 446, 451, 452, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 508, 509, 510, 516, 517, 518, 524, 526, 527, 528, 530, 531, 533, 535, 541, 550, 569, 582, 584, 586, 589], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 471], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 524, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 497, "shower": [441, 499, 529], "shown": [19, 20, 26, 83, 164, 204, 205, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 380, 385, 392, 402, 403, 404, 412, 413, 415, 416, 431, 433, 458, 461, 465, 469, 471, 472, 473, 474, 479, 480, 481, 484, 491, 494, 495, 496, 497, 499, 509, 521], "showwarn": 385, "si": [83, 195, 204, 207, 227, 251, 283, 537], "side": [207, 209, 292, 294, 385, 399], "sider": 588, "sidereal_tim": 386, "siejkowski": 446, "sig": [378, 585, 586, 587], "sight": 512, "sigma": [19, 20, 30, 32, 48, 49, 125, 126, 127, 128, 129, 133, 134, 136, 144, 145, 153, 154, 158, 164, 165, 166, 169, 212, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 290, 292, 294, 300, 408, 413, 457, 465, 471, 472, 477, 478, 484, 488, 489, 493, 495, 497, 508, 522, 528, 542, 557, 573, 586], "sigma1": 31, "sigma2": 31, "sigma_": [212, 542], "sigma_1": [31, 49, 157, 490], "sigma_10tev": [408, 495], "sigma_1tev": [408, 495], "sigma_2": [31, 49, 157, 490], "sigma_3": [157, 490], "sigma_err": 472, "sigma_gauss": 240, "sigma_laplac": 240, "sigma_m": 542, "sigma_nod": 495, "sigma_to_t": 586, "sigmav": 512, "sign": [217, 219, 292, 294, 388, 411, 433, 448, 522, 586], "signal": [83, 103, 106, 107, 110, 111, 112, 181, 209, 266, 292, 294, 309, 409, 456, 461, 462, 467, 470, 478, 493, 508, 512, 527, 531, 533, 583, 585, 586, 587], "signif_avg": 510, "signific": [77, 121, 125, 126, 127, 128, 135, 136, 138, 147, 148, 290, 292, 294, 298, 375, 376, 383, 390, 391, 392, 393, 400, 401, 405, 406, 409, 411, 433, 434, 442, 445, 446, 451, 452, 453, 455, 456, 461, 462, 468, 469, 470, 471, 472, 478, 481, 483, 484, 486, 488, 489, 501, 504, 508, 510, 522, 524, 582, 583, 584], "significance_lima": 433, "significance_map": [467, 469], "significance_map_off": 467, "significance_mask": 493, "significance_mask_inv": 493, "significancemapestim": 433, "significantli": [437, 457, 473, 499], "signoff": 388, "silent": [448, 453], "silvia": 429, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 376, 385, 388, 397, 398, 399, 400, 401, 404, 405, 406, 409, 437, 451, 463, 484, 488, 492, 496, 497, 510, 520, 528, 584], "similarli": [391, 393, 409, 412, 414, 437, 486, 489, 490, 492, 493, 495, 537], "simlat": 293, "simon": [450, 451, 452], "simpifi": 394, "simpl": [50, 52, 144, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 283, 385, 386, 397, 398, 399, 400, 401, 404, 409, 412, 413, 427, 437, 441, 445, 446, 451, 456, 458, 459, 461, 462, 463, 464, 466, 469, 481, 483, 484, 488, 489, 492, 493, 496, 502, 508, 509, 510, 514, 524, 582, 583, 584], "simple_norm": 209, "simple_rebin_lc": 400, "simplefilt": 524, "simpler": [184, 393, 398, 399, 407], "simplest": [456, 461, 484], "simplex": [214, 489], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 173, 214, 218, 220, 385, 399, 400, 409, 418, 419, 420, 448, 451, 456, 457, 458, 471, 487, 493, 494, 495, 510, 537, 584, 586], "simplic": [470, 473, 489, 495, 497, 500], "simplif": [396, 408, 448], "simplifi": [136, 203, 392, 394, 396, 403, 409, 427, 430, 431, 432, 434, 437, 441, 448, 457, 459, 465, 529, 587], "simu": [477, 480, 497], "simul": [45, 83, 88, 93, 103, 106, 107, 110, 111, 112, 115, 155, 166, 169, 293, 342, 395, 398, 401, 405, 412, 413, 418, 425, 429, 431, 433, 439, 442, 444, 445, 446, 451, 452, 453, 455, 460, 466, 469, 471, 476, 481, 482, 494, 497, 499, 504, 514, 529, 582], "simulate_3d": [405, 446, 455, 476, 477], "simulate_dataset": [427, 431, 432], "simulate_observ": 93, "simulated_d": 463, "simulated_data": 93, "simulated_model": 463, "simultan": [413, 480, 487, 495, 497, 520], "sin": [541, 542, 543, 577], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 197, 207, 360, 385, 386, 391, 395, 399, 401, 402, 403, 404, 405, 409, 411, 412, 413, 416, 437, 447, 448, 449, 450, 451, 452, 453, 457, 463, 467, 469, 479, 480, 483, 487, 494, 495, 497, 499, 501, 556, 585, 588], "sine": [266, 396, 455, 538, 580], "sine_model": 577, "sinetemporalmodel": [274, 495, 577], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 125, 129, 130, 133, 136, 154, 155, 166, 168, 169, 172, 176, 178, 183, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 227, 251, 385, 391, 392, 395, 397, 398, 399, 400, 401, 402, 406, 407, 412, 413, 414, 418, 425, 427, 432, 433, 445, 451, 452, 456, 461, 463, 465, 466, 467, 478, 480, 486, 487, 491, 492, 494, 497, 501, 502, 508, 510, 520, 522, 534, 536, 537, 581, 583], "singleobscubemak": 391, "singleobsimagemak": 391, "singleton": 336, "sinha": [397, 400, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453], "sink": 402, "sinu": [266, 495], "sinusoid": [266, 577], "sipocz": [402, 427, 429, 431, 433, 442, 443, 444, 445, 446, 447], "sip\u0151cz": [448, 453], "sit": 388, "site": [349, 416, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 556, 572, 584], "situat": [399, 400, 402, 529], "six": [404, 410], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 120, 131, 136, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 171, 172, 178, 179, 180, 183, 184, 185, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 212, 221, 222, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 302, 334, 335, 339, 340, 341, 342, 373, 385, 393, 396, 398, 399, 418, 420, 450, 452, 456, 463, 467, 469, 473, 479, 481, 486, 491, 492, 493, 495, 499, 500, 501, 502, 510, 520, 535, 541, 542, 588], "skeleton": 401, "sketch": 401, "skill": [388, 414, 422], "skimag": 446, "skip": [16, 82, 84, 90, 105, 127, 164, 373, 386, 388, 397, 399, 405, 444, 483, 494], "skip_miss": [82, 445], "sklearn": 385, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 103, 106, 107, 110, 111, 112, 121, 144, 154, 155, 166, 169, 189, 195, 196, 197, 199, 204, 205, 207, 208, 209, 227, 251, 267, 279, 283, 285, 314, 318, 319, 343, 345, 347, 372, 384, 385, 386, 398, 404, 418, 427, 429, 443, 444, 446, 457, 461, 462, 464, 465, 467, 477, 480, 481, 486, 492, 495, 499, 500, 504, 506, 508, 509, 510, 512, 519, 520, 521, 524, 529, 530, 533, 535, 537, 541, 542, 546, 547, 548, 582, 583], "sky_circl": [91, 96, 479, 483, 496, 509], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 117, 120, 400, 457, 478, 479, 483, 486, 494, 495, 509, 552], "sky_model_pntpwl": 473, "sky_reg": 485, "sky_reg_rec": 485, "sky_region": 89, "skycood": 396, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 103, 106, 107, 111, 112, 114, 115, 126, 128, 130, 132, 154, 155, 161, 166, 169, 179, 180, 182, 184, 186, 187, 189, 190, 192, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 210, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 310, 311, 344, 345, 361, 381, 386, 396, 399, 409, 412, 456, 458, 461, 463, 464, 467, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 509, 510, 524, 528, 533, 535, 537, 545], "skycoord_from_t": 399, "skycoord_to_pixel_scale_angl": 399, "skycoordconfig": 16, "skycub": [391, 404, 443, 444, 445, 446], "skydiffusecub": [396, 408, 428, 433, 434, 446], "skydiffusemap": [396, 428], "skydir": [16, 83, 103, 106, 107, 111, 112, 113, 118, 155, 166, 176, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 461, 462, 463, 466, 467, 469, 471, 472, 473, 474, 477, 478, 481, 485, 487, 490, 491, 492, 493, 495, 500, 501, 508, 509, 531, 533, 534, 535, 537, 542, 543, 544, 545], "skydirfunct": 512, "skydisk": 428, "skydiskelong": 396, "skyellips": [427, 428, 429, 430], "skygaussian": 427, "skygaussianelong": 396, "skyimag": [391, 404, 443, 444, 445, 446], "skyimagelist": 443, "skymap": [196, 197, 199, 205, 208, 209, 399, 442, 443, 474], "skymap_band": [474, 579], "skymap_region": 474, "skymask": 444, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 106, 107, 111, 112, 117, 120, 126, 128, 134, 136, 137, 146, 173, 214, 227, 247, 251, 285, 290, 396, 397, 398, 400, 406, 408, 409, 427, 431, 432, 433, 437, 446, 452, 457, 458, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 494, 497, 500, 508, 509, 519, 520, 522, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581], "skypointsourc": 430, "skyregion": [100, 103, 106, 107, 111, 112, 130, 154, 155, 161, 166, 169, 179, 180, 184, 199, 204, 205, 209, 227, 251, 343, 346, 399, 458, 473, 475, 493, 495, 528, 533, 537], "skyspatialmodel": [396, 446], "slack": [387, 388, 392, 408, 415, 421, 426, 427, 584], "slew": 95, "slice": [83, 87, 91, 100, 101, 103, 106, 107, 111, 112, 123, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 277, 279, 303, 391, 434, 472, 475, 479, 487, 488, 499, 536], "slice_by_coord": [126, 128, 452], "slice_by_energi": [100, 103, 106, 107, 111, 112, 126, 128, 277, 434, 487], "slice_by_idx": [103, 106, 107, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 434, 446, 448, 475, 479, 488, 492, 500], "slice_by_tim": [126, 128], "sliced_ax": 200, "sliced_geom": [194, 195, 204, 207], "sliced_lc": 479, "slicesampl": 414, "slide": [394, 465, 486], "slider": 492, "sliderstyl": [469, 477, 492, 508, 509], "slightli": [121, 201], "slope": [27, 428], "slow": [87, 91, 214, 392, 401, 462, 489, 508, 509], "slower": [87, 91, 197, 385, 393, 403], "slowest": 416, "small": [376, 385, 391, 393, 399, 401, 402, 405, 407, 412, 414, 416, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 478, 479, 492, 497, 499, 500, 501, 502, 542, 546, 547, 583, 584], "smaller": [27, 155, 166, 169, 184, 195, 196, 197, 199, 205, 208, 209, 378, 388, 427, 446, 473, 479, 484, 489, 492, 497, 542], "smallest": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 280, 465], "smooth": [103, 106, 107, 111, 112, 121, 131, 132, 144, 197, 209, 228, 268, 377, 380, 437, 442, 443, 444, 446, 447, 455, 467, 469, 471, 475, 477, 481, 487, 491, 492, 494, 500, 508, 509, 510, 538, 541, 570], "smooth_kernel": [103, 106, 107], "smooth_radiu": [103, 106, 107], "smoothbrokenpowerlawspectralmodel": [221, 262, 408, 432, 433, 495, 565], "sn": [45, 50, 52, 53], "sn_rate": [45, 514], "snippet": [386, 405, 524], "snr": [44, 50, 53, 67, 500, 517, 518], "snr_model": 518, "snrcat": [441, 486], "snrtruelovemcke": [50, 517, 518], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 102, 106, 112, 125, 129, 131, 133, 134, 136, 137, 146, 149, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 205, 208, 209, 214, 217, 219, 240, 279, 290, 360, 368, 375, 376, 385, 386, 388, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 420, 422, 427, 429, 437, 447, 449, 450, 453, 458, 461, 463, 465, 466, 471, 472, 473, 477, 478, 485, 486, 488, 489, 492, 493, 495, 497, 499, 500, 501, 504, 509, 524, 531, 533, 537, 543, 547, 584, 585, 586, 587], "social": 411, "soft": 299, "softwar": [196, 197, 199, 208, 209, 399, 400, 402, 411, 412, 416, 492, 524], "solar": 52, "sole": [395, 411], "solid": [194, 195, 204, 207, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 283, 401, 425, 427, 428, 429, 446, 467, 491, 492, 499, 527, 533, 583], "solid_angl": [194, 195, 204, 207, 492, 537], "solut": [19, 20, 26, 52, 137, 146, 153, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 386, 388, 390, 392, 393, 398, 399, 401, 402, 403, 405, 407, 409, 413, 414, 419, 488, 520, 522, 524, 587], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 393, 395, 396, 397, 398, 439, 524], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 105, 127, 182, 203, 312, 320, 388, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 414, 416, 418, 419, 420, 421, 422, 423, 425, 427, 429, 437, 438, 440, 442, 444, 445, 446, 451, 456, 458, 459, 461, 463, 465, 466, 467, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 492, 494, 495, 497, 499, 500, 509, 510, 512, 513, 520, 521, 524, 529, 534, 536, 584, 585, 586, 588], "some_class": 385, "some_map": 164, "some_map_convolv": 164, "somehow": [393, 399, 404], "someon": [388, 390, 405], "someth": [87, 91, 385, 386, 387, 388, 390, 393, 399, 402, 403, 405, 416, 418, 420, 464, 486, 537, 584], "sometim": [19, 20, 83, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 363, 385, 388, 392, 399, 405, 416, 418, 489, 524, 583, 588], "somewhat": [402, 499], "somewher": [388, 402, 416], "soon": [388, 399, 416], "sort": [82, 83, 87, 91, 102, 144, 348, 353, 354, 385, 402, 428, 453, 510], "sort_kei": [348, 353, 354], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 416, 418, 423, 425, 427, 431, 432, 437, 438, 443, 444, 445, 446, 451, 452, 453, 455, 457, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 500, 501, 502, 504, 506, 508, 509, 512, 513, 518, 520, 522, 524, 529, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 585, 586], "source1": 495, "source2": 495, "source_1": [396, 401], "source_2": 396, "source_42": 401, "source_fermi_3fgl": 459, "source_fermi_3fhl": 459, "source_gammacat": 459, "source_irf_model": 396, "source_librari": 499, "source_model": 563, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 486, 510], "source_name_alia": 56, "source_name_kei": 56, "source_po": [467, 471, 491], "source_population_model": [405, 431], "source_posit": [456, 472, 496], "sourcebackground": 396, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 399, 437, 486, 493, 510, 519], "sourcecatalog1lhaaso": [55, 70, 486], "sourcecatalog2fhl": [55, 71, 486, 519], "sourcecatalog2hwc": [55, 72, 486, 519], "sourcecatalog2pc": [55, 486], "sourcecatalog3fgl": [55, 74, 459, 486, 519], "sourcecatalog3fhl": [55, 75, 459, 486, 494, 510, 519], "sourcecatalog3hwc": [55, 76, 486, 519], "sourcecatalog3pc": [55, 486], "sourcecatalog4fgl": [55, 78, 439, 457, 486, 519], "sourcecataloggammacat": [55, 79, 459, 486, 519], "sourcecataloghgp": [55, 80, 81, 486, 519], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 486, 519], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 426, 486], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 396, "sources_flux_map": 465, "sourcetempl": 396, "south": [473, 474, 499], "south_z20_50h": [82, 151, 155, 156, 157, 166, 456, 464, 477, 480, 490, 499], "south_z40_50h": 499, "southaz": 499, "southern": 499, "space": [87, 91, 103, 106, 107, 111, 112, 206, 209, 275, 276, 293, 323, 341, 384, 385, 395, 401, 407, 414, 481, 487, 489, 492, 536, 560, 569], "span": 496, "spars": [195, 196, 197, 199, 204, 207, 208, 209, 414, 428, 437, 445, 474, 492], "sparsif": 409, "sparsifi": [196, 197, 199, 208, 209], "spatail": 136, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 103, 106, 107, 111, 112, 114, 115, 126, 128, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 218, 220, 223, 224, 227, 228, 235, 237, 240, 251, 253, 255, 261, 264, 265, 267, 269, 275, 277, 279, 290, 378, 380, 385, 391, 394, 397, 398, 399, 401, 403, 404, 409, 418, 426, 427, 429, 430, 431, 432, 434, 437, 445, 446, 448, 451, 452, 453, 455, 457, 459, 462, 464, 465, 466, 469, 470, 472, 473, 474, 475, 477, 479, 480, 481, 483, 486, 487, 488, 491, 494, 498, 500, 504, 508, 512, 513, 520, 522, 524, 525, 535, 536, 549, 581, 582, 583], "spatial_bin_s": [114, 115], "spatial_bin_size_min": [114, 115], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 117, 120, 136, 228, 235, 267, 277, 290, 400, 431, 457, 465, 469, 471, 472, 473, 474, 477, 478, 479, 483, 486, 487, 494, 495, 500, 509, 540, 541, 542, 543, 544, 545, 546, 547, 548], "spatial_model_point": 473, "spatial_model_registri": 495, "spatial_par": 408, "spatial_typ": 408, "spatial_width": [114, 115], "spatial_width_max": [114, 115], "spatialbackground": 396, "spatialcircleconfig": 16, "spatialconst": 396, "spatialgaussian": 396, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 275, 277, 279, 396, 408, 431, 446, 450, 486, 495, 509, 512, 519, 538, 581], "spatialtempl": 396, "spatiamodel": 164, "speak": 489, "spec": [80, 112, 385, 399, 442, 469, 474, 486, 499, 509], "spec_model_tru": 481, "special": [87, 91, 240, 385, 395, 397, 399, 400, 408, 411, 412, 426, 453, 466, 486, 487, 488, 494, 495], "specialis": [399, 405], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 103, 106, 107, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 186, 187, 192, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 214, 242, 277, 290, 374, 384, 385, 386, 388, 390, 395, 397, 399, 400, 401, 402, 403, 404, 406, 409, 410, 411, 412, 414, 416, 418, 419, 431, 434, 437, 439, 448, 449, 451, 457, 458, 461, 463, 464, 467, 469, 470, 475, 477, 480, 481, 487, 489, 490, 492, 493, 496, 497, 502, 504, 510, 520, 521, 522, 524, 526, 527, 528, 530, 535, 536, 537, 588], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 102, 103, 105, 106, 107, 111, 112, 121, 123, 126, 127, 128, 129, 131, 133, 134, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 227, 242, 251, 290, 312, 314, 318, 323, 372, 395, 402, 407, 410, 414, 419, 430, 433, 437, 453, 457, 463, 466, 467, 469, 472, 475, 477, 487, 488, 489, 490, 491, 492, 494, 495, 499, 509, 520, 522, 535], "spectra": [26, 111, 112, 129, 134, 149, 214, 262, 283, 290, 391, 394, 396, 398, 400, 404, 408, 414, 425, 429, 442, 446, 457, 458, 463, 464, 470, 474, 478, 480, 481, 487, 488, 489, 491, 495, 497, 512, 520, 522, 524, 583], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 102, 103, 106, 107, 111, 112, 121, 125, 126, 128, 129, 130, 133, 135, 136, 143, 164, 166, 169, 173, 218, 220, 221, 222, 225, 227, 229, 231, 232, 233, 235, 238, 242, 244, 245, 248, 249, 251, 252, 254, 256, 257, 258, 262, 263, 267, 268, 270, 271, 272, 273, 276, 277, 278, 280, 283, 284, 299, 339, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 418, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 460, 464, 465, 466, 469, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 491, 493, 494, 497, 498, 499, 500, 508, 509, 512, 513, 519, 520, 522, 523, 524, 525, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 548, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 585], "spectral_analysi": [455, 460, 461], "spectral_analysis_hli": [455, 460, 462], "spectral_analysis_rad_max": [455, 460, 463], "spectral_cub": 438, "spectral_index": [19, 20, 26, 52, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "spectral_index_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 451], "spectral_irf_model": 396, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 111, 112, 117, 120, 121, 125, 130, 134, 135, 136, 143, 164, 166, 169, 173, 214, 227, 235, 249, 251, 267, 277, 290, 400, 403, 407, 408, 409, 413, 434, 453, 456, 457, 458, 459, 461, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 494, 495, 497, 500, 509, 510, 522, 531, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "spectral_model1": 480, "spectral_model2": 480, "spectral_model_pwl": 473, "spectral_model_registri": 495, "spectral_par": 408, "spectral_point": 401, "spectral_typ": 408, "spectralbackground": 396, "spectralbackgroundmodel": 397, "spectralcompoundmodel": 396, "spectralconst": 396, "spectralevalu": 396, "spectralexponentialcutoffpowerlaw3fgl": 404, "spectralgaussian": [396, 429], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 102, 121, 125, 126, 128, 130, 135, 143, 164, 166, 169, 173, 221, 222, 225, 227, 229, 231, 232, 233, 235, 238, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 267, 268, 271, 272, 273, 276, 277, 280, 283, 396, 397, 400, 403, 409, 434, 437, 444, 451, 453, 486, 495, 509, 510, 519, 538, 581], "spectralregion": 399, "spectraltempl": 396, "spectroscopi": [453, 455, 479, 482, 504, 533], "spectrum": [19, 20, 26, 72, 76, 98, 100, 102, 103, 106, 107, 108, 111, 112, 126, 128, 133, 135, 140, 166, 169, 174, 178, 182, 183, 196, 197, 199, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 284, 293, 299, 382, 391, 396, 397, 400, 401, 404, 405, 406, 418, 428, 429, 430, 431, 433, 437, 439, 442, 443, 444, 445, 446, 448, 450, 453, 455, 458, 459, 460, 462, 469, 470, 473, 474, 475, 480, 485, 486, 487, 493, 495, 499, 500, 504, 508, 510, 512, 520, 524, 529, 537, 551, 554, 555, 557, 558, 562, 563, 565, 566, 567, 568, 584], "spectrum_analysi": 461, "spectrum_dataset": [149, 397, 481, 487], "spectrum_dataset_1": 397, "spectrum_dataset_2": 397, "spectrum_dataset_empti": [481, 491], "spectrum_dataset_mak": [481, 491], "spectrum_dataset_on_off": 481, "spectrum_fitting_with_sherpa": 405, "spectrum_mak": 456, "spectrum_simul": [405, 455, 460, 464], "spectrumanalysisiact": [401, 430, 444], "spectrumdataset": [98, 99, 100, 103, 106, 107, 112, 133, 135, 149, 177, 178, 182, 183, 235, 406, 428, 429, 430, 431, 432, 433, 434, 437, 440, 456, 458, 461, 463, 464, 471, 479, 480, 481, 483, 489, 491, 497, 533, 585], "spectrumdatasetmak": [174, 431, 437, 456, 458, 461, 463, 464, 471, 479, 480, 481, 483, 491, 533], "spectrumdatasetonoff": [98, 106, 108, 109, 111, 134, 135, 149, 177, 178, 214, 290, 382, 400, 428, 429, 430, 432, 433, 449, 450, 451, 456, 457, 458, 461, 462, 464, 470, 471, 478, 481, 483, 487, 488, 489, 491, 497, 520, 522, 585], "spectrumdatasetonoffstack": 430, "spectrumdatasetsonoff": 397, "spectrumenergygroup": 445, "spectrumevalu": 433, "spectrumextract": [400, 428, 431, 444], "spectrumfit": [428, 444, 445, 446], "spectrumobserv": [397, 428, 444], "spectrumobservationlist": [428, 443], "spectrumobservationstack": 443, "spectrumonoffdataset": 400, "spectrumresult": 428, "spectrumsimul": [429, 443, 446], "spectrumstack": 445, "spectrumstat": 429, "specutil": 399, "speed": [136, 312, 388, 414, 419, 429, 431, 439, 445, 446, 453, 489], "spell": [390, 524], "spend": [398, 405], "spent": [392, 491], "sphere": [47, 340, 425, 427, 536, 541, 542, 545], "spherepointpick": 340, "spheric": [47, 385, 427, 536, 582], "sphericalcircleskyregion": [404, 481, 510], "sphinx": [388, 392, 405, 416, 428, 432, 439, 445, 446, 448, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "sphinx_gallery_conf": 416, "sphinx_gallery_thumbnail_numb": [386, 457, 461, 463, 465, 467, 472, 475, 490, 550], "sphinxext": 386, "spill": 491, "spin": [50, 51, 54, 429, 516], "spir": [427, 446], "spiral": [33, 34, 38, 45, 441], "spiralarm": [33, 38, 45, 445, 514], "spiralarm_index": [33, 34, 38], "spirit": 411, "split": [19, 20, 87, 91, 92, 117, 120, 126, 128, 196, 197, 199, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 391, 393, 395, 397, 399, 400, 404, 406, 408, 414, 418, 434, 452, 479, 495, 513, 589], "split_by_axi": [196, 197, 199, 205, 208, 209], "split_template_model": [117, 120], "sporad": 412, "spot": 385, "spread": [82, 88, 101, 157, 166, 169, 385, 407, 434, 456, 465, 490, 529, 583], "spring": [395, 447], "sprint": [393, 394, 398, 401, 402, 403, 404, 406], "spuriou": 144, "sqrt": [19, 20, 30, 31, 32, 67, 102, 103, 106, 107, 111, 112, 121, 126, 128, 131, 136, 196, 197, 199, 201, 205, 208, 209, 212, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 291, 300, 324, 325, 326, 397, 458, 461, 465, 467, 469, 475, 477, 481, 484, 486, 489, 491, 492, 494, 500, 508, 509, 510, 522, 542, 543, 546, 547, 557, 586], "sqrt_space": [404, 431], "sqrt_t": [121, 125, 126, 128, 136, 144, 145, 149, 292, 294, 378, 409, 422, 434, 458, 461, 462, 465, 467, 469, 471, 481, 486, 487, 488, 493, 501, 508, 510, 522, 584, 586], "sqrt_ts_min": [149, 461], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 125, 126, 127, 128, 130, 136, 465, 475, 478, 479, 486, 487, 488, 508, 510], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 103, 106, 107, 126, 127, 153, 154, 155, 161, 166, 169, 172, 193, 207, 209, 277, 297, 400, 403, 434, 493, 497, 512, 522, 536, 584, 585, 586, 587], "squash": [155, 194, 195, 198, 200, 201, 204, 206, 207, 451, 456, 467, 487, 492], "squeez": [456, 490], "sr": [150, 151, 152, 163, 194, 195, 204, 207, 224, 279, 283, 456, 464, 466, 469, 471, 477, 480, 486, 487, 490, 492, 495, 499, 500, 529, 540, 548], "src": [398, 457, 472, 520], "src_above_bkg": 472, "src_event": [473, 474], "src_posit": [473, 474], "srcmap": [195, 196, 197, 199, 208, 209, 492], "srlbm6xj": 483, "ssc": [58, 60, 61, 62, 64, 65, 101, 252, 405, 563], "ssc_model": 252, "st": [53, 489, 500], "stabil": [19, 20, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 410, 477], "stabl": [11, 87, 91, 204, 214, 312, 392, 393, 394, 401, 402, 405, 410, 415, 416, 417, 419, 431, 432, 433, 439, 444, 446, 448, 489, 521], "stack": [16, 83, 86, 92, 100, 102, 103, 105, 106, 107, 111, 112, 125, 126, 128, 137, 146, 154, 155, 161, 166, 169, 172, 196, 197, 198, 199, 204, 205, 208, 209, 212, 218, 220, 277, 355, 385, 397, 400, 401, 407, 412, 427, 430, 431, 434, 437, 442, 443, 448, 449, 451, 453, 457, 458, 462, 466, 470, 471, 478, 481, 487, 489, 491, 496, 497, 508, 509, 521, 522, 531, 534], "stack_dataset": [172, 481, 491], "stack_reduc": [100, 149, 214, 430, 458, 461, 463, 469, 470, 471, 481, 487, 489, 522], "stacked_dataset": [471, 472], "stacked_fit": 461, "stacked_on_off": 467, "stackedobscubemak": 391, "stackedobsimagemak": 391, "stackoverflow": 352, "stage": [388, 401, 467, 469, 480, 487, 520, 583], "stai": [397, 415], "stand": 390, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 197, 209, 214, 236, 284, 293, 311, 367, 368, 385, 386, 388, 390, 394, 396, 397, 398, 401, 403, 409, 411, 412, 414, 422, 429, 430, 446, 452, 456, 457, 462, 464, 467, 470, 472, 474, 477, 479, 480, 483, 485, 489, 492, 495, 496, 497, 499, 502, 504, 508, 520, 523, 528, 536, 582, 583, 584], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 310, 496], "standardis": [357, 358, 370, 445], "standardise_unit": [357, 371], "standpoint": 385, "stapel": [452, 453], "star": [36, 40, 229], "starmap": [328, 332, 333], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 133, 144, 206, 226, 227, 234, 239, 241, 242, 243, 251, 259, 266, 278, 281, 385, 386, 388, 390, 392, 393, 394, 395, 398, 399, 401, 402, 410, 411, 413, 414, 415, 416, 420, 421, 422, 423, 425, 430, 439, 442, 443, 444, 445, 446, 451, 453, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 469, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 488, 492, 495, 499, 500, 501, 504, 508, 510, 511, 524, 528, 582], "start_po": [130, 345, 475], "startswith": 385, "stat": [6, 100, 102, 106, 112, 126, 128, 129, 130, 133, 134, 136, 214, 215, 217, 219, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 378, 385, 397, 405, 413, 414, 416, 422, 429, 431, 432, 433, 434, 437, 443, 446, 447, 448, 452, 453, 458, 459, 461, 462, 463, 465, 467, 469, 470, 471, 472, 475, 479, 481, 483, 484, 488, 489, 497, 500, 508, 509, 522, 584, 585, 586], "stat_arrai": [99, 102, 103, 106, 107, 111, 112, 413, 453], "stat_contour": 214, "stat_kwarg": 102, "stat_max": [292, 294], "stat_nul": [126, 128, 129, 130, 133, 134, 136, 292, 294, 452, 465, 475, 479, 488, 522], "stat_per_bin": 397, "stat_profil": [214, 457, 489, 497, 524], "stat_scan": [102, 126, 128, 129, 130, 133, 134, 136, 137, 146, 214, 291, 453, 457, 461, 479, 488, 489, 497, 522], "stat_sum": [99, 100, 102, 103, 106, 107, 111, 112, 413, 414, 450, 451, 469, 480, 487, 494, 524], "stat_sum_no_prior": 414, "stat_surfac": [214, 434, 524], "stat_typ": [102, 103, 106, 107, 111, 112, 432, 461, 469, 480, 487, 494], "state": [16, 45, 47, 206, 214, 385, 391, 395, 397, 401, 405, 407, 409, 414, 457, 462, 508, 529, 550], "stateless": 412, "statement": [385, 388, 392, 450, 452, 513], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 110, 121, 125, 126, 128, 129, 130, 133, 134, 136, 157, 165, 176, 182, 183, 195, 196, 197, 199, 205, 206, 208, 209, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 256, 257, 258, 259, 264, 265, 266, 268, 271, 272, 273, 278, 280, 281, 282, 382, 393, 396, 416, 428, 445], "staticmethod": [396, 408, 413, 414, 495, 497], "stationari": 414, "statist": [6, 19, 20, 26, 79, 99, 100, 102, 103, 106, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 136, 145, 149, 176, 214, 216, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 280, 290, 291, 292, 294, 295, 296, 301, 308, 309, 397, 400, 403, 404, 405, 407, 413, 428, 432, 433, 434, 437, 439, 451, 452, 456, 457, 462, 464, 465, 466, 467, 469, 471, 475, 477, 478, 480, 481, 484, 487, 489, 491, 497, 508, 509, 520, 522, 524, 531, 534, 582, 583], "statu": [19, 20, 26, 126, 128, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 385, 388, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 447, 452, 494, 495], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 293, 311, 464, 484, 500], "stddev": 68, "stderr": 385, "stdev": 414, "stdout": [320, 385], "steadi": 457, "steep": 464, "stefan": [441, 452, 453], "step": [19, 20, 26, 125, 129, 133, 134, 136, 214, 215, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 385, 388, 391, 392, 395, 396, 397, 399, 400, 401, 403, 406, 410, 413, 414, 415, 416, 422, 439, 446, 447, 451, 456, 461, 463, 466, 469, 471, 472, 473, 474, 479, 480, 487, 488, 489, 491, 495, 497, 508, 509, 510, 524, 532, 537], "stepprior": 413, "stepsampl": 414, "stepsiz": 171, "steradian": 204, "stewart": [136, 303, 465, 583], "stewart2009": [136, 583, 586], "stick": [388, 408, 427, 446, 489, 583], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 393, 395, 398, 399, 402, 404, 405, 406, 409, 410, 412, 414, 415, 416, 444, 445, 446, 495, 497, 510, 522, 546, 547, 584], "stipul": 411, "stone": [385, 405], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 133, 136, 206, 226, 227, 234, 239, 241, 242, 243, 251, 259, 266, 278, 281, 395, 422, 451, 462, 466, 467, 469, 479, 481, 483, 489, 500, 508], "storag": [82, 524], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 126, 127, 128, 131, 133, 164, 177, 178, 196, 197, 199, 205, 208, 209, 214, 215, 217, 219, 227, 251, 368, 385, 386, 388, 391, 393, 394, 395, 397, 398, 401, 403, 407, 409, 411, 412, 416, 434, 437, 438, 453, 458, 463, 464, 473, 474, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 496, 499, 500, 501, 502, 510, 520, 521, 524, 529, 530, 531, 536, 537, 560, 581, 582, 584, 588], "store_per_ob": 401, "store_trac": [214, 489], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 123, 125, 126, 127, 128, 129, 131, 133, 134, 136, 137, 139, 140, 141, 142, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 173, 176, 177, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 312, 324, 333, 348, 349, 350, 354, 367, 368, 370, 374, 378, 379, 381, 399, 412, 461, 463, 483, 491, 495], "str3": [87, 91], "straight": [386, 418, 524], "straightforward": [416, 587], "strang": 385, "strategi": [290, 385, 392, 399, 451, 489, 587], "stream": 385, "streil": [413, 450, 451, 452], "strength": [51, 54, 413, 560], "stretch": [196, 197, 199, 205, 208, 209, 375, 376, 380, 465, 469, 475, 477, 491, 492, 494, 500, 508, 509, 510], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 103, 105, 106, 107, 127, 154, 155, 161, 166, 169, 172, 201, 207, 209, 277, 453], "strict_bound": 201, "strictli": [16, 84, 90, 105, 127, 201], "strike": 520, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 105, 126, 127, 128, 129, 130, 133, 136, 157, 163, 165, 167, 172, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 217, 219, 227, 251, 312, 330, 374, 385, 398, 399, 402, 404, 411, 412, 425, 429, 437, 439, 462, 486, 493, 495, 508, 536, 537], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 398, 405, 461], "stronger": 497, "strongli": [299, 400, 402, 411, 437, 466, 489, 497], "structur": [87, 91, 207, 307, 389, 390, 391, 394, 396, 398, 401, 405, 408, 411, 412, 424, 430, 431, 433, 437, 440, 452, 453, 455, 475, 487, 488, 491, 492, 493, 495, 504, 511, 512, 521, 525, 536, 537, 584], "stuck": 584, "student": 388, "studi": [46, 283, 307, 398, 401, 409, 419, 446, 453, 458, 459, 470, 471, 472, 475, 477, 479, 480, 483, 489, 492, 495, 499, 514, 524, 533, 585], "stuff": [386, 416, 524], "stuff1": 385, "stuff2": 385, "style": [87, 91, 102, 196, 197, 199, 205, 208, 209, 382, 388, 394, 411, 441, 443, 469, 477, 490, 492, 508, 509, 524, 537], "su1wvt2p": 483, "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 111, 112, 117, 120, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 196, 197, 198, 199, 201, 205, 206, 208, 209, 212, 385, 388, 392, 394, 395, 399, 404, 405, 406, 407, 412, 416, 425, 427, 431, 433, 434, 442, 444, 445, 471, 473, 488, 491, 493, 495, 501, 502, 520, 523, 524, 532, 582, 584, 588], "subcategori": 414, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 127, 312, 399, 443, 446, 495, 497], "subcompon": [67, 80], "subfold": [393, 437], "submit": [390, 411], "submodul": [393, 427, 428, 433, 492, 510, 522], "subok": 312, "subpackag": [406, 412, 430, 437, 441], "subplot": [66, 67, 196, 197, 199, 205, 208, 209, 456, 458, 459, 461, 462, 463, 464, 465, 467, 469, 470, 471, 475, 478, 480, 481, 483, 485, 488, 489, 490, 492, 493, 494, 496, 497, 509, 524, 526, 533, 543, 547, 550], "subplot_kw": [465, 467, 471, 481, 493, 533], "subplots_adjust": [479, 484, 485, 486], "subsect": [405, 492], "subsequ": [298, 394], "subset": [82, 83, 87, 91, 129, 133, 136, 252, 412, 441, 442, 471, 481, 494, 499, 501, 523, 582], "subspac": 399, "substanti": [87, 91], "substitut": 585, "substr": [227, 251], "subtract": 463, "succeed": 126, "success": [16, 84, 90, 102, 105, 126, 127, 128, 129, 130, 133, 134, 136, 213, 214, 215, 216, 413, 414, 415, 437, 458, 459, 461, 462, 463, 465, 469, 470, 471, 475, 478, 479, 481, 483, 488, 489, 494, 500, 508, 509, 548], "successfulli": [102, 415, 458, 459, 461, 462, 463, 469, 470, 471, 480, 481, 483, 488, 489, 500, 508, 509], "sudo": 419, "suffer": [402, 481], "suffic": 480, "suffici": [388, 391, 398, 411, 451, 524], "suffix": [102, 126, 386, 396, 408, 495, 536, 538], "suggest": [388, 390, 392, 395, 399, 405, 407, 409, 413, 465, 473, 474, 524, 584], "suit": [197, 385, 537], "suitabl": 197, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 103, 106, 107, 111, 112, 128, 129, 130, 132, 133, 134, 136, 137, 138, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 283, 292, 294, 296, 381, 385, 395, 396, 398, 407, 409, 413, 428, 452, 465, 469, 473, 481, 485, 487, 497, 500, 508, 509, 510, 520, 530, 583, 585], "sum_": 520, "sum_band": [196, 197], "sum_i": 131, "sum_j": 520, "sum_k": 520, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [196, 197, 199, 205, 208, 209, 373, 446, 467, 469, 475, 481, 487, 491, 493, 494, 500, 509], "sum_over_energy_group": [125, 129, 136, 465, 471, 475], "summar": [394, 512], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 320, 324, 334, 359, 372, 386, 388, 405, 424, 458, 462, 479, 480, 487, 499, 508, 524], "summaris": [385, 390, 392, 405], "summat": [292, 294, 391], "summer": 393, "sun": 41, "sunpi": [402, 405, 406], "super": [195, 197, 271, 272, 273, 455, 463, 473, 502, 538, 570, 572], "superexpcutoffpowerlaw3fglspectralmodel": [262, 408, 495, 566], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 262, 495, 567], "superexpcutoffpowerlaw4fglspectralmodel": [262, 408, 495, 568], "superflu": [395, 481], "supernova": [28, 52, 458, 472, 495, 514, 515], "superpixel": 195, "supersed": [195, 196, 197, 207, 208, 209], "supervisor": 401, "suppli": [19, 20, 26, 87, 91, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 457, 479, 480], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 106, 107, 111, 112, 116, 128, 148, 159, 164, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 214, 227, 251, 384, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 414, 419, 423, 426, 427, 429, 430, 431, 432, 433, 434, 437, 439, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 462, 464, 466, 469, 471, 477, 480, 485, 486, 487, 492, 497, 499, 500, 501, 502, 508, 523, 529, 536, 537, 579, 581, 582, 584], "suppos": [242, 278, 390, 397, 583, 585], "suppress": [153, 154, 158, 524], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385, 388, 390, 401, 415, 461, 478, 492, 524, 584], "surfac": [28, 30, 35, 36, 39, 40, 45, 214, 267, 283, 338, 404, 434, 489, 495, 514], "surface_brightness_err": 486, "surprisingli": 399, "surround": [52, 330, 385], "survei": [63, 67, 129, 229, 392, 395, 405, 422, 455, 499, 504, 505, 514, 519, 524, 583], "survey_map": [455, 505, 506], "suspect": 586, "suss": [394, 411], "svg": 385, "swap": 195, "swept": 52, "swh": 411, "swhid": 411, "switch": [104, 110, 290, 385, 392, 395, 415, 439, 443], "switcher": 415, "sy": [385, 421], "syllabl": 524, "symbol": 493, "symmetr": [103, 106, 107, 111, 112, 125, 134, 136, 184, 193, 197, 237, 385, 396, 427, 439, 442, 459, 480, 491, 497, 499, 512, 522, 530, 541, 542, 586], "symmetri": [197, 427], "sync": 446, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 411, "synchrotron": [252, 433, 560], "syntact": [87, 91], "syntax": [16, 87, 91, 386, 401, 404, 431, 448, 584], "synthesi": [514, 515], "synthet": 425, "system": [11, 83, 87, 91, 114, 115, 151, 159, 160, 195, 196, 197, 199, 202, 204, 207, 208, 209, 227, 251, 385, 391, 396, 398, 402, 405, 406, 410, 411, 413, 419, 427, 445, 451, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 535, 536, 582, 584, 588], "systemat": [396, 409, 411, 412, 434, 461, 478, 491, 522, 583, 585], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 105, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 145, 146, 147, 148, 153, 193, 206, 227, 242, 246, 251, 290, 292, 293, 294, 310, 357, 361, 384, 385, 386, 388, 390, 392, 393, 395, 397, 399, 401, 402, 403, 404, 405, 408, 409, 410, 412, 414, 416, 417, 418, 420, 422, 434, 438, 441, 442, 443, 446, 451, 453, 456, 457, 458, 461, 466, 469, 471, 472, 475, 477, 478, 479, 481, 483, 484, 485, 486, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 512, 516, 517, 518, 520, 522, 524, 533, 571, 572, 573, 574, 575, 576, 577, 582, 584, 587, 588], "t0": [234, 259, 473, 479, 480, 483, 572, 576], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 298, 529, 572, 573, 574, 575, 576, 577, 585], "t_0": 576, "t_b": 585, "t_decai": [241, 574], "t_delta": [104, 110, 206, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281], "t_i": 298, "t_j": 520, "t_live": [83, 88], "t_max": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 398, 409, 483], "t_min": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 398, 409, 483], "t_observ": [83, 88], "t_r": 242, "t_ref": [234, 239, 241, 242, 243, 259, 266, 278, 450, 451, 473, 474, 480, 495, 572, 573, 574, 575, 576, 577, 578, 579], "t_rise": [241, 574], "t_start": [86, 521], "t_stop": [52, 86, 521], "ta": 293, "ta2": 293, "ta3": 293, "tab": [153, 390, 469, 475, 478, 488, 497, 533], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 472, "table_class": [87, 91], "table_compon": [67, 486], "table_filenam": 26, "table_format": 128, "table_from_row_data": 451, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 486], "table_model": [280, 408], "table_oth": 355, "tableau": 524, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [396, 447], "tablepsf": [406, 425, 427], "tablepsfcheck": 443, "tabul": 512, "tabular": [495, 569], "tackl": 394, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 196, 197, 199, 205, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 410, 413, 415, 434, 448, 490, 495, 497, 543, 547], "tail": [499, 584], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 103, 106, 107, 111, 112, 125, 151, 171, 173, 205, 207, 212, 214, 227, 251, 267, 360, 383, 385, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 409, 414, 416, 432, 433, 434, 437, 439, 447, 448, 450, 451, 452, 456, 458, 461, 463, 464, 473, 474, 475, 480, 481, 483, 488, 489, 491, 492, 493, 495, 496, 497, 499, 509, 510, 521, 524, 537, 553, 585, 586, 587], "taken": [15, 27, 87, 91, 103, 106, 107, 111, 112, 126, 128, 156, 164, 183, 189, 191, 205, 206, 209, 214, 301, 386, 390, 394, 398, 450, 457, 461, 469, 470, 481, 483, 488, 490, 493, 494, 499, 510, 520, 522, 533, 534, 586], "talk": [388, 390, 392, 402, 411], "tan": [197, 204, 399, 429, 461, 492, 500, 533], "tandem": 512, "tangent": [179, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279], "tangenti": [195, 537], "tar": [416, 499], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 103, 106, 107, 111, 112, 116, 121, 125, 127, 136, 154, 155, 166, 169, 186, 187, 191, 192, 196, 197, 199, 201, 205, 208, 209, 386, 391, 392, 398, 411, 414, 415, 443, 458, 463, 471, 479, 491, 493, 509], "target_nam": 533, "target_posit": [179, 458, 461, 463, 471, 478, 479, 483, 509], "target_radec": 88, "targetmetadata": [90, 127], "task": [333, 405, 409, 411, 412, 415, 416, 447, 462, 465, 491, 492, 500, 504, 508, 524, 532, 582, 584, 588], "task_nam": 333, "tast": 584, "tau": [26, 51, 54, 139, 302, 413, 485, 550], "tau_0": 51, "taul": [26, 485], "taur": [26, 485], "taylor": [52, 53], "tb00058": [138, 147], "tbc": 414, "tbd": 246, "tbl": [87, 91], "tdelta_precis": 307, "team": [390, 394, 402, 405, 407, 411, 424, 445], "technic": [387, 388, 390, 398, 405, 407, 409, 411, 414, 416, 466], "techniqu": [391, 400, 401, 403, 414, 458, 461, 469, 472, 491, 493, 501, 531, 534, 582], "tediou": 486, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 105, 156, 398, 399, 412, 418, 422, 423, 473, 478, 481, 496, 499, 500, 502], "tell": 463, "temp": [441, 474], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 105, 106, 112, 117, 120, 127, 173, 181, 195, 196, 197, 199, 200, 201, 207, 208, 209, 215, 227, 242, 251, 275, 276, 277, 278, 279, 280, 287, 289, 303, 306, 390, 396, 397, 401, 408, 434, 448, 451, 452, 455, 464, 465, 467, 474, 492, 493, 494, 495, 512, 533, 538, 549, 556, 559, 564, 570, 578], "template_diffus": [494, 500], "template_extrapol": 569, "template_model": 473, "template_noextrapol": 569, "templatelightcurvetemporalmodel": 448, "templatend": [275, 276, 495], "templatendspatialmodel": [261, 495], "templatendspectralmodel": [26, 262, 439, 450, 495], "templatenpredmodel": [247, 437], "templatephasecurvetemporalmodel": [274, 448, 453, 495, 578], "templatespatialmodel": [67, 261, 407, 408, 434, 448, 449, 451, 452, 453, 473, 494, 495, 500, 548], "templatespectralmodel": [227, 251, 262, 285, 408, 495, 500, 520, 556, 559, 564, 569], "templatetemporalmodel": 448, "tempo2": [481, 524], "tempor": [218, 220, 226, 227, 234, 239, 241, 242, 243, 251, 259, 266, 267, 274, 278, 281, 298, 396, 398, 408, 409, 430, 432, 433, 434, 439, 448, 450, 451, 452, 453, 455, 457, 459, 462, 464, 465, 469, 470, 471, 473, 476, 477, 483, 484, 486, 487, 488, 494, 500, 504, 508, 524, 525, 580, 581, 583], "temporal_model": [267, 398, 473, 474, 480, 495, 571, 572, 573, 574, 575, 576, 577, 578, 579], "temporal_model1": 480, "temporal_model2": 480, "temporal_model_map": 474, "temporal_model_registri": 495, "temporal_typ": 408, "temporalbackground": 396, "temporalmodel": [226, 234, 239, 241, 242, 243, 259, 266, 267, 278, 396, 409, 433, 448, 450, 451, 453, 538], "temporari": 504, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396], "ten": [391, 405], "tend": [385, 543], "tension": 484, "tensorflow": [403, 405], "tent": 415, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 243, 246, 304, 309, 388, 390, 392, 394, 395, 399, 402, 405, 410, 412, 414, 435, 439, 448, 457, 465, 489, 490, 584, 586, 587], "termin": [87, 91, 102, 401, 417, 418, 419, 420, 421, 458, 459, 461, 462, 463, 469, 470, 471, 481, 483, 488, 489, 500, 508, 509, 584], "terrier": [391, 394, 395, 396, 397, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 412, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "test": [6, 16, 84, 90, 94, 101, 102, 105, 117, 120, 123, 125, 126, 127, 128, 129, 130, 133, 134, 136, 145, 164, 166, 169, 196, 197, 199, 205, 208, 209, 242, 290, 291, 292, 294, 297, 342, 359, 360, 361, 362, 363, 364, 365, 386, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 410, 413, 415, 416, 426, 428, 429, 431, 433, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 451, 453, 458, 464, 465, 474, 477, 478, 479, 480, 483, 487, 488, 490, 522, 524, 528, 534, 578, 579, 583, 586], "test2": 480, "test_aeff3d": 490, "test_edisp": 490, "test_events_with_gti": 521, "test_gti": 521, "test_person_txt": 385, "test_plot": 385, "test_psf": 490, "test_someth": 385, "test_using_data_fil": 364, "test_using_scipi": 365, "testcod": 386, "testoutput": 386, "testpar": 413, "teststatisticnest": [451, 453], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 102, 103, 106, 107, 111, 112, 113, 118, 121, 126, 128, 129, 144, 145, 150, 151, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 267, 268, 270, 271, 272, 273, 276, 280, 283, 284, 310, 311, 332, 380, 386, 396, 408, 409, 412, 413, 422, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 518, 521, 522, 528, 529, 531, 533, 534, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582], "tevcat": [438, 486], "tevcat_nam": 71, "tevpi": 425, "tevtevtev1": 471, "tex": 386, "texliv": 386, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 106, 112, 126, 128, 136, 264, 265, 311, 348, 354, 374, 386, 393, 401, 411, 416, 462, 481, 490, 499, 508, 510, 541, 542, 543, 546, 547, 551, 567, 574, 584, 586], "textcolor": 374, "textkw": 374, "th": 201, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 135, 154, 155, 157, 158, 161, 165, 166, 167, 169, 173, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 290, 299, 363, 378, 385, 386, 388, 390, 391, 392, 395, 398, 399, 400, 403, 404, 409, 411, 412, 414, 416, 445, 448, 449, 450, 452, 456, 458, 469, 470, 473, 478, 479, 484, 489, 491, 493, 496, 497, 520, 537, 542, 543, 584, 586], "thank": [409, 431, 432, 437, 439, 453, 491, 524], "thaw": 494, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 105, 110, 114, 115, 127, 133, 140, 170, 278, 298, 332, 385, 386, 388, 390, 391, 392, 393, 394, 396, 399, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 423, 434, 437, 439, 451, 452, 458, 459, 463, 485, 487, 489, 493, 494, 495, 496, 497, 499, 502, 512, 521, 522, 524, 529, 536, 537, 582, 583, 584, 585, 586, 588], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 105, 127, 218, 220, 227, 251, 312, 385, 386, 388, 390, 392, 393, 399, 401, 404, 411, 412, 414, 415, 416, 422, 429, 445, 458, 459, 461, 464, 466, 469, 470, 472, 474, 478, 486, 487, 488, 489, 492, 493, 495, 497, 499, 501, 504, 509, 521, 524, 533, 584, 586], "theme": [439, 446, 453], "themselv": [87, 91, 401, 491, 493, 531], "theorem": [290, 522, 586], "theoret": 497, "therefor": [106, 391, 395, 398, 399, 400, 404, 406, 408, 414, 419, 437, 453, 458, 478, 481, 489, 492, 493, 496, 497, 501, 510, 522, 586, 587], "thereof": 396, "thermal": [19, 560, 583], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 157, 163, 165, 167, 171, 179, 193, 202, 313, 316, 385, 434, 463, 500, 510, 541, 542, 546, 547], "theta2": [183, 193, 383, 445], "theta2_axi": 502, "theta2_max": 383, "theta2_min": 383, "theta2_t": 502, "theta_0": [33, 38], "theta_squared_axi": [193, 502], "thew": 486, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 103, 104, 105, 106, 107, 110, 111, 112, 116, 121, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 140, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 178, 179, 180, 182, 184, 186, 187, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 290, 292, 294, 300, 312, 320, 330, 333, 336, 341, 342, 360, 363, 370, 372, 374, 375, 376, 380, 382, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 512, 513, 520, 521, 522, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588], "thick": 382, "thin": [56, 324], "thing": [385, 388, 390, 393, 399, 400, 401, 402, 405, 409, 416, 425, 444, 463, 466, 480, 481, 493, 500], "think": [390, 402, 403, 405], "third": [62, 63, 87, 91, 386, 437, 486, 489, 492, 504, 510, 519], "thjjgq8m": 495, "thoma": [411, 445], "thorough": [492, 512], "those": [15, 83, 182, 196, 197, 199, 205, 208, 209, 214, 218, 220, 227, 251, 320, 374, 385, 388, 390, 392, 394, 399, 401, 404, 405, 406, 407, 408, 410, 416, 417, 418, 420, 421, 431, 434, 478, 483, 489, 492, 493, 494, 496, 504, 510, 522, 524, 533, 588], "though": [15, 388, 393, 399, 400, 401, 403, 405, 462, 495, 508], "thought": [390, 399], "three": [87, 91, 164, 293, 385, 394, 397, 399, 411, 415, 453, 471, 473, 478, 484, 492, 497, 504, 529, 536, 583], "threshold": [67, 103, 107, 111, 121, 126, 127, 128, 136, 144, 145, 153, 154, 158, 171, 182, 206, 290, 374, 375, 376, 399, 427, 433, 434, 456, 461, 463, 465, 471, 475, 478, 486, 487, 489, 491, 493, 499, 508, 520, 522], "threshold_alpha": 171, "through": [41, 87, 91, 311, 312, 382, 388, 390, 398, 399, 405, 409, 410, 414, 419, 423, 437, 448, 457, 465, 474, 484, 489, 491, 492, 493, 494, 500, 501, 524, 529, 536, 583, 586], "throughout": [13, 392, 394, 395, 399, 401, 444, 486], "throught": 475, "thrown": 495, "thu": [385, 392, 399, 402, 403, 405, 441, 456, 457, 466, 467, 471, 473, 488, 581, 587], "thumbnail": 437, "thvcdqxg": 483, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197, 394, 480], "tibaldo": 442, "tick": [450, 451], "tick_param": 456, "ticker": 374, "tight_layout": [479, 489, 497, 543, 547], "tightli": 404, "tikonov": 413, "tild": [195, 207], "tile": [195, 197], "tilt": [257, 277, 396, 407, 408, 413, 426, 432, 466, 469, 470, 473, 474, 477, 487, 495, 500, 508, 509, 531, 537, 544, 564, 569], "tilt_prior": 413, "tim": 452, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 126, 127, 128, 133, 136, 139, 140, 148, 172, 178, 189, 191, 196, 197, 198, 199, 200, 205, 206, 208, 209, 214, 217, 219, 226, 229, 234, 239, 241, 242, 243, 259, 266, 267, 278, 281, 293, 298, 302, 307, 342, 362, 366, 367, 368, 369, 385, 386, 388, 390, 391, 392, 393, 395, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 414, 415, 416, 418, 422, 426, 427, 430, 431, 432, 434, 437, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 457, 461, 463, 464, 465, 467, 469, 471, 472, 474, 475, 477, 478, 481, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 508, 509, 510, 516, 517, 518, 520, 521, 522, 524, 529, 533, 537, 542, 543, 550, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584, 585, 586, 587], "time1": 302, "time2": 302, "time_axi": [196, 197, 199, 200, 205, 208, 209, 293, 474, 483, 492, 537], "time_bin": 400, "time_bin_end": 400, "time_bin_s": 400, "time_bin_start": 400, "time_bound": 206, "time_box": 91, "time_column": 409, "time_delta": [86, 206, 366, 369], "time_edg": [206, 484, 492], "time_filt": 89, "time_format": [128, 206, 451, 480], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 133, 462, 466, 467, 469, 474, 478, 479, 483, 508], "time_map_axi": [206, 492], "time_map_axis_contigu": 492, "time_max": [100, 126, 128, 206, 399, 400, 401, 474, 478, 483, 486, 492], "time_mid": [206, 484], "time_min": [100, 126, 128, 206, 399, 400, 401, 474, 478, 483, 486, 492], "time_rang": [91, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 474, 571, 572, 573, 574, 575, 576, 577, 578, 579], "time_ref": [83, 85, 86, 91, 94, 200], "time_ref_default": 86, "time_ref_from_dict": 588, "time_relative_to_ref": 588, "time_resolved_spectroscopi": [455, 482, 483], "time_seri": 293, "time_start": [85, 86, 91, 400], "time_step": 400, "time_stop": [85, 86, 91, 400], "time_sum": [86, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281], "timedelta": [87, 91, 94, 206, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 342, 366, 369, 588], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [390, 392, 445], "timemapaxi": [128, 148, 198, 200, 437, 452, 453, 479, 480, 483, 484], "timerangeconfig": 16, "timeref": 473, "timescal": [140, 234, 299, 410, 484], "timeseri": 400, "timesi": [94, 449, 451, 473], "timestamp": 385, "timeunit": 473, "timmer": [293, 453], "timmer1995": 293, "tini": [471, 499], "tip": 524, "titl": [390, 475, 485], "tiziani": 443, "tke": 500, "tm": [87, 91], "tmax": 400, "tmid": [88, 451, 471, 491, 496, 509], "tmin": 400, "to_2d": [151, 502], "to_3d": [150, 450, 452], "to_bands_hdu": [194, 195, 204, 207], "to_binsz": [195, 204, 207, 437], "to_binsz_wc": 204, "to_contigu": [206, 492], "to_counts_hdulist": 109, "to_cub": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 434, 467, 537], "to_dict": [19, 20, 26, 99, 102, 103, 106, 107, 111, 112, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 412, 497], "to_edisp_kernel": [158, 453, 528], "to_edisp_kernel_map": [155, 437, 528], "to_energy_dependent_table_psf": 445, "to_even_npix": 207, "to_fits_head": 85, "to_fram": 202, "to_gti": [206, 452], "to_hdu": [196, 197, 208, 209], "to_hdulist": [103, 106, 107, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 196, 197, 203, 204, 205, 208, 209, 492], "to_head": [84, 90, 105, 127, 195, 198, 200, 201, 206, 207, 412], "to_html": 385, "to_imag": [103, 106, 107, 111, 112, 153, 154, 164, 166, 169, 194, 195, 204, 207, 407, 431, 432, 456, 467, 471, 487, 500, 534, 537], "to_json": [16, 84, 90, 105, 127], "to_map": [126, 128], "to_map_dataset": [106, 112], "to_mask": [103, 106, 107, 111, 112, 485], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 437, 486], "to_node_typ": 201, "to_nsid": [195, 197], "to_odd_npix": 207, "to_panda": [87, 91], "to_parameters_t": [227, 251, 457, 458, 461, 462, 463, 466, 469, 479, 489, 497, 509], "to_pixel": [399, 461, 471, 485, 491, 495, 533, 541, 542, 543], "to_polygon": 399, "to_psf3d": [157, 165, 167], "to_python": [16, 84, 90, 105, 127], "to_region": [223, 224, 227, 228, 237, 240, 251, 255, 264, 265, 279, 399, 431, 495, 541, 542, 543], "to_region_map_dataset": [103, 106, 107, 111, 112, 487], "to_region_nd_map": [154, 155, 161, 166, 169, 197, 205, 209, 434, 437, 500], "to_region_nd_map_histogram": [209, 451], "to_sed_typ": 409, "to_sherpa": [431, 445, 446], "to_spectrum": 437, "to_spectrum_dataset": [100, 103, 106, 107, 111, 112, 407, 430, 432, 481, 487, 497], "to_st": 451, "to_str": [451, 456], "to_swap": [195, 196, 197], "to_tabl": [102, 128, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 205, 206, 218, 220, 242, 437, 453, 457, 459, 461, 462, 471, 475, 477, 478, 480, 486, 488, 495, 510, 522], "to_table_hdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 492], "to_table_psf": 443, "to_template_sky_model": [227, 251], "to_template_spectral_model": [227, 251, 408], "to_unit": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "to_wc": [196, 197], "to_wcs_geom": [195, 204, 537], "to_wcs_til": [195, 197], "to_yaml": [16, 84, 90, 105, 127, 227, 251, 396, 412, 495, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "tob": 462, "todai": 411, "todo": [13, 79, 99, 164, 280, 386, 409, 428, 499, 514, 515, 588], "tof": 163, "togeth": [100, 103, 106, 111, 112, 129, 133, 227, 251, 382, 385, 398, 402, 405, 417, 429, 457, 467, 469, 470, 475, 479, 487, 489, 491, 494, 495, 496, 497, 502, 509, 520, 521, 584], "tol": [290, 489], "toler": [86, 100, 133, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 362, 489], "tolist": 489, "tomato": 457, "toml": 434, "ton": [299, 499], "too": [385, 390, 391, 414, 436, 437, 450, 451, 452, 489, 493], "took": [410, 414], "tool": [6, 13, 196, 197, 199, 208, 209, 384, 388, 392, 394, 396, 398, 401, 402, 405, 411, 423, 431, 442, 445, 446, 472, 475, 480, 487, 489, 492, 496, 499, 500, 502, 512, 524, 558, 582, 583], "toolbox": [401, 442], "top": [111, 112, 372, 381, 385, 390, 401, 405, 407, 419, 445, 463, 465, 471, 475, 478, 480, 484, 486, 491, 510, 524, 537, 582, 584, 588], "top_five_ts_3fhl": 510, "tophat2dkernel": 125, "topic": [390, 394, 405, 413, 510], "total": [51, 67, 99, 102, 103, 106, 107, 111, 112, 129, 130, 133, 134, 143, 176, 191, 195, 215, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 309, 393, 409, 413, 418, 420, 452, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 497, 498, 500, 503, 505, 507, 508, 509, 510, 511, 514, 520, 524, 529, 539, 549, 560, 570, 580, 583], "total_jfact": 485, "total_jfact_decai": 485, "total_model": 396, "total_obstim": 491, "total_stat": [215, 216, 414, 457, 483, 489, 585], "touch": [86, 426], "tour": 504, "toward": [330, 392, 399, 405, 447], "tox": [349, 386, 388, 448, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 548, 556, 572], "tqdm": 524, "trace": [214, 215, 216, 434, 489], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385], "track": [85, 94, 385, 394, 400, 411, 439, 494], "tracker": [388, 399, 415, 453], "tradit": 414, "tradition": [414, 495, 585], "train": 410, "traitlet": [401, 412], "traittyp": 412, "transfer": 412, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 164, 198, 200, 201, 206, 207, 227, 251, 314, 318, 341, 346, 385, 399, 401, 409, 413, 414, 425, 427, 443, 446, 465, 471, 491, 497, 536, 541, 542, 588], "transit": [27, 375, 376, 392, 426, 427, 445, 501], "transit_map": 501, "transit_numb": 501, "transitsmap_crab": 501, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 401, 522], "transpar": 400, "transport": 492, "transpos": 446, "trapezoid": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 286, 323], "trapz": 323, "trapz_loglog": 432, "trash": 428, "travi": [431, 433, 437], "treat": [95, 418, 450, 451, 461, 473, 587], "treatment": [437, 461, 469, 583], "trend": 473, "tri": [77, 393, 399], "tributor": 411, "tricki": 399, "trigger": [363, 385, 415, 501], "trim": [103, 106, 107, 154, 155, 161, 166, 169, 172, 207, 209, 277], "tripl": 157, "trivial": 392, "troubl": 584, "troubleshoot": [418, 419, 420], "trough": 484, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 133, 134, 136, 137, 143, 146, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 182, 183, 186, 187, 189, 190, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 309, 312, 320, 321, 324, 342, 354, 356, 373, 378, 382, 385, 391, 398, 399, 400, 401, 408, 409, 412, 414, 428, 432, 433, 444, 446, 447, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 501, 506, 508, 509, 510, 514, 520, 522, 524, 529, 534, 536, 537, 540, 541, 542, 545, 546, 548, 569, 583, 586], "truelov": 53, "truncat": [136, 330, 437], "truncation_valu": [295, 301], "trust": [16, 84, 90, 105, 127], "trustworthi": 413, "truth": 497, "try": [16, 77, 84, 90, 105, 127, 196, 197, 199, 205, 208, 209, 385, 386, 395, 399, 405, 415, 416, 422, 427, 459, 461, 463, 473, 474, 478, 486, 489, 492, 510, 584], "ts2": 293, "ts3": 293, "ts_image_estim": 471, "ts_scan": [126, 128], "ts_threshold": [148, 290], "ts_threshold_ul": [481, 522], "ts_to_sigma": [472, 586], "tsimageestim": 445, "tsmap": 453, "tsmap_est": 378, "tsmapestim": [122, 146, 147, 378, 406, 409, 432, 433, 435, 437, 451, 453, 465, 471, 524], "tstart": [88, 91, 398, 400, 464, 473, 477, 479, 480, 483, 499], "tstop": [88, 398, 400, 464, 473, 477, 479, 483, 499], "tt": [86, 94, 367, 368, 411, 474, 479, 483, 588], "tth_sec3": 201, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 102, 103, 105, 106, 107, 111, 112, 127, 131, 136, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 177, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 280, 292, 294, 297, 324, 334, 341, 385, 492, 536], "turn": [83, 88, 386, 388, 399, 499, 581], "tutori": [82, 99, 123, 133, 135, 181, 385, 388, 389, 394, 397, 398, 399, 400, 401, 402, 403, 406, 414, 416, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 443, 444, 445, 446, 447, 448, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 500, 502, 503, 505, 507, 508, 509, 510, 511, 524, 525, 527, 536, 581, 584], "tutorials_jupyt": [415, 504], "tutorials_python": 504, "tweak": [401, 437, 453, 492], "twice": [125, 536, 587], "twinx": 456, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 102, 103, 106, 107, 111, 112, 139, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 172, 177, 179, 195, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 342, 352, 374, 379, 382, 384, 385, 386, 388, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 409, 410, 411, 413, 415, 416, 418, 439, 445, 447, 451, 453, 462, 463, 469, 470, 472, 475, 480, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 499, 501, 508, 509, 514, 520, 521, 522, 524, 533, 536, 537, 552, 586, 587], "txt": [128, 410, 412, 415, 494, 500], "tyler": 439, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 102, 103, 105, 116, 125, 126, 127, 128, 130, 136, 170, 176, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 312, 342, 391, 394, 395, 396, 397, 399, 400, 401, 404, 408, 409, 411, 413, 416, 417, 422, 430, 437, 443, 444, 445, 451, 453, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 508, 509, 510, 512, 524, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583, 584], "typeerror": [16, 84, 90, 105, 127, 312, 399, 409, 413], "typic": [126, 391, 394, 396, 403, 407, 408, 409, 410, 412, 415, 418, 419, 458, 463, 467, 475, 477, 478, 479, 486, 487, 488, 490, 493, 495, 496, 512, 519, 520, 521, 529, 533, 582, 583], "typing_extens": [16, 84, 90, 105, 127], "typo": [385, 423, 449, 450, 453], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 103, 106, 107, 111, 112, 117, 120, 121, 126, 128, 130, 132, 136, 144, 145, 153, 155, 164, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 284, 293, 310, 311, 312, 332, 380, 385, 388, 392, 393, 394, 400, 401, 402, 403, 408, 409, 412, 413, 426, 427, 428, 445, 446, 447, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 514, 521, 522, 524, 526, 531, 533, 534, 537, 541, 543, 544, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578], "u03c3": 472, "u18": [33, 38], "u_": 483, "uc": [87, 91], "ufunc": [196, 197, 199, 205, 208, 209, 463, 483], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 121, 139, 156, 248, 283, 284, 293, 300, 302], "ul": [67, 125, 126, 128, 129, 130, 133, 134, 136, 291, 470, 475, 480, 486], "ultim": 385, "ultranest": 414, "un": [397, 411, 434, 494], "unambigu": 495, "unbehaun": 452, "unbin": [397, 398, 446], "unboundlocalerror": 385, "uncertaint": 403, "uncertainti": [52, 103, 106, 107, 111, 112, 292, 294, 389, 402, 414, 444, 459, 461, 481, 489, 497, 509, 582, 583, 585], "unchang": [103, 106, 107, 111, 112, 117, 120, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 445], "unclear": [385, 395, 396, 402, 412], "uncom": [401, 499], "undefin": 587, "under": [72, 91, 137, 138, 146, 147, 385, 389, 394, 402, 411, 446, 447, 457, 462, 504, 508, 520, 586, 587], "underestim": 522, "underflow": 206, "underli": [87, 91, 204, 398, 459, 486, 492, 497, 510, 512, 521, 533, 536], "underscor": 385, "understand": [401, 423, 431, 432, 458, 461, 462, 463, 466, 473, 474, 479, 480, 484, 492, 493, 494, 499, 508, 509, 584], "undertak": 405, "underwai": 414, "unevenli": [139, 302], "unexpect": 501, "unfold": 583, "unfreez": [19, 20, 26, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 560], "unfreeze_al": [218, 220, 494], "unfrozen": 531, "unheard": 584, "uni": [413, 415], "uni_prior_stat_sum": 497, "unicod": [87, 91, 385], "unid": 67, "unidimension": 200, "unif": 431, "unifi": [87, 91, 389, 394, 399, 426, 429, 431, 432, 433, 434, 437, 446, 447, 583], "uniform": [164, 214, 246, 282, 341, 385, 394, 396, 397, 407, 409, 413, 414, 428, 429, 433, 437, 453, 458, 492, 497, 582], "uniform_filt": [131, 209], "uniformli": [398, 522], "uniformprior": [413, 453, 497], "uninstal": 384, "union": [86, 89, 103, 106, 204, 347, 399, 400, 411, 412, 429, 520], "uniqu": [87, 91, 100, 153, 195, 196, 197, 198, 199, 205, 207, 208, 209, 218, 220, 227, 235, 251, 267, 277, 378, 395, 396, 397, 398, 408, 411, 432, 453, 462, 487, 495, 501, 537, 581], "unique_id": 495, "unique_paramet": [218, 220], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 102, 103, 106, 107, 109, 111, 112, 113, 117, 118, 120, 121, 126, 128, 130, 132, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 283, 284, 293, 302, 310, 311, 312, 342, 356, 357, 358, 360, 369, 370, 371, 374, 375, 376, 380, 386, 394, 396, 399, 401, 403, 408, 409, 413, 414, 426, 427, 429, 437, 439, 445, 446, 448, 449, 450, 451, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 514, 516, 517, 518, 521, 522, 524, 526, 528, 529, 531, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583], "unit_string_format": [451, 456], "unitbas": 312, "uniti": [131, 198, 279, 414, 449, 543], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 235, 277], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [456, 464, 466, 469, 471, 477, 480, 499], "univers": [196, 197, 199, 205, 208, 209, 583], "univsers": 20, "unknown": [102, 294, 465, 489, 585, 586], "unless": [93, 95, 129, 130, 133, 136, 172, 312, 384, 391, 410, 412, 490], "unlik": [87, 91, 290, 392, 403], "unmaintain": 427, "unmask": [87, 91], "unnam": [87, 91, 202], "unnecessari": [437, 448, 469], "unneed": 451, "unphys": 587, "unrealist": 385, "unrel": 588, "unreli": 499, "unsaf": 385, "unstabl": [385, 499], "unsupport": 402, "untar": 499, "until": [385, 388, 392, 399, 410, 444], "unus": [401, 429, 431], "unusu": 390, "unweight": [106, 112], "unzip": 499, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 102, 130, 132, 136, 157, 163, 165, 167, 204, 312, 385, 386, 389, 390, 392, 393, 394, 397, 399, 401, 402, 403, 405, 407, 411, 413, 414, 416, 417, 418, 420, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 441, 443, 444, 445, 446, 447, 453, 461, 462, 469, 472, 473, 497, 499, 500, 537, 584], "upa2": 483, "upcast": 312, "upcom": [393, 394], "updat": [15, 16, 84, 87, 90, 91, 104, 105, 110, 127, 203, 217, 219, 227, 251, 279, 290, 332, 352, 385, 388, 390, 391, 392, 393, 394, 397, 402, 407, 409, 411, 412, 414, 415, 416, 418, 419, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 451, 452, 453, 492, 495, 535, 536], "update_config": 15, "update_forward_ref": [16, 84, 90, 105, 127], "update_from_dict": [217, 219], "update_link_label": [227, 251], "update_parameters_from_t": [227, 251], "updated_model": 414, "upgrad": [195, 384, 410, 419], "upload": [402, 415], "upon": [103, 106, 107, 111, 112, 394, 466, 494, 499, 520], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 102, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 146, 153, 201, 206, 214, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 291, 292, 294, 412, 422, 433, 437, 444, 445, 446, 452, 461, 465, 475, 478, 487, 488, 491, 508, 520, 522, 524], "upper_error": 128, "upsampl": [166, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 428, 448], "upsample_geom": 166, "upstream": [385, 388, 415], "upward": [292, 294], "url": 393, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 291, 293, 295, 307, 310, 312, 320, 323, 324, 325, 332, 333, 336, 341, 342, 349, 352, 368, 369, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 418, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 477, 479, 480, 481, 483, 484, 485, 486, 488, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 510, 513, 514, 524, 526, 527, 528, 530, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589], "usabl": 385, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 105, 123, 127, 133, 135, 181, 194, 195, 204, 207, 336, 391, 395, 396, 398, 400, 404, 409, 430, 451, 452, 486, 491, 493, 494, 584], "use_cach": 252, "use_center_as_plot_label": 201, "use_enum_valu": [16, 84, 90, 105, 127], "use_evaluation_region": [227, 251], "use_fft": 209, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [176, 183, 186, 187, 189, 190, 437, 458], "useless": 499, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 423, 430, 437, 438, 444, 445, 446, 448, 462, 465, 472, 473, 474, 487, 488, 490, 492, 493, 494, 495, 496, 504, 508, 521, 522, 523, 524, 529, 533, 536, 539, 545, 549, 570, 580, 581, 584], "userdataset": 397, "usernam": 388, "userwarn": [461, 463, 470, 471, 475, 500], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 584, "usual": [29, 82, 83, 126, 144, 150, 151, 152, 164, 205, 320, 385, 386, 388, 390, 391, 392, 393, 399, 400, 405, 411, 414, 416, 451, 456, 457, 458, 459, 461, 463, 464, 466, 467, 471, 473, 474, 477, 478, 479, 480, 483, 484, 485, 487, 493, 496, 501, 509, 512, 520, 524, 526, 527, 528, 530, 533, 537, 542, 581, 583, 584, 585], "ut1": 588, "utc": [86, 88, 105, 127, 366, 473, 478, 479, 483, 492, 495, 571, 572, 573, 574, 575, 576, 577, 578, 579, 588], "utf": [87, 91], "utf8": [16, 84, 90, 105, 127], "util": [6, 96, 105, 113, 117, 118, 119, 120, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 185, 186, 187, 188, 189, 190, 191, 192, 193, 289, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 385, 394, 396, 397, 398, 399, 409, 425, 428, 429, 430, 431, 438, 439, 442, 443, 444, 445, 446, 447, 451, 452, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 512, 513, 524, 583], "utilis": [145, 290, 386, 418, 420, 456, 461, 465, 472, 484, 488, 492, 496, 501, 509, 521, 524, 531], "uwmlkbaa": 483, "v": [26, 31, 32, 37, 87, 91, 157, 163, 165, 166, 167, 169, 178, 185, 203, 278, 290, 316, 388, 393, 400, 401, 412, 413, 414, 415, 416, 439, 456, 478, 485, 496, 508], "v0": [95, 392, 393, 396, 397, 399, 402, 404, 405, 410, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 446, 447, 448, 473, 474, 490, 494, 499], "v1": [13, 101, 385, 392, 394, 396, 401, 402, 403, 404, 410, 411, 415, 431, 432, 433, 439, 444, 448, 449, 450, 451, 452, 453, 475, 500, 556], "v15": 453, "v2": [411, 412, 437, 445, 452, 469], "v3": [16, 84, 90, 105, 127, 429, 469], "v6": 483, "v_0": [37, 49], "v_glat": 319, "v_glon": 319, "va": 541, "vagu": 390, "vain": 388, "val": [87, 91, 196, 197, 199, 205, 208, 209, 218, 220, 492, 536], "valfmt": 374, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 108, 126, 127, 130, 138, 147, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 312, 330, 384, 385, 394, 398, 401, 402, 411, 431, 439, 448, 458, 461, 483, 489, 491, 492, 495, 500, 522, 524, 529, 583], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 483, "valid_tim": 483, "validate_al": 412, "validate_assign": [16, 84, 90, 105, 127, 412], "validate_default": [16, 84, 90, 105, 127], "validate_loc": 412, "validate_scalar": 90, "validate_zenith_angl": 412, "validationerror": [16, 84, 90, 105, 127, 412], "valle": 38, "valleespir": 514, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 114, 115, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 139, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 291, 292, 294, 295, 297, 298, 299, 302, 312, 316, 324, 325, 339, 342, 352, 356, 371, 374, 375, 376, 386, 388, 391, 396, 397, 399, 401, 403, 405, 408, 409, 412, 414, 428, 431, 437, 448, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 499, 500, 501, 502, 508, 509, 510, 512, 516, 517, 518, 522, 524, 528, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584, 585, 586, 587], "value_rang": 91, "value_scan": 291, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 227, 251, 385, 399, 412], "values_equ": [87, 91], "values_err": 481, "values_scal": [150, 151, 152, 205, 209, 242, 275, 279, 280, 324, 449, 451, 474, 490], "vanilla": [87, 91], "var": [300, 418, 420], "vari": [68, 104, 110, 133, 164, 214, 324, 352, 397, 399, 400, 410, 431, 434, 455, 457, 466, 471, 472, 474, 482, 483, 491, 495, 497, 500, 504], "variability_amplitud": 484, "variability_amplitude_100": 484, "variability_amplitude_error": 484, "variability_amplitude_signific": 484, "variability_estim": [455, 479, 482, 484], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 105, 127, 139, 140, 209, 292, 294, 297, 298, 299, 300, 302, 307, 323, 350, 385, 386, 388, 398, 400, 401, 416, 418, 420, 426, 427, 443, 444, 445, 451, 452, 453, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 508, 509, 510, 529, 584, 585, 586], "varianc": [96, 141, 142, 299, 300, 311, 400, 452, 496, 531], "variant": 416, "variat": [140, 243, 299, 391, 401, 456, 484, 490, 491, 534, 586], "varieti": [396, 582], "variou": [123, 129, 130, 133, 134, 136, 145, 385, 391, 395, 397, 400, 409, 412, 416, 418, 437, 438, 452, 457, 459, 462, 465, 470, 472, 478, 488, 489, 508, 520, 524, 582, 588], "vasco": 453, "vast": [402, 439], "vaughan": [300, 484], "vaughan2003": 300, "ve": [385, 386, 388, 584], "vector": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 492, 528, 536], "vega": 446, "vel": 481, "vel_di": [45, 514], "vela": [66, 425, 459, 481, 510], "veloc": [31, 32, 37, 45, 49, 316, 319], "ver": 492, "verbos": [11, 82, 386, 408, 584, 586], "veri": [63, 87, 91, 144, 214, 375, 384, 385, 386, 387, 390, 391, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 412, 414, 416, 447, 456, 457, 464, 484, 486, 488, 489, 492, 497, 500, 510, 520, 524, 537, 546, 547, 581, 583, 584, 585], "verif": [100, 227, 251, 348, 351, 470, 500], "verifi": [218, 220, 240, 290, 385, 398, 486, 524], "verifywarn": 524, "verita": [97, 418, 423, 500], "versa": 195, "version": [11, 78, 85, 87, 91, 128, 184, 384, 386, 388, 389, 392, 393, 394, 395, 399, 402, 405, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 425, 426, 427, 428, 430, 431, 436, 438, 439, 441, 444, 445, 446, 448, 449, 451, 452, 453, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 522, 584], "versu": [150, 156, 290, 292, 294, 499, 518], "vert": 258, "vertex": 399, "vhe": [458, 512], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 104, 110, 197, 202, 212, 384, 386, 388, 393, 397, 399, 400, 401, 402, 403, 404, 406, 408, 411, 412, 413, 414, 415, 416, 418, 419, 426, 434, 442, 444, 445, 446, 450, 451, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 506, 508, 509, 510, 524, 528, 533, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 584, 588], "viabil": 412, "vice": 195, "vicin": 414, "victor": 441, "view": [83, 87, 91, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 196, 197, 199, 203, 205, 208, 209, 235, 314, 318, 372, 385, 399, 414, 427, 432, 437, 439, 446, 447, 461, 463, 467, 469, 473, 483, 487, 490, 491, 493, 499, 500, 524, 526, 527, 528, 529, 530, 531, 533, 583], "vika": 437, "vila": 453, "vin\u00edciu": 444, "viridi": [463, 485], "virtual": [388, 416, 418, 419, 420, 584], "visibl": [87, 91, 375, 376, 393, 437, 456, 473, 501, 509, 510, 583], "vision": 390, "visit": [414, 474], "visual": [6, 197, 209, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 399, 414, 432, 433, 451, 452, 453, 461, 463, 467, 469, 471, 474, 489, 490, 496, 502, 509, 510, 524, 533, 538, 541, 582], "visualis": [382, 397, 399, 406, 433, 448, 463, 490, 495, 497, 499, 524], "vline": [518, 541, 542], "vmax": [103, 106, 107, 111, 112, 375, 376, 466, 469, 471, 477, 487, 492, 493, 500, 501, 508, 509, 533], "vmin": [103, 106, 107, 111, 112, 375, 376, 465, 469, 477, 487, 492, 493, 500, 501, 508, 509, 533], "volum": [27, 200, 204, 207], "vorokh": [442, 443], "voruganti": [444, 445], "vstack": [83, 86, 398], "vuillaum": [411, 445], "vwk9mfxq": 483, "vx": [316, 319, 410], "vy": [316, 319], "vz": [316, 319], "w": [26, 31, 49, 86, 193, 206, 309, 386, 410, 465, 467, 475, 485, 491, 495, 497, 533, 585, 587], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 103, 105, 121, 127, 129, 130, 133, 136, 172, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 378, 385, 388, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 416, 426, 429, 430, 431, 432, 433, 434, 441, 445, 446, 447, 448, 449, 450, 451, 457, 459, 461, 467, 469, 471, 475, 491, 497, 499, 500, 501, 502, 510, 584], "wagner": 484, "wai": [33, 38, 83, 87, 91, 201, 293, 336, 342, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 405, 406, 409, 411, 414, 418, 419, 420, 422, 425, 429, 445, 446, 459, 461, 463, 466, 469, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 499, 500, 501, 502, 504, 514, 521, 523, 524, 528, 537, 582, 584, 586], "wait": [385, 415, 416], "walk": 414, "walker": 414, "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 105, 109, 127, 153, 179, 204, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 385, 387, 388, 390, 391, 392, 395, 399, 400, 401, 403, 404, 405, 414, 416, 417, 418, 419, 420, 422, 423, 426, 446, 458, 461, 462, 463, 464, 466, 473, 474, 477, 478, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 508, 509, 510, 528, 581, 584, 585, 586, 587, 588], "ward": 310, "warmup": 414, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 105, 127, 197, 217, 218, 219, 220, 275, 276, 277, 279, 371, 410, 416, 428, 445, 450, 451, 452, 453, 456, 464, 465, 466, 469, 470, 471, 474, 477, 480, 481, 499, 500, 524, 548, 556, 584], "warn_miss": 87, "warn_with_traceback": 385, "wasn": [392, 446], "watch": [500, 588], "water": [418, 501], "watson": 427, "wavelength": 404, "wavelet": [425, 443], "wc": [13, 16, 83, 103, 106, 107, 111, 130, 171, 179, 180, 184, 195, 196, 197, 199, 204, 205, 207, 208, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 345, 380, 385, 391, 399, 404, 427, 428, 429, 431, 437, 445, 446, 450, 452, 461, 462, 465, 466, 467, 469, 471, 475, 478, 481, 485, 487, 490, 491, 493, 494, 495, 500, 508, 509, 510, 533, 536, 541, 542, 543, 548], "wcda": [57, 70], "wcs_geom": [204, 227, 251, 492, 537], "wcs_geom_3d": 492, "wcs_geom_cel": 492, "wcs_map": [208, 209, 378], "wcs_tile": [195, 197], "wcsax": [103, 106, 107, 111, 112, 197, 204, 205, 209, 227, 251, 380, 382, 469, 492, 510, 540, 544, 545, 546], "wcsconfig": 16, "wcsgeom": [23, 83, 103, 106, 107, 111, 112, 113, 116, 118, 119, 125, 126, 136, 155, 164, 166, 176, 189, 190, 194, 195, 204, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 386, 391, 399, 427, 430, 431, 432, 437, 450, 452, 453, 461, 465, 466, 471, 473, 474, 475, 477, 481, 485, 487, 488, 490, 491, 492, 493, 495, 500, 501, 509, 510, 520, 522, 531, 533, 534, 537, 540, 542, 543, 544, 545], "wcslib": 385, "wcsmap": [196, 197, 199, 209, 448], "wcsndmap": [103, 106, 113, 118, 121, 136, 144, 164, 166, 169, 171, 173, 178, 179, 180, 181, 184, 189, 190, 195, 196, 197, 199, 205, 207, 208, 210, 211, 227, 251, 267, 275, 372, 378, 380, 391, 430, 431, 432, 434, 437, 439, 446, 448, 451, 452, 465, 466, 475, 485, 487, 491, 492, 500, 510, 520, 522, 530, 533], "wcsprm": 548, "wcsshape": 492, "wd_qqqop": 483, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 102, 136, 178, 204, 207, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 284, 360, 385, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 427, 428, 433, 437, 439, 444, 445, 446, 447, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 506, 508, 509, 510, 521, 528, 529, 531, 533, 536, 547, 550, 560, 581, 584, 585, 586, 587, 588], "weak": [404, 414, 488, 497], "weaker": 290, "weakli": 493, "web": [87, 91, 393, 411, 416, 422, 423, 437, 445, 453, 486], "webpag": [387, 393, 405, 411, 415, 445, 448], "websit": 453, "wedg": 399, "week": [388, 393, 403, 405, 410, 415], "weekli": [391, 394, 398, 399, 478], "wegen": [445, 446], "weigh": [166, 169, 497], "weight": [67, 106, 112, 154, 155, 161, 164, 166, 169, 195, 196, 197, 199, 204, 205, 207, 208, 209, 236, 246, 260, 277, 282, 308, 413, 414, 447, 451, 472, 497, 520, 536], "weighted_chi2_paramet": 472, "weighted_kernel": 164, "weighted_sampl": 414, "welcom": [390, 399, 500], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 106, 112, 117, 120, 125, 126, 134, 195, 199, 201, 205, 207, 217, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 375, 376, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 445, 446, 447, 451, 452, 457, 458, 464, 467, 472, 474, 478, 480, 483, 487, 488, 489, 490, 491, 492, 493, 495, 499, 500, 504, 508, 509, 510, 520, 521, 522, 533, 536, 537, 581, 582, 584, 586], "went": 426, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 140, 298, 385, 390, 391, 392, 393, 398, 400, 401, 402, 403, 404, 405, 406, 408, 410, 413, 416, 426, 429, 430, 431, 432, 433, 434, 437, 440, 445, 446, 449, 470, 481, 483, 493, 497, 499, 587], "wg": 415, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 284, 342, 386, 391, 399, 402, 404, 405, 412, 414, 416, 424, 475, 485, 486, 488, 489, 499, 500, 504, 509, 512, 520, 537, 569, 584, 585, 588], "whatev": [399, 401, 402, 584], "wheel": [402, 453], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 125, 126, 127, 128, 143, 154, 155, 161, 166, 168, 169, 179, 182, 196, 197, 199, 201, 203, 205, 208, 209, 214, 215, 221, 222, 225, 227, 229, 231, 232, 233, 236, 238, 242, 244, 245, 246, 248, 251, 252, 254, 256, 257, 258, 260, 263, 268, 270, 271, 272, 273, 276, 279, 280, 282, 324, 384, 385, 386, 388, 390, 391, 392, 395, 397, 399, 400, 402, 405, 410, 411, 412, 413, 415, 418, 419, 420, 431, 439, 440, 445, 447, 450, 451, 452, 457, 463, 467, 471, 474, 475, 478, 479, 481, 486, 489, 491, 492, 495, 496, 499, 500, 520, 522, 524, 529, 531, 535, 536, 583, 585, 586, 587, 588], "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 105, 126, 127, 128, 131, 136, 153, 154, 155, 161, 166, 169, 171, 182, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 295, 298, 301, 303, 312, 349, 386, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 409, 412, 413, 416, 418, 420, 422, 428, 440, 446, 456, 461, 466, 473, 474, 486, 491, 492, 493, 495, 497, 499, 500, 501, 510, 512, 520, 521, 524, 529, 536, 541, 542, 543, 546, 547, 550, 583, 584, 585, 586, 587, 588], "wherea": [391, 399, 402, 414, 584], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 103, 105, 106, 107, 109, 111, 112, 126, 127, 128, 129, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 221, 222, 225, 227, 229, 231, 232, 233, 238, 242, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 279, 280, 293, 312, 321, 348, 351, 353, 354, 382, 390, 392, 399, 402, 404, 405, 412, 414, 451, 464, 477, 488, 491, 492, 510, 536, 585, 586], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 103, 105, 106, 107, 109, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 182, 183, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 214, 217, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 290, 292, 293, 294, 298, 299, 300, 302, 307, 310, 324, 334, 344, 345, 363, 372, 374, 379, 381, 384, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 427, 428, 429, 431, 432, 433, 434, 437, 440, 446, 448, 451, 453, 456, 457, 458, 461, 464, 465, 466, 467, 469, 472, 473, 474, 475, 478, 480, 481, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 510, 514, 515, 520, 521, 522, 524, 526, 527, 528, 530, 531, 533, 535, 536, 537, 538, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 585, 586, 587], "whichev": [195, 196, 197], "while": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 385, 388, 390, 391, 392, 394, 397, 398, 400, 404, 406, 407, 409, 410, 411, 414, 415, 416, 418, 456, 461, 463, 466, 474, 480, 481, 487, 488, 490, 491, 492, 494, 495, 520, 522, 524, 535, 537, 584], "whilst": [386, 496, 504], "whippl": 97, "whirlwind": 504, "white": [299, 374, 375, 471, 481, 489, 494, 512, 537], "whitespac": 330, "who": [411, 485, 512], "whole": [95, 121, 173, 176, 183, 186, 187, 189, 190, 195, 196, 197, 199, 208, 209, 252, 283, 292, 294, 385, 391, 397, 400, 411, 458, 461, 469, 474, 478, 481, 487, 495, 500, 502, 581], "whose": [411, 416, 474, 530, 542], "why": [385, 386, 390, 392, 399, 489, 537], "wich": 414, "wide": [392, 411, 412, 427, 446, 459, 470, 583], "wider": [479, 493, 531], "widget": [196, 197, 199, 205, 208, 209, 469, 477, 492, 508, 509], "width": [16, 27, 68, 83, 87, 91, 103, 106, 107, 111, 112, 113, 114, 115, 117, 118, 120, 121, 131, 136, 153, 154, 155, 158, 161, 164, 166, 169, 171, 176, 181, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 224, 227, 228, 237, 239, 240, 251, 253, 264, 265, 267, 269, 275, 277, 279, 375, 376, 401, 408, 447, 462, 463, 465, 466, 467, 469, 471, 472, 473, 474, 475, 477, 478, 481, 485, 486, 487, 490, 491, 492, 493, 495, 500, 501, 508, 509, 510, 531, 533, 534, 535, 536, 537, 541, 542, 543, 545, 546, 547], "width_err": 486, "width_error": 68, "width_min": 204, "width_pix": [195, 196, 197], "widthconfig": 16, "wiki": [34, 83, 88, 437, 502], "wikipedia": [34, 83, 88, 341, 399, 403], "wilei": [138, 147], "wilk": [290, 522, 586], "willing": 388, "wind": [50, 467, 472, 495, 515], "window": [114, 115, 384, 385, 392, 402, 416, 417, 418, 420, 426, 442, 446, 465, 486, 583, 584, 586], "wise": [19, 20, 26, 87, 91, 144, 145, 197, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 413, 439, 453, 467, 469, 520], "wish": [204, 388, 403, 472, 489], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [395, 396, 397, 400, 407, 409], "withdrawn": [389, 390, 395, 396, 397, 400, 407, 409], "within": [129, 132, 144, 195, 209, 226, 227, 228, 234, 239, 240, 241, 242, 243, 251, 259, 264, 266, 267, 278, 281, 384, 385, 386, 390, 394, 399, 401, 402, 403, 404, 405, 408, 410, 411, 413, 414, 415, 416, 417, 418, 420, 440, 443, 445, 449, 451, 453, 462, 463, 469, 472, 478, 479, 480, 483, 486, 488, 490, 491, 492, 495, 496, 500, 504, 510, 520, 523, 524, 583], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 133, 156, 194, 195, 200, 204, 207, 246, 382, 385, 388, 390, 393, 395, 399, 400, 401, 402, 404, 409, 414, 416, 427, 428, 432, 453, 462, 465, 469, 470, 483, 485, 491, 492, 493, 508, 524, 535, 536, 537, 579, 584, 586], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 485], "wo": 481, "wobbl": [95, 480, 499], "wobbleregionfind": 439, "wobbleregionsfind": 463, "woleyre2": 469, "wolfram": [339, 340], "women": 442, "won": [121, 125, 129, 133, 136, 357, 410, 469, 492, 499, 587], "wong": [429, 453], "wood": [392, 443, 445, 446], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 524], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 128, 206, 349, 384, 385, 386, 388, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 438, 441, 442, 443, 444, 445, 446, 447, 448, 453, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510, 520, 524, 534, 536, 548, 550, 556, 572, 578, 579, 584], "workaround": [402, 453], "workflow": [388, 393, 394, 401, 406, 410, 416, 431, 453, 462, 467, 504, 508, 509, 525], "workshop": 394, "workspac": 388, "world": [83, 207, 227, 251, 385, 391, 471, 510, 536], "worst": 388, "worth": [385, 512], "would": [16, 84, 87, 90, 91, 95, 105, 127, 196, 197, 199, 205, 208, 209, 246, 385, 388, 391, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 414, 428, 437, 459, 461, 464, 465, 477, 489, 492, 493, 495, 497, 500, 537], "wouldn": 399, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 201, 263, 320, 399, 430, 453], "wrap_at": 396, "wrap_coord": 201, "wrapper": [56, 252, 263, 324, 399, 400, 414, 428, 431, 512, 524], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 203, 205, 208, 209, 215, 227, 242, 251, 275, 276, 277, 278, 279, 354, 363, 386, 388, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 411, 412, 413, 416, 422, 425, 431, 434, 439, 441, 444, 445, 446, 447, 452, 453, 456, 461, 469, 470, 473, 475, 490, 494, 495, 499, 500, 506, 508, 509, 524, 529, 585, 587], "write_arf": 109, "write_bkg": 109, "write_covari": [15, 100, 215, 227, 251], "write_dataset": 15, "write_ds9": 495, "write_model": 15, "write_pha": 109, "write_rmf": 109, "writeabl": 413, "writer": [87, 91, 405, 412], "writeto": [86, 150, 151, 152, 156, 157, 158, 160, 163, 165, 167, 168, 473], "written": [88, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 211, 385, 386, 388, 390, 394, 395, 405, 411, 413, 449, 456, 474, 494, 497, 512, 520, 521, 524, 537, 583], "wrong": [385, 435, 449, 450, 451], "wrote": 411, "wrt": [83, 166, 169, 385, 403, 480, 579], "wstat": [106, 112, 304, 305, 397, 425, 443, 444, 457, 461, 462, 464, 467, 471, 481, 487, 497, 520, 583], "wstatcountsstatist": [481, 586], "wt": [26, 485], "wun": 429, "www": [26, 67, 87, 91, 138, 147, 405, 499, 524], "wyatt": [425, 583], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 103, 107, 111, 131, 138, 144, 145, 147, 151, 201, 205, 206, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 293, 299, 300, 303, 315, 316, 317, 319, 323, 325, 330, 339, 374, 377, 378, 385, 386, 390, 392, 393, 394, 399, 410, 414, 415, 418, 420, 459, 464, 465, 471, 474, 481, 483, 484, 486, 489, 490, 492, 497, 500, 510, 518, 524, 541, 542, 584, 586], "x27": [488, 490], "x86_64": [456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "x_": 131, "x_0": [196, 197, 199, 205, 208, 209], "x_1": 324, "x_2": 324, "x_3": 324, "x_bkg": 481, "x_edg": 132, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [196, 197, 199, 205, 208, 209], "x_j": 131, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [131, 337, 339, 475], "x_min": [131, 337, 339, 475], "x_n": [196, 197, 199, 205, 208, 209], "x_r_0": 240, "x_ref": [131, 475], "x_sigma": 237, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [214, 489], "xarg": 385, "xaxi": [488, 524], "xerr": [456, 483, 497], "xf": 499, "xfail": 385, "xkdoggqu": 483, "xlabel": [386, 451, 467, 480, 483, 497, 500, 516, 517, 518, 541, 578], "xlim": [372, 469, 497, 500, 518], "xmax": [17, 18, 21, 22, 24, 25, 27, 205, 413], "xmin": [17, 18, 21, 22, 24, 25, 27, 205, 413], "xml": [394, 395, 396, 430, 444, 446, 499, 512], "xmltodict": [438, 499], "xref": 131, "xspec": [229, 280, 309, 444, 457, 585], "xunit": [463, 550], "xviii": 405, "xvmmy": 483, "xx": [396, 411], "xxx": [87, 91, 390, 411], "xxx_by_coord": 492, "xxxx": 524, "xy": [461, 471, 475, 541], "xy_posit": [33, 34, 38], "xytext": 541, "xyz": 415, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 144, 145, 151, 201, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 315, 316, 317, 319, 323, 325, 377, 385, 399, 410, 418, 420, 451, 456, 465, 471, 474, 483, 489, 497, 518, 524], "y_h_v_0b": 483, "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [214, 489], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 348, 351, 353, 354, 384, 393, 394, 396, 397, 398, 401, 402, 407, 412, 413, 415, 416, 417, 429, 430, 431, 434, 439, 448, 452, 453, 456, 458, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 509, 510, 523, 581, 582, 583, 584], "yaml_str": [227, 251, 462], "yaxi": [459, 488, 524], "ye": 416, "year": [45, 61, 65, 78, 385, 390, 392, 393, 395, 402, 405, 406, 410, 412, 416, 443, 445, 446, 470, 472, 486, 499, 516, 517, 518, 519], "yearli": [419, 444], "yellow": 375, "yerr": [481, 483], "yet": [89, 384, 385, 388, 390, 392, 399, 402, 405, 406, 453, 454, 459, 462, 508, 588], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 196, 197, 199, 205, 208, 209, 349, 392, 398, 399, 404, 406, 408, 413, 493, 585, 586, 587], "yk04": [45, 48], "yk04b": 48, "ylabel": [386, 480, 483, 497, 500, 516, 517, 518, 541, 578], "ylim": [372, 457, 467, 497, 500, 516, 518, 557, 566, 567, 568], "ymax": [541, 542], "ymin": [541, 542], "yml": [388, 402, 415, 416, 417, 418, 420, 445, 453], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 102, 105, 109, 127, 128, 144, 151, 153, 156, 179, 196, 197, 199, 205, 208, 209, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 290, 384, 385, 386, 387, 388, 390, 392, 395, 399, 402, 403, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 437, 445, 446, 447, 453, 457, 458, 459, 461, 462, 463, 464, 466, 467, 469, 471, 473, 474, 477, 479, 480, 481, 483, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 508, 509, 510, 520, 521, 524, 527, 531, 535, 558, 581, 584, 585, 586, 587, 588], "your": [16, 19, 20, 26, 84, 90, 99, 105, 127, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 384, 385, 386, 388, 390, 392, 415, 416, 417, 418, 419, 420, 422, 423, 426, 427, 428, 431, 432, 437, 446, 447, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 519, 524, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 586], "yourself": [584, 585], "yr": [45, 52, 53, 514, 516, 517, 518], "yscale": [467, 576], "yt": 385, "yu": [429, 453], "yunit": [461, 463, 485, 486, 500, 561], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 445, "yy": 411, "yyyi": 411, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 315, 316, 319, 410, 411, 414, 418, 420, 485, 514, 550], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 441, "zanin": [445, 446], "zd": 83, "zen": 496, "zen_pnt": 496, "zenith": [456, 470, 496, 499, 500, 501, 529], "zenith_angl": [83, 412, 500, 510], "zenodo": [411, 439, 499], "zero": [52, 53, 67, 87, 91, 100, 103, 106, 107, 111, 112, 136, 144, 153, 154, 155, 158, 161, 166, 182, 196, 197, 199, 205, 208, 209, 255, 277, 279, 324, 330, 342, 385, 430, 433, 448, 453, 486, 491, 492, 497, 587], "zhao": [27, 452], "zhen": [138, 147], "zip": [400, 413, 415, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 509, 510, 518, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "zl": [26, 485], "zone": 481, "zs13c2jt": 483, "zsh": 386, "zt": [26, 485], "zu8": 483, "z\u00e9": 444, "\u00e0": 443, "\u0261\u00e6m\u0259pa\u026a": 524, "\u03b3": [140, 512, 583], "\u03c3": 472}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "MapDatasetWeighted", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "weighted_cash_sum_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 462, 474, 502, 508], "0": [394, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454], "1": [390, 394, 413, 414, 424, 425, 432, 433, 435, 440, 448, 449, 450, 451, 452, 453, 497], "10": [399, 424, 426], "10th": 448, "11": [400, 424, 427], "12": [401, 424, 428], "12th": 439, "13": [402, 424, 429, 438, 441], "13th": 451, "14": [403, 424, 430], "14th": 449, "15": [424, 431], "16": [404, 424, 432], "16th": 440, "17": [424, 433], "18": [405, 424, 434, 435, 436], "19": [406, 424, 437], "19th": 436, "1d": [462, 464, 470, 478, 479, 504], "1dc": 499, "2": [391, 392, 413, 414, 424, 436, 438, 450, 452, 454, 497, 563], "20": [407, 424, 439, 440, 442], "2014": 425, "2015": [438, 441], "2016": [442, 443], "2017": 444, "2018": [445, 446, 447], "2019": [426, 427, 428, 429, 430, 431], "2020": [432, 433, 434, 435, 436], "2021": 437, "2022": [439, 440, 448], "2023": [449, 450, 451], "2024": [452, 453], "21": 408, "2155": 488, "22": [409, 443], "22nd": 437, "23": [410, 446], "24": 411, "25": [412, 425], "26": [413, 429], "26th": 453, "27": 414, "28": [426, 444, 445], "29": [427, 447], "29th": 452, "2d": [466, 504], "3": [392, 413, 414, 424, 431, 441, 453], "30": [428, 430], "304": 488, "32": 385, "3955": 413, "3d": [469, 470, 477, 478, 504], "3fgl": [555, 566], "3fhl": 470, "4": [393, 414, 424, 442], "4122": 413, "4fgl": [567, 568], "4th": 434, "5": [394, 424, 443], "6": [395, 424, 444], "64": 385, "6th": [435, 450], "7": [392, 396, 424, 445], "8": [397, 424, 446], "9": [398, 424, 447], "A": [461, 488], "As": 530, "In": 386, "ON": [458, 463, 470], "On": 464, "The": [391, 416, 470, 472, 488, 489, 497, 521, 533], "To": [385, 386, 405, 524], "about": 497, "abov": 472, "absolute_tim": 366, "absorpt": [408, 457, 550], "abstract": [390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "accept": 388, "access": [465, 487, 488, 492, 501, 521], "accessor": 536, "account": 457, "action": [385, 405], "ad": 492, "adapt": 465, "adaptiveringbackgroundmak": 171, "add": [396, 494], "add_colorbar": 373, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [408, 413, 530, 582], "aeff_2d": 526, "against": 463, "aim": 494, "aka": 414, "algorithm": 483, "alia": 408, "all": 479, "along": 412, "altern": [393, 396, 398, 399, 400, 401, 402, 403, 405, 406, 409, 412], "amplitud": [413, 497], "an": [385, 456, 473, 474, 487, 493], "anaconda": 419, "analysi": [0, 11, 15, 391, 394, 456, 458, 461, 462, 463, 464, 469, 470, 471, 478, 481, 504, 508, 520, 523, 582], "analysisconfig": 16, "angl": [526, 527, 528, 530], "angular": 537, "annihil": 485, "annotate_heatmap": 374, "api": [6, 385, 386, 407, 409, 412, 413, 414, 448, 451, 452, 453, 488, 504, 509], "apply_edisp": [113, 118], "approach": [400, 414, 458, 459, 462, 464, 465, 466, 467, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 489, 493, 494, 496, 508, 509], "apr": [433, 438, 442, 444], "arbitrari": 412, "area": [490, 499, 526], "argument": [385, 399], "arm": 514, "asmoothmapestim": 121, "assert": 385, "assert_quantity_allclos": 360, "assert_skycoord_allclos": 361, "assert_time_allclos": 362, "assess": [469, 489], "assign": [479, 494], "astro": [1, 512, 515], "astronomi": 400, "astrophys": [1, 513, 514, 515], "astropi": [385, 410], "asymmetr": 490, "attribut": [385, 386, 396], "aug": [425, 441], "author": 411, "authorship": 411, "avail": 486, "ax": [492, 537], "axi": [385, 529], "backend_default": 327, "background": [396, 400, 404, 407, 413, 467, 472, 473, 491, 494, 499, 500, 508, 527, 531, 532, 533, 534, 585], "background2d": 150, "background3d": 151, "backgroundirf": 152, "backgroundirfmodel": 396, "backgroundmodel": 396, "backport": 385, "base": [409, 412, 535], "basic": [471, 492], "bayesian": [414, 484], "between": 407, "bin": [400, 456, 472, 537], "binder": 416, "bit": 385, "bkg_2d": 527, "bkg_3d": 527, "block": 484, "boundari": 493, "branch": 415, "break": 385, "broken": [386, 551, 565], "brokenpowerlawspectralmodel": 221, "bsd": 385, "bug": [439, 448, 451, 452, 453], "bugfix": 415, "build": [386, 388, 416, 478, 479], "built": 581, "bullet": 386, "bundl": 385, "burkertprofil": 17, "butterfli": 509, "call": 396, "candid": [415, 465], "caplog": 385, "cartesian": 313, "case": [391, 395, 413, 414, 587], "casebattacharya1998": 28, "cash": [295, 585, 586], "cash_sum_cython": 296, "cashcountsstatist": 292, "catalog": [2, 486, 493, 494, 510, 519], "catalog_registri": 55, "caveat": 585, "cell": 385, "certif": 388, "cff": 411, "chain": [461, 463], "chang": [385, 406, 448, 451, 452, 453], "changelog": 405, "character": 484, "check": [11, 385, 386, 421, 456, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "checker": 359, "chi": 472, "choos": 386, "citat": 411, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 385, 386, 395, 396, 409, 412, 509, 530, 586], "clean": 404, "cli": 584, "click": 385, "clobber": 385, "clumpi": 512, "cluster": [13, 496], "code": [385, 386, 391, 394, 416], "codemeta": 411, "collect": 411, "colormap": 589, "colormap_hess": 375, "colormap_milagro": 376, "combin": [494, 521], "combine_flux_map": 137, "combine_significance_map": 138, "command": [11, 385, 584], "common": 488, "compar": [463, 478], "comparison": 414, "compound": [495, 552], "compound_region_to_region": 343, "compoundspectralmodel": 222, "comput": [455, 456, 460, 461, 462, 467, 468, 471, 476, 482, 489, 498, 503, 505, 507, 509, 511, 539, 549, 570, 580], "compute_chisq": 297, "compute_flux_doubl": 298, "compute_fpp": 299, "compute_fvar": 300, "compute_lightcurve_discrete_correl": 139, "compute_lightcurve_doublingtim": 140, "compute_lightcurve_fpp": 141, "compute_lightcurve_fvar": 142, "conda": 417, "confer": 411, "confid": 489, "config": [11, 466, 467, 584], "configur": [462, 469, 475, 478, 488, 508, 582], "constant": [540, 553, 571], "constantfluxspatialmodel": 223, "constantspatialmodel": 224, "constantspectralmodel": 225, "constanttemporalmodel": 226, "contain": 412, "containment_radiu": 210, "containment_region": 211, "content": [487, 537], "context": [458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 475, 477, 478, 479, 480, 483, 484, 493, 496, 497, 508, 509], "contigu": 492, "continu": 416, "contour": 489, "contribut": [388, 411, 494], "contributor": [411, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "conveni": 397, "convent": 385, "converg": 414, "convers": [385, 488], "convert": 385, "coordin": [13, 385, 396, 527, 537], "correct": 386, "correl": 467, "count": [488, 494, 500, 520, 586], "covari": [212, 489], "covarianceresult": 213, "creat": [458, 461, 466, 467, 474, 487, 488, 490, 492, 493, 509, 537], "create_cosmic_ray_spectral_model": 283, "create_crab_spectral_model": 284, "create_empty_map_dataset_from_irf": 114, "create_fermi_isotropic_diffuse_model": 285, "create_map_dataset_from_dl4": 119, "create_map_dataset_from_observ": 115, "create_map_dataset_geom": 116, "creation": [458, 462, 479], "cstat": 301, "cta": [395, 499], "ctao": 499, "cube": [391, 492, 504], "cumul": 458, "current": 410, "curv": [400, 478, 479, 480, 488, 578, 579], "custom": [495, 497, 581], "cut": [459, 463], "cutoff": [554, 555, 556, 566, 567, 568], "cutout": 492, "cycl": 410, "cython": [410, 416], "d_sun_to_galactic_cent": 312, "dark": [485, 512], "darkmatt": [1, 512], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 385, 391, 393, 394, 400, 412, 416, 457, 458, 461, 462, 463, 469, 470, 472, 475, 478, 479, 481, 483, 487, 491, 492, 501, 504, 508, 509, 510, 521, 532, 584, 585], "dataflow": 412, "dataset": [4, 11, 99, 100, 385, 394, 397, 406, 407, 412, 456, 458, 462, 463, 466, 467, 469, 470, 474, 478, 479, 480, 487, 488, 489, 491, 493, 494, 497, 501, 508, 509, 520], "dataset_registri": 98, "datasetmodel": 227, "datasetsmak": 172, "datastor": [82, 499, 509], "dco": [388, 411], "deal": 386, "dec": 431, "decai": 485, "decemb": 450, "decis": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "default": 396, "defin": [456, 458, 461, 463, 471, 473, 474, 478, 479, 493, 509, 537], "definit": [411, 478, 532], "depend": [384, 402, 408, 439, 463, 472, 474, 495], "deprec": [385, 410], "deriv": 587, "detail": [392, 469], "detect": [406, 465, 471, 529], "detector": 527, "develop": [385, 387, 388, 392], "diagram": 395, "differ": [470, 492, 588], "diffus": 500, "dilat": 493, "direct": 463, "discrete_correl": 302, "discuss": 400, "disk": [462, 474, 508, 509, 541], "diskspatialmodel": 228, "dispers": [490, 499, 500, 528], "dissolv": 404, "distribut": [402, 414, 502, 514], "dl3": [3, 470, 502, 521, 529, 532], "dl4": [490, 520, 522, 532, 536, 581], "dl5": [522, 581], "dl6": 522, "dmprofil": 18, "do": 385, "doc": 416, "docstr": 386, "document": [386, 388, 394, 405, 452, 453], "doubl": 484, "download": [11, 416], "downsampl": 537, "dr1": [502, 568], "dr2": 568, "dr3": 567, "draw": 335, "driven": 584, "drop": 392, "due": 457, "durat": 491, "e": 502, "each": 472, "earli": 388, "earth_location_from_dict": 322, "ebl": [457, 550], "ebl_data_builtin": 230, "eblabsorptionnormspectralmodel": 229, "edg": 522, "edisp": 490, "edisp_2d": 528, "edispkernel": 153, "edispkernelmap": 154, "edispmap": 155, "effect": [490, 491, 499, 526], "effectiveareatable2d": 156, "einastoprofil": 21, "elaps": 588, "empti": 487, "encourag": 497, "end": 385, "energi": [408, 456, 463, 472, 474, 490, 493, 495, 499, 500, 522, 526, 527, 528, 530], "energydependentmorphologyestim": 123, "energydependentmultigausspsf": 157, "energydispersion2d": 158, "environ": 417, "eros": 493, "error": [489, 586], "estim": [5, 124, 403, 406, 409, 412, 414, 462, 465, 472, 475, 478, 483, 484, 488, 491, 522, 532, 533, 586], "estimate_exposure_reco_energi": 143, "estimator_registri": 122, "evalu": [396, 397, 398], "event": [394, 398, 473, 474, 481, 492, 499, 500, 502, 510, 521, 529], "eventlist": 83, "eventlistmetadata": 84, "evid": 414, "evolut": 474, "exampl": [416, 497, 520, 522, 523, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 585], "excess": [409, 458, 467, 484, 586], "excessmapestim": 125, "exclus": [461, 462, 467, 493, 508], "execut": 584, "exemplari": 413, "exercis": [456, 459, 461, 464, 469, 471, 473, 474, 480, 483, 499, 500, 501, 502, 510], "exist": 391, "expcutoffpowerlaw3fglspectralmodel": 231, "expcutoffpowerlawnormspectralmodel": 232, "expcutoffpowerlawspectralmodel": 233, "expdecai": 572, "expdecaytemporalmodel": 234, "expect": 529, "explor": [458, 462, 471, 504], "exponenti": [29, 459, 554, 555, 556, 566, 567, 568], "expos": 396, "exposur": [490, 500], "extend": [458, 473], "extens": [386, 457], "extern": 385, "extra": 416, "extract": [467, 478, 479, 480], "extrapol": [385, 569], "f_cash_root_cython": 303, "factor": 485, "factori": 492, "factoris": 529, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 413, "featur": [14, 410, 415, 448, 451, 452, 453, 488], "feb": [432, 445], "februari": 452, "fermi": [470, 500], "fermipydatasetsread": 101, "fermist": 512, "file": [386, 411, 462, 466, 467, 470, 499, 508, 521, 537], "fill": [492, 537], "filter": 479, "final": [390, 415, 462, 587], "find_peak": 144, "find_peaks_in_flux_map": 145, "finder": 533, "first": [415, 462], "fit": [10, 13, 214, 394, 400, 414, 457, 458, 459, 461, 462, 463, 466, 469, 470, 471, 477, 480, 489, 493, 497, 500, 508, 509, 537, 581, 585, 586, 587], "fitresult": 215, "fix": [385, 439, 448, 451, 452, 453], "fixedpointinginfo": 85, "fixtur": 385, "flare": 479, "float": 385, "flux": [409, 413, 456, 457, 459, 461, 462, 470, 475, 485, 486, 488, 508, 509, 510, 522], "fluxestim": 409, "fluxmap": [126, 409, 488], "fluxmetadata": 127, "fluxpoint": [128, 488], "fluxpointscollect": 409, "fluxpointsdataset": [102, 397, 487], "fluxpointsestim": [129, 522], "fluxprofileestim": 130, "fold": 396, "folder": 416, "follow": 406, "format": [385, 386, 588], "formula": 587, "forward": 396, "found": 584, "fov": [491, 531], "fov_to_ski": 314, "fovalign": 159, "fovbackgroundmak": [173, 531], "fovbackgroundmodel": 235, "fraction": 484, "free": 414, "freez": [410, 415, 494], "from": [385, 414, 479, 492, 493, 494, 537], "from_yaml": 348, "fulli": 488, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 385, 386, 499, 526, 527, 528, 529, 530, 586, 588], "further": [400, 457, 585], "galact": [315, 500], "galactocentr": 514, "galleri": [385, 386, 538], "gamlik": 512, "gamma": [400, 485], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 385, 388, 391, 394, 402, 404, 405, 406, 410, 411, 412, 415, 416, 422, 423, 490, 499, 500, 501, 502, 512, 515, 519, 520, 521, 522, 523, 529, 531, 532, 533, 536, 581, 582, 588], "gaussian": [542, 543, 557, 573, 574], "gaussianprior": 236, "gaussianspatialmodel": 237, "gaussianspectralmodel": 238, "gaussiantemporalmodel": 239, "gener": [385, 391, 395, 400, 411, 412, 522, 543, 574], "generalist": 409, "generalizedgaussianspatialmodel": 240, "generalizedgaussiantemporalmodel": 241, "geom": 194, "geometri": [458, 471, 478, 479, 492, 493, 508, 509, 535, 537], "get": [388, 405, 418, 457, 466, 467, 492, 513, 514, 515, 521, 536], "get_combined_flux_map": 146, "get_combined_significance_map": 147, "get_images_path": 349, "get_irfs_featur": 96, "get_random_st": 336, "get_rebinned_axi": 148, "get_wstat_gof_term": 304, "get_wstat_mu_bkg": 305, "github": 385, "given": 494, "global": 407, "glossari": 583, "good": 587, "gpl": 385, "group": 496, "gti": [86, 521], "guid": [387, 525], "guidelin": [386, 390, 391, 405], "h": 502, "halv": 484, "handl": [385, 394, 395, 396, 407, 411, 491, 588], "have": [393, 395, 400, 401, 409], "hawc": [470, 501], "hduindext": 87, "hduloc": 320, "healpix": 535, "help": 421, "helper": 397, "hess": 470, "hgp": 486, "hierarch": 496, "hierarchi": 412, "hierarchical_clust": 310, "high": [0, 5, 394, 401, 508, 523], "hli": 462, "how": [385, 386, 388, 405, 415, 492, 524], "hpxgeom": 195, "hpxmap": 196, "hpxndmap": 197, "hstack_column": 355, "i": [385, 388, 390, 475], "idea": 395, "imag": [386, 391, 399, 404, 465, 471, 492, 504], "imageprofil": 131, "imageprofileestim": 132, "impact": 414, "implement": [395, 396, 405, 411, 413, 414, 495, 497], "import": [385, 477], "improv": [396, 408, 439, 448, 451, 452, 453], "inbuilt": 490, "includ": [386, 497], "index": [492, 497, 521], "infer": 414, "info": [11, 385], "inform": [411, 486, 497, 528], "infrastructur": 453, "input": [385, 412, 465], "inspect": 509, "instal": [405, 418, 419, 421], "instrument": [7, 470, 529], "integr": [13, 416, 456], "integrate_spectrum": 286, "interact": 407, "interest": 472, "interfac": [0, 394, 396, 401, 508, 523, 536], "intern": 488, "interpol": [13, 385, 492], "interpolate_profil": 325, "interpolation_scal": 326, "interv": 479, "intrins": 457, "introduc": [396, 404, 406, 408, 409, 475], "introduct": [396, 399, 400, 402, 403, 405, 409, 411, 412, 456, 461, 463, 471, 481, 485, 486, 487, 491, 492, 499, 500, 501, 502, 504, 510, 512, 514, 515, 585], "inversecdfsampl": 334, "ipython": 422, "irf": [7, 160, 394, 412, 456, 487, 490, 499, 529], "irf_registri": 162, "irfmap": 161, "isothermalprofil": 22, "isotrop": 500, "issu": [414, 421, 453], "iter": 492, "j": 485, "jan": 426, "jfactori": 23, "joint": [469, 470, 520], "json": 411, "jul": 429, "june": [440, 451], "jupyt": [385, 418, 420, 422], "kei": 488, "kernel": 490, "known": 453, "labelmapaxi": [198, 492], "lat": [470, 500], "latest": 499, "law": [459, 551, 554, 555, 556, 562, 563, 564, 565, 566, 567, 568], "lazi": 397, "lazyfitsdata": 321, "lc": 478, "let": 474, "level": [0, 5, 391, 394, 401, 508, 509, 523], "li": 481, "licens": 385, "light": [400, 478, 479, 480, 488, 579], "lightcurv": [400, 473, 480, 484, 486], "lightcurveestim": [133, 522], "lightcurvetemplatetemporalmodel": 242, "like": [473, 488], "likelihood": 587, "limit": 395, "line": [11, 385, 584], "linear": 575, "lineartemporalmodel": 243, "link": 386, "list": [386, 396, 397, 398, 399, 400, 401, 402, 414, 473, 479, 486, 492, 493, 494, 495, 510, 521], "literatur": 463, "livetim": 491, "load": [397, 456, 457, 459, 461, 463, 486, 488, 494, 501], "load_irf_dict_from_fil": 170, "locat": 385, "log": [11, 385, 459, 558, 559], "logparabolanormspectralmodel": 244, "logparabolaspectralmodel": 245, "logspir": 34, "loguniformprior": 246, "long": 411, "loop": [458, 491, 509], "lorimer2006": 35, "low": [391, 509], "lt": 410, "ma": 481, "mai": [428, 439], "maintain": [392, 411], "mainten": 394, "major": 415, "make": [385, 388, 415, 471, 474, 481, 509], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 344, "make_counts_rad_max": 185, "make_edisp_kernel_map": 186, "make_edisp_map": 187, "make_effective_livetime_map": 188, "make_map_background_irf": 189, "make_map_exposure_true_energi": 190, "make_observation_time_map": 191, "make_orthogonal_rectangle_sky_region": 345, "make_path": 350, "make_psf_map": 192, "make_theta_squared_t": 193, "maker": [8, 175, 406, 412, 458, 479, 491, 508, 509, 531, 532, 533], "maker_registri": 174, "mamba": 419, "manag": [394, 419], "manual": [493, 496], "map": [9, 199, 203, 391, 394, 395, 465, 466, 467, 470, 471, 477, 481, 485, 490, 492, 493, 494, 506, 510, 522, 535, 536, 537], "mapax": 200, "mapaxi": 201, "mapcoord": [202, 536], "mapdataset": [103, 397, 469, 473, 487, 501, 520], "mapdataseteventsampl": [104, 398], "mapdatasetmak": [176, 532], "mapdatasetmetadata": 105, "mapdatasetonoff": [106, 397], "mapdatasetweight": 107, "mappanelplott": 372, "mar": 427, "march": 449, "margin": 414, "mask": [399, 461, 462, 467, 487, 493, 508], "materi": 411, "matter": [485, 512], "measur": 585, "meet": 394, "messag": 385, "met": 588, "metadata": [411, 412], "method": [386, 397, 398, 413, 484, 492, 522, 536], "method_default": 328, "method_kwargs_default": 329, "meyercrabspectralmodel": 248, "miniconda": 419, "minor": 406, "minuit": 414, "mission": 588, "model": [10, 249, 251, 394, 396, 404, 407, 408, 412, 413, 414, 457, 458, 461, 462, 463, 466, 469, 470, 471, 473, 474, 478, 479, 480, 483, 485, 486, 487, 489, 494, 495, 497, 499, 508, 509, 510, 514, 515, 516, 517, 518, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 585], "model_registri": 247, "modelbas": 250, "modif": 493, "modifi": [385, 492, 495], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 472, "morphologi": 495, "motion_since_birth": 316, "motiv": [413, 414], "mpl_plot_check": 363, "multi": 470, "multipl": [473, 494, 497, 520], "multiprocessing_manag": 332, "n_jobs_default": 330, "naima": 560, "naimaspectralmodel": 252, "name": [385, 396, 529], "nebula": 517, "nest": 414, "new": [385, 396, 400, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 479], "next": [459, 461, 462, 465, 471, 478, 499, 501, 502, 508, 510], "nfwprofil": 25, "night": 478, "non": [385, 492, 537], "norm": [408, 495, 544, 556, 559, 561, 564], "norm_bounds_cython": 306, "normal": [337, 508], "notat": 586, "note": [385, 424, 461, 488, 585], "notebook": [11, 385, 393, 422], "nov": [434, 435, 436, 437, 443, 447], "novemb": [448, 453], "now": 400, "nuisanc": 413, "number": [385, 410, 529], "numpi": 410, "o": 475, "object": [385, 386, 395, 407, 466, 467, 473, 474, 486, 488, 496], "observ": [3, 88, 92, 394, 395, 457, 461, 462, 471, 473, 474, 478, 479, 491, 496, 508, 509], "observationeventsampl": 110, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [456, 472, 480, 496], "off": [459, 461, 464, 470], "offset": [526, 527, 528, 530], "ogipdatasetread": 108, "ogipdatasetwrit": 109, "old": 416, "one": 488, "onto": 492, "open": 481, "oper": [492, 493], "optimizeresult": 216, "option": [384, 402, 489], "org": 416, "organ": [391, 400], "origin": [385, 388], "other": [385, 386, 395, 416, 419, 512], "outlin": 413, "outlook": [397, 398, 399, 401, 402, 404, 405, 406, 409], "output": [385, 414], "over": 481, "overview": [405, 418, 472, 499, 501, 531, 533, 534], "overwrit": 385, "own": 584, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 404, 406, 416, 419, 439, 504, 512, 513, 582], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 589, "paper": 394, "parabola": [459, 558, 559], "parallel": [13, 397, 414], "paramet": [217, 218, 396, 408, 413, 414, 462, 472, 489, 494, 495, 508], "parameterestim": 134, "parametr": 396, "parametricpsf": 167, "pdf": 338, "perform": [398, 458, 499, 509], "person": 411, "perspect": 392, "phase": [481, 578], "phasebackgroundmak": 177, "phasogram": 481, "piecewis": [544, 561], "piecewisenormspatialmodel": 253, "piecewisenormspectralmodel": 254, "pig": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "pip": 419, "pixel": [385, 399, 493], "pk": 488, "plan": 392, "plot": [14, 385, 457, 461, 462, 471, 472, 475, 492, 494, 509, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 589], "plot_contour_lin": 377, "plot_distribut": 378, "plot_heatmap": 379, "plot_map_rgb": 380, "plot_npred_sign": 381, "plot_spectrum_datasets_off_region": 382, "plot_theta_squared_t": 383, "png": 386, "point": [386, 413, 456, 457, 459, 461, 462, 470, 471, 473, 484, 486, 488, 499, 508, 509, 510, 522, 530, 545], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 255, "poisson": 585, "polar": 317, "polici": 411, "pool_kwargs_default": 331, "popul": [1, 514], "posit": [413, 497, 528], "possibl": 411, "post": 415, "posterior": 414, "power": [459, 551, 554, 555, 556, 562, 563, 564, 565, 566, 567, 568], "powerlaw": [459, 576], "powerlaw2spectralmodel": 256, "powerlawnormspectralmodel": 257, "powerlawspectralmodel": 258, "powerlawtemporalmodel": 259, "precis": 398, "predict": 520, "prepar": [400, 410, 456, 458, 474, 509], "prerequisit": [458, 459, 461, 462, 463, 464, 466, 470, 472, 473, 474, 475, 477, 478, 479, 480, 484, 489, 493, 494, 497, 508, 509], "pretti": 486, "primaryflux": 26, "print": 486, "prior": [260, 413, 497], "priorparamet": [219, 220], "produc": 501, "product": [485, 490], "profil": [457, 475, 485, 587], "project": [394, 416], "propag": 412, "propos": [393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 412, 414, 458, 459, 462, 464, 465, 466, 467, 470, 473, 474, 475, 477, 478, 479, 480, 483, 484, 489, 493, 494, 496, 508, 509], "psf": [490, 500, 530], "psf3d": 163, "psf_tabl": 530, "psfkernel": 164, "psfking": 165, "psfmap": [166, 490], "public": 411, "pull": [385, 388, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "pulsar": [51, 481, 516, 517], "purpos": 390, "pwn": 50, "pydant": 412, "python": [385, 386, 392, 410, 422], "qualiti": [394, 416, 461, 463, 469, 489], "quantiti": [488, 496, 522], "radial": 527, "radial_distribut": 48, "radmax2d": 168, "rai": [400, 485], "random": [13, 385], "rang": [491, 532], "read": [465, 470, 474, 475, 492, 493, 494, 537], "read_hermes_cub": [287, 289], "read_yaml": 351, "recommend": [418, 420], "reconstruct": 527, "recopsfmap": 169, "recursive_merge_dict": 352, "redshift": 457, "reduc": [4, 466, 467, 487, 508, 509], "reduct": [8, 394, 400, 458, 461, 462, 463, 469, 478, 479, 483, 491, 501, 508, 509, 532, 584], "refer": [6, 405, 583, 584, 585], "reflect": [491, 533], "reflectedregionsbackgroundmak": [178, 533], "reflectedregionsfind": 179, "region": [13, 396, 399, 456, 458, 461, 463, 491, 493, 494, 533, 537], "region_to_fram": 346, "regiongeom": [204, 537], "regionndmap": [205, 537], "regions_to_compound_region": 347, "regionsfind": 180, "relat": 537, "releas": [385, 394, 410, 411, 415, 416, 424], "remark": 390, "remnant": 518, "remov": [385, 494], "renam": 385, "repositori": 416, "repr": 385, "represent": [408, 488, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "request": [385, 388, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "requir": [384, 385, 402, 412], "requires_data": 364, "requires_depend": 365, "resampl": 487, "resample_energy_edg": 149, "residu": [461, 463, 469, 509], "resolv": [406, 481, 483], "respons": [7, 529], "restructur": 405, "result": [400, 409, 456, 458, 462, 465, 472, 475, 478, 483, 488, 587], "return": [385, 386], "review": 390, "ring": [467, 491, 534], "ringbackgroundmak": 181, "rmf": 528, "road": 395, "roadmap": 394, "rotat": 399, "rst": 386, "run": [11, 388, 461, 462, 463, 472, 474, 475, 478, 508, 584], "run_multiprocess": 333, "safe": [491, 532], "safemaskmak": 182, "sampl": [398, 414, 473, 474], "sample_powerlaw": 339, "sample_spher": 340, "sample_sphere_dist": 341, "sample_tim": 342, "sampler": 474, "save": [462, 508, 509], "scale": 588, "scale_plot_flux": 288, "scaledregulargridinterpol": 324, "scalespectralmodel": 263, "scenario": 395, "schedul": 410, "scheme": [396, 411], "script": [11, 13, 385, 422, 504, 506], "section": 405, "sed": 522, "select": [458, 462, 471, 478, 479, 483, 486, 494, 508, 509, 521], "select_nested_model": 290, "sensit": 456, "sensitivityestim": 135, "sep": [430, 446], "serial": [397, 412, 470], "serialis": [413, 414, 462, 475, 490, 494, 495, 500, 520], "seril": 396, "set": [388, 462, 492, 508], "setup": [393, 416, 418, 420, 421, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 508, 509, 510], "sever": 385, "share": 495, "shell": 546, "shell2": 547, "shell2spatialmodel": 264, "shellspatialmodel": 265, "shorter": 408, "should": 385, "show": [471, 472, 496], "signal": 472, "signific": [458, 465, 467, 493, 586], "simplepulsar": 54, "simplifi": 408, "simul": [394, 397, 463, 464, 473, 474, 477, 480], "sine": 577, "sinetemporalmodel": 266, "singl": [386, 464], "size": 537, "skip": 385, "sky": [9, 396, 399, 471, 473, 493, 528, 536], "sky_to_fov": 318, "skycoord": 536, "skymodel": [267, 495], "slice": 492, "small": 388, "smooth": [465, 565], "smoothbrokenpowerlawspectralmodel": 268, "snr": 52, "snrtruelovemcke": 53, "solut": 412, "some": [385, 395, 493], "sourc": [1, 2, 456, 458, 461, 465, 471, 472, 473, 474, 480, 486, 493, 497, 499, 510, 514, 515, 516, 517, 519], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 396, "sourcemodel": 396, "spatial": [396, 408, 471, 485, 492, 495, 514, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548], "spatial_model_registri": 261, "spatialirfmodel": 396, "spatialmodel": 269, "special": 587, "specif": [396, 405, 486, 488], "spectra": 485, "spectral": [408, 413, 457, 458, 459, 461, 462, 463, 470, 471, 485, 495, 504, 510, 538, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 569], "spectral_model_registri": 262, "spectralirfmodel": 396, "spectralmodel": 270, "spectroscopi": 483, "spectrum": [457, 461, 463, 464, 471, 481, 491, 509], "spectrumdataset": [111, 397, 487, 520], "spectrumdatasetmak": [183, 532], "spectrumdatasetonoff": [112, 397], "sphinx": [385, 386], "spiral": 514, "split_dataset": [117, 120], "spread": [499, 530], "squar": [472, 502], "stack": [461, 467, 469, 520], "standard_scal": 311, "standardise_unit": 370, "start": [405, 418, 513, 514, 515, 521, 536], "stat": [12, 457], "stat_contour": 489, "stat_profile_ul_scipi": 291, "stat_surfac": 489, "statist": [12, 461, 493, 585, 586], "statu": [390, 395, 404, 410], "step": [462, 499, 501, 502, 582], "store": [400, 462, 528], "str": 385, "structur": [404, 406, 439, 510, 582], "structure_funct": 307, "studi": 400, "style": 391, "sub": [492, 513], "subclass": 413, "subpackag": 391, "subset": 486, "suggest": 411, "summari": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 469, 500], "super": [566, 567, 568], "superexpcutoffpowerlaw3fglspectralmodel": 271, "superexpcutoffpowerlaw4fgldr3spectralmodel": 272, "superexpcutoffpowerlaw4fglspectralmodel": 273, "supernova": 518, "support": [385, 392, 410, 411, 413, 490, 520], "survei": [506, 589], "symmetr": 527, "systemat": 413, "t": [465, 586], "tabl": [13, 472, 486, 488, 501, 521], "table_row_to_dict": 356, "table_standardise_units_copi": 357, "table_standardise_units_inplac": 358, "tag": 408, "target": 461, "task": [396, 397, 398, 399, 400, 401, 402, 414], "templat": [473, 548, 569], "templatendspatialmodel": 275, "templatendspectralmodel": 276, "templatenpredmodel": 277, "templatephasecurvetemporalmodel": 278, "templatespatialmodel": 279, "templatespectralmodel": 280, "tempor": [474, 480, 495, 538, 571, 572, 573, 574, 575, 576, 577, 578, 579], "temporal_model_registri": 274, "temporalmodel": 281, "term": 411, "terminologi": 395, "test": [13, 385, 388, 414, 472, 481], "text": 385, "theta": 502, "thi": 388, "through": 488, "thumbnail": 386, "time": [13, 394, 400, 455, 460, 468, 473, 476, 479, 480, 482, 483, 484, 498, 503, 504, 505, 507, 511, 539, 549, 570, 580, 588], "time_ref_from_dict": 367, "time_ref_to_dict": 368, "time_relative_to_ref": 369, "timemapaxi": [206, 492], "timmerkonig_lightcurve_simul": 293, "to_yaml": 353, "tool": [11, 385, 584], "tooltip": 386, "touch": 388, "trapz_loglog": 323, "troubleshoot": [421, 584], "true": [526, 528, 530], "tsmapestim": 136, "tune": 414, "tutori": [386, 393, 405, 418, 472, 499, 501, 504], "two": 494, "type": [385, 412, 520, 522], "uncertainti": 403, "underli": [479, 537], "unfold": 413, "unfreez": 494, "unif": 409, "unifi": [396, 409], "uniformprior": 282, "unit": [13, 385], "unit_from_fits_image_hdu": 371, "unix": 385, "unreleas": 454, "up": [388, 404, 406], "upsampl": 537, "us": [385, 395, 413, 414, 419, 422, 462, 472, 473, 478, 487, 489, 490, 492, 508, 509, 512, 515, 519, 520, 521, 522, 523, 529, 531, 532, 533, 536, 555, 566, 567, 568, 581], "user": [392, 414, 525], "util": [4, 5, 8, 10, 13, 404, 582, 586, 588], "valid": 412, "valleespir": 38, "valu": [385, 413, 472, 492, 497], "vari": 480, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 473, 484], "varianc": 484, "variou": 496, "veloc": 514, "velocity_distribut": 49, "velocity_glon_glat": 319, "venv": 417, "version": [385, 410, 415, 424, 477], "virtual": 417, "visual": [14, 406, 492, 537, 589], "visualis": [465, 483, 488], "volum": 537, "warn": 385, "wc": [492, 537], "wcsgeom": 207, "wcsmap": 208, "wcsndmap": 209, "we": [393, 400, 401, 409, 501], "webpag": 416, "weighted_cash_sum_cython": 308, "what": [385, 388, 390, 393, 395, 400, 401, 409, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 459, 461, 462, 465, 471, 478, 508, 510], "where": 385, "which": 385, "wind": 517, "wise": 478, "without": 497, "wobbleregionsfind": 184, "work": 521, "workflow": [11, 582], "write": [385, 390, 462, 474, 492, 493, 521, 537, 584], "write_yaml": 354, "wstat": [309, 585, 586, 587], "wstatcountsstatist": 294, "yaml": [408, 462, 508, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "your": [421, 462, 584], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})