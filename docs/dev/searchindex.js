Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[413, null]], "0.10 (Jan 28, 2019)": [[414, null]], "0.11 (Mar 29, 2019)": [[415, null]], "0.12 (May 30, 2019)": [[416, null]], "0.13 (Jul 26, 2019)": [[417, null]], "0.14 (Sep 30, 2019)": [[418, null]], "0.15 (Dec 3, 2019)": [[419, null]], "0.16 (Feb 1, 2020)": [[420, null]], "0.17 (Apr 1, 2020)": [[421, null]], "0.18 (Nov 4th, 2020)": [[422, null]], "0.18.1 (Nov 6th, 2020)": [[423, null]], "0.18.2 (Nov 19th, 2020)": [[424, null]], "0.19 (Nov 22nd, 2021)": [[425, null]], "0.2 (Apr 13, 2015)": [[426, null]], "0.20 (May 12th, 2022)": [[427, null]], "0.20.1 (June 16th, 2022)": [[428, null]], "0.3 (Aug 13, 2015)": [[429, null]], "0.4 (Apr 20, 2016)": [[430, null]], "0.5 (Nov 22, 2016)": [[431, null]], "0.6 (Apr 28, 2017)": [[432, null]], "0.7 (Feb 28, 2018)": [[433, null]], "0.8 (Sep 23, 2018)": [[434, null]], "0.9 (Nov 29, 2018)": [[435, null]], "1.0 (November 10th, 2022)": [[436, null]], "1.0.1 (March 14th, 2023)": [[437, null]], "1.0.2 (December 6th, 2023)": [[438, null]], "1.1 (June 13th 2023)": [[439, null]], "1.2 (February 29th 2024)": [[440, null]], "1.3 (unreleased)": [[441, null]], "1D Spectral": [[491, "d-spectral"]], "1D spectrum simulation": [[451, null]], "2D Image": [[491, "d-image"]], "2D map fitting": [[453, null]], "3D Cube": [[491, "d-cube"]], "3D detailed analysis": [[456, null]], "3D map simulation": [[464, null]], "A fully configured Flux Points Estimation": [[475, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[448, "a-note-on-statistics"]], "A note on the internal representation": [[475, "a-note-on-the-internal-representation"]], "API Links": [[375, "api-links"]], "API changes": [[436, "api-changes"], [439, "api-changes"], [440, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[117, null]], "Abstract": [[379, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[377, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[479, "accessing-data"]], "Accessing and visualising results": [[452, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[475, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[474, "accessing-contents-of-a-dataset"]], "Accessor methods": [[523, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[444, null]], "Adaptive smoothing": [[452, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[164, null]], "Add a model on multiple datasets": [[481, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[385, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[479, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[479, "adding-non-contiguous-axes"]], "Additional Models": [[397, "additional-models"]], "Additional PSF classes": [[517, "additional-psf-classes"]], "Additional utilities": [[569, "additional-utilities"]], "Aim": [[481, "aim"]], "Alternative": [[398, "alternative"]], "Alternatives": [[382, "alternatives"], [385, "alternatives"], [388, "alternatives"], [390, "alternatives"], [391, "alternatives"], [392, "alternatives"], [394, "alternatives"], [395, "alternatives"], [401, "alternatives"]], "Alternatives / Outlook": [[387, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[449, "analysis-configuration"], [456, "analysis-configuration"], [465, "analysis-configuration"], [495, "analysis-configuration"]], "Analysis steps": [[569, "analysis-steps"]], "Analysis workflow": [[569, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[517, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[374, "assert-convention"]], "Assign to model to all datasets": [[466, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[481, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[502, null]], "Astrophysical source population models": [[501, null]], "Astrophysics": [[500, null]], "Authorship policy": [[400, "authorship-policy"]], "BACKEND_DEFAULT": [[316, null]], "BSD or GPL license?": [[374, "bsd-or-gpl-license"]], "Background": [[486, "background"], [514, null]], "Background / What we have now": [[389, "background-what-we-have-now"]], "Background Model Handling": [[396, "background-model-handling"]], "Background estimation": [[478, "background-estimation"], [519, "background-estimation"]], "Background2D": [[143, null]], "Background3D": [[144, null]], "BackgroundIRF": [[145, null]], "BackgroundIRFModel": [[385, "backgroundirfmodel"]], "BackgroundModel": [[385, "backgroundmodel"]], "Basic image exploration and fitting": [[458, null]], "Basic operators": [[479, "basic-operators"]], "Bayesian blocks": [[471, "bayesian-blocks"]], "Bin volume and angular size": [[524, "bin-volume-and-angular-size"]], "Boundary mask": [[480, "boundary-mask"]], "Broken power law spectral model": [[538, null]], "BrokenPowerLawSpectralModel": [[214, null]], "Bug fixes and improvements": [[427, "bug-fixes-and-improvements"], [436, "bug-fixes-and-improvements"], [439, "bug-fixes-and-improvements"], [440, "bug-fixes-and-improvements"]], "Build": [[404, "build"]], "Building 1D datasets from the new observations": [[466, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[465, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[465, "building-the-3d-analysis-configuration"]], "Built-in models": [[568, "built-in-models"]], "Bundled gammapy.extern code": [[374, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[400, "citation-cff"]], "CLUMPY": [[499, "clumpy"]], "CTA 1DC": [[486, "cta-1dc"]], "CTAO with Gammapy": [[486, null]], "Caplog fixture": [[374, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[402, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[402, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[402, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[572, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[573, "cash-counts-statistic"]], "CashCountsStatistic": [[282, null]], "Catalog table": [[473, "catalog-table"]], "Caveat": [[572, "caveat"]], "Changelog": [[394, "changelog"]], "Check Python code": [[375, "check-python-code"]], "Check broken links": [[375, "check-broken-links"]], "Check setup": [[443, "check-setup"], [445, "check-setup"], [448, "check-setup"], [449, "check-setup"], [450, "check-setup"], [451, "check-setup"], [452, "check-setup"], [453, "check-setup"], [454, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [459, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [468, "check-setup"], [472, "check-setup"], [473, "check-setup"], [474, "check-setup"], [476, "check-setup"], [478, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"], [482, "check-setup"], [484, "check-setup"], [486, "check-setup"], [487, "check-setup"], [488, "check-setup"], [489, "check-setup"], [495, "check-setup"], [496, "check-setup"], [497, "check-setup"]], "Check the dataset we produced": [[488, "check-the-dataset-we-produced"]], "Check your setup": [[409, "check-your-setup"]], "Checker": [[348, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[375, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[400, "citation-scheme"]], "Class attributes": [[375, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[393, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[374, "clobber-or-overwrite"]], "Code in RST files": [[375, "code-in-rst-files"]], "Code in docstrings in Python files": [[375, "code-in-docstrings-in-python-files"]], "Code quality": [[404, "code-quality"]], "Collection of the personal information of authors": [[400, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[576, "colormaps"]], "Combining event lists and GTIs": [[508, "combining-event-lists-and-gtis"]], "Combining two Models": [[481, "combining-two-models"]], "Command line tools": [[571, null]], "Command line tools using click": [[374, "command-line-tools-using-click"]], "Command not found": [[571, "command-not-found"]], "Common API": [[475, "common-api"]], "Compare against the literature": [[450, "compare-against-the-literature"]], "Compare results": [[465, "compare-results"]], "Compound Spectral Model": [[482, "compound-spectral-model"]], "Compound spectral model": [[539, null]], "CompoundSpectralModel": [[215, null]], "Computation times": [[442, null], [447, null], [455, null], [463, null], [469, null], [485, null], [490, null], [492, null], [494, null], [498, null], [526, null], [536, null], [557, null], [567, null]], "Compute Flux Points": [[448, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[454, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[458, "compute-images"]], "Compute sensitivity": [[443, "compute-sensitivity"]], "Computing contours using stat_contour": [[476, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[476, "computing-contours-using-stat-surface"]], "Computing flux points": [[496, "computing-flux-points"]], "Conda Environments": [[405, "conda-environments"]], "Confidence contours": [[476, "confidence-contours"]], "Configurable analysis": [[569, "configurable-analysis"]], "Configuration": [[462, "configuration"]], "Configuration for stacked and joint analysis": [[456, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[449, "configuration-of-the-analysis"]], "Constant spatial model": [[527, null]], "Constant spectral model": [[540, null]], "Constant temporal model": [[558, null]], "ConstantFluxSpatialModel": [[216, null]], "ConstantSpatialModel": [[217, null]], "ConstantSpectralModel": [[218, null]], "ConstantTemporalModel": [[219, null]], "Context": [[445, "context"], [446, "context"], [448, "context"], [449, "context"], [450, "context"], [451, "context"], [452, "context"], [453, "context"], [454, "context"], [457, "context"], [459, "context"], [460, "context"], [462, "context"], [464, "context"], [465, "context"], [466, "context"], [467, "context"], [470, "context"], [471, "context"], [480, "context"], [483, "context"], [484, "context"], [495, "context"], [496, "context"]], "Continuous integration": [[404, "continuous-integration"]], "Contribution in conferences": [[400, "contribution-in-conferences"]], "Contributors": [[413, "contributors"], [414, "contributors"], [415, "contributors"], [416, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[374, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[374, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[524, "coordinates-defined-by-the-regiongeom"]], "Counts": [[487, "counts"]], "Counts and fit statistics": [[573, "counts-and-fit-statistics"]], "Counts statistics classes": [[573, "counts-statistics-classes"]], "Covariance": [[205, null]], "Covariance and parameters errors": [[476, "covariance-and-parameters-errors"]], "CovarianceResult": [[206, null]], "Create DL4 product - PSFMap": [[477, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[475, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[480, "create-a-mask-in-energy"]], "Create a stacked dataset": [[454, "create-a-stacked-dataset"]], "Create edisp kernel map": [[477, "create-edisp-kernel-map"]], "Create exclusion mask": [[448, "create-exclusion-mask"], [454, "create-exclusion-mask"]], "Create exposure map": [[477, "create-exposure-map"]], "Create the energy-dependent temporal model": [[461, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[496, "create-the-maker-classes-to-be-used"]], "Create the makers": [[445, "create-the-makers"]], "Create the mask from a catalog of sources": [[480, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[480, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[480, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[480, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[461, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[479, "creating-wcs-maps"]], "Creating a RegionGeom": [[524, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[524, "creating-a-regionndmap"]], "Creating a mask for fitting": [[480, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[480, "creating-a-mask-manually"]], "Creating an empty dataset": [[474, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[480, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[479, "creating-from-a-map-geometry"]], "Creating the config file": [[453, "creating-the-config-file"], [454, "creating-the-config-file"]], "Creation of the Flux points": [[449, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[466, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[466, "creation-of-the-datasets"]], "Creation of the model": [[449, "creation-of-the-model"]], "Cube plotting": [[479, "cube-plotting"]], "Cumulative excess and significance": [[445, "cumulative-excess-and-significance"]], "Current status": [[399, "current-status"]], "Custom models": [[568, "custom-models"]], "Cutouts": [[479, "cutouts"]], "Cython": [[404, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[400, "dco-implementation"]], "DL3 DR1": [[489, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[301, null]], "Dark matter": [[499, null]], "Dark matter spatial and spectral models": [[472, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[389, "data-fitting"]], "Data access and selection (DL3)": [[508, null]], "Data analysis": [[491, "data-analysis"]], "Data analysis subpackages in gammapy": [[380, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[383, "data-and-observation-handling"]], "Data and models files": [[457, "data-and-models-files"]], "Data exploration": [[491, "data-exploration"]], "Data reduction": [[389, "data-reduction"], [456, "data-reduction"], [456, "id1"], [470, "data-reduction"], [495, "data-reduction"], [496, "data-reduction"]], "Data reduction (DL3 to DL4)": [[519, null]], "Data reduction into a MapDataset": [[488, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[478, "data-reduction-loop"]], "Data selection": [[470, "data-selection"]], "Data structures": [[497, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [386, "dataset"], [478, "dataset"]], "Dataset helper / convenience methods": [[386, "dataset-helper-convenience-methods"]], "Dataset serialization": [[386, "dataset-serialization"]], "Dataset simulations": [[450, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[475, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[220, null]], "Datasets": [[100, null], [383, "datasets"], [386, "datasets"], [401, "datasets"], [474, "datasets"]], "Datasets (DL4)": [[507, null]], "Datasets - Reduced data, IRFs, models": [[474, null]], "Datasets serialization": [[457, "datasets-serialization"]], "DatasetsMaker": [[165, null]], "Datastore": [[486, "datastore"]], "Dealing with links": [[375, "dealing-with-links"]], "Decision": [[379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"]], "Define Target Region": [[448, "define-target-region"]], "Define an Observation": [[460, "define-an-observation"]], "Define an observation and make a dataset": [[461, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[443, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[458, "define-map-geometry"]], "Define the MapDataset": [[460, "define-the-mapdataset"]], "Define the Model": [[466, "define-the-model"]], "Define the ON region": [[450, "define-the-on-region"]], "Define the Sky model: a point-like source": [[460, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[445, "define-the-geometries"]], "Define the geometry": [[480, "define-the-geometry"]], "Define the model": [[496, "define-the-model"]], "Define the model to be used": [[465, "define-the-model-to-be-used"], [465, "id3"]], "Define the simulation source model": [[461, "define-the-simulation-source-model"]], "Define time intervals": [[466, "define-time-intervals"]], "Defining the datastore and selecting observations": [[496, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[466, "defining-the-geometry"]], "Definition of a Contributor": [[400, "definition-of-a-contributor"]], "Definition of the Maintainer": [[400, "definition-of-the-maintainer"]], "Definition of the data selection": [[465, "definition-of-the-data-selection"], [465, "id1"]], "Definition of the dataset geometry": [[465, "definition-of-the-dataset-geometry"], [465, "id2"]], "Dependencies": [[373, null], [391, "dependencies"]], "Deprecating a function or a class": [[374, "deprecating-a-function-or-a-class"]], "Deprecation": [[399, "deprecation"]], "Derivation of the WStat formula": [[574, null]], "Detailed plan": [[381, "detailed-plan"]], "Developer How To": [[374, null]], "Developer guide": [[376, null]], "Discussion / Alternatives": [[389, "discussion-alternatives"]], "Disk spatial model": [[528, null]], "DiskSpatialModel": [[221, null]], "Dissolve gammapy.background": [[393, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[393, "dissolve-gammapy-image"]], "Distributions": [[391, "distributions"], [391, "id1"]], "Documentation": [[383, "documentation"], [440, "documentation"]], "Documentation How To": [[375, null]], "Documentation building": [[375, "documentation-building"]], "Documentation guidelines": [[375, "documentation-guidelines"]], "Download": [[404, "download"]], "EBL absorption spectral model": [[537, null]], "EBLAbsorptionNormSpectralModel": [[222, null]], "EBL_DATA_BUILTIN": [[223, null]], "EDispKernel": [[146, null]], "EDispKernelMap": [[147, null]], "EDispMap": [[148, null]], "ESTIMATOR_REGISTRY": [[118, null]], "Effective Area": [[477, "effective-area"]], "Effective area": [[486, "effective-area"], [513, null]], "EffectiveAreaTable2D": [[149, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[397, "energy-dependent-spatial-models"]], "Energy Dispersion": [[477, "energy-dispersion"], [487, "energy-dispersion"], [515, null]], "Energy dispersion": [[486, "energy-dispersion"]], "Energy edges": [[509, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[119, null]], "EnergyDependentMultiGaussPSF": [[150, null]], "EnergyDispersion2D": [[151, null]], "Estimating TS": [[573, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[471, null]], "Estimator": [[120, null]], "Estimators": [[401, "estimators"], [475, null]], "Estimators (DL4 to DL5, and DL6)": [[509, null]], "Event Simulation": [[383, "event-simulation"]], "Event lists": [[497, "event-lists"]], "Event sampling": [[460, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[486, "events"], [487, "events"]], "Example": [[572, "example"], [572, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[484, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[484, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[556, "example-of-extrapolation"]], "Example plot": [[527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"]], "Examples using FluxPointsEstimator": [[509, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[509, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[507, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[519, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[507, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[519, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[510, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[518, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[520, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[573, "excess-and-significance"], [573, "id2"]], "Excess errors": [[573, "excess-errors"], [573, "id4"]], "Excess estimators": [[398, "excess-estimators"]], "ExcessMapEstimator": [[121, null]], "Exclusion masks": [[480, "exclusion-masks"]], "Execution": [[571, "execution"]], "Exemplary additional prior subclasses:": [[402, "exemplary-additional-prior-subclasses"]], "Exercises": [[443, "exercises"], [446, "exercises"], [448, "exercises"], [451, "exercises"], [456, "exercises"], [458, "exercises"], [460, "exercises"], [461, "exercises"], [467, "exercises"], [470, "exercises"], [486, "exercises"], [487, "exercises"], [488, "exercises"], [489, "exercises"], [497, "exercises"], [497, "id1"], [497, "id2"], [497, "id3"]], "Existing code": [[380, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[224, null]], "ExpCutoffPowerLawNormSpectralModel": [[225, null]], "ExpCutoffPowerLawSpectralModel": [[226, null]], "ExpDecay temporal model": [[559, null]], "ExpDecayTemporalModel": [[227, null]], "Expected number of detected events": [[516, "expected-number-of-detected-events"]], "Exploration of the fit results": [[449, "exploration-of-the-fit-results"]], "Explore the fit results": [[445, "explore-the-fit-results"]], "Explore the results": [[445, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[446, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[543, null]], "Exponential cutoff power law spectral model": [[541, null]], "Exponential cutoff power law spectral model used for 3FGL": [[542, null]], "Expose model parameters as attributes": [[385, "expose-model-parameters-as-attributes"]], "Exposure": [[487, "exposure"]], "Extended source using a template": [[460, "extended-source-using-a-template"]], "Extract the light curve": [[466, "extract-the-light-curve"]], "Extract the lightcurve": [[467, "extract-the-lightcurve"]], "Extracting the light curve": [[465, "extracting-the-light-curve"]], "Extracting the ring background": [[454, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[516, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[403, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[457, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[487, null]], "FermiST": [[499, "fermist"]], "Files": [[486, "files"]], "Filling a RegionNDMap": [[524, "filling-a-regionndmap"]], "Filling maps from event lists": [[479, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[479, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[466, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[379, "final-remarks"]], "Final result": [[574, "final-result"]], "Fit": [[207, null], [464, "fit"], [487, "fit"]], "Fit quality and model residuals": [[448, "fit-quality-and-model-residuals"], [450, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[476, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[456, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[456, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[448, "fit-spectrum"], [450, "fit-spectrum"]], "Fit statistics": [[572, null]], "Fit the datasets": [[467, "fit-the-datasets"]], "Fit the model": [[496, "fit-the-model"]], "FitResult": [[208, null]], "Fitting": [[383, "fitting"], [476, null]], "Fitting Multiple Datasets with and without the Prior": [[484, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[484, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[476, "fitting-options"]], "Fitting temporal models": [[467, "fitting-temporal-models"]], "Fitting the obtained light curve": [[467, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[374, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[374, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[475, "flux-points-estimation"]], "Flux Profile Estimation": [[462, null]], "Flux maps": [[509, "flux-maps"]], "Flux maps for annihilation": [[472, "flux-maps-for-annihilation"]], "Flux maps for decay": [[472, "flux-maps-for-decay"]], "Flux point fitting": [[446, null]], "Flux points": [[473, "flux-points"], [495, "flux-points"], [509, "flux-points"]], "Flux quantities": [[509, "flux-quantities"]], "FluxMaps": [[122, null]], "FluxMetaData": [[123, null]], "FluxPoints": [[124, null]], "FluxPointsDataset": [[101, null], [386, "fluxpointsdataset"], [474, "fluxpointsdataset"]], "FluxPointsEstimator": [[125, null]], "FluxProfileEstimator": [[126, null]], "FoV background": [[478, "fov-background"], [518, null]], "FoVAlignment": [[152, null]], "FoVBackgroundMaker": [[166, null]], "FoVBackgroundModel": [[228, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[471, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[481, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[375, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[374, "functions-returning-several-values"]], "Further extensions": [[444, "further-extensions"]], "Further references": [[572, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[487, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[501, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[472, "gamma-ray-spectra-at-production"]], "Gammapy": [[411, null]], "Gammapy Binder": [[404, "id1"]], "Gammapy analysis workflow and package structure": [[569, null]], "Gammapy overview": [[394, "gammapy-overview"]], "Gammapy repository": [[404, "gammapy-repository"]], "Gammapy webpages": [[404, "gammapy-webpages"]], "Gaussian spatial model": [[529, null]], "Gaussian spectral model": [[544, null]], "Gaussian temporal model": [[560, null]], "GaussianSpatialModel": [[229, null]], "GaussianSpectralModel": [[230, null]], "GaussianTemporalModel": [[231, null]], "General Gammapy publications": [[400, "general-gammapy-publications"]], "General code style guidelines": [[380, "general-code-style-guidelines"]], "General conventions": [[374, "general-conventions"]], "General idea and class diagram": [[384, "general-idea-and-class-diagram"]], "General method": [[509, "general-method"]], "General organization of the new approach": [[389, "general-organization-of-the-new-approach"]], "Generalist estimators": [[398, "generalist-estimators"]], "Generalized Gaussian temporal model": [[561, null]], "Generalized gaussian spatial model": [[530, null]], "GeneralizedGaussianSpatialModel": [[232, null]], "GeneralizedGaussianTemporalModel": [[233, null]], "Generating log messages": [[374, "generating-log-messages"]], "Geom": [[187, null]], "Get a fit stat profile for the redshift": [[444, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[377, "get-in-touch-early"]], "Get set up": [[377, "get-set-up"]], "Get the flux points": [[444, "get-the-flux-points"]], "Getting started": [[394, "getting-started"], [406, null], [500, "getting-started"], [501, "getting-started"], [502, "getting-started"]], "Getting started section restructuring": [[394, "getting-started-section-restructuring"]], "Getting started with data": [[508, "getting-started-with-data"]], "Getting started with maps": [[523, "getting-started-with-maps"]], "Getting the reduced dataset": [[453, "getting-the-reduced-dataset"], [454, "getting-the-reduced-dataset"]], "Global Model Handling": [[396, "global-model-handling"]], "Glossary": [[570, "glossary"]], "Glossary and references": [[570, null]], "Goodness of fit": [[574, "goodness-of-fit"]], "Guidelines and specific actions": [[394, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[489, null]], "HAWC data access and reduction": [[488, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[488, null]], "HAWC: 1D dataset for flux point fitting": [[457, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[309, null]], "HEALPix geometry": [[522, "healpix-geometry"]], "HEALPix-based maps": [[522, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[457, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[400, "handling-of-conference-material"]], "Help!?": [[409, "help"]], "Hierarchical clustering of observations": [[483, "hierarchical-clustering-of-observations"]], "Hierarchy": [[401, "hierarchy"]], "High Level Analysis Interface": [[510, null]], "High level interface": [[383, "high-level-interface"], [495, null]], "How To": [[394, "how-to"], [511, null]], "How to contribute to Gammapy": [[377, null]], "How to get data values": [[479, "how-to-get-data-values"]], "How to handle API breaking changes?": [[374, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[403, null]], "How to make a pull request": [[374, "how-to-make-a-pull-request"]], "How to set data values": [[479, "how-to-set-data-values"]], "How to use logging": [[374, "how-to-use-logging"]], "How to use random numbers": [[374, "how-to-use-random-numbers"]], "How to write code": [[374, "how-to-write-code"]], "How to write tests": [[374, "how-to-write-tests"]], "HpxGeom": [[188, null]], "HpxMap": [[189, null]], "HpxNDMap": [[190, null]], "IPython": [[410, "id3"]], "IRF": [[153, null], [401, "irf"]], "IRF axis naming": [[516, "irf-axis-naming"]], "IRFMap": [[154, null]], "IRF_REGISTRY": [[155, null]], "IRFs": [[383, "irfs"], [486, "irfs"]], "Image Plotting": [[479, "image-plotting"]], "ImageProfile": [[127, null]], "ImageProfileEstimator": [[128, null]], "Images and masks": [[388, "images-and-masks"]], "Implement default parameters": [[385, "implement-default-parameters"]], "Implement evaluation region specifications": [[385, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[385, "implement-sky-coordinate-handling"]], "Implementation": [[394, "implementation"], [402, "implementation"]], "Implementation Outline": [[402, "implementation-outline"]], "Implementation road map": [[384, "implementation-road-map"]], "Implementing a custom model": [[482, "implementing-a-custom-model"]], "Implementing a custom prior": [[484, "implementing-a-custom-prior"]], "Imports and versions": [[464, "imports-and-versions"]], "Improve SourceModels class": [[385, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[385, "improve-and-implement-model-serilization"]], "Improve spatial models": [[385, "improve-spatial-models"]], "In the RST files": [[375, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[477, "inbuilt-gammapy-irfs"]], "Include png files as images": [[375, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[479, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[496, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[496, "inspecting-residuals"]], "Install issues": [[409, "install-issues"]], "Installation": [[394, "installation"], [406, "installation"], [407, null]], "Instrument Response Functions (DL3)": [[516, null]], "Interaction Between Models and Dataset Objects": [[396, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[523, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[479, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[374, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[397, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[398, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[398, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[398, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[395, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[395, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[395, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[393, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[395, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[385, "introduce-naming-scheme-for-models"]], "Introduction": [[385, "introduction"], [388, "introduction"], [389, "introduction"], [391, "introduction"], [392, "introduction"], [394, "introduction"], [398, "introduction"], [400, "introduction"], [401, "introduction"], [443, "introduction"], [448, "introduction"], [450, "introduction"], [458, "introduction"], [468, "introduction"], [472, "introduction"], [473, "introduction"], [474, "introduction"], [478, "introduction"], [479, "introduction"], [486, "introduction"], [487, "introduction"], [488, "introduction"], [489, "introduction"], [491, "introduction"], [497, "introduction"], [499, "introduction"], [501, "introduction"], [502, "introduction"], [572, "introduction"]], "Introduction of background models": [[385, "introduction-of-background-models"]], "Introduction of model name attributes": [[385, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[385, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[323, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[487, "isotropic-diffuse-background"]], "Iterating by image": [[479, "iterating-by-image"]], "J Factors": [[472, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[507, "joint-analysis"]], "Joint analysis": [[456, "joint-analysis"], [457, "joint-analysis"]], "Jupyter": [[406, "id2"], [408, "jupyter"]], "Jupyter notebooks": [[410, "jupyter-notebooks"]], "Key Features": [[475, "key-features"]], "LabelMapAxis": [[191, null], [479, "labelmapaxis"]], "Latest CTAO performance files": [[486, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[386, "lazy-loading-of-datasets"]], "LazyFitsData": [[310, null]], "Let\u2019s simulate the model": [[461, "let-s-simulate-the-model"]], "Light Curve Fitting": [[389, "light-curve-fitting"]], "Light Curve estimation by observation": [[465, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[566, null]], "Light curves": [[465, null]], "Light curves for flares": [[466, null]], "LightCurveEstimator": [[129, null]], "LightCurveTemplateTemporalModel": [[234, null]], "Lightcurve": [[389, "lightcurve"]], "Lightcurves": [[473, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[389, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[384, "limitations"]], "Linear temporal model": [[562, null]], "LinearTemporalModel": [[235, null]], "Links to documentation": [[375, "links-to-documentation"]], "Links to other tutorials": [[375, "links-to-other-tutorials"]], "List available catalogs": [[473, "list-available-catalogs"]], "Load Data": [[448, "load-data"]], "Load IRFs and prepare dataset": [[443, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[473, "load-catalogs"]], "Load data": [[450, "load-data"]], "Load spectral points": [[446, "load-spectral-points"]], "Load the data": [[444, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[475, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[488, "load-the-tables"]], "Loading models from a catalog": [[481, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[374, "locate-origin-of-warnings"]], "Log parabola spectral model": [[545, null]], "Log parabola spectral norm model": [[546, null]], "Log-Parabola Fit": [[446, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[236, null]], "LogParabolaSpectralModel": [[237, null]], "LogSpiral": [[34, null]], "Long Term Support releases": [[400, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[496, null]], "Low level map and cube analysis": [[380, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[167, null]], "METHOD_DEFAULT": [[317, null]], "METHOD_KWARGS_DEFAULT": [[318, null]], "MODEL_REGISTRY": [[238, null]], "Maintainer and developer perspective": [[381, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[383, "maintenance-and-code-quality"]], "Make a Bugfix release": [[403, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[468, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[458, "make-sky-images"]], "Make small pull requests": [[377, "make-small-pull-requests"]], "Maker": [[168, null]], "Makers": [[401, "makers"]], "Makers - Data reduction": [[478, null]], "Making a butterfly plot": [[496, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[374, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[374, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[374, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[483, "manual-grouping-of-observations"]], "Map": [[192, null]], "Map Analysis / Data Reduction": [[383, "map-analysis-data-reduction"]], "MapAxes": [[193, null]], "MapAxis": [[194, null]], "MapCoord": [[195, null], [523, "mapcoord"]], "MapDataset": [[102, null], [386, "mapdataset"], [474, "mapdataset"]], "MapDatasetEventSampler": [[103, null], [387, "mapdataseteventsampler"]], "MapDatasetMaker": [[169, null]], "MapDatasetMetaData": [[104, null]], "MapDatasetOnOff": [[105, null], [386, "mapdatasetonoff"]], "MapPanelPlotter": [[361, null]], "Maps": [[196, null], [383, "maps"], [479, null], [497, "maps"]], "Maps operations": [[479, "maps-operations"]], "Mask dilation and erosion": [[480, "mask-dilation-and-erosion"]], "Mask maps": [[480, null]], "Mask modifications": [[480, "mask-modifications"]], "Mask some sky regions": [[480, "mask-some-sky-regions"]], "Masks for fitting": [[480, "masks-for-fitting"]], "Masks operations": [[480, "masks-operations"]], "Meetings": [[383, "meetings"]], "Metadata API": [[401, "metadata-api"]], "Metadata files": [[400, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[401, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[471, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[239, null]], "Minor changes": [[395, "minor-changes"]], "Mission elapsed times (MET)": [[575, "mission-elapsed-times-met"]], "Model": [[240, null]], "Model and dataset": [[476, "model-and-dataset"], [484, "model-and-dataset"]], "Model fit": [[458, "model-fit"]], "Model fitting": [[449, "model-fitting"], [495, "model-fitting"]], "Model gallery": [[525, null]], "Model lists and serialisation": [[482, "model-lists-and-serialisation"]], "Model the observed spectrum": [[444, "model-the-observed-spectrum"]], "ModelBase": [[241, null]], "Modeling": [[383, "modeling"], [401, "modeling"], [470, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[568, null]], "Modeling and fitting": [[456, "modeling-and-fitting"]], "Modelling": [[453, "modelling"], [481, null]], "Models": [[242, null], [482, null]], "Models with energy dependent morphology": [[482, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[482, "models-with-shared-parameter"]], "Modifying Data": [[479, "modifying-data"]], "Modifying model parameters": [[482, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[459, null]], "Motivation": [[402, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[457, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[319, null]], "Naima spectral model": [[547, null]], "NaimaSpectralModel": [[243, null]], "New features": [[436, "new-features"], [439, "new-features"], [440, "new-features"]], "Next steps": [[486, "next-steps"], [488, "next-steps"], [489, "next-steps"]], "Night-wise LC estimation": [[465, "night-wise-lc-estimation"]], "Norm Spectral Models": [[482, "norm-spectral-models"]], "Notations": [[573, "notations"]], "Notes": [[572, "notes"]], "OGIPDatasetReader": [[106, null]], "OGIPDatasetWriter": [[107, null]], "Object text repr, str and info": [[374, "object-text-repr-str-and-info"]], "Objective": [[453, "objective"], [454, "objective"], [460, "objective"], [461, "objective"], [483, "objective"]], "Objectives": [[384, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[478, "observation-duration-and-effective-livetime"]], "Observation selection": [[449, "observation-selection"], [495, "observation-selection"]], "ObservationEventSampler": [[108, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[483, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[459, "obtain-the-data-to-use"]], "Obtain the observations": [[483, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[443, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[404, "old-example-data"]], "On-Off analysis": [[451, "on-off-analysis"]], "Opening the data": [[468, "opening-the-data"]], "OptimizeResult": [[209, null]], "Optional dependencies": [[373, "optional-dependencies"], [391, "optional-dependencies"]], "Other folders": [[404, "other-folders"]], "Other packages": [[499, "other-packages"]], "Other repositories": [[404, "other-repositories"]], "Others": [[374, "others"], [404, "others"]], "Outlook": [[386, "outlook"], [388, "outlook"], [390, "outlook"], [391, "outlook"], [393, "outlook"], [394, "outlook"], [395, "outlook"], [398, "outlook"]], "Output in Jupyter notebook cells": [[374, "output-in-jupyter-notebook-cells"]], "Overview": [[518, "overview"], [520, "overview"], [521, "overview"]], "PIG 1 - PIG purpose and guidelines": [[379, null]], "PIG 10 - Regions": [[388, null]], "PIG 11 - Light curves": [[389, null]], "PIG 12 - High level interface": [[390, null]], "PIG 13 - Gammapy dependencies and distribution": [[391, null]], "PIG 14 - Uncertainty estimation": [[392, null]], "PIG 16 - Gammapy package structure": [[393, null]], "PIG 18 - Documentation": [[394, null]], "PIG 19 - Gammapy package structure follow up": [[395, null]], "PIG 2 - Organization of low level analysis code": [[380, null]], "PIG 20 - Global Model API": [[396, null]], "PIG 21 - Models improvements": [[397, null]], "PIG 22 - Unified flux estimators API": [[398, null]], "PIG 23 - Gammapy release cycle and version numbering": [[399, null]], "PIG 24 - Authorship policy": [[400, null]], "PIG 25 - Metadata container for Gammapy": [[401, null]], "PIG 26 - Model Priors API": [[402, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[381, null]], "PIG 4 - Setup for tutorial notebooks and data": [[382, null]], "PIG 5 - Gammapy 1.0 roadmap": [[383, null]], "PIG 6 - CTA observation handling": [[384, null]], "PIG 7 - Models": [[385, null]], "PIG 8 - Datasets": [[386, null]], "PIG 9 - Event sampling": [[387, null]], "PIG review": [[379, "pig-review"]], "PIG status": [[379, "pig-status"]], "PIGs": [[378, null]], "POOL_KWARGS_DEFAULT": [[320, null]], "PSF": [[477, "psf"], [487, "psf"]], "PSF3D": [[156, null]], "PSFKernel": [[157, null]], "PSFKing": [[158, null]], "PSFMap": [[159, null]], "PWN": [[50, null]], "Package / API": [[491, "package-api"]], "Package and docs": [[404, "package-and-docs"]], "Package structure and dependencies": [[427, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[383, "papers"]], "Parallel evaluation of datasets": [[386, "parallel-evaluation-of-datasets"]], "Parameter": [[210, null]], "ParameterEstimator": [[130, null]], "Parameters": [[211, null]], "ParametricPSF": [[160, null]], "Perform spectral model fitting": [[445, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[496, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[445, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[387, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[565, null]], "Phase-resolved map": [[468, "phase-resolved-map"]], "Phase-resolved spectrum": [[468, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[170, null]], "Phasogram": [[468, "phasogram"]], "Piecewise  norm spectral model": [[548, null]], "Piecewise norm spatial model": [[531, null]], "PiecewiseNormSpatialModel": [[244, null]], "PiecewiseNormSpectralModel": [[245, null]], "Pixel coordinate convention": [[374, "pixel-coordinate-convention"]], "Plot": [[458, "plot"]], "Plot off regions": [[448, "plot-off-regions"]], "Plot the fitted spectrum": [[496, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[444, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[462, "plotting-results"]], "Plotting a RegionGeom": [[524, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[481, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[449, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[524, "plotting-the-map-content"]], "Plotting the results": [[459, "plotting-the-results"]], "Plotting the underlying region": [[524, "plotting-the-underlying-region"]], "Point Spread Function": [[517, null]], "Point source sensitivity": [[443, null]], "Point spatial model": [[532, null]], "Point spread function": [[486, "point-spread-function"]], "PointSpatialModel": [[246, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[400, "possible-implementations"]], "Post release": [[403, "post-release"]], "Power Law Fit": [[446, "power-law-fit"]], "Power law 2 spectral model": [[550, null]], "Power law norm spectral model": [[551, null]], "Power law spectral model": [[549, null]], "PowerLaw temporal model": [[563, null]], "PowerLaw2SpectralModel": [[247, null]], "PowerLawNormSpectralModel": [[248, null]], "PowerLawSpectralModel": [[249, null]], "PowerLawTemporalModel": [[250, null]], "Predicted counts": [[507, "predicted-counts"]], "Prepare and run the event sampler": [[461, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[445, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[496, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[445, "prerequisites"], [446, "prerequisites"], [448, "prerequisites"], [449, "prerequisites"], [450, "prerequisites"], [451, "prerequisites"], [453, "prerequisites"], [457, "prerequisites"], [459, "prerequisites"], [460, "prerequisites"], [461, "prerequisites"], [462, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [466, "prerequisites"], [467, "prerequisites"], [471, "prerequisites"], [476, "prerequisites"], [480, "prerequisites"], [481, "prerequisites"], [484, "prerequisites"], [495, "prerequisites"], [496, "prerequisites"]], "Pretty-print source information": [[473, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[251, null]], "PriorParameter": [[212, null]], "PriorParameters": [[213, null]], "Priors": [[484, null]], "Profile Estimation": [[462, "profile-estimation"]], "Profile Likelihood": [[574, "profile-likelihood"]], "Profiles": [[472, "profiles"]], "Project Management": [[383, "project-management"]], "Project setup": [[404, null]], "Projects": [[383, "projects"]], "Proposal": [[382, "proposal"], [384, "proposal"], [385, "proposal"], [386, "proposal"], [387, "proposal"], [388, "proposal"], [389, "proposal"], [390, "proposal"], [392, "proposal"], [393, "proposal"], [394, "proposal"], [395, "proposal"], [396, "proposal"], [397, "proposal"]], "Proposal of API for flux estimate results": [[398, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[462, "proposed-approach"]], "Proposed approach": [[445, "proposed-approach"], [446, "proposed-approach"], [449, "proposed-approach"], [451, "proposed-approach"], [452, "proposed-approach"], [453, "proposed-approach"], [454, "proposed-approach"], [457, "proposed-approach"], [460, "proposed-approach"], [461, "proposed-approach"], [464, "proposed-approach"], [465, "proposed-approach"], [466, "proposed-approach"], [467, "proposed-approach"], [470, "proposed-approach"], [471, "proposed-approach"], [476, "proposed-approach"], [480, "proposed-approach"], [481, "proposed-approach"], [483, "proposed-approach"], [495, "proposed-approach"], [496, "proposed-approach"]], "Proposed class diagram": [[384, "proposed-class-diagram"]], "Proposed metadata classes": [[401, "proposed-metadata-classes"]], "Proposed solution": [[401, "proposed-solution"]], "Pull Requests": [[427, "pull-requests"], [428, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"]], "Pull requests": [[413, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[503, null]], "Pulsar Wind Nebula Source Models": [[504, null]], "Pulsar analysis": [[468, null]], "Python": [[410, "id2"]], "Python scripts": [[410, "python-scripts"]], "Python version support": [[374, "python-version-support"]], "RadMax2D": [[161, null]], "Read and Introduce Data": [[462, "read-and-introduce-data"]], "Read in input images": [[452, "read-in-input-images"]], "Read the datasets": [[481, "read-the-datasets"]], "Read the energy-dependent model": [[461, "read-the-energy-dependent-model"]], "Reading Maps": [[479, "reading-maps"]], "Reading and Writing": [[479, "reading-and-writing"]], "Reading and writing masks": [[480, "reading-and-writing-masks"]], "Reading different datasets": [[457, "reading-different-datasets"]], "RecoPSFMap": [[162, null]], "Recommended Setup": [[406, "recommended-setup"], [408, null]], "Reference": [[394, "reference"], [571, "reference"]], "References": [[570, "publications"]], "Reflected regions background": [[478, "reflected-regions-background"], [520, null]], "ReflectedRegionsBackgroundMaker": [[171, null]], "ReflectedRegionsFinder": [[172, null]], "Region arguments": [[388, "region-arguments"]], "RegionGeom": [[197, null], [524, "regiongeom"]], "RegionGeom and RegionNDMap": [[524, null]], "RegionGeom and coordinates": [[524, "regiongeom-and-coordinates"]], "RegionNDMap": [[198, null], [524, "regionndmap"]], "RegionsFinder": [[173, null]], "Relation to WCS geometries": [[524, "relation-to-wcs-geometries"]], "Release notes": [[374, "release-notes"], [412, null]], "Release preparation, feature freeze": [[399, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[399, "release-scheduling-and-lts"]], "Releases": [[383, "releases"], [400, "releases"], [404, "releases"]], "Releasing the final version of the major release": [[403, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[403, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[481, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[374, "removing-an-attribute"]], "Renaming an argument": [[374, "renaming-an-argument"]], "Required dependencies": [[373, "required-dependencies"], [391, "required-dependencies"]], "Requirements": [[401, "requirements"]], "Resampling datasets": [[474, "resampling-datasets"]], "Resolve gammapy.detect": [[395, "resolve-gammapy-detect"]], "Results": [[443, "results"]], "Results exploration": [[449, "results-exploration"]], "Ring background": [[478, "ring-background"], [521, null]], "Ring background map": [[454, null]], "RingBackgroundMaker": [[174, null]], "Rotated regions": [[388, "rotated-regions"]], "Run Estimation": [[462, "run-estimation"]], "Run Estimator": [[459, "run-estimator"]], "Run data reduction chain": [[448, "run-data-reduction-chain"], [450, "run-data-reduction-chain"]], "Run the 1D data reduction": [[465, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[465, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[571, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[377, "running-tests-building-documentation"]], "Running the Data Reduction": [[449, "running-the-data-reduction"]], "Running the analysis": [[495, "running-the-analysis"]], "Running the estimation": [[449, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[449, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[449, "running-the-fit"]], "Running the light curve extraction in 1D": [[465, "running-the-light-curve-extraction-in-1d"]], "SED types": [[509, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[252, null]], "SPECTRAL_MODEL_REGISTRY": [[253, null]], "Safe data range definition": [[519, "safe-data-range-definition"]], "Safe data range handling": [[478, "safe-data-range-handling"]], "SafeMaskMaker": [[175, null]], "Sample a source with energy-dependent temporal evolution": [[461, null]], "Sampling methods": [[387, "sampling-methods"]], "Sampling the source and background events": [[460, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[449, "save-dataset-to-disk"], [495, "save-dataset-to-disk"], [496, "save-dataset-to-disk"]], "ScaleSpectralModel": [[254, null]], "ScaledRegularGridInterpolator": [[313, null]], "Scripts": [[491, "scripts"]], "Select a catalog subset": [[473, "select-a-catalog-subset"]], "Select a source": [[473, "select-a-source"]], "Select observations": [[458, "select-observations"]], "Select the ON region": [[445, "select-the-on-region"]], "Select the data": [[445, "select-the-data"], [466, "select-the-data"]], "Selecting models contributing to a given region": [[481, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[481, "selecting-models-from-a-list"]], "SensitivityEstimator": [[131, null]], "Serialisation": [[402, "serialisation"], [477, "serialisation"], [477, "id1"], [477, "id2"], [487, "serialisation"]], "Serialisation and I/O": [[462, "serialisation-and-i-o"]], "Serialisation of datasets": [[507, "serialisation-of-datasets"]], "Serialisation of the fit result": [[449, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[449, "serialisation-of-the-results"]], "Serialising models": [[481, "serialising-models"]], "Serialization": [[401, "serialization"]], "Setting fitting parameters": [[449, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[495, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[495, "setting-the-background-normalization-maker"]], "Setting the data to use": [[495, "setting-the-data-to-use"]], "Setting the exclusion mask": [[449, "setting-the-exclusion-mask"], [495, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[495, "setting-the-reduced-datasets-geometry"]], "Setup": [[443, "setup"], [444, "setup"], [445, "setup"], [446, "setup"], [448, "setup"], [449, "setup"], [450, "setup"], [451, "setup"], [452, "setup"], [453, "setup"], [454, "setup"], [458, "setup"], [459, "setup"], [460, "setup"], [461, "setup"], [462, "setup"], [465, "setup"], [466, "setup"], [467, "setup"], [470, "setup"], [471, "setup"], [472, "setup"], [474, "setup"], [478, "setup"], [479, "setup"], [480, "setup"], [481, "setup"], [482, "setup"], [486, "setup"], [487, "setup"], [495, "setup"], [496, "setup"], [497, "setup"]], "Shell spatial model": [[533, null]], "Shell2 spatial model": [[534, null]], "Shell2SpatialModel": [[255, null]], "ShellSpatialModel": [[256, null]], "Show images": [[458, "show-images"]], "Show the results tables": [[459, "show-the-results-tables"]], "Show various observation quantities": [[483, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[397, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[397, "simplify-yaml-representation"]], "Simulate multiple event lists": [[460, "simulate-multiple-event-lists"]], "Simulating a light curve": [[467, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[467, null]], "Simulation": [[464, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[386, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[451, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[564, null]], "SineTemporalModel": [[257, null]], "Skip unit tests for some Astropy versions": [[374, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[388, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[523, null]], "SkyModel": [[258, null], [482, "skymodel"]], "Smooth broken power law spectral model": [[552, null]], "SmoothBrokenPowerLawSpectralModel": [[259, null]], "Some terminology": [[384, "some-terminology"]], "Source Detection": [[458, "source-detection"]], "Source candidates": [[452, "source-candidates"]], "Source catalogs": [[473, null], [497, "source-catalogs"], [506, null]], "Source detection and significance maps": [[452, null]], "Source information": [[473, "source-information"]], "Source models": [[473, "source-models"], [486, "source-models"]], "Source object": [[473, "source-object"]], "Source statistic": [[448, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[385, "sourceirfmodel"]], "Spatial analysis": [[458, "spatial-analysis"]], "Spatial models": [[482, "spatial-models"], [525, "spatial-models"]], "SpatialIRFModel": [[385, "spatialirfmodel"]], "SpatialModel": [[260, null]], "Special cases": [[574, "special-cases"]], "Specificities of the HGPS catalog": [[473, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[397, "spectral-absorption-model"]], "Spectral Norm Models": [[397, "spectral-norm-models"]], "Spectral analysis": [[448, null]], "Spectral analysis of extended sources": [[445, null]], "Spectral analysis with energy-dependent directional cuts": [[450, null]], "Spectral analysis with the HLI": [[449, null]], "Spectral models": [[482, "spectral-models"], [525, "spectral-models"]], "Spectral models and flux points": [[497, "spectral-models-and-flux-points"]], "Spectral points": [[458, "spectral-points"]], "SpectralIRFModel": [[385, "spectralirfmodel"]], "SpectralModel": [[261, null]], "Spectrum": [[458, "spectrum"]], "Spectrum dataset": [[478, "spectrum-dataset"]], "SpectrumDataset": [[109, null], [386, "spectrumdataset"], [474, "spectrumdataset"]], "SpectrumDatasetMaker": [[176, null]], "SpectrumDatasetOnOff": [[110, null], [386, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[375, "sphinx-gallery-extension"]], "Spiral arm models": [[501, "spiral-arm-models"]], "Stack observations": [[448, "stack-observations"]], "Stacked analysis": [[456, "stacked-analysis"]], "Stacking Multiple Datasets": [[507, "stacking-multiple-datasets"]], "Statistical utility functions": [[573, null]], "Status": [[384, "status"], [393, "status"]], "Storing the energy dispersion information as a function of sky position": [[515, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[389, "storing-the-results-and-further-studies"]], "Sub-packages": [[500, "sub-packages"]], "Suggestions": [[400, "suggestions"]], "Summary": [[413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [456, "summary"], [487, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[555, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[554, null]], "Super exponential cutoff power law model used for 3FGL": [[553, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[262, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[263, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[264, null]], "Supernova Remnant Models": [[505, null]], "Support for Asymmetric IRFs": [[477, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[399, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[493, null]], "Survey panel plots": [[576, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[265, null]], "TS map estimation": [[452, "ts-map-estimation"]], "TSMapEstimator": [[132, null]], "Table conversion": [[475, "table-conversion"]], "Task List": [[386, "task-list"]], "Task list": [[385, "task-list"], [387, "task-list"], [388, "task-list"], [389, "task-list"], [390, "task-list"], [391, "task-list"]], "Template spatial model": [[535, null]], "Template spectral model": [[556, null]], "TemplateNDSpatialModel": [[266, null]], "TemplateNDSpectralModel": [[267, null]], "TemplateNPredModel": [[268, null]], "TemplatePhaseCurveTemporalModel": [[269, null]], "TemplateSpatialModel": [[270, null]], "TemplateSpectralModel": [[271, null]], "Temporal models": [[482, "temporal-models"], [525, "temporal-models"]], "TemporalModel": [[272, null]], "Testing of plotting functions": [[374, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[380, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[459, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[404, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[404, "the-gammapy-extra-repository"]], "The index tables": [[508, "the-index-tables"]], "The reflected region finder": [[520, "the-reflected-region-finder"]], "The results for testing energy dependence": [[459, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[459, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[457, "the-setup"], [475, "the-setup"], [476, "the-setup"], [484, "the-setup"]], "Theta squared event distribution": [[489, "theta-squared-event-distribution"]], "Time": [[491, "time"]], "Time bin preparation": [[389, "time-bin-preparation"]], "Time bins": [[389, "time-bins"]], "Time differences": [[575, "time-differences"]], "Time format and scale": [[575, "time-format-and-scale"]], "Time handling in Gammapy": [[575, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[470, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[470, null]], "Time variable source using a lightcurve": [[460, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[199, null], [479, "timemapaxis"]], "Timing Analysis": [[383, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[283, null]], "Troubleshooting": [[409, null], [571, "troubleshooting"]], "Tutorial overview": [[459, "tutorial-overview"], [486, "tutorial-overview"], [488, "tutorial-overview"]], "Tutorials": [[394, "tutorials"], [491, null]], "Tutorials Overview": [[406, "tutorials-overview"]], "Type validation": [[401, "type-validation"]], "Types of supported datasets": [[507, "types-of-supported-datasets"]], "Unification of flux estimators?": [[398, "unification-of-flux-estimators"]], "Unify calling interface for models": [[385, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[524, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[402, "use-cases"]], "Use cases / scenarios": [[384, "use-cases-scenarios"]], "User guide": [[512, null]], "User perspective": [[381, "user-perspective"]], "Using Anaconda / Miniconda": [[407, "using-anaconda-miniconda"]], "Using Factory Methods": [[479, "using-factory-methods"]], "Using Gammapy": [[410, null]], "Using Gammapy IRFs": [[477, null]], "Using Mamba": [[407, "using-mamba"]], "Using YAML configuration files": [[495, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[449, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[449, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[510, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[499, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[502, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[506, "using-gammapy-catalog"]], "Using gammapy.data": [[508, "using-gammapy-data"]], "Using gammapy.datasets": [[507, "using-gammapy-datasets"]], "Using gammapy.estimators": [[509, "using-gammapy-estimators"]], "Using gammapy.irf": [[516, "using-gammapy-irf"]], "Using gammapy.makers": [[519, "using-gammapy-makers"]], "Using gammapy.maps": [[523, "using-gammapy-maps"]], "Using gammapy.modeling": [[568, "using-gammapy-modeling"]], "Using masks": [[474, "using-masks"]], "Using other package managers": [[407, "using-other-package-managers"]], "Using pip": [[407, "using-pip"]], "Using regions": [[520, "using-regions"]], "Using the reflected background estimator": [[520, "using-the-reflected-background-estimator"]], "Utility functions": [[575, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[501, "velocity-distributions"]], "Venv Environments": [[405, "venv-environments"]], "Version 0.1": [[412, "version-0-1"]], "Version 0.10": [[412, "version-0-10"]], "Version 0.11": [[412, "version-0-11"]], "Version 0.12": [[412, "version-0-12"]], "Version 0.13": [[412, "version-0-13"]], "Version 0.14": [[412, "version-0-14"]], "Version 0.15": [[412, "version-0-15"]], "Version 0.16": [[412, "version-0-16"]], "Version 0.17": [[412, "version-0-17"]], "Version 0.18": [[412, "version-0-18"]], "Version 0.19": [[412, "version-0-19"]], "Version 0.2": [[412, "version-0-2"]], "Version 0.20": [[412, "version-0-20"]], "Version 0.20.1": [[412, "version-0-20-1"]], "Version 0.3": [[412, "version-0-3"]], "Version 0.4": [[412, "version-0-4"]], "Version 0.5": [[412, "version-0-5"]], "Version 0.6": [[412, "version-0-6"]], "Version 0.7": [[412, "version-0-7"]], "Version 0.8": [[412, "version-0-8"]], "Version 0.9": [[412, "version-0-9"]], "Version 1.0": [[412, "version-1-0"]], "Version 1.0.1": [[412, "version-1-0-1"]], "Version 1.0.2": [[412, "version-1-0-2"]], "Version 1.1": [[412, "version-1-1"]], "Version 1.2": [[412, "version-1-2"]], "Version numbering": [[399, "version-numbering"]], "Virtual Environments": [[405, null]], "Visualing a RegionNDMap": [[524, "visualing-a-regionndmap"]], "Visualising the results": [[470, "visualising-the-results"]], "Visualization": [[576, null]], "Visualizing and Plotting": [[479, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[572, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[573, "wstat-counts-statistic"]], "WStatCountsStatistic": [[284, null]], "WcsGeom": [[200, null]], "WcsMap": [[201, null]], "WcsNDMap": [[202, null]], "What checks and conversions should I do for inputs?": [[374, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[379, "what-is-a-pig"]], "What is this?": [[377, "what-is-this"]], "What next?": [[446, "what-next"], [448, "what-next"], [452, "what-next"], [458, "what-next"], [465, "what-next"], [497, "what-next"]], "What others have": [[384, "what-others-have"]], "What we have": [[382, "what-we-have"], [390, "what-we-have"], [398, "what-we-have"]], "What\u2019s new?": [[414, "what-s-new"], [415, "what-s-new"], [416, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"]], "What\u2019s next": [[495, "whats-next"]], "What\u2019s next?": [[449, "whats-next"]], "Where should I import from?": [[374, "where-should-i-import-from"]], "WobbleRegionsFinder": [[177, null]], "Working with event lists": [[508, "working-with-event-lists"]], "Write your own CLI": [[571, "write-your-own-cli"]], "Writing Maps": [[479, "writing-maps"]], "Writing a PIG": [[379, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[524, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[508, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[355, null]], "add_colorbar": [[362, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[363, null]], "apply_edisp": [[111, null], [115, null]], "arbitrary type input and validation": [[401, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[515, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[514, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[514, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[515, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[513, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[349, null]], "assert_skycoord_allclose": [[350, null]], "assert_time_allclose": [[351, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[302, null]], "cash": [[285, null]], "cash_sum_cython": [[286, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[400, "codemeta-json"]], "colormap_hess": [[364, null]], "colormap_milagro": [[365, null]], "compound_region_to_regions": [[332, null]], "compute_chisq": [[287, null]], "compute_flux_doubling": [[288, null]], "compute_fpp": [[289, null]], "compute_fvar": [[290, null]], "compute_lightcurve_discrete_correlation": [[133, null]], "compute_lightcurve_doublingtime": [[134, null]], "compute_lightcurve_fpp": [[135, null]], "compute_lightcurve_fvar": [[136, null]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[203, null]], "containment_region": [[204, null]], "create_cosmic_ray_spectral_model": [[273, null]], "create_crab_spectral_model": [[274, null]], "create_fermi_isotropic_diffuse_model": [[275, null]], "create_map_dataset_from_observation": [[112, null]], "create_map_dataset_geoms": [[113, null]], "cstat": [[291, null]], "data": [[401, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[292, null]], "docs.gammapy.org": [[404, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[324, null]], "earth_location_from_dict": [[311, null]], "estimate_exposure_reco_energy": [[137, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[293, null]], "find_peaks": [[138, null]], "find_peaks_in_flux_map": [[139, null]], "fov_to_sky": [[303, null]], "from_yaml": [[337, null]], "galactic": [[304, null]], "gamLike": [[499, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[404, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[140, null]], "get_images_paths": [[338, null]], "get_irfs_features": [[96, null]], "get_random_state": [[325, null]], "get_rebinned_axis": [[141, null]], "get_wstat_gof_terms": [[294, null]], "get_wstat_mu_bkg": [[295, null]], "hierarchical_clustering": [[299, null]], "hstack_columns": [[344, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[276, null]], "interpolate_profile": [[314, null]], "interpolation_scale": [[315, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[163, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[333, null]], "make_counts_rad_max": [[178, null]], "make_edisp_kernel_map": [[179, null]], "make_edisp_map": [[180, null]], "make_effective_livetime_map": [[181, null]], "make_map_background_irf": [[182, null]], "make_map_exposure_true_energy": [[183, null]], "make_observation_time_map": [[184, null]], "make_orthogonal_rectangle_sky_regions": [[334, null]], "make_path": [[339, null]], "make_psf_map": [[185, null]], "make_theta_squared_table": [[186, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[305, null]], "mpl_plot_check": [[352, null]], "multiprocessing_manager": [[321, null]], "norm_bounds_cython": [[296, null]], "normalize": [[326, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[327, null]], "plot_contour_line": [[366, null]], "plot_distribution": [[367, null]], "plot_heatmap": [[368, null]], "plot_map_rgb": [[369, null]], "plot_npred_signal": [[370, null]], "plot_spectrum_datasets_off_regions": [[371, null]], "plot_theta_squared_table": [[372, null]], "polar": [[306, null]], "pydantic": [[401, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[277, null], [279, null]], "read_yaml": [[340, null]], "recursive_merge_dicts": [[341, null]], "region_to_frame": [[335, null]], "regions_to_compound_region": [[336, null]], "requires_data": [[353, null]], "requires_dependency": [[354, null]], "resample_energy_edges": [[142, null]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[322, null]], "sample_powerlaw": [[328, null]], "sample_sphere": [[329, null]], "sample_sphere_distance": [[330, null]], "sample_times": [[331, null]], "scale_plot_flux": [[278, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[280, null]], "sky_to_fov": [[307, null]], "split_dataset": [[114, null], [116, null]], "standard_scaler": [[300, null]], "standardise_unit": [[359, null]], "stat_profile_ul_scipy": [[281, null]], "stats - Statistics": [[12, null]], "structure_function": [[297, null]], "table_row_to_dict": [[345, null]], "table_standardise_units_copy": [[346, null]], "table_standardise_units_inplace": [[347, null]], "the base class": [[401, "the-base-class"]], "time_ref_from_dict": [[356, null]], "time_ref_to_dict": [[357, null]], "time_relative_to_ref": [[358, null]], "to_yaml": [[342, null]], "trapz_loglog": [[312, null]], "unit_from_fits_image_hdu": [[360, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[308, null]], "visualization - Plotting features": [[14, null]], "write_yaml": [[343, null]], "wstat": [[298, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[570, "term-1D-Analysis", true]], "3d analysis": [[570, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[251, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[313, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[355, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[164, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[362, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[570, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[122, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[124, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[152, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[363, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[111, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[115, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[195, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[117, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[349, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[350, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[351, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[210, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[212, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[166, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[175, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[169, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[176, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[206, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[316, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[143, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[144, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[145, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[570, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[165, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[302, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[570, "term-Cash", true]], "cash() (in module gammapy.stats)": [[285, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[286, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[282, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[210, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[212, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[348, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[364, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[365, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[332, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[287, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[282, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[284, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[282, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[284, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[288, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[289, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[290, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[282, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[284, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[203, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[204, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[120, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[128, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[195, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[241, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[251, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[210, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[212, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[205, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[205, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[241, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[206, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[188, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[189, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[190, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[192, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[195, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[197, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[198, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[200, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[201, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[202, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[240, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[258, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[273, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[274, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[275, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[291, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[301, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[157, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[205, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[570, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[165, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[292, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[570, "term-DL3", true]], "dl4": [[570, "term-DL4", true]], "dl5": [[570, "term-DL5", true]], "dl6": [[570, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[324, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[311, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[223, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[570, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[147, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[148, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[146, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[147, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[148, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[149, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[159, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[162, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[151, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[165, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[570, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[120, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[118, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[221, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[235, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[256, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[257, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[158, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[158, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[293, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[207, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[208, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[122, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[570, "term-FoV", true]], "fov background": [[570, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[303, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[152, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[166, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[241, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[251, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[200, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[193, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[146, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[147, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[148, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[220, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[221, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[235, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[240, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[241, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[242, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[246, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[251, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[256, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[257, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[258, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[260, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[261, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[268, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[272, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[211, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[213, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[147, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[205, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[146, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[147, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[151, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[157, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[159, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[162, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[147, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[148, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[159, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[162, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[189, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[190, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[192, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[196, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[198, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[201, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[202, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[199, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[199, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[188, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[190, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[202, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[143, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[144, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[145, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[146, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[147, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[148, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[149, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[151, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[153, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[154, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[160, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[156, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[158, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[159, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[161, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[162, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[187, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[188, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[189, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[190, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[192, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[196, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[197, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[198, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[200, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[201, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[202, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[188, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[200, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[161, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[221, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[235, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[241, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[246, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[251, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[256, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[257, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[258, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[260, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[261, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[268, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[272, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[149, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[221, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[246, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[256, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[260, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[221, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[197, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[157, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[189, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[190, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[191, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[192, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[198, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[201, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[202, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[205, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[211, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[213, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[143, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[144, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[145, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[146, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[149, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[151, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[153, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[160, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[156, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[158, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[161, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[191, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[193, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[198, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[199, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[193, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[194, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[199, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[199, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[190, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[220, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[242, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[337, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[241, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[570, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[304, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[187, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[196, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[309, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[338, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[188, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[325, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[117, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[205, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[294, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[295, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[570, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[147, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[148, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[154, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[159, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[162, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[309, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[299, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[570, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[188, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[189, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[190, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[344, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[127, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[309, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[282, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[284, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[276, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[314, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[315, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[323, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[570, "term-IRF", true]], "irf (class in gammapy.irf)": [[153, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[155, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[154, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[187, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[570, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[174, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[164, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[191, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[310, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[309, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[163, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[169, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[166, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[166, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[333, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[169, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[170, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[170, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[171, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[164, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[165, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[166, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[169, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[169, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[181, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[166, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[169, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[169, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[174, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[175, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[175, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[175, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[175, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[175, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[175, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[169, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[334, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[339, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[169, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[176, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[570, "term-Maker", true]], "maker (class in gammapy.makers)": [[168, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[167, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[192, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[193, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[194, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[195, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[169, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[361, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[196, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[147, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[148, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[154, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[159, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[162, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[206, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[570, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[206, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.message", false]], "met": [[570, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[166, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[206, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[317, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[318, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[238, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[305, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[352, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[321, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[165, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[319, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[282, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[284, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[296, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[157, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[326, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[108, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[165, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[209, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[165, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[210, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[211, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[241, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[241, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[160, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[309, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[327, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[157, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[170, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[199, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[361, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[366, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[205, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[367, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[368, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[157, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[369, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[370, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[361, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[371, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[372, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[306, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[320, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[210, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[212, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[212, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[213, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.projection", false]], "psf": [[570, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[156, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[157, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[159, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[162, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[157, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[158, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[159, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[152, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[161, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[143, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[144, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[145, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[146, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[147, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[148, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[149, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[151, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[153, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[154, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[160, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[156, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[157, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[158, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[159, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[161, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[162, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[189, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[190, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[192, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[196, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[198, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[201, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[202, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[220, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[242, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[277, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[279, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[340, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[241, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[251, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[570, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[162, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[341, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[570, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[171, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[172, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[335, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[197, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[198, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[336, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[173, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[147, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[148, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[154, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[159, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[162, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[353, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[354, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[570, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[174, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[570, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[120, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[128, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[164, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[165, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[166, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[168, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[169, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[170, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[171, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[172, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[173, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[174, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[175, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[176, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[177, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[348, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[322, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[165, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[175, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[323, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[323, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[328, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[329, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[330, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[331, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[278, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[313, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[205, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[570, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[280, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[205, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[193, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[205, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[307, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[157, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[252, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[253, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[176, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[114, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[116, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[300, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[359, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[281, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[207, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[297, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[206, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[282, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[284, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[345, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[346, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[347, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[106, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[107, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[147, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[148, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[154, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[159, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[162, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[164, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[165, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[166, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[168, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[169, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[170, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[171, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[174, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[175, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[176, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[265, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[195, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[356, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[357, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[358, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[235, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[257, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[272, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[199, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[283, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[206, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[241, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[251, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[209, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[210, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[212, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[195, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[157, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[342, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[208, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[209, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[312, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[282, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[284, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[215, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[218, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[219, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[221, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[228, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[230, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[235, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[241, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[243, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[246, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[254, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[255, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[257, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[258, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[260, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[261, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[268, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[271, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[272, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[214, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[215, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[216, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[217, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[218, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[219, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[221, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[222, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[226, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[227, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[228, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[229, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[230, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[233, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[235, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[237, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[239, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[241, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[243, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[245, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[246, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[247, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[249, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[250, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[251, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[254, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[255, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[256, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[257, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[258, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[259, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[260, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[261, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[264, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[271, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[272, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[211, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[213, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[143, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[144, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[145, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[146, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[149, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[151, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[153, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[160, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[156, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[158, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[161, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[189, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[190, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[191, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[192, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[198, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[199, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[201, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[202, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[360, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[210, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[212, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[187, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[188, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[191, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[193, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[197, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[199, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[200, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[194, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[210, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[211, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[212, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[213, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[308, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[220, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[242, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[200, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[201, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[202, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.prior attribute)": [[251, "gammapy.modeling.models.Prior.weight", false]], "width (gammapy.maps.hpxgeom attribute)": [[188, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[197, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[200, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[256, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[177, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[194, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[143, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[144, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[145, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[146, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[147, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[148, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[149, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[150, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[151, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[153, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[154, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[160, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[156, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[157, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[158, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[159, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[161, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[162, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[189, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[190, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[192, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[196, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[198, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[201, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[202, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[208, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[234, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[267, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[268, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[269, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[270, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[220, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[242, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[343, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[298, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[284, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FluxPointsDataset"], [102, 1, 1, "", "MapDataset"], [103, 1, 1, "", "MapDatasetEventSampler"], [104, 1, 1, "", "MapDatasetMetaData"], [105, 1, 1, "", "MapDatasetOnOff"], [106, 1, 1, "", "OGIPDatasetReader"], [107, 1, 1, "", "OGIPDatasetWriter"], [108, 1, 1, "", "ObservationEventSampler"], [109, 1, 1, "", "SpectrumDataset"], [110, 1, 1, "", "SpectrumDatasetOnOff"], [111, 4, 1, "", "apply_edisp"], [112, 4, 1, "", "create_map_dataset_from_observation"], [113, 4, 1, "", "create_map_dataset_geoms"], [114, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[101, 2, 1, "", "available_stat_type"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "data_shape"], [101, 3, 1, "", "flux_pred"], [101, 3, 1, "", "from_dict"], [101, 2, 1, "", "gti"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_valid"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "plot_fit"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_spectrum"], [101, 3, 1, "", "read"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[102, 2, 1, "", "background"], [102, 2, 1, "", "background_model"], [102, 3, 1, "", "copy"], [102, 2, 1, "", "counts"], [102, 3, 1, "", "create"], [102, 3, 1, "", "cutout"], [102, 2, 1, "", "data_shape"], [102, 3, 1, "", "downsample"], [102, 2, 1, "", "edisp"], [102, 2, 1, "", "energy_range"], [102, 2, 1, "", "energy_range_fit"], [102, 2, 1, "", "energy_range_safe"], [102, 2, 1, "", "energy_range_total"], [102, 2, 1, "", "evaluators"], [102, 2, 1, "", "excess"], [102, 2, 1, "", "exposure"], [102, 3, 1, "", "fake"], [102, 3, 1, "", "from_dict"], [102, 3, 1, "", "from_geoms"], [102, 3, 1, "", "from_hdulist"], [102, 2, 1, "", "geoms"], [102, 2, 1, "", "gti"], [102, 3, 1, "", "info_dict"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_fit"], [102, 2, 1, "", "mask_fit_image"], [102, 2, 1, "", "mask_image"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_safe_edisp"], [102, 2, 1, "", "mask_safe_image"], [102, 2, 1, "", "mask_safe_psf"], [102, 2, 1, "", "meta"], [102, 2, 1, "", "meta_table"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "npred"], [102, 3, 1, "", "npred_background"], [102, 3, 1, "", "npred_signal"], [102, 3, 1, "", "pad"], [102, 3, 1, "", "peek"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_residuals_spatial"], [102, 3, 1, "", "plot_residuals_spectral"], [102, 2, 1, "", "psf"], [102, 3, 1, "", "read"], [102, 3, 1, "", "resample_energy_axis"], [102, 3, 1, "", "reset_data_cache"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "slice_by_energy"], [102, 3, 1, "", "slice_by_idx"], [102, 3, 1, "", "stack"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "to_hdulist"], [102, 3, 1, "", "to_image"], [102, 3, 1, "", "to_masked"], [102, 3, 1, "", "to_region_map_dataset"], [102, 3, 1, "", "to_spectrum_dataset"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[104, 3, 1, "", "construct"], [104, 3, 1, "", "copy"], [104, 3, 1, "", "dict"], [104, 3, 1, "", "from_header"], [104, 3, 1, "", "from_orm"], [104, 3, 1, "", "json"], [104, 2, 1, "", "model_computed_fields"], [104, 2, 1, "", "model_config"], [104, 3, 1, "", "model_construct"], [104, 3, 1, "", "model_copy"], [104, 3, 1, "", "model_dump"], [104, 3, 1, "", "model_dump_json"], [104, 2, 1, "", "model_extra"], [104, 2, 1, "", "model_fields"], [104, 2, 1, "", "model_fields_set"], [104, 3, 1, "", "model_json_schema"], [104, 3, 1, "", "model_parametrized_name"], [104, 3, 1, "", "model_post_init"], [104, 3, 1, "", "model_rebuild"], [104, 3, 1, "", "model_validate"], [104, 3, 1, "", "model_validate_json"], [104, 3, 1, "", "model_validate_strings"], [104, 3, 1, "", "parse_file"], [104, 3, 1, "", "parse_obj"], [104, 3, 1, "", "parse_raw"], [104, 3, 1, "", "schema"], [104, 3, 1, "", "schema_json"], [104, 3, 1, "", "stack"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_header"], [104, 3, 1, "", "to_yaml"], [104, 3, 1, "", "update_forward_refs"], [104, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_valid_path"], [106, 3, 1, "", "read"], [106, 3, 1, "", "read_arf"], [106, 3, 1, "", "read_bkg"], [106, 3, 1, "", "read_pha"], [106, 3, 1, "", "read_rmf"], [106, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_ogip_meta"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_counts_hdulist"], [107, 3, 1, "", "write"], [107, 3, 1, "", "write_arf"], [107, 3, 1, "", "write_bkg"], [107, 3, 1, "", "write_pha"], [107, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[108, 3, 1, "", "event_det_coords"], [108, 3, 1, "", "event_list_meta"], [108, 3, 1, "", "run"], [108, 3, 1, "", "sample_background"], [108, 3, 1, "", "sample_edisp"], [108, 3, 1, "", "sample_psf"], [108, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[110, 2, 1, "", "alpha"], [110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 3, 1, "", "from_map_dataset"], [110, 3, 1, "", "from_spectrum_dataset"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_off"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_map_dataset"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.utils": [[115, 4, 1, "", "apply_edisp"], [116, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[117, 1, 1, "", "ASmoothMapEstimator"], [118, 5, 1, "", "ESTIMATOR_REGISTRY"], [119, 1, 1, "", "EnergyDependentMorphologyEstimator"], [120, 1, 1, "", "Estimator"], [121, 1, 1, "", "ExcessMapEstimator"], [122, 1, 1, "", "FluxMaps"], [123, 1, 1, "", "FluxMetaData"], [124, 1, 1, "", "FluxPoints"], [125, 1, 1, "", "FluxPointsEstimator"], [126, 1, 1, "", "FluxProfileEstimator"], [127, 1, 1, "", "ImageProfile"], [128, 1, 1, "", "ImageProfileEstimator"], [129, 1, 1, "", "LightCurveEstimator"], [130, 1, 1, "", "ParameterEstimator"], [131, 1, 1, "", "SensitivityEstimator"], [132, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[117, 2, 1, "", "config_parameters"], [117, 3, 1, "", "copy"], [117, 3, 1, "", "estimate_maps"], [117, 3, 1, "", "get_kernels"], [117, 3, 1, "", "get_scales"], [117, 3, 1, "", "run"], [117, 3, 1, "", "selection_all"], [117, 2, 1, "", "selection_optional"], [117, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[119, 2, 1, "", "config_parameters"], [119, 3, 1, "", "copy"], [119, 3, 1, "", "estimate_energy_dependence"], [119, 3, 1, "", "run"], [119, 2, 1, "", "selection_optional"], [119, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 2, 1, "", "correlation_radius"], [121, 3, 1, "", "estimate_excess_map"], [121, 3, 1, "", "estimate_exposure_reco_energy"], [121, 3, 1, "", "estimate_kernel"], [121, 3, 1, "", "estimate_mask_default"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[122, 2, 1, "", "acceptance_off"], [122, 2, 1, "", "acceptance_on"], [122, 3, 1, "", "all_quantities"], [122, 2, 1, "", "alpha"], [122, 2, 1, "", "available_quantities"], [122, 3, 1, "", "copy"], [122, 2, 1, "", "counts"], [122, 2, 1, "", "dnde"], [122, 2, 1, "", "dnde_err"], [122, 2, 1, "", "dnde_errn"], [122, 2, 1, "", "dnde_errp"], [122, 2, 1, "", "dnde_ref"], [122, 2, 1, "", "dnde_scan_values"], [122, 2, 1, "", "dnde_ul"], [122, 2, 1, "", "e2dnde"], [122, 2, 1, "", "e2dnde_err"], [122, 2, 1, "", "e2dnde_errn"], [122, 2, 1, "", "e2dnde_errp"], [122, 2, 1, "", "e2dnde_ref"], [122, 2, 1, "", "e2dnde_ul"], [122, 2, 1, "", "eflux"], [122, 2, 1, "", "eflux_err"], [122, 2, 1, "", "eflux_errn"], [122, 2, 1, "", "eflux_errp"], [122, 2, 1, "", "eflux_ref"], [122, 2, 1, "", "eflux_ul"], [122, 2, 1, "", "energy_axis"], [122, 2, 1, "", "energy_max"], [122, 2, 1, "", "energy_min"], [122, 2, 1, "", "energy_ref"], [122, 2, 1, "", "filter_success_nan"], [122, 2, 1, "", "flux"], [122, 2, 1, "", "flux_err"], [122, 2, 1, "", "flux_errn"], [122, 2, 1, "", "flux_errp"], [122, 2, 1, "", "flux_ref"], [122, 2, 1, "", "flux_sensitivity"], [122, 2, 1, "", "flux_ul"], [122, 3, 1, "", "from_hdulist"], [122, 3, 1, "", "from_maps"], [122, 3, 1, "", "from_stack"], [122, 2, 1, "", "geom"], [122, 3, 1, "", "get_flux_points"], [122, 2, 1, "", "has_any_ts"], [122, 2, 1, "", "has_stat_profiles"], [122, 2, 1, "", "has_success"], [122, 2, 1, "", "has_ul"], [122, 2, 1, "", "is_convertible_to_flux_sed_type"], [122, 2, 1, "", "is_ul"], [122, 3, 1, "", "iter_by_axis"], [122, 2, 1, "", "n_dof"], [122, 2, 1, "", "n_sigma"], [122, 2, 1, "", "n_sigma_ul"], [122, 2, 1, "", "niter"], [122, 2, 1, "", "norm"], [122, 2, 1, "", "norm_err"], [122, 2, 1, "", "norm_errn"], [122, 2, 1, "", "norm_errp"], [122, 2, 1, "", "norm_sensitivity"], [122, 2, 1, "", "norm_ul"], [122, 2, 1, "", "npred"], [122, 2, 1, "", "npred_background"], [122, 2, 1, "", "npred_excess"], [122, 2, 1, "", "npred_excess_err"], [122, 2, 1, "", "npred_excess_errn"], [122, 2, 1, "", "npred_excess_errp"], [122, 2, 1, "", "npred_excess_ref"], [122, 2, 1, "", "npred_excess_ul"], [122, 3, 1, "", "read"], [122, 2, 1, "", "reference_model"], [122, 2, 1, "", "reference_model_default"], [122, 2, 1, "", "reference_spectral_model"], [122, 2, 1, "", "sed_type_init"], [122, 2, 1, "", "sed_type_plot_default"], [122, 3, 1, "", "slice_by_coord"], [122, 3, 1, "", "slice_by_energy"], [122, 3, 1, "", "slice_by_idx"], [122, 3, 1, "", "slice_by_time"], [122, 2, 1, "", "sqrt_ts"], [122, 2, 1, "", "sqrt_ts_threshold_ul"], [122, 2, 1, "", "stat"], [122, 2, 1, "", "stat_null"], [122, 2, 1, "", "stat_scan"], [122, 2, 1, "", "success"], [122, 3, 1, "", "to_hdulist"], [122, 3, 1, "", "to_maps"], [122, 2, 1, "", "ts"], [122, 2, 1, "", "ts_scan"], [122, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[123, 3, 1, "", "construct"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "dict"], [123, 3, 1, "", "from_header"], [123, 3, 1, "", "from_orm"], [123, 3, 1, "", "json"], [123, 2, 1, "", "model_computed_fields"], [123, 2, 1, "", "model_config"], [123, 3, 1, "", "model_construct"], [123, 3, 1, "", "model_copy"], [123, 3, 1, "", "model_dump"], [123, 3, 1, "", "model_dump_json"], [123, 2, 1, "", "model_extra"], [123, 2, 1, "", "model_fields"], [123, 2, 1, "", "model_fields_set"], [123, 3, 1, "", "model_json_schema"], [123, 3, 1, "", "model_parametrized_name"], [123, 3, 1, "", "model_post_init"], [123, 3, 1, "", "model_rebuild"], [123, 3, 1, "", "model_validate"], [123, 3, 1, "", "model_validate_json"], [123, 3, 1, "", "model_validate_strings"], [123, 3, 1, "", "parse_file"], [123, 3, 1, "", "parse_obj"], [123, 3, 1, "", "parse_raw"], [123, 3, 1, "", "schema"], [123, 3, 1, "", "schema_json"], [123, 2, 1, "", "tag"], [123, 3, 1, "", "to_header"], [123, 3, 1, "", "to_yaml"], [123, 3, 1, "", "update_forward_refs"], [123, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[124, 2, 1, "", "acceptance_off"], [124, 2, 1, "", "acceptance_on"], [124, 3, 1, "", "all_quantities"], [124, 2, 1, "", "alpha"], [124, 2, 1, "", "available_quantities"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "counts"], [124, 2, 1, "", "dnde"], [124, 2, 1, "", "dnde_err"], [124, 2, 1, "", "dnde_errn"], [124, 2, 1, "", "dnde_errp"], [124, 2, 1, "", "dnde_ref"], [124, 2, 1, "", "dnde_scan_values"], [124, 2, 1, "", "dnde_ul"], [124, 2, 1, "", "e2dnde"], [124, 2, 1, "", "e2dnde_err"], [124, 2, 1, "", "e2dnde_errn"], [124, 2, 1, "", "e2dnde_errp"], [124, 2, 1, "", "e2dnde_ref"], [124, 2, 1, "", "e2dnde_ul"], [124, 2, 1, "", "eflux"], [124, 2, 1, "", "eflux_err"], [124, 2, 1, "", "eflux_errn"], [124, 2, 1, "", "eflux_errp"], [124, 2, 1, "", "eflux_ref"], [124, 2, 1, "", "eflux_ul"], [124, 2, 1, "", "energy_axis"], [124, 2, 1, "", "energy_max"], [124, 2, 1, "", "energy_min"], [124, 2, 1, "", "energy_ref"], [124, 2, 1, "", "filter_success_nan"], [124, 2, 1, "", "flux"], [124, 2, 1, "", "flux_err"], [124, 2, 1, "", "flux_errn"], [124, 2, 1, "", "flux_errp"], [124, 2, 1, "", "flux_ref"], [124, 2, 1, "", "flux_sensitivity"], [124, 2, 1, "", "flux_ul"], [124, 3, 1, "", "from_hdulist"], [124, 3, 1, "", "from_maps"], [124, 3, 1, "", "from_stack"], [124, 3, 1, "", "from_table"], [124, 2, 1, "", "geom"], [124, 3, 1, "", "get_flux_points"], [124, 2, 1, "", "has_any_ts"], [124, 2, 1, "", "has_stat_profiles"], [124, 2, 1, "", "has_success"], [124, 2, 1, "", "has_ul"], [124, 2, 1, "", "is_convertible_to_flux_sed_type"], [124, 2, 1, "", "is_ul"], [124, 3, 1, "", "iter_by_axis"], [124, 2, 1, "", "n_dof"], [124, 2, 1, "", "n_sigma"], [124, 2, 1, "", "n_sigma_ul"], [124, 2, 1, "", "niter"], [124, 2, 1, "", "norm"], [124, 2, 1, "", "norm_err"], [124, 2, 1, "", "norm_errn"], [124, 2, 1, "", "norm_errp"], [124, 2, 1, "", "norm_sensitivity"], [124, 2, 1, "", "norm_ul"], [124, 2, 1, "", "npred"], [124, 2, 1, "", "npred_background"], [124, 2, 1, "", "npred_excess"], [124, 2, 1, "", "npred_excess_err"], [124, 2, 1, "", "npred_excess_errn"], [124, 2, 1, "", "npred_excess_errp"], [124, 2, 1, "", "npred_excess_ref"], [124, 2, 1, "", "npred_excess_ul"], [124, 3, 1, "", "plot"], [124, 3, 1, "", "plot_ts_profiles"], [124, 3, 1, "", "read"], [124, 3, 1, "", "recompute_ul"], [124, 2, 1, "", "reference_model"], [124, 2, 1, "", "reference_model_default"], [124, 2, 1, "", "reference_spectral_model"], [124, 3, 1, "", "resample_axis"], [124, 2, 1, "", "sed_type_init"], [124, 2, 1, "", "sed_type_plot_default"], [124, 3, 1, "", "slice_by_coord"], [124, 3, 1, "", "slice_by_energy"], [124, 3, 1, "", "slice_by_idx"], [124, 3, 1, "", "slice_by_time"], [124, 2, 1, "", "sqrt_ts"], [124, 2, 1, "", "sqrt_ts_threshold_ul"], [124, 2, 1, "", "stat"], [124, 2, 1, "", "stat_null"], [124, 2, 1, "", "stat_scan"], [124, 2, 1, "", "success"], [124, 3, 1, "", "to_hdulist"], [124, 3, 1, "", "to_maps"], [124, 3, 1, "", "to_table"], [124, 2, 1, "", "ts"], [124, 2, 1, "", "ts_scan"], [124, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_flux_point"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_npred_excess"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "get_scale_model"], [125, 2, 1, "", "n_jobs"], [125, 2, 1, "", "parallel_backend"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_best_fit"], [126, 3, 1, "", "estimate_counts"], [126, 3, 1, "", "estimate_errn_errp"], [126, 3, 1, "", "estimate_flux_point"], [126, 3, 1, "", "estimate_npred"], [126, 3, 1, "", "estimate_npred_excess"], [126, 3, 1, "", "estimate_scan"], [126, 3, 1, "", "estimate_ts"], [126, 3, 1, "", "estimate_ul"], [126, 3, 1, "", "get_scale_model"], [126, 2, 1, "", "n_jobs"], [126, 2, 1, "", "parallel_backend"], [126, 2, 1, "", "projected_distance_axis"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[127, 3, 1, "", "normalize"], [127, 3, 1, "", "peek"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_err"], [127, 2, 1, "", "profile"], [127, 2, 1, "", "profile_err"], [127, 3, 1, "", "smooth"], [127, 2, 1, "", "x_max"], [127, 2, 1, "", "x_min"], [127, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_time_bin_flux"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "expand_map"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_min_e2dnde"], [131, 3, 1, "", "estimate_min_excess"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_fit_input_maps"], [132, 3, 1, "", "estimate_flux_default"], [132, 3, 1, "", "estimate_flux_map"], [132, 3, 1, "", "estimate_kernel"], [132, 3, 1, "", "estimate_mask_default"], [132, 3, 1, "", "estimate_pad_width"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_all"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[133, 4, 1, "", "compute_lightcurve_discrete_correlation"], [134, 4, 1, "", "compute_lightcurve_doublingtime"], [135, 4, 1, "", "compute_lightcurve_fpp"], [136, 4, 1, "", "compute_lightcurve_fvar"], [137, 4, 1, "", "estimate_exposure_reco_energy"], [138, 4, 1, "", "find_peaks"], [139, 4, 1, "", "find_peaks_in_flux_map"], [140, 4, 1, "", "get_combined_significance_maps"], [141, 4, 1, "", "get_rebinned_axis"], [142, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[143, 1, 1, "", "Background2D"], [144, 1, 1, "", "Background3D"], [145, 1, 1, "", "BackgroundIRF"], [146, 1, 1, "", "EDispKernel"], [147, 1, 1, "", "EDispKernelMap"], [148, 1, 1, "", "EDispMap"], [149, 1, 1, "", "EffectiveAreaTable2D"], [150, 1, 1, "", "EnergyDependentMultiGaussPSF"], [151, 1, 1, "", "EnergyDispersion2D"], [152, 1, 1, "", "FoVAlignment"], [153, 1, 1, "", "IRF"], [154, 1, 1, "", "IRFMap"], [155, 5, 1, "", "IRF_REGISTRY"], [156, 1, 1, "", "PSF3D"], [157, 1, 1, "", "PSFKernel"], [158, 1, 1, "", "PSFKing"], [159, 1, 1, "", "PSFMap"], [160, 1, 1, "", "ParametricPSF"], [161, 1, 1, "", "RadMax2D"], [162, 1, 1, "", "RecoPSFMap"], [163, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 2, 1, "", "default_unit"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 3, 1, "", "peek"], [143, 3, 1, "", "plot"], [143, 3, 1, "", "plot_at_energy"], [143, 3, 1, "", "plot_energy_dependence"], [143, 3, 1, "", "plot_offset_dependence"], [143, 3, 1, "", "plot_spectrum"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_3d"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 2, 1, "", "default_unit"], [144, 3, 1, "", "evaluate"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "plot_at_energy"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_2d"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[145, 2, 1, "", "axes"], [145, 3, 1, "", "cumsum"], [145, 2, 1, "", "data"], [145, 2, 1, "", "default_interp_kwargs"], [145, 3, 1, "", "evaluate"], [145, 2, 1, "", "fov_alignment"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "from_table"], [145, 2, 1, "", "has_offset_axis"], [145, 3, 1, "", "integral"], [145, 3, 1, "", "integrate_log_log"], [145, 3, 1, "", "interp_missing_data"], [145, 3, 1, "", "is_allclose"], [145, 2, 1, "", "is_pointlike"], [145, 3, 1, "", "normalize"], [145, 3, 1, "", "pad"], [145, 2, 1, "", "quantity"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "slice_by_idx"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_table"], [145, 3, 1, "", "to_table_hdu"], [145, 3, 1, "", "to_unit"], [145, 2, 1, "", "unit"], [145, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[146, 2, 1, "", "axes"], [146, 3, 1, "", "cumsum"], [146, 2, 1, "", "data"], [146, 2, 1, "", "default_interp_kwargs"], [146, 3, 1, "", "evaluate"], [146, 2, 1, "", "fov_alignment"], [146, 3, 1, "", "from_diagonal_response"], [146, 3, 1, "", "from_gauss"], [146, 3, 1, "", "from_hdulist"], [146, 3, 1, "", "from_table"], [146, 3, 1, "", "get_bias"], [146, 3, 1, "", "get_bias_energy"], [146, 3, 1, "", "get_mean"], [146, 3, 1, "", "get_resolution"], [146, 2, 1, "", "has_offset_axis"], [146, 3, 1, "", "integral"], [146, 3, 1, "", "integrate_log_log"], [146, 3, 1, "", "interp_missing_data"], [146, 3, 1, "", "is_allclose"], [146, 2, 1, "", "is_pointlike"], [146, 3, 1, "", "normalize"], [146, 3, 1, "", "pad"], [146, 3, 1, "", "pdf_in_safe_range"], [146, 2, 1, "", "pdf_matrix"], [146, 3, 1, "", "peek"], [146, 3, 1, "", "plot_bias"], [146, 3, 1, "", "plot_matrix"], [146, 2, 1, "", "quantity"], [146, 3, 1, "", "read"], [146, 2, 1, "", "required_axes"], [146, 3, 1, "", "slice_by_idx"], [146, 2, 1, "", "tag"], [146, 3, 1, "", "to_hdulist"], [146, 3, 1, "", "to_image"], [146, 3, 1, "", "to_table"], [146, 3, 1, "", "to_table_hdu"], [146, 3, 1, "", "to_unit"], [146, 2, 1, "", "unit"], [146, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[147, 3, 1, "", "copy"], [147, 3, 1, "", "cutout"], [147, 3, 1, "", "downsample"], [147, 2, 1, "", "edisp_map"], [147, 3, 1, "", "from_diagonal_response"], [147, 3, 1, "", "from_edisp_kernel"], [147, 3, 1, "", "from_gauss"], [147, 3, 1, "", "from_geom"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "get_edisp_kernel"], [147, 2, 1, "", "has_single_spatial_bin"], [147, 2, 1, "", "mask_safe_image"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "resample_energy_axis"], [147, 3, 1, "", "slice_by_idx"], [147, 3, 1, "", "stack"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_image"], [147, 3, 1, "", "to_region_nd_map"], [147, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[148, 3, 1, "", "copy"], [148, 3, 1, "", "cutout"], [148, 3, 1, "", "downsample"], [148, 2, 1, "", "edisp_map"], [148, 3, 1, "", "from_diagonal_response"], [148, 3, 1, "", "from_geom"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "get_edisp_kernel"], [148, 2, 1, "", "has_single_spatial_bin"], [148, 2, 1, "", "mask_safe_image"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "peek"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "sample_coord"], [148, 3, 1, "", "slice_by_idx"], [148, 3, 1, "", "stack"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_edisp_kernel_map"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_region_nd_map"], [148, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 2, 1, "", "default_unit"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_parametrization"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "peek"], [149, 3, 1, "", "plot"], [149, 3, 1, "", "plot_energy_dependence"], [149, 3, 1, "", "plot_offset_dependence"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "containment"], [150, 3, 1, "", "containment_radius"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 3, 1, "", "evaluate"], [150, 3, 1, "", "evaluate_containment"], [150, 3, 1, "", "evaluate_direct"], [150, 3, 1, "", "evaluate_parameters"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "info"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_containment_radius"], [150, 3, 1, "", "plot_containment_radius_vs_energy"], [150, 3, 1, "", "plot_psf_vs_rad"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 2, 1, "", "required_parameters"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_psf3d"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_gauss"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_bias"], [151, 3, 1, "", "plot_migration"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_edisp_kernel"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[152, 2, 1, "", "ALTAZ"], [152, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[154, 3, 1, "", "copy"], [154, 3, 1, "", "cutout"], [154, 3, 1, "", "downsample"], [154, 3, 1, "", "from_hdulist"], [154, 2, 1, "", "has_single_spatial_bin"], [154, 2, 1, "", "mask_safe_image"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "slice_by_idx"], [154, 3, 1, "", "stack"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_region_nd_map"], [154, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 2, 1, "", "default_unit"], [156, 3, 1, "", "evaluate"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "info"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[157, 2, 1, "", "data"], [157, 3, 1, "", "from_gauss"], [157, 3, 1, "", "from_spatial_model"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_kernel"], [157, 2, 1, "", "psf_kernel_map"], [157, 3, 1, "", "read"], [157, 3, 1, "", "slice_by_idx"], [157, 3, 1, "", "to_image"], [157, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 3, 1, "", "evaluate"], [158, 3, 1, "", "evaluate_containment"], [158, 3, 1, "", "evaluate_direct"], [158, 3, 1, "", "evaluate_parameters"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "info"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 2, 1, "", "required_parameters"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_psf3d"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[159, 3, 1, "", "containment"], [159, 3, 1, "", "containment_radius"], [159, 3, 1, "", "containment_radius_map"], [159, 3, 1, "", "copy"], [159, 3, 1, "", "cutout"], [159, 3, 1, "", "downsample"], [159, 2, 1, "", "energy_name"], [159, 3, 1, "", "from_gauss"], [159, 3, 1, "", "from_geom"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "get_psf_kernel"], [159, 2, 1, "", "has_single_spatial_bin"], [159, 2, 1, "", "mask_safe_image"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "peek"], [159, 3, 1, "", "plot_containment_radius_vs_energy"], [159, 3, 1, "", "plot_psf_vs_rad"], [159, 2, 1, "", "psf_map"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "sample_coord"], [159, 3, 1, "", "slice_by_idx"], [159, 3, 1, "", "stack"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_image"], [159, 3, 1, "", "to_region_nd_map"], [159, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "containment"], [160, 3, 1, "", "containment_radius"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 3, 1, "", "evaluate"], [160, 3, 1, "", "evaluate_containment"], [160, 3, 1, "", "evaluate_direct"], [160, 3, 1, "", "evaluate_parameters"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "info"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 3, 1, "", "peek"], [160, 3, 1, "", "plot_containment_radius"], [160, 3, 1, "", "plot_containment_radius_vs_energy"], [160, 3, 1, "", "plot_psf_vs_rad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 2, 1, "", "required_parameters"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_psf3d"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[161, 2, 1, "", "axes"], [161, 3, 1, "", "cumsum"], [161, 2, 1, "", "data"], [161, 2, 1, "", "default_interp_kwargs"], [161, 2, 1, "", "default_unit"], [161, 3, 1, "", "evaluate"], [161, 2, 1, "", "fov_alignment"], [161, 3, 1, "", "from_hdulist"], [161, 3, 1, "", "from_irf"], [161, 3, 1, "", "from_table"], [161, 2, 1, "", "has_offset_axis"], [161, 3, 1, "", "integral"], [161, 3, 1, "", "integrate_log_log"], [161, 3, 1, "", "interp_missing_data"], [161, 3, 1, "", "is_allclose"], [161, 2, 1, "", "is_fixed_rad_max"], [161, 2, 1, "", "is_pointlike"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "pad"], [161, 3, 1, "", "plot_rad_max_vs_energy"], [161, 2, 1, "", "quantity"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_table"], [161, 3, 1, "", "to_table_hdu"], [161, 3, 1, "", "to_unit"], [161, 2, 1, "", "unit"], [161, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[162, 3, 1, "", "containment"], [162, 3, 1, "", "containment_radius"], [162, 3, 1, "", "containment_radius_map"], [162, 3, 1, "", "copy"], [162, 3, 1, "", "cutout"], [162, 3, 1, "", "downsample"], [162, 2, 1, "", "energy_name"], [162, 3, 1, "", "from_gauss"], [162, 3, 1, "", "from_geom"], [162, 3, 1, "", "from_hdulist"], [162, 3, 1, "", "get_psf_kernel"], [162, 2, 1, "", "has_single_spatial_bin"], [162, 2, 1, "", "mask_safe_image"], [162, 3, 1, "", "normalize"], [162, 3, 1, "", "peek"], [162, 3, 1, "", "plot_containment_radius_vs_energy"], [162, 3, 1, "", "plot_psf_vs_rad"], [162, 2, 1, "", "psf_map"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 3, 1, "", "sample_coord"], [162, 3, 1, "", "slice_by_idx"], [162, 3, 1, "", "stack"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_image"], [162, 3, 1, "", "to_region_nd_map"], [162, 3, 1, "", "write"]], "gammapy.makers": [[164, 1, 1, "", "AdaptiveRingBackgroundMaker"], [165, 1, 1, "", "DatasetsMaker"], [166, 1, 1, "", "FoVBackgroundMaker"], [167, 5, 1, "", "MAKER_REGISTRY"], [168, 1, 1, "", "Maker"], [169, 1, 1, "", "MapDatasetMaker"], [170, 1, 1, "", "PhaseBackgroundMaker"], [171, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [172, 1, 1, "", "ReflectedRegionsFinder"], [173, 1, 1, "", "RegionsFinder"], [174, 1, 1, "", "RingBackgroundMaker"], [175, 1, 1, "", "SafeMaskMaker"], [176, 1, 1, "", "SpectrumDatasetMaker"], [177, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[164, 3, 1, "", "kernels"], [164, 3, 1, "", "make_cubes"], [164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[165, 3, 1, "", "callback"], [165, 3, 1, "", "error_callback"], [165, 3, 1, "", "make_dataset"], [165, 2, 1, "", "n_jobs"], [165, 2, 1, "", "offset_max"], [165, 2, 1, "", "parallel_backend"], [165, 3, 1, "", "run"], [165, 2, 1, "", "safe_mask_maker"], [165, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[166, 2, 1, "", "available_methods"], [166, 3, 1, "", "make_background_fit"], [166, 3, 1, "", "make_background_scale"], [166, 3, 1, "", "make_default_fov_background_model"], [166, 3, 1, "", "make_exclusion_mask"], [166, 2, 1, "", "method"], [166, 3, 1, "", "run"], [166, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[169, 2, 1, "", "available_selection"], [169, 3, 1, "", "make_background"], [169, 3, 1, "", "make_counts"], [169, 3, 1, "", "make_edisp"], [169, 3, 1, "", "make_edisp_kernel"], [169, 3, 1, "", "make_exposure"], [169, 3, 1, "", "make_exposure_irf"], [169, 3, 1, "", "make_meta_table"], [169, 3, 1, "", "make_psf"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[170, 3, 1, "", "make_counts"], [170, 3, 1, "", "make_counts_off"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[171, 3, 1, "", "make_counts_off"], [171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[172, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[173, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[174, 3, 1, "", "kernel"], [174, 3, 1, "", "make_maps_off"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[175, 2, 1, "", "available_methods"], [175, 3, 1, "", "make_mask_bkg_invalid"], [175, 3, 1, "", "make_mask_energy_aeff_default"], [175, 3, 1, "", "make_mask_energy_aeff_max"], [175, 3, 1, "", "make_mask_energy_bkg_peak"], [175, 3, 1, "", "make_mask_energy_edisp_bias"], [175, 3, 1, "", "make_mask_offset_max"], [175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[176, 2, 1, "", "available_selection"], [176, 3, 1, "", "make_background"], [176, 3, 1, "", "make_counts"], [176, 3, 1, "", "make_edisp"], [176, 3, 1, "", "make_edisp_kernel"], [176, 3, 1, "", "make_exposure"], [176, 3, 1, "", "make_exposure_irf"], [176, 3, 1, "", "make_meta_table"], [176, 3, 1, "", "make_psf"], [176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[177, 3, 1, "", "run"]], "gammapy.makers.utils": [[178, 4, 1, "", "make_counts_rad_max"], [179, 4, 1, "", "make_edisp_kernel_map"], [180, 4, 1, "", "make_edisp_map"], [181, 4, 1, "", "make_effective_livetime_map"], [182, 4, 1, "", "make_map_background_irf"], [183, 4, 1, "", "make_map_exposure_true_energy"], [184, 4, 1, "", "make_observation_time_map"], [185, 4, 1, "", "make_psf_map"], [186, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[187, 1, 1, "", "Geom"], [188, 1, 1, "", "HpxGeom"], [189, 1, 1, "", "HpxMap"], [190, 1, 1, "", "HpxNDMap"], [191, 1, 1, "", "LabelMapAxis"], [192, 1, 1, "", "Map"], [193, 1, 1, "", "MapAxes"], [194, 1, 1, "", "MapAxis"], [195, 1, 1, "", "MapCoord"], [196, 1, 1, "", "Maps"], [197, 1, 1, "", "RegionGeom"], [198, 1, 1, "", "RegionNDMap"], [199, 1, 1, "", "TimeMapAxis"], [200, 1, 1, "", "WcsGeom"], [201, 1, 1, "", "WcsMap"], [202, 1, 1, "", "WcsNDMap"], [203, 4, 1, "", "containment_radius"], [204, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[187, 2, 1, "", "as_energy_true"], [187, 2, 1, "", "center_coord"], [187, 2, 1, "", "center_pix"], [187, 2, 1, "", "center_skydir"], [187, 3, 1, "", "contains"], [187, 3, 1, "", "contains_pix"], [187, 3, 1, "", "coord_to_idx"], [187, 3, 1, "", "coord_to_pix"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "crop"], [187, 3, 1, "", "data_nbytes"], [187, 2, 1, "", "data_shape"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "drop"], [187, 3, 1, "", "energy_mask"], [187, 3, 1, "", "from_hdulist"], [187, 3, 1, "", "get_coord"], [187, 3, 1, "", "get_idx"], [187, 2, 1, "", "has_energy_axis"], [187, 2, 1, "", "is_allsky"], [187, 2, 1, "", "is_flat"], [187, 2, 1, "", "is_image"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pix_to_coord"], [187, 3, 1, "", "pix_to_idx"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "replace_axis"], [187, 3, 1, "", "resample_axis"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "solid_angle"], [187, 3, 1, "", "squash"], [187, 3, 1, "", "to_bands_hdu"], [187, 3, 1, "", "to_cube"], [187, 3, 1, "", "to_image"], [187, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[188, 2, 1, "", "as_energy_true"], [188, 2, 1, "", "axes"], [188, 2, 1, "", "axes_names"], [188, 2, 1, "", "center_coord"], [188, 2, 1, "", "center_pix"], [188, 2, 1, "", "center_skydir"], [188, 3, 1, "", "contains"], [188, 3, 1, "", "contains_pix"], [188, 3, 1, "", "coord_to_idx"], [188, 3, 1, "", "coord_to_pix"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "create"], [188, 3, 1, "", "crop"], [188, 3, 1, "", "cutout"], [188, 3, 1, "", "data_nbytes"], [188, 2, 1, "", "data_shape"], [188, 2, 1, "", "data_shape_axes"], [188, 3, 1, "", "downsample"], [188, 3, 1, "", "drop"], [188, 3, 1, "", "energy_mask"], [188, 2, 1, "", "frame"], [188, 3, 1, "", "from_hdu"], [188, 3, 1, "", "from_hdulist"], [188, 3, 1, "", "from_header"], [188, 3, 1, "", "get_coord"], [188, 3, 1, "", "get_idx"], [188, 3, 1, "", "get_index_list"], [188, 3, 1, "", "global_to_local"], [188, 2, 1, "", "has_energy_axis"], [188, 3, 1, "", "interp_weights"], [188, 2, 1, "", "ipix"], [188, 3, 1, "", "is_aligned"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_allsky"], [188, 2, 1, "", "is_flat"], [188, 2, 1, "", "is_hpx"], [188, 2, 1, "", "is_image"], [188, 2, 1, "", "is_region"], [188, 2, 1, "", "is_regular"], [188, 3, 1, "", "local_to_global"], [188, 2, 1, "", "ndim"], [188, 2, 1, "", "nest"], [188, 2, 1, "", "npix"], [188, 2, 1, "", "npix_max"], [188, 2, 1, "", "nside"], [188, 2, 1, "", "order"], [188, 2, 1, "", "ordering"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "pix_to_coord"], [188, 3, 1, "", "pix_to_idx"], [188, 2, 1, "", "pixel_scales"], [188, 2, 1, "", "projection"], [188, 2, 1, "", "region"], [188, 3, 1, "", "region_mask"], [188, 3, 1, "", "rename_axes"], [188, 3, 1, "", "replace_axis"], [188, 3, 1, "", "resample_axis"], [188, 3, 1, "", "separation"], [188, 2, 1, "", "shape_axes"], [188, 3, 1, "", "slice_by_idx"], [188, 3, 1, "", "solid_angle"], [188, 3, 1, "", "squash"], [188, 3, 1, "", "to_bands_hdu"], [188, 3, 1, "", "to_binsz"], [188, 3, 1, "", "to_cube"], [188, 3, 1, "", "to_header"], [188, 3, 1, "", "to_image"], [188, 3, 1, "", "to_nside"], [188, 3, 1, "", "to_swapped"], [188, 3, 1, "", "to_wcs_geom"], [188, 3, 1, "", "to_wcs_tiles"], [188, 3, 1, "", "upsample"], [188, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[189, 3, 1, "", "coadd"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "create"], [189, 3, 1, "", "crop"], [189, 3, 1, "", "cumsum"], [189, 2, 1, "", "data"], [189, 3, 1, "", "dot"], [189, 3, 1, "", "downsample"], [189, 3, 1, "", "fill_by_coord"], [189, 3, 1, "", "fill_by_idx"], [189, 3, 1, "", "fill_by_pix"], [189, 3, 1, "", "fill_events"], [189, 3, 1, "", "from_geom"], [189, 3, 1, "", "from_hdulist"], [189, 3, 1, "", "from_stack"], [189, 2, 1, "", "geom"], [189, 3, 1, "", "get_by_coord"], [189, 3, 1, "", "get_by_idx"], [189, 3, 1, "", "get_by_pix"], [189, 3, 1, "", "get_image_by_coord"], [189, 3, 1, "", "get_image_by_idx"], [189, 3, 1, "", "get_image_by_pix"], [189, 3, 1, "", "get_spectrum"], [189, 3, 1, "", "integral"], [189, 3, 1, "", "interp_by_coord"], [189, 3, 1, "", "interp_by_pix"], [189, 3, 1, "", "interp_to_geom"], [189, 3, 1, "", "is_allclose"], [189, 2, 1, "", "is_mask"], [189, 3, 1, "", "iter_by_axis"], [189, 3, 1, "", "iter_by_image"], [189, 3, 1, "", "iter_by_image_data"], [189, 3, 1, "", "iter_by_image_index"], [189, 3, 1, "", "mask_nearest_position"], [189, 2, 1, "", "meta"], [189, 3, 1, "", "normalize"], [189, 3, 1, "", "pad"], [189, 3, 1, "", "plot_grid"], [189, 3, 1, "", "plot_interactive"], [189, 2, 1, "", "quantity"], [189, 3, 1, "", "read"], [189, 3, 1, "", "reduce"], [189, 3, 1, "", "reduce_over_axes"], [189, 3, 1, "", "rename_axes"], [189, 3, 1, "", "reorder_axes"], [189, 3, 1, "", "reproject_by_image"], [189, 3, 1, "", "reproject_to_geom"], [189, 3, 1, "", "resample"], [189, 3, 1, "", "resample_axis"], [189, 3, 1, "", "sample_coord"], [189, 3, 1, "", "set_by_coord"], [189, 3, 1, "", "set_by_idx"], [189, 3, 1, "", "set_by_pix"], [189, 3, 1, "", "slice_by_idx"], [189, 3, 1, "", "split_by_axis"], [189, 3, 1, "", "sum_over_axes"], [189, 2, 1, "", "tag"], [189, 3, 1, "", "to_cube"], [189, 3, 1, "", "to_hdu"], [189, 3, 1, "", "to_hdulist"], [189, 3, 1, "", "to_swapped"], [189, 3, 1, "", "to_unit"], [189, 3, 1, "", "to_wcs"], [189, 2, 1, "", "unit"], [189, 3, 1, "", "upsample"], [189, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[190, 3, 1, "", "coadd"], [190, 3, 1, "", "convolve"], [190, 3, 1, "", "convolve_full"], [190, 3, 1, "", "convolve_wcs"], [190, 3, 1, "", "copy"], [190, 3, 1, "", "create"], [190, 3, 1, "", "crop"], [190, 3, 1, "", "cumsum"], [190, 3, 1, "", "cutout"], [190, 2, 1, "", "data"], [190, 3, 1, "", "dot"], [190, 3, 1, "", "downsample"], [190, 3, 1, "", "fill_by_coord"], [190, 3, 1, "", "fill_by_idx"], [190, 3, 1, "", "fill_by_pix"], [190, 3, 1, "", "fill_events"], [190, 3, 1, "", "from_geom"], [190, 3, 1, "", "from_hdu"], [190, 3, 1, "", "from_hdulist"], [190, 3, 1, "", "from_stack"], [190, 3, 1, "", "from_wcs_tiles"], [190, 2, 1, "", "geom"], [190, 3, 1, "", "get_by_coord"], [190, 3, 1, "", "get_by_idx"], [190, 3, 1, "", "get_by_pix"], [190, 3, 1, "", "get_image_by_coord"], [190, 3, 1, "", "get_image_by_idx"], [190, 3, 1, "", "get_image_by_pix"], [190, 3, 1, "", "get_spectrum"], [190, 3, 1, "", "integral"], [190, 3, 1, "", "interp_by_coord"], [190, 3, 1, "", "interp_by_pix"], [190, 3, 1, "", "interp_to_geom"], [190, 3, 1, "", "is_allclose"], [190, 2, 1, "", "is_mask"], [190, 3, 1, "", "iter_by_axis"], [190, 3, 1, "", "iter_by_image"], [190, 3, 1, "", "iter_by_image_data"], [190, 3, 1, "", "iter_by_image_index"], [190, 3, 1, "", "mask_nearest_position"], [190, 2, 1, "", "meta"], [190, 3, 1, "", "normalize"], [190, 3, 1, "", "pad"], [190, 3, 1, "", "plot"], [190, 3, 1, "", "plot_grid"], [190, 3, 1, "", "plot_interactive"], [190, 3, 1, "", "plot_mask"], [190, 2, 1, "", "quantity"], [190, 3, 1, "", "read"], [190, 3, 1, "", "reduce"], [190, 3, 1, "", "reduce_over_axes"], [190, 3, 1, "", "rename_axes"], [190, 3, 1, "", "reorder_axes"], [190, 3, 1, "", "reproject_by_image"], [190, 3, 1, "", "reproject_to_geom"], [190, 3, 1, "", "resample"], [190, 3, 1, "", "resample_axis"], [190, 3, 1, "", "sample_coord"], [190, 3, 1, "", "set_by_coord"], [190, 3, 1, "", "set_by_idx"], [190, 3, 1, "", "set_by_pix"], [190, 3, 1, "", "slice_by_idx"], [190, 3, 1, "", "smooth"], [190, 3, 1, "", "split_by_axis"], [190, 3, 1, "", "stack"], [190, 3, 1, "", "sum_over_axes"], [190, 2, 1, "", "tag"], [190, 3, 1, "", "to_cube"], [190, 3, 1, "", "to_hdu"], [190, 3, 1, "", "to_hdulist"], [190, 3, 1, "", "to_nside"], [190, 3, 1, "", "to_region_nd_map"], [190, 3, 1, "", "to_swapped"], [190, 3, 1, "", "to_unit"], [190, 3, 1, "", "to_wcs"], [190, 3, 1, "", "to_wcs_tiles"], [190, 2, 1, "", "unit"], [190, 3, 1, "", "upsample"], [190, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[191, 2, 1, "", "as_plot_center"], [191, 2, 1, "", "as_plot_edges"], [191, 2, 1, "", "as_plot_labels"], [191, 2, 1, "", "as_plot_xerr"], [191, 3, 1, "", "assert_name"], [191, 2, 1, "", "bin_width"], [191, 2, 1, "", "center"], [191, 3, 1, "", "concatenate"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "downsample"], [191, 2, 1, "", "edges"], [191, 2, 1, "", "edges_max"], [191, 2, 1, "", "edges_min"], [191, 3, 1, "", "format_plot_xaxis"], [191, 3, 1, "", "from_stack"], [191, 3, 1, "", "from_table"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "name"], [191, 2, 1, "", "nbin"], [191, 2, 1, "", "node_type"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 3, 1, "", "resample"], [191, 3, 1, "", "slice"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_header"], [191, 2, 1, "", "unit"], [191, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[192, 3, 1, "", "coadd"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cumsum"], [192, 2, 1, "", "data"], [192, 3, 1, "", "dot"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "fill_by_coord"], [192, 3, 1, "", "fill_by_idx"], [192, 3, 1, "", "fill_by_pix"], [192, 3, 1, "", "fill_events"], [192, 3, 1, "", "from_geom"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_stack"], [192, 2, 1, "", "geom"], [192, 3, 1, "", "get_by_coord"], [192, 3, 1, "", "get_by_idx"], [192, 3, 1, "", "get_by_pix"], [192, 3, 1, "", "get_image_by_coord"], [192, 3, 1, "", "get_image_by_idx"], [192, 3, 1, "", "get_image_by_pix"], [192, 3, 1, "", "get_spectrum"], [192, 3, 1, "", "integral"], [192, 3, 1, "", "interp_by_coord"], [192, 3, 1, "", "interp_by_pix"], [192, 3, 1, "", "interp_to_geom"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_mask"], [192, 3, 1, "", "iter_by_axis"], [192, 3, 1, "", "iter_by_image"], [192, 3, 1, "", "iter_by_image_data"], [192, 3, 1, "", "iter_by_image_index"], [192, 3, 1, "", "mask_nearest_position"], [192, 2, 1, "", "meta"], [192, 3, 1, "", "normalize"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "plot_grid"], [192, 3, 1, "", "plot_interactive"], [192, 2, 1, "", "quantity"], [192, 3, 1, "", "read"], [192, 3, 1, "", "reduce"], [192, 3, 1, "", "reduce_over_axes"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "reorder_axes"], [192, 3, 1, "", "reproject_by_image"], [192, 3, 1, "", "reproject_to_geom"], [192, 3, 1, "", "resample"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "sample_coord"], [192, 3, 1, "", "set_by_coord"], [192, 3, 1, "", "set_by_idx"], [192, 3, 1, "", "set_by_pix"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "split_by_axis"], [192, 3, 1, "", "sum_over_axes"], [192, 2, 1, "", "tag"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_unit"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[193, 3, 1, "", "assert_names"], [193, 3, 1, "", "bin_volume"], [193, 2, 1, "", "center_coord"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "count"], [193, 3, 1, "", "downsample"], [193, 3, 1, "", "drop"], [193, 3, 1, "", "from_default"], [193, 3, 1, "", "from_table"], [193, 3, 1, "", "from_table_hdu"], [193, 3, 1, "", "get_coord"], [193, 3, 1, "", "index"], [193, 3, 1, "", "index_data"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_flat"], [193, 2, 1, "", "is_unidimensional"], [193, 2, 1, "", "iter_with_reshape"], [193, 2, 1, "", "names"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 2, 1, "", "primary_axis"], [193, 3, 1, "", "rename_axes"], [193, 3, 1, "", "replace"], [193, 3, 1, "", "resample"], [193, 2, 1, "", "reverse"], [193, 2, 1, "", "shape"], [193, 3, 1, "", "slice_by_idx"], [193, 3, 1, "", "squash"], [193, 3, 1, "", "to_header"], [193, 3, 1, "", "to_table"], [193, 3, 1, "", "to_table_hdu"], [193, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[194, 2, 1, "", "as_plot_center"], [194, 2, 1, "", "as_plot_edges"], [194, 2, 1, "", "as_plot_labels"], [194, 2, 1, "", "as_plot_scale"], [194, 2, 1, "", "as_plot_xerr"], [194, 3, 1, "", "assert_name"], [194, 2, 1, "", "bin_width"], [194, 2, 1, "", "bounds"], [194, 2, 1, "", "center"], [194, 3, 1, "", "concatenate"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "downsample"], [194, 2, 1, "", "edges"], [194, 2, 1, "", "edges_max"], [194, 2, 1, "", "edges_min"], [194, 3, 1, "", "format_plot_xaxis"], [194, 3, 1, "", "format_plot_yaxis"], [194, 3, 1, "", "from_bounds"], [194, 3, 1, "", "from_edges"], [194, 3, 1, "", "from_energy_bounds"], [194, 3, 1, "", "from_energy_edges"], [194, 3, 1, "", "from_nodes"], [194, 3, 1, "", "from_stack"], [194, 3, 1, "", "from_table"], [194, 3, 1, "", "from_table_hdu"], [194, 3, 1, "", "group_table"], [194, 2, 1, "", "interp"], [194, 3, 1, "", "is_aligned"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_energy_axis"], [194, 2, 1, "", "iter_by_edges"], [194, 2, 1, "", "name"], [194, 2, 1, "", "nbin"], [194, 2, 1, "", "nbin_per_decade"], [194, 2, 1, "", "node_type"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 3, 1, "", "rename"], [194, 3, 1, "", "round"], [194, 3, 1, "", "slice"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_header"], [194, 3, 1, "", "to_node_type"], [194, 3, 1, "", "to_table"], [194, 3, 1, "", "to_table_hdu"], [194, 2, 1, "", "unit"], [194, 3, 1, "", "upsample"], [194, 2, 1, "", "use_center_as_plot_labels"], [194, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[195, 3, 1, "", "apply_mask"], [195, 2, 1, "", "axis_names"], [195, 2, 1, "", "broadcasted"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 2, 1, "", "flat"], [195, 2, 1, "", "frame"], [195, 2, 1, "", "lat"], [195, 2, 1, "", "lon"], [195, 2, 1, "", "match_by_name"], [195, 2, 1, "", "ndim"], [195, 2, 1, "", "phi"], [195, 2, 1, "", "shape"], [195, 2, 1, "", "size"], [195, 2, 1, "", "skycoord"], [195, 2, 1, "", "theta"], [195, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[196, 3, 1, "", "clear"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get"], [196, 3, 1, "", "items"], [196, 3, 1, "", "keys"], [196, 3, 1, "", "pop"], [196, 3, 1, "", "popitem"], [196, 3, 1, "", "read"], [196, 3, 1, "", "setdefault"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "update"], [196, 3, 1, "", "values"], [196, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[197, 2, 1, "", "as_energy_true"], [197, 2, 1, "", "axes"], [197, 2, 1, "", "axes_names"], [197, 3, 1, "", "bin_volume"], [197, 2, 1, "", "binsz_wcs"], [197, 2, 1, "", "center_coord"], [197, 2, 1, "", "center_pix"], [197, 2, 1, "", "center_skydir"], [197, 3, 1, "", "contains"], [197, 3, 1, "", "contains_pix"], [197, 3, 1, "", "contains_wcs_pix"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "data_nbytes"], [197, 2, 1, "", "data_shape"], [197, 2, 1, "", "data_shape_axes"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "drop"], [197, 3, 1, "", "energy_mask"], [197, 2, 1, "", "frame"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_regions"], [197, 3, 1, "", "get_coord"], [197, 3, 1, "", "get_idx"], [197, 3, 1, "", "get_wcs_coord_and_weights"], [197, 2, 1, "", "has_energy_axis"], [197, 2, 1, "", "is_all_point_sky_regions"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_allsky"], [197, 2, 1, "", "is_flat"], [197, 2, 1, "", "is_hpx"], [197, 2, 1, "", "is_image"], [197, 2, 1, "", "is_region"], [197, 2, 1, "", "is_regular"], [197, 2, 1, "", "npix"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 3, 1, "", "plot_region"], [197, 2, 1, "", "projection"], [197, 2, 1, "", "region"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "replace_axis"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "separation"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "solid_angle"], [197, 3, 1, "", "squash"], [197, 3, 1, "", "to_bands_hdu"], [197, 3, 1, "", "to_binsz"], [197, 3, 1, "", "to_binsz_wcs"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_image"], [197, 3, 1, "", "to_wcs_geom"], [197, 3, 1, "", "union"], [197, 3, 1, "", "upsample"], [197, 2, 1, "", "wcs"], [197, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[198, 3, 1, "", "coadd"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cumsum"], [198, 3, 1, "", "cutout"], [198, 2, 1, "", "data"], [198, 3, 1, "", "dot"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "fill_by_coord"], [198, 3, 1, "", "fill_by_idx"], [198, 3, 1, "", "fill_by_pix"], [198, 3, 1, "", "fill_events"], [198, 3, 1, "", "from_geom"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 2, 1, "", "geom"], [198, 3, 1, "", "get_by_coord"], [198, 3, 1, "", "get_by_idx"], [198, 3, 1, "", "get_by_pix"], [198, 3, 1, "", "get_image_by_coord"], [198, 3, 1, "", "get_image_by_idx"], [198, 3, 1, "", "get_image_by_pix"], [198, 3, 1, "", "get_spectrum"], [198, 3, 1, "", "integral"], [198, 3, 1, "", "interp_by_coord"], [198, 3, 1, "", "interp_by_pix"], [198, 3, 1, "", "interp_to_geom"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_mask"], [198, 3, 1, "", "iter_by_axis"], [198, 3, 1, "", "iter_by_axis_data"], [198, 3, 1, "", "iter_by_image"], [198, 3, 1, "", "iter_by_image_data"], [198, 3, 1, "", "iter_by_image_index"], [198, 3, 1, "", "mask_nearest_position"], [198, 2, 1, "", "meta"], [198, 3, 1, "", "normalize"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "plot"], [198, 3, 1, "", "plot_grid"], [198, 3, 1, "", "plot_hist"], [198, 3, 1, "", "plot_interactive"], [198, 3, 1, "", "plot_mask"], [198, 3, 1, "", "plot_region"], [198, 2, 1, "", "quantity"], [198, 3, 1, "", "read"], [198, 3, 1, "", "reduce"], [198, 3, 1, "", "reduce_over_axes"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "reorder_axes"], [198, 3, 1, "", "reproject_by_image"], [198, 3, 1, "", "reproject_to_geom"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "sample_coord"], [198, 3, 1, "", "set_by_coord"], [198, 3, 1, "", "set_by_idx"], [198, 3, 1, "", "set_by_pix"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "split_by_axis"], [198, 3, 1, "", "stack"], [198, 3, 1, "", "sum_over_axes"], [198, 2, 1, "", "tag"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_hdulist"], [198, 3, 1, "", "to_region_nd_map"], [198, 3, 1, "", "to_table"], [198, 3, 1, "", "to_unit"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[199, 2, 1, "", "as_plot_center"], [199, 2, 1, "", "as_plot_edges"], [199, 2, 1, "", "as_plot_labels"], [199, 2, 1, "", "as_plot_xerr"], [199, 3, 1, "", "assert_name"], [199, 2, 1, "", "bin_width"], [199, 2, 1, "", "bounds"], [199, 2, 1, "", "center"], [199, 3, 1, "", "coord_to_idx"], [199, 3, 1, "", "coord_to_pix"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "downsample"], [199, 2, 1, "", "edges"], [199, 2, 1, "", "edges_max"], [199, 2, 1, "", "edges_min"], [199, 3, 1, "", "format_plot_xaxis"], [199, 3, 1, "", "from_gti"], [199, 3, 1, "", "from_gti_bounds"], [199, 3, 1, "", "from_table"], [199, 3, 1, "", "from_time_bounds"], [199, 3, 1, "", "from_time_edges"], [199, 3, 1, "", "group_table"], [199, 2, 1, "", "interp"], [199, 3, 1, "", "is_aligned"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_contiguous"], [199, 2, 1, "", "iter_by_edges"], [199, 2, 1, "", "name"], [199, 2, 1, "", "nbin"], [199, 2, 1, "", "node_type"], [199, 3, 1, "", "pix_to_coord"], [199, 3, 1, "", "pix_to_idx"], [199, 2, 1, "", "reference_time"], [199, 3, 1, "", "slice"], [199, 3, 1, "", "squash"], [199, 2, 1, "", "time_bounds"], [199, 2, 1, "", "time_delta"], [199, 2, 1, "", "time_edges"], [199, 2, 1, "", "time_format"], [199, 2, 1, "", "time_max"], [199, 2, 1, "", "time_mid"], [199, 2, 1, "", "time_min"], [199, 3, 1, "", "to_contiguous"], [199, 3, 1, "", "to_gti"], [199, 3, 1, "", "to_header"], [199, 3, 1, "", "to_table"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[200, 2, 1, "", "as_energy_true"], [200, 2, 1, "", "axes"], [200, 2, 1, "", "axes_names"], [200, 3, 1, "", "bin_volume"], [200, 3, 1, "", "binary_structure"], [200, 3, 1, "", "boundary_mask"], [200, 2, 1, "", "center_coord"], [200, 2, 1, "", "center_pix"], [200, 2, 1, "", "center_skydir"], [200, 3, 1, "", "contains"], [200, 3, 1, "", "contains_pix"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "cutout"], [200, 3, 1, "", "cutout_slices"], [200, 3, 1, "", "data_nbytes"], [200, 2, 1, "", "data_shape"], [200, 2, 1, "", "data_shape_axes"], [200, 2, 1, "", "data_shape_image"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "drop"], [200, 3, 1, "", "energy_mask"], [200, 2, 1, "", "footprint"], [200, 2, 1, "", "footprint_rectangle_sky_region"], [200, 2, 1, "", "frame"], [200, 3, 1, "", "from_aligned"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_header"], [200, 3, 1, "", "get_coord"], [200, 3, 1, "", "get_idx"], [200, 3, 1, "", "get_pix"], [200, 2, 1, "", "has_energy_axis"], [200, 3, 1, "", "is_aligned"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_allsky"], [200, 2, 1, "", "is_flat"], [200, 2, 1, "", "is_hpx"], [200, 2, 1, "", "is_image"], [200, 2, 1, "", "is_region"], [200, 2, 1, "", "is_regular"], [200, 2, 1, "", "ndim"], [200, 2, 1, "", "npix"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 2, 1, "", "pixel_area"], [200, 2, 1, "", "pixel_scales"], [200, 2, 1, "", "projection"], [200, 3, 1, "", "region_mask"], [200, 3, 1, "", "region_weights"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "replace_axis"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "separation"], [200, 2, 1, "", "shape_axes"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "solid_angle"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_bands_hdu"], [200, 3, 1, "", "to_binsz"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_even_npix"], [200, 3, 1, "", "to_header"], [200, 3, 1, "", "to_image"], [200, 3, 1, "", "to_odd_npix"], [200, 3, 1, "", "upsample"], [200, 2, 1, "", "wcs"], [200, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[201, 3, 1, "", "coadd"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "create"], [201, 3, 1, "", "crop"], [201, 3, 1, "", "cumsum"], [201, 2, 1, "", "data"], [201, 3, 1, "", "dot"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "fill_by_coord"], [201, 3, 1, "", "fill_by_idx"], [201, 3, 1, "", "fill_by_pix"], [201, 3, 1, "", "fill_events"], [201, 3, 1, "", "from_geom"], [201, 3, 1, "", "from_hdulist"], [201, 3, 1, "", "from_stack"], [201, 2, 1, "", "geom"], [201, 3, 1, "", "get_by_coord"], [201, 3, 1, "", "get_by_idx"], [201, 3, 1, "", "get_by_pix"], [201, 3, 1, "", "get_image_by_coord"], [201, 3, 1, "", "get_image_by_idx"], [201, 3, 1, "", "get_image_by_pix"], [201, 3, 1, "", "get_spectrum"], [201, 3, 1, "", "integral"], [201, 3, 1, "", "interp_by_coord"], [201, 3, 1, "", "interp_by_pix"], [201, 3, 1, "", "interp_to_geom"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_mask"], [201, 3, 1, "", "iter_by_axis"], [201, 3, 1, "", "iter_by_image"], [201, 3, 1, "", "iter_by_image_data"], [201, 3, 1, "", "iter_by_image_index"], [201, 3, 1, "", "mask_nearest_position"], [201, 2, 1, "", "meta"], [201, 3, 1, "", "normalize"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "plot_grid"], [201, 3, 1, "", "plot_interactive"], [201, 2, 1, "", "quantity"], [201, 3, 1, "", "read"], [201, 3, 1, "", "reduce"], [201, 3, 1, "", "reduce_over_axes"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "reorder_axes"], [201, 3, 1, "", "reproject_by_image"], [201, 3, 1, "", "reproject_to_geom"], [201, 3, 1, "", "resample"], [201, 3, 1, "", "resample_axis"], [201, 3, 1, "", "sample_coord"], [201, 3, 1, "", "set_by_coord"], [201, 3, 1, "", "set_by_idx"], [201, 3, 1, "", "set_by_pix"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "split_by_axis"], [201, 3, 1, "", "sum_over_axes"], [201, 2, 1, "", "tag"], [201, 3, 1, "", "to_cube"], [201, 3, 1, "", "to_hdu"], [201, 3, 1, "", "to_hdulist"], [201, 3, 1, "", "to_unit"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[202, 3, 1, "", "binary_dilate"], [202, 3, 1, "", "binary_erode"], [202, 3, 1, "", "coadd"], [202, 3, 1, "", "convolve"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 3, 1, "", "crop"], [202, 3, 1, "", "cumsum"], [202, 3, 1, "", "cutout"], [202, 3, 1, "", "cutout_and_mask_region"], [202, 2, 1, "", "data"], [202, 3, 1, "", "dot"], [202, 3, 1, "", "downsample"], [202, 3, 1, "", "fill_by_coord"], [202, 3, 1, "", "fill_by_idx"], [202, 3, 1, "", "fill_by_pix"], [202, 3, 1, "", "fill_events"], [202, 3, 1, "", "from_geom"], [202, 3, 1, "", "from_hdu"], [202, 3, 1, "", "from_hdulist"], [202, 3, 1, "", "from_stack"], [202, 2, 1, "", "geom"], [202, 3, 1, "", "get_by_coord"], [202, 3, 1, "", "get_by_idx"], [202, 3, 1, "", "get_by_pix"], [202, 3, 1, "", "get_image_by_coord"], [202, 3, 1, "", "get_image_by_idx"], [202, 3, 1, "", "get_image_by_pix"], [202, 3, 1, "", "get_spectrum"], [202, 3, 1, "", "integral"], [202, 3, 1, "", "interp_by_coord"], [202, 3, 1, "", "interp_by_pix"], [202, 3, 1, "", "interp_to_geom"], [202, 3, 1, "", "is_allclose"], [202, 2, 1, "", "is_mask"], [202, 3, 1, "", "iter_by_axis"], [202, 3, 1, "", "iter_by_image"], [202, 3, 1, "", "iter_by_image_data"], [202, 3, 1, "", "iter_by_image_index"], [202, 3, 1, "", "mask_contains_region"], [202, 3, 1, "", "mask_nearest_position"], [202, 2, 1, "", "meta"], [202, 3, 1, "", "normalize"], [202, 3, 1, "", "pad"], [202, 3, 1, "", "plot"], [202, 3, 1, "", "plot_grid"], [202, 3, 1, "", "plot_interactive"], [202, 3, 1, "", "plot_mask"], [202, 2, 1, "", "quantity"], [202, 3, 1, "", "read"], [202, 3, 1, "", "reduce"], [202, 3, 1, "", "reduce_over_axes"], [202, 3, 1, "", "rename_axes"], [202, 3, 1, "", "reorder_axes"], [202, 3, 1, "", "reproject_by_image"], [202, 3, 1, "", "reproject_to_geom"], [202, 3, 1, "", "resample"], [202, 3, 1, "", "resample_axis"], [202, 3, 1, "", "sample_coord"], [202, 3, 1, "", "set_by_coord"], [202, 3, 1, "", "set_by_idx"], [202, 3, 1, "", "set_by_pix"], [202, 3, 1, "", "slice_by_idx"], [202, 3, 1, "", "smooth"], [202, 3, 1, "", "split_by_axis"], [202, 3, 1, "", "stack"], [202, 3, 1, "", "sum_over_axes"], [202, 2, 1, "", "tag"], [202, 3, 1, "", "to_cube"], [202, 3, 1, "", "to_hdu"], [202, 3, 1, "", "to_hdulist"], [202, 3, 1, "", "to_region_nd_map"], [202, 3, 1, "", "to_region_nd_map_histogram"], [202, 3, 1, "", "to_unit"], [202, 2, 1, "", "unit"], [202, 3, 1, "", "upsample"], [202, 3, 1, "", "write"]], "gammapy.modeling": [[205, 1, 1, "", "Covariance"], [206, 1, 1, "", "CovarianceResult"], [207, 1, 1, "", "Fit"], [208, 1, 1, "", "FitResult"], [209, 1, 1, "", "OptimizeResult"], [210, 1, 1, "", "Parameter"], [211, 1, 1, "", "Parameters"], [212, 1, 1, "", "PriorParameter"], [213, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [280, 4, 1, "", "select_nested_models"], [281, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[205, 2, 1, "", "correlation"], [205, 2, 1, "", "data"], [205, 3, 1, "", "from_factor_matrix"], [205, 3, 1, "", "from_stack"], [205, 3, 1, "", "get_subcovariance"], [205, 3, 1, "", "plot_correlation"], [205, 2, 1, "", "scipy_mvn"], [205, 3, 1, "", "set_subcovariance"], [205, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[206, 2, 1, "", "backend"], [206, 2, 1, "", "matrix"], [206, 2, 1, "", "message"], [206, 2, 1, "", "method"], [206, 2, 1, "", "success"], [206, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[207, 3, 1, "", "confidence"], [207, 3, 1, "", "covariance"], [207, 3, 1, "", "optimize"], [207, 3, 1, "", "run"], [207, 3, 1, "", "stat_contour"], [207, 3, 1, "", "stat_profile"], [207, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[208, 2, 1, "", "backend"], [208, 2, 1, "", "covariance_result"], [208, 2, 1, "", "message"], [208, 2, 1, "", "method"], [208, 2, 1, "", "minuit"], [208, 2, 1, "", "models"], [208, 2, 1, "", "nfev"], [208, 2, 1, "", "optimize_result"], [208, 2, 1, "", "parameters"], [208, 2, 1, "", "success"], [208, 2, 1, "", "total_stat"], [208, 2, 1, "", "trace"], [208, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[209, 2, 1, "", "backend"], [209, 2, 1, "", "message"], [209, 2, 1, "", "method"], [209, 2, 1, "", "minuit"], [209, 2, 1, "", "models"], [209, 2, 1, "", "nfev"], [209, 2, 1, "", "parameters"], [209, 2, 1, "", "success"], [209, 3, 1, "", "to_dict"], [209, 2, 1, "", "total_stat"], [209, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[210, 3, 1, "", "autoscale"], [210, 3, 1, "", "check_limits"], [210, 2, 1, "", "conf_max"], [210, 2, 1, "", "conf_min"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "error"], [210, 2, 1, "", "factor"], [210, 2, 1, "", "factor_max"], [210, 2, 1, "", "factor_min"], [210, 2, 1, "", "frozen"], [210, 2, 1, "", "max"], [210, 2, 1, "", "min"], [210, 2, 1, "", "name"], [210, 2, 1, "", "prior"], [210, 3, 1, "", "prior_stat_sum"], [210, 2, 1, "", "quantity"], [210, 2, 1, "", "scale"], [210, 2, 1, "", "scale_method"], [210, 2, 1, "", "scan_max"], [210, 2, 1, "", "scan_min"], [210, 2, 1, "", "scan_n_sigma"], [210, 2, 1, "", "scan_values"], [210, 3, 1, "", "to_dict"], [210, 2, 1, "", "type"], [210, 2, 1, "", "unit"], [210, 3, 1, "", "update_from_dict"], [210, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[211, 3, 1, "", "autoscale"], [211, 3, 1, "", "check_limits"], [211, 3, 1, "", "copy"], [211, 3, 1, "", "count"], [211, 2, 1, "", "free_parameters"], [211, 3, 1, "", "freeze_all"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_stack"], [211, 3, 1, "", "index"], [211, 2, 1, "", "max"], [211, 2, 1, "", "min"], [211, 2, 1, "", "names"], [211, 2, 1, "", "prior"], [211, 3, 1, "", "prior_stat_sum"], [211, 3, 1, "", "restore_status"], [211, 3, 1, "", "select"], [211, 3, 1, "", "set_parameter_factors"], [211, 3, 1, "", "to_dict"], [211, 3, 1, "", "to_table"], [211, 2, 1, "", "types"], [211, 3, 1, "", "unfreeze_all"], [211, 2, 1, "", "unique_parameters"], [211, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[212, 3, 1, "", "autoscale"], [212, 3, 1, "", "check_limits"], [212, 2, 1, "", "conf_max"], [212, 2, 1, "", "conf_min"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "error"], [212, 2, 1, "", "factor"], [212, 2, 1, "", "factor_max"], [212, 2, 1, "", "factor_min"], [212, 2, 1, "", "frozen"], [212, 2, 1, "", "max"], [212, 2, 1, "", "min"], [212, 2, 1, "", "name"], [212, 2, 1, "", "prior"], [212, 3, 1, "", "prior_stat_sum"], [212, 2, 1, "", "quantity"], [212, 2, 1, "", "scale"], [212, 2, 1, "", "scale_method"], [212, 2, 1, "", "scan_max"], [212, 2, 1, "", "scan_min"], [212, 2, 1, "", "scan_n_sigma"], [212, 2, 1, "", "scan_values"], [212, 3, 1, "", "to_dict"], [212, 2, 1, "", "type"], [212, 2, 1, "", "unit"], [212, 3, 1, "", "update_from_dict"], [212, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[213, 3, 1, "", "autoscale"], [213, 3, 1, "", "check_limits"], [213, 3, 1, "", "copy"], [213, 3, 1, "", "count"], [213, 2, 1, "", "free_parameters"], [213, 3, 1, "", "freeze_all"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_stack"], [213, 3, 1, "", "index"], [213, 2, 1, "", "max"], [213, 2, 1, "", "min"], [213, 2, 1, "", "names"], [213, 2, 1, "", "prior"], [213, 3, 1, "", "prior_stat_sum"], [213, 3, 1, "", "restore_status"], [213, 3, 1, "", "select"], [213, 3, 1, "", "set_parameter_factors"], [213, 3, 1, "", "to_dict"], [213, 3, 1, "", "to_table"], [213, 2, 1, "", "types"], [213, 3, 1, "", "unfreeze_all"], [213, 2, 1, "", "unique_parameters"], [213, 2, 1, "", "value"]], "gammapy.modeling.models": [[214, 1, 1, "", "BrokenPowerLawSpectralModel"], [215, 1, 1, "", "CompoundSpectralModel"], [216, 1, 1, "", "ConstantFluxSpatialModel"], [217, 1, 1, "", "ConstantSpatialModel"], [218, 1, 1, "", "ConstantSpectralModel"], [219, 1, 1, "", "ConstantTemporalModel"], [220, 1, 1, "", "DatasetModels"], [221, 1, 1, "", "DiskSpatialModel"], [222, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [223, 5, 1, "", "EBL_DATA_BUILTIN"], [224, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [225, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [226, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [227, 1, 1, "", "ExpDecayTemporalModel"], [228, 1, 1, "", "FoVBackgroundModel"], [229, 1, 1, "", "GaussianSpatialModel"], [230, 1, 1, "", "GaussianSpectralModel"], [231, 1, 1, "", "GaussianTemporalModel"], [232, 1, 1, "", "GeneralizedGaussianSpatialModel"], [233, 1, 1, "", "GeneralizedGaussianTemporalModel"], [234, 1, 1, "", "LightCurveTemplateTemporalModel"], [235, 1, 1, "", "LinearTemporalModel"], [236, 1, 1, "", "LogParabolaNormSpectralModel"], [237, 1, 1, "", "LogParabolaSpectralModel"], [238, 5, 1, "", "MODEL_REGISTRY"], [239, 1, 1, "", "MeyerCrabSpectralModel"], [240, 1, 1, "", "Model"], [241, 1, 1, "", "ModelBase"], [242, 1, 1, "", "Models"], [243, 1, 1, "", "NaimaSpectralModel"], [244, 1, 1, "", "PiecewiseNormSpatialModel"], [245, 1, 1, "", "PiecewiseNormSpectralModel"], [246, 1, 1, "", "PointSpatialModel"], [247, 1, 1, "", "PowerLaw2SpectralModel"], [248, 1, 1, "", "PowerLawNormSpectralModel"], [249, 1, 1, "", "PowerLawSpectralModel"], [250, 1, 1, "", "PowerLawTemporalModel"], [251, 1, 1, "", "Prior"], [252, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [253, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [254, 1, 1, "", "ScaleSpectralModel"], [255, 1, 1, "", "Shell2SpatialModel"], [256, 1, 1, "", "ShellSpatialModel"], [257, 1, 1, "", "SineTemporalModel"], [258, 1, 1, "", "SkyModel"], [259, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [260, 1, 1, "", "SpatialModel"], [261, 1, 1, "", "SpectralModel"], [262, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [263, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [264, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [265, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [266, 1, 1, "", "TemplateNDSpatialModel"], [267, 1, 1, "", "TemplateNDSpectralModel"], [268, 1, 1, "", "TemplateNPredModel"], [269, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [270, 1, 1, "", "TemplateSpatialModel"], [271, 1, 1, "", "TemplateSpectralModel"], [272, 1, 1, "", "TemporalModel"], [273, 4, 1, "", "create_cosmic_ray_spectral_model"], [274, 4, 1, "", "create_crab_spectral_model"], [275, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [276, 4, 1, "", "integrate_spectrum"], [277, 4, 1, "", "read_hermes_cube"], [278, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[214, 3, 1, "", "__call__"], [214, 2, 1, "", "amplitude"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "covariance"], [214, 2, 1, "", "default_parameters"], [214, 2, 1, "", "ebreak"], [214, 3, 1, "", "energy_flux"], [214, 3, 1, "", "energy_flux_error"], [214, 3, 1, "", "evaluate"], [214, 3, 1, "", "evaluate_error"], [214, 3, 1, "", "freeze"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_parameters"], [214, 2, 1, "", "frozen"], [214, 2, 1, "", "index1"], [214, 2, 1, "", "index2"], [214, 3, 1, "", "integral"], [214, 3, 1, "", "integral_error"], [214, 3, 1, "", "inverse"], [214, 3, 1, "", "inverse_all"], [214, 2, 1, "", "is_norm_spectral_model"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "parameters_unique_names"], [214, 2, 1, "", "pivot_energy"], [214, 3, 1, "", "plot"], [214, 3, 1, "", "plot_error"], [214, 3, 1, "", "reassign"], [214, 3, 1, "", "reference_fluxes"], [214, 3, 1, "", "spectral_index"], [214, 3, 1, "", "spectral_index_error"], [214, 2, 1, "", "tag"], [214, 3, 1, "", "to_dict"], [214, 2, 1, "", "type"], [214, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[215, 3, 1, "", "__call__"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 3, 1, "", "energy_flux"], [215, 3, 1, "", "energy_flux_error"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_error"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 2, 1, "", "frozen"], [215, 3, 1, "", "integral"], [215, 3, 1, "", "integral_error"], [215, 3, 1, "", "inverse"], [215, 3, 1, "", "inverse_all"], [215, 2, 1, "", "is_norm_spectral_model"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "parameters_unique_names"], [215, 2, 1, "", "pivot_energy"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "reassign"], [215, 3, 1, "", "reference_fluxes"], [215, 3, 1, "", "spectral_index"], [215, 3, 1, "", "spectral_index_error"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[216, 3, 1, "", "__call__"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_geom"], [216, 2, 1, "", "evaluation_bin_size_min"], [216, 2, 1, "", "evaluation_radius"], [216, 2, 1, "", "evaluation_region"], [216, 2, 1, "", "frame"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 3, 1, "", "from_position"], [216, 2, 1, "", "frozen"], [216, 3, 1, "", "integrate_geom"], [216, 2, 1, "", "is_energy_dependent"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "parameters_unique_names"], [216, 2, 1, "", "phi_0"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "plot_grid"], [216, 3, 1, "", "plot_interactive"], [216, 3, 1, "", "plot_position_error"], [216, 2, 1, "", "position"], [216, 2, 1, "", "position_error"], [216, 2, 1, "", "position_lonlat"], [216, 3, 1, "", "reassign"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 3, 1, "", "to_region"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[217, 3, 1, "", "__call__"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "evaluate_geom"], [217, 2, 1, "", "evaluation_bin_size_min"], [217, 2, 1, "", "evaluation_radius"], [217, 2, 1, "", "evaluation_region"], [217, 2, 1, "", "frame"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 3, 1, "", "from_position"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "integrate_geom"], [217, 2, 1, "", "is_energy_dependent"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "parameters_unique_names"], [217, 2, 1, "", "phi_0"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "plot_error"], [217, 3, 1, "", "plot_grid"], [217, 3, 1, "", "plot_interactive"], [217, 3, 1, "", "plot_position_error"], [217, 2, 1, "", "position"], [217, 2, 1, "", "position_error"], [217, 2, 1, "", "position_lonlat"], [217, 3, 1, "", "reassign"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "to_region"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"], [217, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[218, 3, 1, "", "__call__"], [218, 2, 1, "", "const"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 3, 1, "", "energy_flux"], [218, 3, 1, "", "energy_flux_error"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "evaluate_error"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "integral"], [218, 3, 1, "", "integral_error"], [218, 3, 1, "", "inverse"], [218, 3, 1, "", "inverse_all"], [218, 2, 1, "", "is_norm_spectral_model"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 2, 1, "", "pivot_energy"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "plot_error"], [218, 3, 1, "", "reassign"], [218, 3, 1, "", "reference_fluxes"], [218, 3, 1, "", "spectral_index"], [218, 3, 1, "", "spectral_index_error"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[219, 3, 1, "", "__call__"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "integral"], [219, 2, 1, "", "is_energy_dependent"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "reassign"], [219, 2, 1, "", "reference_time"], [219, 3, 1, "", "sample_time"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "time_sum"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[220, 3, 1, "", "copy"], [220, 3, 1, "", "count"], [220, 2, 1, "", "covariance"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_yaml"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "index"], [220, 2, 1, "", "names"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 3, 1, "", "plot_positions"], [220, 3, 1, "", "plot_regions"], [220, 2, 1, "", "positions"], [220, 3, 1, "", "read"], [220, 3, 1, "", "read_covariance"], [220, 3, 1, "", "reassign"], [220, 3, 1, "", "restore_status"], [220, 3, 1, "", "select"], [220, 3, 1, "", "select_from_geom"], [220, 3, 1, "", "select_mask"], [220, 3, 1, "", "select_region"], [220, 3, 1, "", "selection_mask"], [220, 3, 1, "", "set_parameters_bounds"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_parameters_table"], [220, 3, 1, "", "to_regions"], [220, 3, 1, "", "to_template_sky_model"], [220, 3, 1, "", "to_template_spectral_model"], [220, 3, 1, "", "to_yaml"], [220, 3, 1, "", "unfreeze"], [220, 3, 1, "", "update_link_label"], [220, 3, 1, "", "update_parameters_from_table"], [220, 2, 1, "", "wcs_geom"], [220, 3, 1, "", "write"], [220, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[221, 3, 1, "", "__call__"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 2, 1, "", "e"], [221, 2, 1, "", "edge_width"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_geom"], [221, 2, 1, "", "evaluation_bin_size_min"], [221, 2, 1, "", "evaluation_radius"], [221, 2, 1, "", "evaluation_region"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 3, 1, "", "from_position"], [221, 3, 1, "", "from_region"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integrate_geom"], [221, 2, 1, "", "is_energy_dependent"], [221, 2, 1, "", "lat_0"], [221, 2, 1, "", "lon_0"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "phi"], [221, 2, 1, "", "phi_0"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "plot_grid"], [221, 3, 1, "", "plot_interactive"], [221, 3, 1, "", "plot_position_error"], [221, 2, 1, "", "position"], [221, 2, 1, "", "position_error"], [221, 2, 1, "", "position_lonlat"], [221, 2, 1, "", "r_0"], [221, 3, 1, "", "reassign"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 3, 1, "", "to_region"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "alpha_norm"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "read"], [222, 3, 1, "", "read_builtin"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "redshift"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "amplitude"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "ecut"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 2, 1, "", "index"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "reference"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[225, 3, 1, "", "__call__"], [225, 2, 1, "", "alpha"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "energy_flux"], [225, 3, 1, "", "energy_flux_error"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_error"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 2, 1, "", "index"], [225, 3, 1, "", "integral"], [225, 3, 1, "", "integral_error"], [225, 3, 1, "", "inverse"], [225, 3, 1, "", "inverse_all"], [225, 2, 1, "", "is_norm_spectral_model"], [225, 2, 1, "", "lambda_"], [225, 2, 1, "", "norm"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "pivot_energy"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference"], [225, 3, 1, "", "reference_fluxes"], [225, 3, 1, "", "spectral_index"], [225, 3, 1, "", "spectral_index_error"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "alpha"], [226, 2, 1, "", "amplitude"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 2, 1, "", "e_peak"], [226, 3, 1, "", "energy_flux"], [226, 3, 1, "", "energy_flux_error"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_error"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 2, 1, "", "index"], [226, 3, 1, "", "integral"], [226, 3, 1, "", "integral_error"], [226, 3, 1, "", "inverse"], [226, 3, 1, "", "inverse_all"], [226, 2, 1, "", "is_norm_spectral_model"], [226, 2, 1, "", "lambda_"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "pivot_energy"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "reference"], [226, 3, 1, "", "reference_fluxes"], [226, 3, 1, "", "spectral_index"], [226, 3, 1, "", "spectral_index_error"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference_time"], [227, 3, 1, "", "sample_time"], [227, 2, 1, "", "t0"], [227, 2, 1, "", "t_ref"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "time_sum"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[228, 3, 1, "", "contributes"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_geom"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 2, 1, "", "name"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 3, 1, "", "reassign"], [228, 3, 1, "", "reset_to_default"], [228, 2, 1, "", "spatial_model"], [228, 2, 1, "", "spectral_model"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[229, 3, 1, "", "__call__"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 2, 1, "", "e"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_geom"], [229, 2, 1, "", "evaluation_bin_size_min"], [229, 2, 1, "", "evaluation_radius"], [229, 2, 1, "", "evaluation_region"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 3, 1, "", "from_position"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integrate_geom"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "lat_0"], [229, 2, 1, "", "lon_0"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "phi"], [229, 2, 1, "", "phi_0"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "plot_grid"], [229, 3, 1, "", "plot_interactive"], [229, 3, 1, "", "plot_position_error"], [229, 2, 1, "", "position"], [229, 2, 1, "", "position_error"], [229, 2, 1, "", "position_lonlat"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "sigma"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 3, 1, "", "to_region"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "amplitude"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "mean"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 3, 1, "", "reference_fluxes"], [230, 2, 1, "", "sigma"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference_time"], [231, 3, 1, "", "sample_time"], [231, 2, 1, "", "sigma"], [231, 2, 1, "", "t_ref"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "time_sum"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[232, 3, 1, "", "__call__"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 2, 1, "", "e"], [232, 2, 1, "", "eta"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_geom"], [232, 2, 1, "", "evaluation_bin_size_min"], [232, 2, 1, "", "evaluation_radius"], [232, 2, 1, "", "evaluation_region"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 3, 1, "", "from_position"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integrate_geom"], [232, 2, 1, "", "is_energy_dependent"], [232, 2, 1, "", "lat_0"], [232, 2, 1, "", "lon_0"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "phi"], [232, 2, 1, "", "phi_0"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "plot_grid"], [232, 3, 1, "", "plot_interactive"], [232, 3, 1, "", "plot_position_error"], [232, 2, 1, "", "position"], [232, 2, 1, "", "position_error"], [232, 2, 1, "", "position_lonlat"], [232, 2, 1, "", "r_0"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 3, 1, "", "to_region"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[233, 3, 1, "", "__call__"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "eta"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 2, 1, "", "is_energy_dependent"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference_time"], [233, 3, 1, "", "sample_time"], [233, 2, 1, "", "t_decay"], [233, 2, 1, "", "t_ref"], [233, 2, 1, "", "t_rise"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "time_sum"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 3, 1, "", "from_table"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 2, 1, "", "is_energy_dependent"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "read"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference_time"], [234, 3, 1, "", "sample_time"], [234, 2, 1, "", "t_ref"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "time_sum"], [234, 3, 1, "", "to_dict"], [234, 3, 1, "", "to_table"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"], [234, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 2, 1, "", "beta"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 2, 1, "", "is_energy_dependent"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference_time"], [235, 3, 1, "", "sample_time"], [235, 2, 1, "", "t_ref"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "time_sum"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[236, 3, 1, "", "__call__"], [236, 2, 1, "", "alpha"], [236, 2, 1, "", "beta"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "energy_flux"], [236, 3, 1, "", "energy_flux_error"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_error"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_log10"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 3, 1, "", "integral_error"], [236, 3, 1, "", "inverse"], [236, 3, 1, "", "inverse_all"], [236, 2, 1, "", "is_norm_spectral_model"], [236, 2, 1, "", "norm"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 2, 1, "", "pivot_energy"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference"], [236, 3, 1, "", "reference_fluxes"], [236, 3, 1, "", "spectral_index"], [236, 3, 1, "", "spectral_index_error"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[237, 3, 1, "", "__call__"], [237, 2, 1, "", "alpha"], [237, 2, 1, "", "amplitude"], [237, 2, 1, "", "beta"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 2, 1, "", "e_peak"], [237, 3, 1, "", "energy_flux"], [237, 3, 1, "", "energy_flux_error"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_error"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_log10"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 3, 1, "", "integral_error"], [237, 3, 1, "", "inverse"], [237, 3, 1, "", "inverse_all"], [237, 2, 1, "", "is_norm_spectral_model"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "pivot_energy"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "reference"], [237, 3, 1, "", "reference_fluxes"], [237, 3, 1, "", "spectral_index"], [237, 3, 1, "", "spectral_index_error"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[239, 3, 1, "", "__call__"], [239, 2, 1, "", "coefficients"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "norm"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 3, 1, "", "reference_fluxes"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[240, 3, 1, "", "create"], [240, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[242, 3, 1, "", "append"], [242, 3, 1, "", "clear"], [242, 3, 1, "", "copy"], [242, 3, 1, "", "count"], [242, 2, 1, "", "covariance"], [242, 3, 1, "", "extend"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_yaml"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "index"], [242, 3, 1, "", "insert"], [242, 2, 1, "", "names"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 3, 1, "", "plot_positions"], [242, 3, 1, "", "plot_regions"], [242, 3, 1, "", "pop"], [242, 2, 1, "", "positions"], [242, 3, 1, "", "read"], [242, 3, 1, "", "read_covariance"], [242, 3, 1, "", "reassign"], [242, 3, 1, "", "remove"], [242, 3, 1, "", "restore_status"], [242, 3, 1, "", "reverse"], [242, 3, 1, "", "select"], [242, 3, 1, "", "select_from_geom"], [242, 3, 1, "", "select_mask"], [242, 3, 1, "", "select_region"], [242, 3, 1, "", "selection_mask"], [242, 3, 1, "", "set_parameters_bounds"], [242, 3, 1, "", "set_prior"], [242, 3, 1, "", "to_dict"], [242, 3, 1, "", "to_parameters_table"], [242, 3, 1, "", "to_regions"], [242, 3, 1, "", "to_template_sky_model"], [242, 3, 1, "", "to_template_spectral_model"], [242, 3, 1, "", "to_yaml"], [242, 3, 1, "", "unfreeze"], [242, 3, 1, "", "update_link_label"], [242, 3, 1, "", "update_parameters_from_table"], [242, 2, 1, "", "wcs_geom"], [242, 3, 1, "", "write"], [242, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 2, 1, "", "include_ssc"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "particle_distribution"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 2, 1, "", "ssc_model"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[244, 3, 1, "", "__call__"], [244, 2, 1, "", "coords"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_geom"], [244, 2, 1, "", "evaluation_bin_size_min"], [244, 2, 1, "", "evaluation_radius"], [244, 2, 1, "", "evaluation_region"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 3, 1, "", "from_position"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integrate_geom"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "norms"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "phi_0"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "plot_grid"], [244, 3, 1, "", "plot_interactive"], [244, 3, 1, "", "plot_position_error"], [244, 2, 1, "", "position"], [244, 2, 1, "", "position_error"], [244, 2, 1, "", "position_lonlat"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[245, 3, 1, "", "__call__"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "energy"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "norms"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate_geom"], [246, 2, 1, "", "evaluation_bin_size_min"], [246, 2, 1, "", "evaluation_radius"], [246, 2, 1, "", "evaluation_region"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 3, 1, "", "from_position"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integrate_geom"], [246, 2, 1, "", "is_energy_dependent"], [246, 2, 1, "", "lat_0"], [246, 2, 1, "", "lon_0"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "phi_0"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "plot_grid"], [246, 3, 1, "", "plot_interactive"], [246, 3, 1, "", "plot_position_error"], [246, 2, 1, "", "position"], [246, 2, 1, "", "position_error"], [246, 2, 1, "", "position_lonlat"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 3, 1, "", "to_region"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "amplitude"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 2, 1, "", "emax"], [247, 2, 1, "", "emin"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "evaluate_integral"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 2, 1, "", "index"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "energy_flux"], [248, 3, 1, "", "energy_flux_error"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_energy_flux"], [248, 3, 1, "", "evaluate_error"], [248, 3, 1, "", "evaluate_integral"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 3, 1, "", "integral_error"], [248, 3, 1, "", "inverse"], [248, 3, 1, "", "inverse_all"], [248, 2, 1, "", "is_norm_spectral_model"], [248, 2, 1, "", "norm"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "pivot_energy"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "reference"], [248, 3, 1, "", "reference_fluxes"], [248, 3, 1, "", "spectral_index"], [248, 3, 1, "", "spectral_index_error"], [248, 2, 1, "", "tag"], [248, 2, 1, "", "tilt"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[249, 3, 1, "", "__call__"], [249, 2, 1, "", "amplitude"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_energy_flux"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "evaluate_integral"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 2, 1, "", "index"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "reference"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[250, 3, 1, "", "__call__"], [250, 2, 1, "", "alpha"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integral"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "reassign"], [250, 2, 1, "", "reference_time"], [250, 3, 1, "", "sample_time"], [250, 2, 1, "", "t0"], [250, 2, 1, "", "t_ref"], [250, 2, 1, "", "tag"], [250, 3, 1, "", "time_sum"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"], [251, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "norm"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 2, 1, "", "eta"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "lat_0"], [255, 2, 1, "", "lon_0"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 2, 1, "", "r_0"], [255, 2, 1, "", "r_in"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 3, 1, "", "to_region"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_geom"], [256, 2, 1, "", "evaluation_bin_size_min"], [256, 2, 1, "", "evaluation_radius"], [256, 2, 1, "", "evaluation_region"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 3, 1, "", "from_position"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integrate_geom"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "lat_0"], [256, 2, 1, "", "lon_0"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "phi_0"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "plot_grid"], [256, 3, 1, "", "plot_interactive"], [256, 3, 1, "", "plot_position_error"], [256, 2, 1, "", "position"], [256, 2, 1, "", "position_error"], [256, 2, 1, "", "position_lonlat"], [256, 2, 1, "", "radius"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 3, 1, "", "to_region"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"], [256, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[257, 3, 1, "", "__call__"], [257, 2, 1, "", "amp"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 2, 1, "", "is_energy_dependent"], [257, 2, 1, "", "omega"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "reference_time"], [257, 3, 1, "", "sample_time"], [257, 2, 1, "", "t_ref"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "time_sum"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "contributes"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 3, 1, "", "create"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_geom"], [258, 2, 1, "", "evaluation_bin_size_min"], [258, 2, 1, "", "evaluation_radius"], [258, 2, 1, "", "evaluation_region"], [258, 2, 1, "", "frame"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integrate_geom"], [258, 2, 1, "", "name"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "position"], [258, 2, 1, "", "position_lonlat"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "spatial_model"], [258, 2, 1, "", "spectral_model"], [258, 2, 1, "", "tag"], [258, 2, 1, "", "temporal_model"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "amplitude"], [259, 2, 1, "", "beta"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 2, 1, "", "ebreak"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "index1"], [259, 2, 1, "", "index2"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "evaluate_geom"], [260, 2, 1, "", "evaluation_bin_size_min"], [260, 2, 1, "", "evaluation_radius"], [260, 2, 1, "", "evaluation_region"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 3, 1, "", "from_position"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integrate_geom"], [260, 2, 1, "", "is_energy_dependent"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "phi_0"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "plot_grid"], [260, 3, 1, "", "plot_interactive"], [260, 3, 1, "", "plot_position_error"], [260, 2, 1, "", "position"], [260, 2, 1, "", "position_error"], [260, 2, 1, "", "position_lonlat"], [260, 3, 1, "", "reassign"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate_error"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "reassign"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[262, 3, 1, "", "__call__"], [262, 2, 1, "", "amplitude"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 2, 1, "", "ecut"], [262, 3, 1, "", "energy_flux"], [262, 3, 1, "", "energy_flux_error"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_error"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 2, 1, "", "index_1"], [262, 2, 1, "", "index_2"], [262, 3, 1, "", "integral"], [262, 3, 1, "", "integral_error"], [262, 3, 1, "", "inverse"], [262, 3, 1, "", "inverse_all"], [262, 2, 1, "", "is_norm_spectral_model"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 2, 1, "", "pivot_energy"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_error"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference"], [262, 3, 1, "", "reference_fluxes"], [262, 3, 1, "", "spectral_index"], [262, 3, 1, "", "spectral_index_error"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[263, 3, 1, "", "__call__"], [263, 2, 1, "", "amplitude"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "energy_flux"], [263, 3, 1, "", "energy_flux_error"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_error"], [263, 2, 1, "", "expfactor"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 2, 1, "", "index_1"], [263, 2, 1, "", "index_2"], [263, 3, 1, "", "integral"], [263, 3, 1, "", "integral_error"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "inverse_all"], [263, 2, 1, "", "is_norm_spectral_model"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "pivot_energy"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "reference"], [263, 3, 1, "", "reference_fluxes"], [263, 3, 1, "", "spectral_index"], [263, 3, 1, "", "spectral_index_error"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[264, 3, 1, "", "__call__"], [264, 2, 1, "", "amplitude"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "energy_flux"], [264, 3, 1, "", "energy_flux_error"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_error"], [264, 2, 1, "", "expfactor"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 2, 1, "", "index_1"], [264, 2, 1, "", "index_2"], [264, 3, 1, "", "integral"], [264, 3, 1, "", "integral_error"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "inverse_all"], [264, 2, 1, "", "is_norm_spectral_model"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "pivot_energy"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "reassign"], [264, 2, 1, "", "reference"], [264, 3, 1, "", "reference_fluxes"], [264, 3, 1, "", "spectral_index"], [264, 3, 1, "", "spectral_index_error"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_geom"], [266, 2, 1, "", "evaluation_bin_size_min"], [266, 2, 1, "", "evaluation_radius"], [266, 2, 1, "", "evaluation_region"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 3, 1, "", "from_position"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integrate_geom"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "map"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_0"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "plot_grid"], [266, 3, 1, "", "plot_interactive"], [266, 3, 1, "", "plot_position_error"], [266, 2, 1, "", "position"], [266, 2, 1, "", "position_error"], [266, 2, 1, "", "position_lonlat"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"], [266, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "energy_flux"], [267, 3, 1, "", "energy_flux_error"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_error"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integral"], [267, 3, 1, "", "integral_error"], [267, 3, 1, "", "inverse"], [267, 3, 1, "", "inverse_all"], [267, 2, 1, "", "is_norm_spectral_model"], [267, 2, 1, "", "map"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "pivot_energy"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "reassign"], [267, 3, 1, "", "reference_fluxes"], [267, 3, 1, "", "spectral_index"], [267, 3, 1, "", "spectral_index_error"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"], [267, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 3, 1, "", "cutout"], [268, 2, 1, "", "default_parameters"], [268, 2, 1, "", "energy_center"], [268, 3, 1, "", "evaluate"], [268, 2, 1, "", "evaluation_radius"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 2, 1, "", "map"], [268, 2, 1, "", "name"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "position"], [268, 3, 1, "", "reassign"], [268, 3, 1, "", "slice_by_energy"], [268, 2, 1, "", "spectral_model"], [268, 3, 1, "", "stack"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"], [268, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate"], [269, 2, 1, "", "f0"], [269, 2, 1, "", "f1"], [269, 2, 1, "", "f2"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integral"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "phi_ref"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_phasogram"], [269, 3, 1, "", "read"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "reference_time"], [269, 3, 1, "", "sample_time"], [269, 2, 1, "", "t_ref"], [269, 2, 1, "", "tag"], [269, 3, 1, "", "time_sum"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"], [269, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_geom"], [270, 2, 1, "", "evaluation_bin_size_min"], [270, 2, 1, "", "evaluation_radius"], [270, 2, 1, "", "evaluation_region"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 3, 1, "", "from_position"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integrate_geom"], [270, 2, 1, "", "is_energy_dependent"], [270, 2, 1, "", "lat_0"], [270, 2, 1, "", "lon_0"], [270, 2, 1, "", "map"], [270, 2, 1, "", "map_center"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "phi_0"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "plot_grid"], [270, 3, 1, "", "plot_interactive"], [270, 3, 1, "", "plot_position_error"], [270, 2, 1, "", "position"], [270, 2, 1, "", "position_error"], [270, 2, 1, "", "position_lonlat"], [270, 3, 1, "", "read"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 3, 1, "", "to_region"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"], [270, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[271, 3, 1, "", "__call__"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_error"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 3, 1, "", "from_region_map"], [271, 2, 1, "", "frozen"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "read_xspec_model"], [271, 3, 1, "", "reassign"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[272, 3, 1, "", "__call__"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 3, 1, "", "integral"], [272, 2, 1, "", "is_energy_dependent"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "reference_time"], [272, 3, 1, "", "sample_time"], [272, 3, 1, "", "time_sum"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[279, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[282, 1, 1, "", "CashCountsStatistic"], [283, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [284, 1, 1, "", "WStatCountsStatistic"], [285, 4, 1, "", "cash"], [286, 4, 1, "", "cash_sum_cython"], [287, 4, 1, "", "compute_chisq"], [288, 4, 1, "", "compute_flux_doubling"], [289, 4, 1, "", "compute_fpp"], [290, 4, 1, "", "compute_fvar"], [291, 4, 1, "", "cstat"], [292, 4, 1, "", "discrete_correlation"], [293, 4, 1, "", "f_cash_root_cython"], [294, 4, 1, "", "get_wstat_gof_terms"], [295, 4, 1, "", "get_wstat_mu_bkg"], [296, 4, 1, "", "norm_bounds_cython"], [297, 4, 1, "", "structure_function"], [298, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[282, 3, 1, "", "compute_errn"], [282, 3, 1, "", "compute_errp"], [282, 3, 1, "", "compute_upper_limit"], [282, 2, 1, "", "error"], [282, 3, 1, "", "info_dict"], [282, 2, 1, "", "n_bkg"], [282, 2, 1, "", "n_sig"], [282, 3, 1, "", "n_sig_matching_significance"], [282, 2, 1, "", "p_value"], [282, 2, 1, "", "sqrt_ts"], [282, 2, 1, "", "stat_max"], [282, 2, 1, "", "stat_null"], [282, 3, 1, "", "sum"], [282, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[284, 3, 1, "", "compute_errn"], [284, 3, 1, "", "compute_errp"], [284, 3, 1, "", "compute_upper_limit"], [284, 2, 1, "", "error"], [284, 3, 1, "", "info_dict"], [284, 2, 1, "", "n_bkg"], [284, 2, 1, "", "n_sig"], [284, 3, 1, "", "n_sig_matching_significance"], [284, 2, 1, "", "p_value"], [284, 2, 1, "", "sqrt_ts"], [284, 2, 1, "", "stat_max"], [284, 2, 1, "", "stat_null"], [284, 3, 1, "", "sum"], [284, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[299, 4, 1, "", "hierarchical_clustering"], [300, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[301, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [302, 4, 1, "", "cartesian"], [303, 4, 1, "", "fov_to_sky"], [304, 4, 1, "", "galactic"], [305, 4, 1, "", "motion_since_birth"], [306, 4, 1, "", "polar"], [307, 4, 1, "", "sky_to_fov"], [308, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[309, 1, 1, "", "HDULocation"], [310, 1, 1, "", "LazyFitsData"], [311, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[309, 3, 1, "", "get_hdu"], [309, 3, 1, "", "info"], [309, 3, 1, "", "load"], [309, 3, 1, "", "path"]], "gammapy.utils.integrate": [[312, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[313, 1, 1, "", "ScaledRegularGridInterpolator"], [314, 4, 1, "", "interpolate_profile"], [315, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[313, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[316, 5, 1, "", "BACKEND_DEFAULT"], [317, 5, 1, "", "METHOD_DEFAULT"], [318, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [319, 5, 1, "", "N_JOBS_DEFAULT"], [320, 5, 1, "", "POOL_KWARGS_DEFAULT"], [321, 1, 1, "", "multiprocessing_manager"], [322, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[323, 1, 1, "", "InverseCDFSampler"], [324, 4, 1, "", "draw"], [325, 4, 1, "", "get_random_state"], [326, 4, 1, "", "normalize"], [327, 4, 1, "", "pdf"], [328, 4, 1, "", "sample_powerlaw"], [329, 4, 1, "", "sample_sphere"], [330, 4, 1, "", "sample_sphere_distance"], [331, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[323, 3, 1, "", "sample"], [323, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[332, 4, 1, "", "compound_region_to_regions"], [333, 4, 1, "", "make_concentric_annulus_sky_regions"], [334, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [335, 4, 1, "", "region_to_frame"], [336, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[337, 4, 1, "", "from_yaml"], [338, 4, 1, "", "get_images_paths"], [339, 4, 1, "", "make_path"], [340, 4, 1, "", "read_yaml"], [341, 4, 1, "", "recursive_merge_dicts"], [342, 4, 1, "", "to_yaml"], [343, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[344, 4, 1, "", "hstack_columns"], [345, 4, 1, "", "table_row_to_dict"], [346, 4, 1, "", "table_standardise_units_copy"], [347, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[348, 1, 1, "", "Checker"], [349, 4, 1, "", "assert_quantity_allclose"], [350, 4, 1, "", "assert_skycoord_allclose"], [351, 4, 1, "", "assert_time_allclose"], [352, 4, 1, "", "mpl_plot_check"], [353, 4, 1, "", "requires_data"], [354, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[348, 3, 1, "", "run"]], "gammapy.utils.time": [[355, 4, 1, "", "absolute_time"], [356, 4, 1, "", "time_ref_from_dict"], [357, 4, 1, "", "time_ref_to_dict"], [358, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[359, 4, 1, "", "standardise_unit"], [360, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[361, 1, 1, "", "MapPanelPlotter"], [362, 4, 1, "", "add_colorbar"], [363, 4, 1, "", "annotate_heatmap"], [364, 4, 1, "", "colormap_hess"], [365, 4, 1, "", "colormap_milagro"], [366, 4, 1, "", "plot_contour_line"], [367, 4, 1, "", "plot_distribution"], [368, 4, 1, "", "plot_heatmap"], [369, 4, 1, "", "plot_map_rgb"], [370, 4, 1, "", "plot_npred_signal"], [371, 4, 1, "", "plot_spectrum_datasets_off_regions"], [372, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[361, 3, 1, "", "plot"], [361, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 123, 124, 125, 129, 132, 138, 139, 143, 144, 145, 149, 169, 175, 196, 202, 214, 218, 219, 224, 226, 227, 230, 231, 233, 234, 235, 237, 240, 242, 243, 247, 249, 250, 257, 258, 259, 262, 263, 264, 269, 272, 273, 274, 280, 290, 309, 359, 363, 364, 371, 374, 375, 377, 379, 384, 385, 386, 388, 390, 391, 392, 393, 394, 397, 400, 403, 404, 406, 407, 409, 410, 411, 412, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 493, 496, 497, 503, 504, 505, 506, 509, 511, 516, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 575], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 129, 131, 132, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 169, 172, 173, 177, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 207, 210, 212, 214, 215, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 278, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 299, 300, 319, 323, 330, 331, 351, 362, 364, 365, 369, 371, 374, 375, 377, 378, 381, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 407, 410, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 503, 505, 509, 513, 515, 518, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571, 572, 573, 574], "00": [67, 87, 88, 89, 91, 101, 193, 375, 389, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 460, 461, 463, 464, 466, 467, 469, 470, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 490, 492, 494, 495, 496, 497, 498, 526, 536, 556, 557, 567, 575], "000": [67, 87, 88, 91, 124, 389, 444, 446, 448, 449, 451, 452, 456, 457, 458, 460, 461, 464, 466, 467, 470, 473, 474, 475, 479, 481, 482, 487, 494, 495, 497, 526], "0000": 400, "00000": 139, "000000": 473, "000000000000002": 479, "00000000000001": 451, "00000000000003": 468, "00000000000004": 473, "0000000000016": 86, "0000000000018": 94, "000000000002": 460, "000000000006": 460, "000000000007": 473, "00000000001": 473, "00000000e": [476, 477], "00000001": 86, "0000000e": 477, "00000143": [375, 575], "0000e": [101, 444, 445, 448, 449, 450, 451, 453, 456, 464, 467, 476, 482, 484, 496, 556], "0001": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 365, 458], "00010298": 474, "00015": 475, "000150": 446, "0002": [446, 497], "00020": 446, "0002000": 446, "0003": 458, "00050": 446, "000500": 446, "0006": 446, "00074287037": [94, 461], "000742870370370241": 94, "0008": 473, "0009": 446, "000e": [444, 448, 451, 453, 456, 457, 464, 467, 473, 476, 482, 484, 496, 497, 556], "000true": 446, "001": [50, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 189, 190, 192, 198, 201, 202, 351, 460, 476, 534], "0016288e": 477, "001e": 67, "002018": 487, "0021e": 464, "0025508e": 477, "0028272e": 477, "0029": 399, "0029202684427718766": 495, "002e": [67, 449], "003": [468, 481, 487], "003026327991562108": 457, "0031052863692021915": 495, "0033": 573, "00336861061002e": 470, "003563": 495, "0036925550381217": 451, "00375698": 234, "004": 67, "00422666667": 471, "00449161": 239, "00490": 458, "00490483": 458, "0049409": 486, "005": 473, "00521472221220211": 457, "005909017160171437": 459, "0064830e": 477, "00688029": 234, "007": 473, "0076540e": 477, "008": [473, 572], "008166963876141447": 459, "008891944789387447": 459, "00894": 497, "009": [470, 473], "00931e": 443, "009433226692021113": 459, "00e": [83, 443, 449, 452, 460, 464, 467, 468, 470, 474, 477, 478, 487, 495], "01": [39, 52, 75, 83, 87, 88, 91, 94, 102, 104, 105, 109, 110, 112, 123, 126, 132, 172, 173, 177, 187, 188, 193, 197, 200, 221, 227, 231, 233, 235, 250, 257, 375, 410, 442, 443, 444, 447, 448, 450, 452, 453, 456, 457, 460, 464, 467, 468, 469, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 495, 496, 497, 503, 508, 518, 520, 521, 524, 528, 530, 532, 536, 554, 555, 559, 560, 561, 567, 572, 575], "010": 481, "010e": 67, "011": 481, "01183": 139, "011872336272724": 495, "012": 481, "0122385e": 477, "01235137e": 477, "012733796525585": 483, "0139252e": 477, "014": [85, 102, 105, 109, 110, 169, 449, 456, 473, 478, 495, 496, 520], "0143724": 234, "0143764": 486, "01449": 83, "0145": 480, "01450": [465, 496], "0149044e": 477, "015": 473, "01551196351647377": 234, "0163": 458, "01648855015875024": 571, "01700709977114979": 471, "017442925431194484": 471, "018": 67, "018182745349064267": 457, "0183519e": 477, "01960784313726": 462, "019672": 475, "019899368286133": 457, "01e": [169, 410, 443, 473], "01t00": [87, 91, 94, 193, 375, 452, 460, 575], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 102, 105, 109, 110, 111, 115, 157, 164, 169, 187, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 410, 442, 443, 444, 446, 448, 449, 453, 454, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 473, 476, 477, 478, 479, 480, 481, 482, 485, 487, 492, 495, 496, 497, 498, 518, 520, 521, 528, 529, 530], "020": [457, 473, 475], "020420144596410953": 483, "021": [67, 473], "0212e": 467, "0225e": 473, "02288737": 234, "023": 473, "023472814714293713": 495, "024": 473, "02432": 473, "024715584699834": 495, "024e": 497, "025": [473, 487], "0251191207999763": 458, "0257e": 464, "025e": 139, "026": [53, 67, 473], "02653": [452, 458], "026891": 473, "026914": 473, "027": 67, "028854": 480, "029e": [444, 473], "02e": [83, 470], "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 199, 387, 402, 442, 443, 444, 446, 457, 458, 460, 463, 467, 473, 477, 479, 481, 483, 484, 485, 489, 490, 496, 531], "03034567e": 475, "030859": 495, "032": 473, "0322": 67, "0322775e": 477, "033": [67, 473], "033176650892097": 96, "03383": 486, "034": [469, 572], "0344": 67, "03447394e": 475, "03493": 475, "034e": 446, "035": 475, "0354700e": 477, "0356": 443, "0356551": 443, "036": 67, "036e": 473, "037": [442, 463, 481], "03745318352059925": 565, "0375512e": 477, "0376213e": 477, "03893": 475, "039": [456, 457, 475], "039215686274545": 462, "03921700077803329": 457, "0395135e": 477, "03978226e": 482, "04": [30, 67, 94, 442, 447, 449, 451, 452, 454, 457, 460, 467, 468, 473, 477, 479, 482, 485, 487], "040": [442, 447, 448], "040286": 449, "040e": 452, "041": [442, 485, 487], "0414": 452, "0415": 497, "041882": 473, "042": 473, "0423761": 443, "042e": 473, "043": 67, "043140": 566, "04357249662280083": 448, "04454": 487, "0454683": 486, "046": 67, "0462798e": 477, "047": 67, "0473174": 239, "0474750e": 477, "047480": 482, "048": [456, 487], "0482342e": 477, "04897634344908595": 96, "048e": 67, "049": [446, 456], "049288": 562, "04939e": 443, "049676": 473, "04d": 460, "04e": 478, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 121, 122, 124, 131, 200, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 333, 402, 442, 443, 444, 445, 446, 447, 448, 452, 455, 456, 457, 458, 461, 464, 466, 472, 473, 474, 476, 477, 478, 481, 484, 486, 488, 490, 495, 496, 523, 528], "050": 481, "05019": 139, "0503641": 443, "0505949e": 477, "05075": 477, "0508075688763": 473, "05088486522436142": 448, "050e": 452, "051": [19, 20, 26, 481], "051995": 544, "051c": [17, 21, 22, 24, 25, 27], "052": 473, "0520119e": 477, "0521419985089": 459, "05227": 473, "053": 456, "053212009682775": 483, "054833602905273e": 457, "0548e": 457, "054e": 67, "055": 473, "055e": 446, "0560": 497, "056130": 473, "05628243": 497, "05637e": 443, "05673": 497, "057": 473, "05762513693893088": 457, "058": 67, "058201": 473, "05853": 452, "058823529411775": 462, "059": 67, "05901956e": 477, "0598579": 443, "05deg": 200, "06": [143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 200, 201, 202, 442, 456, 457, 458, 463, 469, 473, 474, 476, 477, 478, 479, 485, 487, 490, 557], "061": 497, "062": [442, 447, 460, 481, 482, 487], "0625": 482, "0628": 497, "063": 67, "0631757e": 477, "06334488877417636": 483, "064108e": 473, "06430": 458, "0643032": 458, "06450": 139, "065071": 473, "065119": 497, "06549": 139, "066": 448, "066442": 473, "067": 452, "068245": 473, "0689": 476, "068e": 446, "069": 67, "07": [102, 169, 349, 389, 410, 442, 446, 447, 449, 456, 458, 466, 468, 469, 470, 473, 474, 477, 479, 481, 487, 490, 498, 530], "07022": 139, "070483": 473, "0711412": 443, "072": 67, "073": 67, "0739282e": 477, "074": [473, 487], "07454639": 458, "07455": 458, "0746": 497, "0748": [473, 497], "075": 67, "07512322002655547": 457, "0756e": 443, "076": 497, "077": 443, "078": 446, "07843137254903": 462, "07871368968": 474, "07934317e": 475, "07943648658692837": 483, "07944657408": 473, "079464e": 497, "0799109224230051": 483, "07e": 468, "08": [86, 369, 410, 450, 451, 453, 454, 456, 457, 464, 473, 474, 476, 478, 482, 487, 495, 496, 528, 531, 534, 537], "0800792e": 477, "08075": 477, "08081469527619482": 451, "08088": 175, "080e": 452, "0811551760882139": 483, "08142": 472, "08191603310406206": 483, "08192": 458, "08192101": 458, "082": 473, "082691868487906": 471, "08269984": 497, "082e": 124, "083": [67, 442, 463, 464, 473], "08328557573258877": 483, "0833333358168602": 448, "0833333432674408": 448, "08342": 139, "08388624433428049": 483, "084": 67, "08447355125099419": 483, "0845515": 443, "085": 473, "08529426": 97, "0855013383552432": 483, "0859117235629056e": 470, "08675": 474, "086e": 473, "087": 497, "08795162606984375": 483, "087e": 473, "088742": 473, "08880368117243051": 483, "08894569035619496": 483, "089": 134, "0894640e": 477, "0897868126630783": 483, "089881": 473, "08e": [464, 481], "09": [33, 124, 169, 442, 444, 449, 452, 453, 454, 456, 473, 474, 477, 478, 495, 496, 497, 527, 529, 535, 573], "0902437e": 477, "0907128e": 477, "0910": [248, 249], "0914": [52, 53], "093": [442, 464, 490], "093477": 458, "09348": 458, "09375": 470, "09426693227142095": 483, "094834": 473, "095232": 473, "09562941": 497, "095707": 497, "096": 449, "0960": 497, "09607": 497, "09610314778983592": 483, "09623312838375568": 483, "09740295372903346": 483, "097e": 67, "09805": 139, "098903": 473, "09907043184188653": 483, "099379": 545, "09e": 478, "0b100": 319, "0d": [126, 462, 474, 532], "0e": [397, 449, 451, 452, 453, 457, 460, 464, 467, 470, 474, 475, 477, 479, 481, 482, 487, 495, 527, 528, 529, 530, 532, 533, 534, 535, 538, 539, 541, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "0edjg5mb": 470, "0f": [476, 487, 497], "0m9lsql2": 470, "0rc": 403, "0rc1": 403, "0true": 458, "0wptv43": 470, "0x105fd0cf8": 374, "0x105fe3b70": 374, "0x129602550": 374, "0x7f61e56d66d0": 474, "0x7f61e7aec130": 474, "0x7f61e7c23ee0": 482, "0x7f61f9234340": 462, "0x7f61f9234490": 462, "0x7f61f93c5700": 486, "0x7f61f943c550": 483, "0x7f61f943cd90": 483, "0x7f61f94d2640": 483, "0x7f61f94d2e50": 483, "0x7f61f9861b80": 486, "0x7f61f98844f0": 486, "0x7f61f9a91130": 484, "0x7f61f9abe550": 471, "0x7f61f9ccef70": 486, "0x7f61f9d17c40": 474, "0x7f622e94f490": 556, "0x7f62301bcb50": 474, "0y3f5pko": 470, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 111, 114, 115, 116, 117, 121, 123, 124, 125, 126, 127, 129, 130, 132, 134, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 164, 169, 172, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 207, 210, 212, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 245, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 288, 289, 299, 300, 312, 313, 319, 320, 321, 330, 331, 333, 334, 359, 361, 364, 365, 369, 371, 374, 375, 377, 378, 381, 382, 384, 385, 386, 388, 389, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 407, 410, 411, 414, 415, 417, 418, 422, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 492, 495, 496, 497, 499, 503, 504, 505, 508, 509, 511, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 572, 573, 574], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 86, 87, 88, 89, 91, 102, 103, 104, 105, 108, 109, 110, 111, 115, 117, 121, 122, 123, 124, 125, 126, 130, 131, 132, 138, 139, 140, 143, 144, 146, 148, 150, 156, 157, 158, 159, 160, 162, 169, 175, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 207, 210, 212, 221, 224, 236, 237, 239, 240, 262, 274, 283, 289, 319, 321, 331, 362, 367, 369, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 396, 397, 398, 402, 404, 410, 415, 417, 428, 430, 433, 437, 439, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 495, 496, 497, 499, 505, 509, 515, 518, 520, 521, 522, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 572, 575], "100": [19, 20, 26, 46, 47, 74, 94, 124, 132, 148, 149, 159, 200, 202, 214, 215, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 274, 276, 331, 374, 375, 377, 382, 393, 413, 442, 443, 445, 448, 451, 456, 457, 458, 460, 461, 462, 464, 468, 471, 472, 473, 474, 475, 477, 478, 479, 482, 484, 486, 487, 488, 497, 501, 503, 504, 505, 509, 520, 523, 524, 527, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 567, 572], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 190, 195, 374, 377, 446, 473, 474, 477, 484, 487, 497, 523], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 103, 108, 148, 159, 162, 172, 473, 487], "100000": [74, 473, 495], "1000000": [51, 52, 54, 473, 556], "10000000": 556, "100000000000": 475, "1000e": 484, "1001": [432, 460, 461], "1002": 432, "10041": 138, "10045": [65, 264, 555], "10049": 443, "1006": 432, "101": [418, 468, 473], "1012": 472, "1013": 433, "1014": 433, "101430": 468, "10172": 482, "102": [169, 449, 452, 572, 573], "1021": 433, "1025": 433, "1026": 433, "10262943822890519": [96, 483], "1027": 433, "102877228833871": 483, "1029": 433, "10295505": 497, "102e": 473, "103": [138, 413, 436], "103000133": 488, "1031": 433, "1032": 433, "1032531953505502": 495, "1034": 497, "1035": 433, "1035002116788955": 449, "1036": 452, "1038": 433, "104": 458, "1040": 433, "10409": 458, "10409446": 458, "10416667": 470, "1043": 433, "104317": [102, 474, 481], "1044": 452, "1045": 433, "1046": 392, "10470702368766069": 483, "10477": 497, "105": [82, 489], "1051": 433, "1052": 473, "1053": 433, "1054": 433, "1054498": 134, "1057": 433, "10592": 575, "105953": 497, "105e": 452, "1061971e": 477, "106217": 83, "1062535e": 477, "1064": 473, "1065": 433, "1067": 433, "1069": 433, "107": [442, 443, 479, 567], "1070": [433, 497], "1072542e": 477, "1073": 433, "10752883769757363": 483, "1076": 433, "1078": 433, "107e": [452, 473], "108": [430, 442, 498], "108034597491956e": 482, "108043": 456, "1082": 433, "1083": 433, "1084": 433, "1085": 433, "1085000": 456, "1086": 289, "1087": 433, "1088": 433, "1089": 433, "109": [413, 442, 444, 479, 567], "1090": 433, "1092": [433, 452], "1093": [433, 452], "1098": 433, "1099306e": 477, "109e": 458, "10d": 462, "10e": [169, 473, 477], "10k": 190, "10th": [401, 412], "11": [67, 87, 91, 94, 104, 123, 124, 125, 129, 130, 210, 333, 378, 381, 383, 391, 398, 402, 413, 414, 435, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 478, 480, 481, 484, 485, 487, 495, 496, 497, 520, 522, 540, 542, 552, 573], "110": [442, 473, 487, 567], "1100": [433, 448], "110000": [474, 478], "1102": 433, "1102e": 445, "1103": 433, "110380": [83, 390, 453, 456, 458, 486], "1104": 433, "1105": 433, "1107": 433, "1108": 433, "111": [362, 381, 433, 456, 473], "1110": 433, "1111": [140, 473, 497], "111140": [390, 453, 456, 458], "111159": [390, 453, 456, 458, 486], "11132": 64, "1115": 433, "111507416": 468, "111630": [89, 468, 486], "111797": 473, "11184": [65, 263, 554], "112": [443, 448], "11208": 65, "11220184543": 475, "1127": 433, "11291820875721864": 483, "113": [442, 451, 497, 567], "1131": 382, "1133": 433, "1134": 433, "1136": 433, "114416978060046": 467, "115": 67, "1150": 433, "11517": 497, "11553325504064559": [96, 483], "11587179071752986": 96, "116": [413, 444, 445], "1160": 473, "11610": 497, "1162": 433, "1162290917256776e": 465, "1166": 433, "1167": [381, 388], "1169": 433, "116e": 67, "117": [413, 537], "1170": 433, "1172": 388, "1173775": 473, "1176": 433, "117877e": 473, "1179": 433, "118": [138, 456], "1183": 433, "118355": 473, "11839": 139, "119": [444, 452, 456], "1190": 433, "119432": 443, "1195": 433, "119e": 448, "11af4c": 413, "11e": [454, 473], "12": [17, 38, 42, 67, 86, 87, 91, 102, 105, 112, 124, 139, 159, 162, 188, 189, 190, 192, 198, 201, 202, 214, 218, 224, 226, 230, 237, 247, 249, 259, 262, 263, 264, 274, 378, 380, 381, 382, 383, 385, 386, 391, 394, 397, 413, 417, 418, 419, 431, 436, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 465, 466, 467, 470, 471, 473, 474, 475, 476, 479, 481, 482, 484, 487, 495, 497, 509, 520, 523, 524, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 541, 544, 545, 548, 549, 550, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566], "120": [53, 389, 450, 487, 531], "120000": 453, "120154": 473, "1204": 433, "1207": 433, "120e": [67, 497], "121": [67, 442, 458, 460, 463, 481], "1210": 433, "1211": [433, 467, 473], "121241": 456, "12148": 452, "1215": 433, "1216": 445, "12186": 497, "1219": 473, "122": [67, 138, 413, 442, 446, 481, 567], "1220": 433, "1226": 433, "1227": 433, "12276676166802643": 483, "122e": 457, "123": [87, 91, 386, 452], "1231": 434, "1234": 88, "123456789": [193, 375, 575], "1235": 433, "1237": 382, "1238": 433, "123890826": 86, "123892513": 86, "1239": 379, "123944": 83, "123e": 452, "124": [138, 386, 452, 473, 481], "1240": 433, "12423250e": 477, "1243": 497, "1244969200533408": 300, "1246": 433, "12493874": 477, "124e": 67, "125": [67, 124, 138, 448, 458, 479, 487, 497, 498, 572], "12518": 457, "12525306": 471, "12546": 65, "1258925411": 475, "126": [67, 446, 473, 476], "12611": 139, "1264500e": 477, "126585": 443, "1266": 433, "1268": 433, "12688": 83, "1269263e": 477, "12697": 457, "127": 452, "12704": [138, 139], "1271v": 290, "1274e": 484, "12751": 443, "1277": 380, "1278": 381, "12794487": 482, "128": [413, 468, 499], "12809": [102, 474, 481], "1281": 433, "12816": 497, "12856": 487, "1287": 433, "1289": 433, "128e": 446, "129": [439, 496], "1290": 433, "1291": 433, "1294": 433, "1299": 473, "12nan5": 446, "12r_": 53, "12th": [399, 412], "13": [67, 101, 124, 139, 199, 299, 378, 379, 383, 388, 393, 402, 418, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 495, 496, 497, 505, 537, 549, 573], "130": 520, "1300": 433, "1301v": 38, "13030": 497, "1305": 433, "13061": 482, "131": 446, "1310": 497, "1312": 433, "13133": 497, "13152": 458, "1316": 433, "1317": 434, "1318": 433, "1319": [94, 433], "13197": 456, "132": 452, "13226": 497, "1323e": 457, "132472": 458, "132e": 448, "133": 139, "1331": 434, "1334": 434, "1337": 434, "1339": 434, "133e": 446, "134": [139, 449, 452, 458], "1341": 434, "1342a": 149, "1343": 434, "1344": 473, "1345": 434, "1346": 434, "1347": 434, "13499879586502125": 459, "135": [38, 101, 139, 446, 462, 473, 476], "13500212963": 473, "1351e": 473, "1354": 434, "135498046875": 448, "1357": 434, "1359316": 497, "135e": 124, "136": 473, "1360": 434, "1361": 473, "1362": 434, "1367": 434, "1369": [382, 434], "137": [139, 452, 459], "1372": 434, "137254901960785": 462, "1373": 434, "1374": 434, "137521287529426e": 495, "1376": 434, "1376407570489014e": 465, "1377": 434, "1378": 434, "1379190199428797": 300, "137990": 473, "138": [413, 446, 460, 497], "1381": 434, "1386": 434, "1387": 434, "138e": 458, "139": [448, 452, 487], "13911": 497, "1393881668086242e": 470, "1394": 543, "13944023e": 475, "1395": 434, "1396": [374, 449], "13960": 497, "1397": 434, "1397412321592923": 483, "13e": 474, "13nan6": 446, "13th": 412, "14": [28, 65, 67, 86, 375, 378, 383, 386, 391, 393, 394, 432, 443, 446, 448, 449, 452, 456, 468, 470, 473, 474, 475, 476, 480, 481, 482, 496, 497, 547, 548, 572], "140": 488, "1401": 434, "140584": 454, "1406": 434, "14079": 138, "1408": [434, 497], "141": [298, 458, 473], "1411180": 456, "1412": 434, "14121": 458, "1412536400000000": 497, "14149953611195087": [96, 483], "14150": 458, "1419": [382, 435], "141945": 443, "142": [67, 413, 446, 473, 497], "14201": 138, "1421": 434, "14210": 446, "1426": 434, "142e": 473, "1432": 434, "1433": 434, "1435": 434, "1438": 172, "1438465e": 477, "1439110308062257": 483, "144": [446, 481, 497], "14419991": 97, "1442739329466746e": 482, "1443": 434, "1444": 434, "1445": 388, "14457": 497, "1446": 434, "1447": 434, "145": 473, "1451": 389, "14531053887243": 458, "1456": 434, "1456479e": 477, "146": 497, "14610": 575, "146472": 473, "1467": 140, "147": [432, 442, 469, 470, 473, 479], "1470": [434, 497], "1474": 434, "1475": 434, "1476": 434, "14773": 487, "147e": 473, "148": 452, "1482": 473, "1485314": 97, "1486415e": 477, "1489": [434, 458], "149": [448, 478, 481], "1492": [434, 467], "1494": 458, "149445429667434": 459, "1495": 434, "1499472780781963": 300, "149e": 473, "14e": [453, 472], "14msts37sst": [460, 461, 486], "14nan3": 446, "14nan5": 446, "14th": [398, 401, 412], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 146, 147, 148, 149, 150, 151, 156, 157, 158, 160, 199, 364, 365, 369, 383, 391, 413, 417, 422, 427, 430, 431, 432, 434, 442, 443, 448, 452, 454, 456, 457, 458, 460, 461, 462, 463, 464, 468, 470, 471, 473, 474, 475, 476, 478, 479, 481, 482, 485, 487, 495, 497, 498, 520, 528, 539, 545, 554], "150": [130, 138, 139, 413, 446, 448, 460, 461, 479, 497], "1505": 434, "15076259": 97, "151": [413, 481], "1510": 134, "1510240e": 477, "15140": 452, "1515": 434, "15154854": 97, "1517": 434, "152": [452, 458], "1521": 458, "1522e": 484, "1523": 460, "15246": 460, "152477": 487, "1527": 434, "153": [442, 473, 485], "1530": 474, "15319": 460, "153600": 474, "154": [413, 443, 473], "1543": 434, "154e": 458, "155": 413, "15518": 497, "1552": 454, "1553": [473, 497], "1554": 434, "1554106e": 477, "1556": [434, 473, 497], "1556008e": 477, "1558": 434, "156": [413, 448, 449, 452, 458, 475, 481], "1562": 434, "15621": 497, "1564": 434, "156525": 473, "1567629e": 477, "1568": 434, "15686274509804": 462, "157": [413, 442, 497, 536], "1573": 434, "1576": 434, "158": [139, 443, 449, 456], "1582": 434, "15848931924": 475, "1586": 94, "15899": 452, "1594": 434, "1597188415303": 467, "1597317": 97, "15990": 139, "159t": 52, "15h14m00": 473, "15nan8": 446, "16": [16, 24, 53, 67, 94, 109, 110, 188, 378, 382, 391, 394, 395, 418, 433, 438, 440, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 522, 551, 553, 564, 572, 573], "160": [31, 124, 413, 422, 462, 481], "1600": 461, "1600e": 444, "1605": 434, "16056": 452, "1606": 434, "1607": 472, "160e": 67, "161": [138, 382, 448, 458, 473], "1610e": [444, 473], "161250": 464, "1613279491744304": 483, "1616": 434, "1618850e": 477, "1619e": 101, "162": [67, 442, 463, 536], "16227766": 479, "1622776601683795": [478, 479, 495], "16240": 496, "1626e": 453, "16287": 497, "1629219e": 477, "163": [462, 572], "1630": [434, 497], "16303": 458, "16303044": 458, "1634": 434, "164": 473, "1642": 443, "164639": 542, "165": 481, "1650": 497, "16506": 443, "16511": 458, "16511148": 458, "1658": 434, "165e": [452, 467], "166": [413, 458, 473], "1660": 434, "166015625": 445, "1661916367760008e": 470, "1665478": 97, "166871893629602e": 470, "167": [413, 458, 464], "167219": 473, "1675": 434, "1677": 467, "168": [473, 474, 497], "1681": 434, "1685": 434, "1686": 473, "1687": 86, "168702": 443, "169": 458, "169054": 464, "1691": 443, "1695": 434, "1696": 434, "1697": 434, "1698": 448, "169871": 464, "16th": 412, "17": [20, 21, 40, 67, 86, 385, 388, 391, 422, 439, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 544, 546, 550, 573], "170": 445, "17016482e": 476, "1702": 434, "17020": 452, "1710": 435, "1711": 434, "1713": 445, "1715": 388, "1717": 497, "171749": 497, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 273, "172": 462, "17229679": 97, "173": [442, 473, 536], "1731": [434, 481], "1732": 473, "17320": 473, "1736": 452, "1737799900000000": 497, "174": [448, 467], "1742": 67, "17445": 497, "1746": [434, 497], "1748": [434, 481], "174e": 467, "1750": 434, "1751": 434, "17511": 139, "1753": 497, "1755": 434, "1756": 449, "1759": 434, "175e": 473, "176": [139, 413, 468, 473], "1760": 434, "1761": 434, "1762": 499, "1763": [435, 473], "1764": [434, 458], "176470588235294": 462, "1766": 435, "1768896e": 477, "177": [413, 487, 488], "17776": 443, "1778279410": 475, "177e": 473, "178": 433, "178442": 67, "1785": [434, 443], "179": [442, 536], "1791": 434, "179475": 239, "1799": 434, "17a": [60, 473], "17e": 481, "17g": 50, "17th": 428, "18": [11, 87, 91, 138, 199, 378, 393, 399, 419, 425, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 538, 556], "180": [388, 406, 408, 413, 473, 479], "1800": [434, 461, 479, 486], "180000": [460, 461, 486], "1804": 473, "180458": 456, "18046952655570045": 300, "1805": 388, "1807": 435, "1808": [434, 473, 497], "181": 452, "1811": 451, "1812": 434, "1813": 473, "1818": 434, "1821": 434, "1822": 434, "1825": 473, "18257": 452, "183": [442, 448, 536], "1830e": 448, "183139597": 86, "1834": 445, "1835": 94, "1836": 435, "1836544903987521": 483, "1837": 435, "18385658": 458, "18386": 458, "18392464": 511, "184": [86, 94, 427, 431, 442, 452, 454, 455, 456, 460, 466, 470, 480, 481], "18400002": 466, "1841": 383, "1845": 435, "1846": 435, "18465": 497, "1849": 435, "184989894219835": 471, "185": 480, "1854": [435, 473], "1855": 435, "1857": 435, "1859": 435, "186": [426, 458, 473], "1861": 435, "1862": 435, "186484131475074": 331, "1866": 478, "186643": 497, "187": [419, 426, 458], "1871": 435, "1877": 384, "188": [426, 443, 473], "1883": 435, "1884": 435, "18842984749525210": 458, "1888": 435, "188e": 446, "189": [448, 477], "1890": 435, "1891": 435, "18921591": 477, "1893": 435, "1893e": [444, 473], "1894": 435, "1895": 435, "1896e": 444, "1898": [435, 467], "18988": 497, "1899070e": 477, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 199, 378, 390, 392, 394, 413, 421, 422, 424, 436, 442, 449, 452, 462, 467, 468, 469, 470, 471, 473, 474, 479, 481, 541, 543], "190": 473, "1902": [65, 264, 555], "1903": 435, "1904": 435, "1905": 457, "1908": 435, "1909": 435, "190e": 448, "191": [138, 426], "1910": 175, "1912": 435, "1917": 497, "1918": 435, "1919": 435, "192": 139, "1920": 497, "1921": 435, "19214093": 97, "1922": 435, "1926": 435, "1926520e": 477, "1927": 435, "1928": 473, "1929": 435, "193": [452, 467], "1930": 435, "1933": 435, "1934": 435, "19354": 458, "1936925": 97, "1937": [435, 473], "193e": 449, "194": [426, 452], "1943186": 97, "1947565": 97, "1949": 435, "195": [139, 234, 448], "1950rspsa": 52, "1951": 414, "1953830": 97, "1955810e": 477, "1958e": 476, "196": [67, 442, 443, 464, 481, 567], "1960784313725492": 462, "1961": 140, "1962": 414, "1963": 473, "19644": 487, "196485": 454, "1965tralm": 21, "1966": 414, "1969": 414, "196991563774588": 274, "197": [67, 458, 487], "1971": 385, "19736017641361556": 459, "1975": 414, "1976572e": 477, "1978": 473, "1979": [285, 291, 414, 570], "1979892": 458, "1980": 473, "1982": 37, "1983": 570, "1986": 386, "1986027": 497, "1987": 458, "19879005": 172, "1988": [133, 292, 414], "1988apj": [133, 292], "1989": 414, "199": [458, 481], "1990": [37, 414], "1990apj": [36, 37], "1991": 414, "1991mnra": 22, "19932878": 477, "1994": [414, 570], "1994a": [52, 53], "1995": [413, 414], "1995a": 283, "1995apj": 17, "1996": [27, 452, 471, 570], "1996mnra": 27, "1997": 495, "1997apj": 25, "1998": [87, 91, 414, 570], "1998apj": 28, "1999": [53, 193, 375, 575], "19991": 495, "199999809265137": 473, "19999999999999998": 451, "1999apj": 53, "19e": 478, "19th": 412, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 109, 110, 126, 147, 148, 157, 171, 188, 190, 326, 367, 380, 384, 385, 387, 388, 389, 390, 393, 394, 395, 406, 416, 418, 419, 420, 421, 425, 427, 430, 434, 436, 437, 440, 442, 443, 445, 446, 447, 448, 450, 452, 456, 463, 467, 470, 474, 476, 478, 480, 482, 483, 484, 486, 487, 495, 507, 509, 511, 524, 570], "1dc": [82, 83, 89, 102, 105, 109, 110, 114, 116, 117, 121, 138, 139, 144, 148, 149, 150, 159, 362, 367, 369, 382, 384, 390, 394, 415, 443, 451, 453, 456, 458, 464, 467, 468, 474, 475, 477, 481, 509], "1deg": 200, "1e": [19, 20, 26, 86, 100, 129, 130, 132, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 240, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 274, 285, 291, 333, 349, 351, 374, 385, 444, 446, 448, 450, 452, 454, 456, 458, 460, 461, 464, 465, 467, 468, 473, 476, 482, 484, 487, 488, 505, 509, 513, 537, 538, 539, 541, 544, 545, 549, 550, 552, 553, 554, 555], "1e0": 503, "1e10": [51, 149], "1e12": [503, 513], "1e2": [446, 503, 505], "1e3": [487, 513], "1e30": 547, "1e4": [476, 487, 488], "1e40": 504, "1e5": [450, 487, 505, 523, 524], "1e51": 52, "1e6": [45, 487, 501, 556], "1e7": [126, 556], "1f": 449, "1fhl": [419, 432], "1fhl_name": 71, "1h": 159, "1k": [102, 109], "1kpc": 505, "1lhaaso": [57, 70, 440, 473], "1lhaaso_catalog": 57, "1rc1": 403, "1tev": [52, 53, 130, 461], "1u5vcgw_": 470, "1u7aakov": 482, "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 139, 141, 142, 146, 147, 148, 149, 151, 157, 159, 162, 169, 172, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 207, 210, 211, 213, 214, 218, 222, 224, 226, 230, 232, 233, 237, 240, 247, 248, 249, 255, 256, 258, 259, 262, 263, 264, 269, 273, 274, 280, 282, 283, 284, 285, 290, 291, 297, 299, 319, 321, 359, 362, 367, 369, 371, 374, 375, 378, 379, 383, 385, 386, 388, 389, 390, 391, 394, 397, 398, 399, 400, 401, 403, 406, 408, 410, 413, 414, 415, 416, 417, 418, 425, 430, 431, 432, 433, 434, 435, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 495, 496, 497, 505, 508, 509, 511, 516, 517, 518, 520, 521, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 574], "20": [16, 38, 83, 87, 89, 91, 102, 105, 109, 110, 150, 151, 156, 158, 160, 169, 189, 190, 192, 198, 201, 202, 207, 283, 299, 375, 378, 379, 380, 382, 387, 389, 392, 394, 399, 436, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 499, 518, 520, 521, 522, 528, 529, 530, 533, 534, 543, 546, 551, 556, 557, 560, 565, 572], "200": [52, 87, 91, 132, 200, 398, 426, 448, 449, 452, 458, 462, 464, 473, 479, 482, 497, 572], "2000": [88, 102, 105, 109, 110, 126, 227, 231, 233, 235, 250, 257, 414, 460, 461, 462, 478, 487, 497, 570], "2000000": 456, "20000000000000004": 451, "20009124": 477, "2000apj": 274, "2000e": 482, "2001": [94, 414, 452, 570], "20016447648031e": 470, "2002": [87, 91, 289, 471], "2003": [290, 471], "2003mnra": 290, "2004": [86, 94, 471, 489], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 570], "200503": 443, "2005a": 473, "2006": [31, 33, 389, 452, 459, 466, 470], "200638": 497, "2006a": 274, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 117], "2007": [392, 570], "20072608": 477, "2008": [38, 86, 222, 271, 444, 487, 499, 537], "2008aj": 38, "2009": [132, 293, 415, 452, 570], "20097159": 477, "2009851": 477, "20099855": 477, "201": [52, 479], "2010": [126, 149, 222, 239, 297, 375, 537, 570, 575], "2010a": [239, 274], "2010mnra": 149, "2011": [222, 444, 499, 537], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 415, 570], "2013": [101, 134, 394, 400, 404, 413, 471], "20136": [82, 300, 489], "20137": [300, 489], "2013aph": 273, "2013apj": 60, "2014": [140, 412, 499], "2015": [52, 86, 388, 391, 412, 487], "20151": 300, "2015apj": 61, "2015jheap": 274, "2016": [26, 388, 391, 412, 415, 471, 478, 486], "2016apj": 58, "2017": [222, 379, 381, 391, 394, 410, 412, 415, 458, 486, 537], "2017apj": [59, 62], "2017icrc": 486, "2018": [52, 379, 380, 381, 382, 383, 384, 385, 389, 391, 393, 394, 412, 439, 486, 489, 570], "2019": [381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 412, 434, 435, 459, 570], "202": 458, "2020": [199, 383, 394, 395, 396, 397, 398, 412, 459, 460, 467, 479, 559, 560, 561], "2021": [89, 222, 396, 398, 412, 439, 482, 486, 537], "2021345e": 477, "2022": [399, 400, 412, 415, 488], "2023": [386, 401, 402, 412, 415], "2023arxiv230517030c": 57, "2024": [104, 123, 411, 412, 449, 453, 454, 456, 482, 486, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "2024e": 496, "2026": [386, 415], "2028": 415, "2030": [386, 415], "2031": 415, "20326": [299, 445], "20327": [299, 445], "2033": 415, "20339": 299, "2034": 415, "20343": 299, "20344": 299, "20345": 299, "20346": 299, "20349": 445, "2035": [122, 124, 415], "20350": 445, "2036": [122, 124], "2037": 415, "20372": 486, "2038": 415, "2039": 415, "20396": 445, "20397": 445, "204": 138, "2040469e": 477, "2041222e": 477, "20421": 445, "20422": 445, "2045": 386, "2046": 415, "2049": [415, 473, 497], "205": [426, 442, 458, 474, 479, 485], "2050": 415, "20508075688775": 473, "2051": 415, "20517": 445, "20518": 445, "20519": 445, "205192": 473, "20521": 445, "2053315944536949e": 486, "205357": 473, "2054": 415, "20559": 497, "2058705e": 477, "205e": 467, "206": [442, 473, 536], "2061": 473, "2062580e": 477, "2064": 415, "2064335": 97, "2065": 415, "2066": 415, "2068682e": 477, "2069": 415, "207": [442, 458, 462, 481, 557], "2071": [386, 415], "2075": 402, "207520865": 466, "207521165": 470, "207521465": 466, "207521627": 470, "2076": 415, "2077": 415, "2078": 467, "2079930e": 477, "207e": 452, "208": 60, "2085": 415, "2089": [388, 417], "20898": 445, "20899": 445, "209": 458, "20900": 445, "2093": 415, "2095": 458, "2097": [415, 443, 451, 453, 456, 458, 464, 467, 486], "2097e": 448, "2098": 415, "20challeng": 486, "20data": 486, "20dataset": 486, "20deg": [460, 461], "20document": 486, "20e": 477, "20scienc": 486, "20th": 400, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 126, 144, 377, 378, 422, 428, 437, 442, 443, 444, 447, 452, 454, 458, 466, 469, 470, 472, 473, 475, 477, 479, 497, 524, 561, 563, 564, 566, 572], "210": [426, 442, 467, 473, 557], "2103": 473, "2104": 416, "2104353e": 477, "2106": 416, "2108": 416, "211": [473, 474], "2111": 416, "2112": [416, 496], "211256": 456, "21134890398": 475, "2114": 416, "2115": 416, "211770556360534": 468, "2118": 416, "2119": 416, "211e": 473, "212": [67, 426, 448, 473], "2121": 416, "2121164e": 477, "2122266620647": 467, "2123": 416, "21236e": 443, "2124": 416, "2126": 416, "2128": 416, "2129": [388, 417], "213": 450, "2130": 416, "2131": [416, 473], "2132": 416, "21325": 487, "2133": 416, "2136": [387, 418], "2139": 416, "214": [446, 452], "2140": 416, "2141": 416, "2142": 416, "2145": 416, "2146": 416, "21464892": 497, "214e": 448, "215": [67, 426, 440, 473], "21500000000003": 531, "2151": 416, "2152": 416, "21525804550772332": 459, "2153": [416, 473], "2154": [416, 473], "2155": [420, 444, 466, 467, 470, 471, 473, 483, 497, 537], "215686274509824": 462, "2157": 416, "2159e": 101, "215e": 473, "216": [234, 448, 479, 481, 566], "2160": 416, "2162670e": 477, "2163": 416, "2164425e": 477, "2166": 416, "2169": 416, "217": [448, 473], "2171": 416, "21731921e": 479, "21733761e": 479, "21735587e": 479, "218": 61, "2190": 392, "219026": 456, "2192": 417, "2197": 458, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 102, 104, 105, 109, 110, 123, 132, 164, 169, 172, 187, 188, 197, 200, 378, 411, 412, 425, 448, 449, 450, 451, 452, 457, 465, 467, 470, 473, 474, 478, 479, 480, 488, 489, 490, 495, 496, 497, 508, 515, 518, 520, 521, 524, 558, 559, 562], "220": [442, 473, 481, 557, 572, 573], "2200": 417, "2201": [65, 263, 473, 497, 554], "2202e": 497, "2204": 417, "2206": 417, "220e": 473, "221": [388, 426], "22149": 452, "2217": 417, "2217412e": 477, "2218": [391, 418], "2219": [390, 418], "222": [58, 473, 481], "2221": 473, "22245374e": 124, "2227134679628": 467, "22271346796282": 467, "22271346796283": 467, "2229": [387, 417], "223": 481, "2230": 417, "2231": 473, "2235": 417, "2237": [417, 497], "2238": 417, "2239": 417, "2240": 417, "2243": 417, "2244": 417, "224436": 497, "225": [96, 299, 300, 398, 426, 467, 473], "2250": 417, "22500": 454, "2254": 417, "2255": [392, 483], "225575051666": 473, "2255890": [466, 470, 483], "2257": 417, "2259": 417, "226": [442, 458, 487, 536, 557], "22608": 474, "2262": 417, "22635140877790516": 476, "2264": [386, 417], "22646133647326874": 476, "2264827111476982": 476, "22648881839710966": 476, "2265163003209506": 476, "22662622801631419": 476, "227": [442, 557], "2270": 391, "2272": 417, "2274": [393, 418, 443], "2276": 417, "2277": 417, "2278": 417, "2278975306934438": 476, "2279": [391, 418], "227e": 473, "228": [285, 291, 382, 388, 449, 454, 473, 478, 489], "2287": 417, "2289": 417, "229": [67, 442, 473, 557], "2290": 393, "2292": 418, "2294": 417, "2296": 417, "2297": 417, "22974080e": 487, "2298": 417, "22e": 478, "22nd": 412, "22t11": [449, 454, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "22t12": [453, 456, 482], "23": [77, 94, 172, 374, 378, 400, 412, 436, 445, 448, 450, 452, 457, 467, 470, 473, 476, 479, 481, 483, 497, 520], "230": [426, 452], "2300": 417, "2304": 392, "2305": 417, "230542e": 473, "2307": [64, 65], "2308": 418, "231": 426, "2310": 417, "2313": 418, "2314": 418, "232": 62, "2320": [418, 473, 474], "2321": 418, "232161": 482, "2323": 418, "2326": 418, "2327": [473, 481], "23273": 487, "233": [442, 449, 557], "2330": 418, "23306": 452, "2332": 481, "2334": 418, "2335": 418, "2338": 418, "2339": [445, 473, 497], "234": [426, 442, 468, 484, 485], "234132519034915": 479, "23413252": 479, "2342": 418, "2343": 418, "234359264373779": 478, "2343e": 481, "2344": 418, "2345": 418, "2346": 418, "2347": 418, "235": 426, "2350": 419, "2351": 418, "23523": [142, 169, 207, 410, 448, 449, 457, 465, 474, 476, 478, 489, 495, 496, 508, 511, 571], "23526": [142, 207, 448, 449, 457, 465, 474, 476, 478, 489, 495, 496, 571], "235294117647083": 462, "2354": 418, "23559": [448, 449, 465, 474, 478, 495, 496, 518, 520, 521, 571], "2356": 418, "2357": 481, "2358": 418, "2359": 418, "23592": [448, 449, 465, 474, 478, 495, 496, 518, 520, 521, 571], "236": [426, 473], "2360": 418, "236110": 534, "2362506e": 477, "23628": 487, "2365": 418, "2366": 418, "2367": 418, "2368": 418, "237": 443, "23734": 497, "2375": 418, "2377": 418, "2378": 418, "2379": 418, "2381": 418, "238298": 443, "2384": 443, "2385": 418, "239": [67, 458], "23905561": 477, "239439": 497, "239557417": 86, "2399": 473, "239e": 473, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 377, 378, 391, 395, 429, 434, 443, 449, 452, 467, 470, 473, 474, 479, 481, 486, 487, 495, 520, 537, 544, 553, 554, 555], "240": [102, 105, 109, 110, 121, 473, 474, 475, 509], "2400": 418, "2401": 418, "2404": 418, "2405": 419, "240e": 448, "241": 473, "2412": 418, "2414": 473, "2419": 443, "2428255": 475, "242835": 67, "243": [442, 448, 475, 557], "2431": 473, "2432": 452, "2433": 419, "2435": 419, "243742672227972e": 470, "244": [67, 426, 448], "2440": 473, "2441": 419, "244140625": 481, "2443672e": 477, "2444": 419, "2446": [419, 481], "2448": 419, "2449": 419, "245": 426, "2450": [419, 481], "245152": 458, "2454": 419, "2455": 419, "24579": 475, "2459": 419, "246": [426, 475], "2461": 419, "24611324074": 473, "2463": [394, 419], "2464": 419, "2465055e": 477, "2468": 419, "24685677e": 477, "247": [67, 426], "2470": 419, "2471938975366008": 299, "2472": 419, "2475": 419, "2476": 419, "2477": 419, "2478": 419, "2479": [419, 496], "248": 426, "2481": 419, "248122": 473, "2483": 419, "2485": 495, "2486": 419, "249": [22, 426], "2490": 419, "2491": 419, "2492": 419, "2493": 419, "2496": 419, "24968": 443, "2497": 419, "2498": 419, "2499": 419, "249965667724609": 478, "249e": 139, "24e": [473, 481], "25": [33, 52, 87, 91, 101, 138, 139, 148, 159, 172, 285, 291, 378, 391, 398, 412, 433, 440, 443, 444, 448, 449, 452, 458, 467, 468, 470, 473, 477, 479, 481, 495, 497, 498, 529, 534], "250": [479, 570], "2501": 419, "250185": 478, "2502": [419, 458], "2505": 419, "2505121": 97, "2505703": 468, "2509": 473, "251": [452, 456], "2510": 419, "251185": 497, "2511884200000000": 497, "2511886431": 475, "25162e": 443, "2518": 473, "251932": 473, "252": [426, 458, 473], "2520": 419, "2521": 419, "2523": 419, "2525": 419, "2528": 419, "253": [451, 481], "2535": 419, "2536": [419, 481], "2537": 481, "2538": 419, "254": [426, 442, 472, 485], "2540": 419, "2546": 419, "254901960784338": 462, "25496": 497, "254e": 467, "2551": 419, "2552": [419, 473], "2553": 419, "2555": 395, "2557": 419, "255750516626": 473, "2558": 419, "2559": 419, "256": [67, 429], "2560538e": 477, "2561": 419, "2562": 419, "2563": 419, "2564": 419, "2567": 419, "2568710719919036": 459, "257": [138, 451], "257391": 532, "2574": 419, "25743553e": 476, "25763": 452, "257642": 473, "2579999": 486, "258": [451, 535], "2580": 419, "25823909e": 475, "2585": 419, "2587": 419, "258922": 541, "2589254117941673": 495, "259": [451, 497], "2591e": [444, 473], "2594": 419, "2595": 419, "2595e": 456, "259e": [139, 452], "25b": 17, "25e": 481, "25t_": 53, "25th": 400, "26": [19, 87, 91, 139, 378, 412, 440, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 499, 547, 565], "260": [429, 497], "2604": 419, "2609": 481, "261": [429, 497], "2616": 419, "26173": 452, "2619": 419, "262": [429, 452, 481, 497], "2620": 419, "262554796103245": 495, "2625818241224747": 476, "2627": 419, "262728": 486, "26272868097919794": 483, "2628525e": 477, "263": [138, 139, 452, 481], "2633e": [457, 467], "2635": 419, "2635108e": 477, "2637": 419, "26392": 454, "2639554729438709": 483, "264": [138, 429, 458], "2645": 419, "2648150": 97, "2649e": 476, "265": [32, 139, 388, 443, 452, 458, 481, 497], "2651": 419, "2654": 419, "266": [138, 139, 388, 451, 452, 458, 460, 464, 479, 481, 497], "2660": 419, "266192": 443, "26665050077722524": 483, "2667": 420, "267": [67, 139, 451, 452, 458, 481, 486], "2672": 420, "2673": 420, "26739753": 97, "2674": 420, "267e": 448, "268": [400, 452, 458, 462, 473, 481, 495, 497], "2681": 420, "2684": 420, "2685": 420, "268663733018811": 483, "2687": 420, "26883694": 497, "26887783978974283": 483, "2689": 458, "269": 497, "2692": 420, "269385": 473, "269627": 486, "2697": 420, "2699878e": 477, "26a": [39, 40, 50, 52, 53, 239, 274, 283, 473], "26e": [473, 481], "26th": 396, "27": [139, 380, 440, 448, 452, 458, 467, 470, 474, 497, 572], "270": [445, 452, 473, 481, 497], "2703": 420, "2705": 420, "27057337686547633": 483, "2707": 420, "2708": 239, "2709": 420, "27093776e": 477, "271": [448, 451, 452, 456, 497], "2711": 420, "2712": 420, "2713": 420, "2715": 420, "271777777777796": 445, "27177778": 94, "2718": 420, "2719": 420, "272": [451, 452, 473, 481], "2720": [395, 421], "27209": 497, "2723": 420, "2725": 420, "2726": 420, "2726e": 497, "2727": 420, "2727693": 486, "2727e": 448, "2728": 420, "2729": 420, "273": [83, 429, 446, 452, 497], "2730": 420, "2731": 420, "2733": 420, "2734": 124, "2735": 420, "2737": 420, "2738": 420, "2739": 420, "274": [442, 467, 479, 557], "27409496735322464": 483, "2741": 420, "2742": 420, "2743": 420, "274509803921596": 462, "2746": 420, "2747": 420, "27473": 458, "275": [451, 473, 565], "2750": 420, "2751": 420, "2752": 420, "2753": 420, "2755": 420, "2756": 420, "2759": 421, "275e": 467, "276": 429, "2761": 421, "2762": 421, "2764": 421, "2765": 421, "276698": 558, "2767": 421, "2768": 421, "277": 451, "2771": 421, "2772": 421, "27727": 481, "2775": 421, "277522283785622": 459, "2776": 421, "2777": 421, "2777074437073429": 483, "2778": 421, "2779": 421, "278": [27, 429, 451, 464, 473, 481], "2781": 421, "2782": 421, "2783": 421, "2784": 421, "2785": 421, "2785e": 448, "2787": 421, "2788": 421, "2789": 421, "278e": 452, "279": 429, "2790": 421, "2791": 421, "2792": 421, "2793": 421, "2794": 421, "2796": 421, "2797": 421, "2798": 421, "2799": 421, "27e": 473, "27t20": 89, "28": [21, 24, 67, 94, 138, 139, 383, 412, 442, 446, 448, 450, 451, 452, 458, 460, 464, 470, 472, 473, 478, 479, 481, 485, 486, 497], "280": [67, 429, 448, 451, 479], "2800": [460, 481, 497], "2801": 421, "2802": 421, "2803": 421, "2804": 421, "2805": 421, "2808": 421, "2809": 421, "281": [451, 473], "2810": 421, "281067": 553, "2811": 421, "28118133544922": 473, "2812": 421, "28120079": 473, "2815": 421, "2816": [421, 481], "2817": 421, "2818": 421, "2818047723094509": 483, "28183829312": 475, "282": [138, 139], "2820": 421, "2822": [421, 481], "2823": 421, "2825456e": 477, "2827": 421, "28275990e": 475, "2827988e": 477, "2828": 421, "2829": 421, "282951078740491e": 470, "282e": 473, "283": [429, 451], "2832": 421, "283218": 443, "283487": 473, "2837": 421, "28382603": 477, "2838398": 486, "28385358839966657": 483, "2839": 421, "284": [451, 467, 473, 575], "2841": 421, "2842": 421, "28429": 458, "2845": 421, "2846": [421, 458], "285": [429, 442, 451, 557], "2852": 481, "28551": 139, "2859229": 475, "285f": [83, 88], "286": [429, 451, 475], "2861432787940619": 483, "286e": [452, 473], "287": [52, 53], "2872": 422, "28720322": 97, "2874": [422, 497], "28755283551095173": 483, "2878662980210884": 300, "288": 124, "2880470e": 477, "2885": 422, "288e": 446, "289": [429, 451], "28905": 487, "2891": 422, "28958": 452, "2896": 422, "2897": 422, "28e": [102, 446, 456, 458, 474, 487], "29": [67, 139, 269, 389, 399, 412, 440, 443, 446, 449, 451, 452, 458, 464, 466, 469, 470, 473, 479, 481, 482, 486, 497], "290": [430, 451, 459, 475], "2900": 481, "290098": 475, "2903": [422, 481], "2903e": 450, "290436": 537, "2907": 422, "291": 429, "2912": 422, "29158": 139, "29170324": 474, "291e": 497, "292": 467, "2922477": 97, "2923272203680937e": 470, "2924": 422, "2927": 422, "2929": 422, "293": 451, "2930": 473, "2931": 422, "2932": 422, "29355238360800506": 483, "2938": 422, "2939": 422, "294": 451, "2942": 396, "2943": 422, "2944": [397, 422], "2945": 422, "2947": 422, "2948": 422, "295": 429, "2950": 422, "2951": 422, "2953": 458, "29553683e": 475, "2956": 422, "29585273e": 487, "2959": 481, "295e": 473, "296": 429, "2965": 422, "2966": 422, "2967": 422, "297": [442, 443, 536], "2971e": 473, "2974": 422, "2976": 422, "2978e": 444, "298": [451, 458, 473], "2981": 422, "2984": 422, "29882214027996945": 483, "299": [429, 451, 473], "2990": 422, "2991": 422, "2992": 422, "2993": 422, "2995484265169": 471, "2996": 497, "2998": 422, "2999": [422, 473], "299940468335294": 458, "299995937905366": 458, "299e": 473, "299t": 53, "29t20": [466, 470], "29t21": 470, "29t22": 470, "29t23": 470, "29th": 412, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 138, 139, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 169, 179, 180, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 207, 229, 380, 385, 390, 393, 394, 395, 406, 414, 420, 433, 434, 435, 442, 452, 454, 455, 458, 479, 480, 497, 507, 510, 521, 522, 523, 535], "2degx2deg": 460, "2e": [194, 443, 445, 446, 460, 461, 466, 470, 473, 476, 481], "2e3": [194, 479], "2e6": 487, "2f": [363, 443, 449, 483, 496, 573], "2fhl": [58, 71, 419, 431, 432, 473, 497, 506], "2hwc": [59, 72, 419, 425, 433, 473, 506], "2k": [102, 109], "2m": [239, 274], "2nd": [60, 399], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 473], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 102, 104, 105, 109, 110, 111, 115, 117, 123, 124, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 172, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 211, 213, 222, 229, 232, 240, 263, 269, 271, 273, 274, 282, 283, 284, 289, 299, 300, 321, 330, 351, 362, 367, 369, 371, 374, 375, 377, 378, 380, 385, 386, 388, 389, 390, 391, 393, 398, 399, 400, 405, 410, 411, 413, 414, 415, 417, 418, 423, 425, 427, 430, 431, 432, 433, 434, 435, 436, 438, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 498, 499, 501, 504, 505, 508, 509, 513, 515, 517, 518, 520, 521, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 572, 573], "30": [24, 52, 67, 83, 96, 102, 112, 138, 149, 188, 299, 300, 381, 382, 387, 394, 401, 412, 414, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 509, 515, 520, 521, 528, 529, 543, 546, 547, 548, 551, 556], "300": [74, 87, 91, 283, 451, 453, 457, 460, 461, 464, 467, 473, 487], "3000": [384, 473, 523], "30000": 473, "3000000": 556, "30000000": 556, "3000020211954284": 458, "3000e": 444, "3001": 422, "30015e": 443, "3002": 422, "3003": 481, "3004625872247901": 457, "3005": 422, "3006": 497, "3006942": 97, "3007": 422, "301": [429, 451], "3011061699260256": 483, "3012": 422, "3013": 473, "301668796295": 473, "302": 451, "3020791585772495": 299, "30287": 452, "3028e": 481, "302e": 473, "303": [448, 451, 464, 473], "3030": 422, "3032": 422, "3034": 473, "3035": 422, "3037": 422, "3037632e": 477, "3038": [422, 497], "3039": 422, "304": [444, 451, 466, 467, 470, 471, 473, 483, 497, 537], "3041": 422, "3042": 422, "3043": 481, "3045": 422, "3046875": [474, 481], "3049664466089965": 300, "304_steadi": 444, "305": [67, 451], "3051": 422, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 422, "3053": 422, "30535345877453707": 483, "3054": 422, "3054538213469855": 459, "30561": 139, "3058": 422, "3058422e": 477, "305e": 473, "306": [429, 572], "3060": 422, "306196370000000": 497, "3063": 422, "3069": 422, "306e": 473, "307": [451, 467], "3070": 422, "3071": 473, "3072": 422, "3074": 422, "3075": 398, "3076": 422, "307e": 473, "308": [451, 458, 531], "3080": 422, "3081": 422, "3083": 422, "3085": 422, "3086": 422, "3088": 422, "3089": 422, "3091": 422, "3092": 422, "309833": 535, "30997": 497, "30a": 274, "30d00m00": 401, "30e": [444, 454, 477, 481], "30t00": 470, "30t01": 470, "30t02": 470, "30th": 386, "31": [138, 139, 383, 384, 397, 398, 410, 437, 444, 446, 448, 449, 451, 452, 456, 459, 462, 466, 467, 470, 473, 474, 478, 479, 481, 484, 488, 495, 497], "3100": 422, "3106": 422, "31067517": 473, "3107": [473, 497], "311": [531, 573], "3110": 423, "3111": 423, "3112": 423, "3113": 423, "31139074e": 476, "3114": 423, "311489174710791e": 497, "3116": 423, "3117988e": 477, "31186857659616535": 483, "3119611261122878": 483, "312": 429, "3122": 424, "3123": 424, "3124": 424, "3125": 424, "3126": 424, "3127": 424, "3129": 424, "313": [451, 457], "3130": 424, "3131": [425, 481], "3135914081482271": 483, "3136": 425, "313714614138": 474, "3138": 425, "314": 434, "3140": 425, "3141": 425, "3145": 425, "3148": 425, "315": 473, "3152": 425, "3153": 425, "3155": 425, "315767542862533": 495, "3158": 425, "316": [451, 487, 488], "3162": 425, "316227": 473, "316227766016838": 478, "3165": 425, "3168": 425, "3169": 425, "317": [429, 451], "3173": 425, "3178": 425, "317a": 274, "317e": [444, 473], "318": 429, "3180": 425, "3182": 425, "31834": 139, "3185": 425, "3189697265625": 448, "31898": 139, "319": [430, 467, 487], "3191": 425, "3195": 497, "3197": 425, "319725": 486, "3199": 425, "32": [83, 138, 188, 448, 452, 454, 470, 478, 479, 497], "320": [102, 105, 109, 110, 121, 473, 474, 475, 481, 509], "3202": 425, "3207": 425, "3208": 425, "32095": 497, "321": [442, 462, 536], "3211": 425, "3216": 425, "3217": 425, "3219": 425, "322": 451, "3222": 425, "3228": 425, "3229": 458, "323": 451, "3230": 425, "3232943": 341, "3233356": 341, "32377509405904137": 96, "323779": 289, "3237948931463171": 483, "3238": 425, "3241": 425, "3243": 425, "3246": 425, "32465247": 482, "3254": 425, "3257": 425, "3258": 425, "325e": 449, "326": 429, "3262": 425, "32684": 497, "32684833": 486, "327": [442, 458, 557], "3272": 425, "3276": 425, "3277": 425, "3278": 425, "3279": 425, "3279955e": 477, "328": 458, "3281": 425, "3282e": 464, "3283": 425, "3284": 425, "32843": 497, "32847": 443, "3285": 425, "329": [96, 299, 300, 442, 466, 467, 470, 473, 483, 511, 557], "3293": 425, "3299": 473, "329e": [448, 473], "33": [442, 466, 469, 470, 471, 472, 476, 479, 497, 511], "330": [430, 442, 451, 481, 557], "3301": 425, "33013e": 443, "3302": 425, "3302565e": 477, "3303": 425, "330376": 67, "3304": 425, "3305": 425, "330505": 486, "33055e": 443, "3306": 425, "3307": 425, "3308": 425, "3309": 425, "3310": 425, "3314": 425, "33164865722698683": 483, "331892": 555, "3319": 425, "3319831545301117": 299, "332": [67, 430, 487], "3320": 425, "3323": [425, 474], "332525": 473, "3328": 425, "332e": [448, 452, 458], "332f": [30, 31, 32, 33], "333": [133, 292], "3330487": 97, "3331": 497, "3331761": 97, "3333": 425, "33333333": 374, "3333333333333344": 462, "3335": 425, "33368e": 443, "3337": 425, "3338": 425, "334": [124, 442, 487, 557], "3342": 425, "3343": 425, "3346": 425, "3347": 425, "33484": 443, "3349": 425, "3349654391": 475, "334e": 473, "335": [430, 456], "3353": 425, "3357": 425, "3358": 425, "335e": 446, "336": [462, 473], "3363": 425, "3364130e": 477, "336444e": 473, "336606": 443, "3368855e": 477, "3369": 425, "337": [430, 442, 451, 557], "3374": 425, "3377": 425, "33787": [96, 483], "33788": [96, 139, 483], "33789": [96, 483], "3379": 425, "33790": 483, "33791": 483, "33792": 483, "33793": 483, "33794": 483, "33795": 483, "33796": 483, "33797": 483, "33798": 483, "33799": 483, "338": [430, 473], "33800": 483, "33800122": 97, "33801": 483, "3380311e": 477, "3381": 425, "339": [430, 448, 462], "3390": 425, "3392": 425, "3393": 425, "3395": 425, "3397": 425, "339835555384604": 483, "3398360": 477, "33983991887701287": 96, "3399": 425, "33e": 468, "34": [52, 53, 67, 413, 443, 458, 470, 474, 479, 481, 495, 497], "34005": 443, "3402": 425, "3403": 425, "340391": 497, "3404": 425, "34047": 443, "3406": 425, "3409": [94, 425], "341": 443, "3413": 425, "3416": 425, "3418": 425, "342": 430, "3420": 425, "3423": 425, "3426": 425, "3428": 425, "3434": 425, "3438": 425, "3439": 425, "343e": 446, "344": 473, "344238": 497, "3443842": 486, "3445": 425, "3446": 425, "3447": 425, "3449": 425, "344e": 67, "345": [290, 443, 481], "3453": 425, "3454": 425, "345692": 497, "3458": 425, "346": 481, "34613054105945": 459, "346488e": 473, "3466": 425, "3468": 425, "347": [430, 445], "3471": 425, "3474": 425, "348": [36, 37, 430, 448], "3480": 425, "3481e": 456, "3488": 425, "348e": [67, 473], "3491": [425, 452], "3493": 138, "34932": 139, "349530550405035": 476, "349530725254468": 476, "34953073943366": 476, "34953075819191": 476, "34953077463306": 476, "34953079334042": 476, "349530807529028": 476, "349535814693404": 476, "349536723056637": 476, "349537158300407": 476, "349537804239922": 476, "34953807814367": 476, "34953910575007": 476, "34953932636892": 476, "349542158419318": 476, "349559366703698": 476, "349655": 475, "34971209244579": 476, "349724940685938": 476, "3499075e": 477, "349e": 452, "34e": [473, 481], "35": [67, 391, 398, 410, 448, 466, 470, 473, 476, 484, 486], "350": [442, 447, 462, 468, 475], "350105": 458, "3502": 473, "35030398537787": 476, "3503706026275275": 483, "350394": 538, "3504": 497, "35052105086856": 476, "350556388466543": 476, "350d": 462, "351": [430, 442, 473, 497, 557], "3514e": 496, "3515": 425, "352": [430, 473], "3521": 445, "3523": 425, "3529": 425, "3529411764705888": 462, "353": [24, 430, 497], "3535": 427, "353592500058824e": 495, "3536": 443, "353e": 458, "354": 462, "3544": 425, "35569283": 477, "355804": 497, "3559": 425, "356": 497, "3561": 425, "3568": 425, "357": [473, 497], "35722435185": 473, "3576e": 445, "358": [458, 473, 497], "3583": 458, "3584": 425, "359": [430, 458, 473, 497], "3590188e": 477, "3592": 425, "3599": 460, "359e": 497, "36": [67, 86, 144, 319, 445, 458, 460, 464, 473, 474, 477, 497], "360": [388, 479, 499], "3600": [451, 460, 461, 479], "36014": 456, "36073833513766157": 483, "361": [67, 430], "361373": 563, "3619e": 496, "36228879": 497, "36273": 497, "363472509034498": 483, "3639946": 468, "364": 430, "3659253e": 477, "366": [475, 496], "366486": 475, "36669663417038234": 483, "3669": 427, "367": [430, 462, 481], "3674884": 473, "368": 117, "36834038301420274": 483, "368346217294295": 96, "3684": 427, "3689322e": 477, "369": 430, "3690": 497, "3699": 427, "36e": [472, 473], "37": [443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 573], "370": [462, 473, 481], "37058": 139, "371": 430, "3710784e": 477, "3712": 427, "3713": 427, "3715810e": 477, "3718745": 97, "372": [35, 124, 497], "3720": 427, "3722": 427, "3725490196078436": 462, "3728": 427, "373": 458, "3733": 427, "373892759762174e": 470, "3739292e": 477, "374": [460, 462], "3740": 427, "37455141": 497, "3748": 427, "375": [430, 479], "3750": 458, "37506": 497, "37517": 452, "3752": 427, "3759377929871826": 483, "376": 67, "3760": 427, "3761": 427, "3765": 443, "377": [442, 469], "3777": 427, "37773": 452, "3779": 497, "3783": 427, "3784": 138, "379": [430, 448], "3791e": 467, "3792": 481, "3796": 427, "3797": 427, "38": [22, 67, 442, 443, 445, 455, 456, 463, 473, 479, 481, 497, 556], "380": [442, 447], "3802": 427, "380300": 547, "3804": 427, "3806": 427, "381": 481, "3810": 427, "3812": [473, 497], "3812120e": 477, "3812160e": 477, "38143003": 97, "3817": 427, "38258165e": 475, "3829": 497, "382e": 448, "383": [67, 430, 473, 479], "3833": 427, "3837": 427, "383e": 67, "384": 475, "3841385": 475, "3842": 427, "3846": 427, "3848912826152664e": 497, "3856": 427, "385e": 139, "3860": 427, "3862": 436, "387": [430, 497], "3872": 473, "3873": 427, "3874": 427, "3876": 427, "387834": 497, "388": 535, "388405": 497, "3885947175689592": 483, "3886270e": 477, "3887": 427, "389": 379, "3892": 427, "3895": 427, "3898": 427, "389e": 497, "39": [17, 18, 21, 22, 24, 25, 27, 59, 139, 472, 473, 479, 487, 535, 556], "390": 425, "3904": 427, "39042": 86, "3905": 427, "3906": 427, "391": 473, "3915": 427, "39151": 454, "3918": 427, "392": [430, 449], "39200283e": 470, "392156862745098": 462, "39224": 452, "3925": 436, "393": [203, 204], "3933": 427, "3935": 445, "3936": 427, "394": [430, 442, 478, 485], "3941": 427, "3945": [445, 473], "3947637541758": 467, "394765638937866": 495, "3948": 428, "395": 430, "3950": [399, 436], "395004": 497, "3956": 436, "3959": 428, "396": 430, "3962942e": 477, "3966": 428, "397": 448, "3970": 400, "397035933646679e": 470, "39728": 497, "3975": 428, "3979": [428, 571], "397918129147546": [410, 571], "39791813": [410, 571], "398": [430, 456], "3981": 497, "39810717055": 475, "3981075200000000": 497, "39816165383": 563, "398168009124": 564, "398170657005": 562, "3983": 428, "3986": 428, "3987": 428, "3988": 428, "398e": 473, "3990": 428, "39e": 473, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 144, 150, 157, 158, 160, 169, 277, 279, 380, 383, 384, 385, 389, 390, 393, 394, 395, 406, 414, 415, 416, 418, 419, 420, 421, 432, 433, 434, 442, 443, 444, 446, 448, 449, 452, 453, 454, 458, 459, 460, 461, 462, 463, 466, 467, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 495, 496, 507, 509, 510, 511, 518, 523, 568, 570], "3d33m15": 67, "3dataset": 457, "3e": [20, 124, 130, 458, 461, 464, 465, 468, 470, 473, 481], "3e4": 487, "3e5": 487, "3e6": 556, "3e7": 556, "3f": [124, 459, 572, 573], "3fgl": [61, 67, 74, 224, 262, 397, 426, 429, 431, 432, 433, 442, 446, 473, 482, 497, 506, 525, 557], "3fgl_name": 71, "3fhl": [62, 75, 86, 126, 128, 132, 280, 394, 432, 433, 446, 452, 460, 462, 473, 479, 480, 481, 482, 487, 497, 506, 508], "3fhl_data_fermi": 457, "3fhl_dataset": [280, 457, 480], "3fhl_model": [280, 457, 481], "3g": [472, 473], "3hwc": [63, 76, 425, 436, 473, 506], "3ml": [392, 487], "3pc": [64, 69, 77, 473], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 101, 102, 105, 109, 110, 114, 116, 127, 132, 139, 141, 146, 149, 157, 169, 172, 188, 189, 190, 191, 192, 193, 198, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 234, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 273, 280, 281, 319, 361, 374, 375, 377, 378, 386, 388, 391, 394, 398, 399, 410, 413, 422, 424, 425, 426, 429, 431, 432, 435, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 495, 496, 497, 499, 504, 505, 506, 520, 523, 524, 528, 529, 532, 537, 542, 555, 556, 564, 570, 571, 572, 573, 574], "40": [59, 109, 110, 381, 426, 445, 446, 448, 449, 451, 456, 458, 466, 467, 470, 479, 482, 486, 497, 520, 543, 546, 551, 556, 572], "400": [132, 452, 453, 458, 462, 473, 479, 497, 565], "4000": 436, "40000": [169, 496], "400056": 443, "40050506591797": 473, "40051": 454, "40051035": 473, "40071076": 97, "400x200": 462, "401": 449, "40112": 497, "4013": 436, "4014": 436, "4015": 436, "4017": 436, "4018": 436, "401e": 452, "402": 149, "4022": 436, "40235": 456, "4024": 436, "4025": 436, "4026": 436, "402712": 473, "403": [430, 458, 481], "4035": 497, "4037": 436, "404": 297, "4043": 436, "4044": 436, "40481": 456, "405": 382, "4051": 436, "40525": 456, "4054": 436, "4058": 436, "406": [442, 481, 485, 497], "40611": 497, "4067": 436, "407": 473, "4071": 436, "4073": 436, "4073799600000000": 497, "4075": 436, "4076": 436, "4079": 436, "408": [448, 479], "4080": 436, "4080942e": 477, "40822469e": 482, "4083": 436, "4084": 436, "4088": 436, "4089": 436, "40919": 452, "4093": 436, "409416": 497, "4095": 436, "4098": 436, "40a": 59, "40deg": 486, "41": [67, 86, 94, 388, 467, 473, 474, 479, 487, 497], "410": 462, "41009347393684": 474, "4103": 436, "4105": 436, "4106": 436, "4107": 436, "4108": 436, "411": 497, "4110e": 473, "4112": [124, 436], "4113": 436, "4115": 436, "41176470588239": 462, "4119": 436, "411e": 446, "4120719e": 477, "412165": 458, "412779907405": 473, "413": [442, 458, 476, 485], "414": 430, "4140541880588": 459, "41415047": 97, "4142135623730951": 117, "41449": 452, "414e": 452, "415": [430, 547], "4151e": 456, "4155": [473, 497], "41584196": 471, "416": [67, 442, 456, 473, 478, 485], "4161e": 456, "417": 473, "418": [442, 456, 463], "418007850646973": 410, "41866": 487, "419": 481, "4191": 439, "41924": 138, "4198250e": 477, "41995": 452, "419e": 473, "41e19": [19, 20], "42": [25, 27, 94, 149, 341, 388, 451, 458, 473, 477, 478, 479, 483, 486, 524, 527], "42050348": 474, "4208": 439, "4209": [439, 452], "421": [430, 462, 497, 570], "4210": 439, "4212": 439, "4212028e": 477, "4213": 439, "4215": 439, "4216": 439, "4217": 440, "4219": 439, "422": [39, 40], "4220": 456, "4221": 437, "4225498e": 477, "4225631e": 477, "42267": 458, "4226731": 458, "423": 448, "4231": [437, 439], "42361": 452, "42399798": 458, "423e": 124, "42400": 458, "4242": 439, "4243": 439, "4245": 439, "42463": 487, "424650": 474, "42474": 497, "425": 497, "4252": 439, "426": 473, "4264": 439, "4268": 437, "427": 449, "4275": [437, 439], "4277": 439, "4280": 439, "4281": 473, "4282": 439, "4288": 439, "429": 448, "4294": 439, "42e": [476, 481], "43": [273, 341, 388, 449, 458, 467, 474, 479, 497, 524], "430": 473, "43000": [52, 53], "4301": [437, 439], "43017": 454, "4303606e": 477, "4305": 439, "431": [134, 382, 462, 474], "431023787974766e": 495, "43113": 443, "43137254901962": 462, "4313847458879893": 483, "4319": 497, "43197": 452, "4324": [437, 439], "4326": 439, "432878": 473, "432e": 473, "433": 452, "4336": [437, 439], "43366": 565, "4338e": 444, "434": 473, "43416595": 468, "4344": 437, "4346": 439, "435": 430, "4350": 439, "4351637481047363": 483, "4352": 439, "4359": [437, 439], "435e": 448, "435l": 473, "436": 430, "4360750e": 477, "4369": 439, "437": [473, 481], "4370": 439, "4373240195300975": 483, "438": 481, "4380": [438, 439], "4381": [402, 440], "4382": 438, "439": 448, "4393": [438, 439], "4394": 438, "4395": 439, "4397": [438, 439], "439e": 473, "43e": 481, "44": [21, 50, 86, 341, 442, 444, 447, 448, 451, 466, 468, 479], "4402": 439, "44055555555555603": 94, "4406": 439, "4408": 440, "4409": 439, "4412": [438, 439], "4417": 439, "4418": 439, "4420073e": 477, "4420222e": 477, "4428": 439, "4428634e": 477, "443": 448, "4430": 439, "44319": 474, "4432": 440, "4435": [438, 439], "443696": 546, "4444": 439, "444e": 457, "445": 452, "4450": 497, "44528685": 497, "4453": [438, 439], "44573": 94, "4458": 439, "4459": 439, "446": [481, 573], "446442": 554, "4466": [439, 456], "4466832000000000": 497, "4466835921": 475, "447": [430, 442, 495, 498], "44742": 497, "44749e": 443, "447552": 443, "447e": [458, 473], "447l": 17, "448": 462, "4480056e": 477, "44802852": 497, "4481": 473, "4485": 440, "4486": [438, 439], "448e": 139, "4491": [401, 440], "4495": 439, "4497": 474, "4498": 138, "44e": 410, "45": [51, 54, 451, 457, 468, 470, 474, 479, 480, 482, 499, 524, 529, 530], "450": 481, "4500": [438, 439], "4501": 440, "4504": 439, "4506": 439, "4508": 439, "4509803921569": 462, "4510": [439, 456, 497], "4515": 472, "4517490659800822": 465, "4520": 438, "4521": 439, "4524": 438, "453": [442, 444, 481, 557], "454": 448, "4540": 440, "4545": 439, "4546": 440, "455": [430, 446], "45515263080596924": 445, "45517415e": 475, "455870": 458, "455e": 67, "456": 430, "4561": 440, "45646095": 468, "4567": 440, "457": [274, 430, 481], "457251": 497, "4574": [438, 440], "4575": 94, "4578": 438, "4579e": 443, "458": [462, 473], "4584": 440, "45856": 497, "4586649826004114": 299, "459": [430, 474, 481], "4593": 438, "45935": 497, "4595": 440, "4599": 440, "45\u00ba": 488, "46": [53, 67, 109, 110, 388, 467, 473, 479], "460249999": 86, "4608": 440, "461": [430, 470], "4615": 440, "46186956763267517": 445, "4619": 438, "462": [430, 448], "4620": [402, 440], "4620e": 473, "46225": 452, "4628": 440, "463": 497, "4631": 438, "4635": 440, "4638": 440, "4638e": 453, "464": 464, "4642048e": 477, "4647544e": 477, "465": [442, 448, 458, 459, 463, 473, 481], "4653": 438, "4657": [438, 440], "465784": 497, "4660": 440, "4664": 440, "4668": 440, "4669": 440, "467": [442, 557], "4671": 440, "46711": 452, "4677": [438, 440], "468": [442, 467, 468, 469, 473], "4681": 438, "4684": 445, "468805426856864e": 52, "468e": 67, "4697": 440, "46e": [83, 453, 458], "47": [67, 467, 470, 473, 479, 497], "4703": 440, "470588235294144": 462, "4711": 497, "4712": 452, "4714": 440, "4721": 438, "4726": 440, "4728": 438, "4729": 440, "473": [430, 448], "4738": 440, "474": 430, "4740": 440, "4741": 440, "474e": 473, "475": [430, 481], "4750": 440, "4753": [438, 440], "475468": 443, "4755": 438, "4759": 440, "476200": 495, "4770": 440, "4772": 438, "47797": 452, "477e": 473, "478": 430, "47802": 483, "47803": 483, "47804": 483, "47827": 483, "47828": 483, "47829": [82, 483, 489], "4783": 440, "4785": 440, "47e": 473, "48": [33, 169, 413, 456, 457, 479, 481, 487], "480": [442, 445, 473, 481, 557], "4802": 440, "4805": 440, "480554966147": 456, "48068": 452, "4808": 440, "480e": 473, "481": [379, 430], "4810": 440, "4814": [440, 497], "4817": 440, "48180882997916e": 495, "4819444e": 477, "482": 443, "48215685": 97, "4822": 440, "48248": 473, "4825": [473, 497], "4828": 440, "4829": 440, "4834": 440, "4834488e": 477, "4835": 440, "4837": 440, "484": 430, "48442": 269, "4845": 440, "4847": 440, "4848653": 473, "4849": [440, 473, 497], "484e": 139, "485": [430, 442, 447], "4850": 440, "4851": 440, "4854": 440, "485p": [36, 37], "487": [430, 495], "4875723e": 477, "4876": 438, "4879": 440, "4881": [248, 249], "4886": 440, "48871": 443, "488z": 27, "489e": 473, "48e": [473, 481, 496], "49": [53, 452, 456, 473, 481, 487, 495, 523], "490": 25, "4902": 440, "4904": 440, "4904078e": 477, "49078e": 443, "4913": 438, "49152": 487, "4917": 440, "493": 25, "4930435940405": 456, "4933657e": 477, "4936": [438, 440], "4937": [438, 440], "4940": 440, "49417615": 86, "4942": 440, "494e": 448, "495": [442, 485], "4958277": 97, "496021": 486, "4963": 497, "4966": 497, "4968236e": 477, "4970": 440, "4971": 440, "49716789e": 475, "4971704e": 477, "4973": 440, "4975": 440, "4978": 440, "498": 497, "498784": 473, "4989": 440, "498e": [473, 497], "499": [67, 473], "49919925926": [234, 566], "4992": 440, "4994": 440, "49972277488662115": 483, "4999833830074": 458, "4d": 393, "4e": [468, 473, 481, 556], "4f": [571, 572, 573], "4fgl": [65, 78, 263, 264, 397, 417, 419, 425, 427, 440, 442, 444, 457, 473, 480, 482, 506, 525, 557], "4th": [386, 412], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 102, 103, 105, 108, 109, 110, 117, 121, 124, 125, 127, 129, 131, 138, 139, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 169, 172, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 214, 215, 218, 221, 222, 224, 225, 226, 229, 230, 232, 234, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 274, 297, 301, 333, 364, 365, 369, 371, 374, 375, 378, 379, 381, 385, 386, 388, 389, 390, 391, 393, 397, 398, 399, 405, 410, 413, 415, 417, 418, 425, 427, 429, 430, 432, 433, 434, 438, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 499, 504, 505, 508, 515, 518, 520, 521, 522, 523, 524, 528, 529, 530, 531, 533, 537, 538, 543, 545, 546, 547, 551, 552, 556, 559, 560, 561, 562, 564, 570, 572, 573], "50": [87, 91, 94, 111, 115, 341, 381, 401, 443, 449, 450, 456, 464, 466, 467, 468, 473, 474, 477, 479, 481, 482, 483, 486, 487, 489, 495, 496, 497, 520, 523, 531, 573], "500": [189, 190, 192, 198, 201, 202, 452, 458, 460, 461, 479, 486, 487, 497, 523, 528], "5000": [19, 20, 87, 91, 499, 523], "5000056568267741": 458, "5000e": 451, "50022222": 94, "500249": 473, "5004": 458, "5015": 440, "502": [430, 455], "5029747": 450, "503": 430, "5030": 497, "504": [28, 442, 455], "5040": 440, "5044": 440, "5049": 497, "505": [67, 473, 474], "505523195905": 456, "506": 430, "5066": 473, "507": 430, "5074834": 97, "5078068": 97, "50807568877": 473, "509587": 475, "509632": 475, "509e": 473, "50e": [451, 481], "51": [52, 53, 67, 139, 456, 462, 495], "510": [430, 475], "5106": 497, "51095676": 468, "511": [67, 430], "51179": [375, 575], "512": 448, "5126": 67, "512719": 559, "513": [410, 479], "51312": 458, "514": [442, 469], "5144": [94, 443], "514854": 486, "51544": [451, 460, 461, 464], "5162628e": 477, "5163273": 486, "517": [442, 490], "518": [430, 481], "518140": 531, "5188338e": 477, "51910": 94, "5192420e": 477, "5194769e": 477, "51948705e": 482, "51958055e": 475, "52": [53, 124, 169, 443, 445, 452, 454, 456, 467, 473, 486, 489, 497], "5205": 487, "52074074074": 83, "521": 431, "521131": 453, "5212e": 467, "521572": 104, "523": [431, 479], "5230376e": 477, "52318414": 97, "523681640625": 448, "5237647004325865": 483, "52389101852": 473, "523a": [239, 274], "523b": 22, "523e": 449, "524": [431, 473, 481], "5248": 497, "524807800000000": 497, "52494901381667": 467, "52587": 452, "526": 431, "52607": 497, "527": [431, 487], "527e": 449, "528": [448, 481], "52826166": 473, "5283": [473, 497], "52839183495354": 467, "529": 431, "5292": 474, "529411764705883": 462, "5297030e": 477, "52e": [468, 495], "53": [28, 458, 470, 484, 528, 537], "530": 431, "53025": 94, "531": [431, 462], "532054": 533, "53213": 458, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 473, "53343": [410, 465], "53344": 465, "53345": 465, "53346": 465, "53347": 465, "53348": 465, "5345275e": 477, "53482e": 443, "535": [431, 473], "535058216604496": 274, "53566": 443, "53616": 239, "53849342472254e": 470, "538600551585": 467, "539": [274, 481], "5390438": 97, "539397": 473, "53945": 466, "53946": [470, 471], "539e": 473, "53e": [410, 451], "54": [67, 445, 448, 473, 477], "5400": 474, "5407363826067": 508, "5407363826070": 508, "541": 431, "5411": 443, "5427520e": 477, "54282": 452, "5438860e": 477, "544": [431, 473, 487], "545": 431, "54534785163878": 467, "54566271": 572, "545y": [39, 40], "546": 431, "5461745": 97, "54676837e": 476, "54682": [452, 473, 487, 497], "547": [431, 443, 473], "54721e": 443, "5477": 473, "54772": 473, "548631": 449, "54892": 452, "548e": 473, "549": 431, "549007644529844e": 495, "549019607843138": 462, "5499840": 486, "54e": 481, "55": [39, 42, 87, 91, 207, 467, 468, 476, 480, 484], "550": 448, "55027": 139, "55045": 473, "551": [473, 535], "55197": [375, 575], "552": 473, "55275": 487, "553": [444, 473], "5531e": 444, "553337": 497, "5538": 497, "5538942e": 477, "553e": 452, "554": 67, "55410": 473, "5545130e": 477, "55461982e": 475, "554e": 446, "556": [431, 448, 573], "5561760e": 477, "557": [431, 481], "55775": 473, "558": 431, "558338072878877": 495, "559": 431, "5594": 83, "56": [443, 449, 468, 479, 488], "560": [37, 442, 473, 492], "5606985": 468, "5607778e": 477, "56093766": 97, "56141": 473, "562": 473, "5622482": 97, "562250": 464, "56234132519": 475, "563422": 565, "56353481": 572, "563e": [448, 458], "564": [289, 431, 448, 481], "564139576925786": 459, "5644": 474, "565": 431, "56506": 473, "565095": 443, "566e": 448, "56711": 497, "5686274509803928": 462, "56871": 473, "569": 431, "56922612": 572, "5692809e": 477, "56973": 497, "57": [33, 104, 123, 452, 454, 458, 468, 479, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "570": [442, 498], "57011": 458, "571": 473, "57185": 508, "5719922e": 477, "571e": 473, "572": 449, "572138": 123, "57233": 497, "57236": [452, 473, 487, 497], "572600": 449, "572e": [446, 452], "573": [67, 448, 497], "57300957": 172, "5752139079004": 467, "5754970e": 477, "576": 481, "5760": 497, "57602": 473, "5763635e": 477, "5768262e": 477, "576e": 452, "577398": 487, "5779092e": 477, "578": [473, 475, 572], "5782814": 475, "579": 473, "579178801616083e": 470, "57944657408": 473, "57967": 473, "57e": 473, "58": [410, 413, 449, 451, 456, 459, 473, 478, 479, 481, 489, 495], "580": [442, 469, 573], "581": 449, "5819e": 450, "582": 431, "58332": 473, "5833e": 473, "5835918e": 477, "583e": 452, "5842497e": 477, "585": 473, "58540702": 97, "5867488e": 477, "58693695": 468, "58698": 473, "5882352941176467": 462, "588e": 473, "58909": 467, "58926": 452, "5892966e": 477, "5895": 445, "58999": 234, "58e": [464, 473, 475], "59": [83, 449, 454, 464, 465, 473, 478, 485, 489, 497], "590": 448, "59000": [234, 566], "59001": 234, "590096": 561, "59063": 473, "5908": 473, "590835686434463": 483, "591": [431, 473], "59100": [565, 566], "59123": [559, 560, 561], "5915030546513255": 471, "5915e": 473, "59200": 565, "59233": 482, "59235": [83, 486], "59240": 482, "5924e": 496, "59250": 482, "59254e": 443, "59265": 443, "593": 431, "59300": 468, "59344": 497, "59348": 497, "59365": 566, "594": 431, "59400008": 97, "59428": 473, "59451": 452, "59497703e": 470, "595": 557, "5951631e": 477, "5956621435": 475, "596": 481, "59696": 452, "596e": 473, "597194451442478e": 470, "597774": 477, "59793": 473, "598": 497, "5985": 497, "5987726": 97, "599": [431, 462, 466, 481], "599625": 486, "59976": 473, "599999904632568": 473, "59d09m41": 473, "59e": [473, 481, 487], "5_wpis4u": 470, "5a": 58, "5e": [451, 461, 473, 475, 481], "5l5ezwj": 470, "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 102, 109, 111, 115, 124, 129, 139, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 158, 160, 161, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 234, 274, 362, 365, 378, 381, 386, 390, 391, 394, 399, 407, 410, 423, 425, 427, 433, 434, 438, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 503, 520, 524, 530, 534, 554, 570, 572], "60": [67, 91, 151, 438, 449, 451, 452, 473, 476, 487], "600": [449, 452, 457], "6000": 523, "6000000000000001": 482, "600661": 477, "60075": 477, "60090769e": 482, "600e": 448, "6018166e": 477, "601e": 473, "6024e": 496, "603": [481, 497], "6033": 443, "60350": 446, "603625": 477, "604": 448, "6046689e": 477, "60603928": 482, "60605": [562, 563, 564], "607843137254942": 462, "60e": 473, "61": [67, 139, 420, 456, 473, 481, 487, 573], "610": [481, 567], "61051": 487, "6105760e": 477, "611": [452, 475, 572], "611168": 475, "6116853": 473, "611e": 473, "6125": 489, "612e": 452, "613114": 471, "61422433": 97, "61453755944866": 459, "61489": 477, "61526": 139, "615316": 497, "617835": 477, "6181862e": 477, "61862": 234, "619": 473, "6194453e": 477, "61975454954816": 495, "62": [454, 473, 488, 496], "620": 473, "620209": 552, "620398": 477, "6205": 497, "62111": 452, "621499": 497, "6218742e": 477, "6219": 446, "622": [431, 446], "62258": 473, "6227766": 479, "62277660168379": 479, "6228e": 446, "623": [473, 497], "62320": 446, "623397": 477, "62341325": 479, "623413251903492": 479, "624": 481, "624122": 458, "624d": 24, "62503": 473, "62514628": 477, "6253652e": 477, "6259962e": 477, "6266": 497, "6267247": 497, "627450980392158": 462, "628": 431, "62842028": 474, "63": [187, 188, 197, 200, 443, 448, 450, 474, 478, 488, 489, 495, 496, 518, 520, 521, 524], "630": [82, 481, 489, 495], "6309576500000000": 497, "630e": 67, "631": [431, 456], "631155605": 460, "631159205": 460, "631170005": 460, "631173605": 460, "631177205": 460, "631180805": 460, "6318811e": 477, "632627": 497, "633": [85, 102, 105, 109, 110, 169, 449, 457, 478, 495, 496, 520], "63307": 83, "63308": [465, 496], "633083": 480, "63310241699219": 457, "63326": 452, "6333": 94, "63342": 497, "633600": 481, "635": 431, "63500212963": 473, "6354": 497, "63541": 486, "636688324856333": 467, "638": 481, "639": 473, "6390": 443, "63902": 443, "6395e": 453, "6397": 497, "63e": 474, "64": [39, 67, 83, 124, 188, 413, 464, 473, 487], "640": 431, "6402822e": 477, "641": [431, 497], "64103": 486, "6413": 458, "6417": 458, "6419578e": 477, "642": [442, 497, 567], "6423836025257211": 459, "6429005895278312": 483, "642e": 448, "643": [30, 31, 32, 33], "64323": 452, "64438": 487, "6444": 443, "644527": 475, "645": [474, 475], "6451": 458, "6464": 443, "646e": [133, 292], "647": 431, "647058823529452": 462, "6471115e": 477, "64794383e": 482, "648": [431, 485], "648e": 67, "649": [431, 442, 490], "64987376": 97, "64e": 449, "65": [63, 139, 398, 413, 415, 474], "650": 474, "6509": 443, "651": 473, "651058": 497, "6514": 497, "652": 457, "6522806": 497, "652368617859867": 457, "653": [431, 445], "65357608e": 477, "654": [443, 473], "65412": 458, "654e": 473, "655": 452, "655283": 452, "6554088e": 477, "6556248e": 477, "6556e": 450, "6557": 452, "655e": [67, 449], "656": 572, "65603222222": 487, "65603794185": 473, "6561e": 456, "6577182894355391": 483, "658": 481, "658909145253801e": 497, "6589622747787678": 483, "659": [448, 452], "6592": 467, "65e": 117, "66": [52, 53, 413, 416, 451, 457, 474, 476, 481, 484, 487, 495], "660": 431, "6604475": 458, "660e": 497, "660fals": 446, "661": 431, "66104": 443, "662": 473, "663": [448, 572], "663742400000000": 497, "664502403": 486, "664502405": 486, "664502408": 486, "664502409": 486, "664502414": 486, "664525": 527, "664e": 452, "6652219e": 477, "6656409356335768": 459, "66650390625": 445, "6666666666583865": 466, "6666666666666666": 561, "666666666666696": 462, "6678": 452, "66813": 458, "66984341": 477, "669e": [139, 452], "66e": [456, 474], "67": [17, 413, 473, 497], "670": 473, "6705024680435898": 299, "671616": 443, "67252019459389": 467, "6728": [473, 497], "673": [450, 460, 489, 559], "67304": 97, "67375": 443, "67457342435522e": 497, "675": 448, "6768369882260035": 449, "6768e": 449, "677": [431, 442, 490], "6772235e": 477, "67759236e": 477, "678": [86, 459], "67824": 474, "6784": 572, "67861": 477, "678683717532289e": 449, "679": 431, "679478008080033e": 449, "6795e": 449, "67992517": 97, "67e21": 472, "68": [67, 83, 96, 150, 156, 158, 159, 160, 162, 229, 413, 443, 473, 476, 477, 479, 486, 497, 573], "680": 481, "6800676893213": 467, "6803": 497, "6812310184489": 467, "68125": 477, "6823": 443, "682549799533": 467, "683535101178161e": 470, "684": 169, "68542112": 97, "68588096384626e": 470, "68628538586": 474, "687": 481, "687214": 478, "687500": 478, "687685": 473, "68e": [444, 456, 473], "69": [102, 440, 452, 464, 473, 474], "690": 67, "690557685186": 473, "6909290e": 477, "6909e": 467, "691": 473, "691299354164691": 459, "69138": 452, "691680": [102, 474, 481], "692": 452, "692e": 449, "693100": 551, "69314486": 480, "693940": 456, "6953125": 474, "69543812": 97, "6959369197218669": 483, "695e": 452, "697317": 487, "69735": 477, "697e": 446, "697fals": 446, "6985": 445, "6992": 458, "6e": [446, 473, 481], "6h": 488, "6k0dogx9": 470, "6th": 412, "7": [30, 31, 38, 52, 53, 67, 87, 91, 124, 130, 138, 169, 172, 199, 207, 232, 364, 365, 374, 378, 379, 386, 390, 391, 394, 410, 414, 415, 417, 418, 424, 425, 430, 431, 432, 434, 435, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 524, 528, 529, 565, 572, 573], "70": [67, 91, 102, 449, 458, 473, 474, 572], "700": [382, 461, 475, 480], "70000000e": 482, "7000e": 482, "70016": 458, "7007": 458, "701": 520, "70181": 139, "702": [465, 473, 487, 496], "702e": 452, "703": 410, "70358483e": 482, "704": 481, "70428": 497, "70437": 477, "705": 497, "70546": 452, "70634e": 443, "706e": [457, 473], "707945784": 475, "707t": 283, "708": [448, 449], "709": 431, "7097381e": 477, "70e": 482, "71": [33, 449, 451, 481, 573], "710": 431, "71067811865478": 473, "7115414505410296e": 470, "7116851": 482, "711e": 452, "712": 459, "71220672": 474, "7123895e": 477, "712e": [465, 496], "713": [431, 473], "7132e": 497, "71387207e": 475, "714": 473, "715": 497, "716": [96, 299, 300, 479], "716062": 486, "71693826": [466, 470, 483, 511], "717": 473, "71795506": 497, "7184": 497, "719": [431, 481], "7190994e": 477, "71944e": 443, "7195": 473, "719e": 473, "72": [417, 445, 473, 478, 497], "720": [461, 473], "7200": 464, "722": 481, "72217": 497, "722557": 543, "722557505166": 473, "723": 452, "723e": 473, "7240965e": 477, "725": 473, "725490196078432": 462, "727": 481, "72775": 497, "7284447e": 477, "729e": 452, "73": [443, 451, 497], "7303": 497, "731": 431, "731589446928548e": 495, "732e": [67, 473], "733": [67, 431], "734": 497, "7350250533013533": 483, "7350380e": 477, "7351418e": 477, "735e": 473, "736": [448, 572, 573], "737": 448, "738": [431, 473], "7385727e": 477, "739": 431, "7395744e": 477, "739e": 67, "73e": [473, 495], "74": [443, 454, 497], "740": 431, "742": 481, "743e": [444, 473], "74427": 458, "74465974e": 477, "74479": 452, "745098039215687": 462, "74542e": 443, "746": 431, "7471700e": 477, "7479085e": 477, "748": 473, "748259": 456, "74989420933": 475, "75": [67, 367, 444, 448, 467, 497], "750": 573, "751643891117176": 495, "75267735": 497, "753": [431, 449], "7537086e": 477, "754": [431, 487], "75408483": 497, "7555": 478, "7559": 497, "756": 473, "7567": 443, "7576e": 450, "7580410e": 477, "759": 431, "759312": 548, "7596682e": 477, "75e": [473, 496], "76": [459, 470, 479], "760": [442, 463], "7613": 410, "761c": 28, "762": 431, "762199399999986": 535, "763": 431, "7637308880733709": 483, "7638": 452, "763e": 452, "76419591747674": 467, "764576": 549, "7647": 497, "764705882352942": 462, "76473": 452, "7652512e": 477, "766": [431, 452], "7660168382": 473, "766d": 486, "767": 431, "76739": 473, "768000": [102, 474], "768048": 97, "7681656e": 477, "76837444": 468, "7684028": 497, "7692170e": 477, "76e": 481, "770": 67, "771667": 489, "77174": 452, "7718272408581743": 299, "771e": 473, "772": [431, 443], "77206": 497, "77218": 452, "773": 473, "7733e": [444, 473], "77351": 452, "774": [431, 464], "7743835449219": 448, "774e": 473, "775": [67, 481], "7752246942468283": 458, "7755386e": 477, "7760": 497, "7763307219821931": 299, "7765957e": 477, "77678": 443, "7769775": 486, "777": 431, "7771617763704126": 299, "77751797": 97, "777e": [67, 446], "777l": 35, "778": [431, 448, 473], "77827941": 479, "778279410038923": 479, "779": [449, 473], "7796942": 497, "779e": 448, "77e": [451, 473], "78": [479, 480, 488, 496], "780": [31, 124], "7800e": 448, "7803": 464, "7804888e": 477, "78083": [138, 139], "780e": [124, 467], "78181": 139, "78188": 452, "78188096": 97, "782": 487, "7827941": 479, "78279410038923": 479, "783": [431, 473, 497], "78332719": 458, "78333": 458, "783587001383003": 486, "783e": 458, "784": [432, 449], "7843137254901955": 462, "78499999999997": 531, "785": 531, "7853981633974483": 564, "787": [67, 169], "787169465401243e": 465, "7875405607868806": 483, "7876233e": 477, "788": 473, "7887840e": 477, "788e": 473, "789": 431, "78910994": 97, "7894": 458, "78952750835169": 467, "78e": 481, "79": [445, 473], "790": 431, "791": 432, "7913e": 448, "7922": 443, "793": [432, 452], "794": [467, 475], "7941697": 475, "79432823": 482, "7943282347": 475, "79469899": 458, "79470": 458, "794e": 452, "796": [432, 481], "797": 432, "797035": 560, "7972": 478, "798": 432, "798218": 443, "799": 448, "7990194e": 477, "7997221e": 477, "799999952316284": 473, "7c": 479, "7d": 473, "7e": [473, 481, 482], "7e955f": 413, "7m4w": 470, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 102, 105, 109, 110, 111, 115, 127, 139, 143, 144, 193, 200, 232, 234, 301, 374, 378, 381, 382, 391, 414, 415, 418, 420, 421, 425, 426, 427, 430, 431, 432, 435, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 504, 506, 515, 520, 524, 528, 537, 548, 556, 572], "80": [172, 450, 452, 474, 479, 487, 520, 547, 556], "800932": 473, "801": [497, 520], "801668796295": 473, "802": [442, 447, 448, 481, 497], "803": [448, 452, 535], "8031431e": 477, "8037638e": 477, "803921568627494": 462, "804": 481, "804492": 464, "80492": 139, "80571": 138, "8062607e": 477, "80683246": 477, "8071": 452, "807201": 497, "8075": [473, 497], "8075185": 473, "8084e": 456, "808687936570502e": 476, "80871364": 97, "8090746": 486, "809505": 473, "80982039": 477, "80e": 444, "81": [421, 444, 465, 537], "810": [432, 473], "810000": 464, "8100e": 444, "810e": 473, "811": 432, "8115337251905373e": 476, "812": [432, 442, 462, 463], "812075194992371e": 476, "8122169596532167e": 476, "8122425483643125e": 476, "8122e": 476, "812358724314062e": 476, "8129257829574434e": 476, "812951371538087e": 476, "813": 432, "814": 432, "815": [442, 452, 455, 467, 485], "8150": 497, "8157971601581226e": 476, "816": 432, "8160964882165554": 299, "81699e": 443, "816e": 473, "818388e": 497, "81847286": 468, "818e": 446, "819": 473, "81e": 537, "82": [67, 413, 456, 473, 496, 524], "820": 432, "8205513": 486, "820562952023891": 299, "820734654694367e": 470, "8222980e": 477, "822910": 564, "823": 448, "82352941176471": 462, "824": [134, 432, 481], "8241471833009617": 483, "825": [432, 443, 459, 473], "8256": 497, "826": 432, "826414166666": 94, "827": 432, "8272": 499, "82739": 452, "827e": 139, "829": [442, 447], "8290458e": 477, "8293": 497, "82946153": 497, "82e": 457, "83": [30, 67, 83, 85, 94, 102, 105, 109, 110, 169, 172, 187, 188, 197, 200, 448, 449, 450, 452, 457, 465, 474, 478, 479, 480, 488, 489, 495, 496, 515, 518, 520, 521, 524], "830": 432, "8300": 497, "831": 432, "832": 432, "83242471": 477, "833": [432, 442, 449, 452, 557], "833333333336": 468, "834": 432, "8341884287660133": 483, "8349780e": 477, "835": 432, "835e": [449, 458], "835fals": 446, "836": [432, 468, 473], "836731": 473, "8369650e": 477, "837": [432, 481], "8377268e": 477, "838": 452, "8383396349722769": 299, "84": [24, 139, 413, 442, 448, 450, 458, 473, 481, 524], "840": [432, 452], "841": 473, "84196311": 97, "842": [432, 473], "84233": 452, "842x": 140, "843": [59, 443, 468], "843137254902004": 462, "843863242310971e": 495, "843e": 67, "8441040e": 477, "844770648146": 94, "8449575657133206": 299, "845": 433, "84529": 473, "8455480e": 477, "845693": 443, "846": [452, 473, 572], "8468e": 450, "847": 432, "8475576e": 477, "8475650e": 477, "84e": 456, "85": [87, 91, 439, 458, 528, 529], "851": 432, "85157506": 497, "8515948e": 477, "85188496e": 477, "85202": 497, "85287": 487, "852e": 473, "854": 432, "854166666664": 468, "85416667": 466, "85469291": 97, "855": [432, 442, 485], "85527": 458, "85527359": 458, "8555500e": 477, "85624": 453, "85625": 453, "8568": 497, "856e": 473, "8570719e": 477, "85722435185": 473, "858": 432, "858e": 473, "859": [432, 448], "85900": 458, "85900392": 458, "85925": 497, "8593054": 473, "859e": 452, "85e": 473, "86": [446, 448, 449, 452, 479, 497, 508], "860": 473, "861": 497, "86111111": 466, "861150": 446, "8613613e": 477, "86178": 138, "8620": 464, "8623": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "862745098039234": 462, "864": [432, 497], "865": [432, 452], "86676": 487, "8669": 443, "8672": 458, "86793518066406": 445, "868": [432, 473], "86831929": 97, "8699": 443, "8699165e": 477, "87": [67, 458, 467, 479], "870": [67, 432], "8704": 452, "871": 432, "871730083414263e": 470, "872": [432, 452], "873": 449, "8733348": 486, "8736082200157": 459, "873659477745188": 483, "874": 445, "875": 432, "876": 481, "8769240e": 477, "876e": 452, "87710186": 97, "877563": 473, "878": [473, 481], "87897": 458, "87897418": 458, "8799800e": 477, "87e": 21, "88": [413, 435, 450, 458, 459, 470, 473, 479, 497], "88027233618995": 467, "880e": 452, "881": [432, 443, 452], "88113384": 454, "8815212313941426": 483, "882": 67, "882352941176466": 462, "883": 432, "8834862e": 477, "883e": 67, "884": [432, 447], "88470839": 482, "885": 432, "886": 473, "8865": 497, "88781": 452, "888": 432, "8885138e": 477, "889": 473, "8893600e": 477, "88e": [446, 473], "89": [33, 479], "8908866e": 477, "8909e": 467, "890e": 67, "892": 481, "89243456": 497, "8926": 497, "89287": 443, "893": 432, "894": 446, "8943121e": 477, "89492144e": 476, "894960": 550, "895": 468, "8954039e": 477, "89595846": 482, "89709472": 497, "898": 432, "8986348363207728": 483, "89873": 458, "8989213": 458, "898e": [452, 473], "899": [67, 454], "8999": 458, "899a": 274, "89e": 474, "89xnu7fc": 470, "8e": [446, 456, 459, 461, 481, 487, 556], "9": [16, 31, 33, 35, 67, 83, 84, 87, 90, 91, 104, 123, 138, 193, 232, 234, 331, 338, 371, 378, 379, 383, 391, 410, 416, 418, 429, 432, 434, 437, 439, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 523, 530, 534, 535, 536, 543, 559, 567, 572], "90": [57, 67, 397, 451, 457, 458, 473, 479, 482, 499], "900": 473, "9002269877996247": 468, "900269": 477, "9023670e": 477, "90242058e": 474, "9032163": 86, "904": [497, 536], "905": 473, "9053655e": 477, "9053906e": 477, "906": [432, 473], "90605275e": 487, "90677811e": 475, "90685": 452, "907": 473, "9074812e": 477, "9077294": 486, "90e": [102, 449, 456, 474], "91": [451, 479, 484, 524], "911": 432, "911552434768802e": 465, "912": 473, "912525e": 497, "912779907405": 473, "913196574074": 465, "913e": 452, "914": 67, "915": 473, "91507": [102, 474], "91612243652344": 445, "9163195e": 477, "916903": 539, "91719": 474, "918": 67, "918365": 473, "919": 432, "919e": 473, "91e": 481, "92": [139, 451, 452, 479, 486], "920": 448, "92052435e": 475, "9205875e": 477, "921": 449, "9215375e": 477, "92234009259": [410, 465], "924": 449, "9240e": 482, "92490": 452, "925106": 458, "9269494e": 477, "9277492e": 477, "928": 473, "9280475e": 477, "928103": 556, "929": [443, 449], "92960065298276": 495, "93": [67, 122, 124, 451, 452, 467, 479, 486], "93026": 473, "9303": [473, 497], "931": 297, "93128e": 443, "932": 432, "93271046296": 465, "933": 432, "9332549000000": 497, "9343": 443, "934769": 530, "935826709880043": 471, "936": 490, "937": [442, 447], "93702": 487, "9382336444241555": 483, "938e": [458, 473], "939": [285, 291], "9391360e": 477, "93988308": 97, "93e": 473, "94": [451, 473, 479, 486, 495, 497], "940e": 473, "940fals": 446, "94111838": 97, "941176470588236": 462, "94186555556": [410, 465], "943282347242818": 495, "944060876": 475, "9441e": 453, "9453950989269149": 483, "9462": 458, "946923": 269, "947": [442, 466, 469], "94722599": 458, "94723": 458, "947e": 452, "948683": 443, "9489822e": 477, "949": 481, "9499210e": 477, "94e": [458, 473], "95": [33, 67, 150, 156, 158, 159, 160, 162, 216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 451, 452, 458, 464, 467, 473, 474, 476, 479, 480, 486, 528, 573], "950": 432, "9500979841335693": 299, "95024543e": 476, "950e": 448, "952": 67, "9529719e": 477, "953": 481, "95421509259": 465, "95451985e": 124, "9546285068162436": 483, "95615": 443, "957": 67, "958": 442, "9580e": 450, "95883": 497, "959198": 473, "959d": [52, 53], "96": [413, 444, 451, 474, 479, 537], "9606540e": 477, "960784313725491": 462, "960891": 529, "9608912e": 477, "9619812963": 465, "9642e": 464, "966": [432, 442, 485], "96602": 453, "96719680": 454, "967546": 452, "9677107409819438": 299, "968": [448, 458], "96814": 497, "96833546296": [473, 487], "968488": 297, "969": 473, "9692e": 444, "969831": 528, "96e": 446, "96r": 479, "97": [451, 473, 477, 483, 496], "97003": 497, "97054": 452, "970e": 473, "97116": 458, "9721952295357764e": 470, "973": 473, "9730e": 457, "97369425926": 465, "974e": 473, "975": 432, "97529": 138, "97596": 452, "976": [432, 467], "97749": 458, "97749371": 458, "9776920e": 477, "979": [67, 432, 479], "97934": 452, "97978": 83, "97e": 473, "98": [83, 341, 445, 450, 451, 452, 456, 465, 467, 477, 495], "980": 67, "9803921568627443": 462, "98049": 452, "98149518519": 465, "9816452e": 477, "982075849517389e": 482, "98258": 452, "9833462074166": 473, "9834338e": 477, "983479": 540, "98359211196148547": 458, "98429": 452, "9845": 443, "9846e": 464, "9847406e": 477, "984e": 452, "985": [432, 446, 464], "985502122122975": 483, "9868440049211211": 495, "9876": 443, "98772": 138, "988": [432, 473, 481], "988409870698051e": 52, "9890": 497, "9897e": 467, "98e": 473, "99": [341, 451, 452, 453, 464, 475, 496, 497], "99004": 139, "991": 473, "9910796e": 477, "9912648e": 477, "9912712e": 477, "993": 445, "9931": 497, "994": 432, "99467": 139, "994e": 473, "995": 481, "9952623149688797": 495, "9969731e": 477, "997": 432, "9977859e": 477, "9978": 497, "998": 459, "99848e": 487, "99878762e": 475, "999": [50, 159, 162, 473], "99919925926": 234, "99993896484375": 448, "9999912037958": 458, "999999": 473, "99999994": 86, "9999999995": 473, "9999999997835": 445, "99999999999545": 470, "999999999997": 460, "9999999999977": 473, "9999999999978": 466, "9999999999998": 473, "99999999999994": 473, "99999999999999": [451, 473], "99e": 473, "9e": [444, 446, 473, 556], "9rmihbfb": 470, "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 122, 123, 124, 132, 133, 138, 139, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 213, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 282, 284, 292, 293, 301, 310, 363, 364, 365, 367, 368, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 412, 414, 418, 419, 420, 421, 422, 425, 427, 428, 431, 432, 433, 434, 436, 438, 439, 440, 443, 445, 450, 452, 456, 458, 459, 462, 465, 466, 467, 468, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 494, 496, 497, 499, 507, 508, 509, 511, 512, 520, 521, 523, 524, 526, 528, 565, 566, 569, 570, 573], "AND": [480, 481], "AS": 403, "And": [274, 374, 377, 392, 394, 400, 405, 445, 446, 448, 449, 456, 460, 462, 467, 474, 476, 479, 480, 482, 486, 495, 496, 497], "As": [83, 301, 331, 374, 375, 377, 382, 386, 387, 388, 390, 392, 400, 401, 403, 410, 415, 434, 443, 444, 445, 448, 449, 450, 452, 453, 454, 458, 460, 461, 465, 466, 467, 470, 471, 472, 473, 474, 476, 478, 479, 482, 484, 487, 489, 495, 497, 511, 520, 573], "At": [258, 388, 391, 400, 401, 404, 418, 460, 479, 486, 516, 569], "But": [374, 379, 382, 388, 393, 401, 404, 410, 434, 448, 449, 476, 484, 486, 495, 571], "By": [19, 20, 26, 50, 65, 87, 91, 101, 102, 105, 109, 110, 121, 125, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 166, 169, 176, 186, 188, 189, 190, 192, 198, 201, 202, 214, 215, 217, 218, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 243, 244, 245, 247, 248, 249, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 371, 374, 400, 401, 402, 419, 420, 422, 460, 461, 466, 471, 476, 479, 484, 496, 518, 522, 528, 529, 530, 574], "FOR": [133, 292], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 105, 109, 110, 117, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 146, 147, 148, 154, 159, 162, 169, 174, 175, 176, 179, 180, 182, 183, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 259, 260, 262, 263, 264, 266, 270, 271, 283, 285, 289, 291, 298, 304, 319, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 415, 416, 417, 419, 420, 421, 422, 425, 432, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 462, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 495, 496, 497, 499, 506, 507, 509, 511, 521, 523, 524, 529, 534, 566, 570, 571, 573, 574, 575], "IN": [92, 100, 242], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 119, 121, 122, 123, 124, 125, 127, 129, 132, 133, 137, 138, 141, 146, 147, 148, 154, 157, 159, 162, 163, 165, 166, 169, 171, 172, 175, 176, 179, 180, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 207, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 281, 298, 301, 313, 314, 319, 360, 363, 367, 368, 369, 370, 374, 375, 376, 377, 379, 381, 382, 387, 388, 390, 391, 392, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 433, 434, 435, 443, 445, 446, 448, 450, 451, 453, 456, 458, 461, 464, 465, 466, 467, 468, 470, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 497, 509, 511, 522, 524, 530, 532, 545, 571, 572, 573, 574], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 101, 103, 108, 124, 146, 165, 188, 190, 193, 196, 202, 210, 212, 270, 281, 314, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 410, 415, 416, 417, 418, 419, 420, 421, 422, 425, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 487, 488, 495, 496, 497, 507, 509, 511, 516, 519, 520, 521, 523, 524, 525, 528, 529, 534, 547, 566, 569, 570, 571, 572, 573, 574, 575], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 109, 110, 111, 113, 115, 122, 138, 146, 150, 157, 158, 159, 160, 162, 172, 175, 179, 180, 185, 189, 190, 192, 194, 197, 198, 201, 202, 204, 214, 215, 218, 221, 222, 224, 225, 226, 230, 234, 236, 237, 239, 243, 245, 247, 254, 258, 259, 261, 262, 263, 264, 267, 271, 283, 287, 289, 290, 309, 323, 328, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 409, 411, 415, 416, 417, 418, 422, 425, 427, 428, 429, 434, 436, 438, 439, 440, 443, 449, 454, 457, 459, 461, 464, 468, 471, 473, 474, 475, 476, 478, 479, 480, 482, 484, 486, 487, 488, 489, 495, 496, 497, 499, 500, 507, 508, 510, 511, 515, 516, 518, 520, 524, 538, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555, 568, 569, 570, 571, 572, 573, 575], "Its": [146, 386, 400, 401, 425, 427, 462, 466, 484, 496, 513, 514, 515, 517], "NOT": 480, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 385, 395, 398, 399, 433, 435, 441, 462, 470, 473, 476, 478, 479, 497], "Not": [105, 109, 110, 191, 197, 199, 382, 556], "ON": [102, 105, 131, 176, 177, 178, 186, 372, 380, 427, 443, 444, 448, 451, 454, 458, 465, 466, 468, 476, 478, 484, 511, 520, 572, 574], "OR": [102, 109, 474, 480, 481], "Of": [374, 377, 410, 456, 474, 479, 487, 571, 574], "On": [59, 164, 170, 171, 174, 283, 290, 297, 374, 375, 380, 382, 389, 390, 403, 405, 406, 407, 408, 429, 456, 457, 476, 491, 573], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 102, 105, 109, 110, 220, 242, 327, 374, 375, 380, 382, 383, 384, 385, 388, 390, 391, 392, 400, 439, 445, 449, 454, 465, 478, 479, 480, 495, 497, 520, 524, 547, 571, 573], "Ones": 301, "Or": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 375, 393, 394, 449, 456, 470, 474, 475, 479, 486, 487, 509], "Such": [386, 477, 515], "THE": [133, 292], "That": [16, 19, 20, 84, 90, 104, 123, 207, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 374, 375, 379, 388, 391, 394, 476, 497, 571], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 170, 171, 175, 176, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 274, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 297, 301, 313, 319, 321, 322, 325, 341, 357, 358, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 411, 414, 415, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 491, 495, 496, 497, 499, 500, 501, 502, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 528, 530, 532, 533, 534, 537, 543, 545, 547, 556, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576], "Their": 480, "Then": [67, 102, 107, 109, 377, 379, 384, 387, 389, 390, 391, 392, 398, 407, 445, 448, 456, 457, 460, 464, 465, 476, 480, 482, 484, 496], "There": [87, 91, 138, 374, 375, 379, 380, 381, 383, 388, 389, 390, 391, 392, 393, 394, 395, 398, 401, 404, 406, 407, 433, 458, 462, 471, 472, 473, 474, 476, 477, 478, 480, 481, 488, 499, 507, 508, 511, 524], "These": [77, 95, 194, 273, 374, 375, 379, 380, 385, 387, 388, 389, 390, 394, 395, 400, 417, 419, 420, 421, 425, 433, 439, 443, 457, 459, 460, 467, 471, 472, 474, 477, 479, 482, 483, 488, 491, 499, 516, 521, 523, 524, 572, 573, 574], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 104, 108, 121, 123, 125, 129, 188, 200, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 273, 283, 364, 365, 376, 377, 381, 382, 385, 386, 387, 389, 390, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 420, 421, 425, 427, 433, 434, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 491, 495, 497, 507, 508, 509, 512, 516, 518, 520, 521, 528, 569, 571, 572, 573], "With": [83, 374, 383, 384, 400, 421, 434, 484, 507, 573], "_": [102, 109, 127, 230, 249, 374, 388, 398, 400, 448, 451, 454, 472, 473, 476, 481, 484, 507, 520], "_0": [50, 51], "_1": [105, 110, 508], "_2": [105, 110], "__all__": 374, "__array__": 301, "__array_ufunc__": [450, 460, 489, 559], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 313, 380, 385, 402, 421], "__class__": [374, 398, 472, 505], "__dict__": [16, 84, 90, 104, 123, 374], "__enter__": 352, "__eq__": 427, "__exit__": 352, "__fields__": [16, 84, 90, 104, 123, 401], "__getitem__": [384, 385, 386], "__init__": [16, 84, 90, 104, 123, 197, 270, 374, 380, 386, 398, 436], "__int__": 319, "__len__": 384, "__main__": [253, 374, 484, 493, 571], "__name__": [374, 454, 465, 466, 467, 470, 472, 493, 505, 571], "__neq__": 427, "__pydantic_extra__": [16, 84, 90, 104, 123], "__pydantic_fields_set__": [16, 84, 90, 104, 123], "__repr__": [374, 420, 434], "__str__": [374, 386, 401, 417], "__subclasses__": 472, "__version__": 409, "_basemodel__context": [16, 84, 90, 104, 123], "_build": [375, 404, 511], "_check_interv": 439, "_compute_flux_spati": 425, "_covari": [220, 242], "_data": 398, "_dataset": 375, "_dom_class": [456, 464, 479, 495, 496], "_energy_t": 398, "_err": 470, "_errn": [125, 126, 129, 130], "_errp": [125, 126, 129, 130], "_evaluate_timevar_sourc": 439, "_f_cash_root_cython": 296, "_factr": 476, "_fields_set": [16, 84, 90, 104, 123], "_i": 127, "_k": [102, 109, 507], "_l": 507, "_lat": 374, "_lon": 374, "_map": 367, "_model": 122, "_new_attribut": 374, "_old_attribut": 374, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 104, 123], "_phi": 374, "_prior": 402, "_propagate_error": 424, "_reco": 374, "_repr_html_": 374, "_row_index": 69, "_sample_coord_time_energi": 439, "_scan": 476, "_time_group": 398, "_time_t": 398, "_true": 374, "_type": [402, 484], "_types_namespac": [16, 84, 90, 104, 123], "_was_": [16, 84, 90, 104, 123], "_wc": 535, "_weight": 402, "a_": [105, 110, 149, 513, 516, 573], "a_off": 573, "a_on": 573, "a_scan": 484, "aa": [87, 91, 301, 400], "aaguasca": 436, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 117, 133, 140, 149, 202, 210, 212, 239, 273, 274, 283, 290, 292, 472, 473], "abc": [18, 56, 99, 120, 168, 187, 192, 478], "abcmeta": 478, "abdalla2018": [520, 521, 570], "abeysekara": 59, "abil": [398, 484], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 389, 392, 445, 464, 465, 466, 484, 491, 571], "about": [11, 13, 16, 84, 90, 104, 123, 144, 149, 229, 234, 331, 374, 377, 379, 383, 390, 391, 393, 394, 395, 399, 400, 402, 403, 404, 409, 410, 429, 430, 434, 435, 436, 444, 446, 452, 453, 454, 457, 458, 460, 473, 477, 479, 482, 487, 496, 497, 507, 508, 571, 574], "abov": [29, 44, 52, 53, 83, 121, 123, 124, 127, 131, 132, 138, 139, 164, 199, 363, 365, 374, 375, 380, 383, 384, 386, 388, 390, 391, 392, 393, 394, 398, 406, 407, 410, 443, 452, 458, 460, 461, 462, 465, 468, 470, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 495, 505, 507, 508, 515, 518, 524, 570, 571, 572, 573, 574], "abramowski": 149, "abruptli": [374, 399], "abs_path": 309, "absenc": [389, 454, 478, 480, 520, 572], "absolut": [82, 91, 106, 143, 144, 145, 146, 149, 151, 153, 156, 161, 189, 190, 192, 194, 198, 201, 202, 305, 331, 351, 355, 509], "absolute_tim": 575, "absopt": 392, "absorb": [271, 384, 397, 432, 537], "absorbedspectralmodel": [419, 432], "absorbt": 397, "absorpt": [222, 392, 422, 432, 442, 447, 491, 525, 557], "abstract": [56, 57, 59, 99, 120, 133, 160, 168, 173, 187, 189, 192, 201, 283, 292, 385, 421, 523], "abstractsetintstr": [16, 84, 90, 104, 123], "acada": 400, "academ": [134, 297], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 105, 106, 110, 121, 122, 124, 164, 181, 186, 188, 189, 190, 192, 200, 201, 202, 220, 242, 284, 372, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 426, 430, 439, 443, 444, 449, 450, 451, 454, 458, 461, 474, 478, 479, 487, 507, 523, 529, 547, 572, 573], "acceptance_off": [105, 106, 110, 121, 122, 124, 164, 174, 386, 443, 445, 448, 451, 454, 507, 573], "acceptance_on": [121, 122, 124], "acceptang": 121, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 102, 157, 187, 188, 197, 200, 290, 309, 374, 382, 383, 384, 385, 387, 390, 398, 404, 406, 409, 414, 415, 422, 429, 430, 432, 433, 439, 440, 446, 448, 449, 450, 456, 470, 473, 476, 477, 481, 482, 486, 489, 495, 496, 497, 506, 511, 522, 523, 524, 569], "accessor": 479, "accident": [487, 571], "accomplish": 475, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 102, 105, 109, 110, 117, 122, 141, 147, 157, 164, 188, 194, 210, 212, 298, 363, 384, 385, 388, 389, 392, 398, 400, 419, 428, 440, 454, 465, 474, 478, 482, 483, 491, 507, 508, 511], "accordingli": [386, 400, 416, 422, 480], "account": [102, 105, 109, 110, 121, 122, 133, 166, 182, 220, 242, 258, 282, 284, 290, 349, 382, 387, 390, 398, 400, 421, 438, 440, 442, 443, 445, 447, 448, 450, 454, 456, 462, 467, 468, 475, 476, 478, 480, 491, 496, 507, 509, 572, 573], "accur": [392, 435, 456, 476, 518], "accuraci": [388, 476, 511], "aceptance_off": 386, "acero": [392, 415, 417, 419, 422, 425, 427, 432, 434, 440], "achiev": [16, 84, 90, 104, 117, 123, 164, 364, 365, 374, 383, 384, 385, 386, 387, 388, 390, 397, 400, 422, 479, 482, 483, 521], "acknowledg": [377, 400, 411], "acquir": 410, "acquisit": 570, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 117, 374, 383, 386, 404, 459, 467, 481, 487, 507, 523, 532, 570], "act": [91, 390, 481, 534], "action": [164, 379, 384, 390, 400, 404, 425, 467], "activ": [91, 290, 377, 391, 405, 406, 408, 409, 410, 419, 436, 471, 511], "actual": [177, 349, 350, 351, 373, 374, 375, 379, 383, 385, 387, 389, 390, 398, 399, 401, 403, 451, 461, 464, 466, 474, 475, 476, 478, 479, 480, 484, 487, 488, 496, 497, 518, 520, 570, 571, 573], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 102, 104, 105, 109, 110, 113, 114, 116, 123, 124, 189, 190, 192, 197, 198, 201, 202, 374, 375, 377, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 398, 400, 414, 415, 416, 418, 419, 420, 422, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 450, 456, 457, 477, 478, 481, 482, 483, 484, 488, 507, 524, 574], "adapt": [117, 164, 207, 383, 384, 387, 388, 393, 394, 396, 397, 400, 403, 410, 415, 416, 418, 419, 420, 422, 423, 425, 428, 431, 432, 434, 436, 438, 439, 440, 474, 477, 479, 480, 518, 521], "adaptiveringbackgroundestim": [174, 380], "adaptiveringbackgroundmak": [167, 419, 521], "adass": 394, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 143, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 162, 166, 189, 190, 192, 196, 198, 201, 202, 208, 220, 242, 258, 298, 343, 362, 371, 373, 374, 375, 377, 379, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 400, 402, 403, 406, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 451, 456, 457, 460, 464, 465, 468, 474, 477, 478, 479, 480, 482, 484, 486, 497, 501, 502, 511, 524, 539, 571, 574], "add_artist": [482, 528, 529], "add_cbar": [102, 105, 109, 110, 124, 143, 144, 146, 149, 150, 151, 156, 157, 158, 160, 189, 190, 192, 198, 201, 202, 362, 452, 453, 454, 456, 458, 464, 468, 472, 474, 477, 478, 479, 481, 482, 487, 488, 495, 496, 524, 527, 528, 529, 532, 533, 535], "add_column": [87, 91], "add_enabled_unit": [443, 451, 453, 456, 458, 464, 467, 486], "add_index": [87, 91], "add_loc": 374, "add_row": [87, 91], "add_subplot": 362, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 102, 104, 105, 109, 110, 113, 121, 123, 125, 130, 161, 189, 190, 192, 195, 198, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 374, 377, 378, 379, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 403, 404, 405, 406, 407, 416, 417, 419, 421, 422, 425, 426, 433, 434, 436, 439, 440, 446, 450, 462, 468, 473, 474, 475, 476, 479, 481, 482, 484, 486, 487, 496, 497, 507, 509, 511, 518, 523, 524, 568, 574], "addition": [130, 386, 474, 476, 479, 481, 482], "address": [383, 386, 387, 388, 390, 400, 484, 510], "adequ": 197, "adher": 377, "adjac": [141, 194, 425, 466, 479, 520], "adjust": [16, 67, 189, 190, 192, 198, 201, 202, 383, 385, 397, 449, 471, 474, 475, 482, 483, 495, 511, 518, 570], "admit": 394, "adonath": 380, "adopt": [37, 387, 390, 395, 450, 460, 461, 472], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 133, 149, 239, 273, 274, 283, 290, 292], "adult": 374, "advanc": [386, 390, 391, 394, 402, 406, 477, 479, 511, 570, 571], "advantag": [382, 388, 391, 398, 425, 479, 484, 547, 571], "advanteg": 386, "advertis": 403, "advic": [374, 400], "advis": [375, 400, 476, 484, 491], "advoc": 374, "aeff": [16, 82, 87, 88, 105, 110, 149, 175, 183, 384, 386, 387, 421, 422, 445, 448, 449, 450, 453, 454, 456, 458, 466, 470, 477, 478, 486, 488, 489, 495, 496, 513, 518, 520, 521, 570], "aeff2d": 148, "aeff_2d": [82, 87, 149, 486, 489], "aeff_3d": 477, "aeff_ev": 477, "aeff_new": 477, "aeff_perc": [175, 445, 448, 449, 458, 466, 470, 478, 488, 520], "aegi": 222, "af": 370, "affect": [133, 374, 382, 386, 388, 399, 416, 417, 428, 437, 444, 484], "affili": [388, 400, 436], "afmhot": [481, 497], "aforement": 400, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 102, 104, 105, 109, 123, 159, 162, 290, 313, 331, 355, 358, 374, 377, 379, 382, 383, 385, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 410, 414, 421, 423, 424, 425, 427, 433, 435, 436, 437, 446, 456, 466, 470, 471, 476, 479, 481, 486, 488, 489, 511, 571, 575], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 305, 374, 501], "again": [102, 105, 109, 110, 159, 377, 384, 386, 388, 390, 395, 401, 405, 420, 421, 424, 431, 436, 446, 448, 449, 456, 461, 462, 479, 482, 484, 487, 495, 497, 524, 571], "against": [16, 84, 90, 104, 123, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 200, 201, 202, 375, 377, 391, 397, 404, 473, 475, 487, 495, 506, 509], "agent": 390, "agglom": 13, "aggreg": 401, "agil": 387, "agn": [134, 288, 388, 448, 465, 467, 471, 486], "agnost": 476, "ago": 381, "agre": [191, 194, 377, 379, 388, 400], "agreement": [374, 377, 395, 468], "aguasca": [427, 436, 437, 438, 439], "aharonian": 459, "ahead": [388, 414], "ahelp": 207, "aim": [374, 383, 384, 400, 456, 460, 472, 483, 499, 570], "air": 486, "ait": [188, 189, 190, 493], "aitoff": 388, "aka": 497, "al": [26, 33, 59, 101, 133, 134, 149, 222, 289, 290, 292, 297, 384, 452, 459, 471, 499, 570], "albert": 570, "albert2007": 570, "alexi": [422, 425], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 117, 132, 164, 207, 283, 374, 380, 386, 387, 388, 393, 401, 417, 422, 430, 431, 432, 452, 471, 475, 476, 488, 509, 523, 569, 573], "alia": [16, 56, 84, 90, 104, 123, 377, 497], "alias": [16, 56, 84, 90, 104, 123], "align": [87, 91, 100, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 158, 160, 161, 188, 189, 190, 192, 194, 198, 200, 201, 202, 374, 477, 480, 482], "alisha": 427, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 102, 103, 104, 105, 107, 108, 109, 110, 121, 122, 123, 124, 125, 129, 130, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 163, 169, 176, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 280, 346, 347, 348, 349, 350, 351, 361, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 448, 449, 450, 453, 454, 456, 458, 459, 460, 464, 465, 467, 468, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 501, 507, 509, 511, 520, 522, 523, 524, 525, 547, 568, 571, 572, 573], "all_quant": [122, 124], "allclos": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 189, 190, 191, 192, 194, 198, 199, 201, 202, 349], "alloc": [190, 198, 202], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 104, 117, 122, 123, 124, 131, 132, 159, 162, 188, 193, 195, 324, 374, 375, 377, 379, 380, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 416, 418, 419, 420, 421, 422, 425, 427, 434, 435, 436, 439, 443, 448, 459, 467, 474, 475, 476, 477, 478, 479, 480, 496, 507, 509, 511, 518, 523, 524, 568, 569, 571, 576], "allow_extra": 193, "allow_pickl": [16, 84, 90, 104, 123], "allowed_channel": [26, 472], "allski": [83, 479], "alma": 393, "almeida": 422, "almost": [373, 375, 377, 388, 487, 497], "alon": 379, "along": [68, 101, 122, 124, 128, 141, 143, 144, 145, 146, 149, 150, 151, 153, 156, 157, 158, 160, 161, 189, 190, 192, 198, 200, 201, 202, 288, 289, 290, 292, 312, 313, 323, 333, 334, 383, 384, 398, 436, 439, 453, 462, 473, 474, 477, 478, 481, 482, 508, 523, 524, 540, 570], "alpha": [21, 27, 28, 48, 102, 105, 109, 110, 121, 122, 124, 164, 186, 207, 225, 226, 235, 236, 237, 250, 284, 295, 298, 371, 372, 386, 397, 399, 425, 432, 443, 444, 445, 446, 448, 450, 451, 454, 456, 457, 461, 468, 473, 476, 484, 486, 528, 537, 539, 541, 543, 545, 546, 547, 556, 562, 563, 572, 573, 574], "alpha_": [105, 110], "alpha_1": [105, 110], "alpha_2": [105, 110], "alpha_norm": [222, 397, 444, 537], "alphabet": [391, 400, 415, 416, 417, 418, 419, 420, 421, 422, 425], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 207, 266, 267, 268, 270, 374, 380, 381, 382, 385, 386, 387, 388, 389, 391, 394, 395, 396, 398, 401, 403, 404, 434, 444, 446, 450, 452, 461, 468, 472, 473, 474, 479, 480, 481, 482, 486, 487, 488, 497, 499, 524, 535], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 117, 121, 122, 124, 125, 138, 140, 161, 166, 172, 187, 194, 196, 197, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 281, 301, 309, 314, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 425, 433, 434, 435, 439, 443, 444, 445, 448, 449, 450, 451, 452, 456, 458, 459, 460, 461, 462, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 495, 496, 499, 507, 508, 509, 510, 511, 518, 520, 523, 524, 547, 550, 568, 570, 571, 572, 573, 575], "alt": [83, 85, 88, 94, 95, 374, 575], "alt_pnt": 91, "altaz": [83, 85, 94, 152, 374, 477, 575], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 280, 373, 374, 377, 379, 383, 407, 425, 444, 448, 450, 452, 459, 473, 476, 477, 479, 481, 486, 507, 508, 571], "although": [374, 387, 388, 389, 391, 394, 398, 476, 486, 533, 534, 568, 575], "altitud": 445, "alwai": [77, 83, 87, 91, 146, 194, 197, 204, 210, 212, 228, 374, 375, 377, 380, 381, 382, 384, 385, 386, 388, 391, 399, 400, 407, 414, 421, 436, 437, 439, 451, 452, 456, 464, 472, 476, 478, 479, 481, 483, 484, 491, 509, 523, 524], "am": 383, "ambigu": [388, 433], "amend": 377, "among": [82, 87, 91, 102, 105, 109, 110, 390, 394, 395, 397, 402, 422, 476, 570], "amount": [381, 388, 402, 511], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 257, 564], "ampl_2": [150, 477], "ampl_3": [150, 477], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 101, 125, 130, 132, 189, 190, 192, 201, 202, 207, 214, 221, 224, 226, 230, 237, 240, 247, 248, 249, 257, 259, 262, 263, 264, 274, 280, 293, 385, 386, 389, 397, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 481, 482, 486, 487, 495, 496, 497, 509, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 541, 542, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 573], "amplitude_err": 470, "amplitude_maximum_signific": 471, "amplitude_maximum_vari": 471, "amplitude_ref": 468, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 115, 122, 123, 124, 125, 126, 127, 129, 130, 132, 137, 138, 139, 144, 146, 147, 148, 149, 151, 154, 157, 159, 161, 162, 165, 169, 172, 174, 177, 179, 180, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 276, 283, 288, 290, 299, 301, 305, 319, 330, 334, 352, 358, 364, 365, 367, 370, 373, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 410, 411, 414, 415, 418, 419, 420, 421, 422, 425, 427, 428, 429, 432, 433, 434, 436, 437, 439, 440, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 499, 501, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 520, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574], "anaconda": [391, 405, 406], "analog": [87, 91, 189, 190, 192, 198, 201, 202, 524], "analogi": 395, "analys": [82, 373, 374, 383, 384, 385, 386, 388, 392, 394, 396, 397, 402, 410, 411, 417, 418, 419, 421, 422, 432, 434, 437, 448, 449, 456, 466, 467, 472, 473, 480, 482, 486, 487, 495, 496, 499, 507, 571], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 102, 104, 105, 109, 110, 114, 116, 147, 148, 154, 159, 162, 171, 175, 373, 374, 375, 378, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 401, 404, 405, 406, 407, 410, 411, 414, 415, 416, 418, 419, 420, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 442, 444, 446, 447, 452, 453, 454, 455, 459, 460, 462, 463, 464, 467, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 496, 497, 499, 509, 511, 512, 516, 518, 519, 520, 521, 524, 550, 568, 570, 571, 573], "analysis3d": 435, "analysis_1": [442, 495, 498], "analysis_1d": 465, "analysis_2": [375, 442, 496, 498], "analysis_3d": [434, 442, 456, 463, 465], "analysis_joint": 456, "analysis_mwl": [442, 457, 463], "analysis_stack": 456, "analysisconfig": [15, 375, 449, 453, 454, 456, 465, 495], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 149, 150, 158, 160, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 387, 392, 440, 475, 477, 482, 509, 530, 574], "analyz": [133, 292, 384, 488, 570], "andrea": 387, "andrew": 434, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 102, 105, 114, 116, 117, 121, 128, 132, 143, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 162, 165, 172, 173, 175, 177, 187, 188, 190, 195, 197, 200, 202, 203, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 268, 270, 273, 329, 361, 374, 380, 388, 390, 397, 401, 413, 415, 416, 417, 434, 443, 445, 448, 451, 457, 460, 461, 466, 470, 473, 479, 480, 482, 483, 486, 487, 511, 516, 520, 523, 524, 528, 529, 530, 533, 534, 570], "angle_incr": 172, "angular": [23, 102, 105, 114, 116, 127, 147, 148, 154, 159, 162, 165, 190, 197, 200, 202, 221, 229, 232, 268, 305, 308, 374, 390, 438, 450, 461, 468, 516, 517, 570], "angular_extens": 41, "angular_s": 524, "angular_separ": [397, 438, 440, 482], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 104, 119, 123, 129, 148, 171, 189, 190, 192, 197, 198, 200, 201, 202, 301, 324, 359, 373, 374, 375, 377, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 400, 401, 403, 406, 407, 408, 409, 410, 414, 415, 433, 434, 435, 440, 449, 458, 459, 462, 465, 468, 470, 474, 478, 479, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 499, 508, 509, 521, 523, 524, 539, 571, 575], "ann": [23, 433], "anna": 374, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 436, 482, 499], "annoi": [374, 571], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 363, 401, 528], "announc": [374, 379, 381, 388, 390, 393, 395, 397, 399, 400, 403, 404], "annuli": [462, 524], "annulu": [126, 333, 524], "anonym": 377, "anoth": [19, 20, 26, 83, 86, 87, 91, 102, 105, 109, 110, 147, 148, 149, 154, 159, 161, 162, 191, 194, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 374, 388, 389, 390, 392, 394, 395, 398, 401, 405, 406, 408, 410, 419, 434, 468, 474, 479, 480, 482, 524, 571], "another_posit": 520, "answer": [476, 511], "anti": [479, 480], "anticip": 383, "anymor": 436, "anyon": [379, 381, 486], "anyth": [146, 390, 571], "anytim": [377, 416], "anywai": [377, 388], "anywher": [388, 391, 393, 507], "ap": [379, 391, 399], "apart": 389, "apertur": 570, "api": [228, 378, 380, 383, 384, 385, 386, 387, 388, 390, 393, 394, 395, 399, 400, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 425, 429, 433, 434, 442, 445, 448, 449, 452, 458, 460, 466, 474, 479, 480, 481, 482, 485, 486, 487, 495, 497, 498, 509, 510, 518, 568, 569, 570, 571], "apj": [285, 291], "aplpi": 434, "apologis": [414, 415, 434], "app": [87, 91, 404, 410, 433], "appear": [87, 91, 374, 375, 382, 388, 401, 428, 439, 473], "append": [87, 91, 92, 100, 142, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 207, 242, 386, 387, 389, 420, 439, 445, 448, 450, 451, 456, 457, 458, 460, 466, 467, 468, 470, 474, 475, 476, 478, 481, 482, 483, 484, 520], "append_ax": [143, 144, 146, 149, 150, 151, 156, 158, 160, 202, 362], "appendix": [30, 132, 149, 239, 274, 293, 452], "appl": [406, 408, 410], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 105, 109, 110, 111, 114, 115, 116, 117, 121, 124, 125, 129, 132, 146, 147, 148, 154, 159, 161, 162, 166, 172, 175, 176, 189, 190, 192, 193, 197, 198, 200, 201, 202, 210, 212, 220, 228, 242, 258, 271, 281, 282, 283, 284, 313, 314, 359, 363, 371, 374, 380, 381, 384, 385, 387, 389, 392, 398, 399, 400, 422, 427, 432, 433, 434, 435, 439, 443, 448, 450, 460, 466, 467, 468, 470, 474, 475, 478, 479, 480, 481, 482, 484, 486, 489, 496, 497, 509, 511, 518, 556, 569, 572], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 374, 385, 400, 402, 421, 471, 476, 523, 570], "apply_async": [321, 322], "apply_edisp": 440, "apply_hysteresis_threshold": 480, "apply_irf": [258, 421], "apply_mask": 195, "apply_psf": [385, 418], "apply_standard_scal": 96, "apply_threshold_sensit": 121, "apply_union": 204, "approach": [87, 91, 132, 374, 380, 382, 386, 390, 395, 398, 399, 401, 439, 443, 448, 478, 491, 570, 573], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 188, 189, 190, 192, 201, 202, 301, 309, 375, 450, 454, 456, 470, 479, 571], "approv": [380, 381, 382], "approx": [52, 53], "approxim": [101, 132, 175, 176, 188, 189, 190, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 282, 284, 312, 385, 388, 416, 443, 448, 476, 486, 509, 520, 529, 530, 533, 534], "appveyor": 430, "apr": [396, 412], "april": [394, 401, 421], "apt": 407, "aqfb1acp": 470, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 169, 170, 175, 176, 177, 182, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 283, 288, 292, 297, 301, 313, 319, 321, 333, 334, 349, 363, 365, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496, 497, 499, 500, 501, 502, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 528, 529, 537, 547, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576], "arakelian": 289, "arang": [117, 389, 452, 466, 470, 523], "arb": 484, "arbitrari": [195, 197, 198, 385, 397, 420, 433, 460, 474, 479, 484, 523, 524], "arbitrary_types_allow": [16, 84, 90, 104, 123, 401], "arbitrarytypemetadata": 401, "architectur": [406, 408], "archiv": [400, 489, 496], "arcsec": 172, "arctan": 388, "area": [82, 88, 105, 107, 148, 149, 164, 175, 176, 183, 190, 198, 200, 202, 374, 375, 385, 429, 431, 443, 448, 460, 468, 478, 488, 489, 516, 523, 524, 570], "areasc": [432, 434], "aren": [350, 374, 388, 393, 394, 405, 406, 408], "arf": [106, 107, 110, 193, 194, 197, 198, 448, 524], "arf_ob": 106, "arffil": 106, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 104, 109, 110, 123, 143, 144, 145, 149, 150, 151, 153, 156, 157, 158, 160, 161, 190, 191, 198, 215, 228, 240, 247, 248, 249, 324, 571], "arg_in_kwarg": 374, "argmax": 471, "argmin": 471, "argpars": [379, 571], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 101, 102, 104, 105, 108, 109, 110, 123, 124, 125, 127, 129, 132, 142, 143, 144, 145, 146, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 165, 175, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 281, 299, 301, 313, 319, 321, 322, 361, 362, 363, 367, 368, 369, 370, 371, 377, 380, 386, 389, 421, 422, 425, 427, 433, 439, 440, 452, 456, 461, 462, 476, 478, 479, 482, 483, 487, 496, 509, 511, 522, 523, 524, 547, 571], "aris": [379, 390], "arithmet": [215, 385, 435, 479, 480, 482, 539], "arjun": [432, 433], "arm": [33, 34, 38, 45, 429], "arm64": [406, 408], "armstrong": 433, "arnau": [427, 436, 437, 438, 439], "around": [56, 138, 165, 188, 190, 200, 202, 313, 388, 389, 450, 468, 472, 476, 480, 488, 497, 511, 520, 523, 524], "arpit": 432, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 101, 102, 109, 110, 117, 122, 124, 125, 126, 129, 130, 132, 133, 138, 139, 143, 144, 145, 146, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 210, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 268, 269, 270, 271, 272, 281, 282, 284, 286, 292, 297, 301, 312, 313, 314, 328, 329, 330, 334, 367, 368, 373, 374, 387, 388, 392, 398, 401, 410, 420, 433, 436, 438, 440, 450, 451, 460, 461, 468, 470, 473, 474, 476, 477, 479, 481, 482, 484, 486, 488, 489, 497, 523, 524, 531, 556, 559, 572, 573], "array_lik": [102, 109, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 285, 291, 298], "array_shap": [438, 440], "arriba": [426, 429, 430], "arriv": [219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 379, 387, 419, 420, 421, 460, 570, 574], "arrow": 569, "arrowprop": 528, "arrowstyl": 528, "artefact": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "arthmet": 385, "articl": [134, 140, 289, 297, 379, 445, 466], "artifact": [121, 190], "artifici": 460, "artist": [197, 220, 242, 528, 529], "arxiv": [64, 65, 175, 248, 249, 263, 264, 457, 472, 473, 554, 555], "as_arrai": [87, 91], "as_artist": [197, 198, 482, 524, 528, 529], "as_energy_tru": [187, 188, 197, 200], "as_plot_cent": [191, 194, 199, 470], "as_plot_edg": [191, 194, 199], "as_plot_label": [191, 194, 199], "as_plot_scal": 194, "as_plot_xerr": [191, 194, 199], "asanyarrai": 374, "ascii": [87, 91, 124, 374], "asid": 475, "asimov": 484, "asinh": 452, "asinha": 82, "ask": [375, 377, 379, 381, 388, 390, 391, 394, 400, 409, 465, 497, 511, 512, 571], "asmooth": [117, 118, 393, 420, 431, 434], "asmoothestim": 395, "asmoothmapestim": [118, 395, 420, 422, 425, 452, 511], "aspect": [377, 400, 512, 571, 576], "assert": [191, 193, 194, 199, 349, 350, 351, 377, 385, 397, 479], "assert_allclos": 374, "assert_equ": 374, "assert_nam": [191, 193, 194, 199], "assert_quantity_allclos": [374, 429], "assess": [448, 450, 471], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 103, 108, 109, 188, 258, 268, 370, 374, 383, 386, 389, 401, 403, 445, 464, 465, 474, 479, 482, 484, 496, 497, 523], "assist": 390, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 473, 497], "assoc2": [74, 75, 78, 497], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 473, "assoc_prob_lr": 473, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 102, 105, 122, 131, 133, 134, 135, 136, 147, 148, 159, 162, 179, 180, 185, 198, 269, 292, 301, 374, 380, 390, 398, 399, 400, 401, 402, 439, 440, 444, 445, 446, 448, 452, 457, 473, 474, 475, 478, 479, 481, 482, 484, 488, 497, 508, 509, 511, 524, 573], "association_catalog": [67, 473], "association_nam": [67, 473], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 101, 121, 122, 124, 132, 137, 140, 149, 161, 172, 186, 188, 189, 190, 192, 195, 199, 201, 202, 207, 264, 270, 273, 280, 328, 331, 374, 377, 386, 387, 389, 397, 398, 402, 410, 411, 443, 444, 445, 448, 450, 451, 454, 460, 461, 462, 464, 466, 472, 477, 479, 482, 484, 487, 501, 507, 509, 516, 568, 573], "assumpt": [72, 95, 102, 105, 109, 110, 117, 131, 140, 388, 398, 444, 516, 520, 572], "astri": 97, "astrisim": 387, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 125, 182, 189, 190, 192, 201, 202, 253, 271, 374, 375, 386, 393, 394, 398, 417, 426, 430, 434, 436, 440, 450, 472, 477, 479, 486, 500, 501, 503, 504, 505, 508, 570], "astro_dark_matt": [394, 442, 472, 485], "astromodel": 499, "astronom": [13, 388, 395, 433, 570], "astronomi": [11, 274, 373, 384, 388, 392, 404, 411, 432, 445, 448, 454, 458, 478, 486, 511, 520, 521, 568, 569, 570, 571, 572, 573, 575, 576], "astrophys": [6, 23, 305, 389, 511, 569, 570], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 102, 105, 109, 110, 114, 116, 117, 122, 124, 126, 128, 129, 132, 138, 139, 146, 148, 157, 159, 172, 186, 187, 188, 189, 190, 192, 193, 195, 197, 198, 199, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 233, 234, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 258, 259, 261, 262, 263, 264, 267, 269, 271, 272, 274, 283, 292, 299, 300, 301, 331, 350, 351, 360, 364, 365, 369, 373, 375, 376, 377, 379, 380, 381, 385, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 410, 411, 413, 417, 418, 419, 420, 424, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496, 497, 501, 503, 504, 505, 507, 508, 509, 511, 513, 515, 518, 520, 521, 522, 523, 524, 528, 529, 530, 531, 532, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 572, 575], "astropy_healpix": 383, "astropy_help": [374, 415, 416, 417], "astropy_introduct": 416, "astropy_timeseri": 389, "astropy_vers": 374, "astropydeprecationwarn": 460, "astyp": [87, 91], "asymetr": [101, 448], "asymmetr": [121, 125, 126, 129, 130, 132, 392, 415, 421, 440, 448, 484, 495, 509, 529], "asymmetri": 477, "asymptot": [573, 574], "atmospher": [389, 406, 411, 486], "atnf": 433, "atol": [86, 100, 129, 194, 199, 349, 351, 374], "atol_ax": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 200, 201, 202], "atom": 390, "atproduction_gamma": 26, "atreye": [386, 389, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 433, 434, 435, 436, 437, 438, 439, 440], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 220, 228, 242, 258, 268, 385, 395, 438, 467, 476, 481, 482, 571], "attempt": [16, 84, 90, 104, 123, 377, 388, 391], "attenu": 444, "attr": 374, "attract": 394, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 284, 301, 384, 386, 396, 401, 402, 415, 416, 419, 420, 421, 422, 425, 427, 429, 431, 433, 438, 439, 440, 446, 450, 460, 476, 478, 479, 480, 482, 497, 507, 523, 524, 573], "attributeerror": 374, "attrribut": 479, "aug": [387, 390, 391, 393, 412], "august": [381, 387, 390, 393, 458], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403], "authoris": 400, "authorship": 378, "auto": [77, 189, 190, 192, 201, 202, 375, 377, 385, 394, 420, 434, 476, 571], "autocorrel": 133, "autodiff": 392, "autogener": 394, "autograd": [385, 392], "autom": [11, 382, 390, 400, 403, 404, 427, 476, 571], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 104, 112, 123, 125, 129, 132, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 373, 374, 375, 377, 381, 382, 384, 385, 391, 394, 396, 400, 403, 414, 415, 421, 450, 458, 460, 476, 479, 571, 575], "automatis": 510, "autopep8": 374, "autoscal": [210, 211, 212, 213], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 101, 102, 105, 109, 110, 121, 122, 124, 125, 129, 130, 132, 142, 163, 169, 175, 176, 194, 207, 210, 212, 216, 217, 221, 222, 229, 232, 244, 246, 255, 256, 260, 266, 268, 270, 274, 325, 362, 374, 377, 380, 381, 382, 383, 385, 386, 387, 388, 391, 392, 394, 401, 404, 405, 406, 407, 408, 409, 415, 419, 420, 421, 425, 428, 432, 434, 436, 439, 444, 448, 449, 452, 470, 475, 476, 478, 480, 482, 486, 487, 491, 495, 497, 499, 501, 502, 508, 510, 511, 513, 514, 515, 517, 525, 537, 569, 571, 573], "available_hdu": 88, "available_irf": 88, "available_method": [166, 175], "available_quant": [122, 124, 452, 475], "available_select": [169, 176], "available_stat_typ": 101, "averag": [19, 102, 105, 109, 110, 169, 176, 179, 180, 182, 183, 425, 444, 445, 448, 507], "averageaz": [460, 461], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 121, 169, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 283, 374, 375, 380, 381, 382, 384, 388, 392, 393, 396, 397, 399, 400, 402, 425, 427, 436, 438, 439, 448, 480, 484, 508, 520, 571], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 282, 284], "awar": [374, 379, 386, 394, 400], "ax": [16, 19, 20, 26, 66, 67, 83, 101, 102, 105, 109, 110, 111, 112, 113, 115, 121, 122, 124, 126, 127, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 169, 176, 179, 180, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 282, 284, 361, 362, 366, 367, 368, 369, 370, 371, 374, 383, 393, 416, 420, 425, 431, 432, 433, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 495, 496, 497, 507, 509, 511, 513, 518, 520, 521, 522, 523, 528, 529, 530, 534, 537, 565, 566, 570], "ax1": [443, 452, 454, 458, 468, 480, 481], "ax2": [443, 452, 454, 458, 468, 480, 481], "ax3": [452, 458], "ax_crab_3fhl": 497, "ax_ebl": 537, "ax_excess": [445, 448], "ax_model": 537, "ax_residu": [101, 109, 110, 445, 448, 449, 450, 468, 495], "ax_s": [449, 495], "ax_spati": [102, 105, 109, 110], "ax_spectr": [102, 105, 109, 110], "ax_spectrum": [101, 109, 110, 445, 448, 449, 450, 468], "ax_sqrt_t": [445, 448], "axcols1": 479, "axcols2": 479, "axel": [383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "axes0": [189, 190, 192, 198, 201, 202], "axes_loc": [143, 144, 146, 149, 150, 151, 156, 158, 160, 202, 362], "axes_nam": [188, 189, 190, 192, 197, 198, 200, 201, 202], "axesimag": [362, 363], "axesn": [189, 190, 192, 198, 201, 202], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 101, 102, 105, 109, 110, 111, 112, 113, 115, 117, 121, 122, 124, 125, 126, 128, 129, 132, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 214, 215, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 242, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 278, 282, 283, 284, 288, 289, 290, 292, 312, 313, 323, 362, 367, 368, 369, 370, 380, 383, 396, 398, 417, 420, 421, 422, 425, 427, 432, 434, 435, 436, 439, 443, 445, 448, 449, 450, 451, 453, 454, 456, 458, 460, 461, 462, 464, 466, 467, 470, 471, 473, 474, 477, 478, 479, 486, 487, 488, 495, 496, 497, 507, 509, 511, 515, 520, 523, 524, 566, 570], "axis0": 523, "axis1": 479, "axis2": 479, "axis_edg": 367, "axis_nam": [101, 102, 105, 109, 110, 122, 124, 134, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 195, 197, 198, 200, 201, 202, 462, 465, 466, 467, 474, 475], "axis_new": [124, 141, 466, 471], "axis_origin": 471, "axis_rgb": 369, "axis_tru": 458, "axisymmetr": 440, "axvlin": [451, 472, 483, 484], "axvspan": [198, 468], "az": [83, 85, 88, 94, 95, 374, 575], "azimuth": 487, "azur": 421, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 104, 123, 149, 207, 341, 374, 375, 388, 397, 400, 448, 459, 472, 473, 476, 479, 480, 482, 487, 497, 503, 507, 524], "b1509": 473, "b_0": [528, 529], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 190, 313, 377, 384, 385, 388, 394, 448, 449, 451, 479, 482, 495, 571], "backend": [93, 101, 119, 125, 126, 129, 130, 132, 165, 206, 207, 208, 209, 280, 316, 321, 322, 373, 383, 385, 415, 434, 435, 439, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 475, 476, 487, 495, 496, 568, 569], "backend_default": [126, 129, 132], "background": [16, 67, 82, 83, 88, 93, 102, 103, 105, 106, 108, 109, 110, 112, 113, 117, 121, 122, 124, 131, 143, 144, 145, 155, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 182, 222, 228, 268, 275, 282, 284, 293, 294, 295, 296, 298, 370, 374, 380, 383, 386, 387, 388, 390, 394, 395, 398, 406, 411, 414, 415, 416, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 455, 456, 458, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 476, 477, 479, 480, 484, 488, 489, 491, 496, 507, 509, 510, 569, 570, 571, 573, 574], "background2d": [144, 145, 155, 421, 428, 436, 438, 440, 514], "background3d": [88, 143, 155, 182, 380, 421, 425, 433, 434, 435, 477, 486, 514], "background_estim": 393, "background_interp_missing_data": 169, "background_map": [268, 385], "background_min": 142, "background_model": [102, 105, 109, 110, 132, 386, 387, 394, 396, 421, 453, 496, 514], "background_oversampl": [169, 176, 478], "background_pad_offset": 169, "background_r": [393, 474], "backgroundconfig": 16, "backgroundestim": [389, 419], "backgroundevalu": 385, "backgroundirf": [143, 144], "backgroundirfmodel": 396, "backgroundmodel": [386, 396, 397, 418, 420, 421, 422, 425], "backgroundtempl": 385, "backport": [381, 399, 403], "backround": 383, "backscal": 198, "backward": [379, 388, 397, 398, 399, 417, 475, 509], "bad": [86, 374, 388], "badli": 404, "balanc": 507, "band": [19, 20, 26, 68, 83, 89, 119, 122, 124, 127, 147, 148, 151, 154, 159, 162, 187, 188, 189, 190, 192, 193, 196, 197, 198, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 380, 392, 393, 397, 398, 406, 414, 446, 448, 449, 457, 458, 459, 468, 472, 473, 482, 487, 489, 506, 507, 509, 569], "bandshdu": 479, "banner": 404, "bar": [15, 82, 87, 91, 102, 105, 109, 110, 117, 129, 132, 143, 144, 202, 207, 230, 290, 322, 368, 391, 425, 428, 429, 435, 440, 468, 484, 511, 544], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 284, 300, 309, 310, 313, 319, 321, 323, 348, 361, 369, 374, 375, 377, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 397, 402, 404, 406, 407, 414, 416, 417, 419, 421, 422, 425, 427, 430, 431, 432, 433, 434, 440, 444, 448, 450, 451, 453, 456, 457, 458, 459, 460, 462, 468, 471, 473, 475, 477, 479, 480, 482, 483, 484, 486, 487, 496, 497, 499, 508, 509, 511, 521, 523, 535, 545, 569, 570, 572, 573], "base_dir": [82, 87, 309, 486, 488, 489, 499], "baselin": [82, 83, 235, 486], "basement": 416, "basemodel": [16, 84, 90, 104, 123, 401], "baseradi": 243, "bash": [406, 408, 571], "basi": [379, 380, 390, 393, 403, 427, 429, 468, 472], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 105, 110, 124, 234, 377, 380, 384, 385, 386, 387, 388, 390, 394, 398, 401, 410, 422, 432, 434, 442, 445, 448, 450, 463, 465, 471, 472, 473, 480, 491, 497, 499, 501, 502, 509, 520, 523, 570, 571], "basicconfig": [16, 458, 493], "bayesian": 392, "bayesian_block": 471, "bayesian_edg": 471, "baysian": 383, "bb": [87, 91, 400], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [144, 148, 149, 150, 159, 443, 451, 464, 467, 477, 486], "becam": 381, "becaus": [16, 84, 90, 104, 123, 189, 190, 192, 196, 198, 201, 202, 374, 375, 377, 379, 381, 385, 386, 388, 389, 393, 397, 398, 401, 404, 425, 427, 445, 446, 449, 462, 466, 468, 478, 479, 480, 481, 486, 487, 488, 495, 496, 497, 507, 511, 571, 574], "becom": [374, 382, 384, 385, 388, 393, 401, 460, 466, 482, 511, 571, 574], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 104, 121, 122, 123, 124, 161, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 301, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 405, 407, 421, 422, 425, 427, 428, 434, 435, 436, 437, 438, 439, 440, 444, 449, 459, 466, 467, 468, 470, 475, 479, 482, 483, 486, 488, 495, 508, 523, 556], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 104, 122, 123, 189, 190, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 313, 369, 374, 375, 377, 379, 381, 382, 383, 384, 388, 389, 390, 392, 393, 399, 403, 404, 410, 428, 434, 444, 449, 451, 465, 466, 475, 476, 479, 482, 488, 491, 495, 547, 571], "beforevalid": 90, "begin": [52, 87, 91, 102, 109, 122, 124, 132, 394, 397, 400, 448, 450, 479, 482, 528, 533, 534, 538, 554, 573], "behav": [374, 384, 439, 453, 574], "behavior": [16, 84, 87, 90, 91, 95, 104, 123, 398, 424, 428, 439, 488], "behaviour": [349, 374, 396, 397, 422, 427, 433, 440, 466, 480, 487, 507, 572], "behind": 470, "being": [121, 131, 190, 374, 379, 382, 388, 395, 398, 404, 450, 459, 471, 480, 500, 524, 571], "belief": 484, "believ": [409, 484], "belong": [86, 398, 421], "below": [52, 53, 87, 91, 188, 192, 199, 200, 363, 364, 365, 369, 371, 375, 377, 378, 383, 384, 388, 390, 391, 394, 397, 398, 400, 401, 402, 404, 405, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 448, 452, 468, 473, 476, 478, 480, 482, 483, 484, 486, 487, 508, 511, 529, 573], "benchmark": [390, 400, 404], "benefit": 391, "benn": 390, "berg": 570, "berge2007": [388, 520, 521, 570], "bernet": 440, "besancon": 501, "besid": [121, 132, 388, 389, 398, 449, 450, 479, 487, 495, 496, 524], "best": [67, 71, 74, 75, 78, 80, 101, 122, 124, 125, 126, 129, 130, 138, 208, 209, 280, 282, 284, 367, 374, 377, 384, 387, 392, 400, 406, 408, 444, 446, 448, 449, 450, 453, 456, 459, 468, 473, 475, 476, 484, 495, 509, 511, 513, 537, 543, 546, 547, 551, 573, 574, 575], "best_fit_model": 450, "beta": [27, 28, 48, 207, 235, 236, 237, 259, 397, 399, 421, 444, 446, 450, 457, 473, 476, 539, 545, 546, 547, 552, 562], "better": [374, 377, 379, 380, 381, 382, 383, 387, 388, 393, 394, 395, 398, 415, 432, 433, 456, 457, 460, 468, 470, 476, 479, 480, 487, 507], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 105, 110, 119, 121, 122, 124, 126, 127, 129, 138, 139, 150, 156, 158, 159, 160, 162, 172, 186, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 214, 215, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 274, 280, 298, 331, 364, 365, 372, 374, 375, 382, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 398, 399, 401, 402, 412, 422, 425, 428, 439, 443, 450, 452, 457, 459, 462, 467, 468, 471, 475, 476, 478, 479, 480, 481, 484, 487, 488, 497, 507, 509, 516, 517, 520, 529, 530, 570, 573, 575], "bewar": [269, 445, 466], "bexcub": 193, "bexpcub": [188, 189, 190, 192, 201, 202, 479], "beyond": [193, 388, 398, 401, 421, 478, 499], "bfg": 476, "bgstat": 431, "bhdezsf1": 478, "bi": [432, 435], "bia": [96, 146, 147, 151, 175, 433, 439, 478, 484, 515], "bias": [450, 572], "bias_energi": 146, "bias_perc": 175, "bibliographi": 570, "biederbeck": [402, 440], "big": [381, 384, 391, 403, 435, 487, 572, 574], "bigger": 190, "biggest": 393, "billion": 374, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 102, 105, 108, 109, 110, 112, 117, 119, 121, 122, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 146, 147, 148, 149, 151, 154, 157, 159, 161, 162, 169, 171, 172, 173, 175, 177, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 276, 285, 291, 292, 298, 367, 369, 372, 380, 385, 386, 387, 388, 390, 393, 394, 398, 405, 406, 416, 417, 419, 420, 422, 424, 425, 427, 430, 431, 432, 433, 434, 439, 440, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 507, 509, 511, 515, 518, 519, 569, 570, 571, 572, 574], "bin_cent": 468, "bin_edg": 468, "bin_volum": [193, 197, 200, 524], "bin_width": [191, 194, 199, 468], "binari": [200, 202, 382, 388, 391, 400, 404, 425], "binary_dil": [202, 480], "binary_erod": [202, 480], "binary_eros": [202, 425], "binary_structur": 200, "bincent": 292, "bind": 377, "binder": [382, 403, 433, 436, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "binlik": 124, "binned_likelihood": 125, "binneddataaxi": [416, 432], "binnedtimeseri": [124, 389], "bins_axi": 202, "binsiz": [16, 449, 453, 454, 456, 465, 495, 496], "binsize_irf": [16, 449, 453, 454, 456, 465, 495], "binsz": [102, 105, 109, 110, 111, 115, 148, 157, 159, 169, 172, 173, 177, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 390, 448, 458, 459, 460, 461, 464, 468, 472, 474, 477, 478, 479, 480, 482, 487, 488, 496, 518, 520, 521, 523, 524, 527, 529, 530, 531, 532], "binsz_irf": [102, 105, 109, 110, 113, 474, 478, 511], "binsz_irf_default": [102, 105, 109, 110, 478], "binsz_wc": [197, 198], "bintabl": [188, 189, 190, 192, 201, 202], "bintablehdu": [83, 86, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 193, 194, 200, 201, 202, 460, 479, 507], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 138, 375, 377, 381, 382, 388, 392, 393, 401, 468, 479, 524], "bitbucket": 489, "bitpix": 479, "bkg": [16, 82, 87, 88, 102, 106, 107, 109, 110, 143, 144, 145, 175, 182, 228, 396, 420, 422, 427, 443, 448, 449, 453, 454, 456, 457, 460, 461, 464, 468, 474, 477, 478, 481, 486, 488, 489, 495, 496, 507, 514, 570, 572, 573, 574], "bkg_": [102, 109], "bkg_2d": [87, 143], "bkg_3d": [82, 87, 144, 486, 489], "bkg_err": 468, "bkg_maker": [396, 445, 448, 450, 458, 466, 470, 520], "bkg_model": [386, 396, 402, 456, 460, 461, 464, 481, 496, 531], "bkg_ob": 106, "bkg_sy": 131, "bkg_syst_fract": [131, 443], "bkg_syst_fraction_sensit": 121, "bkgfile": 106, "black": [109, 110, 363, 364, 371, 392, 434, 436, 443, 468, 472, 478, 483, 520, 556], "blackground": 443, "blanch": [433, 434], "blanklin": [234, 410, 509, 524], "blazar": [297, 444, 470], "blind": [436, 511], "bll": 497, "blob": 413, "block": [375, 377, 380, 387, 394, 404, 413, 433], "block_reduc": 434, "blue": [101, 102, 105, 109, 110, 364, 444, 448, 454, 456, 459, 483, 520, 556], "blur": 33, "board": [383, 394], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 374, "boller": 471, "boni": [425, 428], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 121, 122, 123, 124, 125, 129, 130, 132, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 169, 176, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 270, 283, 298, 301, 310, 313, 314, 331, 337, 340, 342, 343, 345, 371, 374, 388, 458, 473, 478, 479], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 122, 125, 126, 129, 130, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 207, 220, 242, 258, 390, 422, 456, 473, 479, 480, 481], "boost": 460, "bootstrap": [87, 91], "border": 91, "bose": 416, "bot": 380, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 146, 147, 148, 154, 159, 162, 186, 189, 190, 192, 194, 196, 197, 198, 200, 201, 202, 210, 212, 374, 379, 380, 385, 386, 387, 388, 389, 394, 399, 403, 415, 419, 421, 422, 425, 428, 449, 450, 460, 464, 474, 475, 479, 480, 481, 483, 484, 508, 509, 511, 523, 524, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 573], "bother": 453, "bottom": [394, 396, 444, 460, 465, 467, 473], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 194, 197, 199, 207, 214, 215, 218, 219, 220, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 242, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 296, 383, 479, 484], "boundari": [194, 200, 270, 402, 430, 476, 482, 523], "boundary_mask": [200, 480], "boundary_typ": 194, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 374, 477], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 126, 127, 197, 200, 202, 333, 334, 383, 388, 392, 398, 432, 480, 482, 524], "bpl": [214, 397, 482], "bpwl_norm": 397, "bracket": [146, 207, 437, 439], "brake": 51, "branch": [374, 377, 381, 388, 399, 404, 413], "branchnam": 374, "bratio": 499, "break": [214, 259, 380, 388, 390, 399, 419, 420, 421, 538, 552], "brent": 452, "brentq": [19, 20, 26, 124, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 281], "breviti": [456, 511], "brief": 575, "briefli": [488, 489], "bright": [68, 126, 258, 273, 454, 465, 466, 480, 482, 505, 520], "brighter": 460, "brightest": 473, "brigitta": [391, 415, 417, 419, 421, 430, 431, 432, 433, 434, 435, 436], "bring": 379, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 189, 190, 192, 195, 198, 201, 202, 258, 313, 461, 477, 479, 523], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [214, 259, 400, 442, 470, 525, 557], "brokenpowerlaw": 397, "brokenpowerlawspectralmodel": [253, 259, 397, 422, 482, 538], "brown": [134, 471], "brown2013": 134, "brows": [87, 91, 375, 410, 497], "browser": [87, 91, 377, 404, 410, 430, 433, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "bruno": [400, 417, 419, 422, 425, 428, 432, 433, 434, 436, 437, 438, 439, 440], "br\u00fcgge": [433, 434], "bsd": 400, "bst": [87, 91], "buchner": 425, "budget": 511, "buffer": 352, "bug": [374, 377, 380, 381, 399, 400, 403, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 437, 438], "bugfix": [381, 383, 399, 432, 433], "build": [16, 84, 90, 104, 123, 188, 222, 374, 380, 381, 382, 387, 388, 390, 394, 398, 399, 400, 401, 403, 421, 427, 436, 452, 456, 468, 478, 480, 508, 511, 571], "build_doc": [338, 375, 377, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 543, 559], "built": [10, 176, 222, 341, 358, 373, 374, 375, 385, 386, 388, 390, 391, 393, 401, 404, 411, 434, 439, 473, 481, 487, 491, 507], "builtin": 497, "bullet": 379, "bump": [388, 432], "bunch": [103, 108, 375, 571], "bundl": [101, 102, 105, 109, 110, 383, 386, 404, 426, 434, 458, 474, 478, 507, 524, 569, 570], "bunit": [360, 434, 479], "bureaucrat": 379, "burkert": [17, 499], "burst": 471, "butterfli": [433, 476, 497], "button": [436, 479], "bvtfdkv6": 470, "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 104, 123], "byte": [16, 84, 87, 90, 91, 104, 123, 319, 352, 374], "bytearrai": [16, 84, 90, 104, 123, 319], "bytestr": [87, 91], "b\u00fchler": 413, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 195, 205, 224, 262, 285, 291, 301, 341, 373, 374, 391, 406, 407, 409, 426, 433, 448, 468, 470, 472, 476, 484, 486, 487, 499, 523, 542, 553, 571, 572, 574], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 101, "c_": 205, "c_0": [187, 188, 197, 200], "c_i": [187, 188, 197, 200], "c_n": [187, 188, 197, 200], "cach": [87, 88, 91, 100, 102, 105, 109, 110, 268, 309, 310, 383, 384, 386, 393, 396, 404, 418, 422, 425, 440], "cahil": 427, "cal_gen_92_002": [146, 194], "cal_gen_92_002_summari": 146, "calcul": [13, 15, 19, 20, 26, 96, 105, 110, 133, 134, 135, 136, 175, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 254, 259, 261, 262, 263, 264, 267, 270, 271, 287, 289, 290, 298, 300, 323, 356, 364, 365, 384, 387, 415, 421, 425, 426, 427, 433, 438, 440, 443, 468, 471, 472, 475, 484, 495, 496, 499, 511, 570, 574], "caldb": [82, 144, 146, 148, 149, 150, 159, 194, 427, 443, 451, 460, 461, 464, 467, 477, 486], "calendar": [399, 403], "calib_vers": [487, 497], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 101, 102, 104, 105, 109, 110, 123, 133, 134, 135, 136, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 171, 187, 188, 197, 200, 207, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 313, 325, 346, 352, 360, 363, 371, 374, 375, 377, 379, 380, 383, 386, 387, 388, 389, 390, 392, 394, 396, 398, 400, 402, 404, 406, 410, 421, 425, 439, 448, 449, 458, 473, 474, 475, 476, 478, 479, 482, 487, 489, 495, 496, 497, 507, 511, 520, 521, 522, 523, 524, 571, 572, 573, 574], "callabl": [16, 45, 84, 90, 104, 123, 276], "callback": [165, 571], "caller": [374, 385], "camera": [467, 477, 478], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 102, 104, 105, 108, 109, 110, 113, 117, 121, 122, 123, 124, 129, 130, 132, 138, 144, 149, 157, 159, 162, 166, 172, 175, 187, 188, 189, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 204, 207, 211, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 229, 230, 232, 234, 236, 237, 239, 242, 243, 244, 245, 247, 248, 249, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 281, 283, 288, 301, 313, 314, 319, 322, 331, 350, 352, 367, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 417, 419, 421, 422, 425, 427, 428, 432, 433, 434, 435, 436, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496, 497, 499, 501, 502, 507, 508, 509, 511, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 545, 547, 556, 566, 568, 569, 570, 571, 572, 573, 574], "candel": 222, "candid": [399, 427, 473], "candl": [274, 570], "cannot": [16, 67, 84, 87, 90, 91, 95, 104, 112, 122, 123, 124, 204, 291, 341, 371, 377, 387, 388, 439, 477, 481, 482, 509, 524], "cap": [51, 54], "capabl": [384, 487, 499], "capsiz": 484, "captur": [374, 390], "car": [102, 105, 109, 110, 169, 200, 201, 202, 220, 242, 388, 417, 458, 477, 478, 479, 496, 497], "card": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 146, 147, 148, 154, 159, 162, 189, 190, 192, 196, 198, 201, 202, 479], "care": [122, 124, 301, 374, 383, 390, 399, 445, 450, 456, 479, 571], "carefulli": [400, 460, 461, 484], "carina": [33, 38], "carlo": [392, 516, 570], "carri": [389, 397, 399, 401, 425, 446, 496], "carr\u00e9": 200, "cartesian": [41, 46, 190, 201, 202, 304, 306, 438, 497, 523], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 146, 165, 177, 188, 190, 196, 197, 200, 202, 207, 210, 212, 232, 243, 266, 268, 270, 281, 291, 314, 331, 369, 374, 375, 377, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 406, 414, 415, 418, 421, 427, 428, 433, 439, 440, 443, 445, 448, 449, 450, 451, 453, 454, 456, 460, 461, 464, 465, 467, 468, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 491, 495, 497, 506, 509, 510, 511, 521, 524, 528, 529, 530, 533, 534, 538, 547, 554, 569, 571, 573], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [102, 105, 109, 110, 169, 286, 291, 374, 386, 425, 451, 453, 456, 464, 467, 474, 478, 481, 484, 495, 496, 507, 570], "cash1979": [570, 573], "cashcountsstatist": [410, 440, 571, 573], "cast": 91, "cat": [66, 67, 79, 382, 404, 432, 433, 446, 473, 482, 506, 570, 571], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 121, 125, 388, 394, 413, 417, 419, 421, 425, 426, 427, 430, 431, 432, 433, 434, 436, 440, 442, 444, 446, 452, 457, 474, 482, 485, 487, 491, 501, 535, 569, 570], "catalog_3fgl": 446, "catalog_3fhl": [446, 473], "catalog_3fhl_bright": 473, "catalog_4fgl": 473, "catalog_4fgl_roi": 473, "catalog_gammacat": [446, 473], "catalog_hgp": 473, "catalog_registri": [446, 473, 480], "catalogimageestim": 434, "catalogu": [78, 425, 432], "catch_warn": 511, "categori": [374, 385, 398, 425, 480, 482, 525], "caus": [381, 388, 434, 437, 511], "cautious": 459, "caveat": [207, 297, 440, 529], "cax": 477, "cb98": 48, "cbar": 362, "cbar_kw": 368, "cbarlabel": 368, "cc": [383, 388, 390, 393, 395, 397, 400, 402], "ccube": [188, 189, 190, 192, 193, 194, 200, 201, 202, 479], "cd": [374, 375, 377, 390, 406, 407, 408], "cdelt": [200, 202], "cdelt1": 479, "cdelt2": 479, "cdf": [323, 387, 460, 476], "cdot": [51, 52, 53, 54, 102, 109, 247, 262, 397, 482, 507, 528, 533, 534, 538, 541, 542, 549, 550, 552, 553, 554, 555, 560, 561, 562, 564, 572], "celesti": [479, 523, 528, 532, 575], "celfix": 535, "cell": [382, 410, 436, 457, 468, 479, 486, 487, 497], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 102, 105, 109, 110, 122, 124, 126, 127, 128, 132, 146, 147, 148, 149, 150, 151, 154, 158, 159, 160, 162, 169, 172, 173, 175, 176, 177, 179, 180, 182, 183, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 216, 217, 220, 221, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 268, 270, 303, 307, 333, 374, 375, 388, 390, 397, 398, 415, 416, 425, 427, 440, 443, 445, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 466, 467, 468, 470, 472, 477, 478, 479, 480, 481, 482, 486, 487, 496, 497, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 528, 529, 532], "center_coord": [187, 188, 193, 197, 200], "center_pix": [187, 188, 197, 200], "center_ski": 524, "center_skydir": [187, 188, 197, 200, 478, 479, 487, 488, 518, 520, 521], "centr": [472, 480, 499], "central": [386, 395, 446, 497], "cern": 499, "certain": [50, 83, 87, 91, 207, 288, 373, 388, 390, 392, 398, 443, 472, 478, 479, 487, 506, 524], "certainli": 377, "certif": 400, "certifi": 400, "cfa": [207, 476], "cff": 403, "cg": 503, "ch": 53, "chain": [165, 387, 390, 419, 478, 511, 521, 570], "chainer": 392, "chakraborti": [431, 432], "challeng": [381, 383, 387, 432, 454, 456, 458, 486], "chanc": 379, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 104, 122, 123, 124, 188, 197, 200, 214, 215, 218, 222, 224, 225, 226, 230, 234, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 349, 359, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 398, 399, 400, 403, 404, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 431, 432, 433, 434, 435, 437, 441, 450, 451, 452, 458, 460, 461, 465, 470, 471, 474, 475, 476, 480, 482, 484, 486, 495, 507, 511, 518, 520, 524, 535, 543, 571], "changelog": [374, 403, 426, 434], "channel": [19, 20, 26, 373, 376, 377, 391, 433, 461, 472, 479, 489, 499], "channel0": 499, "channel1": 499, "channel_registri": [19, 20, 26], "chapter": 472, "charact": [87, 91, 374, 481], "character": [290, 398, 460], "characterist": [21, 25, 27, 51, 52, 53, 54, 134, 288, 385, 439, 471, 570], "charg": [400, 547], "chatti": [374, 458], "cheat": 409, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 102, 105, 106, 109, 110, 122, 124, 146, 147, 148, 154, 159, 162, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 211, 213, 220, 242, 258, 297, 348, 350, 377, 390, 396, 400, 403, 404, 406, 407, 408, 411, 420, 425, 433, 446, 464, 470, 477, 491, 499, 511, 515, 524, 568, 571, 572], "check_limit": [210, 211, 212, 213], "check_random_st": 374, "check_tutorials_setup": [443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "checker": [431, 434], "checklist": 404, "checkout": [374, 377, 416, 456, 460, 482], "checksum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 146, 147, 148, 154, 159, 162, 189, 190, 192, 196, 198, 201, 202, 208, 220, 242, 337, 340, 343, 440, 457, 487], "chen": 434, "cherenkov": [149, 387, 406, 411, 445, 448, 454, 465, 478, 486, 488, 520, 521, 570], "cherri": [374, 381, 388, 399], "chi": [287, 389, 572, 573, 574], "chi2": [101, 140, 386, 416, 448, 459, 467, 476, 507, 573], "chi2assym": 419, "child": 384, "children": [456, 464, 479, 495, 496], "chime": 377, "chisq": 287, "chisquar": 287, "chmod": 571, "choic": [133, 387, 391, 393, 400, 448, 449, 451, 453, 476, 488, 495, 512, 568, 571], "choos": [45, 77, 187, 188, 191, 193, 194, 197, 200, 271, 315, 386, 388, 390, 394, 406, 408, 425, 446, 448, 452, 456, 458, 467, 474, 476, 478, 479, 481, 482, 483, 487, 496, 511, 571], "chose": [460, 487, 488, 573, 575], "chosen": [26, 146, 159, 162, 188, 189, 190, 198, 201, 202, 220, 229, 242, 374, 377, 389, 390, 393, 449, 466, 478, 479, 483, 484, 488, 495, 509, 519, 520, 524], "christoph": [379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 413, 414, 415, 416, 417, 418, 419, 420, 426, 429, 430, 431, 432, 433, 434, 435], "chrome": [87, 91], "chromei": 427, "chunk": [148, 159, 162], "chunk_siz": [148, 159, 162], "ci": [374, 377, 381, 400, 404, 419, 425, 427, 430, 436], "cidscwvg": 444, "circl": [83, 177, 371, 375, 388, 427, 448, 458, 467, 472, 478, 480, 483, 486, 496, 497, 508, 518, 520, 521, 524], "circle_area": 375, "circleannulusskyregion": [255, 256, 520], "circledast": 507, "circlepixelregion": 388, "circleskyregion": [102, 105, 109, 110, 171, 172, 176, 200, 221, 375, 388, 443, 445, 448, 450, 451, 454, 456, 458, 460, 461, 466, 470, 472, 474, 478, 480, 481, 496, 518, 520, 521, 524], "circular": [91, 102, 105, 176, 188, 190, 200, 385, 393, 395, 445, 450, 474, 483, 520, 524], "circumv": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "cirelli": [26, 499], "citat": 403, "cite": [377, 400], "cl": [16, 84, 90, 102, 104, 109, 123, 401], "clabel": 476, "clang": 410, "clarif": 379, "clarifi": [398, 439], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 282, 284, 309, 310, 313, 321, 323, 348, 361, 377, 380, 383, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 402, 406, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 443, 446, 448, 449, 450, 451, 452, 453, 454, 458, 460, 461, 464, 465, 468, 473, 474, 475, 476, 477, 478, 479, 482, 484, 486, 487, 488, 495, 497, 502, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 519, 521, 522, 523, 524, 525, 547, 556, 568, 569, 570, 571, 576], "class1": 473, "class2": 473, "classic": [383, 392, 406, 415, 445, 448, 454, 458, 474, 478, 509, 511, 520, 521, 570, 573], "classifi": 488, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 401], "classproperti": 425, "classvar": [16, 84, 90, 104, 123], "claudio": [438, 440], "claus": [374, 400], "clean": [374, 375, 377, 382, 383, 388, 390, 392, 413, 415, 416, 417, 418, 419, 420, 421, 422, 425, 432, 433, 434, 435], "cleaner": 436, "cleanup": [381, 393, 404, 413, 418, 419, 424, 425, 426, 430, 431, 433], "clear": [92, 100, 196, 242, 374, 379, 381, 385, 388, 389, 393, 394, 395, 433, 459, 575], "clearer": 418, "clearli": [134, 374, 379, 380, 388, 391, 399], "cli": [11, 390, 435, 569], "click": [373, 390, 391, 410, 418, 433, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 571], "clip": [19, 20, 26, 187, 188, 191, 193, 194, 197, 199, 200, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 270, 271, 313, 418, 419, 452], "clockwis": [221, 229, 232, 528], "clone": [377, 407, 434], "close": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 270, 349, 350, 351, 383, 388, 403, 428, 439, 440, 476, 556], "closer": 497, "closest": [117, 121, 125, 129, 132, 188, 189, 190, 192, 198, 201, 202, 475, 480, 509], "cloud": [404, 491], "cluster": [6, 96, 299, 300, 387, 439, 440, 442, 485, 491, 508, 511], "clutter": [456, 511], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 101, 124, 130, 132, 214, 218, 224, 226, 230, 237, 240, 247, 249, 258, 259, 262, 263, 264, 273, 359, 385, 397, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 464, 467, 468, 472, 473, 475, 476, 482, 484, 486, 487, 495, 497, 504, 505, 509, 511, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570], "cm2": [51, 54, 67, 107, 124, 139, 149, 202, 274, 359, 443, 444, 446, 448, 449, 451, 452, 456, 457, 458, 460, 461, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 479, 481, 482, 484, 487, 495, 496, 497, 509, 524, 540, 543, 546, 551, 556], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 472], "cm5": 472, "cmap": [102, 105, 109, 110, 364, 365, 450, 456, 472, 479, 481, 487, 488, 495, 496, 520], "cmb": 547, "cnlhdhpf": 475, "co": [53, 195, 399, 400, 443, 528, 529, 530], "coadd": [189, 190, 192, 198, 201, 202], "coars": 474, "coarser": [194, 199, 474], "codaci": 404, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 146, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 369, 377, 378, 379, 381, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 407, 410, 413, 416, 417, 419, 420, 421, 422, 425, 427, 430, 431, 432, 433, 434, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 499, 511, 518, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 571], "codebas": [375, 391, 413, 432, 434], "codemeta": 427, "codespel": 425, "codestyl": 377, "coeffici": [127, 235, 239, 537], "coerce_numbers_to_str": 104, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 471, "col": [87, 91, 425], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 368, "collabor": [77, 364, 365, 379, 381, 383, 387, 427, 459, 487, 570], "colleagu": [377, 571], "collect": [196, 242, 374, 376, 401, 404, 432, 433, 449, 474, 481, 499, 508, 512, 516, 570, 575], "collis": 50, "colnam": [87, 91, 189, 190, 192, 198, 201, 202, 487, 497], "color": [101, 109, 110, 143, 144, 202, 363, 364, 365, 368, 371, 375, 443, 444, 446, 448, 449, 450, 451, 452, 454, 456, 458, 459, 462, 465, 468, 472, 475, 476, 478, 481, 483, 484, 511, 520, 524, 528, 529, 547, 556], "colorbar": [124, 143, 144, 146, 149, 150, 151, 156, 157, 158, 160, 202, 362, 368, 470, 476, 479], "colorblind": 511, "colorblind10": 511, "colormap": [363, 364, 365, 413, 426, 497], "colormap_hess": [395, 576], "colormap_milagro": 576, "colour": 436, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 103, 108, 122, 124, 127, 138, 143, 144, 146, 170, 189, 190, 191, 192, 193, 194, 198, 199, 201, 202, 269, 290, 299, 344, 345, 346, 347, 367, 368, 371, 372, 374, 387, 389, 398, 436, 439, 440, 443, 460, 461, 468, 473, 479, 482, 486, 508, 511], "column_nam": 477, "column_prefix": 194, "columnclass": [87, 91], "columnspac": 371, "com": [134, 140, 297, 328, 329, 341, 377, 394, 403, 404, 407, 486], "combin": [99, 101, 102, 105, 109, 110, 141, 175, 183, 189, 190, 192, 197, 198, 201, 202, 215, 258, 374, 380, 384, 385, 386, 387, 388, 389, 394, 397, 406, 418, 433, 439, 446, 451, 456, 457, 464, 467, 474, 476, 477, 478, 479, 480, 482, 488, 496, 497, 499, 501, 511, 518, 523, 539, 569, 570], "combined_ev": 508, "combining_and_defin": [443, 451, 453, 456, 458, 464, 467, 486], "come": [69, 377, 380, 381, 382, 383, 384, 388, 389, 390, 391, 393, 394, 399, 401, 403, 404, 421, 422, 425, 434, 435, 439, 448, 456, 464, 482, 486, 495, 571], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 473], "command": [6, 13, 94, 101, 124, 150, 156, 158, 160, 373, 375, 377, 382, 383, 385, 390, 391, 404, 405, 406, 407, 408, 409, 415, 419, 430, 433, 434, 436, 460, 510, 569], "commensur": 202, "comment": [124, 374, 375, 379, 383, 387, 388, 390, 391, 393, 395, 397, 399, 400], "commit": [374, 377, 382, 388, 399, 400, 412, 413, 436], "committe": [379, 381, 399, 400], "commod": 400, "common": [95, 373, 374, 375, 377, 379, 380, 388, 390, 394, 395, 397, 398, 400, 407, 409, 410, 425, 427, 449, 450, 462, 473, 477, 480, 482, 495, 496, 499, 506, 509, 510, 524, 529, 571], "common_irf_head": 477, "commonli": [29, 83, 388, 392, 434, 462, 499, 568, 569, 571, 573, 576], "commun": [374, 390, 396, 400, 403, 405, 411, 489], "comp": 473, "compact": [16, 84, 87, 90, 91, 104, 123], "compar": [87, 91, 125, 126, 129, 130, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 200, 201, 202, 207, 280, 374, 388, 391, 394, 422, 438, 439, 443, 444, 445, 448, 452, 456, 459, 462, 464, 466, 470, 473, 476, 478, 484, 487, 495, 506, 570, 572], "comparison": [86, 87, 91, 100, 129, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 331, 430, 501], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 189, 190, 192, 201, 202, 228, 379, 381, 385, 388, 397, 399, 401, 402, 410, 413, 415, 417, 434, 440, 479, 523], "compil": [377, 426], "complain": 377, "complaint": 392, "complement": 394, "complementari": [101, 448], "complet": [13, 16, 84, 90, 104, 123, 331, 374, 380, 384, 385, 386, 387, 388, 391, 392, 394, 398, 399, 400, 407, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 430, 431, 432, 433, 434, 435, 456, 461, 476, 483, 491, 511, 516], "complex": [374, 375, 380, 384, 388, 389, 390, 396, 398, 410, 445, 448, 458, 461, 467, 471, 474, 479, 480, 482, 483, 487, 520], "complianc": [400, 436], "compliant": [189, 190, 192, 201, 202, 440, 570], "complic": [388, 524], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 102, 103, 105, 108, 109, 110, 129, 134, 161, 163, 197, 220, 242, 243, 258, 273, 385, 386, 387, 390, 396, 397, 415, 419, 421, 425, 433, 434, 444, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 470, 473, 474, 475, 481, 482, 486, 487, 495, 496, 499, 507, 509, 511, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570], "component_1": 385, "component_2": 385, "component_class": 473, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 400], "composit": [57, 70, 80, 312, 400, 432], "compound": [197, 204, 215, 332, 336, 388, 397, 442, 444, 462, 525, 557], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 427], "compoundpixelregion": 336, "compoundskymodel": 385, "compoundskyregion": [204, 332, 336], "compoundsourcemodel": 385, "compoundspectralmodel": [253, 397, 439, 444, 482, 487, 537, 539, 543, 546, 548, 551, 556], "compress": 382, "compris": 488, "compromis": [374, 379, 387, 484], "compton": [243, 421, 547], "compulsori": 482, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 101, 102, 104, 105, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 175, 176, 178, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 203, 207, 214, 215, 218, 220, 222, 224, 225, 226, 230, 234, 236, 237, 239, 242, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 273, 274, 280, 281, 282, 284, 287, 288, 289, 290, 292, 296, 297, 300, 304, 305, 308, 374, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 396, 397, 398, 402, 404, 406, 407, 411, 413, 415, 416, 417, 418, 421, 422, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 450, 452, 456, 457, 461, 462, 465, 466, 468, 471, 472, 474, 475, 478, 481, 482, 483, 484, 487, 488, 489, 495, 497, 499, 507, 509, 511, 516, 520, 547, 569, 570, 571, 572, 573, 574, 575], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 207, 387, 388, 507], "compute_chisq": 432, "compute_differential_jfactor": 23, "compute_errn": [282, 284, 436, 573], "compute_errp": [282, 284, 573], "compute_flux_doubl": 134, "compute_fpp": 135, "compute_fvar": [136, 289], "compute_jfactor": [23, 472], "compute_lightcurve_doublingtim": 471, "compute_lightcurve_fpp": 471, "compute_lightcurve_fvar": 471, "compute_lima_map": 421, "compute_npr": 387, "compute_upper_limit": [282, 284], "computedfieldinfo": [16, 84, 90, 104, 123], "con": [374, 390], "concaten": [83, 86, 92, 191, 194, 386, 390, 396, 439, 479], "concentr": 333, "concept": [16, 84, 90, 104, 123, 394, 395, 401, 411, 472, 479, 512], "conception": [387, 396], "concern": [377, 379, 388, 390, 391, 393, 395, 397, 400, 425, 435, 488, 573], "conclud": 383, "concret": [16, 84, 90, 104, 123, 391, 394], "conda": [373, 377, 381, 382, 391, 394, 399, 403, 404, 406, 407, 408, 409, 410, 415, 417, 433, 434, 571], "condit": [52, 53, 142, 194, 211, 213, 220, 242, 398, 402, 422, 443, 448, 451, 461, 473, 480, 481, 483, 488, 507, 516], "conduct": [436, 467], "cone": [91, 388, 449, 483, 495, 496, 511], "conesearch": 390, "conf": [87, 91, 374, 375, 404, 416, 431], "conf_1d": 465, "conf_3d": 465, "conf_max": [210, 212], "conf_min": [210, 212], "confid": [121, 207, 210, 212, 282, 284, 385, 392, 416, 421, 435, 570, 573], "confidence_opt": [207, 475], "config": [15, 16, 84, 90, 104, 123, 373, 375, 380, 382, 383, 390, 391, 394, 401, 406, 408, 418, 419, 420, 425, 433, 449, 456, 495, 568], "config_dict": 495, "config_joint": 456, "config_paramet": [117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132], "config_stack": 456, "config_str": 16, "configdict": [16, 84, 90, 104, 123], "configpars": 431, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 104, 109, 110, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 321, 374, 375, 377, 383, 385, 389, 390, 394, 395, 401, 404, 410, 418, 420, 421, 425, 427, 436, 439, 440, 448, 450, 452, 458, 460, 461, 470, 486, 491, 510, 516, 570, 571], "confirm": 377, "conflict": [87, 91, 374, 377, 400], "confluenc": 489, "conform": [16, 84, 90, 104, 123, 479], "confus": [374, 375, 380, 393], "connect": [384, 448, 462, 464, 480, 496, 568], "consant": [189, 190, 192, 198, 201, 202], "consciou": 379, "consecut": [172, 331, 374, 399], "consensu": [379, 400], "consent": 374, "consequ": [400, 461, 524], "conserv": [507, 532], "consid": [19, 20, 59, 96, 169, 176, 179, 180, 182, 183, 190, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 280, 370, 379, 380, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 400, 402, 445, 448, 450, 456, 460, 461, 471, 477, 480, 508, 516, 574], "consider": [390, 415, 425, 433, 456], "consist": [74, 91, 95, 122, 124, 147, 148, 159, 162, 189, 190, 192, 201, 202, 229, 232, 374, 384, 385, 387, 388, 389, 394, 401, 418, 419, 420, 421, 422, 429, 433, 434, 436, 438, 439, 440, 449, 450, 451, 452, 459, 464, 467, 476, 478, 479, 482, 484, 495, 545, 547, 572], "consol": [374, 571], "consortium": [401, 486], "const": [216, 217, 218, 219, 397, 461, 482, 540, 558], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 397, "constant": [50, 51, 52, 53, 102, 109, 117, 149, 189, 190, 192, 198, 200, 201, 202, 216, 217, 218, 219, 221, 233, 235, 330, 387, 388, 393, 433, 442, 465, 487, 504, 507, 525, 536, 557, 567, 570, 574], "constant_model": 558, "constantmodel": 435, "constantnormspectralmodel": 397, "constantspatialmodel": [252, 397, 482, 487, 527], "constantspectralmodel": [253, 397, 461, 482, 540], "constanttemporalmodel": [265, 397, 418, 482, 558], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 474, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400, 444, 453, 457, 478, 484, 518], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 511], "construct": [16, 84, 90, 104, 123, 194, 236, 237, 339, 524, 570], "constructor": [187, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 439, 496, 522], "consult": 409, "consum": [476, 511], "contact": [376, 381, 383, 400, 409, 411, 414, 415, 416, 430, 433], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 122, 123, 124, 132, 133, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 171, 174, 176, 181, 184, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 288, 299, 300, 367, 369, 371, 372, 374, 377, 378, 380, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 400, 403, 404, 411, 415, 419, 420, 421, 422, 424, 425, 427, 428, 431, 432, 433, 434, 435, 439, 440, 443, 446, 448, 449, 450, 453, 456, 457, 460, 461, 464, 465, 466, 468, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 499, 500, 502, 507, 508, 509, 511, 515, 519, 520, 523, 524, 525, 568, 570, 572, 573, 574], "containment_correct": [16, 102, 105, 176, 443, 448, 449, 450, 453, 454, 456, 458, 465, 466, 468, 470, 474, 478, 495], "containment_fract": 96, "containment_radiu": [150, 156, 158, 159, 160, 162, 443, 474, 477, 480], "containment_radius_map": [159, 162], "contains_pix": [187, 188, 197, 200], "contains_wcs_pix": 197, "contamin": [67, 454, 473, 480, 520], "content": [84, 90, 104, 123, 124, 189, 190, 192, 198, 201, 202, 337, 340, 374, 377, 379, 383, 389, 394, 401, 404, 419, 428, 433, 445, 479, 480, 486, 488, 508, 511, 522, 523], "content_typ": [16, 84, 90, 104, 123], "context": [16, 84, 87, 90, 91, 104, 123, 211, 213, 220, 242, 321, 352, 374, 389, 400, 404, 440, 479, 501], "contigu": [194, 199, 425], "continu": [194, 381, 383, 384, 387, 388, 390, 391, 393, 394, 399, 410, 413, 414, 417, 425, 430, 431, 432, 434, 448, 461, 470, 480, 523, 570], "continuous_upd": [456, 464, 479, 495, 496], "contour": [204, 207, 366, 383, 435], "contour_": 476, "contourf": 202, "contract": 400, "contrari": [375, 382], "contrast": [394, 570], "contrera": 435, "contribut": [100, 114, 116, 220, 228, 242, 258, 370, 374, 376, 383, 388, 396, 398, 404, 411, 414, 425, 427, 429, 478, 512, 547, 568, 571, 572], "contributes_to_stat": 100, "contributor": [374, 377, 394, 404, 412, 423, 424], "control": [83, 87, 91, 102, 105, 109, 110, 374, 387, 405, 407, 443, 472, 479, 484, 511, 573], "controversi": [374, 379, 380, 394], "conveni": [13, 122, 373, 374, 377, 384, 388, 396, 398, 405, 415, 417, 422, 425, 427, 432, 458, 470, 472, 473, 474, 479, 480, 481, 482, 486, 488, 497, 506, 510, 569], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 189, 190, 192, 200, 201, 202, 396, 398, 417, 418, 421, 422, 436, 474, 478, 479, 482, 507, 509, 516, 523, 573], "converg": [402, 416, 437, 448, 450, 456, 470, 476, 507, 511, 518, 528], "convers": [84, 87, 90, 91, 104, 122, 123, 124, 379, 398, 401, 406, 408, 425, 438, 439, 440, 443, 524], "conversion_typ": [487, 497], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 101, 102, 105, 107, 109, 110, 122, 124, 127, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 172, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 209, 210, 211, 212, 213, 220, 234, 242, 280, 298, 301, 302, 306, 319, 335, 355, 357, 358, 375, 380, 388, 389, 398, 401, 404, 426, 438, 439, 440, 443, 452, 454, 459, 466, 467, 470, 474, 475, 476, 480, 481, 486, 497, 509, 515, 520, 523, 573, 575], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 497, "convolut": [117, 121, 127, 132, 157, 190, 202, 373, 386, 392, 413, 420, 422, 431, 433, 434, 440, 454, 479, 507, 524], "convolution_method": 190, "convolv": [105, 111, 115, 132, 157, 190, 202, 385, 413, 422, 425, 434, 451, 452, 454, 479, 517, 547], "convolve_ful": 190, "convolve_wc": 190, "cookiecutt": 390, "coolwarm": [456, 487, 488, 496], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 244, 288, 385, 418, 461, 479, 480, 520, 523, 524, 531], "coord_to_idx": [187, 188, 191, 193, 194, 197, 199, 200, 479], "coord_to_pix": [187, 188, 191, 193, 194, 197, 199, 200, 479], "coordiant": 477, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 102, 103, 105, 108, 109, 110, 122, 124, 126, 127, 128, 134, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 172, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 220, 221, 229, 232, 234, 242, 244, 246, 255, 256, 258, 270, 288, 292, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 323, 329, 333, 334, 350, 375, 379, 380, 381, 383, 387, 388, 393, 394, 397, 399, 400, 413, 415, 418, 420, 431, 433, 434, 436, 443, 445, 448, 450, 451, 454, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 474, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 496, 497, 507, 515, 520, 522, 523, 528, 529, 532, 569, 570, 575], "coordsi": 420, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 147, 148, 151, 154, 159, 162, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 301, 346, 374, 379, 382, 384, 388, 390, 396, 403, 404, 410, 425, 427, 434, 435, 436, 439, 444, 445, 448, 450, 451, 456, 458, 464, 466, 467, 470, 473, 476, 478, 482, 484, 487, 511, 520, 524, 535, 571], "copy_data": [87, 91, 220, 228, 242, 258, 266, 268, 270], "copy_indic": [87, 91], "copy_ob": [82, 511], "copy_on_getitem": [87, 91], "copyright": 410, "core": [16, 53, 84, 90, 104, 123, 155, 373, 374, 381, 387, 388, 395, 399, 400, 411, 414, 431, 435, 439, 443, 450, 451, 453, 456, 458, 460, 462, 464, 467, 470, 481, 486, 499, 509, 571], "corner": [388, 391, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "corr_coord": [159, 162], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 102, 103, 105, 148, 159, 162, 176, 181, 182, 195, 228, 244, 245, 270, 374, 386, 387, 399, 400, 401, 403, 417, 420, 422, 423, 424, 425, 428, 431, 432, 434, 436, 437, 438, 439, 440, 443, 444, 448, 449, 450, 451, 460, 464, 465, 473, 474, 476, 478, 480, 481, 482, 484, 488, 495, 497, 508, 509, 518, 531, 543, 546, 548, 551, 556], "correctli": [19, 20, 26, 77, 147, 148, 154, 159, 162, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 375, 377, 400, 401, 415, 417, 422, 427, 428, 437, 477, 478, 479, 480, 481, 484, 523, 529], "correl": [19, 20, 26, 121, 127, 133, 205, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 254, 259, 261, 262, 263, 264, 267, 271, 292, 392, 397, 398, 425, 435, 459, 462, 476, 480, 482, 484, 495, 509, 568], "correlate_off": 121, "correlation_radiu": [16, 121, 138, 139, 449, 453, 454, 456, 468, 475, 488, 495, 509], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 84, 87, 89, 90, 91, 100, 102, 104, 105, 109, 110, 122, 123, 124, 125, 126, 127, 129, 130, 132, 146, 147, 148, 154, 157, 159, 161, 162, 163, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 214, 215, 218, 222, 224, 225, 226, 229, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 299, 367, 384, 385, 386, 387, 394, 395, 398, 400, 402, 419, 422, 445, 446, 448, 449, 450, 456, 460, 461, 465, 473, 476, 478, 479, 482, 483, 484, 486, 487, 488, 495, 497, 507, 508, 509, 511, 523, 524, 534, 537, 569, 570, 575], "cosimo": [422, 425, 427, 433, 434, 436, 439], "cosmic": [52, 222, 273, 392, 486], "coto": 433, "could": [16, 84, 90, 104, 123, 375, 377, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 404, 445, 448, 456, 458, 473, 475, 484, 486, 487, 495, 510], "count": [16, 83, 92, 100, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 137, 139, 164, 166, 169, 170, 171, 176, 178, 182, 186, 189, 190, 192, 193, 194, 198, 201, 202, 211, 213, 220, 242, 282, 284, 285, 286, 291, 293, 296, 298, 323, 359, 361, 370, 372, 380, 382, 385, 386, 387, 389, 390, 394, 398, 416, 417, 420, 422, 425, 427, 428, 434, 435, 439, 440, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 462, 464, 465, 466, 467, 468, 470, 474, 476, 478, 479, 480, 484, 488, 493, 495, 496, 497, 509, 511, 515, 518, 519, 520, 521, 524, 570, 571, 572, 574], "count_bkg": 468, "count_statist": 573, "counter": [221, 229, 232, 528], "counts_3d": 479, "counts_imag": [462, 474], "counts_min": 142, "counts_off": [102, 105, 106, 109, 110, 164, 170, 171, 174, 372, 386, 427, 438, 439, 444, 449, 450, 451, 454, 458, 468, 474, 507, 573], "counts_on": 416, "counts_rat": 474, "countspredictor": 385, "countsspectrum": [386, 389, 416, 417, 419, 421, 430], "countsstatist": [282, 284, 398, 421, 422, 425, 436], "coupl": [382, 388, 393, 404, 422, 434, 479], "cours": [374, 377, 381, 384, 391, 410, 449, 456, 474, 479, 487, 495, 571, 574], "cousin": [416, 422, 430, 432, 570], "cousins2007": [570, 573], "coutinho": [422, 425], "cov": [248, 249, 404], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [205, 367, 435], "covar_list": 205, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 125, 126, 129, 130, 206, 207, 208, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 284, 367, 392, 402, 421, 427, 435, 436, 439, 449, 495, 573], "covariance_data": [220, 228, 242, 258, 268], "covariance_opt": 207, "covariance_result": 208, "covariance_typ": 402, "covariancegaussianprior": 402, "covariancemixin": [215, 220, 258], "covarianceresult": [101, 207, 208, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 476, 487, 495, 496], "cover": [269, 374, 376, 388, 389, 390, 398, 445, 465, 466, 474, 479, 491, 497, 512], "coverag": [383, 389, 404, 413, 417, 425, 431, 434, 466, 476], "coveral": [404, 413], "cpu": [125, 126, 129, 132, 321, 322, 387], "cpython": 379, "crab": [67, 83, 109, 110, 130, 142, 207, 239, 274, 280, 382, 386, 394, 413, 419, 431, 433, 448, 449, 450, 457, 458, 465, 473, 474, 475, 476, 480, 484, 487, 488, 489, 495, 496, 497, 509, 520, 524, 570], "crab_10gev_100tev_dataset": 457, "crab_3fhl": 497, "crab_3fhl_spec": 497, "crab_events_pass4": 488, "crab_fp": 449, "crab_fp_tabl": 449, "crab_hess_ecpl": 274, "crab_hess_fp": [122, 124, 141], "crab_magic_lp": 450, "crab_model": 476, "crab_posit": 520, "crab_spec": 457, "crab_spectrum": 476, "crabnebula": 465, "crabspectrum": 417, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 104, 105, 109, 110, 111, 112, 113, 115, 117, 122, 123, 124, 125, 126, 129, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 169, 171, 172, 173, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 280, 301, 311, 332, 336, 352, 361, 363, 368, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 417, 418, 419, 422, 425, 427, 433, 434, 436, 437, 438, 439, 440, 443, 444, 446, 449, 450, 451, 456, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 476, 478, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 497, 499, 506, 507, 508, 511, 515, 518, 520, 521, 522, 523, 527, 529, 530, 531, 532, 537, 547, 556, 568, 569, 571, 576], "create_crab_spectral_model": [448, 450, 457], "create_fermi_isotropic_diffuse_model": [481, 487], "create_map_dataset_from_observ": [93, 108], "create_t": 470, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 126, 200, 383, 384, 388, 397, 400, 419, 425, 471, 482, 489], "creator": [104, 123, 377, 401, 449, 453, 454, 456, 482, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "creatormedadata": 401, "creatormetadata": [84, 90, 104, 123, 401], "credit": 410, "crimson": 450, "criteria": [15, 91, 427, 478, 483, 491], "criterion": [91, 132, 299, 443, 511], "critic": 484, "criticis": 365, "crop": [86, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202], "crop_width": [187, 188, 189, 190, 192, 197, 198, 200, 201, 202], "cross": [19, 380, 394, 499], "crowd": 473, "crpix": 200, "crpix1": 479, "crpix2": 479, "crucial": [401, 460, 461, 474], "cruft": 404, "crux": [33, 38, 470], "crval1": 479, "crval2": 479, "cryptic": 385, "csf": 486, "csh": 571, "csobsselect": 384, "css": [87, 91, 404], "cstat": [386, 419], "csv": 124, "ct": [359, 434], "cta": [82, 83, 89, 102, 105, 109, 110, 114, 116, 117, 121, 138, 139, 144, 148, 149, 150, 159, 222, 362, 367, 369, 378, 381, 382, 383, 387, 390, 393, 394, 403, 414, 415, 425, 431, 432, 433, 434, 442, 443, 451, 453, 456, 458, 460, 461, 464, 467, 468, 474, 475, 477, 481, 490, 491, 495, 509, 513, 570], "cta_data_analysi": [394, 442, 458, 463], "cta_dataset": 481, "cta_north": 97, "cta_sensist": 394, "cta_sensit": [442, 443, 447], "cta_simul": 414, "cta_south": [97, 443, 451, 460, 461, 464, 467], "cta_util": 434, "ctadata": 486, "ctao": [82, 148, 149, 169, 273, 374, 394, 400, 403, 406, 411, 442, 443, 449, 451, 453, 458, 460, 461, 468, 483, 488, 489, 490, 491, 499, 511, 569], "ctaoobservatori": 486, "ctapip": [377, 381, 383, 390, 391, 393, 394, 395], "ctaspectrumobserv": 434, "ctobssim": 387, "ctool": [384, 387, 390, 394, 545], "cts_sigma": 476, "ctselect": 384, "ctype1": 479, "ctype2": 479, "cube": [46, 102, 105, 132, 164, 182, 189, 190, 192, 198, 201, 202, 238, 258, 374, 385, 386, 387, 393, 394, 395, 397, 406, 413, 417, 418, 421, 426, 429, 430, 431, 432, 433, 434, 452, 453, 458, 462, 487, 497, 507, 516, 518, 523, 524, 570], "cubic": 479, "cumbersom": [384, 392], "cumigc8l": 478, "cumsum": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 189, 190, 192, 198, 201, 202], "cumul": [100, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 189, 190, 192, 198, 201, 202, 323, 387, 448, 460, 481, 511], "cunit1": 479, "cunit2": 479, "curat": [404, 414], "curl": [67, 391, 405, 406, 408, 486], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 101, 102, 105, 109, 110, 124, 125, 129, 152, 175, 187, 188, 189, 190, 192, 198, 199, 200, 201, 202, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 352, 368, 374, 375, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 417, 435, 449, 472, 475, 477, 478, 479, 481, 486, 488, 489, 495, 496, 500, 507, 508, 509, 524, 568, 570, 571], "curv": [15, 19, 20, 26, 73, 77, 83, 129, 134, 214, 215, 218, 222, 224, 225, 226, 230, 234, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 290, 366, 378, 385, 387, 390, 394, 398, 406, 415, 419, 421, 422, 426, 429, 430, 432, 434, 436, 439, 440, 442, 443, 469, 470, 471, 491, 509, 510, 520, 525, 567, 569], "curve_fit": 367, "cuspi": 499, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 104, 123, 128, 383, 384, 385, 390, 392, 397, 401, 405, 419, 420, 422, 434, 443, 451, 453, 456, 458, 464, 467, 474, 477, 479, 486, 511, 556], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 482, "customis": [394, 477], "customprior": 484, "cut": [91, 121, 161, 175, 176, 384, 433, 439, 442, 443, 447, 451, 468, 474, 478, 479, 483, 486, 491, 496, 497, 519, 520], "cutoff": [224, 225, 226, 262, 263, 264, 280, 419, 439, 442, 451, 456, 525, 557], "cutout": [102, 105, 109, 110, 114, 116, 147, 148, 154, 159, 162, 165, 188, 190, 198, 200, 202, 268, 380, 386, 415, 420, 425, 431, 434, 453, 454, 456, 458, 462, 474, 478, 487, 496, 497, 507], "cutout2d": [102, 105, 147, 148, 154, 159, 162, 165, 200, 202, 268, 380], "cutout_and_mask_region": [202, 439], "cutout_info": 419, "cutout_mod": 165, "cutout_slic": 200, "cutout_width": 165, "cval": [189, 190, 192, 198, 201, 202], "cwd": 382, "cwt": [394, 419, 431, 434], "cxc": [207, 394, 476], "cyan": 371, "cycl": [371, 377, 378, 379, 391, 393, 407, 432, 436], "cycler": [371, 443], "cython": [377, 416, 426], "d": [19, 20, 23, 87, 89, 91, 193, 196, 199, 234, 239, 250, 269, 274, 341, 377, 392, 394, 427, 436, 446, 460, 461, 467, 479, 482, 483, 516, 523, 528, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 574], "dai": [87, 91, 122, 124, 199, 227, 231, 233, 250, 257, 377, 388, 394, 403, 404, 479, 564, 571], "daniel": [435, 438, 440], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 394, 402, 434, 439, 440, 442, 485, 491, 500, 569], "dark_matter_spectra": 26, "darkbit": 499, "darkblu": 484, "darkgreen": 484, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 253, 375, 394, 434, 472, 500], "darkmatterannihilationspectralmodel": [20, 253, 436, 472, 482], "darkmatterdecayspectralmodel": [253, 440, 472, 482], "darkorang": [448, 449], "darksusi": 499, "darwin": 410, "dash": [468, 472, 484], "dashboard": 404, "dat": [26, 87, 91, 220, 242, 449, 495, 499], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 122, 123, 124, 125, 126, 127, 128, 133, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 170, 171, 175, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 285, 290, 291, 292, 294, 295, 298, 299, 300, 309, 310, 313, 331, 337, 340, 344, 345, 353, 362, 363, 364, 365, 367, 368, 373, 375, 378, 381, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 397, 398, 400, 402, 403, 406, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 439, 440, 442, 443, 446, 451, 452, 453, 454, 458, 460, 461, 464, 467, 472, 473, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 493, 498, 499, 507, 509, 511, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 530, 531, 543, 546, 548, 550, 551, 556, 568, 569, 570, 573, 574, 575], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [187, 188, 197, 200], "data_path": 488, "data_reduct": 390, "data_shap": [101, 102, 105, 109, 110, 187, 188, 197, 200, 474, 524], "data_shape_ax": [188, 197, 200], "data_shape_imag": 200, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 169, 299, 300, 390, 410, 450, 458, 460, 466, 468, 470, 478, 483, 486, 488, 489, 493, 496, 508, 518, 520, 521], "data_storag": 508, "data_summari": 431, "dataaxi": 416, "databas": [380, 511], "dataclass": 374, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 137, 138, 139, 140, 142, 147, 148, 154, 159, 162, 164, 165, 166, 169, 170, 171, 174, 175, 176, 191, 196, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 321, 367, 370, 371, 375, 377, 378, 380, 382, 387, 389, 390, 391, 393, 394, 398, 402, 403, 404, 406, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 448, 451, 452, 458, 459, 460, 462, 464, 468, 470, 472, 473, 479, 482, 483, 485, 486, 487, 489, 491, 493, 497, 508, 509, 511, 516, 518, 519, 520, 521, 531, 535, 537, 565, 566, 568, 569, 570, 571, 572, 573], "dataset1": [484, 507], "dataset1_prior": 484, "dataset2": [484, 507], "dataset2_prior": 484, "dataset_1": 509, "dataset_2": 509, "dataset_3fgl": 446, "dataset_3fhl": 446, "dataset_cta": 474, "dataset_empti": [445, 448, 450, 451, 458, 466, 470, 474, 478, 488, 520], "dataset_energy_depend": 459, "dataset_fak": 451, "dataset_fp": 467, "dataset_gammacat": 446, "dataset_hawc": 457, "dataset_hess": [457, 476], "dataset_imag": [458, 474], "dataset_kwarg": [93, 108], "dataset_lc": 467, "dataset_mak": [448, 450, 458, 466, 470, 478, 520], "dataset_nam": [108, 112, 129, 220, 228, 242, 396, 402, 456, 460, 461, 464, 474, 481, 496, 531], "dataset_on_off": [164, 170, 171, 174, 443, 448, 450, 451, 454, 458, 466, 470, 478, 520, 521], "dataset_on_off1": 443, "dataset_onoff": 386, "dataset_simul": 450, "dataset_stack": [448, 456], "datasetmodel": [209, 242, 258, 396, 422, 460, 461, 464, 470], "datasetread": 106, "datasets1": 371, "datasets2": 371, "datasets3": 371, "datasets_fil": [16, 449, 453, 454, 456, 495], "datasets_hess": 457, "datasets_in_phase_bin_3": 398, "datasets_mak": 478, "datasets_nam": [19, 20, 26, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 421, 457, 481, 495, 531], "datasets_read": [481, 487], "datasets_sl": 474, "datasets_to_fit": 470, "datasetsconfig": 16, "datasetsmak": [167, 427, 439, 478, 483, 511], "datasetsmetadata": 401, "datasetwrit": 107, "datastor": [16, 89, 96, 169, 299, 300, 380, 384, 389, 406, 410, 416, 427, 428, 430, 431, 433, 439, 440, 445, 448, 449, 450, 453, 454, 456, 458, 460, 464, 466, 468, 470, 478, 483, 488, 489, 493, 495, 508, 511, 518, 520, 521, 571], "datastorecheck": 434, "datastoreindex": 384, "datastoreinmemori": 384, "datastoremak": [416, 427], "datastoremetadata": 401, "datastoreobserv": [170, 380, 384, 420, 433], "datastorexml": 384, "datasum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 146, 147, 148, 154, 159, 162, 189, 190, 192, 196, 198, 201, 202], "datat": [87, 91], "date": [87, 91, 104, 123, 355, 391, 399, 400, 401, 403, 411, 433, 449, 452, 453, 454, 456, 482, 489, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 575], "datefmt": [16, 449, 453, 454, 456, 495, 571], "dateref": 452, "datetim": [104, 123, 401], "datetime64": [87, 91], "datfix": 452, "daughter": 401, "david": [384, 389, 414, 434, 435], "dc": [456, 486], "dc1": [383, 394, 435, 460, 468, 477, 481, 486], "dc2": 383, "ddof": 471, "de": [19, 20, 26, 67, 100, 214, 215, 218, 222, 224, 225, 226, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 298, 400, 403, 422, 425, 428, 472, 570], "deabsorb": 444, "deactiv": 405, "dead": [83, 86, 88, 331, 384], "dead_tim": [83, 88, 331], "deadc": 384, "deadlin": [383, 387], "deadtim": [88, 90, 182, 451, 460, 464, 486], "deadtime_fract": [88, 90], "deal": [86, 374, 380, 389, 390, 451, 460, 466, 491, 511], "debanjan": 416, "debian": [391, 407, 429], "debug": [11, 374, 380, 385, 390, 436, 448, 475, 479, 511, 571], "dec": [67, 83, 85, 87, 88, 91, 94, 138, 139, 172, 374, 375, 379, 383, 385, 387, 390, 391, 394, 412, 438, 443, 448, 450, 452, 454, 458, 461, 465, 466, 468, 470, 473, 478, 480, 486, 487, 488, 489, 496, 497, 499, 511, 515, 520, 575], "dec_pnt": 489, "dec_tru": 387, "decad": [17, 18, 21, 22, 24, 25, 27, 112, 194, 276, 440, 460], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 227, 233, 250, 397, 460, 467, 471, 482, 499, 561], "decemb": 412, "decid": [374, 380, 383, 384, 385, 386, 388, 389, 393, 396, 397, 398, 403, 449, 483, 495], "decim": [87, 91, 297], "decis": [374, 375], "declar": [15, 87, 91, 258, 353, 354, 377, 381, 382, 385, 390, 391, 397, 404, 421, 510], "decor": [353, 354, 374, 401, 571], "decorrel": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "decoupl": 69, "dedic": [377, 388, 389, 398, 400, 401, 404, 420, 421, 422, 440, 448, 449, 450, 456, 468, 476, 495, 496, 508], "deduc": [398, 440], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 271, 272, 456], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 266, 268, 270], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 283, 353, 354, 374, 375, 385, 386, 387, 388, 397, 398, 401, 402, 448, 456, 470, 476, 482, 484, 493, 520, 571, 573], "def_unit": [443, 451, 453, 456, 458, 464, 467, 486], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 297, 298, 299, 301, 312, 313, 314, 319, 321, 322, 328, 329, 330, 331, 333, 334, 337, 340, 342, 343, 345, 351, 356, 357, 361, 363, 364, 365, 367, 368, 370, 371, 374, 380, 386, 390, 391, 397, 400, 404, 410, 416, 418, 419, 420, 422, 425, 427, 433, 434, 436, 437, 438, 439, 440, 448, 449, 450, 452, 454, 456, 460, 461, 466, 467, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 495, 496, 497, 507, 509, 511, 518, 521, 522, 523, 524, 528, 529, 530, 537, 543, 547, 571, 575], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 357, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 432], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 402], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [143, 144, 149, 151, 156, 161, 477], "defer": [105, 110], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 101, 102, 103, 104, 105, 108, 109, 110, 114, 116, 121, 122, 123, 124, 125, 126, 128, 129, 132, 146, 147, 148, 150, 154, 157, 158, 159, 160, 162, 165, 166, 170, 175, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 283, 285, 291, 293, 313, 323, 328, 329, 330, 331, 334, 364, 365, 374, 375, 377, 379, 380, 383, 385, 386, 387, 388, 389, 390, 391, 395, 396, 398, 399, 400, 401, 402, 405, 406, 407, 408, 415, 416, 419, 422, 425, 428, 432, 433, 438, 439, 440, 444, 449, 451, 452, 453, 454, 456, 457, 459, 462, 464, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 495, 497, 507, 508, 509, 511, 513, 516, 520, 521, 523, 528, 530, 532, 533, 534, 537, 538, 541, 542, 544, 545, 547, 549, 550, 552, 553, 554, 555, 556, 566, 568, 569, 570, 571, 572, 573, 574], "definit": [83, 84, 86, 88, 90, 100, 102, 104, 105, 109, 110, 123, 166, 197, 283, 298, 312, 374, 383, 384, 388, 395, 396, 397, 398, 401, 417, 421, 422, 438, 440, 448, 450, 453, 462, 466, 477, 478, 495, 507, 509, 516, 517, 522, 524, 528, 529, 573], "deform": 524, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 102, 105, 109, 110, 112, 113, 114, 116, 117, 121, 126, 127, 132, 138, 139, 148, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 172, 173, 175, 177, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 220, 221, 229, 232, 242, 246, 255, 256, 258, 299, 300, 333, 369, 374, 375, 385, 388, 390, 397, 398, 401, 410, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 495, 496, 497, 508, 509, 511, 513, 515, 518, 520, 521, 522, 523, 524, 528, 529, 530, 531, 532, 533, 534, 535], "deg2": 489, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 112, 113, 119, 122, 124, 140, 188, 189, 190, 192, 195, 200, 201, 202, 220, 242, 246, 258, 269, 440, 443, 445, 449, 454, 459, 466, 470, 473, 478, 479, 480, 486, 495, 509, 523, 524, 573, 574], "deil": [379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 413, 414, 415, 416, 417, 418, 419, 420, 426, 429, 430, 431, 432, 433, 434, 435], "deiml": 433, "dej2000": [473, 497], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 385], "delai": [395, 399], "deleg": 390, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 374, 385, 404, 405, 406, 408, 440, 481], "delete_interv": 86, "delimit": 124, "deliv": 390, "delta": [19, 20, 23, 87, 91, 121, 122, 127, 130, 132, 151, 199, 248, 249, 281, 297, 439, 444, 452, 476, 484, 509, 516, 517, 529, 530, 532, 573], "delta_t": [119, 281, 459], "demonstr": [390, 415, 418, 419, 420, 421, 422, 427, 439, 440, 465, 471, 479, 481, 491, 523], "denot": [102, 109, 398, 507], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 101, 124, 151, 202, 327, 330, 367, 387, 454, 456, 472, 473, 484, 499, 501, 505, 515, 516, 517, 570], "dep": 439, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 102, 103, 108, 109, 119, 122, 124, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 176, 187, 188, 197, 200, 202, 220, 234, 242, 258, 301, 354, 374, 376, 377, 378, 380, 385, 386, 387, 388, 389, 392, 393, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 414, 418, 419, 422, 429, 431, 434, 435, 437, 439, 440, 442, 443, 447, 451, 453, 454, 463, 466, 473, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 491, 507, 511, 515, 519, 520, 523, 537], "deploy": 400, "deposit": 400, "deprec": [16, 84, 85, 90, 104, 123, 416, 425, 438, 439, 440, 462, 487, 535], "deprecated_argument_funct": 374, "deprecated_argument_function_kwarg": 374, "deprecated_attribut": 374, "deprecated_funct": 374, "deprecated_renamed_argu": 374, "deprecatedparseprotocol": [16, 84, 90, 104, 123], "deprecation_polici": 399, "depriv": 518, "depth": [16, 84, 90, 104, 123, 341, 406, 411, 444, 471, 537], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 121, 125, 129, 132, 269, 374, 386, 387, 392, 395, 398, 452, 475, 486, 488, 509, 523, 572, 573], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 124, 125, 127, 132, 158, 198, 207, 271, 293, 375, 377, 379, 380, 383, 384, 386, 387, 388, 390, 391, 393, 394, 397, 398, 399, 400, 411, 417, 425, 433, 434, 449, 452, 460, 461, 471, 475, 476, 482, 484, 486, 488, 489, 495, 507, 511, 515, 524, 525, 570, 571, 572, 573], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 126, 207, 375, 379, 380, 388, 394, 399, 400, 411, 436, 440, 456, 464, 473, 476, 479, 486, 488, 495, 496, 511], "description_width": [456, 464, 479, 495, 496], "descriptionstyl": [456, 464, 479, 495, 496], "descriptor": [87, 88, 91, 102, 105, 109, 110, 268, 310, 375, 421], "design": [379, 380, 383, 384, 387, 388, 390, 394, 396, 398, 399, 413, 433, 440], "desir": [16, 84, 87, 90, 91, 104, 123, 157, 187, 188, 197, 200, 283, 349, 350, 351, 479, 497, 524], "desktop": 411, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 102, 105, 109, 110, 124, 125, 147, 148, 154, 159, 162, 165, 188, 200, 202, 207, 210, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 268, 269, 270, 374, 375, 377, 379, 382, 383, 384, 387, 388, 389, 393, 394, 395, 399, 400, 403, 405, 409, 411, 412, 419, 423, 424, 442, 443, 444, 448, 450, 451, 452, 453, 458, 459, 460, 463, 464, 467, 470, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 488, 489, 491, 496, 497, 507, 508, 510, 516, 520, 521, 523, 568, 569, 571, 575], "detect": [59, 138, 139, 280, 364, 365, 375, 390, 393, 394, 396, 413, 419, 420, 421, 431, 433, 434, 440, 442, 455, 473, 486, 488, 491, 570, 573], "detect_t": 394, "detector": [83, 88, 103, 108, 151, 480, 488, 516, 570], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 112, 131, 150, 156, 158, 160, 172, 173, 175, 177, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 301, 323, 385, 389, 392, 400, 427, 439, 440, 443, 450, 453, 454, 459, 465, 478, 480, 501, 569], "determinist": 374, "deti": [83, 103, 108, 387, 486], "detx": [83, 103, 108, 387, 486], "dev": [11, 16, 82, 84, 90, 104, 123, 374, 376, 377, 390, 400, 403, 404, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 537, 565, 566], "dev1274": [104, 123, 411, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "develop": [375, 379, 380, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 407, 411, 413, 426, 433, 434, 435, 486], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 125, 190, 202, 207, 283, 287, 476, 484], "devoid": [448, 514], "devop": 400, "devot": 491, "dex": 301, "df": [87, 91, 119, 140, 459, 476, 573], "diagnosi": 383, "diagnost": 390, "diagon": [146, 147, 148, 392, 402, 487], "diagram": 575, "dialog": [406, 408], "diamet": [188, 189, 190, 445], "diamond": 483, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 119, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 174, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 280, 281, 282, 283, 284, 288, 299, 313, 321, 322, 337, 340, 341, 342, 345, 355, 356, 357, 358, 361, 362, 363, 367, 368, 369, 370, 371, 374, 389, 391, 395, 398, 401, 418, 422, 425, 433, 449, 456, 465, 466, 470, 473, 476, 479, 483, 495, 496, 523, 528, 537], "dict_kei": [444, 537], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 119, 122, 123, 124, 125, 126, 129, 130, 132, 133, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 174, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 282, 283, 284, 288, 311, 337, 340, 341, 342, 345, 355, 358, 368, 375, 391, 393, 398, 401, 402, 448, 450, 456, 476, 477, 483, 484, 566], "dictionnari": 367, "did": [77, 381, 388, 393, 394, 395, 397, 400, 416, 443, 451, 453, 456, 458, 464, 467, 476, 484, 486], "didn": [83, 88, 381, 384, 388, 391, 499], "diff": [101, 102, 105, 109, 110, 374, 377, 382, 386, 456, 464, 496], "diff_flux": 472, "diff_flux_point": [101, 474], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 101, 119, 121, 122, 124, 125, 126, 129, 130, 132, 138, 143, 144, 145, 146, 149, 151, 153, 156, 161, 171, 189, 190, 192, 195, 196, 197, 198, 200, 201, 202, 280, 281, 282, 284, 331, 335, 349, 350, 365, 374, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 400, 402, 404, 406, 408, 417, 420, 422, 432, 435, 436, 437, 439, 443, 448, 449, 450, 452, 453, 456, 459, 460, 461, 462, 465, 467, 470, 471, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487, 488, 491, 495, 497, 499, 507, 509, 511, 516, 523, 524, 529, 530, 569, 571, 572, 573], "different": 382, "differenti": [23, 79, 122, 124, 131, 189, 190, 192, 194, 198, 201, 202, 243, 258, 273, 274, 328, 380, 385, 392, 398, 432, 479, 482, 487, 497, 509, 570], "differential_flux": 124, "difficult": [385, 388, 404], "diffus": [68, 189, 190, 192, 198, 201, 202, 275, 374, 390, 393, 434, 435, 456, 460, 473, 479, 481, 482, 486, 568], "diffuse_cub": 482, "diffuse_galactic_fermi": 481, "diffuse_iem": [481, 487], "diffuse_iso": [481, 487], "diffuse_model": 275, "difrsp0": [487, 497], "difrsp1": [487, 497], "difrsp2": [487, 497], "difrsp3": [487, 497], "difrsp4": [487, 497], "digit": 374, "dilat": [202, 425], "dim": [156, 330, 430, 431, 458, 570], "dimens": [46, 53, 102, 105, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 171, 187, 188, 189, 190, 192, 193, 195, 197, 198, 200, 201, 202, 266, 267, 270, 301, 313, 367, 390, 422, 433, 435, 439, 476, 477, 479, 482, 491, 507, 523, 524, 529], "dimension": [31, 32, 37, 68, 87, 91, 187, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 229, 232, 276, 314, 327, 380, 388, 402, 406, 431, 452, 475, 476, 477, 479, 482, 497, 515, 517, 523, 524, 569, 570], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 151, 263, 264, 300, 462, 482], "dimitri": [425, 427], "dinhiprh": 470, "dipol": [51, 54], "dirac": 19, "direct": [91, 104, 161, 179, 180, 183, 185, 194, 221, 229, 232, 305, 308, 375, 380, 386, 388, 393, 395, 398, 401, 425, 442, 447, 451, 478, 491, 508, 516, 517, 519, 520, 528, 569, 570], "directional_offset_bi": [443, 451], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 104, 123, 137, 161, 176, 189, 190, 192, 198, 201, 202, 266, 268, 270, 374, 376, 377, 379, 381, 382, 385, 386, 387, 388, 392, 394, 401, 406, 408, 409, 413, 415, 416, 417, 419, 433, 440, 446, 448, 449, 451, 456, 457, 458, 461, 462, 464, 466, 467, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 486, 487, 495, 496, 497, 499, 507, 511, 516, 520, 523, 547, 573], "directori": [11, 82, 87, 374, 390, 449, 459, 489, 495, 497, 508, 511, 571], "dirk": [416, 430, 432], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374, 425], "disable_unicode_literals_warn": 374, "disadvantag": 571, "disagr": 379, "disambigu": 379, "disc": [453, 454, 456, 461], "discard": [401, 470, 473], "discard_on_copi": [87, 91], "discarded_ind": 473, "discarded_spati": 473, "discarded_t": 473, "disccus": 383, "discourag": 374, "discov": 571, "discrep": 448, "discret": [91, 133, 292, 297, 387, 476, 523], "discrete_correl": 133, "discrete_correlation_dict": 133, "discrete_correlation_err": [133, 292], "discuss": [13, 59, 271, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 411, 433, 484, 489, 500, 575], "disjoint": 388, "disk": [82, 110, 148, 151, 190, 200, 202, 221, 232, 234, 352, 373, 374, 384, 385, 386, 390, 397, 398, 442, 443, 448, 456, 457, 479, 480, 481, 482, 522, 525, 530, 534, 536], "disk_inc": 388, "diskspatialmodel": [72, 252, 397, 418, 439, 481, 482, 528], "dismiss": 100, "disp": [515, 516], "dispatch": 385, "dispers": [82, 88, 102, 103, 105, 107, 108, 109, 110, 111, 113, 115, 146, 147, 148, 151, 169, 175, 176, 179, 180, 183, 374, 380, 385, 386, 387, 419, 421, 431, 432, 433, 435, 443, 445, 448, 449, 456, 460, 478, 488, 489, 495, 496, 507, 516, 519, 570], "displac": 305, "displai": [11, 15, 82, 87, 91, 117, 129, 132, 207, 288, 322, 367, 371, 374, 375, 404, 406, 408, 425, 428, 439, 440, 443, 445, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 464, 465, 467, 468, 473, 474, 475, 476, 479, 481, 482, 486, 487, 489, 511, 571], "display_length": [87, 91], "disrupt": [414, 415], "dissolv": 418, "dist": [324, 404], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 126, 138, 139, 197, 243, 270, 297, 304, 330, 388, 431, 438, 450, 452, 462, 472, 473, 476, 505, 520, 547], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 472], "distance_max": [46, 47, 330, 473], "distance_min": [47, 330, 473], "distance_refer": 473, "distinct": [389, 390, 395, 488, 574], "distinguish": [282, 284, 398, 401, 443, 479], "distort": [388, 417], "distrib": [101, 448], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 101, 108, 140, 151, 186, 226, 237, 243, 282, 284, 323, 324, 328, 367, 370, 372, 373, 374, 378, 379, 382, 387, 392, 393, 396, 399, 400, 404, 407, 418, 427, 433, 439, 440, 443, 448, 450, 451, 454, 456, 460, 462, 464, 465, 476, 481, 484, 486, 497, 499, 511, 515, 516, 518, 524, 532, 547, 570, 572, 573], "divers": 398, "divid": [188, 194, 199, 395, 398, 450, 460, 483, 488, 489], "divis": 194, "djangoproject": 394, "djuvsland": 440, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 175, 193, 194, 299, 300, 375, 380, 382, 383, 385, 394, 401, 406, 410, 416, 419, 421, 427, 436, 440, 445, 448, 449, 450, 453, 454, 456, 465, 466, 470, 478, 480, 483, 493, 495, 496, 507, 511, 513, 514, 515, 517, 518, 520, 521, 569, 570], "dl4": [99, 101, 102, 105, 109, 110, 117, 121, 125, 129, 132, 154, 175, 375, 380, 401, 406, 421, 467, 474, 475, 476, 511, 569, 570], "dl5": [117, 121, 125, 129, 132, 401, 440, 467, 475, 476, 569, 570], "dl6": [117, 121, 125, 129, 132, 475, 569, 570], "dm": [19, 20, 26, 421, 436, 472, 482], "dm_exampl": 499, "dmfitfunct": 499, "dmk8w6tg": 470, "dmpipe": 499, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 472, 499], "dmsky": 499, "dn": [226, 237, 472, 570], "dnde": [19, 20, 26, 67, 122, 123, 124, 131, 133, 134, 135, 136, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 273, 398, 425, 446, 448, 449, 458, 462, 473, 474, 475, 482, 487, 495, 497, 509], "dnde_cu": 274, "dnde_err": [122, 124, 509], "dnde_errn": [67, 122, 124, 473], "dnde_error": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "dnde_errp": [67, 122, 124, 473], "dnde_ref": [122, 124, 398], "dnde_scan_valu": [122, 124], "dnde_ul": [67, 122, 124, 473, 497], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 104, 123, 146, 157, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 325, 367, 375, 377, 379, 380, 381, 384, 388, 389, 390, 391, 392, 393, 394, 397, 398, 401, 403, 404, 406, 408, 419, 444, 446, 448, 449, 451, 452, 453, 454, 456, 458, 459, 460, 464, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 486, 487, 495, 496, 497, 507, 511, 518, 523, 568, 571, 574, 575], "do_someth": 374, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 104, 123, 146, 188, 194, 197, 200, 207, 220, 242, 301, 338, 374, 375, 377, 379, 382, 388, 390, 391, 393, 394, 403, 410, 411, 413, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 524, 535, 537, 543, 559, 565, 566, 570, 571, 575], "docker": [391, 404], "dockerfil": [382, 403, 404], "docstr": [374, 394, 400, 425, 426, 427, 429, 432, 438, 439, 440, 482], "doctest": [157, 362, 375], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 284, 309, 313, 323, 348, 361, 374, 376, 378, 379, 381, 382, 384, 388, 390, 391, 393, 395, 397, 399, 400, 404, 405, 410, 411, 412, 419, 421, 422, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 479, 481, 486, 488, 489, 511, 522, 523, 524, 571], "doe": [16, 84, 87, 90, 91, 104, 123, 125, 129, 133, 149, 159, 162, 196, 234, 269, 280, 374, 375, 381, 382, 384, 386, 388, 389, 391, 393, 394, 397, 398, 400, 401, 416, 425, 436, 443, 444, 448, 451, 453, 456, 458, 459, 473, 476, 477, 478, 479, 480, 488, 499, 511, 520, 571], "doesn": [69, 374, 375, 379, 381, 382, 388, 391, 392, 394, 486, 487, 571], "dof": 573, "doi": [140, 400], "domain": [189, 190, 192, 198, 201, 202, 374, 388, 471], "domenico": 431, "dominguez": [222, 223, 397, 444, 537], "dominquez": 222, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 146, 373, 374, 377, 379, 381, 382, 391, 401, 404, 445, 448, 453, 458, 465, 480, 482, 569, 571, 574, 575], "donath": [383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 125, 147, 148, 154, 159, 162, 367, 374, 375, 377, 379, 380, 381, 385, 387, 388, 389, 390, 392, 393, 394, 397, 398, 400, 406, 410, 434, 439, 445, 451, 456, 457, 461, 462, 464, 467, 468, 474, 475, 478, 479, 482, 483, 507, 511, 519, 520, 524, 556, 573, 575], "dos2unix": 374, "dot": [50, 51, 54, 109, 110, 189, 190, 192, 198, 201, 202, 403, 439], "doubl": [27, 121, 133, 134, 288, 400, 432, 440], "doubling_dict": 288, "down": [50, 51, 54, 132, 379, 381, 384, 388, 393, 417, 474, 487, 574], "downgrad": [188, 373], "download": [67, 94, 101, 124, 377, 382, 390, 391, 394, 401, 403, 405, 406, 408, 410, 414, 415, 417, 418, 425, 434, 435, 436, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571], "downsampl": [102, 105, 109, 110, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 416, 422, 431, 474, 475], "downsampled_energi": 474, "downsampling_factor": [132, 458], "downward": [282, 284], "dozen": 374, "dpp": 400, "dr": [17, 18, 21, 22, 24, 25, 27, 530], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 151, 169, 264, 299, 300, 375, 382, 394, 410, 442, 445, 448, 449, 454, 456, 466, 470, 478, 483, 493, 495, 496, 508, 511, 513, 514, 515, 517, 518, 520, 521, 525, 557], "dr2": [65, 264, 425, 442, 525, 557], "dr3": [65, 263, 442, 482, 525, 557], "dr4": [65, 440], "draft": [374, 378, 379, 402, 434], "drag": 377, "draw": [33, 190, 323, 387, 484], "drawback": [389, 393], "drawn": [323, 387], "drift": [85, 94, 95, 436], "drive": 390, "driven": [11, 15, 380, 390, 392, 394, 433, 491, 510], "drop": [52, 53, 102, 105, 109, 110, 122, 124, 129, 147, 148, 154, 159, 162, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 221, 228, 268, 359, 378, 379, 390, 391, 396, 415, 418, 419, 422, 425, 432, 435, 460, 479, 507], "ds9": [83, 188, 197, 200, 204, 220, 242, 374, 375, 388, 417, 480, 482, 524], "ds9parser": 388, "dss": 384, "dt": [87, 91], "dtime_t": 471, "dtype": [33, 38, 87, 91, 111, 115, 144, 146, 149, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 220, 242, 301, 374, 402, 450, 453, 462, 470, 473, 474, 475, 477, 478, 479, 486, 487, 497, 509], "duck": [16, 84, 90, 104, 123], "due": [59, 87, 91, 374, 402, 428, 442, 447, 448, 479, 484, 486, 491, 547, 571], "dummi": [109, 110, 388, 453, 511], "dump": [16, 84, 90, 104, 123, 390], "dumps_kwarg": [16, 84, 90, 104, 123], "duplic": [87, 91, 100, 147, 374, 375, 377, 380, 394, 395, 398, 422, 425], "durat": [83, 86, 88, 94, 451, 460, 464, 466, 470, 486, 508, 511], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 102, 104, 105, 109, 110, 123, 166, 280, 375, 382, 386, 390, 393, 394, 396, 399, 400, 401, 402, 403, 404, 419, 422, 439, 440, 449, 450, 460, 465, 466, 470, 474, 478, 480, 484, 496, 507, 508, 570, 574], "dust": 222, "duti": 400, "dwarf": 499, "dx": [33, 305], "dy": [33, 305], "dydv1nsz": 456, "dynam": [371, 508], "dz": 305, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 104, 113, 123, 124, 125, 138, 146, 147, 148, 149, 151, 175, 182, 188, 189, 190, 192, 194, 196, 198, 200, 201, 202, 207, 210, 212, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 282, 284, 288, 301, 303, 307, 333, 341, 352, 363, 364, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 419, 425, 426, 427, 431, 433, 434, 435, 439, 442, 444, 445, 446, 448, 449, 450, 451, 454, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 493, 495, 496, 497, 499, 506, 507, 508, 509, 511, 515, 516, 521, 522, 523, 528, 529, 530, 537, 538, 540, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555, 565, 568, 570, 571, 572, 573, 574, 575, 576], "e2dnd": [19, 20, 26, 122, 123, 124, 131, 133, 134, 135, 136, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 398, 425, 432, 443, 444, 446, 448, 449, 450, 457, 473, 475, 497, 509, 511, 547], "e2dnde_err": [122, 124], "e2dnde_errn": [122, 124, 473], "e2dnde_errp": [122, 124, 473], "e2dnde_ref": [122, 124], "e2dnde_ul": [122, 124, 473], "e501": [19, 20, 146, 182, 193, 194, 200, 222, 371], "e_": [19, 20, 26, 50, 52, 53, 146, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 507, 513, 515, 516, 517, 538, 542, 550, 552, 553], "e_0": [224, 225, 226, 236, 237, 248, 249, 259, 262, 263, 264, 541, 542, 545, 547, 549, 552, 553, 554, 555], "e_b": 397, "e_cut": [67, 473], "e_cutoff": 547, "e_d": [248, 249], "e_edg": 422, "e_max": [67, 124, 398, 443, 448, 449, 450, 461, 465, 473, 474, 475, 476, 479, 484, 497, 509], "e_min": [67, 124, 398, 443, 448, 449, 450, 461, 465, 473, 474, 475, 476, 479, 484, 487, 497, 509], "e_peak": [226, 237], "e_reco": [111, 115, 146, 151, 468, 570], "e_ref": [67, 124, 398, 443, 448, 449, 465, 473, 475, 495, 497, 509], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 446, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 458, "e_sn": [43, 44, 52], "e_tru": [111, 115, 151, 468, 487], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 102, 105, 108, 109, 110, 114, 116, 117, 119, 121, 122, 124, 125, 129, 131, 132, 134, 135, 136, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 170, 171, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 207, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 242, 243, 244, 245, 247, 248, 249, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 292, 299, 338, 363, 372, 374, 377, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 394, 395, 398, 400, 404, 405, 412, 419, 422, 433, 436, 439, 445, 451, 452, 454, 456, 457, 458, 460, 461, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 488, 489, 496, 500, 506, 507, 508, 511, 515, 516, 517, 523, 524, 531, 547, 548, 570, 571, 574, 575], "eager": 390, "earli": [388, 393, 394, 486], "earlier": [381, 400], "earth": [41, 88, 90, 273, 487], "earth_azimuth_angl": [487, 497], "earthloc": [83, 85, 88, 90, 94, 97, 311, 401], "easi": [374, 375, 380, 385, 388, 389, 390, 393, 394, 398, 401, 419, 425, 433, 479, 480, 487, 508, 568, 569, 571, 575], "easier": [374, 380, 385, 393, 398, 433, 436, 486], "easiest": 407, "easili": [87, 91, 124, 380, 385, 386, 390, 401, 406, 407, 465, 466, 476, 477, 479, 487, 497, 571], "ebel": 452, "ebl": [222, 223, 271, 392, 397, 419, 422, 432, 439, 442, 447, 482, 491, 525, 557], "ebl_data_builtin": [444, 537], "ebl_dominguez11": [223, 537], "ebl_franceschini": [223, 271], "ebl_franceschini_2017": 223, "ebl_saldana": 223, "eblabsorbtionnormspectralmodel": 397, "eblabsorptionnormspectralmodel": [253, 397, 422, 444, 482, 537], "ebltabl": 444, "ebound": [146, 194, 524], "ebreak": [214, 259, 538, 552], "ec": [468, 482, 524], "eccentr": [221, 229, 232, 528, 529, 530], "echo": 571, "eco": 400, "ecosystem": 401, "ecpl": [67, 80, 224, 225, 226, 280, 397, 431, 446, 473, 482], "ecpl_norm": 543, "ecsv": [59, 63, 124, 386], "ecut": [224, 262, 542, 553], "edelson": [133, 289, 292, 471], "edelson1988": [133, 292], "edelson2002": 289, "edg": [102, 105, 109, 110, 117, 119, 121, 125, 128, 129, 132, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 158, 160, 161, 169, 170, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 221, 367, 388, 398, 416, 422, 425, 443, 444, 448, 457, 458, 459, 460, 461, 471, 475, 477, 478, 479, 480, 487, 488, 495, 518, 528], "edge_max": 528, "edge_min": 528, "edge_width": [221, 481, 528], "edgecolor": [371, 448, 450, 452, 458, 459, 462, 468, 472, 520, 528, 529, 530], "edges_max": [191, 193, 194, 199, 479], "edges_min": [191, 193, 194, 199, 479], "edisp": [16, 82, 87, 88, 96, 102, 105, 106, 109, 110, 111, 115, 146, 147, 148, 151, 155, 169, 175, 176, 179, 180, 258, 299, 300, 375, 384, 385, 386, 387, 390, 420, 422, 425, 431, 432, 433, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 464, 466, 467, 470, 474, 478, 483, 486, 487, 488, 489, 495, 507, 515, 516, 570], "edisp2d": [148, 151, 375], "edisp3d": 477, "edisp_": 507, "edisp_2d": [82, 87, 151, 486, 489], "edisp_3d": 477, "edisp_ev": 477, "edisp_kernel": [146, 474, 515], "edisp_kernel_map": [147, 488], "edisp_map": [103, 108, 147, 148, 477, 515], "edisp_new": 477, "edispkernel": [105, 111, 115, 147, 151, 179, 420, 515], "edispkernelmap": [102, 105, 106, 109, 110, 113, 148, 154, 155, 159, 162, 169, 176, 179, 421, 422, 452, 478, 487, 511, 515], "edispmap": [102, 103, 105, 108, 109, 110, 147, 154, 155, 159, 162, 169, 176, 179, 180, 386, 387, 395, 415, 418, 419, 420, 422, 425, 477, 507, 515], "edit": [375, 377, 379, 381, 382, 383, 390, 394, 403, 404, 407, 495, 571], "editor": [375, 400, 449, 495, 571], "editori": 400, "edm": 476, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 133, 149, 188, 197, 200, 207, 220, 239, 242, 273, 274, 283, 290, 292, 394, 476, 524], "eemin": 547, "eff": [149, 513, 516, 529, 530], "eff_area": 477, "effarea": 477, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 105, 107, 148, 149, 175, 176, 181, 183, 184, 197, 220, 242, 364, 365, 374, 379, 384, 385, 387, 388, 398, 429, 431, 448, 460, 462, 465, 471, 484, 488, 489, 491, 495, 516, 524, 529, 530, 570], "effective_area": [155, 387, 486], "effective_livetim": 478, "effective_times_src": 478, "effectivearea3d": 477, "effectiveareat": [386, 413, 425, 429], "effectiveareatable2d": [88, 148, 155, 161, 183, 380, 429, 477, 486, 513], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 110, 379, 385, 386, 387, 388, 389, 396, 446, 483, 516, 521, 573], "effort": [381, 383, 390, 391, 393, 394, 397, 416, 507], "eflux": [19, 20, 26, 122, 123, 124, 133, 134, 135, 136, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 398, 425, 462, 482, 509], "eflux_err": [122, 124, 398], "eflux_errn": [122, 124], "eflux_errp": [122, 124], "eflux_ref": [122, 124], "eflux_ul": [122, 124], "eg": [374, 444, 456, 464, 467, 470, 474, 477, 481, 482, 484], "egal": 486, "egg": 407, "einasto": [21, 499], "either": [67, 82, 87, 88, 91, 95, 110, 122, 124, 151, 166, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 234, 283, 301, 331, 363, 375, 377, 379, 381, 388, 390, 393, 396, 400, 406, 425, 439, 449, 456, 462, 467, 474, 476, 482, 484, 495, 507, 509, 511, 522, 524, 568, 571], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "ekqniil2": 444, "el": [26, 472], "elabor": [400, 452], "elaps": [83, 383, 570], "electron": [50, 273, 486, 547], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 102, 105, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 195, 197, 198, 200, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 367, 392, 439, 473, 479, 523], "elementtre": 486, "elev": 389, "elif": [374, 388, 401], "elli": [413, 426], "ellips": [221, 388, 524, 528], "ellipseannulusskyregion": [520, 524], "ellipseskyregion": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 445, 482, 520], "ellipsoid": 476, "ellipt": [524, 530], "elong": [415, 418, 419, 528, 529], "elpas": 439, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 122, 124, 132, 196, 374, 377, 388, 391, 398, 401, 402, 404, 406, 408, 483, 571, 573], "elsewher": [114, 116], "email": [375, 377, 400, 404], "emax": [129, 247, 274, 453, 459, 550], "emax_fit": 468, "embryon": 390, "emce": [383, 391, 415, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "emerg": 384, "emeri": 434, "emin": [129, 247, 274, 453, 459, 550], "emin_fit": 468, "emiss": [52, 68, 134, 380, 385, 389, 448, 454, 456, 457, 460, 481, 486, 487, 507, 521, 547, 568], "emit": [82, 210, 211, 212, 213, 360, 374, 415, 433, 444, 516], "emitt": 448, "emmanoulopoulo": 297, "emmanoulopoulos2010": 297, "emphas": 475, "emphasi": 476, "empir": 40, "emploi": 450, "empti": [92, 100, 102, 105, 109, 110, 138, 169, 189, 190, 192, 196, 198, 201, 202, 207, 242, 360, 382, 384, 416, 428, 456, 460, 461, 464, 467, 478, 479, 488, 500, 507, 520, 521, 524], "empty_dataset": 443, "empty_i": 467, "empty_map": [102, 105, 109, 110, 459, 478, 520], "emsembl": 93, "en": [34, 83, 87, 88, 91, 125, 182, 197, 207, 271, 301, 377, 394, 443, 451, 453, 456, 458, 464, 467, 476, 477, 480, 486, 508, 511, 522, 524], "enabl": [383, 386, 407, 416, 425, 434, 443, 451, 453, 456, 458, 464, 467, 486, 518], "encapsul": [200, 398, 522], "enclos": [202, 375, 445, 450, 476, 480], "enclosur": [82, 153, 450, 477], "encod": [16, 84, 87, 90, 91, 104, 123], "encompass": [188, 522, 524], "encount": [163, 406, 407, 408, 409, 450, 460, 467, 470, 489, 559, 571], "encourag": [374, 379, 400, 403, 433], "end": [52, 53, 86, 87, 91, 92, 94, 100, 102, 109, 122, 124, 132, 194, 234, 242, 379, 381, 383, 385, 386, 388, 389, 390, 391, 393, 394, 397, 426, 436, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 573], "end_po": [126, 334, 462], "endswith": 374, "energet": 460, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 124, 125, 126, 129, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 169, 171, 175, 176, 178, 179, 180, 182, 183, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 276, 278, 369, 370, 374, 380, 383, 385, 386, 387, 388, 389, 390, 392, 393, 396, 398, 402, 406, 410, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 444, 445, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 470, 473, 474, 475, 478, 479, 488, 489, 491, 495, 496, 497, 506, 507, 508, 511, 516, 518, 519, 520, 522, 523, 524, 531, 537, 543, 546, 548, 551, 556, 566, 569, 570, 572], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 115, 122, 124, 146, 147, 148, 151, 159, 161, 162, 169, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 398, 443, 445, 448, 450, 451, 452, 454, 458, 460, 461, 466, 467, 470, 474, 477, 478, 479, 482, 487, 488, 496, 515, 518, 520, 521, 523, 524], "energy_axis_new": 474, "energy_axis_tru": [102, 105, 109, 110, 111, 112, 113, 115, 146, 147, 148, 149, 151, 156, 157, 159, 169, 375, 419, 443, 445, 448, 450, 451, 452, 454, 458, 460, 461, 464, 466, 467, 468, 470, 474, 477, 478, 487, 488, 496, 515, 518, 520, 521], "energy_bin": 390, "energy_bin_per_decade_max": 112, "energy_bound": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 388, 425, 444, 446, 448, 450, 456, 457, 468, 472, 473, 476, 482, 487, 496, 497, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556], "energy_cent": 268, "energy_column": 398, "energy_depend": 459, "energy_dependent_estim": [442, 459, 463], "energy_edg": [16, 117, 119, 121, 125, 126, 129, 132, 138, 139, 142, 194, 321, 398, 444, 448, 449, 452, 453, 454, 456, 457, 458, 459, 462, 465, 466, 467, 468, 475, 488, 495, 496, 509], "energy_estim": 488, "energy_flux": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 482, 497], "energy_flux_err": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "energy_flux_error": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "energy_index": 156, "energy_integr": 51, "energy_logspac": 393, "energy_mask": [187, 188, 197, 200, 421, 450, 456, 468, 474, 476, 480, 484], "energy_max": [19, 20, 26, 83, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 146, 187, 188, 194, 197, 200, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 268, 271, 276, 388, 390, 456, 461, 468, 470, 472, 474, 478, 482, 497], "energy_min": [19, 20, 26, 52, 53, 83, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 146, 187, 188, 194, 197, 200, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 268, 271, 276, 388, 390, 456, 461, 468, 470, 472, 474, 478, 482, 497], "energy_nam": [159, 162], "energy_nod": [397, 482], "energy_pow": [19, 20, 26, 124, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 278, 448, 456, 468, 476, 496, 497], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 102, 105, 109, 110, 425, 474, 480, 554, 555], "energy_range_fit": [102, 105, 109, 110, 474], "energy_range_saf": [102, 105, 109, 110, 474], "energy_range_tot": [102, 105, 109, 110, 480], "energy_reco": [374, 464], "energy_ref": [122, 124], "energy_resolut": 433, "energy_saf": 390, "energy_tru": [16, 96, 102, 105, 109, 110, 111, 115, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 169, 176, 179, 187, 188, 194, 197, 200, 299, 300, 374, 375, 387, 439, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 464, 465, 466, 467, 468, 470, 474, 477, 478, 479, 480, 482, 483, 486, 487, 488, 495, 496, 515, 516, 518, 520, 521, 523, 524], "energy_true_axi": 146, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 417, "energydependentmorphologi": 459, "energydependentmorphologyestim": [440, 459], "energydependentmultigausspsf": [155, 413, 477, 486, 517], "energydependenttablepsf": [380, 395, 414, 425], "energydispers": [146, 147, 148, 151, 386, 420, 430, 433, 434], "energydispersion2d": [88, 146, 148, 155, 161, 179, 180, 375, 380, 425, 427, 432, 477, 486, 515], "energydispersion3d": 477, "energyoffsetarrai": 430, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 377, 401], "engin": [87, 91], "english": 511, "enhanc": [379, 383, 410], "enlarg": 521, "enough": [387, 389, 390, 448, 451, 454, 464, 465, 480, 518], "enrico": 390, "enrico_config": 390, "enrico_xml": 390, "enriqu": [382, 390, 394, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 433, 434, 435], "ensembl": 93, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 175, 195, 280, 374, 380, 385, 386, 397, 401, 407, 427, 443, 448, 466, 475, 480, 518, 523, 532], "enter": [211, 213, 220, 242, 410], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 176, 445, 456, 459, 471], "entri": [43, 44, 87, 91, 94, 119, 122, 125, 126, 129, 130, 132, 133, 140, 207, 208, 220, 242, 280, 341, 374, 386, 394, 398, 401, 403, 406, 408, 425, 436, 445, 449, 473, 476, 479, 482, 483, 511, 512, 524], "entry_point": 426, "enum": [95, 152, 316, 317], "enumer": [448, 460, 473, 476, 481, 484], "env": [377, 391, 403, 405, 406, 408, 409, 434, 571], "envelop": [387, 476, 496], "environ": [11, 82, 339, 373, 374, 377, 381, 382, 386, 391, 394, 403, 404, 406, 407, 408, 409, 410, 414, 415, 417, 433, 434, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 571], "envis": 383, "envvar": 11, "enxhhtc": 470, "eoncer14": 478, "eosc": 400, "episod": 134, "epoch": 357, "epsilon": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "epsilon_": [102, 109, 507], "epsilon_k": [102, 109, 507], "epsmch": 476, "eq": 101, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 397, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 117, 121, 125, 129, 132, 146, 194, 374, 384, 387, 435, 448, 465, 466, 480, 484, 507, 523, 574], "equat": [27, 263, 264, 289, 533, 534, 538, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555, 573, 574], "equatori": [95, 152, 188, 189, 190, 192, 195, 197, 200, 201, 202, 477], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 187, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 367, 375, 386, 387, 388, 397, 398, 439, 440, 448, 473, 478, 479, 480, 482, 486, 495, 507, 509, 511, 522, 523, 524, 571, 572, 573], "er": [26, 472], "era": 222, "ereco": [146, 477], "erf": [230, 528], "erg": [52, 53, 67, 443, 448, 473, 497, 504, 511], "erlangen": 393, "erod": 202, "eros": [200, 202], "err": 476, "errat": 374, "errn": [121, 125, 129, 130, 132, 207, 436, 573], "errn_2sigma": 573, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 101, 102, 104, 105, 109, 110, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 165, 191, 194, 199, 210, 212, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 282, 284, 288, 289, 290, 292, 297, 352, 374, 375, 388, 389, 390, 392, 397, 398, 401, 402, 415, 419, 421, 423, 425, 426, 428, 432, 433, 436, 438, 439, 440, 444, 445, 446, 448, 449, 451, 452, 453, 456, 457, 458, 459, 461, 464, 465, 467, 468, 470, 471, 473, 475, 482, 483, 484, 486, 495, 496, 497, 499, 507, 509, 511, 529, 547, 556, 568, 571], "error_callback": 165, "errorbar": [83, 101, 102, 105, 109, 110, 194, 198, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 443, 470, 484], "errp": [121, 125, 129, 130, 132, 207, 436, 573], "errp_2sigma": 573, "escap": [374, 400], "especi": [87, 91, 134, 377, 381, 384, 388, 394, 395, 404, 425, 431, 445, 458, 466, 473, 479, 484, 486, 487], "essenti": [384, 386, 389, 419, 420, 421, 462, 479], "establish": [374, 387], "estim": [6, 19, 20, 26, 50, 72, 101, 105, 110, 112, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 164, 170, 171, 172, 178, 187, 188, 197, 200, 202, 207, 210, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 280, 287, 290, 295, 321, 367, 378, 380, 383, 387, 388, 389, 390, 393, 396, 402, 406, 415, 416, 419, 420, 421, 422, 425, 426, 427, 431, 432, 433, 434, 436, 439, 440, 442, 443, 444, 448, 450, 454, 456, 457, 458, 461, 463, 466, 467, 468, 469, 474, 476, 480, 484, 485, 488, 491, 495, 496, 507, 511, 521, 568, 569, 570, 572, 574], "estimate_best_fit": [125, 126, 129, 130], "estimate_count": [125, 126, 129, 130], "estimate_energy_depend": 119, "estimate_errn_errp": [125, 126, 129, 130], "estimate_excess_map": 121, "estimate_exposure_reco_energi": 121, "estimate_fit_input_map": 132, "estimate_flux_default": 132, "estimate_flux_map": 132, "estimate_flux_point": [125, 126, 129], "estimate_kernel": [121, 132], "estimate_map": 117, "estimate_mask_default": [121, 132], "estimate_min_e2dnd": 131, "estimate_min_excess": 131, "estimate_npr": [125, 126, 129, 130], "estimate_npred_excess": [125, 126, 129], "estimate_pad_width": 132, "estimate_scan": [125, 126, 129, 130], "estimate_t": [125, 126, 129, 130], "estimate_time_bin_flux": 129, "estimate_ul": [125, 126, 129, 130], "estimator_result": [140, 468], "et": [26, 33, 59, 101, 133, 134, 149, 222, 289, 290, 292, 297, 384, 452, 459, 471, 499, 570], "eta": [232, 233, 255, 530, 534, 561], "eta_": 50, "eta_b": 50, "eta_rang": [530, 534], "etc": [105, 110, 122, 374, 379, 380, 384, 385, 386, 389, 390, 394, 395, 398, 400, 401, 422, 449, 451, 456, 464, 465, 467, 468, 470, 474, 479, 482, 484, 487, 495, 507, 520], "etru": 477, "eu": 394, "euclidean": 299, "europ": 400, "ev": [475, 477, 511, 547], "ev2": 477, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 102, 105, 108, 109, 110, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 176, 182, 197, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 314, 374, 379, 383, 389, 392, 393, 396, 397, 398, 402, 414, 415, 416, 418, 421, 425, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 460, 461, 468, 477, 482, 484, 486, 487, 507, 529, 530, 537, 570, 573], "evaluate_contain": [150, 158, 160, 427], "evaluate_direct": [150, 158, 160], "evaluate_energy_flux": [248, 249], "evaluate_error": [19, 20, 26, 124, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 392], "evaluate_geom": [216, 217, 221, 228, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270, 440, 482, 530], "evaluate_integr": [247, 248, 249], "evaluate_paramet": [150, 158, 160], "evaluation_bin_size_min": [216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270], "evaluation_radiu": [216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 268, 270, 385, 386, 397, 482], "evaluation_region": [216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 200, 211, 213, 374, 377, 379, 381, 382, 388, 391, 392, 400, 401, 417, 465, 468, 475, 476, 478, 479, 480, 481, 482, 495, 507, 509, 533, 534, 571], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 103, 104, 108, 113, 121, 131, 148, 159, 162, 163, 170, 178, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 331, 374, 375, 378, 380, 384, 386, 388, 389, 390, 401, 406, 410, 417, 418, 419, 421, 425, 426, 427, 432, 433, 434, 435, 436, 439, 440, 442, 445, 448, 449, 450, 454, 456, 457, 463, 467, 478, 488, 491, 493, 495, 496, 511, 519, 520, 521, 569, 570, 573], "event_3fhl": 497, "event_class": [84, 487, 497], "event_det_coord": [103, 108], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [387, 486, 487, 497, 508], "event_list": [83, 374, 375, 387], "event_list_meta": [103, 108, 420], "event_sampl": [442, 460, 463], "event_sampling_nrg_depend_model": [442, 461, 463], "event_typ": [104, 487, 497], "eventlist": [84, 88, 103, 108, 178, 189, 190, 192, 198, 201, 202, 374, 375, 380, 387, 388, 389, 401, 410, 415, 422, 427, 429, 430, 431, 433, 434, 460, 461, 468, 479, 486, 487, 497, 508, 511, 520], "eventlistbas": 89, "eventlistdataset": 434, "eventlistmetadata": [83, 401], "events2": 83, "events_": 460, "events_0001": 460, "events_1": 508, "events_2": 508, "events_3fhl": 497, "events_bkg": 387, "events_gc_3fhl": 497, "events_list": 387, "events_path": [82, 460], "events_src": 387, "events_tot": 387, "events_vela": 468, "eventu": [374, 379, 390, 393, 394, 410, 482], "ever": 574, "everi": [188, 190, 202, 270, 374, 377, 382, 383, 384, 386, 390, 399, 401, 404, 445, 448, 479, 496, 571], "everyon": 379, "everyth": [374, 392, 393, 511], "everywher": [374, 388, 393, 394, 414], "evid": [134, 473], "evolut": [50, 52, 53, 222, 380, 394, 442, 463, 491, 504, 505, 525], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 222, 391, 394, 401, 461, 477], "evt_sampl": 460, "ex": [11, 479, 481, 482], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 392, 479, 487], "exactli": [117, 121, 125, 129, 132, 194, 369, 448, 450, 466, 468, 480, 484, 487, 507, 524], "exagger": 365, "examin": [400, 515], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 101, 102, 105, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 126, 128, 129, 130, 131, 132, 134, 138, 139, 141, 142, 144, 146, 148, 149, 150, 151, 157, 159, 162, 169, 172, 174, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 207, 211, 213, 234, 240, 271, 274, 280, 283, 299, 300, 321, 325, 331, 341, 353, 354, 359, 362, 364, 365, 367, 369, 371, 374, 375, 377, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 400, 401, 402, 406, 407, 408, 410, 414, 416, 419, 422, 425, 426, 427, 430, 432, 433, 434, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 508, 511, 513, 514, 515, 517, 522, 524, 525, 526, 536, 557, 565, 566, 567, 568, 571, 573, 575, 576], "example_cub": 479, "example_cube_fgst": 479, "exce": 112, "except": [67, 69, 80, 87, 91, 102, 105, 109, 110, 165, 189, 190, 192, 198, 201, 202, 301, 371, 374, 385, 389, 393, 477, 481, 524], "excerpt": 489, "excess": [15, 67, 72, 102, 105, 109, 110, 118, 121, 122, 124, 125, 126, 129, 131, 135, 136, 140, 169, 282, 284, 289, 290, 372, 386, 389, 421, 422, 428, 433, 440, 443, 444, 448, 449, 451, 452, 453, 456, 458, 462, 464, 467, 468, 473, 474, 475, 478, 480, 481, 488, 495, 496, 509, 511], "excess_estim": 488, "excess_estimator_integr": 488, "excess_integr": 488, "excess_map": [16, 449, 453, 454, 456, 495], "excess_map_estim": 468, "excess_matching_signific": [424, 434], "excess_min": 142, "excess_r": 474, "excessestim": 398, "excessmapconfig": 16, "excessmapestim": [118, 138, 139, 140, 398, 421, 422, 423, 425, 428, 438, 440, 454, 456, 468, 475, 480, 488, 509], "excesspointsestim": 398, "excessprofileestim": [398, 422], "exchang": 388, "exclud": [16, 84, 90, 101, 102, 104, 105, 109, 110, 123, 128, 170, 172, 211, 213, 220, 242, 380, 437, 478, 480, 520, 521], "exclude_default": [16, 84, 90, 104, 123], "exclude_non": [16, 84, 90, 104, 123], "exclude_unset": [16, 84, 90, 104, 123], "exclus": [16, 83, 164, 166, 171, 172, 173, 174, 177, 188, 200, 380, 388, 390, 421, 423, 445, 453, 456, 478, 518, 520], "exclusion_mask": [164, 166, 171, 172, 173, 174, 177, 448, 454, 458, 478, 480, 496, 518, 520, 521], "exclusion_mask_2d": 478, "exclusion_mask_crab": [449, 495], "exclusion_radiu": 480, "exclusion_region": 448, "exclusionmask": 431, "execut": [11, 121, 125, 129, 130, 132, 374, 375, 377, 379, 381, 382, 383, 389, 390, 394, 404, 405, 406, 407, 408, 409, 410, 419, 427, 433, 442, 447, 455, 463, 469, 478, 479, 485, 487, 490, 491, 492, 494, 497, 498, 526, 536, 557, 567, 569], "exercis": [377, 390, 394, 400], "exhibit": 459, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 101, 102, 105, 107, 109, 110, 122, 124, 147, 148, 154, 159, 162, 174, 187, 188, 189, 190, 192, 193, 196, 197, 198, 200, 201, 202, 208, 220, 234, 242, 266, 267, 268, 270, 343, 358, 374, 377, 379, 382, 383, 385, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 400, 401, 406, 407, 410, 411, 414, 418, 419, 433, 434, 436, 439, 452, 454, 474, 479, 480, 482, 483, 487, 508, 523, 524, 572], "exist_ok": [448, 449, 456, 457, 460, 495, 496], "exit": [11, 15, 87, 91, 211, 213, 220, 242, 415, 535, 571], "exot": 391, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 149, 227, 230, 237, 248, 249, 262, 375, 397, 467, 482, 529, 530, 537, 541, 542, 543, 544, 553, 554, 555, 559, 560, 561, 574], "expand": [129, 339, 384, 425], "expand_map": 129, "expans": [50, 52, 53], "expcutoffpowerlaw": 543, "expcutoffpowerlaw3fglspectralmodel": [253, 397, 446, 482, 542], "expcutoffpowerlawnormspectralmodel": [226, 253, 440, 482, 543], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 214, 215, 218, 222, 224, 225, 230, 236, 237, 239, 243, 245, 247, 248, 249, 253, 254, 259, 261, 262, 263, 264, 267, 271, 397, 446, 448, 456, 482, 541, 547], "expdecai": [227, 442, 525, 567], "expdecay_model": [460, 559], "expdecaytemporalmodel": [265, 397, 421, 425, 460, 467, 482, 559], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 108, 110, 122, 174, 179, 180, 185, 200, 282, 283, 284, 285, 287, 291, 298, 331, 374, 379, 387, 389, 390, 391, 394, 399, 401, 443, 445, 450, 451, 452, 454, 460, 461, 465, 471, 472, 476, 479, 480, 484, 487, 489, 507, 509, 572, 573, 574], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 448, 461], "experi": [374, 377, 379, 383, 385, 389, 402, 404, 433, 499, 570, 575], "experienc": [383, 409], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 571], "expert": 394, "expertis": 391, "expfactor": [263, 264, 554, 555], "expir": 387, "explain": [87, 91, 374, 377, 379, 388, 391, 393, 394, 400, 404, 406, 408, 419, 425, 443, 448, 450, 472, 476, 480, 482, 486, 511, 569, 571], "explan": [117, 121, 125, 129, 132, 379, 411, 471, 575], "explicit": [87, 91, 188, 190, 374, 375, 390, 392, 398, 523, 575], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 301, 384, 396, 405, 415, 461, 481, 509, 523, 575], "explor": [189, 190, 192, 198, 201, 202, 382, 390, 410, 442, 448, 453, 456, 459, 462, 463, 465, 466, 470, 471, 473, 474, 481, 488, 489, 495, 497, 511, 520], "explos": 52, "expomap": 387, "expon": [397, 482], "exponenti": [28, 30, 36, 39, 40, 77, 224, 225, 226, 227, 262, 263, 264, 375, 385, 419, 442, 456, 460, 467, 525, 557], "exponentialcutoffpowerlaw": 547, "export": [84, 87, 90, 91, 102, 104, 105, 122, 123, 124, 377, 398, 401, 406, 408, 419, 429, 436, 437, 440, 449, 482, 488, 489, 495], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 388, 389, 390, 393, 394, 438, 440, 479, 491, 509, 510, 569], "exposur": [16, 83, 88, 102, 105, 106, 108, 109, 110, 121, 132, 137, 147, 148, 154, 157, 159, 162, 164, 169, 176, 179, 180, 181, 183, 184, 185, 258, 293, 296, 298, 380, 383, 384, 385, 386, 387, 398, 417, 422, 430, 432, 433, 434, 436, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 464, 466, 467, 470, 474, 478, 479, 480, 488, 495, 496, 507, 516, 519, 524, 573], "exposure_geom": 148, "exposure_hdu": [147, 148, 154, 159, 162], "exposure_hdu_band": [147, 148, 154, 159, 162], "exposure_hpx": 487, "exposure_map": [147, 148, 154, 159, 162, 179, 180, 185, 477], "exposure_max": 474, "exposure_min": 474, "exposure_tim": 387, "express": [121, 134, 282, 284, 385, 397, 398, 440, 454, 476, 477, 482, 484, 507, 523, 530, 572, 573, 574], "exptest": 431, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 164, 191, 194, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 242, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 283, 381, 385, 386, 387, 388, 394, 396, 397, 398, 401, 406, 418, 420, 425, 442, 447, 448, 452, 461, 465, 473, 479, 480, 481, 482, 487, 491, 519, 520], "extended_archive_v18": 535, "extended_source_spectral_analysi": [442, 445, 447], "extens": [41, 146, 189, 190, 192, 194, 201, 202, 216, 217, 220, 221, 229, 232, 242, 244, 246, 255, 256, 260, 266, 270, 376, 379, 380, 381, 382, 383, 385, 387, 389, 390, 391, 392, 393, 394, 404, 428, 459, 460, 461, 482, 571], "extent": [200, 220, 242, 388, 452, 482], "extern": [113, 375, 400, 426, 430, 431, 434, 486, 511], "extnam": 477, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 101, 104, 123, 187, 188, 193, 197, 198, 200, 206, 207, 209, 266, 267, 299, 373, 375, 381, 382, 388, 390, 391, 394, 400, 401, 430, 433, 434, 444, 479, 480, 511, 524], "extra_term": 298, "extract": [16, 84, 90, 100, 102, 104, 105, 109, 110, 122, 123, 124, 129, 147, 148, 154, 159, 162, 165, 170, 171, 176, 178, 186, 189, 190, 191, 192, 194, 199, 200, 201, 202, 268, 374, 384, 389, 398, 400, 401, 427, 428, 439, 440, 443, 445, 448, 449, 450, 451, 456, 457, 460, 461, 462, 464, 470, 474, 475, 479, 495, 507, 515, 520], "extragalact": [222, 444, 486], "extrapol": [101, 143, 144, 145, 169, 189, 190, 192, 198, 201, 202, 222, 271, 313, 314, 425, 430, 432, 433, 477, 479, 486, 487, 523], "extras_requir": 391, "extrem": [374, 401, 479, 530], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 132, 142, 196, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 300, 301, 328, 374, 377, 391, 396, 397, 402, 405, 406, 408, 427, 436, 443, 445, 448, 449, 451, 457, 458, 459, 460, 461, 466, 467, 468, 470, 472, 473, 476, 478, 480, 482, 483, 484, 486, 487, 488, 493, 495, 496, 497, 505, 520, 537, 547, 558, 559, 560, 561, 562, 563, 564, 571, 572, 573], "f0": [269, 565], "f06": 48, "f06b": [49, 501], "f06p": 49, "f1": [269, 565], "f2": [269, 565], "f3fepaz5": 478, "f4": [144, 149, 450, 474, 477, 479, 486, 487], "f8": [477, 487], "f_": [288, 290, 300, 507], "f_0": [247, 550], "f_dead": [83, 88], "f_i": 288, "f_max": 471, "f_max_err": 471, "f_mean": 471, "f_mean_err": 471, "f_min": 471, "f_min_err": 471, "f_pp": 289, "f_var": 289, "fabio": [387, 392, 415, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 432, 434, 436, 438, 439, 440], "face": [379, 382], "facecolor": [371, 444, 448, 450, 458, 459, 462, 468, 472, 528, 529, 530], "facil": 399, "fact": [19, 20, 97, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 400, 445, 524], "facto": 400, "factor": [19, 20, 23, 102, 103, 105, 108, 109, 110, 117, 121, 122, 147, 148, 150, 154, 156, 157, 158, 159, 160, 162, 169, 176, 182, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 205, 210, 211, 212, 213, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 269, 270, 272, 283, 374, 387, 389, 421, 443, 451, 452, 453, 456, 458, 462, 464, 467, 474, 475, 478, 482, 486, 507, 524, 537], "factor1": [19, 20, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270], "factor_max": [19, 20, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270], "factor_min": [19, 20, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270], "factori": [189, 190, 201, 202, 388, 393, 397, 522, 524], "factoris": [258, 397, 482, 568], "fail": [16, 84, 90, 104, 123, 207, 375, 377, 388, 403, 404, 428, 457, 487], "failur": [436, 439], "faint": 572, "fair": [374, 400], "fair4r": [374, 400], "fake": [102, 105, 109, 110, 386, 387, 417, 450, 451, 464, 467, 484], "fall": [77, 134, 172, 199, 220, 242, 374, 381, 383, 384, 391, 434, 435, 471], "fallback": 374, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 121, 122, 123, 124, 125, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 169, 176, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 283, 301, 314, 331, 337, 340, 342, 343, 371, 374, 388, 390, 397, 402, 433, 434, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 487, 495, 496, 497, 508, 511, 518, 520, 521, 535, 547, 556], "falsifi": 484, "famili": 400, "familiar": [391, 392, 479, 480, 497], "fanci": [374, 468], "far": [382, 387, 389, 391, 395, 398, 401, 410, 425, 460, 499], "fashion": [389, 394], "fast": [374, 388, 392, 476], "faster": [87, 91, 189, 190, 192, 198, 201, 202, 352, 440, 452], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 501, "favour": [379, 387, 402, 484], "favourit": 458, "fc": [482, 524], "fcluster": [299, 483], "fcluster_kwarg": [299, 483], "fcn": 476, "fdx": 374, "fe": 273, "feasibl": [388, 393, 451, 464, 474], "featur": [6, 13, 87, 91, 96, 117, 138, 299, 300, 364, 365, 374, 377, 381, 383, 384, 385, 386, 388, 390, 391, 396, 397, 398, 400, 401, 402, 407, 412, 415, 416, 417, 418, 419, 421, 422, 425, 429, 432, 433, 434, 435, 471, 479, 480, 482, 483, 509, 547], "feature_irf": 483, "features_irf": [96, 299, 300, 483], "feb": [380, 381, 391, 395, 410, 412], "februari": 412, "fed": 450, "feedback": [377, 379, 383, 388, 390, 391, 394, 395, 397, 403, 433, 477, 511], "feedstock": [403, 404], "feel": [384, 571], "feijen": [438, 439, 440], "feldman": [416, 422, 430, 432, 570], "feldman1998": [570, 573], "fellowship": 400, "felt": 374, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 125, 126, 128, 132, 189, 190, 192, 198, 199, 201, 202, 222, 273, 275, 280, 381, 382, 383, 384, 386, 387, 390, 391, 394, 404, 406, 411, 413, 414, 417, 419, 422, 426, 429, 430, 431, 432, 433, 434, 442, 444, 446, 452, 460, 462, 473, 479, 480, 481, 482, 490, 491, 497, 499, 508, 511, 516, 535, 545, 550, 568, 575], "fermi_3fhl": [83, 189, 190, 192, 198, 201, 202, 481, 487, 497], "fermi_3fhl_events_select": [83, 487], "fermi_3fhl_exposure_cube_hpx": 487, "fermi_3fhl_psf_gc": 487, "fermi_bkg_model": 481, "fermi_ct": 128, "fermi_dataset": [280, 481, 487], "fermi_lat": [394, 434, 442, 487, 490], "fermi_model": 487, "fermi_prof": 126, "fermi_ts_imag": 375, "fermilat": 444, "fermipi": [381, 383, 386, 390, 394, 398, 431, 433, 487, 499], "fermitool": 390, "fetch": [15, 374, 382, 413, 426, 495, 571], "few": [82, 83, 87, 88, 91, 373, 374, 375, 377, 379, 380, 381, 382, 384, 386, 388, 392, 394, 399, 403, 404, 410, 424, 435, 437, 440, 445, 449, 454, 456, 458, 473, 475, 476, 479, 486, 495, 496, 520, 524, 576], "fewer": [388, 394], "ff": 400, "fft": 202, "fftconvolv": 202, "fgl": [199, 480], "fgst": [188, 189, 190, 192, 193, 194, 200, 201, 202, 479], "fhit": 488, "fidalgo": [384, 389, 414, 434, 435], "fiduci": 479, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 104, 123, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 158, 160, 161, 166, 228, 243, 303, 307, 361, 374, 388, 400, 401, 410, 415, 420, 427, 434, 448, 450, 454, 456, 458, 460, 477, 478, 480, 486, 487, 511, 513, 514, 515, 516, 517, 518, 520, 547, 570], "fieldinfo": [16, 84, 90, 104, 123], "fig": [202, 362, 443, 445, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 462, 465, 467, 468, 472, 476, 480, 484, 520, 521, 530, 534, 537, 569], "figsiz": [88, 102, 105, 109, 110, 127, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 189, 190, 192, 198, 201, 202, 362, 445, 448, 451, 452, 454, 456, 457, 458, 459, 465, 466, 467, 468, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 520, 530, 534, 537], "figur": [88, 102, 105, 109, 110, 127, 143, 144, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 162, 189, 190, 192, 198, 201, 202, 352, 361, 362, 368, 374, 375, 379, 394, 404, 444, 448, 452, 456, 458, 459, 460, 462, 465, 466, 471, 472, 474, 476, 478, 479, 481, 482, 487, 488, 489, 571], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 175, 189, 190, 192, 196, 198, 201, 202, 208, 220, 222, 234, 242, 266, 267, 268, 269, 270, 271, 309, 337, 340, 343, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 410, 418, 419, 425, 427, 429, 431, 432, 433, 434, 436, 437, 439, 440, 442, 443, 447, 450, 451, 455, 456, 458, 460, 461, 463, 464, 467, 469, 473, 474, 478, 479, 480, 481, 482, 485, 488, 489, 490, 491, 492, 494, 497, 498, 499, 510, 511, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575], "file_dir": 309, "file_model": 460, "file_nam": 309, "filemod": [16, 449, 453, 454, 456, 495, 571], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 126, 128, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 189, 190, 192, 196, 198, 201, 202, 220, 222, 234, 242, 266, 267, 268, 269, 270, 271, 275, 277, 279, 280, 309, 340, 343, 353, 374, 375, 379, 422, 448, 449, 453, 454, 456, 457, 461, 462, 473, 474, 475, 479, 480, 481, 482, 486, 487, 495, 496, 497, 508, 511, 513, 514, 515, 517, 535, 537, 565, 566, 571], "filename_1": 508, "filename_2": 508, "filename_arf": 107, "filename_bkg": 107, "filename_model": [100, 122, 280, 481, 487], "filename_rmf": 107, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 102, 104, 105, 108, 109, 110, 123, 146, 157, 188, 189, 190, 192, 198, 200, 201, 202, 271, 374, 382, 383, 387, 390, 394, 400, 403, 404, 419, 426, 433, 436, 445, 460, 461, 473, 477, 478, 480, 487, 496, 523], "fill_between": [19, 20, 26, 127, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 468], "fill_by_coord": [157, 189, 190, 192, 198, 201, 202, 479, 487, 523], "fill_by_idx": [189, 190, 192, 198, 201, 202, 523], "fill_by_pix": [189, 190, 192, 198, 201, 202, 523], "fill_ev": [189, 190, 192, 198, 201, 202, 428, 439, 450, 479, 487, 493], "fill_nan": 190, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 189, 190, 192, 198, 201, 202, 266, 267, 270, 374, 477, 479], "filled_t": [87, 91], "filter": [88, 89, 380, 384, 386, 388, 389, 434, 435, 438, 470, 480, 483, 491, 496, 497], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [122, 124], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [467, 468], "final": [129, 283, 374, 375, 381, 382, 384, 387, 388, 390, 391, 393, 395, 397, 399, 400, 404, 419, 420, 421, 443, 444, 445, 446, 448, 456, 458, 460, 461, 465, 466, 468, 472, 474, 476, 478, 480, 483, 487, 488, 491, 495, 496, 497, 507, 508, 509], "finalis": 378, "find": [19, 20, 26, 132, 138, 139, 146, 172, 173, 177, 204, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 293, 374, 379, 385, 387, 393, 403, 404, 405, 425, 427, 433, 434, 439, 440, 446, 448, 452, 473, 474, 479, 482, 486, 489, 497, 571, 573, 574], "find_peak": [139, 434, 452, 458], "find_peaks_in_flux_map": 452, "find_root": 425, "finder": [138, 172, 173, 425, 434, 452], "fine": [281, 314, 387, 454, 474, 487, 524, 571], "finer": [460, 474, 524], "fingertip": 373, "finish": [377, 381, 383, 403, 431, 433], "finit": [100, 102, 105, 109, 110, 147, 148, 154, 159, 175, 190, 198, 202, 268, 392], "fink": [222, 223, 444, 537], "fir": 547, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 102, 105, 109, 110, 122, 124, 126, 133, 138, 146, 163, 172, 189, 190, 191, 194, 198, 199, 220, 242, 274, 292, 334, 363, 374, 375, 377, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 398, 399, 400, 404, 405, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 432, 434, 435, 436, 437, 439, 443, 445, 446, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 495, 496, 497, 508, 520, 523, 571], "firstli": [459, 460, 475], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 166, 169, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 206, 208, 209, 210, 212, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 268, 269, 270, 271, 280, 281, 282, 284, 285, 286, 291, 294, 298, 309, 310, 311, 356, 357, 360, 362, 367, 369, 373, 374, 375, 380, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 406, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 430, 432, 433, 434, 435, 437, 439, 440, 442, 443, 447, 451, 452, 454, 455, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 473, 474, 475, 477, 478, 479, 481, 482, 483, 485, 486, 488, 489, 491, 493, 497, 507, 508, 509, 510, 511, 513, 514, 515, 517, 518, 519, 520, 528, 535, 537, 547, 565, 566, 569, 570, 575], "fit2": 481, "fit_covari": [449, 495], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [445, 448, 456, 457], "fit_prior": 484, "fit_rang": [16, 449, 453, 454, 456, 495], "fit_result": [207, 280, 449, 470, 475, 495], "fit_results_nul": 280, "fit_scipi": 476, "fit_sherpa": 476, "fit_stat_scan": 389, "fit_statist": 374, "fit_statistics_cython": 404, "fitconfig": 16, "fitmc": 392, "fitresult": [207, 427, 439, 476, 496], "fitsfixedwarn": [452, 535], "fitsonli": 486, "fitspectrum": 429, "fitstepresult": [206, 209], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 432, 433, 446], "five": 497, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 106, 107, 132, 141, 159, 161, 176, 207, 244, 245, 250, 270, 377, 379, 380, 381, 385, 386, 389, 391, 396, 398, 399, 400, 403, 404, 406, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 443, 450, 451, 453, 454, 456, 457, 460, 464, 466, 467, 470, 476, 477, 478, 481, 482, 483, 495, 521, 523, 531, 548], "fixed_altaz": 85, "fixed_bin": 141, "fixed_icr": [85, 159, 443, 451, 460, 461, 464, 467], "fixed_offset": [96, 175, 425], "fixed_r_in": 164, "fixed_width": 164, "fixedpointinginfo": [88, 159, 182, 439, 440, 443, 451, 460, 461, 464, 467], "fk5": [524, 535], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 108, 122, 124, 125, 126, 129, 130, 187, 188, 189, 190, 192, 194, 195, 197, 198, 200, 201, 202, 206, 207, 208, 209, 445, 456, 460, 473, 482], "flake8": 377, "flare": [134, 288, 406, 419, 420, 442, 465, 467, 469, 470, 471, 491, 509, 520], "flask": 433, "flat": [124, 134, 151, 161, 187, 188, 193, 195, 197, 200, 203, 204, 244, 385, 398], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 187, 188, 195, 197, 200, 471], "fledg": 402, "flexibl": [82, 325, 374, 379, 383, 384, 385, 388, 390, 394, 395, 401, 479, 511, 568], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 102, 105, 109, 110, 113, 117, 121, 123, 124, 127, 130, 131, 132, 138, 139, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 164, 166, 175, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 203, 204, 207, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 284, 287, 291, 293, 301, 312, 319, 328, 330, 363, 364, 365, 478, 484, 486, 487, 571, 575], "float32": [187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 453, 458, 479], "float64": [87, 91, 111, 115, 146, 149, 374, 402, 410, 475, 477, 479, 509, 571], "float64float64float64": 458, "float64float64float64float64float64float64float64float32bool": 446, "float64float64float64float64float64float64float64float64": 458, "float_a": [87, 91], "flow": [401, 569, 570], "fluctuat": [282, 284, 398, 451, 464, 484, 573], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 101, 102, 105, 109, 110, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 214, 215, 216, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 249, 250, 254, 257, 258, 259, 261, 262, 263, 264, 267, 269, 271, 272, 273, 274, 278, 287, 288, 289, 290, 292, 297, 378, 386, 387, 389, 390, 392, 394, 395, 397, 406, 413, 416, 418, 419, 421, 425, 427, 431, 432, 433, 435, 440, 442, 447, 450, 452, 456, 458, 460, 461, 463, 465, 466, 467, 468, 470, 471, 474, 479, 482, 487, 491, 505, 507, 516, 525, 532, 547, 568, 569, 570, 573], "flux1": 292, "flux2": 292, "flux_err": [19, 20, 26, 122, 124, 132, 139, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 288, 289, 290, 297, 452, 465, 471], "flux_err1": 292, "flux_err2": 292, "flux_errn": [122, 124, 473], "flux_errp": [122, 124, 473], "flux_int_cu": 274, "flux_map": [122, 124, 398, 472], "flux_metadata_fits_kei": 123, "flux_per_omega": 482, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 101, 122, 124, 125, 386, 443, 446, 448, 449, 453, 454, 456, 458, 468, 473, 474, 495, 496, 497], "flux_point_dataset": 386, "flux_points_at_tim": 398, "flux_points_ctb_37b": 124, "flux_points_dataset": [448, 458, 468], "flux_points_dataset_no_ul": 448, "flux_points_fermi": 457, "flux_points_hawc": 457, "flux_points_hess": 457, "flux_points_intrins": 444, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 448, "flux_points_ob": 444, "flux_points_recomput": 124, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 101, "flux_profil": [442, 462, 463], "flux_profile_estim": 462, "flux_profile_fermi": 462, "flux_quant": [133, 134, 135, 136, 471], "flux_ref": [122, 124, 398], "flux_sensit": [122, 124], "flux_ul": [122, 124, 132, 473], "fluxestim": [122, 124, 125, 395, 421, 423, 424, 425, 427, 440], "fluxmap": [121, 123, 124, 132, 139, 425, 440, 452, 509], "fluxmapestim": 398, "fluxmapsmetadata": 401, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 101, 122, 123, 125, 126, 129, 133, 134, 135, 136, 141, 386, 389, 398, 401, 425, 432, 433, 439, 440, 443, 446, 457, 462, 465, 471, 473, 474, 497, 506, 507, 509, 511], "fluxpointdataset": [419, 448], "fluxpointestim": [389, 416, 422, 435], "fluxpointfit": 386, "fluxpointfitt": 434, "fluxpointprofil": 435, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 102, 105, 395, 398, 401, 415, 419, 440, 446, 448, 457, 458, 467, 468, 507], "fluxpointsdatasetmetadata": 401, "fluxpointsestim": [118, 126, 129, 321, 395, 396, 398, 406, 416, 421, 422, 425, 439, 440, 444, 448, 457, 458, 468, 475, 495, 496], "fluxpointsetim": 398, "fluxpointsmetadata": 401, "fluxprofileestim": [118, 425, 438, 440, 462], "fly": 384, "fmt": [470, 476, 484], "focu": [384, 394, 419, 432, 450, 571], "focus": [384, 400], "fold": [108, 398, 446, 457, 475, 507, 509], "folder": [11, 82, 94, 101, 106, 110, 124, 338, 374, 375, 379, 382, 403, 405, 410, 415, 425, 428, 449, 456, 460, 486, 495, 496, 569, 571], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 102, 104, 106, 107, 109, 110, 122, 123, 124, 127, 132, 138, 140, 188, 189, 190, 192, 196, 201, 202, 207, 258, 274, 280, 364, 365, 367, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 417, 418, 419, 421, 422, 425, 427, 428, 434, 435, 439, 440, 443, 444, 445, 446, 448, 449, 451, 452, 453, 456, 457, 460, 461, 465, 466, 467, 468, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 486, 491, 495, 497, 499, 501, 502, 507, 509, 511, 513, 515, 516, 520, 522, 523, 524, 525, 533, 534, 538, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555, 556, 569, 570, 572, 573, 574, 576], "font": [189, 190, 192, 198, 201, 202, 375, 479], "fontsiz": [371, 468, 476], "foo": [87, 91], "footprint": [189, 190, 192, 198, 200, 201, 202, 531], "footprint_rectangle_sky_region": 200, "forbid": [16, 84, 90, 104, 123], "forbidden": 481, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 147, 148, 154, 157, 159, 162, 200, 202, 301, 379, 389, 415], "forecom": [374, 399], "foremost": 571, "forens": 390, "foreseen": [384, 399], "forev": 415, "forg": [373, 391, 403, 404, 406, 407, 410, 433, 486], "forget": [449, 459, 495], "forgot": 374, "forgotten": 374, "fork": 377, "form": [16, 84, 87, 90, 91, 102, 104, 123, 159, 162, 197, 313, 374, 380, 384, 389, 397, 399, 401, 411, 433, 480, 484, 508, 516, 529, 539, 569], "formal": [379, 402, 452], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 104, 105, 107, 109, 110, 122, 123, 124, 125, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 182, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 220, 228, 234, 242, 258, 268, 271, 309, 331, 355, 356, 363, 373, 375, 382, 383, 384, 385, 386, 388, 390, 398, 400, 401, 404, 413, 425, 427, 430, 434, 436, 437, 439, 440, 444, 446, 448, 449, 450, 452, 453, 454, 456, 458, 460, 461, 462, 465, 467, 471, 473, 475, 477, 479, 480, 482, 486, 487, 488, 489, 495, 497, 499, 505, 507, 508, 509, 510, 513, 514, 515, 516, 517, 524, 565, 566, 570, 571, 572], "format_plot_xaxi": [191, 194, 199, 477], "format_plot_yaxi": [194, 477], "formatt": [363, 479], "formatwarn": 374, "former": [400, 416, 421, 445, 481, 569, 572], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 158, 248, 249, 298, 443, 572], "forthcom": 475, "forum": 403, "forward": [19, 20, 26, 83, 87, 91, 102, 105, 109, 110, 126, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 171, 193, 197, 198, 199, 207, 214, 215, 218, 219, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 299, 363, 368, 375, 381, 384, 398, 446, 457, 475, 507, 509, 524], "forwardref": [16, 84, 90, 104, 123], "found": [19, 20, 26, 82, 86, 87, 91, 134, 172, 177, 196, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 288, 377, 378, 382, 389, 399, 400, 419, 422, 423, 424, 428, 454, 460, 471, 482, 484, 489, 508, 509, 520, 521], "four": [377, 385, 398, 465, 486, 487, 515, 517, 523, 570], "fov": [121, 143, 144, 166, 167, 181, 182, 184, 186, 228, 374, 380, 388, 430, 433, 434, 453, 470, 477, 480, 481, 486, 496, 519, 570], "fov_": 374, "fov_align": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 477], "fov_background": [453, 495], "fov_bkg_mak": [478, 518], "fov_lat": [144, 477, 486, 516], "fov_lat_axi": 477, "fov_lon": [144, 477, 486, 516], "fov_lon_axi": 477, "fov_theta": 374, "fovalign": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 477], "fovbackground": [402, 421], "fovbackgroundmak": [167, 420, 425, 478, 495, 496], "fovbackgroundmodel": [15, 102, 108, 109, 112, 166, 238, 402, 422, 439, 440, 456, 457, 460, 461, 464, 474, 481, 495, 496, 518, 531], "fp": [122, 124, 141, 398, 495, 509, 511], "fp_dataset": [448, 474], "fp_dnde": 398, "fp_energy_flux": 398, "fp_estim": 475, "fp_result": 475, "fpe": [321, 396, 398, 444, 448, 458, 468, 496], "fpe_no_ul": 448, "fpp": 289, "fpp_err": [289, 471], "fpp_tabl": 471, "fr": [400, 486], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 105, 110, 146, 149, 205, 226, 230, 247, 249, 262, 288, 290, 300, 397, 507, 515, 516, 528, 529, 530, 533, 534, 538, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555, 559, 560, 561, 563, 573, 574], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 121, 131, 136, 150, 156, 158, 159, 160, 162, 197, 203, 204, 214, 215, 218, 221, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 289, 290, 384, 389, 432, 440, 443, 451, 460, 464, 474, 477, 480, 486, 487, 488], "frame": [16, 83, 85, 91, 94, 95, 96, 102, 105, 109, 110, 111, 115, 126, 138, 159, 169, 172, 182, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270, 299, 300, 335, 350, 374, 375, 383, 385, 388, 398, 415, 416, 418, 419, 420, 445, 448, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 474, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 495, 496, 497, 515, 520, 522, 523, 524, 528, 529, 530, 531, 532, 533, 534, 535], "framework": [385, 387, 388, 390, 392, 393, 397, 415, 416, 422, 434, 468, 482, 501, 511], "franceschini": [222, 223, 271, 439, 444, 537], "franceschini17": [223, 444, 537], "franceschni": 537, "frd_ab": 223, "free": [50, 52, 53, 77, 102, 105, 109, 110, 125, 129, 130, 169, 207, 211, 213, 244, 245, 280, 379, 389, 415, 444, 449, 451, 453, 454, 456, 458, 459, 464, 465, 467, 470, 474, 476, 478, 481, 482, 484, 487, 491, 495, 496, 499, 509, 518, 531, 547, 548, 571, 573, 574], "free_paramet": [211, 213, 280, 470, 476, 481], "freedom": [119, 122, 124, 140, 400, 440, 459, 509, 573, 574], "freez": [19, 20, 26, 87, 91, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 389, 400, 415, 425, 440, 453, 464, 470, 476, 482, 547], "freeze_al": [211, 213], "frenk": 499, "frequenc": [269, 283, 503], "frequent": [194, 374, 383, 392, 400, 466, 467, 471, 480, 511, 512, 571], "frequentist": 392, "fridai": 383, "friendli": [374, 379, 401, 436, 449, 495, 511], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 175, 176, 178, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 287, 290, 299, 300, 301, 311, 319, 321, 323, 324, 328, 331, 332, 336, 341, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575], "from_align": [200, 425], "from_attribut": [16, 84, 90, 104, 123], "from_bound": [149, 151, 159, 188, 194, 200, 398, 457, 460, 461, 474, 477, 478, 479, 489, 523, 524], "from_covariance_matrix": 402, "from_default": 193, "from_diagonal_respons": [111, 115, 146, 147, 148, 452, 487], "from_dict": [19, 20, 26, 101, 102, 105, 109, 110, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 418, 425, 484], "from_dir": [82, 89, 96, 169, 299, 300, 410, 445, 448, 450, 458, 466, 468, 470, 478, 483, 486, 489, 493, 496, 508, 511, 518, 520, 521], "from_edg": [148, 189, 190, 192, 194, 198, 201, 202, 451, 464, 467, 477, 487, 488], "from_edisp_kernel": 147, "from_energy_bound": [102, 105, 109, 110, 111, 115, 146, 148, 149, 157, 159, 169, 187, 188, 193, 194, 197, 200, 202, 375, 443, 445, 448, 450, 457, 458, 460, 461, 466, 468, 470, 474, 477, 478, 482, 487, 488, 496, 515, 518, 520, 521, 524], "from_energy_edg": [146, 194, 369, 474, 477], "from_events_fil": [82, 460, 486], "from_factor_matrix": 205, "from_fil": [82, 508], "from_fits_head": 85, "from_gauss": [146, 147, 151, 157, 159, 162, 515], "from_gaussian": 422, "from_geom": [102, 105, 109, 110, 147, 148, 157, 159, 162, 189, 190, 192, 196, 198, 201, 202, 419, 438, 474, 479, 480, 524, 530], "from_gti": 199, "from_gti_bound": 199, "from_hdu": [188, 190, 202], "from_hdulist": [102, 105, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 196, 197, 198, 200, 201, 202, 479], "from_head": [84, 90, 104, 123, 188, 200, 401], "from_irf": 161, "from_log10": [236, 237, 545], "from_map": [122, 124], "from_map_dataset": [105, 110], "from_nam": [454, 458], "from_nod": 194, "from_orm": [16, 84, 90, 104, 123], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272], "from_parametr": [149, 513], "from_posit": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 461], "from_refer": 397, "from_region": [197, 221, 439, 520], "from_region_map": 271, "from_spatial_model": 157, "from_spectrum_dataset": [110, 443, 451], "from_stack": [83, 86, 92, 122, 124, 189, 190, 191, 192, 194, 198, 201, 202, 205, 211, 213, 439, 440, 508], "from_tabl": [124, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 191, 193, 194, 198, 199, 234, 436, 443], "from_table_hdu": [86, 193, 194], "from_time_bound": 199, "from_time_edg": [199, 470, 471], "from_time_interv": 86, "from_wcs_til": 190, "from_yaml": [16, 220, 242, 385, 449], "fromnumer": [450, 470], "front": [383, 403, 432], "frozen": [19, 20, 26, 101, 125, 129, 166, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 389, 397, 402, 417, 440, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 467, 470, 473, 474, 475, 476, 480, 481, 482, 484, 487, 495, 496, 497, 509, 518, 547, 556], "fr\u00f6se": 440, "fssm0kep": 456, "ftol": 476, "ftool": 389, "fulfil": [401, 479], "full": [82, 125, 132, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 190, 208, 220, 242, 309, 370, 373, 374, 379, 383, 384, 387, 389, 390, 394, 400, 402, 405, 412, 415, 425, 427, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 511, 522, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569], "full_enclosur": [182, 477], "full_output": [19, 20, 26, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272], "fulli": [129, 187, 188, 197, 200, 269, 383, 384, 391, 395, 400, 404, 407, 417, 419, 427, 445, 471, 482, 486, 488, 489], "fun": [374, 377], "func": [17, 18, 21, 22, 24, 25, 27, 90, 189, 190, 192, 198, 201, 202, 276, 322, 326, 327, 367, 454, 456], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 90, 91, 100, 101, 102, 103, 105, 108, 109, 110, 117, 122, 129, 132, 133, 134, 135, 136, 139, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 189, 190, 192, 194, 198, 201, 202, 207, 208, 209, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 257, 258, 259, 261, 262, 263, 264, 267, 271, 276, 282, 283, 284, 292, 293, 297, 314, 322, 323, 325, 326, 330, 331, 341, 359, 362, 363, 367, 369, 371, 373, 377, 380, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 397, 398, 399, 401, 402, 406, 408, 410, 411, 413, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 443, 444, 448, 449, 450, 451, 452, 456, 458, 459, 460, 461, 462, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 488, 489, 491, 495, 496, 497, 499, 500, 501, 506, 507, 508, 510, 511, 520, 522, 524, 529, 530, 532, 559, 568, 569, 570, 571, 572, 574, 576], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [387, 396, 401], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 117, 121, 125, 126, 129, 132, 195, 325, 374, 377, 378, 380, 383, 384, 387, 388, 391, 393, 394, 395, 396, 397, 420, 421, 422, 425, 427, 454, 460, 472, 473, 474, 475, 479, 496, 497, 500, 501, 516, 571], "furthermor": 486, "futur": [103, 108, 374, 379, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 433, 456, 460, 462, 479, 487, 500, 509, 568], "fvar": [136, 290, 389, 432], "fvar_err": [290, 471], "fvar_tabl": 471, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 113, 138, 188, 189, 190, 192, 194, 198, 200, 201, 202, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 288, 301, 341, 363, 369, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 400, 401, 403, 404, 406, 407, 408, 425, 427, 431, 433, 434, 435, 436, 439, 445, 446, 448, 449, 451, 458, 460, 462, 472, 473, 474, 476, 479, 480, 481, 482, 486, 487, 491, 497, 499, 503, 506, 507, 508, 509, 511, 516, 521, 522, 523, 530, 568, 570, 571, 573, 575, 576], "g0": [456, 487], "g28": 67, "g320": 473, "g8f5262e5f": [104, 123, 411, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "g_1": 149, "g_2": 149, "g_3": 149, "ga": 462, "gabriel": 434, "gadf": [83, 84, 85, 86, 88, 90, 95, 102, 104, 105, 109, 110, 123, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 384, 387, 398, 401, 425, 427, 436, 439, 475, 477, 479, 495, 507, 511, 524, 570], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 379, 391, 433], "gal_diffus": 390, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 102, 105, 109, 110, 111, 115, 125, 126, 128, 159, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 221, 229, 232, 246, 255, 256, 308, 335, 374, 375, 385, 388, 394, 413, 415, 432, 444, 445, 448, 451, 452, 453, 456, 458, 459, 460, 462, 464, 467, 472, 473, 474, 479, 480, 481, 482, 486, 497, 499, 502, 506, 521, 522, 523, 524, 528, 529, 530, 531, 532, 533, 534, 570, 576], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 222, 289, 290, 413, 445], "galelli": [438, 440], "gallant": 433, "galleri": [404, 420, 422, 425, 436, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 512, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "gallery_jupyt": 525, "gallery_python": 525, "galprop": [188, 189, 190, 192, 201, 202], "galprop2": [188, 189, 190, 192, 201, 202], "gambit": 499, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 121, 125, 131, 158, 182, 189, 190, 192, 201, 202, 222, 224, 225, 226, 247, 248, 249, 271, 274, 328, 374, 380, 382, 385, 386, 387, 388, 398, 404, 406, 410, 411, 416, 430, 431, 432, 433, 434, 443, 444, 446, 448, 449, 450, 454, 457, 458, 459, 460, 462, 473, 477, 479, 480, 483, 486, 488, 489, 495, 497, 499, 501, 502, 506, 507, 508, 511, 514, 516, 518, 520, 521, 530, 537, 541, 542, 549, 550, 568, 569, 570, 571, 572, 573, 576], "gamma1": [214, 538, 552], "gamma2": [214, 538, 552], "gamma_1": [259, 262, 263, 264, 397, 553, 554, 555], "gamma_2": [259, 262, 263, 264, 397, 553, 554, 555], "gamma_min": [131, 443], "gamma_min_sensit": 121, "gammacat": [55, 66, 432, 446], "gammalib": [374, 387], "gammamc_dif": 499, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 396, 397, 398, 402, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 490, 491, 493, 495, 496, 497, 500, 501, 503, 504, 505, 511, 512, 513, 514, 515, 517, 521, 522, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 576], "gammapy_analysis_config": 390, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 101, 102, 105, 109, 110, 114, 116, 117, 121, 122, 124, 126, 128, 130, 132, 138, 139, 141, 142, 144, 148, 149, 150, 151, 159, 169, 189, 190, 192, 198, 201, 202, 207, 223, 234, 271, 280, 299, 300, 353, 362, 367, 369, 374, 375, 377, 390, 406, 408, 410, 414, 415, 416, 425, 434, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 508, 509, 511, 513, 514, 515, 517, 518, 520, 521, 535, 565, 566], "gammapy_extra": 414, "gammapybaseconfig": 16, "gammapydeprecationwarn": [374, 462, 487, 543], "gammmapi": [384, 391], "gap": 133, "garcia": 434, "gather": [388, 394, 403], "gauss": [42, 51, 54, 102, 105, 127, 128, 150, 190, 202, 229, 230, 231, 232, 397, 431, 468, 479, 482, 497, 528, 529], "gauss_elong": 482, "gauss_temp": 482, "gaussian": [67, 68, 80, 81, 101, 117, 127, 146, 147, 151, 157, 159, 162, 190, 202, 229, 230, 231, 232, 233, 289, 290, 385, 393, 397, 402, 418, 422, 442, 444, 446, 448, 458, 460, 464, 467, 471, 473, 476, 477, 482, 484, 486, 497, 515, 517, 525, 536, 557, 567], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 117, "gaussian_compon": [67, 473], "gaussian_filt": [127, 202], "gaussian_model": 560, "gaussian_sigma": 476, "gaussianband2d": 433, "gaussianprior": [402, 444, 484], "gaussianspatialmodel": [80, 81, 114, 116, 252, 397, 418, 458, 459, 464, 482, 529], "gaussianspectralmodel": [253, 397, 482, 544], "gaussiantemporalmod": 425, "gaussiantemporalmodel": [265, 397, 421, 482, 560], "gb": [382, 384, 486, 488], "gc": [86, 102, 105, 109, 110, 114, 116, 117, 121, 126, 128, 132, 138, 139, 362, 367, 369, 377, 452, 453, 456, 458, 460, 462, 472, 474, 475, 479, 481, 482, 486, 487, 497, 499, 508, 509], "gc_3fhl": 497, "gc_3fhl_cutout": 497, "gc_3fhl_smooth": 497, "gc_imag": 462, "gc_po": 487, "gc_sep": 481, "gca": 444, "gcc": 410, "ge": 90, "geminga": 59, "gen_gaussian_model": 561, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 102, 103, 104, 105, 108, 109, 110, 123, 148, 159, 162, 189, 190, 192, 193, 194, 198, 201, 202, 207, 219, 227, 231, 232, 233, 234, 235, 250, 257, 266, 267, 269, 271, 272, 283, 323, 325, 328, 329, 330, 331, 338, 375, 377, 383, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 404, 407, 410, 416, 420, 421, 422, 425, 427, 432, 436, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 507, 511, 516, 522, 524, 525, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 571, 573, 574], "generalconfig": 16, "generalis": [124, 393, 419, 477], "generalized_gaussian_model": 561, "generalizedgaussianspatialmodel": [252, 422, 482, 530], "generalizedgaussiantemporalmodel": [265, 427, 482, 561], "generalrandom": 417, "generatejsonschema": [16, 84, 90, 104, 123], "gengauss": [233, 482, 530], "geodeticloc": 94, "geolat": 445, "geom": [16, 23, 83, 102, 105, 109, 110, 111, 113, 115, 121, 122, 124, 126, 132, 147, 148, 157, 159, 162, 169, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 192, 196, 197, 198, 200, 201, 202, 216, 217, 220, 221, 228, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 270, 385, 387, 389, 422, 425, 434, 440, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 495, 496, 497, 509, 518, 520, 521, 522, 523, 524, 527, 529, 530, 531, 532], "geom_24_energy_bin": 524, "geom_6_energy_bin": 524, "geom_edisp": [102, 105, 109, 110, 474], "geom_energi": 524, "geom_exposur": [102, 105, 109, 110, 438, 474], "geom_imag": [454, 458, 524], "geom_irf": 387, "geom_psf": [102, 105, 109, 110, 474], "geom_tru": 419, "geomconfig": 16, "geometri": [23, 83, 100, 102, 105, 109, 110, 113, 122, 124, 132, 147, 148, 154, 157, 159, 162, 166, 169, 171, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 216, 217, 220, 221, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 270, 370, 380, 386, 389, 390, 419, 425, 436, 448, 449, 450, 451, 453, 454, 456, 460, 461, 464, 474, 475, 478, 487, 488, 507, 509, 511, 519, 523, 569, 570], "geomspac": [124, 402, 475], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 102, 104, 106, 107, 109, 117, 121, 123, 125, 126, 129, 130, 132, 138, 141, 146, 147, 148, 154, 159, 162, 187, 188, 189, 190, 192, 193, 196, 197, 198, 200, 201, 202, 205, 211, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 309, 325, 374, 375, 379, 380, 381, 382, 383, 384, 388, 389, 391, 398, 400, 401, 402, 404, 405, 407, 408, 410, 411, 414, 416, 431, 432, 433, 434, 443, 449, 451, 452, 456, 457, 458, 464, 466, 470, 473, 474, 476, 477, 478, 480, 481, 482, 484, 486, 487, 488, 489, 491, 495, 496, 497, 499, 507, 511, 524, 570, 574], "get_altaz": [85, 94, 439], "get_bia": 146, "get_bias_energi": 146, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [189, 190, 192, 198, 201, 202, 478, 479, 487, 488, 523], "get_by_idx": [189, 190, 192, 198, 201, 202, 479, 523], "get_by_pix": [189, 190, 192, 198, 201, 202, 523], "get_cl": [446, 473, 480], "get_coord": [187, 188, 193, 197, 200, 418, 425, 434, 461, 479, 480, 520, 524], "get_dataset": [15, 449, 453, 454, 456, 465, 495, 511], "get_devel_vers": 377, "get_edges_fixed_bin": 141, "get_edges_min_t": 141, "get_edisp_kernel": [147, 148, 420, 425, 474, 487, 515], "get_events_meta_data": 387, "get_excess_map": [15, 495], "get_filenam": [106, 107], "get_flux_point": [15, 122, 124, 398, 420, 449, 495], "get_group_by_idx": 398, "get_hdu": 309, "get_icr": [85, 94, 439], "get_idx": [187, 188, 197, 200, 524], "get_image_by_coord": [189, 190, 192, 198, 201, 202, 479], "get_image_by_idx": [189, 190, 192, 198, 201, 202], "get_image_by_pix": [189, 190, 192, 198, 201, 202], "get_index_list": 188, "get_irfs_featur": [299, 300, 439, 483], "get_kernel": 117, "get_light_curv": 15, "get_mean": 146, "get_observ": [15, 82, 96, 299, 300, 416, 427, 445, 448, 449, 450, 453, 454, 456, 458, 460, 465, 466, 468, 470, 478, 483, 488, 489, 493, 495, 496, 511, 518, 520, 521], "get_ogip_meta": 107, "get_pix": 200, "get_pointing_altaz": [88, 483], "get_pointing_icr": [88, 439, 458, 478, 496], "get_psf_kernel": [157, 159, 162, 440, 487], "get_random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 328, 329, 330, 331, 374], "get_rebinned_axi": 466, "get_resolut": 146, "get_respons": 432, "get_scal": 117, "get_scale_model": [125, 126, 129], "get_spectrum": [189, 190, 192, 198, 201, 202], "get_subcovari": 205, "get_transform": [452, 458, 528, 529], "get_valid_path": 106, "get_wcs_coord_and_weight": 197, "getattr": 402, "getitem": 432, "getlogg": [374, 454, 458, 465, 466, 467, 470, 493], "getter": 375, "getting_start": 394, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 126, 132, 189, 190, 192, 194, 198, 201, 202, 446, 450, 452, 456, 457, 462, 464, 467, 468, 472, 473, 478, 479, 480, 481, 486, 487, 488, 497, 524, 547, 569, 570], "gev2": [19, 472], "gevgevgev1": 446, "gh": [374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404], "git": [86, 258, 374, 375, 377, 379, 381, 382, 400, 407, 436], "github": [375, 377, 378, 379, 380, 382, 383, 392, 394, 400, 403, 404, 407, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 430, 431, 432, 433, 434, 435, 511], "giuliani": 387, "giunti": [415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 436, 439], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 101, 137, 288, 289, 374, 379, 383, 384, 388, 389, 390, 391, 394, 395, 400, 404, 415, 417, 419, 427, 440, 448, 449, 452, 459, 461, 466, 470, 471, 473, 476, 477, 478, 479, 482, 486, 487, 495, 511, 516, 571, 572, 574, 575], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 119, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 171, 172, 175, 177, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 280, 282, 284, 290, 299, 301, 304, 305, 312, 319, 323, 326, 327, 335, 361, 362, 367, 371, 374, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 397, 398, 400, 402, 414, 419, 425, 433, 434, 439, 443, 444, 445, 446, 449, 452, 460, 461, 462, 464, 465, 466, 467, 472, 473, 474, 475, 477, 478, 479, 480, 482, 486, 487, 495, 497, 507, 508, 509, 511, 515, 516, 520, 521, 523, 524, 530, 534, 537, 568, 570, 571, 572, 573], "glast": 487, "glat": [41, 67, 68, 83, 374, 448, 473, 479, 487], "glat_err": 473, "glat_pnt": [458, 486], "glimps": [488, 491], "gll_iem_v06_cutout": [189, 190, 192, 198, 201, 202], "gll_iem_v06_gc": [460, 479, 481, 482, 487], "gll_psc_v16": 61, "gll_psc_v20": 473, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 375, 474, 475], "global": [16, 33, 42, 45, 46, 47, 100, 102, 103, 105, 108, 109, 110, 148, 159, 162, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 207, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 325, 328, 329, 330, 331, 374, 378, 380, 422, 439, 448, 458, 459, 468, 481, 484, 509, 569], "global_dataset": 478, "global_to_loc": 188, "glon": [41, 67, 68, 83, 374, 448, 473, 479, 487], "glon_pnt": [458, 486], "glossari": [394, 436, 507, 524], "glue": 511, "glueviz": 391, "gnufzi": 486, "go": [50, 87, 91, 377, 384, 394, 399, 436, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 499, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571], "goal": [379, 388, 402, 476], "goe": [41, 52, 364, 374, 393, 404, 462, 484], "gogia": 432, "good": [82, 86, 101, 124, 294, 298, 374, 379, 381, 382, 383, 384, 385, 388, 390, 391, 392, 394, 444, 448, 450, 451, 454, 464, 466, 467, 471, 472, 474, 476, 478, 480, 482, 487, 488, 491, 533, 534, 570, 575], "googl": [87, 91, 394, 403], "got": 486, "gov": [58, 60, 61, 62, 64, 65, 146, 194, 394, 550], "gp": [82, 83, 89, 375, 384, 390, 453, 456, 458, 468, 486, 488], "gpl3": 374, "gps_baseline_110380": [82, 83, 486], "gradient": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "grai": [365, 520, 547], "grand": 374, "grant": [377, 400], "granular": 471, "grayify_colormap": 393, "grb": [467, 471], "great": [379, 388, 393, 431, 491], "greater": [166, 367], "green": [101, 109, 110, 433, 459, 483, 484], "grei": 468, "grep": 409, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 128, 150, 158, 160, 189, 190, 192, 194, 198, 201, 202, 216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 276, 367, 374, 385, 390, 417, 419, 476, 523, 524, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564], "gridsearch": [207, 476], "gridspec": 361, "gridspec_kw": [452, 458, 465, 467, 537], "ground": [95, 389, 486, 572], "group": [86, 87, 91, 92, 125, 126, 129, 130, 132, 147, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 299, 380, 389, 393, 394, 395, 398, 403, 406, 416, 419, 421, 425, 431, 434, 452, 465, 467, 491, 509, 511, 525, 571], "group_1": 483, "group_2": 483, "group_bi": [87, 91, 398], "group_by_axi": 398, "group_by_label": [92, 483], "group_high_zenith": 483, "group_low_zenith": 483, "group_siz": [141, 466], "group_tabl": [86, 194, 199], "grouped_observ": 483, "grow": [382, 393, 433], "grown": 394, "gr\u00e9aux": 439, "gsfc": [58, 60, 61, 62, 64, 65, 146, 194, 394, 550], "gt": 477, "gt_qoj_c": 470, "gtexpcube2": 487, "gti": [82, 87, 88, 89, 100, 101, 102, 105, 109, 110, 122, 124, 126, 129, 163, 199, 258, 380, 383, 384, 387, 388, 389, 398, 417, 419, 420, 422, 435, 439, 440, 460, 466, 467, 470, 474, 478, 486, 488, 489, 507, 570], "gti_1": 508, "gti_2": 508, "gti_t0": 467, "gtimetadata": 401, "gtmktime": [384, 487], "gtobsim": 387, "gtol": 476, "gtpsf": [147, 148, 154, 159, 162, 194, 452, 487], "gtselect": [384, 487], "guarante": [382, 397, 399], "guess": [124, 188, 190, 440], "guid": [377, 390, 392, 406, 407, 408, 411, 434, 491, 511, 526, 536, 557, 567], "guidelin": [374, 378, 411, 433], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 102, 105, 109, 110, 114, 116, 117, 121, 126, 128, 132, 138, 139, 151, 223, 271, 362, 367, 369, 375, 396, 434, 444, 448, 449, 452, 459, 460, 461, 462, 473, 474, 475, 477, 479, 481, 482, 486, 487, 488, 493, 495, 496, 497, 508, 509, 511, 513, 514, 515, 517, 537], "h": [26, 67, 82, 86, 87, 91, 95, 125, 127, 148, 175, 189, 190, 192, 198, 201, 202, 283, 364, 394, 397, 406, 410, 411, 419, 434, 442, 443, 444, 445, 448, 449, 451, 457, 459, 465, 466, 467, 470, 472, 477, 478, 479, 482, 486, 487, 488, 490, 491, 493, 495, 496, 506, 511, 524, 559, 560, 570, 571], "h0": 459, "h05": [45, 49], "h1": 459, "h1wkchxp": 470, "h_0": [459, 573], "h_1": [459, 573], "h_i": 127, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 101, 102, 105, 109, 110, 121, 122, 124, 161, 183, 187, 188, 189, 190, 192, 196, 197, 198, 200, 201, 202, 210, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 269, 270, 271, 367, 369, 371, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 421, 422, 425, 427, 428, 434, 435, 436, 438, 439, 440, 444, 445, 448, 449, 450, 454, 459, 461, 465, 466, 468, 472, 473, 474, 476, 478, 479, 480, 482, 483, 484, 486, 488, 489, 495, 496, 507, 508, 511, 516, 520, 521, 523, 524, 528, 529, 556, 568, 571, 573], "habilit": 298, "hack": 430, "had": [374, 380, 382, 400, 422, 428, 432, 433], "hadron": [273, 380, 385, 454, 474, 486, 507, 520], "hajlaoui": [422, 425], "hal": 400, "half": [159, 162, 194, 200, 270], "halo": 499, "halv": [134, 288, 440], "halving_coord": 471, "halving_err": 471, "hand": [171, 374, 377, 382, 385, 394, 400, 402, 437, 476, 491, 511], "handbook": [394, 491], "handi": 456, "handl": [3, 16, 84, 90, 104, 122, 123, 124, 175, 196, 291, 373, 375, 378, 386, 387, 388, 390, 395, 397, 398, 401, 403, 406, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 448, 450, 456, 457, 458, 460, 474, 477, 479, 481, 482, 487, 488, 491, 496, 497, 507, 508, 511, 570], "handler_map": 371, "hanna": 440, "hap": 390, "happen": [82, 377, 379, 381, 382, 388, 392, 404, 449, 481, 491, 495, 496, 507, 511, 573], "happi": [377, 381, 394, 414, 415, 434], "hard": [374, 375, 397, 402, 420, 484], "harder": [381, 571], "hardli": 401, "harri": [429, 430], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 133, 149, 207, 239, 273, 274, 283, 290, 292, 394, 476], "has_any_t": [122, 124], "has_energy_axi": [187, 188, 197, 200], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161], "has_single_spatial_bin": [147, 148, 154, 159, 162], "has_stat_profil": [122, 124], "has_success": [122, 124], "has_ul": [122, 124], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 374, "hasn": 379, "hatch": 468, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 104, 107, 111, 115, 122, 123, 124, 125, 129, 138, 139, 146, 147, 148, 157, 159, 162, 169, 171, 183, 187, 188, 189, 190, 192, 196, 197, 198, 200, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 301, 325, 331, 371, 373, 374, 375, 376, 377, 379, 380, 381, 383, 385, 387, 388, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 419, 422, 425, 427, 428, 431, 433, 434, 435, 436, 437, 439, 440, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 495, 496, 497, 499, 507, 508, 509, 511, 518, 522, 523, 524, 534, 545, 568, 571, 574, 575], "haven": 410, "hawc": [55, 59, 63, 72, 76, 97, 411, 419, 425, 433, 436, 437, 439, 442, 490, 491, 506, 519, 570], "hawc19_flux_point": [124, 457, 511], "hawc_crab": [124, 457, 511], "hcp9m4ft": 470, "hd": 67, "hdr": 401, "hdr_dict": 401, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 102, 105, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 309, 360, 375, 384, 413, 428, 430, 433, 436, 437, 460, 477, 479, 486, 488, 489, 507, 508, 511, 513, 514, 515, 517, 524, 566], "hdu1": 146, "hdu2": 146, "hdu_al": 460, "hdu_band": [122, 124, 147, 148, 154, 159, 162, 187, 188, 189, 190, 192, 193, 196, 197, 198, 200, 201, 202], "hdu_class": [82, 87, 309, 486, 488, 489], "hdu_class_uniqu": 87, "hdu_evt": 460, "hdu_filenam": 488, "hdu_gti": 460, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [147, 148, 150, 154, 158, 159, 160, 162, 189, 190, 201, 202], "hdu_loc": 87, "hdu_nam": 309, "hdu_ob": 82, "hdu_out": [189, 190], "hdu_region": [197, 198], "hdu_tabl": [82, 488], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 486, 488, 489], "hdu_type_uniqu": 87, "hduclas2": 477, "hduclas3": 477, "hduclas4": 477, "hduclasn": 477, "hduindext": [82, 309, 488], "hdulist": [102, 105, 107, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 196, 197, 198, 200, 201, 202, 460, 479, 507], "hduloc": [87, 102], "he": [273, 384, 389], "hea": 389, "head": 375, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 122, 123, 124, 146, 147, 148, 154, 159, 162, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 270, 311, 356, 357, 360, 379, 384, 387, 401, 419, 427, 429, 434, 436, 439, 450, 460, 461, 479, 486, 575], "healpi": [188, 373, 381, 383, 391, 405, 406, 408, 417, 425, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 522], "healpix": [13, 188, 189, 190, 192, 198, 201, 202, 373, 381, 383, 388, 425, 433, 479, 487, 523], "healpix_to_imag": 426, "heapsort": [87, 91], "heart": 573, "heasarc": [146, 194], "heatmap": [363, 368], "heavi": [434, 435], "heavier": 456, "heavili": 425, "hegra": [97, 274], "heidelberg": [374, 403], "heidt": 471, "height": [16, 29, 87, 91, 94, 126, 334, 449, 453, 454, 456, 462, 465, 468, 472, 479, 480, 482, 495, 520, 524], "heighten": 471, "helen": 431, "hello": [410, 458], "help": [11, 87, 91, 285, 291, 374, 377, 379, 381, 388, 389, 390, 394, 400, 403, 404, 405, 410, 414, 415, 416, 433, 434, 436, 473, 478, 479, 481, 487, 489, 497, 511, 571], "helper": [13, 309, 314, 381, 383, 388, 389, 390, 393, 404, 410, 416, 417, 418, 419, 425, 427, 430, 432, 433, 439, 440, 462, 473, 480, 481, 520, 569, 576], "henc": [87, 91, 390, 453, 454, 509, 524, 573], "her": 403, "here": [13, 82, 83, 87, 91, 102, 109, 124, 140, 144, 149, 158, 207, 282, 284, 287, 362, 373, 374, 375, 376, 377, 380, 381, 386, 387, 388, 389, 390, 391, 392, 393, 394, 400, 401, 402, 404, 406, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 486, 487, 488, 491, 495, 496, 497, 501, 507, 511, 516, 518, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 572, 573, 575, 576], "hereaft": 460, "herebi": 484, "heritag": 400, "herm": [277, 279, 440], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 101, 109, 110, 130, 141, 142, 149, 151, 169, 207, 280, 299, 300, 375, 382, 383, 388, 390, 394, 403, 406, 410, 413, 415, 418, 429, 430, 433, 434, 442, 445, 446, 448, 449, 450, 454, 456, 458, 459, 466, 468, 470, 472, 473, 474, 475, 476, 478, 483, 484, 487, 489, 490, 493, 495, 496, 499, 508, 509, 511, 513, 514, 515, 517, 518, 520, 521], "hess2": [149, 513], "hess_dl3_dr1_obs_id_020136": [88, 151, 375, 513, 514, 515, 517], "hess_dl3_dr1_obs_id_023523": [83, 86, 508], "hess_dl3_dr1_obs_id_023526": 508, "hess_ecpl": [274, 448], "hess_pl": 274, "hessian": 509, "heterogen": [401, 446, 457], "hfm": 67, "hgp": [67, 80, 81, 121, 394, 419, 431, 433, 434, 506], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 473], "hi": [374, 432], "hi_bnd": 194, "hi_threshold": 146, "hidden": 385, "hide": [13, 379, 396], "hierarch": [13, 299, 341, 383, 385, 401, 440, 511, 523], "hierarchi": [299, 385, 418], "hierarchical_clust": [439, 483], "high": [6, 15, 58, 62, 63, 83, 146, 194, 324, 374, 378, 379, 380, 387, 388, 389, 394, 401, 417, 418, 419, 420, 421, 425, 433, 434, 442, 443, 446, 449, 452, 453, 456, 462, 464, 465, 472, 473, 474, 475, 478, 480, 486, 487, 488, 489, 491, 496, 497, 498, 506, 507, 508, 509, 516, 519, 569, 570, 571, 572], "high_zenith": 483, "higher": [187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 233, 377, 380, 385, 390, 393, 395, 407, 446, 461, 471, 477, 479, 518, 524], "highest": [138, 175, 471, 478, 486, 497], "highli": 482, "highlight": 571, "him": 403, "hint": [401, 452, 509], "hire": [150, 394, 501, 503, 504, 505, 507, 508, 513, 514, 515, 517, 520, 524, 573, 576], "hist": [83, 109, 110, 198, 202, 367, 451, 484], "histogram": [83, 109, 110, 194, 198, 202, 367, 439, 468, 524, 570], "histori": [388, 400, 436], "hli": [387, 420, 421, 425, 436, 442, 447, 491, 507, 510, 570], "hli_spectrum_analysi": 449, "hline": 528, "hmkl2smb": 482, "hoc": 388, "hold": [69, 82, 89, 92, 96, 100, 157, 228, 301, 383, 384, 386, 389, 571, 573], "home": [16, 338, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 537, 543, 559, 565, 566], "homebrew": 391, "homework": 416, "homogen": [87, 91, 422], "honk": 379, "hood": [449, 491, 495], "hook": [377, 436], "hope": 379, "hopefulli": 381, "horizont": [85, 95, 152, 344, 477, 575], "host": 374, "hour": [67, 94, 377, 390, 404, 443, 473, 478, 479, 511], "hover": 375, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 104, 123, 124, 126, 128, 169, 190, 200, 202, 325, 331, 376, 379, 382, 386, 388, 390, 391, 393, 396, 397, 400, 401, 404, 405, 406, 410, 411, 414, 415, 416, 419, 420, 427, 429, 432, 433, 434, 439, 440, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 497, 501, 507, 509, 512, 516, 520, 522, 523, 537, 556, 569, 571, 572, 573, 575, 576], "howev": [77, 87, 91, 101, 121, 289, 373, 374, 375, 377, 381, 384, 387, 388, 392, 400, 402, 407, 445, 454, 462, 468, 470, 472, 473, 474, 476, 484, 488, 489, 491, 507, 511, 523, 524, 529, 545, 571], "howto": [394, 436, 437], "hpx": [188, 189, 190, 192, 201, 202, 388, 425, 479, 487], "hpx2wc": [189, 190], "hpx_map": [189, 190], "hpx_pixel": 388, "hpx_reg": 188, "hpxgeom": [122, 187, 189, 190, 420, 425, 436, 487, 522], "hpxmap": [190, 192, 522], "hpxndmap": [266, 425, 522], "hpxsparsemap": 419, "hpxtowcsmap": [189, 190], "hr": [460, 461, 464, 467], "hspace": 472, "hspec": [429, 430, 431], "hst": 222, "hstack": [87, 91, 387], "html": [26, 83, 87, 91, 125, 146, 182, 188, 194, 197, 200, 207, 220, 242, 271, 301, 328, 329, 374, 375, 377, 382, 394, 399, 400, 404, 412, 433, 443, 451, 453, 456, 458, 464, 467, 476, 477, 486, 508, 511, 514, 522, 524, 550], "htmlcov": 404, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 104, 117, 123, 125, 133, 134, 140, 146, 149, 175, 182, 188, 194, 197, 200, 207, 220, 239, 242, 248, 249, 263, 264, 271, 273, 274, 283, 289, 290, 292, 297, 301, 328, 329, 341, 377, 391, 394, 399, 400, 403, 404, 405, 406, 407, 408, 412, 416, 433, 443, 448, 451, 453, 456, 457, 458, 464, 467, 472, 473, 476, 477, 486, 508, 511, 522, 524, 550, 554, 555, 571], "hubert": 434, "hue": 365, "huestart": 365, "huge": [404, 529], "hugovk": 415, "human": [355, 385, 404, 427, 449, 495], "hundr": 488, "hypercub": [479, 523, 524], "hypothes": [280, 439, 511, 573], "hypothesi": [122, 124, 125, 126, 129, 130, 280, 282, 284, 446, 452, 459, 475, 509, 511, 570, 573], "hysteresi": 470, "hz": [331, 497], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 301, 303, 307, 309, 312, 313, 314, 319, 321, 322, 325, 328, 329, 330, 331, 333, 334, 337, 340, 342, 343, 345, 349, 351, 352, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496, 497, 499, 500, 501, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576], "i0": [87, 91], "i1": [87, 91], "i4": 462, "i8": [479, 497], "i_0": [189, 190, 192, 198, 201, 202], "i_hpx": [189, 190, 192, 198, 201, 202], "i_lat": [189, 190, 192, 198, 201, 202], "i_lon": [189, 190, 192, 198, 201, 202], "i_n": [189, 190, 192, 198, 201, 202], "i_scan": 484, "iact": [82, 83, 85, 94, 169, 172, 176, 380, 383, 384, 385, 386, 388, 390, 394, 411, 416, 430, 432, 434, 446, 452, 454, 478, 479, 481, 486, 487, 489, 508, 513, 514, 515, 517, 568, 570], "iactbasicimageestim": [380, 433], "iau": [52, 413, 417], "iau2015": 52, "ic": 547, "icon": 569, "icr": [83, 85, 88, 91, 94, 95, 96, 102, 105, 109, 110, 138, 159, 169, 172, 188, 189, 190, 192, 195, 197, 200, 201, 202, 216, 217, 221, 229, 232, 246, 255, 256, 299, 300, 335, 374, 375, 398, 418, 448, 449, 450, 451, 452, 454, 457, 458, 460, 461, 464, 465, 466, 467, 468, 470, 473, 474, 477, 478, 479, 480, 482, 483, 486, 487, 488, 489, 495, 496, 508, 511, 515, 520, 524, 528, 529, 530, 532, 533, 534], "icrc": 429, "id": [67, 80, 82, 83, 87, 88, 91, 92, 112, 387, 390, 410, 449, 451, 460, 462, 464, 468, 473, 482, 486, 487, 488, 489, 495, 508], "id_obs_vela": 468, "idea": [379, 382, 389, 393, 394, 395, 449, 470, 477, 483, 487, 495], "ideal": [376, 377, 384, 388, 389, 398, 402, 403, 446, 487], "idempot": [16, 84, 90, 104, 123], "ident": [349, 377, 389, 436, 448, 450], "identif": [67, 380, 473], "identifi": [67, 88, 103, 108, 188, 258, 374, 384, 385, 387, 390, 399, 400, 404, 420, 452, 460, 471, 473, 474, 482, 486, 488, 510], "identified_object": 473, "idx": [83, 87, 91, 92, 100, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 242, 451, 460, 467, 473, 476, 479, 523], "idx1": 476, "idx2": 476, "idx_glob": 188, "idx_loc": 188, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400, 444, 470, 481, 482, 507, 570], "iem": [481, 487], "iem_minus_iem": 479, "iem_plus_iem": 479, "iem_times_two": 479, "ignacio": 435, "ignasi": 429, "ignor": [11, 16, 84, 87, 90, 91, 101, 104, 123, 133, 153, 163, 192, 210, 212, 228, 301, 313, 375, 427, 448, 462, 467, 468, 474, 480, 495, 511, 571], "ii": [205, 431], "ij": 205, "ijsdmi3u": 478, "ilist": 188, "illustr": [109, 110, 375, 384, 386, 387, 388, 390, 393, 450, 452, 457, 462, 474, 478, 479, 481, 482, 487, 501, 507, 520, 521, 528, 529, 537, 569], "illustrate_colormap": 393, "iloc": [87, 91], "im": [363, 476], "imag": [102, 105, 109, 110, 117, 127, 128, 138, 148, 149, 150, 156, 158, 159, 160, 162, 164, 174, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 270, 293, 296, 338, 360, 362, 363, 364, 365, 369, 374, 382, 383, 385, 390, 391, 394, 395, 404, 406, 411, 413, 414, 415, 418, 419, 420, 426, 430, 431, 432, 433, 434, 442, 453, 454, 456, 462, 463, 478, 480, 482, 486, 496, 497, 507, 516, 520, 521, 522, 523, 524, 569, 570, 576], "image_analysi": [394, 414], "image_err": 128, "image_fitting_with_sherpa": [394, 435], "image_pip": 433, "image_profil": 432, "imagehdu": [189, 190, 201, 202], "imagenorm": [364, 365], "imageprofil": 128, "images_t": 458, "imagin": 571, "img": [362, 479], "iminuit": [207, 373, 391, 400, 425, 427, 434, 438, 439, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 568], "immut": 220, "impact": [381, 387, 391, 488], "imperfect": 478, "implement": [19, 20, 102, 105, 109, 110, 140, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 283, 289, 374, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 401, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 432, 433, 435, 436, 439, 440, 445, 453, 466, 471, 472, 473, 478, 479, 480, 499, 507, 509, 511, 516, 517, 518, 556, 568, 569, 570, 571, 572, 575], "implent": 374, "impli": [233, 374, 393, 507, 570], "implic": 396, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 516], "implicitli": 478, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 101, 102, 104, 105, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 126, 128, 130, 132, 138, 139, 141, 142, 144, 146, 148, 149, 150, 151, 157, 159, 169, 172, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 207, 211, 213, 214, 215, 218, 222, 224, 225, 226, 230, 234, 236, 237, 239, 240, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 274, 280, 283, 289, 290, 299, 300, 321, 331, 341, 353, 354, 359, 362, 364, 365, 367, 369, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 421, 431, 433, 438, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 500, 501, 503, 504, 505, 507, 508, 509, 511, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571, 572, 573, 575], "importantli": [398, 434, 445, 571], "importerror": [87, 91], "impos": [438, 443, 520], "improv": [108, 280, 376, 378, 379, 380, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 399, 404, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 479, 486, 511, 521, 528], "imshow": [102, 105, 157, 190, 202, 362, 368, 432, 479, 497], "in2p3": [400, 486], "in_memori": [88, 511], "in_memory_gener": 92, "in_safe_data_rang": [102, 105, 109, 110], "inaccur": 374, "incex": [16, 84, 90, 104, 123], "incid": 380, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 104, 123, 129, 157, 163, 165, 166, 172, 173, 177, 187, 188, 197, 200, 243, 309, 373, 374, 380, 382, 385, 386, 387, 388, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 415, 417, 422, 433, 438, 439, 440, 443, 457, 459, 460, 462, 467, 472, 473, 475, 476, 478, 480, 481, 482, 486, 488, 499, 501, 507, 509, 510, 521, 523, 568, 572, 575], "include_irf": [88, 508, 511], "include_ssc": 243, "inclus": [83, 197, 388], "incompat": [399, 427], "incomplet": [374, 404, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "inconsist": [422, 428, 438, 439], "inconveni": [393, 434], "incorpor": [390, 394, 402, 570], "incorrect": [83, 374, 401, 409, 418, 436, 437, 478, 484], "incorrectli": [436, 480], "increas": [138, 164, 194, 199, 221, 229, 232, 374, 383, 401, 466, 475, 478, 507, 528], "increment": [19, 20, 26, 117, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 388, 479, 523], "ind": [188, 200, 220, 242], "inde": [460, 529], "indefinit": 381, "indent": [16, 84, 90, 104, 123], "independ": [67, 125, 129, 140, 298, 312, 374, 380, 384, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 400, 406, 415, 425, 443, 449, 465, 473, 479, 480, 481, 482, 488, 495, 496, 506, 511, 516, 570, 574], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 101, 102, 105, 109, 110, 117, 121, 122, 124, 125, 126, 130, 131, 132, 137, 146, 147, 148, 154, 157, 159, 162, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 207, 211, 213, 214, 215, 218, 220, 222, 224, 225, 226, 230, 236, 237, 239, 240, 242, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 274, 283, 309, 323, 328, 377, 380, 383, 384, 385, 386, 389, 390, 397, 398, 399, 403, 406, 416, 430, 432, 433, 439, 440, 444, 445, 446, 448, 449, 451, 452, 453, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 481, 482, 486, 487, 488, 489, 495, 496, 497, 509, 511, 522, 523, 524, 527, 528, 529, 530, 532, 533, 534, 535, 537, 539, 541, 542, 543, 548, 549, 550, 558, 559, 560, 561, 562, 563, 564, 565, 566], "index1": [214, 259, 538, 552], "index2": [214, 259, 538, 552], "index_1": [262, 263, 264, 553, 554, 555], "index_2": [77, 262, 263, 264, 553, 554, 555], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 193, "index_err": 470, "index_error": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "index_mod": [87, 91], "index_scan": 484, "indexerror": [92, 100, 242], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 374, 436, 451, 461, 471, 478, 479, 483, 484, 488, 489, 511, 523, 524, 570], "indico": 383, "indirect": [472, 499], "individu": [87, 91, 108, 119, 127, 370, 380, 386, 387, 389, 394, 397, 398, 402, 445, 448, 451, 459, 462, 466, 473, 474, 476, 478, 481, 482, 497, 507, 511, 516], "indiviud": 396, "indxschm": [189, 190, 201, 202], "ineffici": [87, 91, 377], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 232, 402, 484], "infer": [122, 124, 187, 188, 189, 190, 192, 200, 201, 202, 222, 375, 495, 523], "inferno": 479, "infil": 374, "infin": 484, "influenc": 484, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 150, 156, 158, 160, 282, 284, 309, 375, 389, 390, 394, 403, 409, 419, 420, 422, 429, 430, 433, 449, 453, 454, 456, 460, 466, 470, 472, 473, 474, 479, 487, 488, 489, 491, 493, 495, 571], "info_dict": [102, 105, 109, 110, 282, 284, 367, 422, 440, 474], "info_t": [100, 445, 448, 449, 451, 456, 467, 474, 481, 511], "infodict": 367, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 146, 150, 156, 158, 160, 161, 164, 169, 170, 175, 176, 195, 207, 214, 215, 216, 217, 218, 219, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 264, 266, 267, 270, 271, 285, 291, 309, 325, 356, 357, 374, 378, 379, 384, 386, 387, 388, 389, 390, 397, 398, 401, 402, 404, 409, 410, 411, 419, 421, 422, 425, 427, 433, 439, 440, 444, 446, 449, 450, 457, 460, 461, 464, 470, 471, 474, 475, 476, 478, 479, 482, 486, 487, 488, 489, 495, 496, 497, 506, 507, 508, 509, 511, 524, 571, 574], "infrar": 222, "infrastructur": [404, 425, 436, 439], "ingredi": [398, 472], "inherit": [87, 91, 283, 374, 384, 386, 389, 398, 401, 402, 420, 425, 432, 474, 477, 522, 523], "init": [19, 20, 26, 87, 91, 121, 126, 132, 166, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 313, 325, 386, 422, 437, 439, 440, 452, 462, 473, 474, 475, 497], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 104, 122, 123, 124, 132, 190, 193, 194, 220, 242, 244, 245, 301, 374, 379, 384, 385, 386, 390, 427, 443, 451, 454, 456, 457, 459, 460, 461, 464, 468, 473, 474, 479, 482, 495, 496, 497, 506, 508, 556, 570], "initialis": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 325, 328, 329, 330, 331, 374, 396, 484], "inject": [451, 464], "inlin": [379, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 479, 480, 481, 482, 486, 487, 489, 495, 496, 497], "inner": [44, 52, 53, 126, 164, 174, 256, 454, 497, 534], "inner_height": [520, 524], "inner_width": [520, 524], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 102, 104, 105, 108, 117, 119, 121, 122, 123, 124, 125, 128, 129, 132, 134, 135, 136, 137, 139, 142, 147, 148, 150, 157, 158, 159, 160, 161, 162, 164, 166, 170, 172, 174, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 213, 220, 234, 242, 269, 270, 271, 283, 301, 312, 322, 325, 344, 346, 367, 369, 380, 382, 384, 385, 386, 387, 388, 389, 390, 395, 410, 420, 425, 428, 435, 439, 451, 460, 461, 468, 475, 479, 484, 509, 523, 524, 572], "input_map": [111, 115], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 439, "insensit": 196, "insert": [87, 91, 92, 100, 242, 400, 420, 574], "insert_row": [87, 91], "inset": 426, "insid": [50, 83, 102, 109, 114, 116, 146, 172, 188, 189, 190, 192, 197, 200, 201, 202, 220, 242, 258, 363, 367, 374, 375, 388, 390, 398, 425, 443, 448, 451, 453, 456, 458, 464, 467, 474, 478, 480, 481, 482, 486, 488, 508, 518, 520, 521, 524], "inside_geom": 480, "insight": 409, "inspect": [386, 390, 410, 448, 450, 456, 460, 461, 476, 479, 481, 486, 487], "inspir": [374, 398], "instal": [87, 91, 373, 374, 377, 381, 382, 383, 391, 403, 404, 405, 408, 410, 411, 414, 415, 425, 429, 432, 433, 434, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 495, 496, 497, 511, 571], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 104, 119, 123, 124, 125, 127, 129, 130, 161, 163, 171, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 319, 325, 361, 363, 364, 365, 368, 370, 374, 380, 385, 386, 389, 390, 396, 398, 401, 425, 446, 448, 451, 462, 473, 475, 476, 478, 480, 481, 482, 497, 501, 511, 523, 524, 547], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 189, 190, 192, 194, 201, 202, 385, 390, 445, 449, 473, 474, 479, 482, 484, 495], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 102, 104, 105, 109, 110, 113, 123, 176, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 374, 375, 377, 379, 381, 382, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 405, 406, 408, 415, 418, 421, 422, 435, 439, 444, 450, 456, 460, 462, 464, 465, 467, 468, 473, 474, 477, 478, 479, 482, 484, 487, 508, 515, 516, 523, 524, 571], "instruct": [374, 383, 391, 403, 405, 406, 414, 425, 429, 433, 460, 486], "instrument": [6, 83, 95, 108, 149, 153, 154, 228, 374, 384, 385, 386, 387, 389, 394, 398, 406, 410, 419, 422, 434, 435, 436, 442, 445, 446, 448, 449, 452, 456, 463, 468, 470, 474, 476, 477, 478, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496, 507, 508, 509, 513, 515, 517, 569, 570], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 102, 103, 104, 105, 108, 109, 110, 112, 117, 119, 123, 124, 125, 126, 129, 130, 132, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 172, 176, 177, 182, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 276, 278, 280, 282, 283, 284, 288, 289, 290, 292, 297, 301, 312, 313, 319, 323, 325, 328, 329, 330, 331, 333, 334, 361, 367, 374, 388, 432, 454, 476, 501], "int64": [102, 105, 109, 110, 111, 115, 121, 132, 509], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 214, 215, 218, 222, 224, 225, 226, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 516, 528], "int_flux": 472, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 132, 138, 139, 147, 148, 154, 159, 162, 165, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 211, 213, 220, 242, 301, 319, 325, 374, 380, 388, 454, 523], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 101, 102, 105, 109, 110, 122, 124, 127, 129, 137, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 164, 189, 190, 192, 194, 198, 201, 202, 203, 204, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 276, 312, 373, 381, 383, 385, 387, 388, 389, 391, 392, 394, 398, 400, 413, 415, 416, 420, 421, 425, 430, 431, 432, 433, 434, 435, 436, 439, 448, 450, 451, 453, 467, 470, 472, 473, 474, 479, 480, 482, 497, 499, 507, 509, 515, 530, 550], "integral_error": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 392, 422, 470], "integral_flux": 470, "integral_flux_imag": 426, "integrate_geom": [216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270, 425, 438, 440], "integrate_log_log": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161], "integrate_spectrum": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 416, 422], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 301, 384, 402, 477], "intens": [189, 190, 192, 198, 201, 202, 207, 233, 384, 479, 507], "intent": 379, "interact": [19, 20, 87, 91, 159, 162, 189, 190, 192, 198, 201, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 373, 374, 375, 383, 384, 385, 386, 390, 394, 397, 410, 419, 444, 456, 464, 476, 479, 481, 482, 491, 495, 496, 520, 523, 547, 571], "interchang": 523, "interest": [114, 116, 125, 129, 207, 280, 379, 387, 388, 392, 394, 404, 446, 456, 460, 462, 470, 473, 474, 476, 478, 480, 483, 486, 487, 497, 508, 509, 547, 570, 573, 574], "interfac": [6, 11, 15, 19, 20, 87, 91, 205, 207, 210, 211, 212, 213, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 374, 378, 379, 380, 384, 386, 387, 389, 391, 392, 393, 394, 415, 418, 420, 421, 422, 425, 429, 432, 433, 439, 442, 444, 449, 452, 453, 456, 464, 465, 476, 482, 486, 491, 496, 497, 498, 507, 508, 511, 519, 522, 547, 568, 569, 570, 571], "intermedi": [200, 383, 390, 400, 410, 445, 466], "intern": [15, 19, 20, 26, 87, 91, 122, 124, 133, 134, 135, 136, 166, 172, 197, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 276, 301, 313, 374, 386, 388, 390, 393, 398, 425, 427, 436, 439, 443, 449, 456, 465, 471, 474, 477, 479, 486, 489, 495, 507, 511, 566], "interp": [19, 20, 151, 189, 190, 192, 194, 198, 199, 201, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 314, 369, 397, 402, 438, 440, 451, 457, 461, 464, 467, 477, 478, 479, 482, 487, 488, 489, 523, 524, 547, 548], "interp1": 479, "interp1d": 314, "interp2": 479, "interp_by_coord": [189, 190, 192, 198, 201, 202, 270, 436, 479], "interp_by_pix": [189, 190, 192, 198, 201, 202, 266, 267, 479], "interp_kwarg": [68, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 222, 266, 267, 270, 271, 374, 477, 487, 556], "interp_map": [189, 190, 192, 198, 201, 202], "interp_missing_data": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161], "interp_param": 374, "interp_scal": [101, 281, 314], "interp_to_geom": [189, 190, 192, 198, 201, 202, 422, 438, 479, 487, 511], "interp_weight": 188, "interpol": [6, 26, 94, 101, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 169, 188, 189, 190, 192, 194, 198, 199, 201, 202, 222, 234, 244, 245, 266, 267, 269, 270, 271, 281, 313, 314, 315, 373, 385, 386, 387, 415, 420, 425, 427, 430, 433, 435, 436, 437, 438, 439, 440, 448, 461, 477, 478, 482, 487, 488, 511, 519, 523, 556], "interpolatedunivariatesplin": 269, "interpret": [91, 102, 105, 127, 138, 139, 190, 194, 200, 201, 202, 319, 392, 402, 479, 509, 524], "intersect": [89, 172, 173, 177, 197, 388, 466], "interspers": 379, "interstellar": [45, 460], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 101, 103, 108, 124, 129, 170, 194, 199, 207, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 383, 384, 388, 389, 392, 398, 406, 419, 421, 422, 425, 434, 435, 440, 465, 467, 470, 476, 479, 488, 496, 508, 523, 570, 573], "interval_edg": 199, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 243, 290, 385, 389], "intrinsic_model": 444, "intro_map": 434, "introduc": [19, 20, 189, 190, 192, 194, 198, 201, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 374, 381, 382, 384, 386, 387, 388, 389, 391, 394, 396, 399, 402, 416, 418, 419, 421, 422, 425, 427, 428, 432, 433, 434, 436, 439, 440, 459, 471, 478, 482, 524, 529, 571, 574], "introduct": [377, 395, 396, 397, 415, 419, 420, 421, 422, 446, 449, 482, 495, 496, 500], "introductori": 471, "introspect": 301, "intuit": [395, 574], "invalid": [360, 374, 388, 401, 402, 425, 450, 460, 489], "invalid_pixel": 480, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 200, 214, 215, 218, 222, 224, 225, 226, 230, 233, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 282, 283, 284, 323, 330, 387, 460, 480, 482, 484, 547], "inverse_al": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "inverse_cdf": 460, "inversecdf": 387, "inversecdfsampl": [387, 417], "inversecompton": [243, 547], "invert": [91, 188, 200, 497], "invest": 377, "investig": [459, 470], "involv": [87, 91, 102, 105, 109, 110, 374, 379, 388, 390, 392, 396, 452, 571], "io": [13, 83, 86, 87, 91, 125, 182, 192, 197, 207, 271, 377, 383, 394, 404, 416, 419, 431, 435, 439, 460, 476, 477, 479, 486, 508, 511, 522, 524], "iop": 289, "iopscienc": 289, "ipix": 188, "ipykernel": [406, 408], "ipynb": [382, 394, 416, 419, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "ipynb_to_galleri": 374, "ipython": [87, 91, 373, 374, 390, 391, 405, 409, 417, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 495, 496, 497, 510, 571], "ipython3": 407, "ipywidget": 479, "irap": 394, "irf": [6, 82, 88, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 169, 175, 176, 178, 179, 180, 182, 184, 185, 188, 197, 200, 258, 300, 374, 375, 380, 384, 385, 386, 387, 390, 393, 394, 395, 396, 402, 406, 414, 416, 419, 421, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 460, 461, 464, 465, 467, 478, 480, 483, 484, 485, 487, 488, 489, 491, 495, 496, 507, 508, 511, 513, 514, 515, 517, 518, 569, 570], "irf_dict": 163, "irf_dl3_hdu_specif": 477, "irf_fil": [88, 144, 148, 149, 150, 159, 443, 451, 464, 467, 477, 486], "irf_filenam": [460, 461, 477, 486], "irf_map": [147, 148, 154, 159, 162], "irf_path": 460, "irfmap": [147, 148, 159, 162, 406, 422, 511], "irfmetadata": 401, "irfmodel": 385, "irfs1": 486, "irfs2": 486, "irfs_path": 82, "irfstack": [422, 431], "irregular": [188, 200, 523], "irrespect": [387, 456, 479, 523], "is_align": [188, 194, 199, 200], "is_all_point_sky_region": 197, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202], "is_allski": [187, 188, 197, 200], "is_bkg": 107, "is_contigu": [199, 479], "is_convertible_to_flux_sed_typ": [122, 124], "is_energy_axi": 194, "is_energy_depend": [216, 217, 219, 221, 227, 229, 231, 232, 233, 234, 235, 244, 246, 250, 255, 256, 257, 260, 266, 269, 270, 272, 438, 482], "is_fixed_rad_max": 161, "is_flat": [187, 188, 193, 197, 200], "is_hpx": [188, 197, 200], "is_imag": [187, 188, 197, 200], "is_mask": [189, 190, 192, 198, 201, 202], "is_norm": [402, 427, 440], "is_norm_spectral_model": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 425, 482], "is_nul": 479, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 425], "is_region": [188, 197, 200], "is_regular": [188, 197, 200], "is_ul": [67, 122, 124, 425, 440, 449, 473, 475, 497], "is_unidimension": 193, "isf": [476, 573], "isinst": [374, 385, 388, 397, 401, 402], "ism": [52, 53, 547], "isn": [377, 381, 388, 390, 393, 404, 458, 571], "isnan": [479, 480], "iso": [88, 124, 199, 204, 439, 467, 481, 487, 523, 565], "iso_p8r2_source_v6_v06": [481, 487], "isol": [388, 405, 480], "isot": [355, 575], "isotherm": [22, 499], "isotrop": [47, 217, 275, 481], "issu": [19, 20, 26, 87, 91, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 374, 375, 377, 382, 383, 385, 386, 388, 391, 394, 399, 400, 401, 402, 403, 406, 407, 408, 415, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 458, 480, 486, 507, 511, 571, 572], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 196, 242, 394, 401], "iter": [87, 91, 92, 100, 122, 124, 132, 189, 190, 192, 193, 194, 196, 198, 199, 201, 202, 242, 377, 380, 382, 390, 426, 452, 467], "iter_by_axi": [122, 124, 189, 190, 192, 198, 201, 202], "iter_by_axis_data": 198, "iter_by_coord": 417, "iter_by_edg": [194, 199], "iter_by_imag": [189, 190, 192, 198, 201, 202, 434], "iter_by_image_data": [189, 190, 192, 198, 201, 202, 479], "iter_by_image_index": [189, 190, 192, 198, 201, 202], "iter_by_pix": 417, "iter_with_reshap": 193, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 476, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 102, 105, 109, 110, 122, 124, 165, 166, 175, 188, 194, 196, 214, 215, 218, 221, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 280, 374, 377, 380, 383, 384, 386, 389, 390, 391, 393, 398, 400, 401, 404, 407, 425, 439, 440, 445, 449, 450, 453, 460, 461, 465, 466, 471, 473, 475, 476, 478, 479, 480, 481, 482, 484, 495, 497, 500, 516, 518, 520, 522, 523, 524, 570, 573], "itself": [87, 91, 373, 374, 389, 400, 445, 465, 466, 468, 484, 571], "ivoa": [374, 440], "j": [19, 20, 23, 102, 109, 127, 140, 283, 375, 377, 507], "j0001": [473, 497], "j0002": [473, 497], "j0003": [473, 497], "j0006": 473, "j0007": 497, "j0008": [473, 497], "j0009": 497, "j0010": 473, "j0013": 473, "j0021": 473, "j0022": 473, "j0025": 473, "j0031": 473, "j0349": 473, "j0521": 448, "j0534": [473, 497], "j0633": 497, "j0835": [446, 497], "j0851": 473, "j1036": 473, "j1104": [473, 497], "j1506": 446, "j1507": 446, "j1513": 473, "j1514": 473, "j1555": 497, "j1653": 473, "j1713": 445, "j1731": 481, "j1732": 481, "j1741": 481, "j1744": 481, "j1745": 481, "j1746": 481, "j1747": 481, "j1748": 481, "j1753": 481, "j1800": 481, "j1801": 481, "j1802": 481, "j1809": 481, "j1811": 481, "j1824": 473, "j1825": 459, "j1843": 67, "j1844": 67, "j2028": 473, "j2158": 473, "j2347": 497, "j2350": 497, "j2351": 497, "j2352": 497, "j2356": 497, "j2357": [473, 497], "j2358": [473, 497], "j2359": [473, 497], "j_": 23, "jackson": [87, 91], "jacob": [415, 434], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 421], "jalel": [422, 425], "jan": [379, 380, 383, 386, 391, 395, 412], "jana": 440, "januari": [381, 383, 399], "jargon": 406, "jason": 415, "javascript": [87, 91], "jax": 392, "jbernet": 440, "jean": [433, 434], "jeffrei": 484, "jeltema": 499, "jep": 379, "jet": 365, "jfact": 472, "jfact_decai": 472, "jfact_map": 472, "jfactor": [19, 20, 439], "jfactori": 472, "jj": 205, "jk": [102, 109, 507], "jkl": 507, "jl": 507, "jo": [87, 91], "job": [93, 125, 126, 129, 132, 165, 427], "johann": [418, 425, 429, 430, 431, 432, 433, 434], "john": [87, 91], "join": [376, 385, 386, 486], "joint": [100, 109, 110, 119, 130, 140, 142, 207, 280, 382, 383, 386, 390, 394, 396, 406, 415, 416, 418, 419, 434, 435, 442, 445, 446, 448, 449, 450, 452, 459, 463, 467, 474, 475, 476, 478, 482, 483, 484, 487, 491, 495, 509, 511, 568, 569, 570], "joint_fit": 468, "joint_result": 468, "jointli": [483, 488], "jonathan": [429, 430], "jose": [425, 427, 433], "joshi": 425, "jos\u00e9": [382, 390, 394, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 433, 434, 435], "journal": 400, "jouvin": [415, 417, 418, 419, 422, 430, 431, 432, 433, 434], "jqueri": [87, 91], "jrvni732": 470, "jskwarg": [87, 91], "json": [16, 84, 90, 104, 123, 403, 427, 429, 433], "json_data": [16, 84, 90, 104, 123], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 104, 123], "json_schema_input_typ": 90, "jsonschema": [391, 418, 419], "jsviewer": [87, 91, 458], "juan": 440, "jul": [380, 389, 391, 393, 412], "juli": [380, 383, 388, 390, 391, 393, 397, 399, 401, 466, 470], "julia": 440, "julian": 575, "julien": [431, 432, 433], "jun": [388, 390, 391, 396, 397], "june": [388, 392, 412], "junior": [66, 394], "jupyt": [373, 381, 390, 391, 394, 405, 409, 411, 416, 431, 432, 433, 435, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571], "jupyterlab": [373, 391, 394, 410, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "jupytext": 394, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 149, 349, 374, 375, 376, 377, 379, 382, 384, 388, 390, 391, 392, 394, 403, 404, 405, 407, 433, 435, 444, 448, 449, 451, 456, 458, 460, 465, 466, 468, 471, 474, 479, 487, 488, 495, 497, 508, 524, 571], "juypter": 390, "jyear": [87, 91], "k": [19, 33, 52, 53, 102, 109, 196, 218, 269, 325, 446, 448, 450, 473, 476, 479, 481, 487, 507, 524, 528, 540, 547, 558], "kai": [433, 434], "kaori": 417, "kaspi": [31, 39, 45], "katrin": [402, 438, 439, 440], "kb": 382, "keep": [13, 87, 91, 100, 122, 157, 189, 190, 192, 198, 201, 202, 207, 374, 375, 377, 379, 380, 381, 382, 388, 391, 392, 393, 394, 397, 398, 423, 433, 453, 454, 459, 464, 470, 476, 481, 487], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [103, 108], "keepdim": [157, 159, 162, 189, 190, 192, 198, 201, 202, 414, 419, 478], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 102, 104, 105, 109, 110, 117, 123, 132, 196, 207, 337, 342, 343, 360, 382, 384, 391, 396, 398, 401, 411, 434, 444, 474, 482, 537], "kept": [89, 102, 105, 109, 110, 122, 124, 125, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 374, 380, 394, 398, 444, 470, 509], "kernel": [102, 105, 109, 110, 117, 121, 127, 128, 132, 146, 147, 148, 157, 159, 162, 164, 169, 174, 176, 179, 190, 200, 202, 380, 401, 406, 408, 420, 421, 426, 431, 435, 436, 452, 454, 468, 478, 479, 480, 487, 497, 507, 511, 515], "kernel_width": [132, 452, 458], "kernelbackgroundestim": 421, "kernelbackgroundmapestim": 395, "kev": [107, 132, 194, 452, 474, 475, 524], "keyboard": 410, "keyerror": [91, 196, 398], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 101, 102, 104, 105, 109, 110, 123, 124, 126, 127, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 207, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 281, 283, 313, 321, 322, 343, 355, 357, 358, 361, 362, 363, 367, 368, 369, 370, 371, 401, 421, 425, 428, 436, 437, 450, 460, 461, 474, 479, 488, 509, 524, 535], "kg": 52, "khelifi": [417, 419, 422, 425, 428, 432, 433, 434, 436, 437], "kh\u00e9lifi": [400, 436, 438, 439, 440], "kind": [87, 91, 349, 385, 386, 387, 392, 393, 397, 400, 434], "kinet": 44, "king": [158, 418, 429, 430, 431, 432, 433, 434, 477, 517], "kirsti": [438, 439, 440], "kl": 507, "klepser": 429, "km": [32, 37], "km2": 486, "km2a": [57, 70], "know": [375, 377, 379, 383, 388, 390, 391, 398, 404, 416, 433, 434, 435, 458, 461, 472, 477, 478, 479, 486, 488, 489, 571], "knowledg": [402, 410, 446, 451, 457, 459, 462, 464, 465, 476, 478, 479, 481, 484], "known": [282, 284, 301, 387, 448, 452, 454, 459, 465, 478, 479, 480, 497, 511, 521, 571, 572, 573], "koenig": 283, "konig": 283, "konrad": 440, "kornecki": 440, "kovalev": 471, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 243, 301, 304, 472, 473, 505, 547], "kurt": 440, "kvoaahu0": 470, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 101, 102, 105, 109, 110, 124, 125, 126, 127, 129, 141, 143, 144, 145, 146, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 171, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 281, 313, 324, 349, 361, 362, 363, 366, 368, 369, 370, 371, 374, 385, 401, 402, 438, 446, 450, 460, 468, 478, 489, 559], "kwargs_ax": [367, 454, 456], "kwargs_background": [109, 110], "kwargs_colorbar": [143, 144, 146, 149, 150, 151, 156, 158, 160, 202, 362], "kwargs_count": [109, 110], "kwargs_excess": [109, 110], "kwargs_extens": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 459], "kwargs_fit": [109, 110, 367], "kwargs_fp": 101, "kwargs_hist": [367, 454, 456], "kwargs_list": 196, "kwargs_model": 101, "kwargs_npred_sign": [109, 110], "kwargs_point": [197, 220, 242, 450], "kwargs_posit": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 459], "kwargs_residu": [101, 109, 110], "kwargs_saf": [109, 110], "kwargs_spati": [102, 105, 109, 110, 456, 496], "kwargs_spectr": [102, 105, 109, 110, 456, 496], "kwargs_spectrum": [101, 109, 110], "kwc": 470, "l": [23, 26, 51, 54, 101, 102, 109, 110, 169, 371, 375, 388, 397, 400, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 464, 467, 468, 473, 474, 476, 478, 479, 480, 482, 483, 484, 486, 487, 495, 496, 497, 507, 511, 524, 547, 556, 570, 572, 573, 574], "l06": [48, 501], "l_": [52, 53], "l_0": [51, 504, 528, 529], "l_snr": 44, "la": 431, "lab": [400, 406, 408, 410, 433], "label": [92, 191, 194, 199, 220, 242, 299, 362, 363, 368, 371, 374, 375, 378, 383, 387, 388, 403, 404, 425, 427, 436, 437, 439, 443, 444, 446, 448, 450, 454, 456, 457, 461, 462, 465, 466, 468, 471, 472, 476, 479, 482, 483, 484, 497, 504, 505, 513, 537, 543, 546, 547, 551, 556], "label_axi": [191, 479], "label_axis2": 479, "labelcolor": 443, "labelmapaxi": [425, 439], "lack": [196, 389, 468], "lafferti": [413, 570], "lafferty1994": 570, "lai": 480, "lambda": [67, 225, 226, 283, 367, 473, 486, 541, 573], "lambda_": [225, 226, 280, 446, 448, 456, 541, 543], "lancast": 140, "land": 404, "langl": 19, "languag": [381, 393], "laplac": [232, 530], "lar": [390, 414, 415, 416, 432, 433, 434, 437, 439], "larg": [67, 87, 91, 189, 190, 192, 198, 201, 202, 266, 268, 270, 374, 377, 379, 380, 388, 394, 395, 415, 425, 434, 435, 440, 443, 448, 454, 466, 473, 480, 486, 487, 488, 497, 507, 509, 511, 512, 518, 524, 530, 568, 571, 576], "large_scale_compon": [67, 473], "larger": [27, 131, 147, 148, 154, 159, 162, 280, 289, 375, 382, 393, 439, 443, 445, 448, 474, 478, 479, 480, 484, 508, 524, 530, 572, 573], "largest": [102, 105, 109, 110, 202, 374], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 189, 190, 191, 192, 194, 198, 201, 202, 242, 331, 371, 381, 384, 386, 396, 400, 403, 404, 406, 408, 414, 415, 471, 518, 520], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 102, 105, 109, 111, 115, 121, 125, 126, 128, 132, 147, 148, 154, 159, 162, 165, 189, 190, 192, 195, 198, 200, 201, 202, 216, 217, 221, 228, 229, 232, 244, 246, 255, 256, 258, 260, 266, 268, 270, 275, 280, 303, 304, 307, 329, 374, 375, 382, 383, 384, 385, 386, 387, 393, 394, 397, 404, 406, 411, 414, 419, 432, 433, 434, 442, 446, 449, 452, 453, 454, 456, 458, 462, 465, 466, 470, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 490, 491, 495, 496, 497, 499, 506, 508, 509, 511, 516, 523, 524, 528, 529, 530, 531, 532, 533, 534, 568, 575], "lat_0": [221, 229, 232, 246, 255, 256, 270, 389, 397, 452, 453, 456, 457, 459, 460, 461, 464, 465, 473, 474, 481, 482, 487, 495, 496, 528, 529, 530, 532, 533, 534, 535], "lat_0_err": 459, "lat_pnt": [303, 307], "lat_rang": 329, "lat_t": [303, 307], "later": [374, 379, 380, 381, 385, 386, 387, 390, 391, 392, 393, 394, 395, 413, 415, 425, 426, 428, 429, 435, 444, 448, 450, 456, 457, 474, 478, 479, 482, 487, 497, 507], "latest": [125, 182, 271, 301, 377, 381, 394, 399, 400, 407, 436, 443, 451, 453, 456, 457, 458, 464, 467, 476, 508, 511, 524], "latex": [374, 375], "latex_inlin": 439, "latitud": [94, 187, 188, 189, 190, 195, 197, 200, 201, 202, 329, 361, 418, 462, 479, 482, 516, 523, 531], "latpol": 479, "latter": [176, 207, 385, 387, 389, 395, 398, 401, 419, 450, 451, 460, 461, 464, 480, 481, 518, 520, 572], "launch": [406, 408, 433, 571], "laura": [422, 425, 427, 428, 434, 436, 438, 439, 440], "law": [27, 101, 117, 122, 124, 126, 131, 137, 157, 159, 162, 214, 224, 225, 226, 247, 248, 249, 250, 259, 262, 263, 264, 273, 283, 328, 387, 413, 419, 433, 442, 444, 451, 453, 456, 460, 462, 464, 466, 467, 468, 470, 481, 482, 484, 511, 525, 537, 557, 563], "law2": 550, "layer": [87, 91, 386, 393], "layout": [425, 456, 464, 479, 486, 495, 496], "lazi": [88, 100, 102, 105, 109, 110, 268, 310, 433], "lazili": 102, "lazyfitsdata": 421, "lc": [86, 129, 199, 387, 389], "lc_1d": [122, 124, 141, 465, 466, 467, 471], "lc_3d": 465, "lc_estim": 389, "lc_maker_1d": [465, 466, 467], "lc_maker_3d": 465, "lc_new": 466, "le": 90, "lea": 422, "lead": [121, 374, 383, 388, 393, 395, 397, 399, 400, 418, 484, 486, 488, 499, 571], "leak": [450, 520], "leakag": [283, 465], "learn": [144, 149, 374, 391, 394, 403, 406, 408, 410, 434, 446, 448, 452, 458, 459, 460, 462, 471, 473, 474, 476, 479, 482, 484, 486, 491, 497, 571], "least": [43, 44, 374, 377, 379, 383, 460, 471, 523], "leav": [379, 386, 388, 389, 391, 394, 403, 405, 481], "lefaucheur": [431, 432, 433], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 122, 124, 129, 132, 147, 149, 189, 190, 192, 198, 201, 202, 226, 230, 249, 262, 285, 291, 374, 382, 384, 388, 390, 393, 397, 410, 452, 458, 465, 467, 481, 509, 518, 521, 529, 530, 537, 538, 541, 542, 544, 545, 547, 549, 552, 553, 554, 555, 559, 560, 561, 563, 572, 573, 574], "legaci": [374, 433, 434], "legacy_altaz": 85, "legal": [87, 91], "legend": [371, 443, 444, 446, 448, 450, 456, 457, 461, 465, 466, 468, 471, 472, 476, 482, 483, 484, 487, 504, 505, 513, 537, 543, 546, 547, 551, 556], "legend_kwarg": 371, "lemi\u00e8r": 433, "len": [83, 280, 371, 452, 459, 460, 461, 466, 468, 470, 471, 473, 478, 481, 497, 511], "lenain": [433, 434], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 165, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 283, 313, 367, 400, 446, 448, 451, 458, 462, 470, 473, 476, 479, 487, 497, 528], "lengthi": 479, "lennarz": [416, 430, 432], "leq": [528, 533, 534], "less": [77, 188, 190, 194, 234, 269, 291, 374, 379, 381, 392, 404, 433, 476, 482, 483, 484], "let": [67, 274, 374, 377, 379, 383, 388, 391, 406, 409, 433, 434, 435, 446, 449, 450, 451, 452, 456, 457, 458, 459, 460, 462, 467, 468, 473, 474, 476, 479, 480, 482, 484, 487, 495, 497, 571], "level": [6, 11, 15, 16, 83, 84, 90, 104, 121, 123, 207, 282, 284, 374, 375, 377, 378, 379, 385, 387, 389, 393, 394, 395, 398, 401, 406, 410, 417, 418, 419, 420, 421, 425, 433, 440, 442, 445, 446, 448, 449, 452, 453, 454, 456, 458, 460, 464, 465, 466, 467, 468, 471, 472, 475, 476, 481, 483, 486, 487, 488, 489, 491, 493, 497, 498, 507, 508, 509, 516, 518, 519, 569, 570, 571, 575], "levelnam": 374, "levmar": [207, 476], "lf": 404, "lgpl": 374, "lgtm": 404, "lhaaso": [55, 57], "li": [117, 121, 172, 380, 443, 452, 454, 460, 475, 570, 573], "lib": [338, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 543, 559], "librari": [87, 91, 374, 379, 380, 384, 394, 400, 411, 445, 448, 460, 482, 486, 496, 499, 508, 511, 569, 571], "licenc": 400, "licens": [400, 410], "lie": [187, 188, 194, 197, 200, 475], "life": [381, 476], "lifetim": [20, 440], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 129, 134, 222, 234, 290, 378, 385, 387, 390, 394, 398, 406, 419, 421, 422, 429, 432, 434, 439, 440, 442, 444, 469, 470, 471, 491, 509, 510, 520, 525, 567, 569], "light_curv": [16, 234, 394, 434, 442, 449, 453, 454, 456, 465, 469, 495, 566], "light_curve_flar": [442, 466, 469], "light_curve_model": 566, "light_curve_simul": [442, 467, 469], "lightcrv_pksb1222": [234, 566], "lightcurv": [71, 73, 74, 75, 77, 78, 118, 124, 129, 133, 134, 135, 136, 141, 198, 199, 234, 287, 288, 290, 383, 385, 390, 393, 395, 398, 406, 417, 419, 420, 421, 425, 431, 432, 433, 434, 436, 437, 439, 440, 442, 465, 466, 469, 475, 491, 506, 511, 566], "lightcurve1": 133, "lightcurve2": 133, "lightcurve_at_energi": 398, "lightcurveconfig": 16, "lightcurveestim": [118, 389, 390, 395, 398, 406, 417, 419, 421, 422, 425, 433, 434, 439, 465, 466, 467, 470, 511], "lightcurvetablemodel": [385, 387], "lightcurvetempl": 385, "lightcurvetemplatemodel": [438, 439], "lightcurvetemplatetemporalmodel": [265, 397, 436, 439, 461, 482, 566], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 138, 139, 153, 161, 189, 190, 192, 196, 198, 201, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 301, 321, 331, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 405, 406, 410, 416, 425, 427, 428, 432, 433, 435, 436, 438, 439, 443, 444, 446, 448, 449, 450, 451, 454, 461, 462, 468, 471, 472, 474, 476, 477, 479, 483, 484, 486, 487, 491, 495, 497, 499, 500, 507, 511, 516, 524, 534, 569, 571, 572, 573, 574], "likelhood": 386, "likelihood": [100, 101, 102, 105, 110, 121, 122, 123, 124, 126, 132, 281, 298, 374, 380, 383, 386, 387, 390, 392, 394, 395, 396, 398, 406, 413, 415, 416, 419, 426, 429, 432, 434, 435, 440, 446, 448, 449, 450, 452, 458, 462, 465, 466, 468, 474, 475, 476, 478, 484, 487, 495, 496, 499, 507, 509, 511, 547, 569, 570, 572, 573], "likelihood_profil": [385, 415], "likelihood_typ": 420, "likewis": [190, 202], "lima": 117, "lima1983": [509, 570, 573], "lima_map": 454, "limamapestim": [395, 421], "limg": 470, "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 101, 112, 121, 122, 123, 124, 125, 126, 129, 130, 132, 146, 161, 164, 194, 211, 213, 247, 281, 282, 284, 321, 322, 361, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 394, 395, 397, 398, 402, 415, 421, 425, 432, 433, 434, 435, 440, 443, 448, 452, 456, 459, 462, 465, 474, 475, 476, 479, 480, 483, 487, 495, 507, 509, 511, 520, 529, 547, 556, 569, 570, 574], "lin": [19, 20, 194, 198, 199, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 281, 313, 314, 315, 402, 461, 477, 479, 489, 524, 547], "line": [6, 13, 46, 82, 83, 87, 91, 101, 102, 105, 109, 110, 150, 156, 158, 160, 197, 198, 220, 242, 333, 334, 371, 373, 375, 377, 380, 383, 385, 388, 390, 391, 398, 404, 405, 406, 408, 410, 419, 430, 433, 456, 476, 478, 482, 499, 511, 524, 569], "line2d": [197, 220, 242], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 143, 144, 145, 146, 149, 151, 153, 156, 161, 189, 190, 192, 198, 199, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 313, 374, 436, 442, 456, 461, 462, 464, 479, 482, 487, 495, 496, 525, 567], "linear_model": 562, "linearli": [199, 202, 479, 507], "linearsegmentedcolormap": [364, 365], "linearstretch": [364, 365], "lineartemporalmodel": [265, 482, 562], "lineno": 374, "liner": [269, 388], "linestyl": [443, 468, 470, 472, 484, 505, 524, 528, 529], "linewidth": [371, 375, 470], "linhoff": [437, 438, 439, 440], "link": [67, 69, 80, 101, 220, 222, 242, 280, 377, 379, 382, 383, 386, 394, 400, 404, 410, 411, 422, 425, 427, 431, 432, 433, 444, 445, 448, 449, 450, 451, 453, 456, 457, 464, 467, 473, 476, 482, 484, 486, 496, 497, 511, 556, 568], "linkag": 299, "linkage_kwarg": 299, "linkcheck": 375, "linspac": [83, 148, 189, 190, 192, 198, 201, 202, 207, 460, 462, 468, 476, 477, 479, 484, 523, 528], "linux": [381, 391, 404, 407, 434, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 571], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 117, 119, 121, 122, 124, 125, 126, 129, 130, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 169, 170, 172, 173, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 322, 332, 333, 334, 336, 363, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 448, 451, 452, 457, 461, 462, 464, 465, 467, 470, 471, 474, 475, 476, 477, 478, 483, 484, 486, 487, 488, 489, 491, 496, 507, 511, 514, 523, 524, 568, 569, 570, 571], "list_format": [87, 91], "listen": 511, "listenv": 377, "liter": [16, 84, 90, 104, 123, 319, 374], "literatur": [499, 501, 570], "littl": [87, 91, 393, 395, 401, 479, 487, 516, 520, 571], "live": [83, 86, 88, 374, 379, 382, 384, 395, 435, 438, 475], "livetim": [67, 88, 89, 105, 106, 110, 159, 181, 183, 184, 380, 443, 445, 448, 449, 451, 458, 460, 461, 464, 467, 473, 474, 477, 479, 487, 488, 497, 507, 511], "livetime_fract": 89, "ljouvin": 380, "ll": [122, 124, 132, 377, 379, 391, 407, 443, 444, 445, 448, 450, 453, 454, 458, 465, 466, 467, 468, 470, 471, 571, 573], "llvm": 410, "ln": [53, 476, 554], "lo": [23, 432], "lo_bnd": 194, "lo_threshold": 146, "load": [66, 67, 83, 86, 87, 91, 100, 101, 102, 105, 109, 126, 128, 163, 169, 187, 188, 189, 190, 200, 309, 374, 428, 431, 433, 439, 449, 451, 453, 454, 460, 461, 464, 467, 468, 471, 480, 486, 487, 489, 495, 497, 508], "load_cta_irf": [435, 439], "load_irf_dict_from_fil": [159, 439, 443, 451, 460, 461, 464, 467, 486], "loc": [87, 91, 202, 367, 468, 504, 505, 513, 537, 543, 546, 547, 551], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 138, 139, 174, 187, 188, 197, 198, 200, 374, 375, 377, 382, 388, 403, 404, 407, 411, 415, 425, 449, 452, 453, 454, 459, 460, 472, 478, 491, 495, 511], "local_dataset": 478, "local_dens": [17, 18, 21, 22, 24, 25, 27, 472], "local_to_glob": 188, "localfold": 11, "localis": 309, "localn": [16, 84, 90, 104, 123], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 134, 147, 148, 154, 159, 162, 200, 330, 382, 388, 392, 395, 400, 401, 406, 408, 439, 443, 451, 460, 461, 464, 467, 473, 488, 489, 508, 524, 571], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 102, 104, 122, 123, 124, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 194, 198, 202, 210, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 276, 285, 291, 312, 313, 315, 360, 369, 386, 390, 412, 429, 436, 440, 442, 444, 449, 451, 452, 453, 454, 456, 457, 458, 461, 464, 465, 466, 467, 470, 472, 474, 476, 477, 478, 479, 482, 484, 487, 488, 493, 495, 496, 511, 513, 523, 524, 525, 548, 556, 557, 563, 570, 571, 572, 573, 574], "log10": 468, "log_": [236, 237, 482, 545], "log_2": 288, "log_en": 482, "log_level": 11, "log_parabola": 446, "log_parabola_norm": 397, "logarithm": [34, 479, 484, 545], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 432, "loggaussian": 385, "logger": [340, 343, 374, 458], "logic": [16, 84, 86, 90, 104, 123, 175, 398, 479, 480], "logical_and": [189, 190, 192, 198, 201, 202], "logical_or": [189, 190, 192, 198, 201, 202, 478], "loglog": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 312, 443, 472, 503, 504, 505], "lognorm": 472, "logo": 404, "logparabola": [385, 546], "logparabolanormspectralmodel": [237, 253, 397, 422, 482, 546], "logparabolaspectralmodel": [207, 236, 253, 397, 444, 446, 448, 450, 457, 473, 476, 482, 539, 545], "logscal": 419, "logspac": [148, 189, 190, 192, 198, 201, 202, 451, 464, 467, 468, 472, 479, 503, 504, 505, 524], "logspir": [33, 38], "lomb": [389, 433], "lon": [16, 47, 91, 94, 96, 102, 105, 109, 111, 115, 121, 126, 128, 132, 147, 148, 154, 159, 162, 165, 189, 190, 192, 195, 198, 200, 201, 202, 216, 217, 221, 228, 229, 232, 244, 246, 255, 256, 258, 260, 266, 268, 270, 303, 304, 307, 329, 374, 375, 385, 388, 393, 397, 418, 449, 452, 453, 454, 456, 458, 462, 465, 466, 470, 473, 474, 475, 477, 478, 479, 482, 483, 487, 495, 496, 497, 509, 523, 524, 528, 529, 530, 531, 532, 533, 534], "lon_0": [221, 229, 232, 246, 255, 256, 270, 389, 397, 452, 453, 456, 457, 459, 460, 461, 464, 465, 473, 474, 481, 482, 487, 495, 496, 528, 529, 530, 532, 533, 534, 535], "lon_0_err": 459, "lon_pnt": [303, 307], "lon_rang": 329, "lon_t": [303, 307], "long": [374, 377, 379, 381, 388, 390, 393, 394, 396, 399, 401, 427, 436, 444, 473, 491, 523], "longer": [289, 374, 380, 381, 388, 389, 391, 394, 407, 425, 428, 433, 434, 436, 439, 445, 451, 465], "longest": 193, "longitud": [68, 94, 187, 188, 189, 190, 195, 197, 200, 201, 202, 329, 361, 388, 462, 479, 482, 516, 523, 531], "lonpol": 479, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 102, 105, 109, 110, 124, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 331, 374, 376, 377, 379, 386, 388, 389, 391, 393, 394, 397, 410, 433, 445, 448, 449, 451, 452, 453, 454, 456, 458, 460, 462, 464, 465, 467, 468, 474, 477, 479, 482, 486, 487, 489, 491, 495, 497, 499, 508, 511, 571], "look_up": 431, "lookup": 195, "loop": [87, 91, 322, 387, 439, 448, 473, 479, 488, 495, 511], "lopez": [222, 433, 439, 537], "lopez21": [223, 444, 537], "lopez_2021": 223, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 374, "loss": 52, "lost": [100, 102, 105, 109, 110, 511, 524], "lot": [82, 374, 377, 379, 380, 381, 382, 385, 387, 388, 390, 394, 404, 414, 416, 417, 425, 433, 434, 449, 458, 487, 495, 496, 521], "low": [87, 91, 146, 194, 324, 374, 375, 378, 383, 403, 431, 433, 442, 445, 448, 452, 458, 460, 474, 480, 481, 486, 487, 491, 495, 498, 518, 572], "low_zenith": 483, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 122, 124, 146, 175, 194, 196, 199, 214, 215, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 374, 388, 393, 394, 401, 462, 478, 496], "lower_error": 124, "lowest": [393, 471], "lp": [236, 237, 397, 446, 473, 482, 539], "lp_norm": 546, "lss": 448, "lst": [381, 486], "lsw": 403, "lt": [374, 400, 427, 436, 533, 534], "ltcube": [188, 189, 190, 192, 201, 202, 479], "lts_author": 400, "luca": [415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 436, 439], "lui": 435, "luigi": 430, "luminos": [41, 46, 51, 52, 53, 54, 243], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 505], "lvtm": 467, "lw": [448, 450, 452, 458, 468, 476, 524, 528, 530], "ly": [425, 481], "lyne": 37, "l\u00e9a": [415, 417, 418, 419, 422, 430, 431, 432, 433, 434], "l\u00f3pez": 433, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 111, 115, 129, 187, 188, 189, 190, 192, 198, 200, 201, 202, 283, 298, 374, 375, 377, 388, 405, 406, 407, 408, 461, 472, 476, 477, 479, 482, 493, 516, 520, 522, 523, 524, 535, 571, 574], "m1": [406, 408], "m2": [102, 149, 169, 444, 449, 451, 453, 454, 456, 458, 464, 474, 477, 478, 486, 495, 496], "m_": [20, 50, 52, 53], "m_3fhl_gc": 479, "m_4d": 479, "m_allski": 479, "m_b": 572, "m_cube": 479, "m_ejecta": [52, 504], "m_gc": 479, "m_hpx": 479, "m_i": 572, "m_iem_10gev": 479, "m_iem_cutout": 479, "m_iem_gc": 479, "m_iem_interp": 479, "m_sub": 479, "m_sun": 504, "m_wc": [189, 190, 192, 198, 201, 202, 479], "ma": [87, 91, 117, 121, 443, 452, 454, 475, 570, 573], "mabzkg": 470, "mac": [87, 91, 374, 381, 404, 432, 571], "machin": [377, 381, 382, 387, 391, 404, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 456], "maco": [391, 434], "macport": [391, 432, 434], "made": [169, 176, 197, 200, 211, 213, 220, 242, 301, 333, 334, 374, 377, 379, 390, 393, 395, 398, 399, 400, 425, 436, 437, 448, 452, 456, 457, 478, 486, 524, 535], "madrid": 384, "magenta": [371, 459, 483], "magic": [97, 406, 411, 427, 433, 436, 450, 487, 570], "magic_ecpl": 274, "magic_lp": [274, 450], "magnet": [42, 50, 51, 54, 547], "magnetic_field": [50, 51, 54], "magnitud": [313, 460], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 101, 104, 123, 124, 374, 375, 377, 382, 383, 387, 388, 390, 391, 399, 400, 404, 405, 407, 412, 413, 444, 453, 454, 460, 475, 486, 510, 523, 530, 547, 568, 571, 575], "mail": [375, 377, 379, 381, 388, 390, 393, 395, 397, 400, 403, 409, 414, 415, 497, 571], "mailmap": [425, 436], "main": [91, 102, 109, 374, 377, 379, 380, 382, 386, 389, 390, 391, 394, 398, 400, 404, 415, 421, 425, 428, 433, 439, 449, 459, 460, 462, 464, 470, 473, 477, 479, 480, 481, 493, 495, 496, 506, 508, 512, 571], "mainli": [374, 384, 385, 388, 395, 479], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 374, 376, 391, 393, 394, 395, 399, 404, 434, 478], "mainten": [374, 381, 400, 404, 416, 438], "major": [197, 221, 229, 232, 374, 378, 379, 383, 391, 399, 427, 433, 434, 528, 529, 530], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 101, 104, 123, 164, 165, 169, 170, 171, 172, 174, 175, 176, 179, 180, 185, 186, 188, 189, 190, 193, 194, 197, 199, 200, 201, 202, 269, 331, 333, 334, 345, 373, 375, 376, 379, 380, 381, 384, 386, 388, 390, 391, 392, 393, 394, 395, 398, 400, 401, 404, 406, 408, 410, 413, 414, 416, 419, 420, 425, 427, 430, 431, 432, 433, 436, 438, 444, 445, 448, 450, 451, 454, 456, 460, 464, 465, 477, 478, 479, 482, 486, 487, 493, 497, 508, 511, 571, 572], "make_background": [169, 176], "make_background_fit": 166, "make_background_scal": 166, "make_base_catalog_galact": [433, 501], "make_concentric_annulus_sky_region": 462, "make_contour": 476, "make_count": [169, 170, 171, 176], "make_counts_off": [170, 171], "make_cub": 164, "make_dataset": 165, "make_default_fov_background_model": 166, "make_edisp": [169, 176], "make_edisp_kernel": [169, 176], "make_edisp_kernel_map": 477, "make_edisp_map": 148, "make_effective_livetime_map": 478, "make_exclusion_mask": 166, "make_exposur": [169, 176], "make_exposure_irf": [169, 176], "make_imag": 434, "make_lupton_rgb": 369, "make_map_background_irf": 428, "make_map_count": 380, "make_map_cutout": 380, "make_map_exposure_reco_energi": 380, "make_map_exposure_true_energi": [148, 380, 477], "make_map_fov_background": 380, "make_map_hadron_accept": 380, "make_map_ring_background": 380, "make_map_xxx": 380, "make_maps_off": 174, "make_mask_bkg_invalid": 175, "make_mask_energy_aeff_default": 175, "make_mask_energy_aeff_max": 175, "make_mask_energy_bkg_peak": 175, "make_mask_energy_edisp_bia": 175, "make_mask_offset_max": 175, "make_mean_edisp": 435, "make_mean_psf": 435, "make_meta_t": [169, 176], "make_model": 393, "make_more_random_stuff": 374, "make_observation_time_map": 478, "make_orthogonal_rectangle_sky_region": [126, 462], "make_path": [124, 457, 474, 475], "make_pixel_region": 388, "make_psf": [159, 169, 176, 435], "make_psf_map": 477, "make_quant": 345, "make_random_stuff": 374, "make_region": 388, "make_sky_coord": 388, "make_some_random_stuff": 374, "make_theta_squared_t": [425, 489], "makefil": [404, 429], "maker": [6, 148, 159, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 380, 387, 389, 400, 419, 421, 422, 427, 436, 439, 440, 442, 443, 448, 450, 451, 454, 458, 460, 461, 464, 467, 468, 470, 474, 477, 480, 485, 488, 489, 491, 521, 570], "maker_fov": 496, "maker_safe_mask": [458, 464, 496], "mamba": [377, 405, 406, 427], "manag": [87, 91, 211, 213, 220, 242, 321, 352, 373, 374, 377, 382, 390, 391, 393, 396, 400, 401, 403, 425, 430, 432, 436, 440, 479, 481, 571], "manconi": 417, "mandatori": [175, 377, 387, 400, 461, 482], "mandatory_keyword": 477, "mani": [87, 91, 313, 374, 375, 377, 379, 381, 383, 386, 388, 389, 390, 391, 394, 395, 400, 404, 410, 416, 417, 422, 425, 431, 432, 433, 434, 435, 438, 439, 445, 448, 451, 459, 464, 471, 475, 479, 489, 491, 499, 507, 509, 521, 524, 568, 569, 570, 571, 575], "manifest": 384, "manipul": [87, 91, 398, 401, 427, 484, 523], "manner": [438, 439], "manpow": [379, 391], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 381, 386, 396, 403, 460, 511, 519, 571, 572], "manuel": [426, 429, 430], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 217, 220, 221, 228, 229, 232, 234, 242, 244, 246, 255, 256, 258, 260, 266, 267, 268, 270, 271, 278, 283, 323, 361, 362, 367, 369, 371, 373, 374, 375, 377, 381, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 401, 406, 410, 414, 415, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 439, 440, 442, 443, 445, 448, 449, 450, 451, 455, 456, 459, 460, 461, 462, 463, 465, 466, 467, 470, 471, 473, 474, 475, 478, 482, 485, 486, 487, 488, 489, 491, 492, 495, 496, 499, 506, 507, 510, 511, 515, 517, 518, 519, 520, 521, 527, 529, 530, 531, 532, 535, 566, 569, 570], "map_": [203, 204, 362, 369], "map_4d": 479, "map_analysi": 393, "map_cent": 270, "map_coord": [83, 148, 159, 162], "map_dataset": [386, 468], "map_dataset_empti": 468, "map_dataset_mak": 468, "map_dataset_on_off": 468, "map_edisp": [111, 115], "map_in": [189, 190, 192, 198, 201, 202], "map_out": [105, 110, 147, 148, 154, 159, 162, 189, 190, 192, 198, 201, 202], "map_result": 452, "map_select": [16, 449, 453, 454, 456, 495], "map_typ": [189, 190, 192, 198, 201, 202, 479, 523], "mapax": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 422, 425, 427, 479], "mapaxi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 115, 122, 124, 126, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 169, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 369, 375, 389, 398, 416, 417, 419, 422, 425, 435, 439, 443, 445, 448, 450, 451, 457, 458, 460, 461, 464, 466, 467, 468, 470, 474, 477, 478, 479, 482, 487, 488, 489, 496, 515, 518, 520, 521, 523, 524], "mapcoord": [83, 148, 159, 162, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 244, 433, 434, 479, 524, 531], "mapdataset": [98, 99, 103, 105, 108, 109, 110, 112, 113, 114, 116, 117, 121, 126, 129, 132, 137, 138, 139, 140, 164, 165, 166, 169, 170, 174, 175, 228, 367, 370, 387, 389, 395, 396, 415, 416, 417, 418, 419, 420, 421, 422, 425, 439, 440, 452, 453, 457, 458, 459, 461, 462, 464, 465, 467, 468, 475, 476, 478, 480, 481, 487, 495, 496, 509, 511, 518, 521, 570, 572, 573], "mapdataseteventsampl": [93, 108, 419, 420, 421, 428, 439, 460, 461], "mapdatasetmak": [159, 167, 176, 387, 419, 422, 425, 428, 436, 458, 460, 461, 464, 468, 477, 478, 488, 495, 496, 511, 518, 521], "mapdatasetmetadata": [102, 105, 401], "mapdatasetoff": 427, "mapdatasetonoff": [98, 102, 109, 110, 117, 121, 137, 164, 170, 174, 419, 420, 422, 425, 438, 439, 454, 468, 478, 507, 521, 572], "mapdatasetsampl": 387, "mapevalu": [385, 386, 418, 419, 422, 425, 436, 437, 438, 440], "mapeventsampl": [417, 418], "mapfit": [385, 386, 415, 434, 435], "mapgeom": [380, 435, 436], "mapmak": [169, 390, 415, 419, 434], "mapmakerob": [418, 419], "mappabl": 398, "mappanelplott": [395, 576], "mapper": 309, "mappingintstrani": [16, 84, 90, 104, 123], "maps_off": 174, "mar": [391, 412, 437], "march": [381, 383, 412, 414, 435], "marcocirelli": 26, "margin": [101, 105, 110, 114, 116, 188, 190, 200, 202, 220, 242, 258, 385, 480, 528, 572], "marion": [415, 434], "mark": [91, 374, 385, 403], "marker": [101, 102, 105, 109, 110, 443, 445, 448, 450, 452, 458, 465, 466, 467, 471, 497], "markerfacecolor": [102, 105, 109, 110], "markers": [101, 102, 105, 109, 110, 484], "markov": 570, "mask": [83, 87, 91, 99, 101, 102, 105, 109, 110, 121, 125, 126, 128, 129, 130, 132, 147, 148, 154, 159, 162, 164, 166, 171, 172, 173, 174, 175, 177, 187, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 211, 213, 220, 242, 258, 386, 402, 419, 421, 422, 423, 425, 428, 434, 436, 437, 438, 439, 442, 443, 445, 456, 458, 478, 481, 485, 488, 491, 507, 518, 520, 523, 570], "mask_1": 483, "mask_2": 483, "mask_bright": 473, "mask_contains_region": 202, "mask_data": 480, "mask_energi": [474, 480], "mask_fit": [101, 102, 105, 109, 110, 114, 116, 386, 419, 436, 450, 456, 468, 474, 476, 480, 484, 507], "mask_fit_imag": [102, 105, 109, 110], "mask_imag": [102, 105, 109, 110], "mask_map": [188, 200, 442, 480, 485], "mask_map_catalog": 480, "mask_nearest_posit": [189, 190, 192, 198, 201, 202], "mask_off": 468, "mask_roi": 473, "mask_saf": [101, 102, 105, 106, 109, 110, 175, 386, 419, 474, 478, 480, 507], "mask_safe_edisp": [102, 105, 109, 110], "mask_safe_imag": [102, 105, 109, 110, 147, 148, 154, 159, 162], "mask_safe_psf": [102, 105, 109, 110], "mask_spac": 474, "mask_valid": 101, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 387, 421, 440, 472, 499, 532], "massdm": [19, 20, 472], "master": [380, 381, 388, 403, 404, 413], "match": [87, 91, 108, 112, 187, 188, 190, 193, 194, 195, 197, 200, 202, 204, 282, 284, 374, 382, 433, 435, 440, 448, 451, 467, 475, 487, 506, 523], "match_by_nam": 195, "math": [229, 373], "mathcal": [476, 507], "mathemat": [482, 484], "mathieu": [425, 428], "mathrm": [19, 20, 23, 102, 109, 149, 472, 476, 507, 572, 574], "mathworld": [328, 329], "matplotlib": [19, 20, 26, 66, 67, 83, 128, 143, 146, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 189, 190, 192, 198, 201, 202, 205, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 352, 362, 363, 364, 367, 368, 369, 371, 373, 374, 375, 388, 391, 400, 407, 410, 417, 425, 427, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 503, 504, 505, 511, 513, 514, 515, 517, 520, 528, 530, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 575], "matric": 205, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 111, 115, 146, 147, 148, 151, 205, 206, 207, 211, 220, 242, 282, 284, 367, 391, 392, 402, 435, 436, 439, 476, 477, 507, 509, 515], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 388, 394, 402, 434, 439, 440, 442, 478, 485, 487, 491, 500, 569, 571], "matthew": [381, 431, 433, 434], "matthia": [433, 434], "mattox": 452, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 102, 112, 125, 127, 129, 161, 165, 169, 171, 175, 202, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 329, 382, 390, 397, 402, 410, 421, 422, 423, 425, 427, 439, 444, 445, 448, 449, 450, 451, 453, 454, 456, 457, 458, 459, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 487, 488, 495, 496, 497, 499, 518, 520, 521, 528, 547, 550, 556, 573], "max_ag": [45, 501], "max_column": [87, 91], "max_energi": 471, "max_lin": [87, 91], "max_nit": 132, "max_offset": 390, "max_percentil": 83, "max_radiu": [157, 159, 162, 200, 487], "max_region_numb": [172, 520], "max_width": [87, 91], "maxcal": 207, "maxclust": 299, "maxfev": 476, "maxim": [45, 82, 91, 112, 132, 175, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 437, 438, 439, 440, 520], "maxima": [138, 211, 213], "maximilian": [425, 427, 428, 437, 438, 439, 440], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 122, 124, 127, 159, 162, 164, 172, 175, 181, 184, 188, 194, 199, 200, 210, 212, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 282, 284, 328, 330, 333, 371, 377, 380, 388, 427, 446, 452, 471, 475, 478, 479, 484, 488, 496, 501, 509, 520, 547, 569, 570, 573], "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374, 382, 384, 385, 396], "mb": [187, 188, 197, 200, 382, 406, 408, 442, 447, 455, 463, 469, 485, 486, 487, 489, 490, 492, 494, 498, 526, 536, 557, 567], "mbox": [102, 109], "mc": 392, "mc_id": [83, 384, 387, 427, 460, 486], "mcerp": 392, "mckee": [53, 440], "mcmc": [392, 394, 415, 420, 422, 547, 570], "mcmc_sampl": [394, 417], "md": [377, 394, 400], "mdm": [26, 472], "mean": [42, 68, 87, 91, 96, 101, 102, 126, 128, 146, 147, 148, 151, 154, 159, 162, 230, 234, 269, 283, 287, 300, 319, 374, 375, 377, 379, 381, 387, 388, 390, 391, 397, 402, 407, 410, 422, 431, 448, 451, 452, 461, 471, 475, 476, 478, 482, 483, 484, 487, 488, 497, 529, 544, 571, 572], "meaning": 482, "meant": [380, 439, 443, 451, 453, 456, 458, 464, 467, 486], "measur": [27, 67, 101, 105, 110, 128, 194, 274, 282, 284, 287, 288, 289, 290, 292, 294, 295, 297, 298, 380, 388, 393, 398, 404, 413, 418, 426, 432, 434, 444, 445, 448, 450, 451, 454, 457, 459, 462, 464, 465, 466, 471, 473, 487, 496, 497, 509, 516, 518, 521, 569, 570, 573, 574], "mechan": [382, 392, 398, 401], "media": 400, "median": [83, 159, 162, 410, 468, 483, 487], "median_zenith": 483, "medium": [45, 52, 374, 383], "meeseeksdev": 374, "meeseeksmachin": 374, "meet": [220, 242, 301, 380, 382, 394, 399, 404], "megabyt": [187, 188, 197, 200], "mem": [442, 447, 455, 463, 469, 485, 490, 492, 494, 498, 526, 536, 557, 567], "member": [83, 375, 379, 388, 400, 401, 433, 439, 475, 486, 489], "memo": [146, 194], "memori": [87, 88, 91, 92, 100, 102, 103, 105, 108, 109, 110, 187, 188, 197, 200, 266, 268, 270, 352, 374, 384, 386, 387, 390, 396, 398, 419, 425, 440, 451, 464, 511], "memoryobserv": 88, "mender": [438, 439, 440], "mention": [59, 141, 374, 375, 377, 381, 382, 386, 388, 391, 393, 394, 399, 400, 403, 404, 477, 481, 482, 484, 499, 570], "mentor": [377, 394], "mere": 384, "merg": [67, 86, 87, 91, 191, 194, 220, 242, 341, 374, 377, 378, 379, 380, 387, 388, 389, 393, 394, 399, 400, 403, 404, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431, 432, 433, 434, 435], "merge_equ": 86, "mergesort": [87, 91], "mess": 375, "messag": [101, 206, 208, 209, 377, 388, 390, 397, 423, 438, 445, 446, 448, 449, 450, 456, 457, 458, 467, 468, 470, 475, 476, 487, 495, 496, 511, 571], "met": [86, 355, 439, 466, 470, 570], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 102, 103, 105, 107, 108, 109, 110, 122, 124, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 176, 189, 190, 192, 198, 201, 202, 266, 267, 270, 271, 311, 355, 356, 357, 358, 384, 387, 388, 389, 398, 401, 421, 422, 433, 437, 439, 440, 460, 468, 479, 483, 486, 488, 508, 509, 566], "meta_t": [100, 101, 102, 105, 109, 110, 169, 176, 398, 401, 422, 445, 451, 478, 507], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 104, 106, 122, 123, 124, 143, 144, 145, 149, 150, 153, 156, 158, 160, 161, 189, 190, 192, 198, 201, 202, 356, 378, 380, 391, 440, 449, 453, 454, 456, 460, 482, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "metadata_fits_export_kei": [84, 90, 104, 123], "metadatabas": 401, "metadatabasemodel": 401, "metapackag": 391, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 284, 290, 292, 299, 309, 313, 317, 321, 322, 323, 348, 361, 363, 373, 374, 377, 380, 383, 384, 385, 388, 389, 390, 392, 393, 394, 396, 398, 400, 401, 406, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 439, 440, 443, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 466, 468, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 506, 508, 510, 511, 515, 518, 520, 521, 522, 524, 545, 559, 568, 569, 570, 571, 573], "method_kwarg": [321, 322], "methoda": 417, "metric": 299, "mev": [74, 83, 143, 144, 145, 149, 443, 444, 451, 453, 456, 458, 464, 467, 468, 473, 477, 479, 482, 486, 487, 497, 556], "meval": 530, "mexico": 488, "meyer": [239, 274, 457, 570], "meyer2010": 570, "mgtime": 389, "michael": [438, 440], "mid": [428, 439, 486], "middl": [363, 390], "midli": 448, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 177, 194, 207, 374, 379, 385, 386, 388, 391, 393, 398, 400, 401, 406, 408, 415, 448, 466, 468, 474, 478, 480, 487, 488, 491, 497, 499, 507, 511, 518, 524, 571, 573], "migra": [102, 105, 109, 110, 148, 151, 180, 390, 460, 461, 477, 516], "migra_axi": [102, 105, 109, 110, 113, 148, 151, 460, 461, 477, 478], "migrad": [101, 207, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 475, 476, 487, 495, 496], "migrad_opt": [207, 476], "migrat": [102, 105, 109, 110, 113, 151, 383, 418, 425, 434, 460, 478, 515, 516], "milagro": [97, 365], "mileston": [383, 403], "milki": [33, 38, 413, 501], "miller": [87, 91], "million": [374, 401], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 102, 125, 127, 129, 141, 169, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 288, 329, 389, 390, 397, 402, 410, 425, 433, 444, 445, 448, 449, 450, 451, 453, 454, 456, 457, 458, 459, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 482, 483, 484, 487, 495, 496, 497, 499, 520, 547, 550, 556], "min_count": 166, "min_dist": [138, 139, 172, 452, 458, 520], "min_distance_input": [172, 520], "min_energi": 471, "min_npix": [147, 148, 154, 159, 162, 200, 202], "min_npred_background": 166, "min_signific": 389, "min_significance_lc": 389, "minaya": 435, "mind": [377, 394, 464, 476], "mini": 394, "miniconda": 405, "minim": [19, 20, 26, 112, 131, 189, 190, 192, 197, 198, 201, 202, 203, 207, 214, 215, 217, 218, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 243, 244, 245, 246, 247, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 280, 386, 389, 397, 401, 427, 437, 439, 443, 460, 474, 476, 484, 496, 511, 520, 521, 524, 569, 574], "minima": [211, 213, 484], "minimis": [467, 483], "minimmum": [147, 148, 154, 159, 162, 200, 202], "minimum": [19, 20, 26, 47, 83, 100, 121, 122, 124, 127, 131, 134, 138, 139, 141, 142, 164, 166, 172, 194, 197, 199, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 276, 281, 285, 288, 301, 328, 330, 333, 369, 391, 427, 433, 448, 452, 460, 475, 476, 479, 484, 487, 509, 511, 520, 547, 574], "mino": [207, 476], "minor": [374, 379, 394, 397, 399, 424, 437, 529, 530], "minos_contour": [417, 435], "minu": [151, 468], "minuit": [101, 119, 207, 208, 209, 385, 392, 419, 434, 435, 439, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 475, 476, 487, 495, 496], "minuit_opt": 476, "minut": [394, 404, 433, 448, 452, 454, 456, 458, 459, 460, 462, 464, 466, 467, 470, 472, 474, 476, 478, 481, 484, 495], "mireia": 436, "mirror": 186, "misc": [413, 426, 430, 431, 432], "miss": [82, 87, 91, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 374, 377, 382, 383, 384, 385, 388, 394, 395, 398, 423, 425, 427, 433, 438, 479], "mission": [83, 439, 570], "mistak": [379, 399], "mix": [373, 374, 390, 474, 479], "mixin": [87, 91], "mjd": [86, 94, 124, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 356, 358, 375, 438, 439, 452, 460, 461, 465, 466, 467, 470, 471, 479, 482, 508, 559, 560, 561, 562, 563, 564, 565, 566, 575], "mjdref": [452, 479], "mjdreff": [94, 355, 358, 461], "mjdrefi": [94, 355, 358, 461], "mkdir": [390, 448, 449, 456, 457, 460, 495, 496], "mkn": [497, 570], "mkn_421_3fhl": 497, "mncontour": 207, "mnra": [134, 297], "mnt": 436, "mock": 459, "mock_dl4": 459, "mode": [16, 84, 85, 87, 90, 91, 94, 102, 104, 105, 109, 123, 127, 147, 148, 154, 159, 162, 165, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 268, 401, 420, 433, 436, 440, 467], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 137, 140, 143, 149, 150, 157, 158, 159, 160, 162, 166, 169, 182, 189, 190, 192, 198, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 293, 296, 298, 370, 373, 374, 375, 378, 379, 380, 386, 387, 389, 390, 392, 394, 395, 398, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 446, 451, 452, 454, 459, 462, 464, 468, 475, 477, 478, 479, 480, 485, 487, 488, 491, 499, 500, 506, 507, 509, 511, 512, 516, 518, 519, 526, 536, 557, 567, 569, 570, 573, 574], "model1": [215, 537, 539, 543, 546, 548, 551], "model2": [215, 444, 467, 537, 539, 543, 546, 548, 551], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 449], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [482, 539], "model_best": 444, "model_best_joint": 448, "model_best_stack": 448, "model_bin_": 470, "model_bin_0": 470, "model_bkg": 474, "model_computed_field": [16, 84, 90, 104, 123], "model_config": [16, 84, 90, 104, 123, 453, 495], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 104, 123], "model_copi": [16, 84, 90, 104, 123, 482], "model_dump": [16, 84, 90, 104, 123], "model_dump_json": [16, 84, 90, 104, 123], "model_extra": [16, 84, 90, 104, 123], "model_field": [16, 84, 90, 104, 123], "model_fields_set": [16, 84, 90, 104, 123], "model_fit": 467, "model_in_bin": 470, "model_joint": 456, "model_json_schema": [16, 84, 90, 104, 123], "model_manag": [442, 481, 485], "model_nam": [102, 105, 109, 110, 220, 242, 370, 474], "model_parametrized_nam": [16, 84, 90, 104, 123], "model_plot": 459, "model_post_init": [16, 84, 90, 104, 123], "model_prior": 484, "model_read": 484, "model_rebuild": [16, 84, 90, 104, 123], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [451, 464, 467], "model_spectrum": 482, "model_str": 449, "model_typ": [220, 228, 240, 242, 258, 268, 280, 397, 481], "model_valid": [16, 84, 90, 104, 123], "model_validate_json": [16, 84, 90, 104, 123], "model_validate_str": [16, 84, 90, 104, 123], "model_weak": 484, "model_weak_prior": 484, "model_without_nam": 482, "modelbas": [228, 251, 258, 260, 261, 268, 272, 402], "modeldm": [19, 20], "modelevalu": 385, "modeling_2d": [442, 453, 455], "modelmetadata": 401, "modelmodel_dump": [16, 84, 90, 104, 123], "modelmodel_dump_json": [16, 84, 90, 104, 123], "models_3fhl": 481, "models_4fgl_roi": 473, "models_as_dict": [16, 84, 90, 104, 123], "models_diffus": 460, "models_fil": [16, 449, 453, 454, 456, 495], "models_fit": 464, "models_gc": 481, "models_gp": 486, "models_joint": 456, "models_or": 481, "models_read": 482, "models_select": 481, "models_stack": 456, "models_yaml": 482, "modelsmetadata": 401, "modern": [87, 91, 392], "modernis": [391, 419], "modest": [374, 529], "modif": [16, 84, 87, 90, 91, 104, 123, 374, 377, 396, 403, 436], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 102, 109, 124, 125, 126, 129, 132, 165, 207, 321, 346, 371, 384, 386, 390, 396, 400, 401, 420, 422, 423, 425, 427, 435, 438, 439, 444, 449, 461, 478, 480, 484, 488, 495, 509, 524, 575], "modul": [6, 257, 374, 375, 379, 383, 390, 395, 413, 415, 421, 433, 467, 473, 475, 478, 481, 499, 500, 501, 502, 547, 564, 575], "modular": 380, "mohanti": 101, "mohrmann": [390, 414, 415, 416, 432, 433, 434, 437, 439, 570], "mohrmann2019": 570, "moment": [15, 51, 54, 86, 95, 258, 350, 380, 388, 390, 391, 394, 399, 400, 477, 479, 516], "moncar": [207, 476], "monitor": [387, 486, 511], "monkei": 374, "mono": 382, "monoton": 194, "mont": [392, 516, 570], "montecarlo": [103, 108, 207], "month": [78, 377, 383, 388, 391, 393, 394, 399, 403, 407, 413, 414, 415, 416, 417, 426, 429, 430, 431, 432, 433, 434, 435], "monthli": [383, 401, 406, 435], "moor": 24, "morcuend": [435, 438, 440], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 101, 102, 105, 109, 110, 138, 146, 175, 189, 190, 192, 201, 202, 214, 215, 216, 217, 218, 219, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 264, 270, 271, 285, 291, 309, 349, 374, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 419, 420, 421, 422, 425, 432, 434, 435, 439, 444, 445, 448, 450, 452, 454, 456, 460, 461, 467, 470, 471, 472, 474, 476, 478, 479, 480, 481, 482, 483, 484, 488, 489, 491, 497, 507, 508, 509, 511, 520, 521, 523, 524, 529, 568, 569, 571, 573, 575], "moreov": [390, 473, 478, 507], "morpholog": [119, 387, 442, 463, 491], "morphologi": [50, 52, 119, 385, 387, 397, 413, 430, 432, 445, 453, 459, 460, 461, 464, 473, 478, 525], "mosaic": 380, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 117, 124, 373, 374, 375, 377, 379, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 406, 407, 425, 432, 433, 435, 436, 439, 440, 453, 454, 462, 465, 467, 473, 475, 476, 477, 478, 479, 480, 486, 487, 491, 497, 499, 509, 510, 511, 516, 518, 524, 568, 570, 571, 574], "mostli": [56, 69, 301, 374, 375, 380, 381, 382, 383, 388, 390, 393, 394, 395, 398, 399, 401, 403, 404, 425, 433, 473, 478, 489, 497, 573, 575], "motion": [45, 305], "motiv": [175, 379, 381, 382, 388, 391, 393, 403, 482, 511], "move": [280, 379, 380, 381, 382, 385, 388, 393, 394, 395, 398, 403, 409, 415, 416, 418, 419, 420, 421, 425, 426, 430, 431, 433, 434, 435, 436, 451], "move_axi": 439, "movement": 400, "mpatch": 462, "mpg": 67, "mpi": 67, "mpl": 374, "mpl_check_plot": 374, "mpl_kwarg": [448, 458, 462], "mpl_normal": [364, 365], "mpl_plot_check": 374, "mpl_style": 433, "msg": [443, 451, 453, 456, 458, 464, 467, 486], "msh": [454, 473, 478], "msh15": 489, "mst": 486, "mu": [26, 282, 284, 285, 367, 402, 444, 472, 484, 515, 516, 573], "mu_": [285, 291, 572, 573, 574], "mu_background": 571, "mu_bkg": [105, 110, 282, 295, 298, 410, 571, 573], "mu_off": 573, "mu_on": [285, 291, 573], "mu_sig": [284, 295, 298, 572, 573], "mu_x": 573, "much": [190, 374, 380, 385, 388, 390, 393, 394, 418, 425, 451, 456, 462, 468, 484, 487, 497, 530], "mul": [26, 444, 472, 482, 537, 543, 546, 548, 551, 556], "mulitpli": 251, "multi": [87, 91, 188, 200, 383, 388, 402, 419, 422, 426, 433, 442, 446, 452, 463, 474, 476, 477, 482, 483, 487, 491, 509, 511, 523, 569, 570], "multidimension": [380, 390, 402, 440, 475, 491, 516, 569], "multinorm": 392, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 101, 102, 105, 108, 109, 110, 112, 114, 116, 132, 138, 163, 189, 190, 192, 198, 201, 202, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 374, 375, 380, 383, 386, 387, 388, 390, 392, 395, 396, 398, 402, 406, 415, 422, 423, 425, 433, 439, 440, 450, 456, 473, 474, 475, 478, 479, 480, 482, 487, 509, 523, 547, 556, 568, 569, 570, 571, 576], "multipli": [19, 20, 26, 124, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 229, 230, 232, 234, 236, 237, 239, 242, 243, 244, 245, 247, 248, 249, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 278, 283, 293, 296, 301, 444, 452, 468, 472, 482, 537, 573], "multiprocess": [13, 93, 125, 126, 129, 132, 165, 316, 321, 322, 419, 439, 440], "multithread": 13, "multivari": 392, "multivariategaussianprior": 402, "multiwavelength": 222, "muon": 483, "muoneff": 483, "mur": [26, 472], "murf9of": 482, "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 101, 102, 105, 106, 110, 111, 115, 124, 129, 132, 138, 139, 146, 157, 165, 169, 171, 176, 183, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 289, 290, 301, 319, 369, 374, 379, 385, 386, 389, 398, 399, 400, 401, 443, 448, 453, 474, 475, 478, 480, 481, 482, 486, 487, 496, 497, 511, 523], "mutablemap": 196, "mutablesequ": [92, 100, 242], "mutipl": 406, "mutltipl": 377, "my": [374, 396, 397, 405, 460, 461, 474, 482], "my_custom_model": 482, "my_flux_map": 398, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 396, "mybind": [404, 433], "myconfig": [11, 571], "mycustomgaussianmodel": [397, 482], "mycustomprior": 484, "mycustomspectralmodel": [253, 482], "n": [19, 20, 51, 82, 87, 91, 122, 124, 187, 188, 189, 190, 192, 194, 195, 198, 200, 201, 202, 210, 212, 273, 280, 374, 377, 388, 391, 405, 407, 431, 464, 466, 470, 472, 473, 475, 476, 479, 481, 484, 486, 487, 488, 489, 494, 516, 523, 524, 526, 529, 530, 570, 572, 574], "n_": [102, 109, 285, 291, 507, 572, 573, 574], "n_0": [230, 544], "n_bad": 487, "n_bin": 474, "n_bkg": [282, 284, 573], "n_dof": [122, 124, 509], "n_event": [189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 387], "n_event_bunch": [103, 108], "n_events_bkg": 387, "n_fit_bin": [456, 467, 474, 481], "n_free_paramet": 280, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 504, 505], "n_job": [16, 93, 125, 126, 129, 132, 165, 321, 439, 449, 452, 453, 454, 456, 462, 478, 495], "n_jobs_default": [93, 125, 126, 129, 132, 165], "n_model": [72, 76], "n_ob": [451, 460, 467], "n_observ": 571, "n_off": [105, 110, 284, 294, 295, 298, 572, 573], "n_off_posit": 450, "n_off_region": [177, 450], "n_on": [282, 284, 285, 291, 294, 295, 298, 410, 571, 572, 573], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 214, 215, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 402, 565], "n_scale": 117, "n_sig": [282, 284, 468, 573], "n_sig_matching_signific": [282, 284], "n_sigma": [71, 74, 75, 78, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 280, 282, 284, 443, 452, 462, 473, 474, 475, 495, 497, 509], "n_sigma_sensit": [121, 122, 123, 124], "n_sigma_ul": [71, 74, 75, 78, 121, 122, 123, 124, 125, 126, 129, 130, 132, 452, 462, 465, 473, 474, 475, 495, 497, 509], "n_sourc": [45, 501], "n_spatial_ax": 193, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [466, 470], "nachiketa": [431, 432], "naima": [243, 373, 391, 392, 393, 394, 397, 416, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 511, 525, 556, 557], "naimamodel": [416, 419, 421], "naimaspectralmodel": [253, 397, 425, 482, 511, 547], "nakashima": 417, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 122, 123, 124, 125, 126, 129, 130, 132, 134, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 169, 170, 179, 180, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 299, 300, 322, 353, 354, 369, 375, 377, 380, 383, 384, 386, 387, 388, 389, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 408, 415, 416, 417, 418, 419, 420, 421, 422, 425, 434, 436, 437, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 499, 509, 511, 515, 518, 520, 521, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 573], "name1": 476, "name2": 476, "name_err": [125, 126, 129, 130], "name_scan": [125, 126, 129, 130], "name_substr": [220, 242, 481], "name_ul": [125, 126, 129, 130], "namedtupl": 374, "nameerror": 374, "namespac": [6, 16, 84, 90, 104, 123, 374, 393, 395, 418, 421, 431, 482, 500, 575], "namibia": 489, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 102, 122, 124, 133, 169, 187, 188, 189, 190, 192, 198, 201, 202, 210, 212, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 374, 397, 402, 444, 445, 448, 449, 450, 451, 453, 454, 456, 457, 462, 464, 465, 467, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 495, 496, 497, 547, 556], "nan_to_num": [100, 102, 105, 109, 110, 147, 148, 154, 159, 162, 190, 198, 202, 268], "nanograv": 511, "nansum": [189, 190, 192, 201, 202], "nasa": [58, 60, 61, 62, 64, 65, 146, 194, 394, 550], "nativ": [87, 91, 195, 386, 391, 425, 479], "natur": [87, 91, 374, 380, 397, 400, 482, 545], "nauroi": [298, 570], "naurois2012": 570, "navarro": 499, "navi": 444, "navig": [433, 435], "naxi": 479, "naxis1": 479, "naxis2": 479, "naxis3": 479, "naxis4": 479, "nbin": [16, 111, 115, 126, 149, 151, 157, 159, 191, 194, 199, 202, 333, 334, 390, 443, 448, 449, 450, 453, 454, 456, 457, 458, 460, 461, 462, 465, 466, 468, 470, 474, 477, 478, 479, 482, 487, 488, 489, 495, 515, 518, 520, 521, 524], "nbin_per_decad": 194, "nbstripout": 382, "nchunk": 283, "ncol": [143, 144, 189, 190, 192, 198, 201, 202, 367, 371, 445, 448, 452, 454, 456, 458, 468, 474, 476, 479, 480, 520, 537], "ncp": 471, "nd": [189, 190, 192, 198, 201, 202, 266, 267, 395, 479, 524], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 101, 117, 143, 144, 145, 146, 147, 150, 151, 153, 156, 157, 158, 159, 160, 162, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 206, 210, 211, 212, 213, 220, 244, 245, 271, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 298, 301, 312, 313, 314, 323, 328, 330, 363, 367, 368, 374, 474, 479, 497, 523, 524], "nddata": [416, 419], "nddataarrai": [417, 431, 432], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 276], "ndim": [102, 109, 111, 115, 144, 146, 149, 188, 195, 200, 450, 453, 458, 462, 474, 475, 477, 478, 479, 486, 487, 497, 509, 524], "ndimag": [202, 388], "ndmap": 475, "ndmin": 301, "ne": 386, "nearest": [26, 132, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 189, 190, 192, 194, 198, 201, 202, 313, 427, 434, 436, 479, 509, 511, 523], "nearli": [374, 425, 445], "nebula": [50, 274, 280, 419, 448, 449, 450, 454, 457, 458, 459, 465, 476, 480, 482, 484, 487, 488, 489, 495, 496, 497, 502, 524, 570], "necess": [398, 484], "necessari": [16, 84, 90, 101, 104, 123, 377, 384, 389, 400, 427, 445, 448, 450, 451, 454, 460, 461, 464, 466, 467, 475, 478, 479, 481, 482, 496, 507, 508, 511], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 389, 453], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 101, 102, 104, 105, 109, 110, 121, 123, 124, 147, 148, 159, 161, 162, 197, 273, 274, 301, 373, 374, 375, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 404, 405, 410, 414, 415, 416, 433, 435, 440, 444, 445, 449, 451, 452, 453, 454, 458, 460, 461, 466, 467, 470, 471, 476, 477, 479, 480, 481, 482, 483, 486, 488, 495, 497, 507, 520, 522, 523, 571, 575], "need_upd": 425, "neg": [19, 20, 26, 87, 91, 122, 124, 125, 126, 129, 130, 132, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 270, 271, 282, 284, 375, 422, 440, 484, 509, 573, 574], "neglect": [127, 175, 443, 478, 509, 574], "neighbor": [150, 158, 160, 427, 434], "neighbour": [313, 532], "neither": [96, 175, 391, 399], "neldermead": 207, "nep": [379, 399], "neraest": 190, "nest": [15, 188, 189, 190, 243, 280, 301, 341, 439, 487, 522, 573], "nested_model": 243, "net": [26, 87, 91, 448, 511], "neutrino": [52, 374], "neutron": 36, "never": [371, 373, 374, 377, 380, 384, 388, 396, 488], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 101, 102, 104, 105, 109, 110, 122, 123, 124, 125, 129, 132, 133, 141, 143, 144, 145, 146, 149, 151, 153, 156, 161, 172, 173, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 220, 242, 258, 268, 292, 301, 325, 352, 359, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 426, 429, 456, 470, 471, 473, 474, 479, 481, 482, 508, 509, 511, 556, 570], "new_attribut": 374, "new_axi": 141, "new_dataset_nam": [220, 242], "new_datasets_nam": [19, 20, 26, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272], "new_ev": 511, "new_flux_map": 398, "new_funct": 374, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 556, "new_nam": [87, 91, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202], "new_ob": [88, 511], "new_observ": 92, "newaxi": 523, "newer": [391, 404, 415, 434], "newli": [419, 420, 421], "next": [87, 91, 102, 374, 375, 379, 390, 394, 395, 399, 402, 403, 431, 432, 443, 456, 459, 460, 462, 464, 473, 474, 475, 478, 479, 482, 483, 484, 487], "nfcn": 476, "nfev": [101, 207, 208, 209, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 475, 476, 487, 495, 496], "nfw": [25, 27, 499], "nfwprofil": 472, "ni": 374, "nice": [374, 379, 385, 391, 393, 401, 417, 425, 452, 456, 473, 571], "nicer": [374, 410, 497], "nieto": [422, 425, 427, 428, 436, 438, 439, 440], "nieva": 436, "night": [389, 466], "nightli": [406, 465], "nightwise_lc": 465, "nigro": [422, 425, 427, 433, 434, 436, 439], "niter": [122, 124, 132, 452], "nmcid": 428, "nn": 488, "noah": [402, 440], "node": [19, 20, 26, 159, 162, 191, 194, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 244, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 416, 476, 477, 479, 486, 487, 531, 548], "node_typ": [191, 194, 199, 460, 461, 477, 487], "noeth": [422, 423], "nois": [283, 289, 392, 570], "noisi": 486, "non": [16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 114, 116, 122, 123, 124, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 171, 175, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 268, 301, 364, 365, 367, 369, 380, 385, 388, 392, 394, 395, 401, 415, 419, 420, 421, 425, 433, 436, 437, 439, 440, 445, 470, 487, 491, 507, 511, 522, 523, 547, 570], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 282, 283, 284, 298, 299, 301, 304, 309, 313, 321, 322, 323, 325, 328, 329, 330, 331, 340, 343, 349, 357, 361, 362, 363, 367, 368, 369, 370, 371, 374, 386, 388, 391, 398, 401, 402, 427, 438, 439, 444, 445, 446, 448, 449, 451, 452, 456, 457, 458, 460, 461, 462, 464, 466, 467, 468, 470, 472, 473, 474, 475, 478, 479, 481, 482, 484, 487, 495, 499, 507, 523, 528, 529, 530, 571], "nonetyp": [84, 90, 104, 123], "nonposit": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "nonposx": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 425], "nonstopmod": 375, "nonzero": 39, "nooverlaperror": 438, "noqa": [19, 20, 146, 182, 193, 194, 200, 222, 371], "nor": [96, 175, 384, 395, 399, 403], "norm": [19, 20, 26, 121, 122, 124, 125, 126, 129, 132, 139, 140, 166, 214, 215, 218, 219, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 239, 243, 244, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 367, 385, 396, 398, 402, 419, 420, 422, 425, 440, 442, 448, 452, 453, 454, 456, 457, 459, 460, 461, 462, 464, 466, 467, 468, 472, 473, 474, 475, 476, 487, 495, 496, 497, 499, 509, 518, 525, 530, 536, 537, 544, 556, 557, 565, 573], "norm_0": [531, 548], "norm_1": [531, 548], "norm_2": [531, 548], "norm_3": [531, 548], "norm_4": 548, "norm_5": 548, "norm_err": [121, 122, 124, 126, 132, 139, 398, 452, 462, 474, 475, 509], "norm_errn": [122, 124, 473, 475, 497, 509], "norm_errp": [122, 124, 473, 475, 497, 509], "norm_only_chang": 437, "norm_prior": 402, "norm_scan": [122, 398, 448, 449, 475, 509], "norm_sensit": [122, 124], "norm_ul": [122, 124, 398, 462, 473, 474, 475, 497, 509], "norma": [33, 38], "normal": [42, 101, 102, 105, 109, 110, 125, 126, 127, 129, 137, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 166, 189, 190, 192, 198, 199, 201, 202, 228, 244, 245, 248, 268, 270, 273, 301, 364, 365, 374, 375, 379, 380, 384, 385, 388, 392, 398, 414, 418, 427, 444, 454, 460, 465, 466, 468, 478, 479, 480, 481, 482, 487, 496, 497, 523, 528, 529, 530, 533, 534, 535, 556, 572, 573], "normalis": [67, 80, 121, 122, 124, 129, 143, 144, 145, 146, 149, 151, 153, 156, 157, 161, 166, 186, 189, 190, 192, 198, 201, 202, 244, 245, 258, 372, 449, 452, 453, 454, 467, 475, 480, 481, 482, 487, 495], "normed_templ": 482, "normspectralmodel": [220, 242, 397, 422, 438, 440, 482, 518], "north": [221, 229, 232, 528], "notat": [422, 513, 515, 521, 574], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 101, 102, 103, 104, 105, 108, 109, 110, 117, 121, 123, 124, 129, 132, 146, 151, 159, 161, 171, 182, 200, 204, 207, 210, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 289, 290, 301, 322, 349, 365, 371, 373, 376, 377, 379, 382, 387, 388, 391, 394, 398, 399, 400, 402, 403, 404, 407, 413, 415, 435, 437, 439, 443, 444, 445, 449, 450, 452, 453, 456, 459, 461, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 507, 509, 511, 518, 523, 524, 533, 534, 545, 573, 574, 575], "notebook": [87, 91, 338, 377, 378, 383, 384, 388, 389, 390, 391, 392, 394, 404, 406, 407, 408, 411, 414, 415, 416, 417, 419, 420, 421, 423, 425, 427, 431, 432, 433, 434, 435, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 510, 511, 512, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571], "noth": [325, 391, 484], "notic": [380, 476, 491], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [381, 386, 391, 392, 394, 398, 412, 436], "novemb": [383, 412, 422, 423, 424, 425], "now": [16, 82, 84, 88, 90, 99, 104, 122, 123, 124, 199, 243, 374, 377, 379, 380, 381, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 400, 401, 402, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 474, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 508, 509, 520, 558, 562, 563, 564, 571, 573, 574, 575], "np": [83, 87, 91, 102, 105, 109, 110, 111, 115, 117, 121, 124, 132, 148, 189, 190, 192, 198, 201, 202, 207, 273, 374, 375, 385, 386, 389, 397, 398, 402, 410, 436, 443, 451, 452, 460, 462, 464, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 503, 504, 505, 509, 511, 518, 523, 524, 528, 529, 531, 556, 564, 571], "npanel": 361, "npix": [188, 197, 200, 201, 202, 448, 458, 477, 487, 520, 524, 527, 531], "npix_max": 188, "npoint": [283, 476], "npred": [102, 105, 109, 110, 121, 122, 124, 125, 126, 129, 130, 132, 139, 268, 286, 385, 386, 387, 396, 398, 413, 415, 422, 425, 431, 433, 452, 460, 462, 473, 474, 475, 484, 487, 507, 509, 573], "npred_background": [102, 105, 109, 110, 122, 124, 422, 450, 451, 462, 474, 509, 573], "npred_background_min": 142, "npred_excess": [121, 122, 124, 126, 132, 139, 140, 452, 454, 462, 468, 475, 509], "npred_excess_err": [122, 124], "npred_excess_errn": [122, 124], "npred_excess_errp": [122, 124], "npred_excess_ref": [122, 124], "npred_excess_ul": [122, 124], "npred_min": 142, "npred_off": [105, 110, 573], "npred_sig": [102, 105, 109, 110, 386], "npred_sign": [102, 105, 109, 110, 370, 425, 439, 474, 573], "npred_signal_min": 142, "npred_sourc": 474, "nrow": [445, 448, 476, 537], "nside": [188, 189, 190, 436, 487, 522], "nside2resol": 190, "nside_til": [188, 190], "nsou": 452, "nstep": 389, "nu": [19, 26], "nu_e": [26, 472], "nu_mu": [26, 472], "nu_tau": [26, 472], "nuisanc": [448, 476, 570, 574], "null": [122, 124, 125, 126, 129, 130, 280, 282, 284, 449, 453, 454, 456, 459, 475, 482, 495, 509, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 573], "null_valu": [130, 280, 462], "nullabl": [87, 91], "num": 83, "numba": 391, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 102, 103, 105, 108, 109, 110, 112, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 165, 166, 169, 172, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 272, 276, 280, 282, 283, 284, 297, 301, 319, 321, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 361, 367, 378, 379, 380, 383, 385, 386, 387, 388, 389, 393, 395, 398, 400, 401, 403, 410, 415, 425, 427, 428, 429, 434, 435, 436, 439, 440, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 482, 483, 486, 487, 488, 489, 495, 496, 497, 501, 507, 509, 511, 518, 520, 523, 524, 570, 571, 572, 573, 574], "number_of_column": [87, 91], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 124, 194, 210, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 272, 301, 373, 374, 387, 392, 407, 425, 443, 451, 453, 456, 458, 464, 467, 479, 486], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 101, 111, 115, 117, 124, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 157, 158, 160, 161, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 204, 205, 207, 210, 211, 213, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 269, 270, 282, 284, 301, 325, 330, 368, 373, 374, 375, 377, 381, 385, 387, 391, 392, 393, 400, 402, 410, 411, 418, 419, 422, 430, 431, 432, 434, 436, 437, 438, 440, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496, 497, 503, 504, 505, 509, 511, 523, 524, 528, 529, 531, 556, 564], "numpoint": [207, 476], "numpy121": 377, "nuoey6zk": 470, "nupeak_ob": 497, "nutshel": 575, "n\u00f6the": [425, 427, 428], "o": [67, 82, 87, 91, 101, 196, 374, 383, 388, 391, 395, 398, 405, 406, 408, 417, 425, 428, 431, 432, 433, 439, 443, 445, 448, 452, 458, 465, 466, 467, 470, 471, 479, 483, 484, 486, 511, 570, 571], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 159, 169, 299, 300, 386, 387, 390, 391, 396, 410, 428, 429, 438, 443, 445, 448, 451, 452, 458, 460, 464, 466, 467, 468, 470, 478, 483, 486, 487, 488, 489, 493, 496, 508, 511, 516, 518, 520, 521], "obei": 523, "obj": [16, 84, 90, 104, 123, 450, 470], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 105, 109, 110, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 173, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 282, 284, 301, 305, 309, 310, 313, 321, 323, 325, 331, 334, 348, 349, 350, 351, 356, 361, 367, 369, 370, 371, 380, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 398, 400, 401, 406, 410, 416, 417, 419, 420, 421, 422, 425, 427, 432, 433, 434, 436, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 457, 459, 462, 464, 465, 466, 467, 470, 471, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 489, 495, 496, 497, 501, 506, 507, 508, 509, 517, 520, 522, 523, 524, 556, 568, 570, 571, 575], "obs2": 511, "obs_": 448, "obs_clust": [92, 483], "obs_col": 458, "obs_con": [16, 449, 453, 454, 456, 495], "obs_copi": 88, "obs_fil": [16, 449, 453, 454, 456, 495], "obs_filenam": 488, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 142, 207, 299, 300, 384, 386, 396, 401, 410, 445, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 465, 466, 467, 470, 476, 478, 483, 486, 488, 489, 493, 495, 496, 520], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 104, 401], "obs_list": [433, 435], "obs_list_vela": 468, "obs_mod": 95, "obs_model": 444, "obs_muoneff": 483, "obs_po": [41, 304], "obs_tabl": [82, 91, 96, 299, 300, 427, 458, 460, 466, 470, 478, 483, 486, 488, 489, 493, 496, 520], "obs_table_filenam": 82, "obs_tim": [16, 449, 453, 454, 456, 495], "obs_time_src": 478, "obs_zenith": 483, "obscor": 440, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 108, 109, 110, 112, 159, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 184, 185, 186, 219, 222, 227, 231, 233, 234, 235, 250, 257, 269, 272, 285, 291, 298, 300, 309, 330, 378, 380, 386, 387, 388, 389, 390, 394, 396, 398, 401, 406, 415, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 442, 443, 445, 450, 451, 453, 454, 456, 457, 464, 467, 468, 470, 471, 476, 484, 485, 486, 488, 489, 491, 493, 499, 507, 508, 511, 514, 516, 518, 520, 521, 547, 570, 571, 572, 573], "observation_clust": [442, 483, 485], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 434, "observationcta": 384, "observationeventsampl": 440, "observationfilt": [88, 384, 389, 414, 435], "observationlist": [384, 435], "observationmetadata": 401, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 440, "observationssummari": 419, "observationstat": [414, 419], "observationt": [82, 387, 388, 436, 483, 488, 496], "observationtablecheck": 434, "observationtablesummari": 431, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 387, 401, 403, 406, 426, 486, 488, 489, 506, 511], "observatory_earth_loc": [83, 88], "observatory_loc": [401, 427, 443, 451, 460, 461, 464, 467], "obsinfometadata": [90, 104], "obstim": [85, 94, 182, 575], "obtain": [85, 102, 105, 108, 110, 122, 124, 134, 288, 384, 389, 391, 392, 398, 435, 448, 449, 450, 452, 454, 460, 461, 466, 470, 471, 476, 479, 480, 484, 495, 497, 507, 511, 515, 516, 572, 573], "obviou": [386, 393, 394, 395, 401], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 499], "occur": [189, 190, 192, 201, 202, 331, 374, 394, 395, 399, 487], "occurr": [92, 100, 193, 211, 213, 220, 242], "oct": [382, 384, 385, 389, 391, 394, 400, 411], "octob": 383, "odd": [200, 202], "odd_npix": [200, 202], "odot": [28, 35, 39, 40, 52], "off": [102, 103, 105, 107, 108, 109, 110, 121, 122, 124, 164, 170, 171, 174, 177, 186, 284, 298, 371, 372, 377, 380, 386, 388, 389, 390, 419, 425, 427, 429, 439, 443, 444, 445, 449, 450, 454, 458, 465, 466, 468, 470, 474, 476, 478, 484, 507, 520, 521, 570, 572, 573, 574], "off_2": [105, 110], "off_ev": 468, "off_patch": 468, "off_phas": [170, 468], "off_phase_rang": 468, "offdatabackgroundmak": 430, "offer": [122, 377, 385, 400, 401, 406, 407, 434, 450, 475, 476, 478, 482, 511], "offici": [400, 512, 571], "offlin": [87, 91], "offset": [83, 96, 112, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 165, 169, 175, 176, 181, 184, 189, 190, 192, 194, 198, 201, 202, 374, 380, 388, 410, 419, 429, 431, 433, 438, 439, 440, 443, 450, 451, 453, 456, 457, 458, 464, 468, 477, 478, 483, 486, 489, 496, 508, 516, 518, 521], "offset2": 83, "offset_axi": [149, 151, 156, 161], "offset_band": 83, "offset_from_median": 83, "offset_index": 156, "offset_max": [16, 83, 165, 175, 181, 184, 449, 453, 454, 456, 458, 464, 468, 478, 495, 496, 518, 521], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 134, 274, 364, 365, 374, 379, 388, 389, 390, 392, 432, 443, 445, 449, 453, 454, 457, 458, 464, 470, 474, 476, 478, 480, 495, 496, 507, 570], "ogip": [95, 106, 107, 110, 146, 191, 193, 194, 197, 198, 199, 386, 389, 432, 444, 448, 457, 507, 515, 524], "ogip_column": 198, "ogipdatasetread": 110, "ogipdatasetwrit": [110, 438, 440], "ok": [374, 388, 476], "old": [193, 359, 374, 379, 382, 386, 390, 391, 416, 417, 432, 433, 434, 471], "old_attribut": 374, "older": [381, 391, 407, 432, 473], "oldest": 394, "olga": [430, 431], "olivera": [422, 425, 427, 428, 436, 438, 439, 440], "omega": [19, 20, 23, 257, 273, 486, 528, 564], "omit": [132, 375, 456, 486, 571], "omp": 394, "on_circl": 520, "on_ellipse_annulu": 520, "on_ev": 468, "on_patch": 468, "on_phas": [170, 468], "on_phase_rang": 468, "on_posit": 186, "on_radii": 443, "on_radiu": [458, 468], "on_rectangl": 520, "on_region": [16, 102, 105, 172, 443, 445, 448, 449, 450, 451, 453, 454, 456, 458, 460, 461, 465, 466, 468, 470, 474, 495, 520], "on_region_radiu": [443, 448, 451, 460, 461, 466, 470], "onc": [87, 91, 102, 200, 374, 377, 379, 384, 385, 388, 389, 390, 394, 395, 396, 398, 399, 403, 404, 405, 406, 408, 450, 466, 468, 478, 481, 488, 491, 508, 511, 571], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 104, 105, 108, 109, 110, 112, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 169, 171, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 276, 280, 282, 283, 284, 309, 314, 330, 345, 361, 367, 368, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 404, 405, 406, 433, 436, 437, 439, 443, 445, 448, 449, 450, 453, 456, 460, 465, 467, 468, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 495, 496, 497, 506, 507, 508, 509, 511, 516, 518, 520, 523, 524, 530, 568, 569, 571, 572, 573, 574, 575], "ones": [87, 91, 117, 121, 125, 129, 132, 146, 193, 378, 382, 386, 388, 391, 394, 402, 407, 410, 467, 471, 477, 479, 499, 518, 570, 571], "ones_lik": [468, 518], "ongo": [377, 380, 381, 404], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 121, 123, 124, 125, 129, 132, 133, 140, 147, 148, 152, 154, 159, 162, 165, 171, 176, 187, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 210, 211, 213, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 268, 269, 270, 282, 284, 301, 321, 349, 371, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 407, 415, 417, 421, 425, 427, 428, 433, 437, 439, 440, 445, 446, 448, 449, 450, 453, 454, 456, 457, 459, 460, 461, 462, 465, 466, 467, 468, 470, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 496, 499, 507, 509, 515, 518, 521, 524, 566, 570, 571, 572, 573], "onlin": [87, 91, 375, 379, 382, 394, 410], "onlinelibrari": 140, "onoff": [428, 507], "onserv": 93, "ontim": [182, 384, 460, 474], "onto": [105, 110, 189, 190, 192, 198, 200, 201, 202, 361, 380, 496, 507, 511, 523, 569], "oo": 400, "op": 390, "opac": 222, "open": [66, 87, 91, 374, 375, 377, 379, 385, 388, 391, 393, 394, 398, 399, 400, 403, 405, 406, 408, 410, 411, 432, 449, 457, 479, 486, 488, 489, 495, 506, 570, 571], "openastronomi": 433, "oper": [87, 91, 188, 200, 215, 374, 380, 385, 388, 420, 422, 425, 434, 435, 439, 444, 474, 481, 482, 523, 524, 537, 539, 543, 546, 548, 551, 556], "opinion": [379, 571], "oppos": [471, 547, 571], "opposit": [189, 190], "opt": [89, 473, 537, 547], "opt_method": 476, "optic": [222, 388, 444, 537], "optim": [19, 20, 26, 101, 130, 132, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 367, 373, 374, 383, 386, 387, 396, 398, 445, 446, 448, 449, 450, 451, 452, 456, 457, 458, 468, 470, 471, 475, 476, 484, 487, 495, 496], "optimis": [19, 20, 207, 208, 209, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 388, 390, 392, 434, 509, 568], "optimize_opt": [207, 456, 464, 475, 476, 496], "optimize_result": [207, 208, 439], "optimizeresult": [101, 207, 208, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 475, 476, 487, 495, 496], "optin": 400, "optinon": [109, 110], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 288, 289, 290, 292, 297, 298, 299, 301, 312, 322, 325, 328, 329, 330, 331, 333, 334, 337, 342, 343, 345, 356, 357, 361, 362, 363, 368, 369, 370, 371, 374, 377, 379, 380, 382, 383, 385, 386, 388, 390, 392, 394, 397, 401, 404, 405, 406, 407, 408, 414, 415, 416, 419, 421, 422, 425, 427, 431, 433, 434, 435, 436, 438, 439, 440, 452, 456, 464, 465, 467, 473, 474, 478, 479, 480, 482, 483, 486, 487, 495, 496, 507, 509, 511, 523, 524, 566, 570, 571], "option_context": [87, 91], "optionali": 531, "optout": 400, "optpars": 379, "oral": 400, "orang": [375, 448, 456, 462, 465, 468, 472, 475, 484, 520], "orchestr": [380, 384, 386, 390, 449, 495, 496], "orcid": 400, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 105, 124, 133, 143, 144, 147, 148, 154, 159, 162, 165, 169, 176, 179, 180, 185, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 201, 202, 268, 280, 301, 371, 374, 375, 380, 385, 386, 388, 389, 390, 391, 398, 399, 400, 402, 415, 416, 417, 418, 419, 420, 421, 422, 425, 448, 449, 450, 452, 456, 457, 460, 468, 473, 476, 477, 478, 479, 482, 488, 495, 496, 497, 522, 523, 524, 571, 574], "ordereddict": [380, 391, 418], "ordinari": 497, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 175, 207, 248, 249, 263, 264, 289, 301, 377, 382, 391, 394, 399, 400, 403, 405, 406, 408, 412, 431, 433, 443, 451, 453, 456, 457, 458, 464, 467, 472, 473, 476, 486, 554, 555, 571], "organ": [378, 394, 399, 400, 425, 488, 489, 508, 523], "organis": [381, 390, 393, 400, 433], "orient": [144, 152, 153, 374, 385], "origin": [16, 41, 84, 87, 90, 91, 102, 104, 109, 122, 123, 124, 190, 202, 266, 268, 270, 384, 388, 400, 401, 431, 449, 453, 454, 456, 466, 471, 479, 482, 487, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 574, 575], "orthogon": 334, "oscar": [433, 434], "osx": 421, "ot": 403, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 102, 104, 105, 109, 110, 122, 123, 125, 129, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 171, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 211, 213, 268, 281, 301, 314, 344, 363, 368, 373, 377, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 405, 433, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 507, 508, 509, 511, 516, 518, 520, 524, 539, 568, 569, 571, 575], "other_id": 445, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 157, 196, 200, 202, 204, 210, 211, 212, 213, 220, 242, 301, 367, 387, 397, 400, 481, 482, 487, 538], "oup": [134, 297], "our": [374, 377, 383, 388, 390, 391, 393, 396, 397, 398, 400, 415, 416, 432, 443, 445, 448, 449, 450, 453, 454, 456, 457, 458, 461, 466, 467, 468, 470, 479, 480, 484, 488, 495, 496, 571], "ourself": 497, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 101, 124, 189, 190, 192, 198, 201, 202, 242, 255, 256, 373, 374, 375, 377, 379, 382, 384, 386, 388, 390, 392, 393, 394, 399, 403, 410, 411, 413, 419, 433, 446, 450, 453, 454, 470, 479, 480, 486, 487, 495, 497, 499, 500, 520, 533, 534, 568, 571, 575], "out_fold": 390, "outcom": [379, 388], "outdat": [391, 394], "outdir": [16, 82, 93, 449, 453, 454, 456, 495], "outer": [43, 44, 52, 53, 126, 164, 255, 534], "outer_height": [520, 524], "outer_width": [520, 524], "outfil": 374, "outflow": 199, "outlin": [102, 105, 109, 110, 216, 217, 221, 229, 232, 246, 255, 256, 270, 377, 379, 382, 383, 384, 385, 388, 394, 397], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 104, 123, 138, 139, 146, 151, 189, 190, 192, 198, 201, 202, 208, 220, 234, 242, 283, 330, 375, 382, 384, 387, 390, 391, 395, 398, 401, 414, 429, 435, 438, 439, 456, 460, 461, 464, 467, 475, 478, 479, 495, 496, 509, 511, 571, 572], "output_map": [189, 190, 192, 198, 201, 202], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 102, 105, 109, 110, 114, 116, 146, 166, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 210, 212, 222, 271, 314, 362, 374, 388, 389, 390, 425, 454, 475, 476, 478, 479, 480, 511, 518, 530, 556], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 101, 102, 105, 109, 110, 125, 132, 134, 146, 147, 157, 159, 162, 169, 176, 179, 180, 182, 183, 189, 190, 192, 193, 194, 198, 200, 201, 202, 220, 242, 273, 282, 284, 288, 312, 313, 326, 365, 374, 375, 379, 382, 383, 384, 387, 388, 389, 394, 397, 401, 405, 407, 425, 445, 448, 452, 456, 459, 460, 467, 473, 474, 475, 478, 479, 482, 496, 497, 509, 515, 572, 573], "overal": [382, 388, 448], "overcom": 480, "overestim": [509, 573], "overflow": [199, 450, 467, 470, 559], "overkil": 467, "overlai": [449, 475], "overlaid": [102, 105, 109, 110, 448, 449], "overlap": [86, 91, 114, 116, 129, 177, 194, 199, 371, 389, 448], "overlap_ok": 86, "overlin": [102, 109, 507], "overload": 425, "overplot": [473, 506], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 341, 385, 448, 450, 458, 462], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 197, 371], "oversampl": [103, 108, 157, 159, 162, 169, 176, 182, 188, 189, 190, 192, 197, 198, 201, 202, 217, 221, 229, 232, 233, 234, 244, 255, 256, 258, 260, 266, 270, 272, 276, 416, 478], "oversample_energy_factor": [103, 108, 461], "oversampling_factor": [190, 200, 216, 217, 221, 229, 232, 233, 234, 244, 246, 255, 256, 258, 260, 266, 270, 272], "overview": [6, 377, 404, 419, 420, 422, 425, 442, 468, 475, 479, 482, 491, 497, 498, 511, 512, 525, 572], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 101, 102, 105, 107, 109, 110, 122, 124, 147, 148, 154, 159, 162, 187, 188, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 208, 210, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 266, 267, 268, 269, 270, 321, 343, 398, 434, 436, 448, 449, 456, 457, 460, 461, 462, 477, 479, 480, 481, 482, 486, 487, 493, 495, 496, 507, 524, 535, 571], "overwrite_templ": [208, 220, 242], "overwritten": [159, 162, 313], "owen": [413, 426], "own": [87, 91, 99, 122, 124, 196, 198, 377, 380, 390, 396, 400, 425, 443, 460, 482, 487, 496, 511, 523, 524], "p": [38, 51, 54, 87, 91, 109, 110, 128, 287, 298, 374, 425, 449, 459, 472, 476, 495, 511, 516, 517, 573], "p0_birth": 43, "p90": 48, "p_": [513, 515, 516, 517], "p_0": [51, 189, 192, 198, 201, 202, 503], "p_dot": [51, 54], "p_i": [189, 192, 198, 201, 202], "p_lat": [189, 192, 198, 201, 202], "p_lon": [189, 192, 198, 201, 202], "p_mean": 42, "p_n": [189, 192, 198, 201, 202], "p_stdv": 42, "p_valu": [282, 284, 476, 571, 573], "pace": [382, 383], "packag": [6, 11, 138, 301, 338, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388, 391, 392, 394, 399, 400, 401, 403, 405, 406, 408, 409, 410, 411, 412, 413, 415, 418, 419, 421, 422, 425, 428, 429, 430, 431, 432, 433, 434, 436, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 507, 510, 511, 512, 519, 524, 535, 543, 545, 559, 571, 575], "pacman": 430, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 102, 105, 109, 110, 132, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 169, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 200, 201, 202, 362, 422, 425], "pad_width": [102, 109, 132, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202], "pad_with": [189, 190, 192, 198, 201, 202], "page": [6, 87, 91, 207, 285, 291, 298, 375, 377, 379, 386, 388, 391, 394, 400, 403, 404, 406, 407, 411, 419, 420, 425, 428, 429, 432, 433, 434, 435, 476, 479, 489, 491, 509, 511, 522, 524, 572, 575], "pain": [374, 377, 381], "pair": [16, 84, 90, 102, 104, 105, 109, 110, 122, 123, 124, 134, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 196, 197, 198, 200, 201, 202, 390, 444], "panda": [87, 91, 373, 391, 434, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "panel": [88, 101, 102, 105, 109, 110, 361, 428, 460, 476], "panel_fov": 361, "panni": 425, "papadopoulo": [425, 427], "paper": [57, 59, 63, 72, 74, 125, 175, 394, 400, 434, 466, 471, 473, 478, 488, 499], "papermil": 390, "par": [385, 397, 402, 444, 470, 476, 484, 486], "par_000_amplitud": 476, "par_001_alpha": 476, "par_002_beta": 476, "par_00x_": 385, "par_1": [207, 476], "par_2": [207, 476], "par_alpha": [207, 476], "par_beta": [207, 476], "par_box": 91, "par_nam": [220, 228, 242, 258, 268], "par_to_v": 486, "par_typ": [220, 228, 242, 258, 268], "parabol": [281, 314, 476], "parabola": [236, 237, 442, 457, 476, 525, 557], "paragraph": 379, "parallel": [6, 93, 125, 126, 129, 132, 165, 316, 317, 318, 319, 320, 321, 322, 377, 391, 404, 427, 439, 440, 452, 474], "parallel_backend": [93, 125, 126, 129, 132, 165, 321, 462], "parallelbackendenum": 316, "parallelmixin": [93, 125, 132, 165], "param": [16, 84, 90, 104, 123, 222, 271, 367, 390, 420, 476], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 476, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 305, 307, 308, 310, 312, 313, 314, 315, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 383, 386, 387, 389, 390, 392, 393, 396, 398, 400, 411, 414, 415, 416, 417, 418, 419, 421, 422, 425, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 477, 478, 483, 484, 486, 487, 496, 497, 499, 507, 509, 510, 511, 518, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574], "parameter": 482, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 207, "parameterestim": [118, 421, 440], "parameteris": [513, 515], "parameters_list": [211, 213], "parameters_nam": [220, 242], "parameters_stat_sum": 402, "parameters_unique_nam": [19, 20, 26, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 476], "parametr": [16, 27, 84, 90, 101, 104, 123, 149, 150, 155, 158, 160, 236, 237, 255, 386, 390, 397, 415, 422, 425, 450, 452, 482, 486, 533, 534, 545], "parametricpsf": [150, 158, 425, 427], "parametris": [158, 397, 419, 515, 517, 528, 529, 530, 531, 538, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566], "parent": [16, 84, 90, 104, 117, 121, 123, 125, 129, 132, 200, 374, 384, 401, 466, 475, 509, 547], "parenthes": [385, 391, 437, 439], "parfiv": [391, 418], "parnam": 484, "pars": [16, 84, 85, 90, 104, 123, 188, 197, 375, 388, 443, 451, 453, 456, 458, 464, 467, 480, 486, 571], "parse_arg": 571, "parse_fil": [16, 84, 90, 104, 123], "parse_obj": [16, 84, 90, 104, 123], "parse_raw": [16, 84, 90, 104, 123], "parseabl": 301, "parser": 571, "part": [101, 374, 377, 380, 383, 385, 387, 388, 389, 390, 392, 393, 394, 399, 400, 415, 419, 420, 421, 429, 434, 439, 440, 443, 445, 448, 456, 464, 473, 474, 479, 480, 496, 497, 511, 516, 520], "parti": 379, "partial": [91, 102, 105, 147, 148, 154, 159, 162, 165, 188, 200, 202, 268, 388, 392, 420, 434, 522], "partial_overlap": 91, "particip": [379, 383, 394], "particl": [19, 26, 243, 273, 421, 499, 547], "particle_distribut": [243, 547], "particular": [87, 91, 374, 380, 387, 389, 396, 398, 399, 401, 422, 425, 436, 437, 445, 448, 449, 450, 451, 453, 457, 460, 466, 467, 471, 476, 478, 481, 486, 488, 489, 495, 496, 508, 511, 518, 520, 524, 573], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [377, 383, 384, 388, 394, 395], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 105, 108, 109, 110, 123, 124, 127, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 174, 182, 187, 188, 189, 190, 192, 194, 196, 197, 198, 200, 201, 202, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 281, 283, 301, 313, 321, 322, 323, 328, 329, 330, 331, 361, 362, 367, 369, 370, 374, 377, 384, 386, 387, 388, 389, 401, 421, 425, 427, 439, 440, 445, 446, 448, 449, 456, 457, 461, 465, 466, 471, 473, 474, 476, 477, 478, 479, 480, 482, 483, 486, 495, 496, 497, 511, 522, 523, 524, 528, 529, 571, 575], "pass4": 488, "passkwarg": [450, 470], "past": [374, 379, 382, 390, 391, 394, 395, 397, 400, 402, 410, 431, 433, 434, 479, 571], "patch": [371, 374, 381, 400, 428, 437, 448, 450, 458, 462, 468], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 104, 106, 107, 110, 123, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 189, 190, 192, 197, 198, 201, 202, 208, 220, 234, 242, 269, 309, 338, 339, 340, 343, 374, 377, 409, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 509, 565, 566, 571], "path_effect": [197, 220, 242], "path_to_notebook": 374, "path_to_script": 374, "patheffect": [197, 220, 242], "pathlib": [16, 82, 83, 86, 87, 91, 146, 198, 208, 220, 242, 339, 448, 449, 456, 457, 460, 461, 486, 495, 496], "pathpatch": 462, "pattern": [374, 380, 388], "paula": 440, "paulakx": 440, "paz": [426, 429, 430], "pbar": 511, "pc": [46, 47, 50, 52, 504, 505], "pcolormesh": [83, 124, 143, 144, 146, 149, 150, 151, 156, 158, 160, 161, 432, 438, 476, 477], "pd": [87, 91], "pdf": [146, 150, 175, 248, 249, 263, 264, 323, 367, 375, 457, 460, 472, 501, 503, 504, 505, 507, 508, 513, 514, 515, 517, 520, 524, 554, 555, 573, 576], "pdf_in_safe_rang": 146, "pdf_matrix": 146, "pdf_threshold": [146, 147, 151], "pdflatex": 375, "peak": [68, 127, 138, 139, 146, 175, 226, 231, 233, 237, 427, 433, 440, 452, 471, 473, 478, 534], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 374, "peek": [83, 88, 102, 105, 109, 110, 127, 128, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 374, 386, 410, 422, 428, 432, 436, 445, 450, 456, 460, 461, 468, 474, 477, 486, 488, 489, 508, 511, 513, 514, 515, 517], "penalti": 484, "pend": 301, "peopl": [379, 381, 394, 400, 403, 404, 472, 499, 511, 571], "pep": 379, "pep8": 377, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 105, 109, 110, 112, 121, 122, 124, 125, 126, 129, 130, 138, 140, 141, 142, 159, 162, 194, 227, 234, 235, 276, 285, 291, 298, 374, 380, 386, 387, 390, 398, 400, 401, 413, 421, 425, 427, 440, 443, 451, 460, 464, 465, 467, 472, 478, 479, 483, 484, 488, 489, 507, 511, 514, 518, 570, 572], "per_decad": [194, 448, 450, 460, 461, 468, 474, 487, 515, 521], "percent": 131, "percentag": [146, 175, 478], "percentil": 83, "perfect": 146, "perfectli": [529, 571], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 104, 108, 123, 166, 174, 188, 200, 202, 217, 220, 221, 229, 232, 242, 244, 255, 256, 260, 266, 270, 282, 284, 337, 340, 367, 374, 375, 380, 383, 384, 385, 389, 390, 398, 401, 404, 406, 415, 422, 425, 427, 430, 434, 437, 439, 440, 443, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 461, 464, 465, 466, 467, 470, 474, 476, 478, 479, 480, 481, 483, 488, 491, 495, 507, 511, 519, 520, 523, 529, 547, 569, 570, 571, 572], "perhap": 524, "period": [42, 51, 54, 194, 269, 381, 400, 433, 483, 503], "period_dot": 51, "periodogram": [283, 389, 434], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400], "perseu": [33, 38], "person": [374, 377, 379, 381, 382, 383, 387, 392, 395], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 433, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 497, "ph": 359, "pha": [106, 107, 110, 198, 386, 431, 434, 448, 457], "pha_": 474, "pha_meta": 106, "pha_ob": [106, 142, 207, 457, 475, 476], "pha_obs23523": [109, 110, 130, 280, 484, 509], "pha_obs23592": 509, "phacountsspectrum": 417, "phacountsspectrumlist": 416, "phase": [50, 52, 53, 89, 167, 170, 269, 379, 384, 385, 388, 389, 391, 393, 398, 410, 415, 434, 436, 439, 442, 482, 500, 511, 525, 567], "phase_axi": 398, "phase_bkg_mak": 468, "phase_column_nam": [170, 468], "phase_curve_model": 565, "phase_filt": 89, "phase_max": 468, "phase_min": 468, "phase_model": 565, "phasebackgroundestim": 419, "phasebackgroundmak": [167, 419, 439, 468], "phasecurv": [269, 433, 565], "phasecurve_lsi_dc": 565, "phasecurvemodel": 397, "phasecurvetablemodel": [385, 387], "phasecurvetempl": 385, "phasogram": [269, 565], "phi": [19, 20, 26, 195, 214, 215, 218, 221, 222, 224, 225, 226, 229, 232, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 305, 397, 464, 481, 482, 487, 497, 516, 528, 529, 530, 532, 533, 534, 538, 540, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555], "phi_0": [214, 216, 217, 221, 224, 225, 226, 229, 232, 236, 237, 244, 246, 248, 249, 255, 256, 259, 260, 262, 263, 264, 266, 270, 397, 476, 538, 541, 542, 545, 549, 552, 553, 554, 555], "phi_ref": [269, 565], "philipp": [433, 434], "phone": 394, "photon": [44, 222, 243, 359, 389, 444, 451, 460, 464, 480, 482, 497, 516, 547, 570], "photutil": [138, 374, 388, 434], "php": 63, "physic": [125, 126, 129, 132, 321, 322, 373, 398, 402, 416, 449, 457, 479, 482, 484, 486, 495, 509, 511, 547, 570, 573, 574], "pi": [19, 20, 30, 31, 32, 37, 54, 230, 273, 397, 482, 505, 528, 529, 530, 533, 534, 544, 564], "pick": [374, 381, 388, 399, 415, 497], "pictur": 375, "pie": 511, "piec": [374, 380, 388, 393, 402], "piecewis": [244, 245, 442, 482, 525, 536, 557], "piecewisebrokenpowerlawnormspectralmodel": 397, "piecewisebrokenpowerlawnormspectramodel": 397, "piecewisenormsectralmodel": 422, "piecewisenormspatialmodel": [252, 439, 482, 531], "piecewisenormspectralmodel": [253, 402, 422, 425, 438, 440, 482, 518, 548], "pig": [13, 374, 376, 377, 414, 415, 417, 418, 419, 421, 422, 433, 435, 436, 440], "pii": 140, "pillar": 390, "pin": 434, "pink": [109, 110], "pint": [468, 511], "pintor": [387, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 436, 438, 439, 440], "pip": [373, 377, 381, 391, 405, 406, 408, 415, 434, 486, 571], "pipe": [430, 431, 432], "pipelin": [387, 389, 421], "piron": 570, "piron2001": 570, "pivot": [19, 20, 26, 67, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 440, 473], "pivot_energi": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "pix": [187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 523], "pix_reg": 472, "pix_reg_rec": 472, "pix_to_coord": [187, 188, 191, 193, 194, 197, 199, 200, 440], "pix_to_idx": [187, 188, 191, 193, 194, 197, 199, 200], "pixcoord": 388, "pixel": [13, 83, 102, 105, 109, 110, 112, 113, 117, 127, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 172, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 217, 220, 221, 229, 232, 242, 244, 255, 256, 260, 266, 270, 385, 413, 417, 431, 434, 452, 454, 460, 462, 474, 478, 479, 487, 497, 507, 509, 521, 522, 523, 532], "pixel_area": 200, "pixel_scal": [117, 188, 200], "pixelis": 523, "pixelregion": [388, 520], "pixilis": 479, "pixreg": 530, "pixregion": 202, "pk": [134, 420, 444, 466, 467, 470, 471, 473, 483, 497, 537], "pks2155": [444, 466, 470], "pks2155_hess_lc": [122, 124, 141, 471, 475], "pl": [67, 80, 121, 126, 132, 166, 240, 247, 248, 249, 397, 446, 452, 462, 473, 474, 475, 482, 497], "pl_model": 563, "pl_spectrum": 484, "place": [83, 86, 87, 91, 92, 100, 102, 105, 109, 110, 138, 143, 144, 145, 146, 147, 148, 149, 153, 154, 159, 161, 162, 172, 177, 189, 190, 192, 198, 201, 202, 242, 268, 297, 347, 374, 375, 381, 382, 385, 386, 387, 388, 390, 393, 394, 395, 396, 399, 404, 418, 420, 448, 465, 479, 480, 482, 497, 507, 508, 569, 575], "placehold": 379, "plai": [394, 458], "plain": [391, 479], "plainseri": 90, "plan": [378, 379, 383, 384, 388, 390, 391, 394, 399, 403, 414, 431, 433, 434, 435, 568], "planar": [270, 385], "plane": [29, 67, 68, 125, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 394, 472, 473, 479, 486, 506, 521, 524, 529, 570, 576], "plate": [200, 479], "platform": [391, 400, 425], "plausibl": [401, 459], "pleas": [103, 108, 375, 377, 379, 381, 383, 409, 414, 415, 416, 425, 433, 435, 446, 448, 449, 450, 451, 453, 456, 460, 461, 466, 467, 471, 474, 475, 495, 500, 511], "pleasant": 377, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 101, 102, 105, 109, 110, 124, 127, 128, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 189, 190, 191, 192, 194, 197, 198, 199, 201, 202, 205, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 274, 278, 352, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 375, 388, 389, 390, 392, 393, 395, 398, 410, 413, 416, 419, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 443, 445, 446, 450, 452, 453, 454, 456, 457, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 480, 482, 483, 484, 486, 487, 488, 489, 495, 497, 501, 503, 504, 505, 507, 511, 513, 514, 515, 517, 520, 565, 566, 570, 573, 575], "plot_absorb": [442, 537, 557], "plot_at_energi": [143, 144, 486], "plot_bia": [146, 151], "plot_broken_powerlaw": [442, 538, 557], "plot_compound": [442, 539, 557], "plot_const": [442, 527, 536], "plot_constant_spectr": [442, 540, 557], "plot_constant_tempor": [442, 558, 567], "plot_containment_radiu": [150, 156, 158, 160], "plot_containment_radius_vs_energi": [150, 156, 158, 159, 160, 162, 486, 487], "plot_contour_lin": 476, "plot_correl": [205, 476], "plot_count": [109, 110], "plot_dat": 575, "plot_disk": [442, 528, 536], "plot_distribut": [454, 456], "plot_energi": [83, 461], "plot_energy_depend": [143, 149, 486, 513], "plot_energy_offset": 83, "plot_err": 127, "plot_error": [19, 20, 26, 66, 67, 101, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 392, 444, 446, 448, 450, 456, 457, 459, 473, 476, 496], "plot_excess": [109, 110, 428], "plot_exp_cutoff_powerlaw": [442, 541, 557], "plot_exp_cutoff_powerlaw_3fgl": [442, 542, 557], "plot_exp_cutoff_powerlaw_norm_spectr": [442, 543, 557], "plot_expdecay_tempor": [442, 559, 567], "plot_extension_error": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270], "plot_fit": [101, 109, 110, 445, 448, 449, 450, 458, 468, 495], "plot_gauss": [442, 529, 536], "plot_gauss_spectr": [442, 544, 557], "plot_gaussian_tempor": [442, 560, 567], "plot_gen_gauss": [442, 530, 536], "plot_generalized_gaussian_tempor": [442, 561, 567], "plot_grid": [157, 189, 190, 192, 198, 201, 202, 216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 398, 427, 438, 456, 474, 477, 478, 479, 480, 482, 488], "plot_heatmap": 205, "plot_hist": [198, 524], "plot_imag": 83, "plot_interact": [189, 190, 192, 198, 201, 202, 216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 427, 434, 456, 464, 479, 495, 496], "plot_kernel": 157, "plot_kwarg": [448, 450, 458], "plot_linear_tempor": [442, 562, 567], "plot_logparabola": [442, 545, 557], "plot_logparabola_norm_spectr": [442, 546, 557], "plot_map_rgb": 439, "plot_mask": [109, 110, 190, 198, 202, 449, 520], "plot_matrix": [146, 474, 487], "plot_migr": 151, "plot_naima": [442, 547, 557], "plot_npred_sign": [439, 456, 458, 496], "plot_offset2_distribut": 83, "plot_offset_depend": [143, 149], "plot_panel": 361, "plot_phasogram": 269, "plot_piecewise_norm_spati": [442, 531, 536], "plot_piecewise_norm_spectr": [442, 548, 557], "plot_point": [442, 532, 536], "plot_posit": [220, 242, 481], "plot_position_error": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270], "plot_powerlaw": [442, 549, 557], "plot_powerlaw2": [442, 550, 557], "plot_powerlaw_norm_spectr": [442, 551, 557], "plot_powerlaw_tempor": [442, 563, 567], "plot_profil": 127, "plot_psf_vs_rad": [150, 156, 158, 159, 160, 162, 487], "plot_rad_max_vs_energi": [161, 450], "plot_region": [197, 198, 220, 242, 371, 450, 462, 481, 520, 524], "plot_residu": [101, 102, 105, 109, 110, 423, 425, 456, 496], "plot_residuals_spati": [102, 105, 109, 110, 456, 464, 496], "plot_residuals_spectr": [102, 105, 109, 110], "plot_rgb": 439, "plot_shel": [442, 533, 536], "plot_shell2": [442, 534, 536], "plot_sine_tempor": [442, 564, 567], "plot_smooth_broken_powerlaw": [442, 552, 557], "plot_spati": 425, "plot_spectrum": [101, 143, 456, 467, 474], "plot_spectrum_datasets_off_region": [422, 438, 439, 448, 450, 458, 520], "plot_stat": 448, "plot_super_exp_cutoff_powerlaw_3fgl": [442, 553, 557], "plot_super_exp_cutoff_powerlaw_4fgl": [442, 554, 557], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [442, 555, 557], "plot_templ": [442, 535, 536], "plot_template_phase_tempor": [442, 565, 567], "plot_template_spectr": [442, 556, 557], "plot_template_tempor": [442, 566, 567], "plot_theta_squared_t": 489, "plot_tim": 83, "plot_ts_profil": [124, 448, 449, 462, 465, 475], "plotmixin": [109, 110], "plotter": 361, "plsuperexpcutoff3fgl": 432, "plsuperexpcutoff4fgl": 417, "plt": [19, 20, 26, 66, 67, 128, 143, 149, 150, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 362, 371, 374, 375, 410, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 503, 504, 505, 511, 513, 514, 515, 517, 520, 528, 530, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 221, 394, 400, 482], "pmf": 387, "png": [150, 382, 410, 501, 503, 504, 505, 507, 508, 513, 514, 515, 517, 520, 524, 573, 576], "po": [148, 200, 520], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 104, 105, 109, 110, 118, 122, 124, 125, 126, 129, 130, 131, 132, 135, 141, 148, 150, 153, 159, 161, 162, 172, 173, 175, 176, 177, 179, 180, 182, 183, 185, 186, 189, 190, 192, 197, 198, 201, 202, 207, 220, 242, 246, 258, 276, 280, 283, 289, 303, 307, 313, 319, 329, 366, 374, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 413, 416, 418, 419, 425, 427, 428, 430, 431, 432, 433, 435, 438, 439, 440, 442, 445, 447, 450, 451, 452, 456, 461, 462, 464, 465, 467, 468, 470, 474, 476, 477, 478, 479, 482, 483, 487, 489, 491, 499, 500, 506, 507, 508, 511, 516, 520, 523, 525, 529, 530, 536, 547, 568, 569, 570], "point_sourc": 385, "pointer": 382, "pointing_altaz": [401, 439], "pointing_galact": 91, "pointing_info": [85, 94, 443], "pointing_posit": [159, 451, 461, 464], "pointing_radec": [83, 91, 439, 486], "pointing_t": 94, "pointing_zen": 439, "pointinginfo": [85, 431], "pointinginfometadata": [90, 104], "pointingmetadata": 401, "pointingmod": 85, "pointlik": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 433, 520], "points_scal": 313, "pointskyregion": [171, 176, 197, 246, 428, 450, 461], "pointsourc": [385, 499], "pointspatialmodel": [19, 20, 72, 80, 132, 252, 397, 398, 418, 438, 452, 453, 456, 457, 460, 461, 465, 473, 474, 481, 482, 487, 495, 496, 532], "pointspreadfunct": 477, "poisson": [105, 110, 282, 283, 284, 285, 291, 294, 295, 298, 331, 386, 387, 416, 421, 446, 451, 454, 464, 570, 571, 573], "poissonian": [283, 468, 471, 570], "poissonlikelihoodfitt": 430, "polar": [51, 54, 302, 374], "pole": [51, 388, 479], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 190], "polici": 378, "pollut": 389, "polygon": [190, 204, 388], "polygonis": 388, "polygonpixelregion": 388, "polygonskyregion": [204, 388], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 239, 479], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [317, 321, 322], "pool_kwarg": [321, 322], "poolmethodenum": 317, "poon": 431, "poorli": [478, 518], "pop": [92, 100, 196, 242], "popitem": 196, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 375, 394, 432, 500, 502, 547, 569], "popular": 571, "port": 432, "pos_ob": 458, "pos_on": 186, "pos_target": [458, 468], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 102, 103, 104, 105, 108, 122, 123, 124, 125, 126, 129, 130, 132, 147, 148, 154, 157, 159, 162, 172, 175, 177, 186, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 216, 217, 220, 221, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 268, 270, 280, 282, 284, 299, 300, 303, 304, 307, 308, 362, 374, 381, 385, 387, 388, 397, 398, 399, 400, 415, 417, 422, 425, 427, 440, 443, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 467, 468, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 486, 487, 489, 497, 507, 508, 509, 511, 516, 517, 520, 521, 522, 524, 528, 529, 530, 532, 547, 573], "position_angl": 451, "position_error": [216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 419], "position_lonlat": [216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270], "position_off": 186, "positv": 436, "posixpath": [16, 338], "possibl": [33, 82, 87, 91, 133, 152, 374, 375, 377, 381, 382, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 401, 404, 406, 416, 417, 425, 432, 434, 439, 444, 448, 452, 453, 454, 459, 462, 474, 476, 477, 478, 479, 487, 496, 497, 509, 511, 518, 523, 524, 547, 571, 572], "possibli": [87, 91, 122, 380, 384, 385, 387, 388, 392, 393, 394, 395, 401, 403, 425, 518], "post": [52, 383, 401], "poster": [377, 400, 404, 429], "posterior": [392, 484], "posteriori": 484, "postfix": 374, "potenti": [119, 382, 390, 459, 511], "potentiel": 400, "power": [19, 20, 26, 27, 101, 117, 122, 124, 126, 131, 137, 157, 159, 162, 188, 210, 212, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 259, 261, 262, 263, 264, 267, 271, 273, 278, 283, 328, 385, 387, 413, 419, 431, 433, 442, 444, 451, 453, 456, 460, 462, 464, 466, 467, 468, 470, 481, 482, 484, 511, 525, 537, 557, 563], "power_spectrum": 283, "power_spectrum_param": 283, "powerlaw": [175, 248, 250, 283, 385, 386, 390, 431, 433, 442, 445, 453, 461, 462, 473, 482, 484, 496, 525, 551, 567], "powerlaw2spectralmodel": [240, 248, 249, 253, 397, 446, 453, 482, 497, 550], "powerlaw_with_paramet": 283, "powerlawnormspectralmodel": [67, 228, 247, 249, 253, 268, 396, 397, 402, 422, 440, 456, 457, 460, 461, 464, 474, 481, 482, 487, 495, 518, 531, 551, 556], "powerlawspectr": 132, "powerlawspectralmodel": [70, 72, 76, 80, 101, 109, 110, 114, 116, 121, 124, 130, 132, 211, 213, 247, 248, 253, 274, 397, 398, 402, 444, 445, 446, 449, 451, 452, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 481, 482, 484, 486, 487, 495, 496, 497, 509, 527, 528, 529, 530, 532, 533, 534, 535, 537, 539, 548, 549, 558, 559, 560, 561, 562, 563, 564, 565, 566], "powerlawspectramodel": 402, "powerlawtemporalmodel": [265, 482, 563], "pppc4dm": 499, "pppc4dmid": 26, "pprint": [87, 91, 572], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [374, 384, 386, 388, 397, 398, 400, 402, 403, 419, 420], "practic": [387, 391, 395, 398, 399, 400, 401, 448, 474, 480, 482, 496, 507, 511, 520, 570], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 101, 104, 108, 123, 124, 301, 374, 377, 383, 394, 400, 401, 405, 406, 422, 434, 436, 449, 453, 454, 457, 459, 462, 471, 473, 475, 476, 481, 484, 507, 513], "preced": [319, 388, 390, 400, 482], "precis": [132, 150, 156, 158, 160, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 374, 392, 399, 400, 461], "precision_factor": [159, 162, 189, 190, 192, 198, 201, 202], "precomput": [26, 101, 124, 474, 481], "pred": 507, "predefin": [406, 408, 427, 462, 465, 466, 495], "predic": 385, "predict": [101, 102, 105, 108, 109, 110, 121, 122, 124, 125, 126, 129, 130, 137, 166, 169, 175, 182, 246, 258, 286, 323, 370, 380, 385, 386, 387, 422, 439, 440, 444, 449, 451, 453, 454, 456, 458, 460, 462, 464, 474, 475, 478, 484, 495, 496, 509, 511, 515, 518, 537, 570, 573], "prefer": [87, 91, 349, 374, 379, 381, 385, 393, 394, 400, 405, 406, 410, 462, 467, 479, 480, 484, 491, 571, 573], "prefix": [194, 385], "preliminari": [383, 394, 402, 430, 432, 440, 452, 477, 487], "prepar": [82, 169, 384, 385, 403, 449, 457, 475, 478, 482, 487, 495, 519, 568], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 452, 471, 479, 547, 570], "present": [15, 70, 82, 83, 85, 91, 92, 100, 106, 110, 122, 124, 163, 191, 196, 220, 228, 242, 301, 374, 375, 377, 387, 390, 394, 398, 401, 404, 425, 445, 450, 453, 454, 465, 466, 470, 471, 472, 477, 478, 479, 481, 507, 509, 512, 524, 571, 573], "preserv": [87, 91, 105, 189, 190, 192, 194, 198, 201, 202, 391, 474, 480], "preserve_count": [189, 190, 192, 198, 201, 202, 479], "press": 486, "pretti": [388, 394, 404, 410], "prevent": [190, 222, 301, 425, 456, 518], "preview": [377, 489], "previou": [74, 87, 91, 374, 377, 388, 394, 395, 399, 403, 416, 422, 440, 450, 459, 460, 479, 482, 483, 484, 497, 506], "previous": [280, 391, 421, 433, 434, 443, 448, 456, 457, 473, 478, 480], "primari": [26, 87, 91, 189, 190, 192, 193, 201, 202, 379, 400, 421, 436, 475, 479], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 193, "primary_band": 479, "primary_hdu": 460, "primaryflux": [19, 20, 472, 499], "primaryhdu": [460, 479], "prime": 23, "primer": 392, "princip": 459, "principl": [374, 400, 402, 448, 521], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 101, 102, 109, 111, 115, 121, 124, 126, 132, 138, 139, 144, 146, 149, 150, 156, 158, 160, 169, 172, 211, 213, 220, 234, 242, 274, 299, 300, 309, 341, 374, 375, 385, 386, 389, 398, 401, 409, 410, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 495, 496, 497, 509, 511, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 572, 573, 575], "print0": 374, "print_level": [456, 464, 476, 496], "print_stack": 374, "printout": [374, 432, 433, 474], "prior": [19, 20, 99, 101, 102, 109, 210, 211, 212, 213, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 378, 383, 406, 408, 440, 442, 444, 445, 448, 449, 450, 451, 453, 456, 457, 462, 464, 467, 473, 476, 482, 485, 491, 496, 497, 556, 568], "prior_registri": 484, "prior_stat_sum": [210, 211, 212, 213, 402, 484], "priorfitstatist": 402, "priori": [398, 454, 480], "prioriti": [371, 383, 385, 386, 388, 400, 403], "priormodel": 402, "priorparamet": [251, 402, 484], "privat": [374, 377, 383, 397, 433, 488, 489], "pro": [374, 390], "probabl": [13, 101, 151, 377, 380, 381, 382, 384, 387, 388, 392, 394, 396, 402, 404, 448, 451, 464, 476, 479, 482, 484, 487, 515, 516, 517, 570, 571, 573, 574], "probe": [132, 289, 482], "problem": [19, 20, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 297, 352, 382, 384, 388, 395, 402, 409, 437, 476], "problemat": [393, 398, 401, 466, 511], "proce": [377, 404, 406, 408, 436, 444, 445, 448, 449, 460, 464, 466, 480, 481, 486, 487, 495, 496], "procedur": [387, 399, 404, 444, 452, 456], "proceed": [394, 400, 488], "process": [11, 83, 93, 125, 126, 129, 132, 165, 190, 202, 320, 321, 322, 331, 374, 375, 377, 379, 380, 382, 383, 384, 386, 387, 389, 390, 396, 399, 400, 401, 407, 411, 417, 422, 425, 427, 433, 440, 445, 448, 452, 458, 460, 461, 473, 474, 478, 488, 493, 496, 501, 508, 510, 511, 569, 570, 571], "process_lots_of_data": 374, "processor": 394, "prod": 414, "prod3": 394, "prod3b": 486, "prod5": [460, 461, 486], "produc": [15, 102, 105, 109, 110, 113, 122, 277, 279, 374, 375, 380, 389, 390, 398, 399, 401, 404, 419, 444, 445, 448, 450, 452, 457, 458, 459, 460, 464, 466, 468, 472, 476, 478, 484, 486, 496, 511, 514, 516, 571], "product": [108, 189, 190, 192, 195, 198, 201, 202, 269, 380, 389, 390, 400, 401, 410, 425, 439, 440, 444, 446, 452, 461, 468, 474, 476, 478, 487, 489, 509, 516, 570], "prof_mak": 126, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 101, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 150, 156, 158, 159, 160, 162, 186, 190, 198, 207, 231, 233, 281, 298, 314, 333, 334, 386, 388, 392, 393, 400, 406, 408, 413, 415, 422, 425, 430, 432, 434, 435, 440, 442, 448, 449, 458, 463, 465, 467, 475, 476, 484, 491, 499, 509, 511, 528, 573], "profile_err": 127, "profile_high": 462, "profile_new": 462, "profuma": 499, "program": [374, 390], "programmat": 456, "progress": [15, 82, 117, 129, 132, 207, 322, 380, 383, 390, 391, 404, 425, 432, 433, 434, 440, 511], "progress_download": 511, "proj": [102, 105, 109, 110, 169, 188, 189, 190, 200, 201, 202, 448, 478, 479, 487, 496, 520], "project": [102, 109, 126, 166, 172, 188, 189, 190, 192, 197, 198, 200, 201, 202, 217, 220, 221, 229, 232, 242, 244, 255, 256, 260, 266, 270, 308, 334, 374, 375, 376, 377, 379, 381, 388, 390, 391, 394, 400, 417, 425, 433, 439, 449, 452, 454, 458, 462, 468, 477, 479, 480, 481, 486, 487, 493, 495, 496, 497, 499, 520, 523, 524, 533, 534, 569, 571], "projected_distance_axi": 126, "prompt": 571, "pronounc": 511, "pronunci": 511, "prop_cycl": 371, "propag": [19, 20, 26, 53, 127, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 288, 385, 392, 419, 439, 476], "proper": [45, 100, 389, 400, 438, 439, 450, 456, 511], "properli": [132, 182, 379, 389, 400, 437, 438, 448, 449, 475, 476, 495, 507, 572], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 96, 122, 166, 200, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 290, 371, 374, 375, 385, 387, 397, 398, 401, 402, 422, 425, 427, 432, 433, 435, 438, 439, 448, 450, 458, 460, 462, 473, 480, 482, 483, 497, 508, 524, 570], "propos": [374, 376, 378, 379, 380, 381, 383, 391, 399, 400, 402, 415, 418, 419, 421, 422, 433, 439], "proto": [16, 84, 90, 104, 123], "proton": [273, 547], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 379, 385, 387, 390, 391, 392, 394, 430, 432, 433, 440, 500], "proven": 390, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 113, 123, 129, 132, 133, 146, 147, 165, 179, 180, 185, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 270, 283, 298, 301, 367, 374, 375, 384, 385, 387, 389, 390, 391, 394, 395, 398, 400, 401, 402, 403, 404, 405, 409, 411, 415, 418, 419, 420, 422, 425, 427, 436, 439, 443, 448, 450, 451, 452, 461, 464, 471, 473, 474, 475, 476, 478, 479, 480, 482, 483, 487, 488, 489, 491, 496, 497, 499, 501, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 521, 522, 523, 524, 525, 532, 535, 547, 556, 568, 569, 570, 571, 573, 576], "proxi": 384, "prune": 377, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 377, "psf": [16, 82, 87, 88, 96, 102, 103, 105, 108, 109, 110, 112, 113, 148, 150, 155, 156, 157, 158, 159, 160, 162, 169, 176, 185, 200, 220, 242, 258, 299, 300, 374, 380, 384, 385, 386, 387, 390, 413, 415, 419, 420, 421, 422, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 439, 443, 445, 448, 449, 450, 452, 453, 454, 456, 458, 460, 461, 464, 465, 474, 478, 480, 483, 486, 488, 489, 495, 496, 507, 509, 511, 516, 519, 524, 570], "psf3d": [88, 150, 155, 158, 160, 185, 415, 433, 517], "psf68": 443, "psf_": 507, "psf_3gauss": [87, 150, 486, 517], "psf_assym": 477, "psf_kernel": [159, 487], "psf_kernel_map": [157, 487], "psf_king": [87, 158, 517], "psf_map": [103, 108, 159, 162], "psf_map_reco": [162, 488], "psf_mean": 487, "psf_new": 477, "psf_out": [159, 162], "psf_r95": 480, "psf_tabl": [82, 87, 156, 477, 489], "psf_theta": 374, "psf_updat": [103, 108], "psf_valu": [150, 158, 160], "psfkernel": [105, 159, 162, 190, 202, 386, 395, 434, 517], "psfking": [155, 427, 517], "psfmap": [102, 103, 105, 108, 109, 110, 147, 148, 154, 155, 157, 162, 169, 176, 185, 386, 387, 395, 415, 418, 419, 421, 422, 434, 440, 452, 474, 487, 511, 517], "psfnd": 477, "psr": [468, 473, 497], "public": [6, 364, 365, 377, 379, 388, 393, 396, 399, 404, 429, 445, 457, 465, 466, 470, 569, 576], "publicli": [486, 488, 489], "publish": [11, 391, 404, 448, 487], "pull": [375, 378, 379, 382, 383, 384, 385, 386, 387, 388, 394, 399, 400, 404, 412], "puls": 233, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 384, 394, 415, 417, 436, 439, 442, 454, 459, 469, 482, 491, 501, 502, 511], "pulsar_analysi": [394, 442, 468, 469], "pulsar_phas": 511, "pulsar_phase_comput": 511, "pulsarastronomi": 511, "pulsat": 257, "pulse_stat": 468, "punch": [438, 440], "pure": [374, 391, 393, 394, 520], "purpl": 524, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 325, 349, 378, 380, 386, 389, 393, 397, 399, 400, 433, 452, 474, 481, 482, 515], "push": [374, 377, 403, 436], "put": [194, 374, 375, 377, 379, 381, 382, 385, 394, 403, 404, 410, 416, 451, 460, 480, 487, 511, 571], "pvsbdtt": 470, "pwbpl": 397, "pwd": [377, 406, 408], "pwl": [19, 20, 26, 124, 211, 213, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 274, 385, 397, 402, 444, 446, 460, 475, 482, 484, 509, 527, 528, 529, 530, 532, 533, 534, 535, 537, 539], "pwl2": 482, "pwl_decai": 460, "pwl_norm": [397, 482, 551], "pwn": [43, 473, 497, 504], "pwne": 459, "py": [16, 84, 90, 104, 123, 374, 375, 381, 388, 391, 393, 395, 403, 404, 410, 415, 417, 418, 426, 431, 435, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 511, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571], "py310": 377, "py35": 432, "pycharm": 416, "pydant": [16, 84, 90, 104, 123, 373, 419, 438, 440], "pydantic_cor": [16, 84, 90, 104, 123], "pydanticserializationerror": [16, 84, 90, 104, 123], "pydanticundefin": [16, 84, 90, 104, 123], "pydata": 427, "pyfact": [413, 431], "pyflak": 427, "pyirf": 440, "pyjok": 373, "pymc": 392, "pymotw": 571, "pypi": [391, 401, 403, 404, 406, 407], "pyplot": [19, 20, 26, 66, 67, 83, 128, 150, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 362, 367, 410, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 503, 504, 505, 511, 513, 514, 515, 517, 520, 528, 530, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564], "pyproject": 422, "pyregion": 388, "pytest": [374, 375, 377, 404, 433], "python": [11, 16, 84, 90, 104, 123, 138, 301, 342, 373, 377, 378, 379, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 400, 401, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 417, 418, 425, 427, 430, 431, 432, 433, 434, 435, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 499, 510, 511, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571], "python3": [338, 407, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 543, 559], "python_execut": [443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "python_vers": [443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "pytorch": 392, "pyx": [377, 404], "pyyaml": [373, 391, 414, 418], "q": [26, 83, 87, 91, 369, 472], "qtabl": [87, 91, 389, 470], "quadrat": [479, 489, 497, 574], "qualiti": [198, 394, 433, 434, 439, 483, 496, 511, 569, 576], "quantifi": [440, 459, 470, 471, 484], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 173, 174, 175, 177, 181, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 276, 282, 283, 284, 287, 288, 289, 290, 292, 297, 300, 301, 303, 305, 307, 308, 313, 331, 333, 334, 345, 349, 374, 375, 380, 383, 385, 388, 389, 390, 392, 397, 398, 401, 402, 416, 418, 422, 425, 426, 434, 435, 436, 443, 450, 452, 460, 461, 462, 470, 471, 473, 474, 477, 478, 479, 480, 482, 486, 488, 489, 497, 503, 504, 505, 507, 511, 524, 550, 559, 561, 570, 573, 575], "quantity_support": [477, 528], "quasar": 134, "quentin": [392, 396, 397, 417, 418, 419, 420, 421, 422, 425, 427, 428, 436, 437, 438, 439, 440], "queri": [390, 430, 473], "question": [341, 377, 379, 381, 382, 383, 385, 386, 387, 388, 391, 393, 398, 409, 414, 415, 433, 434, 435, 458, 497, 511, 512, 571], "questionnair": [381, 433], "quetin": 419, "quick": [83, 88, 102, 105, 109, 110, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 374, 377, 394, 404, 452, 453, 456, 458, 460, 467, 474, 477, 481, 486, 488, 489, 491, 497, 499, 508], "quickest": 375, "quickli": [374, 375, 377, 379, 390, 391, 394, 400, 404, 406, 432, 448, 456, 471, 488, 515, 571], "quicklook": 83, "quickplot": 190, "quicksort": [87, 91], "quickstart": 411, "quiescent": 537, "quit": [87, 91, 374, 402, 460], "quival": 385, "quot": [74, 274, 374, 375, 472], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 151, 186, 199, 302, 374, 375, 399, 404, 449, 457, 461, 476, 478, 486, 495, 501, 516, 520, 528, 529, 530, 534, 537], "r68": [83, 112, 150, 159, 162], "r70": [67, 473], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 255, 256, 472, 530, 533, 534], "r_0": [30, 33, 38, 48, 221, 232, 255, 481, 528, 530, 534], "r_1": [39, 48], "r_eval": 232, "r_exp": [36, 48], "r_in": [44, 164, 174, 255, 454, 521], "r_m": 530, "r_out": 44, "r_out_max": 164, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 138, 139, 172, 374, 375, 387, 390, 443, 448, 450, 452, 454, 458, 461, 465, 466, 468, 470, 473, 478, 480, 486, 487, 488, 489, 496, 497, 499, 511, 515, 575], "ra_pnt": 489, "ra_tru": [374, 387], "rad": [33, 83, 88, 102, 105, 109, 110, 112, 113, 150, 156, 158, 159, 160, 161, 162, 172, 185, 257, 390, 427, 439, 450, 474, 477, 478, 487, 516, 517, 520, 564], "rad_axi": [102, 105, 109, 110, 113, 156, 159, 162, 474, 477, 478, 511], "rad_di": [45, 501], "rad_index": 156, "rad_max": [82, 83, 87, 88, 155, 161, 178, 427, 436, 438, 439, 450], "rad_max_2d": [87, 161, 171, 176, 178, 450], "radec": [83, 94, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 158, 160, 161, 374, 375, 477, 479, 497], "radecsi": 535, "radesysa": 535, "radi": [243, 547], "radial": [28, 30, 35, 36, 39, 40, 45, 128, 186, 190, 327, 374, 385, 393, 398, 415, 430, 432, 440, 460, 462, 478, 486, 499, 501, 517, 520], "radian": [17, 18, 21, 22, 24, 25, 27, 195, 216, 217, 221, 229, 232, 244, 246, 255, 256, 258, 260, 266, 270], "radiat": [222, 511, 533, 534, 547], "radiative_model": [243, 547], "radii": [27, 472, 487, 529], "radio": [134, 388, 479], "radiobutton": [456, 464, 479, 495, 496], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 102, 105, 109, 110, 121, 126, 127, 150, 156, 158, 159, 160, 162, 164, 172, 174, 190, 200, 202, 203, 220, 221, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 268, 270, 299, 300, 333, 375, 388, 390, 397, 398, 415, 424, 425, 429, 439, 443, 445, 448, 449, 451, 452, 453, 454, 456, 458, 460, 461, 465, 466, 468, 470, 472, 474, 477, 478, 480, 481, 482, 483, 486, 495, 496, 497, 504, 505, 518, 520, 521, 524, 528, 529, 530, 533, 534], "radius_inn": [52, 53], "radius_max": [333, 462], "radius_min": 333, "radius_reverse_shock": [50, 53, 504], "radmax": [427, 428, 439, 440], "radmax2d": [83, 88, 155, 178, 425, 450], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 121, 125, 126, 129, 131, 132, 134, 165, 222, 273, 274, 289, 290, 321, 322, 374, 380, 385, 386, 388, 392, 404, 406, 410, 411, 416, 432, 434, 439, 440, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 499, 501, 502, 506, 507, 508, 511, 514, 516, 518, 520, 521, 537, 568, 569, 570, 571, 572, 573, 576], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 104, 123, 191, 196, 220, 222, 242, 266, 267, 268, 270, 301, 352, 374, 388, 397, 398, 401, 402, 419, 436, 439, 440, 461], "raise_error": [16, 84, 90, 104, 123], "raj2000": [473, 497], "ran": 486, "random": [6, 33, 42, 45, 46, 47, 87, 91, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 324, 325, 326, 327, 328, 329, 330, 331, 377, 386, 387, 390, 417, 429, 433, 460, 482, 511, 572, 573, 575], "random_se": 386, "random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 324, 325, 328, 329, 330, 331, 374, 387, 451, 460, 461], "randomli": [46, 374], "randomnumb": 328, "randomst": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 325, 328, 329, 330, 331, 374], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 105, 109, 110, 125, 132, 146, 159, 161, 162, 175, 187, 188, 191, 193, 194, 197, 198, 200, 210, 212, 214, 215, 218, 219, 221, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 242, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 276, 314, 326, 328, 329, 330, 367, 374, 380, 386, 387, 389, 398, 416, 421, 422, 425, 433, 434, 436, 445, 448, 450, 451, 453, 456, 457, 459, 461, 466, 467, 468, 471, 473, 474, 475, 476, 477, 479, 480, 482, 483, 484, 487, 488, 495, 496, 497, 507, 509, 511, 530, 540, 569, 573], "rangl": 19, "rapid": [134, 289, 380, 383, 398, 399], "rare": [373, 374, 393, 479], "raster": [95, 190], "rate": [44, 45, 83, 88, 143, 144, 175, 182, 283, 331, 387, 410, 434, 448, 450, 468, 478, 486, 487, 489, 501, 514, 570], "rather": [117, 121, 125, 129, 132, 379, 392, 395, 433, 436, 438, 440, 445, 476, 479, 497, 507, 529, 573], "ratio": [105, 110, 164, 188, 189, 190, 284, 298, 398, 443, 468, 486, 521, 570, 572, 573, 574, 576], "ravel": [188, 460], "raw": [122, 175, 497], "rc": [189, 190, 192, 198, 201, 202, 371, 479], "rc1": 403, "rc_context": [189, 190, 192, 198, 201, 202, 479], "rc_param": [189, 190, 192, 198, 201, 202, 479], "rcparam": 371, "rdbu": 495, "rdbu_r": [102, 105, 109, 110], "re": [87, 91, 96, 124, 125, 130, 166, 189, 190, 192, 198, 201, 202, 207, 299, 300, 367, 374, 375, 377, 379, 381, 382, 388, 389, 390, 392, 395, 396, 397, 398, 406, 408, 409, 413, 425, 427, 434, 446, 448, 449, 454, 456, 457, 458, 467, 476, 477, 481, 483, 487, 495, 497, 509, 511, 532, 571], "reach": [53, 131, 203, 379, 384, 387, 482], "reactiv": 436, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 105, 106, 109, 110, 114, 116, 117, 121, 122, 124, 126, 128, 130, 132, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 171, 189, 190, 192, 196, 197, 198, 201, 202, 207, 220, 222, 234, 242, 269, 270, 271, 275, 277, 279, 280, 337, 340, 360, 362, 367, 369, 374, 375, 377, 379, 384, 385, 386, 387, 390, 394, 396, 398, 400, 401, 402, 406, 408, 419, 422, 425, 433, 434, 436, 439, 440, 444, 448, 449, 450, 454, 456, 459, 460, 471, 474, 475, 476, 477, 482, 484, 486, 487, 488, 491, 495, 497, 508, 509, 511, 513, 514, 515, 517, 535, 565, 566, 571, 574], "read_arf": 106, "read_bkg": 106, "read_builtin": [222, 444, 537], "read_covari": [220, 242], "read_dataset": 15, "read_lazi": 427, "read_model": 15, "read_pha": 106, "read_rmf": 106, "read_xspec_model": 271, "readabl": [355, 385, 427, 449, 495], "reader": [401, 443, 451, 453, 456, 458, 461, 464, 467, 486], "readi": [384, 401, 409, 570], "readili": 394, "readm": [377, 400], "readthedoc": [13, 125, 182, 197, 207, 271, 377, 394, 416, 431, 476, 477, 486, 508, 511, 522, 524], "real": [51, 374, 377, 404, 451, 452, 454, 461, 476, 480, 507], "realis": [379, 388, 400], "realist": 402, "realiti": 444, "realiz": [380, 570], "realli": [374, 381, 388, 391, 451, 464, 476], "rearrang": 394, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374, 379, 380, 381, 382, 385, 386, 387, 389, 391, 393, 395, 400, 433, 444, 460, 476, 484, 488, 507, 571], "reassign": [19, 20, 26, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272], "rebas": [374, 388], "rebin": [124, 141, 389, 427, 440, 466, 471, 474], "rebuild": [16, 84, 90, 104, 123, 457], "recarrai": [87, 91, 150, 160], "receiv": [392, 394, 395, 397, 399], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 384, 388, 389, 390, 391, 394, 407, 414, 428, 434, 457, 486, 488], "recip": [376, 390, 411, 425, 468, 511, 512, 570, 573], "reco": [102, 105, 109, 110, 146, 179, 374, 380, 389, 398, 435, 436, 443, 474, 478, 488, 570], "reco_exposur": 121, "reco_psf": [102, 105, 109, 110, 113, 478, 488], "recogn": [443, 451, 453, 456, 458, 460, 464, 467, 486], "recognis": [385, 571], "recognit": 400, "recommend": [92, 100, 101, 176, 220, 242, 281, 313, 314, 373, 374, 375, 377, 381, 383, 391, 400, 404, 405, 407, 410, 417, 434, 448, 449, 450, 459, 474, 476, 478, 482, 487, 495, 511, 518, 523, 524, 571, 572, 575], "recomput": [124, 398], "recompute_ul": 124, "recon_vers": [487, 497], "reconstruct": [83, 102, 103, 105, 108, 109, 110, 112, 113, 121, 131, 132, 137, 146, 147, 148, 151, 161, 162, 175, 182, 374, 380, 385, 387, 422, 437, 443, 445, 448, 451, 453, 454, 456, 460, 464, 467, 474, 478, 480, 484, 488, 507, 509, 515, 516, 517, 524, 570], "recopsfmap": [155, 436, 439], "record": [83, 88, 374, 379, 380, 400, 486], "recov": 390, "rectangl": [217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 334, 388, 462, 520], "rectangleskyregion": [200, 216, 217, 270, 333, 334, 388, 445, 472, 480, 520, 524], "rectangular": [462, 520, 524], "recurr": 389, "recurs": [341, 401], "red": [101, 283, 289, 364, 443, 444, 448, 451, 454, 456, 459, 472, 483, 484, 528, 529], "redesign": 383, "redistribut": 515, "redo": 468, "redshift": [19, 20, 222, 397, 497, 537], "redshift_scan": 444, "reduc": [6, 11, 15, 100, 102, 105, 109, 110, 157, 159, 162, 167, 177, 189, 190, 192, 194, 198, 201, 202, 380, 381, 383, 385, 386, 390, 393, 395, 400, 401, 406, 413, 418, 425, 434, 440, 442, 444, 445, 446, 449, 450, 451, 456, 457, 460, 464, 465, 466, 467, 470, 480, 483, 485, 488, 491, 507, 511, 521, 524, 529, 530, 569, 570, 571], "reduce_data": 390, "reduce_over_ax": [189, 190, 192, 198, 201, 202, 453, 478, 488], "reduct": [6, 11, 165, 380, 386, 387, 390, 394, 395, 396, 401, 406, 419, 421, 439, 442, 454, 458, 459, 462, 468, 474, 477, 480, 481, 483, 485, 491, 508, 511, 518, 520, 521, 569, 570], "ref": [83, 94, 102, 109, 121, 126, 132, 188, 197, 200, 220, 242, 375, 398, 452, 458, 462, 473, 474, 475, 477, 479, 487, 497, 524, 559, 560, 561, 562, 563, 564, 570, 571], "ref_templ": [16, 84, 90, 104, 123], "refactor": [374, 386, 388, 389, 390, 397, 415, 416, 417, 419, 420, 421, 422, 425, 427, 429, 431, 433], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 101, 102, 104, 105, 106, 109, 110, 112, 113, 122, 123, 124, 125, 127, 132, 133, 134, 151, 165, 166, 169, 172, 173, 176, 177, 178, 181, 182, 184, 199, 200, 201, 202, 207, 214, 215, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 274, 283, 285, 289, 290, 291, 292, 297, 298, 328, 329, 355, 356, 357, 358, 374, 375, 380, 382, 385, 386, 388, 390, 392, 397, 398, 399, 400, 401, 404, 411, 425, 432, 433, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 481, 482, 484, 486, 487, 488, 495, 496, 497, 500, 507, 509, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 573, 575], "referenc": [374, 570], "reference_flux": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "reference_map": 479, "reference_model": [122, 124, 443, 444, 452, 457, 475], "reference_model_default": [122, 124], "reference_spectral_model": [122, 124], "reference_tim": [86, 88, 102, 105, 109, 110, 193, 199, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 438, 439, 461, 467, 471, 478, 479, 566], "refit": 475, "reflect": [167, 171, 172, 173, 177, 186, 383, 388, 390, 393, 395, 406, 418, 425, 427, 430, 431, 434, 444, 445, 448, 449, 450, 458, 466, 470, 480, 519, 570], "reflected_bkg_mak": 478, "reflectedbgestim": 390, "reflectedregion": 444, "reflectedregionsbackgroundmak": [167, 172, 419, 445, 448, 450, 458, 466, 470, 478], "reflectedregionsfind": [171, 177, 417, 520], "refpix": [200, 201, 202], "refresh": [87, 91], "refus": 374, "reg": [102, 105, 109, 110, 480, 482], "reg_dataset": 474, "regard": [398, 401, 448], "regardless": [87, 91], "regeard": [437, 438, 439, 440], "regi": [380, 385, 386, 390], "region": [6, 27, 83, 91, 100, 102, 105, 107, 109, 110, 114, 116, 121, 122, 124, 126, 128, 131, 134, 147, 148, 154, 159, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 189, 190, 192, 197, 198, 200, 201, 202, 204, 207, 216, 217, 220, 221, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 268, 270, 271, 273, 284, 298, 332, 333, 334, 335, 336, 370, 371, 373, 375, 378, 380, 381, 389, 390, 391, 393, 396, 398, 406, 417, 418, 419, 421, 425, 427, 428, 430, 431, 433, 434, 436, 438, 439, 444, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 479, 482, 484, 486, 487, 488, 489, 495, 496, 497, 506, 507, 508, 509, 511, 518, 519, 521, 522, 523, 528, 529, 547, 569, 570, 572, 573, 574], "region_coord": 197, "region_ev": 468, "region_find": [171, 450], "region_io": 197, "region_map": [198, 202, 524], "region_map_1": 524, "region_map_2": 524, "region_mask": [83, 188, 200, 388, 448, 454, 458, 474, 478, 480, 496, 518, 520, 521], "region_nd_map": 198, "region_new": 335, "region_pix": 482, "region_weight": 200, "regionfind": [172, 173, 177], "regiongeom": [102, 105, 109, 110, 122, 126, 169, 176, 178, 179, 180, 182, 183, 198, 217, 221, 229, 232, 244, 255, 256, 258, 260, 266, 270, 388, 389, 396, 406, 421, 422, 425, 443, 445, 448, 450, 451, 458, 462, 466, 467, 468, 470, 473, 474, 475, 478, 487, 497, 507, 520, 523], "regionndmap": [26, 106, 109, 110, 131, 170, 171, 176, 178, 189, 190, 192, 197, 201, 202, 217, 221, 229, 232, 234, 244, 255, 256, 260, 266, 267, 270, 371, 388, 406, 421, 422, 425, 428, 436, 439, 461, 475, 487, 507, 523, 566], "regions_ds9": 480, "regionsfind": [171, 172, 177, 427], "regist": 482, "registri": [55, 98, 118, 155, 167, 238, 240, 252, 253, 265, 395, 402, 418, 421, 422, 425, 434, 473, 482], "regress": 377, "regul": 400, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 196, 200, 383, 402, 427, 439, 464, 479, 480, 488], "regulargridinterpol": [313, 374], "regularis": 402, "regularli": [402, 489], "reichardt": 429, "reimplement": 385, "rej_sampl": 387, "reject": [378, 379, 387], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 105, 106, 110, 132, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 199, 200, 201, 202, 255, 274, 288, 331, 389, 400, 425, 467, 471, 488, 534, 573], "rel_reduction_of_f_": 476, "relat": [11, 13, 67, 83, 85, 205, 289, 380, 382, 385, 387, 388, 391, 393, 394, 395, 400, 404, 421, 422, 434, 440, 460, 474, 482, 486, 501, 568, 573], "relative_variability_amplitud": 471, "relative_variability_error": 471, "relative_variability_signific": 471, "relativist": 547, "releas": [11, 51, 65, 95, 376, 378, 379, 381, 382, 388, 391, 392, 401, 405, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 448, 449, 457, 465, 466, 470, 486, 488, 489, 495, 496, 499, 511, 513, 514, 515, 517], "relev": [122, 282, 284, 357, 374, 380, 389, 394, 398, 403, 448, 449, 452, 465, 466, 467, 470, 481, 483, 486, 488, 489, 495, 496, 507, 508, 575], "reli": [122, 374, 379, 380, 384, 385, 389, 393, 398, 399, 417, 422, 425, 436, 446, 456, 480, 499, 573], "reliabl": [377, 407, 454, 476, 480, 572], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 379, 380, 381, 382, 387, 391, 400, 415, 434, 450, 481, 517], "remaind": 488, "remark": 450, "rememb": [374, 388, 476, 491, 571], "remi": [396, 397, 417, 418, 419, 420, 421, 422, 425, 436, 437, 438, 439, 440], "remind": [194, 400, 452, 458, 475], "remnant": [28, 52, 445, 459, 482, 502], "remot": 377, "remov": [13, 87, 91, 92, 96, 100, 159, 162, 174, 187, 188, 193, 196, 197, 200, 202, 242, 300, 377, 381, 382, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 405, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 448, 454, 462, 468, 474, 480, 483, 486, 487, 500, 511, 520], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 377, 384, 385, 393, 394, 397, 413, 416, 418, 419, 420, 421, 425, 435, 436, 439, 571], "rename_ax": [187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 436], "rename_column": [87, 91, 124], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 352, 374, 375, 382, 433], "renorm": [454, 518], "renormalis": 174, "reoptim": [125, 129, 130, 207, 415, 444, 462, 465, 475, 476, 484, 495], "reorder_ax": [189, 190, 192, 198, 201, 202, 439], "reorgan": 425, "reorganis": 394, "repeat": [375, 456, 488], "repl": 374, "replac": [15, 16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 123, 147, 148, 154, 159, 187, 188, 190, 193, 197, 198, 200, 202, 268, 280, 374, 384, 385, 388, 392, 395, 401, 407, 416, 417, 419, 421, 422, 439, 440, 460, 468], "replace_axi": [187, 188, 197, 200], "replace_column": [87, 91], "repo": [375, 382, 403, 404, 413, 426], "report": [87, 377, 390, 403, 404, 413, 427, 428, 433], "repositori": [87, 91, 374, 377, 379, 382, 384, 400, 403, 425, 434, 460, 489], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 188, 190, 192, 194, 195, 197, 199, 258, 301, 309, 319, 374, 385, 386, 387, 388, 392, 395, 396, 397, 398, 415, 439, 444, 461, 462, 473, 475, 476, 478, 479, 480, 482, 487, 497, 506, 507, 509, 513, 514, 515, 517, 523, 568, 569, 570, 575], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 104, 123, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 374, 388, 401, 415, 417, 439, 446, 473, 479, 482, 523], "reprocess": 380, "reproduc": [94, 101, 124, 375, 390, 391, 392, 394, 400, 401, 405, 407, 434, 478], "reproject": [175, 189, 190, 192, 198, 201, 202, 370, 374, 380, 388, 391, 398, 419, 426, 434, 436, 440, 479, 480], "reproject_by_imag": [189, 190, 192, 198, 201, 202, 440], "reproject_to_geom": [189, 190, 192, 198, 201, 202, 436], "request": [85, 122, 124, 375, 378, 379, 381, 382, 383, 384, 385, 386, 388, 394, 398, 399, 400, 402, 404, 412, 460, 475, 480, 509], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 102, 104, 105, 109, 110, 111, 115, 123, 124, 127, 132, 143, 144, 150, 158, 166, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 203, 301, 349, 353, 354, 372, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 396, 397, 398, 399, 400, 402, 403, 405, 407, 413, 418, 419, 420, 421, 426, 427, 429, 430, 431, 432, 435, 436, 437, 444, 445, 450, 454, 457, 466, 467, 468, 470, 471, 474, 477, 479, 480, 482, 486, 496, 509, 511, 524], "require_ev": 82, "required_ax": [143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 477], "required_hdu": 428, "required_irf": [16, 82, 449, 450, 453, 454, 456, 495], "required_nam": [191, 193, 194, 199], "required_paramet": [150, 158, 160], "rerun": [389, 470], "resampl": [102, 105, 109, 110, 124, 141, 142, 147, 187, 188, 189, 190, 191, 192, 193, 197, 198, 200, 201, 202, 369, 425, 427, 471, 511], "resample_axi": [124, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 369, 422, 466, 471], "resample_energy_axi": [102, 105, 109, 110, 147, 422, 427, 474], "resample_energy_edg": [448, 511], "resampled_energy_edg": 142, "resampled_map": [189, 190, 192, 198, 201, 202], "rescal": 478, "research": [390, 400], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 228, 268, 375, 422], "reset_data_cach": [102, 105, 109, 110], "reset_to_default": 228, "reshap": [189, 190, 192, 198, 201, 202, 443, 461, 477, 479], "resid": [396, 482], "residu": [72, 101, 102, 105, 109, 110, 166, 385, 386, 390, 417, 422, 428, 435, 454, 474, 476, 487, 507, 520, 570], "resolut": [52, 146, 147, 151, 188, 200, 383, 385, 387, 388, 433, 439, 473, 487], "resolv": [16, 84, 90, 104, 123, 375, 377, 384, 388, 389, 396, 397, 409, 415, 434, 442, 469, 491, 520], "resort": 453, "resourc": [433, 491], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 104, 106, 123, 124, 134, 188, 190, 200, 202, 281, 374, 384, 389, 400, 402, 422, 452, 454, 467, 475, 479, 480, 488, 509, 524, 574], "respond": 400, "respons": [6, 108, 146, 147, 148, 151, 153, 154, 172, 374, 380, 381, 383, 385, 386, 387, 389, 390, 398, 400, 406, 432, 433, 434, 435, 445, 448, 449, 450, 451, 464, 467, 477, 478, 481, 486, 488, 489, 491, 495, 496, 507, 508, 513, 515, 517, 569, 570], "rest": [26, 377, 391, 393, 473, 506], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 481], "restore_statu": [211, 213, 220, 242, 484], "restore_valu": [211, 213, 220, 242], "restrict": [87, 91, 388, 456, 474, 480], "restructur": [375, 389, 390, 391, 393, 395, 401, 404, 419, 425, 426, 427, 428, 430, 439], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 101, 102, 104, 105, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 138, 140, 151, 157, 159, 162, 175, 179, 180, 185, 187, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 206, 207, 208, 209, 220, 242, 270, 280, 283, 301, 367, 373, 374, 375, 377, 379, 381, 383, 384, 385, 386, 387, 390, 392, 393, 396, 400, 402, 407, 410, 417, 425, 427, 428, 433, 435, 439, 440, 444, 446, 448, 450, 451, 456, 458, 460, 461, 464, 466, 467, 468, 471, 473, 474, 476, 479, 480, 483, 484, 487, 488, 489, 495, 496, 506, 509, 524, 559, 570, 572, 573], "result1": 444, "result2": 481, "result_ecpl": 446, "result_joint": [445, 448, 456], "result_list": 367, "result_log_parabola": 446, "result_minuit": 476, "result_pwl": 446, "result_scipi": 476, "result_stack": 448, "results_joint": 457, "results_prior": 484, "results_simplex": 476, "results_t": 459, "retain": [473, 524], "retriev": [87, 91, 398, 400, 445, 446, 448, 479, 482, 483, 488, 496, 508, 523, 524], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 303, 305, 307, 308, 312, 314, 319, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 344, 345, 346, 355, 356, 357, 358, 359, 362, 364, 365, 367, 369, 370, 380, 384, 385, 386, 387, 388, 389, 397, 398, 401, 402, 418, 419, 422, 425, 428, 434, 436, 448, 450, 458, 462, 466, 467, 470, 473, 474, 475, 476, 478, 479, 480, 482, 484, 497, 501, 523, 524, 556, 573], "return_delta": 331, "return_diff": 331, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [390, 422, 440], "reval": 530, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 193, 242, 479, 504], "review": [377, 382, 383, 384, 387, 388, 390, 391, 393, 394, 395, 397, 398, 400, 402, 435, 436, 523], "revis": 394, "revisit": 222, "rework": 420, "rewrit": [380, 383, 390, 420, 430, 431, 433, 434, 435, 571], "rewritten": [432, 435], "rf": 472, "rgb": [369, 371, 439, 443, 448], "rglob": [82, 460, 486], "rhe": 178, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [374, 390], "rid": 380, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 122, 124, 132, 149, 226, 230, 249, 262, 285, 291, 362, 374, 388, 397, 400, 452, 458, 460, 465, 467, 486, 528, 529, 530, 537, 538, 541, 542, 544, 545, 549, 552, 553, 554, 555, 559, 560, 561, 563, 571, 572, 573, 574], "rightarrow": [534, 574], "rigid": 379, "ring": [105, 121, 164, 167, 174, 188, 189, 190, 380, 383, 390, 393, 406, 415, 419, 421, 431, 432, 433, 434, 442, 455, 459, 480, 491, 510, 519, 522, 570], "ring2dkernel": [164, 174], "ring_background": [442, 454, 455], "ring_bkg_mak": 521, "ring_mak": 454, "ringbackgroundestim": [380, 433], "ringbackgroundmak": [164, 167, 419, 454, 478, 521], "rise": [134, 233, 471, 561], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 400], "rm": [146, 147, 151, 397, 450, 476, 513, 515, 516, 517, 530, 559, 560, 561, 562, 563, 564], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [106, 107, 110, 146, 147, 148, 431, 448], "rmf_ob": 106, "rmffile": 106, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 283, 323, 325, 328, 329, 330, 331, 374], "roadmap": [378, 381, 390, 399, 414, 435], "roberta": [433, 434], "robust": [374, 434], "roi": [67, 390, 473, 489, 570], "roi_max": 390, "role": [433, 478], "rolf": 413, "rolk": 570, "rolke2005": [570, 573], "roll": 487, "room": 384, "root": [19, 20, 26, 122, 123, 132, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 293, 296, 374, 392, 425, 452, 499, 509, 571, 573], "rosillo": 436, "rotang": 461, "rotat": [51, 54, 172, 173, 177, 182, 221, 229, 232, 461, 520, 528, 529], "rough": [72, 390], "roughli": [117, 377, 382, 388, 390, 393, 394, 432, 454], "round": [87, 91, 189, 190, 192, 194, 198, 201, 202, 448, 523], "round_to_edg": [187, 188, 197, 200], "round_trip": [16, 84, 90, 104, 123], "routin": 413, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 138, 146, 309, 345, 368, 389, 398, 401, 436, 439, 448, 451, 461, 462, 470, 473, 476, 479, 486, 488, 489, 497, 506], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 473], "row_label": 368, "row_specifi": [83, 87, 91], "royalblu": 468, "rplbale5": 470, "rpovid": 389, "rspec": [67, 473], "rst": [377, 379, 394, 400, 403, 404, 420, 425], "rtd": 434, "rtol": [132, 349, 374], "rtol_ax": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 197, 198, 200, 201, 202], "rtol_wc": 200, "ruben": 433, "rub\u00e9n": 433, "ruiz": [382, 390, 394, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 433, 434, 435], "rule": [87, 91, 258, 276, 312, 400, 479, 523], "run": [16, 82, 83, 84, 88, 90, 93, 101, 103, 104, 108, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 138, 139, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 197, 200, 207, 321, 322, 348, 367, 373, 374, 375, 381, 382, 384, 387, 389, 390, 391, 394, 396, 398, 402, 403, 404, 405, 410, 416, 417, 420, 421, 432, 434, 435, 439, 443, 444, 445, 446, 451, 452, 453, 454, 456, 457, 458, 460, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 496, 497, 507, 508, 509, 511, 516, 518, 520, 521, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "run_fit": [15, 449, 453, 495], "run_id": [487, 497], "run_multiprocess": 511, "runner": [16, 338, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 537, 543, 559, 565, 566], "runtim": [383, 401], "runtimewarn": [450, 460, 470, 489, 559], "rwt6buna": 478, "rx": 445, "rxj": 445, "rxj1713_2016_250gev": 535, "r\u00e9gi": [380, 383, 384, 388, 389, 391, 393, 395, 396, 397, 398, 399, 401, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "r\u00e9my": [392, 425, 427, 428, 436], "s0167947313003204": 140, "s180": 289, "s2": 269, "s3": 269, "s5yefxib": 470, "s_0": 511, "s_1": 511, "safari": [87, 91], "safe": [99, 101, 102, 105, 109, 110, 147, 148, 154, 159, 162, 167, 175, 374, 386, 388, 400, 419, 421, 422, 436, 437, 438, 439, 445, 448, 474, 480, 496, 507, 569], "safe_mask": [16, 102, 109, 449, 453, 454, 456, 495], "safe_mask_mak": [165, 445, 448, 468, 478, 488, 518, 520, 521], "safe_mask_mask": [450, 458, 466, 470, 478], "safemaskconfig": 16, "safemaskmak": [165, 167, 395, 419, 420, 425, 427, 428, 440, 445, 448, 450, 458, 464, 466, 468, 470, 478, 480, 488, 495, 496, 518, 519, 520, 521], "safeti": 400, "sagittariu": [33, 38], "saha": 433, "sai": [74, 379, 393, 571], "said": [374, 379, 381, 488, 489, 571], "sake": [460, 476], "saldana": [222, 223, 439, 444, 537], "saldana21": 537, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 102, 105, 106, 109, 110, 121, 132, 138, 139, 150, 151, 157, 158, 159, 160, 162, 163, 165, 186, 187, 188, 189, 190, 192, 193, 196, 197, 198, 200, 201, 202, 274, 283, 289, 367, 374, 377, 382, 384, 386, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 407, 417, 418, 422, 425, 439, 446, 449, 450, 451, 456, 457, 460, 464, 465, 468, 473, 474, 479, 480, 481, 482, 483, 484, 487, 488, 491, 495, 507, 508, 509, 515, 523, 524, 571], "sampl": [47, 93, 103, 108, 132, 133, 148, 150, 156, 158, 159, 160, 162, 189, 190, 192, 198, 200, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 281, 283, 292, 314, 323, 328, 329, 330, 331, 378, 386, 388, 389, 392, 394, 406, 413, 415, 417, 418, 421, 427, 434, 436, 439, 440, 442, 450, 463, 471, 474, 476, 491, 511], "sample_axi": 323, "sample_background": [103, 108, 419], "sample_coord": [148, 159, 162, 189, 190, 192, 198, 201, 202, 419, 421, 436], "sample_edisp": [103, 108], "sample_powerlaw": 393, "sample_psf": [103, 108], "sample_sourc": [103, 108], "sample_spher": [429, 575], "sample_tim": [219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 425, 436], "sampler": [103, 323, 383, 387, 421, 425, 460], "sampler_kwarg": 93, "saniti": 433, "satisfi": [142, 166, 188, 189, 190, 301, 481, 511], "save": [15, 19, 20, 26, 100, 132, 204, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 374, 382, 390, 398, 402, 444, 456, 457, 460, 476, 480, 481, 488, 508], "savefig": [352, 410], "savez": 204, "saw": 411, "sbpl": [259, 397, 482], "sc": [87, 91], "scalar": [87, 91, 157, 188, 189, 190, 192, 198, 201, 202, 301, 393, 427, 438, 440, 479, 523], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 104, 105, 110, 117, 123, 125, 126, 129, 150, 166, 194, 198, 199, 200, 202, 210, 212, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 269, 270, 271, 278, 281, 300, 313, 314, 315, 331, 355, 356, 357, 367, 375, 383, 388, 389, 392, 397, 420, 425, 426, 434, 437, 438, 439, 449, 452, 461, 462, 465, 466, 467, 471, 472, 473, 475, 477, 478, 479, 482, 483, 484, 486, 495, 497, 499, 537, 558, 559, 560, 561, 562, 563, 564, 565, 566], "scale10": [19, 20, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 402, 547], "scale_method": [19, 20, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 402, 547], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 472], "scaled_featur": 300, "scaled_features_irf": [299, 300, 483], "scaledregulargridinterpol": [68, 222, 271, 420, 435], "scalespectralmodel": [125, 126, 129, 253, 397, 482], "scan": [19, 20, 95, 122, 124, 125, 126, 129, 130, 207, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 389, 398, 425, 462, 466, 475, 484, 509, 511], "scan_max": [19, 20, 125, 129, 132, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 444, 466, 475, 476], "scan_min": [19, 20, 125, 129, 132, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 444, 475, 476], "scan_n_sigma": [19, 20, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 476], "scan_n_valu": [19, 20, 125, 129, 130, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 444, 476, 484], "scan_prior": 484, "scan_valu": [19, 20, 207, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 462, 476], "scargl": [389, 433, 471], "scatter": [220, 242, 395, 452, 458, 470, 528, 529], "scenario": [87, 91, 379, 386, 396, 406, 475, 479, 482, 500, 572], "scengin": [87, 91], "schedul": 383, "schema": [15, 16, 84, 90, 104, 123, 390, 393], "schema_gener": [16, 84, 90, 104, 123], "schema_json": [16, 84, 90, 104, 123], "scheme": [16, 84, 90, 101, 104, 106, 107, 123, 188, 189, 190, 199, 234, 374, 380, 384, 386, 389, 396, 397, 398, 399, 401, 418, 425, 436, 440, 461, 477, 479, 482, 511, 516, 522, 523, 525], "school": 400, "scienc": [140, 189, 190, 192, 201, 202, 381, 383, 387, 390, 391, 394, 400, 411, 433, 434, 451, 457, 467, 479, 482, 483, 486, 487, 491, 499, 511, 545, 570, 571], "sciencedirect": 140, "scientif": [375, 381, 397, 400, 407], "scientist": 486, "scikit": [138, 374, 388, 391, 394, 434, 480], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 202, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 299, 313, 354, 367, 373, 374, 377, 383, 388, 391, 392, 394, 400, 411, 415, 416, 417, 418, 430, 431, 432, 435, 437, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 568, 573], "scipy_mvn": 205, "scipy_opt": 476, "scitool": 550, "scope": [387, 388, 389, 390, 393, 401, 500], "scratch": [149, 374, 384, 388, 404, 456, 480], "screen": [87, 91, 479, 497], "script": [6, 87, 91, 124, 337, 338, 339, 340, 341, 342, 343, 375, 380, 381, 383, 385, 388, 390, 393, 394, 400, 403, 404, 414, 415, 416, 417, 425, 426, 430, 433, 434, 435, 436, 440, 442, 448, 452, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 470, 472, 473, 474, 475, 476, 478, 481, 484, 487, 492, 495, 510, 511, 571], "scriptabl": 401, "scutum": [33, 38], "sdc": 486, "sdist": 404, "seaborn": 511, "search": [87, 91, 282, 284, 338, 374, 375, 410, 433, 434, 449, 452, 458, 459, 472, 473, 483, 495, 496, 497, 499, 511, 571], "season": 394, "sebastian": 425, "sec": [54, 83, 94, 100, 129, 331], "second": [42, 58, 83, 86, 87, 88, 91, 133, 146, 269, 292, 331, 334, 351, 355, 358, 363, 375, 382, 384, 386, 388, 392, 398, 400, 404, 419, 438, 448, 449, 452, 454, 456, 458, 459, 460, 461, 462, 464, 466, 467, 470, 472, 474, 476, 478, 479, 481, 484, 486, 491, 495, 506, 572, 575], "secpl": [262, 263, 264, 397, 482], "section": [19, 87, 91, 283, 285, 291, 374, 375, 377, 379, 388, 390, 391, 393, 397, 400, 404, 422, 435, 451, 456, 460, 461, 464, 467, 473, 475, 476, 480, 481, 482, 497, 500, 511, 524, 569, 571, 575], "secur": 480, "sed": [118, 121, 122, 123, 124, 126, 132, 198, 222, 373, 390, 392, 398, 406, 413, 432, 446, 452, 462, 473, 474, 475, 495, 497, 570], "sed_fit": [442, 446, 447], "sed_fitting_gammacat_fermi": 394, "sed_typ": [19, 20, 26, 122, 123, 124, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 425, 443, 444, 446, 448, 449, 450, 457, 458, 462, 465, 467, 473, 475, 497, 509, 511, 547, 570], "sed_type_init": [71, 74, 75, 78, 122, 123, 124], "sed_type_plot_default": [122, 124], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 505], "sedov_taylor_end": [52, 53, 505], "seds_20230803": 64, "sedtypeenum": 123, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 105, 109, 110, 117, 119, 121, 124, 125, 126, 129, 131, 132, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 165, 172, 174, 175, 182, 187, 188, 190, 192, 194, 195, 197, 200, 202, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 275, 285, 291, 294, 295, 298, 301, 309, 325, 341, 364, 365, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 394, 395, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 434, 435, 436, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 491, 495, 496, 497, 499, 507, 508, 511, 521, 522, 524, 550, 554, 555, 568, 570, 571, 572, 573, 575], "seed": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 148, 159, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 243, 250, 257, 269, 272, 283, 323, 324, 325, 328, 329, 330, 331, 374, 433, 460, 547], "seed_photon_field": [243, 547], "seem": [374, 381, 382, 385, 391, 395, 499], "seen": [374, 388, 395, 445, 452, 457, 466, 479, 482, 487], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 102, 105, 109, 110, 121, 169, 176, 189, 190, 191, 192, 194, 199, 201, 202, 211, 213, 220, 242, 258, 268, 280, 370, 371, 384, 386, 387, 388, 389, 390, 394, 396, 398, 401, 406, 408, 414, 417, 425, 429, 443, 448, 450, 451, 453, 454, 456, 457, 459, 460, 461, 464, 467, 468, 474, 475, 476, 478, 479, 480, 483, 486, 488, 489, 491, 497, 509, 511, 515, 516, 520, 569, 571], "select_energi": [83, 508], "select_from_geom": [220, 242], "select_map_mask": 415, "select_mask": [83, 220, 242, 425, 481], "select_nested_model": 439, "select_obs_id": [91, 458], "select_observ": [91, 96, 390, 466, 470, 483, 496, 511], "select_offset": [83, 460, 489, 508], "select_paramet": [83, 89, 468, 508], "select_phas": 384, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 220, 242, 388, 417, 425, 460, 461, 468, 481, 497, 508], "select_row_subset": 83, "select_sky_box": 388, "select_sky_circl": [91, 388], "select_tim": [83, 86, 88, 92, 100, 384, 398, 419, 461, 466, 470, 508], "select_time_rang": 91, "selected_energi": 508, "selected_ev": 83, "selected_id": 508, "selected_obs_t": [91, 483, 496], "selected_offset": 508, "selected_region": 508, "selected_tim": 508, "selection_al": [117, 132], "selection_mask": [220, 242, 481], "selection_opt": [16, 117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132, 425, 444, 448, 449, 452, 453, 454, 456, 457, 458, 462, 465, 466, 467, 468, 475, 480, 488, 495], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [456, 464, 479, 495, 496], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 104, 122, 123, 124, 197, 198, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 258, 259, 261, 262, 263, 264, 267, 271, 374, 375, 385, 386, 388, 391, 397, 398, 401, 402, 421, 479, 482], "semant": [388, 399], "semi": 221, "semiaxi": [221, 229, 232, 528, 529, 530], "semilogi": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 443, 461], "semimajor": 473, "semiminor": 473, "semver": 399, "send": 403, "sens": [374, 381, 384, 388, 390, 393, 394, 395, 454], "sensibl": 483, "sensit": [118, 121, 122, 123, 124, 131, 274, 387, 394, 420, 422, 432, 433, 439, 440, 442, 447, 464, 486, 491, 499, 516], "sensitivity_estim": 443, "sensitivity_t": 443, "sensitivityestim": [118, 414, 420, 443], "sent": 379, "sentenc": [379, 394, 400], "sep": [197, 383, 391, 397, 412, 482], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 188, 197, 200, 297, 363, 374, 375, 380, 381, 382, 383, 386, 387, 388, 389, 390, 393, 394, 395, 396, 421, 425, 431, 433, 434, 438, 439, 451, 454, 456, 458, 464, 467, 473, 481, 482, 483, 500, 508, 516, 517, 528, 529, 533, 534, 547, 570], "septemb": [383, 391, 393, 394, 399], "sequenc": [87, 91, 92, 100, 102, 109, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 211, 220, 242, 301, 404], "sequenti": [380, 448, 496], "seri": [87, 91, 124, 283, 288, 331, 383, 388, 389, 425, 471], "serial": [16, 84, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 123, 380, 385, 389, 390, 395, 398, 418, 421, 425, 427, 434, 436, 437, 438, 439, 440, 479, 482, 484, 499], "serialis": [20, 102, 105, 109, 110, 214, 215, 218, 220, 222, 224, 225, 226, 228, 230, 234, 236, 237, 239, 241, 242, 243, 245, 247, 248, 249, 251, 254, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 386, 388, 390, 393, 395, 396, 397, 417, 419, 421, 425, 430, 433, 435, 436, 438, 439, 440, 484, 495, 511, 524, 566], "serializ": [16, 84, 90, 104, 123], "serialize_as_ani": [16, 84, 90, 104, 123], "serialize_method": [87, 91], "serializiaton": 386, "serilis": [26, 216, 217, 219, 221, 227, 229, 231, 232, 233, 235, 244, 246, 250, 255, 256, 257, 258, 260, 267, 270, 272], "sersic": 397, "sersic2d": 397, "sersicspatialmodel": 397, "serv": [87, 91, 374, 379, 386, 390, 398, 404, 427, 472, 515], "server": [396, 406, 408, 491], "servic": 433, "session": [390, 400, 510], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 119, 121, 122, 123, 124, 125, 126, 128, 129, 132, 140, 146, 148, 159, 162, 165, 166, 169, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 262, 263, 264, 266, 269, 270, 271, 280, 292, 321, 323, 374, 375, 380, 383, 384, 386, 387, 389, 390, 391, 392, 394, 398, 399, 400, 401, 402, 404, 406, 408, 421, 427, 429, 431, 433, 436, 439, 440, 443, 444, 445, 448, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 465, 466, 468, 473, 474, 475, 476, 478, 480, 482, 483, 484, 486, 488, 489, 491, 496, 499, 507, 508, 511, 520, 522, 523, 524, 547, 568, 571, 574, 575], "set_by_coord": [189, 190, 192, 198, 201, 202, 479, 523], "set_by_idx": [189, 190, 192, 198, 201, 202, 479, 523], "set_by_pix": [189, 190, 192, 198, 201, 202, 523], "set_label": 470, "set_log": 16, "set_model": [15, 396, 449, 453, 465, 495], "set_models_paramet": 396, "set_parameter_factor": [211, 213], "set_parameters_bound": [220, 242], "set_prior": [242, 402], "set_prop_cycl": 443, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 205, "set_titl": [444, 445, 448, 452, 454, 458, 468, 472, 476, 477, 478, 481, 520, 530, 534, 537], "set_unit": [446, 475, 511], "set_xlabel": [443, 444, 445, 448, 451, 468, 470, 476, 483, 484], "set_xlim": [446, 448, 449, 457, 468, 513, 537], "set_xscal": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "set_xtick": [530, 534], "set_ylabel": [443, 444, 445, 448, 462, 468, 470, 472, 476, 483, 537], "set_ylim": [443, 446, 448, 449, 450, 465, 468, 513, 537], "set_yscal": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 462, 472, 513], "set_ytick": [530, 534], "setdefault": 196, "seterr": 374, "setlevel": 458, "setter": [375, 402, 419, 425, 474], "settl": 400, "setup": [13, 376, 377, 378, 381, 386, 387, 391, 394, 402, 431, 435, 491, 571], "setuptool": [426, 571], "sever": [87, 91, 171, 379, 380, 381, 388, 389, 390, 393, 398, 401, 419, 420, 421, 425, 428, 437, 438, 439, 451, 457, 473, 486, 487, 488, 511, 571, 573], "seyfert": 289, "sf": [297, 573], "sgr": 497, "sgv_oick": 470, "shade": [190, 198, 202, 476, 569], "shall": 377, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 101, 102, 105, 109, 110, 111, 115, 121, 122, 126, 127, 132, 137, 138, 139, 144, 146, 149, 187, 188, 189, 190, 192, 193, 195, 197, 198, 200, 201, 202, 205, 232, 281, 301, 314, 330, 385, 388, 392, 423, 438, 446, 448, 450, 452, 453, 458, 461, 462, 466, 470, 471, 473, 474, 475, 477, 478, 479, 480, 482, 486, 487, 497, 509, 523, 524, 525, 530, 534], "shape_ax": [188, 200], "share": [189, 190, 192, 196, 198, 201, 202, 374, 379, 386, 389, 393, 396, 407, 425, 427, 439, 456, 457, 480, 481, 486, 511, 571], "sharepoint": 486, "sharp": [233, 364, 365, 528], "she": [384, 389], "shear": 388, "sheet": [409, 511], "shell": [52, 53, 80, 255, 256, 385, 390, 397, 406, 408, 442, 482, 525, 534, 536, 571], "shell2": [255, 442, 482, 525, 536], "shell2d": 52, "shell2spatialmodel": [252, 256, 482, 534], "shellspatialmodel": [80, 252, 255, 397, 425, 482, 533], "sherpa": [107, 110, 146, 193, 194, 197, 198, 207, 285, 291, 373, 374, 383, 391, 392, 394, 395, 405, 406, 408, 415, 429, 430, 431, 432, 434, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 524, 545, 572], "sherpa_opt": 476, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 270, 410], "shim": 381, "shini": 359, "ship": [381, 382, 391, 414, 432, 451, 464, 468, 482, 511], "shock": [50, 52, 53, 504], "short": [374, 375, 378, 379, 383, 388, 391, 394, 397, 400, 422, 466, 471, 487, 511, 512, 570, 573, 576], "short_observ": [466, 470], "shortcut": [82, 410, 427], "shorten": 425, "shorter": [289, 374, 375, 388, 394, 399, 422, 451, 466, 482, 571], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 102, 104, 105, 108, 109, 110, 112, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 136, 141, 147, 148, 151, 157, 159, 162, 174, 179, 180, 185, 187, 188, 189, 190, 192, 194, 196, 197, 198, 200, 201, 202, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 301, 349, 363, 364, 365, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 401, 403, 404, 406, 408, 409, 410, 415, 417, 439, 450, 456, 459, 460, 461, 467, 468, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 488, 507, 509, 511, 516, 518, 523, 571, 572, 574, 575], "shoulder": 273, "shouldn": [83, 374, 377], "show": [11, 82, 87, 91, 126, 127, 128, 150, 169, 234, 371, 374, 375, 377, 386, 388, 389, 393, 394, 402, 404, 414, 415, 419, 427, 432, 433, 434, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 495, 496, 497, 503, 504, 505, 511, 513, 514, 515, 517, 518, 520, 522, 528, 537, 556, 569, 571, 573, 576], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 458], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 511, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 484, "shower": [429, 486, 516], "shown": [19, 20, 26, 83, 157, 197, 198, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 369, 374, 381, 391, 392, 393, 401, 402, 404, 419, 421, 445, 448, 452, 456, 458, 459, 460, 461, 467, 468, 471, 478, 481, 482, 483, 484, 486, 496, 508], "showwarn": 374, "si": [83, 188, 197, 200, 220, 242, 273, 524], "side": [200, 202, 282, 284, 374, 388], "sider": 575, "sidereal_tim": 375, "siejkowski": 434, "sig": [367, 572, 573, 574], "sight": 499, "sigma": [19, 20, 30, 32, 48, 49, 121, 122, 123, 124, 125, 129, 130, 132, 138, 139, 146, 147, 151, 157, 158, 159, 162, 205, 207, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 280, 282, 284, 290, 397, 402, 444, 452, 458, 459, 464, 465, 471, 475, 476, 480, 482, 484, 495, 509, 515, 529, 544, 560, 573], "sigma1": 31, "sigma2": 31, "sigma_": [205, 529], "sigma_1": [31, 49, 150, 477], "sigma_10tev": [397, 482], "sigma_1tev": [397, 482], "sigma_2": [31, 49, 150, 477], "sigma_3": [150, 477], "sigma_err": 459, "sigma_gauss": 232, "sigma_laplac": 232, "sigma_m": 529, "sigma_nod": 482, "sigma_to_t": 573, "sigmav": 499, "sign": [210, 212, 282, 284, 377, 400, 421, 436, 509, 573], "signal": [83, 102, 105, 108, 109, 110, 174, 202, 257, 282, 284, 298, 398, 443, 448, 449, 454, 457, 465, 480, 495, 499, 514, 518, 520, 570, 572, 573, 574], "signif_avg": 497, "signific": [77, 117, 121, 122, 123, 124, 131, 132, 140, 141, 280, 282, 284, 288, 364, 365, 372, 379, 380, 381, 382, 389, 390, 394, 395, 398, 400, 421, 422, 430, 433, 434, 439, 440, 442, 443, 448, 449, 455, 456, 457, 458, 459, 465, 468, 470, 471, 473, 475, 476, 488, 491, 495, 497, 509, 511, 569, 570, 571], "significance_lima": 421, "significance_map": [454, 456], "significance_map_off": 454, "significance_mask": 480, "significance_mask_inv": 480, "significancemapestim": 421, "significantli": [425, 444, 460, 486], "signoff": 377, "silent": 436, "silicon": [406, 408], "silvia": 417, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 365, 374, 377, 386, 387, 388, 389, 390, 393, 394, 395, 398, 425, 439, 450, 471, 475, 479, 483, 484, 497, 507, 515, 571], "similarli": [380, 382, 398, 401, 425, 473, 476, 477, 479, 480, 482, 524], "simlat": 283, "simon": [438, 439, 440], "simpifi": 383, "simpl": [50, 52, 138, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 273, 374, 375, 386, 387, 388, 389, 390, 393, 398, 401, 402, 415, 425, 429, 433, 434, 439, 443, 445, 446, 448, 449, 450, 451, 453, 456, 468, 470, 471, 475, 476, 479, 480, 483, 489, 495, 496, 497, 501, 511, 569, 570, 571], "simple_norm": 202, "simple_rebin_lc": 389, "simplefilt": 511, "simpler": [177, 382, 387, 388, 396], "simplest": [443, 448, 471], "simplex": [207, 476], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 166, 207, 211, 213, 374, 388, 389, 398, 406, 407, 408, 436, 439, 443, 444, 445, 458, 474, 480, 481, 482, 497, 524, 571, 573], "simplic": [457, 460, 466, 476, 482, 484, 487], "simplif": [385, 397, 436], "simplifi": [132, 196, 381, 383, 385, 392, 398, 415, 418, 419, 420, 422, 425, 429, 436, 444, 446, 452, 516, 574], "simu": [464, 467, 484], "simul": [45, 83, 88, 93, 102, 105, 108, 109, 110, 112, 148, 159, 162, 283, 331, 384, 387, 390, 394, 401, 402, 406, 413, 417, 419, 421, 427, 430, 432, 433, 434, 439, 440, 442, 447, 453, 456, 458, 463, 468, 469, 481, 484, 486, 491, 501, 516, 569], "simulate_3d": [394, 434, 442, 463, 464], "simulate_dataset": [415, 419, 420], "simulate_observ": 93, "simulated_d": 450, "simulated_data": 93, "simulated_model": 450, "simultan": [402, 467, 474, 482, 484, 507], "sin": [528, 529, 530, 564], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 190, 200, 349, 374, 375, 380, 384, 388, 390, 391, 392, 393, 394, 398, 400, 401, 402, 404, 425, 435, 436, 437, 438, 439, 440, 444, 450, 454, 456, 467, 470, 474, 481, 482, 484, 486, 488, 543, 572, 575], "sine": [257, 385, 442, 525, 567], "sine_model": 564, "sinetemporalmodel": [265, 482, 564], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 121, 125, 126, 129, 132, 147, 148, 159, 161, 162, 165, 169, 171, 176, 179, 180, 185, 187, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 220, 242, 374, 380, 381, 384, 386, 387, 388, 389, 390, 391, 395, 396, 401, 402, 406, 413, 415, 420, 421, 433, 439, 440, 443, 448, 450, 452, 453, 454, 465, 467, 473, 474, 478, 479, 481, 484, 488, 489, 495, 497, 507, 509, 521, 523, 524, 568, 570], "singleobscubemak": 380, "singleobsimagemak": 380, "singleton": 325, "sinha": [386, 389, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 433, 434, 435, 436, 437, 438, 439, 440], "sink": 391, "sinu": [257, 482], "sinusoid": [257, 564], "sipocz": [391, 415, 417, 419, 421, 430, 431, 432, 433, 434, 435], "sip\u0151cz": 436, "sit": 377, "site": [338, 404, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 543, 559, 571], "situat": [388, 389, 391, 516], "six": [393, 399], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 102, 103, 105, 108, 109, 110, 112, 113, 114, 116, 127, 132, 133, 143, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 171, 172, 173, 176, 177, 178, 186, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 214, 215, 217, 218, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 292, 323, 324, 328, 329, 330, 331, 362, 374, 382, 385, 387, 388, 406, 408, 438, 440, 443, 450, 454, 456, 460, 466, 468, 473, 478, 479, 480, 482, 486, 487, 488, 489, 497, 507, 522, 528, 529, 575], "skeleton": 390, "sketch": 390, "skill": [377, 410], "skimag": 434, "skip": [82, 157, 362, 375, 377, 386, 388, 394, 432, 470, 481], "skip_miss": [82, 433], "sklearn": 374, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 102, 105, 108, 109, 110, 117, 138, 147, 148, 159, 162, 182, 188, 189, 190, 192, 197, 198, 200, 201, 202, 220, 242, 258, 270, 273, 275, 303, 307, 308, 332, 334, 336, 361, 373, 374, 375, 387, 393, 406, 415, 417, 431, 432, 434, 444, 448, 449, 451, 452, 454, 464, 467, 468, 473, 479, 482, 486, 487, 491, 493, 495, 496, 497, 499, 506, 507, 508, 511, 516, 517, 520, 522, 524, 528, 529, 533, 534, 535, 569, 570], "sky_circl": [91, 96, 466, 470, 483, 496], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 114, 116, 389, 444, 465, 466, 470, 473, 481, 482, 496, 539], "sky_model_pntpwl": 460, "sky_reg": 472, "sky_reg_rec": 472, "sky_region": 89, "skycood": 385, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 102, 105, 109, 110, 122, 124, 126, 128, 147, 148, 154, 159, 162, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 203, 216, 217, 220, 221, 229, 232, 242, 244, 246, 255, 256, 258, 260, 266, 268, 270, 299, 300, 333, 334, 350, 370, 375, 385, 388, 398, 401, 443, 445, 448, 450, 451, 454, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 496, 497, 511, 515, 520, 522, 524, 532], "skycoord_from_t": 388, "skycoord_to_pixel_scale_angl": 388, "skycoordconfig": 16, "skycub": [380, 393, 431, 432, 433, 434], "skydiffusecub": [385, 397, 416, 421, 422, 434], "skydiffusemap": [385, 416], "skydir": [16, 83, 102, 105, 109, 110, 111, 115, 148, 159, 169, 187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 448, 449, 450, 453, 454, 456, 458, 459, 460, 461, 464, 465, 468, 472, 474, 477, 478, 479, 480, 482, 487, 488, 495, 496, 518, 520, 521, 522, 524, 529, 530, 531, 532], "skydirfunct": 499, "skydisk": 416, "skydiskelong": 385, "skyellips": [415, 416, 417, 418], "skygaussian": 415, "skygaussianelong": 385, "skyimag": [380, 393, 431, 432, 433, 434], "skyimagelist": 431, "skymap": [189, 190, 192, 198, 201, 202, 388, 430, 431, 461], "skymap_band": [461, 566], "skymap_region": 461, "skymask": 432, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 102, 105, 109, 110, 114, 116, 122, 124, 130, 132, 166, 207, 220, 238, 242, 275, 280, 385, 386, 387, 389, 395, 397, 398, 415, 419, 420, 421, 425, 434, 440, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 481, 484, 487, 495, 496, 506, 507, 509, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568], "skypointsourc": 418, "skyregion": [100, 102, 105, 109, 110, 126, 147, 148, 154, 159, 162, 172, 173, 177, 192, 197, 198, 202, 220, 242, 332, 335, 388, 445, 460, 462, 480, 482, 515, 520, 524], "skyspatialmodel": [385, 434], "slack": [376, 377, 381, 397, 403, 409, 414, 415, 571], "slew": 95, "slice": [83, 87, 91, 100, 102, 105, 109, 110, 119, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 268, 270, 293, 380, 422, 459, 462, 474, 475, 486, 523], "slice_by_coord": [122, 124, 440], "slice_by_energi": [100, 102, 105, 109, 110, 122, 124, 268, 422, 474], "slice_by_idx": [102, 105, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 422, 434, 436, 462, 475, 479, 487], "slice_by_tim": [122, 124], "sliced_ax": 193, "sliced_geom": [187, 188, 197, 200], "slide": [383, 452, 473], "slider": 479, "sliderstyl": [456, 464, 479, 495, 496], "slightli": [117, 194], "slope": [27, 416], "slow": [87, 91, 207, 381, 390, 449, 476, 495, 496], "slower": [87, 91, 190, 374, 382, 392], "slowest": 404, "small": [365, 374, 380, 382, 388, 390, 391, 394, 396, 401, 404, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 439, 440, 465, 466, 479, 484, 486, 487, 488, 489, 529, 533, 534, 570, 571], "smaller": [27, 148, 159, 162, 177, 188, 189, 190, 192, 198, 201, 202, 367, 377, 415, 434, 460, 466, 471, 476, 479, 484, 529], "smallest": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 254, 259, 261, 262, 263, 264, 267, 271, 452], "smooth": [102, 105, 109, 110, 117, 127, 128, 138, 190, 202, 221, 259, 366, 369, 425, 430, 431, 432, 434, 435, 442, 454, 456, 458, 462, 464, 468, 474, 478, 479, 481, 487, 495, 496, 497, 525, 528, 557], "smooth_kernel": [102, 105], "smooth_radiu": [102, 105], "smoothbrokenpowerlawspectralmodel": [214, 253, 397, 420, 421, 482, 552], "sn": [45, 50, 52, 53], "sn_rate": [45, 501], "snippet": [375, 394, 511], "snr": [44, 50, 53, 67, 487, 504, 505], "snr_model": 505, "snrcat": [429, 473], "snrtruelovemcke": [50, 504, 505], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 101, 105, 110, 121, 125, 127, 129, 130, 132, 142, 147, 148, 154, 159, 162, 186, 189, 190, 192, 194, 198, 201, 202, 207, 210, 212, 232, 270, 280, 349, 357, 364, 365, 374, 375, 377, 379, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 405, 406, 408, 410, 415, 417, 425, 435, 437, 438, 445, 448, 450, 452, 453, 458, 459, 460, 464, 465, 472, 473, 475, 476, 479, 480, 482, 484, 486, 487, 488, 491, 496, 511, 518, 520, 524, 530, 534, 571, 572, 573, 574], "social": 400, "soft": 289, "softwar": [189, 190, 192, 201, 202, 388, 389, 391, 400, 401, 404, 479, 511], "solar": 52, "sole": [384, 400], "solid": [187, 188, 197, 200, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270, 273, 390, 413, 415, 416, 417, 434, 454, 478, 479, 486, 514, 520, 570], "solid_angl": [187, 188, 197, 200, 479, 524], "solut": [19, 20, 26, 52, 146, 214, 215, 218, 222, 224, 225, 226, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 269, 271, 375, 377, 379, 381, 382, 387, 388, 390, 391, 392, 394, 396, 398, 402, 407, 475, 507, 509, 511, 574], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 382, 384, 385, 386, 387, 427, 511], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 104, 123, 175, 196, 301, 309, 377, 379, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 413, 415, 417, 425, 426, 428, 430, 432, 433, 434, 439, 443, 445, 446, 448, 450, 452, 453, 454, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 478, 479, 481, 482, 484, 486, 487, 496, 497, 499, 500, 507, 508, 511, 516, 521, 523, 571, 572, 573, 575], "some_class": 374, "some_map": 157, "some_map_convolv": 157, "somehow": [382, 388, 393], "someon": [377, 379, 394], "someth": [87, 91, 374, 375, 376, 377, 379, 382, 388, 391, 392, 394, 404, 406, 408, 451, 473, 524, 571], "sometim": [19, 20, 83, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 352, 374, 377, 381, 388, 394, 404, 406, 476, 570, 575], "somewhat": [391, 486], "somewher": [377, 391, 404], "soon": [377, 388, 404], "sort": [82, 83, 87, 91, 101, 138, 337, 342, 343, 374, 391, 416, 497], "sort_kei": [337, 342, 343], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 379, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 404, 406, 411, 413, 415, 419, 420, 425, 426, 431, 432, 433, 434, 439, 440, 442, 444, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 487, 488, 489, 491, 493, 495, 496, 499, 500, 505, 507, 509, 511, 516, 519, 520, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572, 573], "source1": 482, "source2": 482, "source_1": [385, 390], "source_2": 385, "source_42": 390, "source_fermi_3fgl": 446, "source_fermi_3fhl": 446, "source_gammacat": 446, "source_irf_model": 385, "source_librari": 486, "source_model": 550, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 473, 497], "source_name_alia": 56, "source_name_kei": 56, "source_po": [454, 458, 478], "source_population_model": [394, 419], "source_posit": [443, 459, 483], "sourcebackground": 385, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 388, 425, 473, 480, 497, 506], "sourcecatalog1lhaaso": [55, 70, 473], "sourcecatalog2fhl": [55, 71, 473, 506], "sourcecatalog2hwc": [55, 72, 473, 506], "sourcecatalog2pc": [55, 473], "sourcecatalog3fgl": [55, 74, 446, 473, 506], "sourcecatalog3fhl": [55, 75, 446, 473, 481, 497, 506], "sourcecatalog3hwc": [55, 76, 473, 506], "sourcecatalog3pc": [55, 473], "sourcecatalog4fgl": [55, 78, 427, 444, 473, 506], "sourcecataloggammacat": [55, 79, 446, 473, 506], "sourcecataloghgp": [55, 80, 81, 473, 506], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 473, 506], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 414, 473], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 385, "sources_flux_map": 452, "sourcetempl": 385, "south": [460, 461, 486], "south_z20_50h": [82, 144, 148, 149, 150, 159, 443, 451, 464, 467, 477, 486], "south_z40_50h": 486, "southaz": 486, "southern": 486, "space": [87, 91, 102, 105, 109, 110, 199, 202, 266, 267, 283, 312, 330, 373, 374, 384, 390, 396, 468, 474, 476, 479, 523, 547, 556], "span": 483, "spars": [188, 189, 190, 192, 197, 200, 201, 202, 416, 425, 433, 461, 479], "sparsif": 398, "sparsifi": [189, 190, 192, 201, 202], "spatail": 132, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 102, 105, 109, 110, 112, 122, 124, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 171, 187, 188, 189, 190, 192, 193, 195, 197, 198, 200, 201, 202, 211, 213, 216, 217, 220, 221, 228, 229, 232, 242, 244, 246, 252, 255, 256, 258, 260, 266, 268, 270, 280, 367, 369, 374, 380, 383, 386, 387, 388, 390, 392, 393, 398, 406, 414, 415, 417, 418, 419, 420, 422, 425, 433, 434, 436, 439, 440, 442, 444, 446, 449, 451, 452, 453, 456, 457, 459, 460, 461, 462, 464, 467, 468, 470, 473, 474, 475, 478, 481, 485, 487, 491, 495, 499, 500, 507, 509, 511, 512, 522, 523, 536, 568, 569, 570], "spatial_bin_s": 112, "spatial_bin_size_min": 112, "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 114, 116, 132, 221, 228, 258, 268, 280, 389, 419, 444, 452, 456, 458, 459, 460, 461, 464, 465, 466, 470, 473, 474, 481, 482, 487, 496, 527, 528, 529, 530, 531, 532, 533, 534, 535], "spatial_model_point": 460, "spatial_model_registri": 482, "spatial_par": 397, "spatial_typ": 397, "spatial_width": 112, "spatial_width_max": 112, "spatialbackground": 385, "spatialcircleconfig": 16, "spatialconst": 385, "spatialgaussian": 385, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 216, 217, 221, 228, 229, 232, 244, 246, 255, 256, 258, 266, 268, 270, 385, 397, 419, 434, 438, 473, 482, 496, 499, 506, 525, 568], "spatialtempl": 385, "spatiamodel": 157, "speak": 476, "spec": [80, 110, 374, 388, 430, 456, 461, 473, 486, 496], "spec_model_tru": 468, "special": [87, 91, 232, 374, 384, 386, 388, 389, 397, 400, 401, 414, 453, 460, 473, 474, 475, 481, 482], "specialis": [388, 394], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 102, 105, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 165, 179, 180, 185, 189, 190, 191, 192, 194, 198, 199, 200, 201, 202, 207, 234, 268, 280, 363, 373, 374, 375, 377, 379, 384, 386, 388, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 404, 406, 407, 419, 422, 425, 427, 436, 437, 439, 444, 445, 448, 450, 451, 454, 456, 457, 462, 464, 467, 468, 474, 476, 477, 479, 480, 483, 484, 489, 491, 497, 507, 508, 509, 511, 513, 514, 515, 517, 522, 523, 524, 575], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 101, 102, 104, 105, 109, 110, 117, 119, 122, 123, 124, 125, 127, 129, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 175, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 220, 234, 242, 280, 301, 303, 307, 312, 361, 384, 391, 396, 399, 407, 418, 421, 425, 444, 450, 453, 456, 459, 460, 462, 464, 474, 475, 476, 477, 478, 479, 481, 482, 486, 496, 507, 509, 522], "spectra": [26, 109, 110, 125, 130, 142, 207, 253, 273, 280, 380, 383, 385, 387, 389, 393, 397, 413, 417, 430, 434, 444, 445, 450, 451, 457, 461, 465, 467, 468, 474, 475, 476, 478, 482, 484, 499, 507, 509, 511, 570], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 101, 102, 105, 109, 110, 117, 121, 122, 124, 125, 126, 129, 131, 132, 137, 157, 159, 162, 166, 211, 213, 214, 215, 218, 220, 222, 224, 225, 226, 228, 230, 234, 236, 237, 239, 240, 242, 243, 245, 247, 248, 249, 253, 254, 258, 259, 261, 262, 263, 264, 267, 268, 269, 271, 273, 274, 289, 328, 380, 383, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 398, 406, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 447, 451, 452, 453, 456, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 478, 480, 481, 484, 485, 486, 487, 495, 496, 499, 500, 506, 507, 509, 510, 511, 512, 518, 519, 520, 527, 528, 529, 530, 531, 532, 533, 534, 535, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572], "spectral_analysi": [442, 447, 448], "spectral_analysis_hli": [442, 447, 449], "spectral_analysis_rad_max": [442, 447, 450], "spectral_cub": 426, "spectral_index": [19, 20, 26, 52, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271], "spectral_index_error": [19, 20, 26, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 439], "spectral_irf_model": 385, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 109, 110, 114, 116, 117, 121, 126, 130, 131, 132, 137, 157, 159, 162, 166, 207, 220, 228, 240, 242, 258, 268, 280, 389, 392, 396, 397, 398, 402, 422, 443, 444, 445, 446, 448, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 481, 482, 484, 487, 496, 497, 509, 518, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "spectral_model1": 467, "spectral_model2": 467, "spectral_model_pwl": 460, "spectral_model_registri": 482, "spectral_par": 397, "spectral_point": 390, "spectral_typ": 397, "spectralbackground": 385, "spectralbackgroundmodel": 386, "spectralcompoundmodel": 385, "spectralconst": 385, "spectralevalu": 385, "spectralexponentialcutoffpowerlaw3fgl": 393, "spectralgaussian": [385, 417], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 101, 117, 121, 122, 124, 126, 131, 137, 157, 159, 162, 166, 214, 215, 218, 220, 222, 224, 225, 226, 228, 230, 236, 237, 239, 242, 243, 245, 247, 248, 249, 254, 258, 259, 262, 263, 264, 267, 268, 271, 273, 385, 386, 389, 392, 398, 422, 425, 432, 439, 473, 482, 496, 497, 506, 525, 568], "spectralregion": 388, "spectraltempl": 385, "spectroscopi": [442, 469, 491, 520], "spectrum": [19, 20, 26, 72, 76, 98, 100, 101, 102, 105, 106, 109, 110, 122, 124, 129, 131, 134, 159, 162, 167, 171, 175, 176, 189, 190, 192, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 273, 274, 283, 289, 371, 380, 385, 386, 389, 390, 393, 394, 395, 406, 416, 417, 418, 419, 421, 425, 427, 430, 431, 432, 433, 434, 436, 438, 442, 445, 446, 447, 449, 456, 457, 460, 461, 462, 467, 472, 473, 474, 480, 482, 486, 487, 491, 495, 497, 499, 507, 511, 516, 524, 538, 541, 542, 544, 545, 549, 550, 552, 553, 554, 555, 571], "spectrum_analysi": 448, "spectrum_dataset": [142, 386, 468, 474], "spectrum_dataset_1": 386, "spectrum_dataset_2": 386, "spectrum_dataset_empti": [468, 478], "spectrum_dataset_mak": [468, 478], "spectrum_dataset_on_off": 468, "spectrum_fitting_with_sherpa": 394, "spectrum_mak": 443, "spectrum_simul": [394, 442, 447, 451], "spectrumanalysisiact": [390, 418, 432], "spectrumdataset": [98, 99, 100, 102, 105, 110, 129, 131, 142, 170, 171, 175, 176, 228, 395, 416, 417, 418, 419, 420, 421, 422, 425, 428, 443, 445, 448, 450, 451, 458, 466, 467, 468, 470, 476, 478, 484, 520, 572], "spectrumdatasetmak": [167, 419, 425, 443, 445, 448, 450, 451, 458, 466, 467, 468, 470, 478, 520], "spectrumdatasetonoff": [98, 105, 106, 107, 109, 130, 131, 142, 170, 171, 207, 280, 371, 389, 416, 417, 418, 420, 421, 437, 438, 439, 443, 444, 445, 448, 449, 451, 457, 458, 465, 468, 470, 474, 475, 476, 478, 484, 507, 509, 572], "spectrumdatasetonoffstack": 418, "spectrumdatasetsonoff": 386, "spectrumenergygroup": 433, "spectrumevalu": 421, "spectrumextract": [389, 416, 419, 432], "spectrumfit": [416, 432, 433, 434], "spectrumobserv": [386, 416, 432], "spectrumobservationlist": [416, 431], "spectrumobservationstack": 431, "spectrumonoffdataset": 389, "spectrumresult": 416, "spectrumsimul": [417, 431, 434], "spectrumstack": 433, "spectrumstat": 417, "specutil": 388, "speed": [132, 301, 377, 407, 417, 419, 427, 433, 434, 476], "spell": [379, 511], "spend": [387, 394], "spent": [381, 478], "sphere": [47, 329, 413, 415, 523, 528, 529, 532], "spherepointpick": 329, "spheric": [47, 374, 415, 523, 569], "sphericalcircleskyregion": [393, 468, 497], "sphinx": [377, 381, 394, 404, 416, 420, 427, 433, 434, 436, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "sphinx_gallery_conf": 404, "sphinx_gallery_thumbnail_numb": [375, 444, 448, 450, 452, 454, 459, 462, 477, 537], "sphinxext": 375, "spill": 478, "spin": [50, 51, 54, 417, 503], "spir": [415, 434], "spiral": [33, 34, 38, 45, 429], "spiralarm": [33, 38, 45, 433, 501], "spiralarm_index": [33, 34, 38], "spirit": 400, "split": [19, 20, 87, 91, 92, 114, 116, 122, 124, 189, 190, 192, 198, 201, 202, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 380, 382, 384, 386, 388, 389, 393, 395, 397, 406, 422, 440, 466, 482, 500, 576], "split_by_axi": [189, 190, 192, 198, 201, 202], "split_template_model": [114, 116], "sporad": 401, "spot": 374, "spread": [82, 88, 150, 159, 162, 374, 396, 422, 443, 452, 477, 516, 570], "spring": [384, 435], "sprint": [382, 383, 387, 390, 391, 392, 393, 395], "spuriou": 138, "sqprlxui": 452, "sqrt": [19, 20, 30, 31, 32, 67, 101, 102, 105, 109, 110, 117, 122, 124, 127, 132, 189, 190, 192, 194, 198, 201, 202, 205, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 281, 290, 313, 314, 315, 386, 445, 448, 452, 456, 462, 464, 468, 471, 473, 476, 478, 479, 481, 487, 495, 496, 497, 509, 529, 530, 533, 534, 544, 573], "sqrt_space": [393, 419], "sqrt_t": [117, 121, 122, 124, 132, 138, 139, 142, 282, 284, 367, 398, 410, 422, 445, 448, 449, 452, 454, 456, 458, 468, 473, 474, 475, 480, 488, 495, 497, 509, 571, 573], "sqrt_ts_min": [142, 448], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 121, 122, 123, 124, 126, 132, 452, 462, 465, 473, 474, 475, 495, 497], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 102, 105, 122, 123, 146, 147, 148, 154, 159, 162, 165, 186, 200, 202, 268, 287, 389, 392, 422, 480, 484, 499, 509, 523, 571, 572, 573, 574], "squash": [148, 187, 188, 191, 193, 194, 197, 199, 200, 439, 443, 454, 474, 479], "squeez": [443, 477], "sr": [143, 144, 145, 156, 187, 188, 197, 200, 217, 270, 273, 443, 451, 453, 456, 458, 464, 467, 473, 474, 477, 479, 482, 486, 487, 516, 527, 535], "src": [387, 444, 459, 507], "src_above_bkg": 459, "src_event": [460, 461], "src_posit": [460, 461], "srcmap": [188, 189, 190, 192, 201, 202, 479], "srsdebk": 470, "ssc": [58, 60, 61, 62, 64, 65, 243, 394, 550], "ssc_model": 243, "st": [53, 476, 487], "stabil": [19, 20, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 399, 464], "stabl": [11, 87, 91, 197, 207, 301, 381, 382, 383, 390, 391, 394, 399, 403, 404, 405, 407, 419, 420, 421, 427, 432, 434, 436, 476, 508], "stack": [16, 83, 86, 92, 100, 101, 102, 104, 105, 109, 110, 121, 122, 124, 147, 148, 154, 159, 162, 165, 189, 190, 191, 192, 197, 198, 201, 202, 205, 211, 213, 268, 344, 374, 386, 389, 390, 396, 401, 415, 418, 419, 422, 425, 430, 431, 436, 437, 439, 444, 445, 449, 453, 457, 458, 465, 468, 474, 476, 478, 483, 484, 495, 496, 508, 509, 518, 521], "stack_dataset": [165, 468, 478], "stack_reduc": [100, 142, 207, 418, 445, 448, 450, 456, 457, 458, 468, 474, 476, 509], "stacked_dataset": [458, 459], "stacked_fit": 448, "stacked_on_off": 454, "stackedobscubemak": 380, "stackedobsimagemak": 380, "stackoverflow": 341, "stage": [377, 390, 454, 456, 467, 474, 507, 570], "stai": 386, "stand": 379, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 190, 202, 207, 274, 283, 300, 356, 357, 374, 375, 377, 379, 383, 385, 386, 387, 390, 392, 398, 400, 401, 410, 417, 418, 434, 440, 443, 444, 449, 451, 454, 457, 459, 461, 464, 466, 467, 470, 472, 476, 479, 482, 483, 484, 486, 489, 491, 495, 507, 510, 515, 523, 569, 570, 571], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 299, 483], "standardis": [346, 347, 359, 433], "standardise_unit": [346, 360], "standpoint": 374, "stapel": 440, "star": [36, 40, 222], "starmap": [317, 321, 322], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 129, 138, 199, 219, 220, 227, 231, 233, 234, 235, 242, 250, 257, 269, 272, 374, 375, 377, 379, 381, 382, 383, 384, 387, 388, 390, 391, 399, 400, 402, 403, 404, 408, 409, 410, 411, 413, 418, 427, 430, 431, 432, 433, 434, 439, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 482, 486, 487, 488, 491, 495, 497, 498, 511, 515, 569], "start_po": [126, 334, 462], "startswith": 374, "stat": [6, 100, 101, 105, 110, 122, 124, 125, 126, 129, 130, 132, 207, 208, 210, 212, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 367, 374, 386, 394, 402, 404, 410, 417, 419, 420, 421, 422, 425, 431, 434, 435, 436, 440, 445, 446, 448, 449, 450, 452, 456, 457, 458, 459, 462, 468, 470, 471, 475, 476, 484, 487, 495, 496, 509, 571, 572, 573], "stat_arrai": [99, 101, 102, 105, 109, 110, 402], "stat_contour": 207, "stat_kwarg": 101, "stat_max": [282, 284], "stat_nul": [122, 124, 125, 126, 129, 130, 132, 282, 284, 440, 452, 462, 475, 509], "stat_per_bin": 386, "stat_profil": [207, 444, 476, 484, 511], "stat_scan": [101, 122, 124, 125, 126, 129, 130, 132, 207, 281, 444, 448, 475, 476, 484, 509], "stat_sum": [99, 100, 101, 102, 105, 109, 110, 402, 438, 439, 456, 467, 474, 481, 511], "stat_surfac": [207, 422, 511], "stat_typ": [101, 102, 105, 109, 110, 420, 448, 456, 467, 474, 481], "state": [16, 45, 47, 199, 207, 374, 380, 384, 386, 390, 394, 396, 398, 444, 449, 495, 516, 537], "stateless": 401, "statement": [374, 377, 381, 438, 440, 500], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 108, 117, 121, 122, 124, 125, 126, 129, 130, 132, 150, 158, 169, 175, 176, 188, 189, 190, 192, 198, 199, 201, 202, 214, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 264, 269, 271, 272, 371, 382, 385, 404, 416, 433], "staticmethod": [385, 397, 402, 482, 484], "statist": [6, 19, 20, 26, 79, 99, 100, 101, 102, 105, 109, 110, 121, 122, 124, 125, 126, 129, 130, 132, 139, 142, 169, 207, 209, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 254, 259, 261, 262, 263, 264, 267, 271, 280, 281, 282, 284, 285, 286, 291, 298, 386, 389, 392, 393, 394, 396, 402, 416, 420, 421, 422, 425, 427, 439, 440, 443, 444, 449, 451, 452, 453, 454, 456, 458, 462, 464, 465, 467, 468, 471, 474, 476, 478, 484, 495, 496, 507, 509, 511, 518, 521, 569, 570], "statu": [19, 20, 26, 122, 124, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 374, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 435, 440, 481, 482], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 283, 300, 451, 471, 487], "stddev": 68, "stderr": 374, "stdout": [309, 374], "steadi": 444, "steep": 451, "stefan": [429, 440], "step": [19, 20, 26, 121, 125, 129, 130, 132, 207, 208, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 374, 377, 380, 381, 384, 385, 386, 388, 389, 390, 392, 395, 399, 402, 403, 404, 410, 427, 434, 435, 439, 443, 448, 450, 453, 456, 458, 459, 460, 461, 466, 467, 474, 475, 476, 478, 482, 484, 495, 496, 497, 511, 519, 524], "stepprior": 402, "stepsiz": 164, "steradian": 197, "stewart": [132, 293, 452, 570], "stewart2009": [132, 570, 573], "stick": [377, 397, 415, 434, 476, 570], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 382, 384, 387, 388, 391, 393, 394, 395, 398, 399, 401, 403, 404, 432, 433, 434, 482, 484, 497, 509, 533, 534, 571], "stipul": 400, "stone": [374, 394], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 129, 132, 199, 219, 220, 227, 231, 233, 234, 235, 242, 250, 257, 269, 272, 384, 410, 439, 449, 453, 454, 456, 466, 468, 470, 476, 487, 495], "storag": [82, 511], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 122, 123, 124, 127, 129, 157, 170, 171, 189, 190, 192, 198, 201, 202, 207, 208, 210, 212, 220, 242, 357, 374, 375, 377, 380, 382, 383, 384, 386, 387, 390, 392, 396, 398, 400, 401, 404, 422, 425, 426, 445, 450, 451, 460, 461, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 483, 486, 487, 488, 489, 497, 507, 508, 511, 516, 517, 518, 523, 524, 547, 568, 569, 571, 575], "store_per_ob": 390, "store_trac": [207, 476], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 119, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 166, 169, 170, 175, 176, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 301, 313, 322, 337, 338, 339, 343, 356, 357, 359, 363, 367, 368, 370, 388, 401, 448, 450, 470, 478, 482, 488], "str3": [87, 91], "straight": [375, 406, 511], "straightforward": [404, 574], "strang": 374, "strategi": [374, 381, 388, 439, 476, 574], "stream": 374, "streil": [402, 438, 439, 440], "strength": [51, 54, 402, 547], "stretch": [189, 190, 192, 198, 201, 202, 364, 365, 369, 452, 456, 462, 464, 478, 479, 481, 487, 495, 496, 497], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 104, 105, 123, 147, 148, 154, 159, 162, 165, 194, 200, 202, 268], "strict_bound": 194, "strictli": [16, 84, 90, 104, 123, 194], "strike": 507, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 104, 122, 123, 124, 125, 126, 129, 132, 150, 156, 158, 160, 165, 188, 189, 190, 192, 194, 195, 197, 198, 200, 201, 202, 210, 212, 220, 242, 301, 319, 363, 374, 387, 388, 391, 393, 400, 401, 413, 417, 425, 427, 449, 473, 480, 482, 495, 523, 524], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 387, 394, 448], "stronger": 484, "strongli": [289, 389, 391, 400, 425, 453, 476, 484], "structur": [87, 91, 200, 297, 378, 379, 380, 383, 385, 387, 390, 394, 397, 400, 401, 412, 418, 419, 421, 425, 428, 440, 442, 462, 474, 475, 478, 479, 480, 482, 491, 498, 499, 508, 512, 523, 524, 571], "stuck": 571, "student": 377, "studi": [46, 273, 297, 387, 390, 398, 407, 434, 445, 446, 457, 458, 459, 462, 464, 466, 467, 470, 476, 479, 482, 486, 501, 511, 520, 572], "stuff": [375, 404, 511], "stuff1": 374, "stuff2": 374, "style": [87, 91, 101, 189, 190, 192, 198, 201, 202, 371, 377, 383, 400, 429, 431, 456, 464, 477, 479, 495, 496, 511, 524], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 114, 116, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 189, 190, 191, 192, 194, 198, 199, 201, 202, 205, 374, 377, 381, 383, 384, 388, 393, 394, 395, 396, 401, 404, 413, 415, 419, 421, 422, 430, 432, 433, 458, 460, 475, 478, 480, 482, 488, 489, 507, 510, 511, 519, 569, 571, 575], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 301, 388, 431, 434, 482, 484], "subcompon": [67, 80], "subfold": [382, 425], "submit": [379, 400], "submodul": [382, 415, 416, 421, 479, 497, 509], "subok": 301, "subpackag": [395, 401, 418, 425, 429], "subplot": [66, 67, 189, 190, 192, 198, 201, 202, 443, 445, 446, 448, 449, 450, 451, 452, 454, 456, 457, 458, 462, 465, 467, 468, 470, 472, 475, 476, 477, 479, 480, 481, 483, 484, 511, 513, 520, 530, 534, 537], "subplot_kw": [452, 454, 458, 468, 480, 520], "subplots_adjust": 472, "subsect": [394, 479], "subsequ": [288, 383], "subset": [82, 83, 87, 91, 125, 129, 132, 243, 401, 429, 430, 458, 468, 481, 486, 488, 510, 569], "subspac": 388, "substanti": [87, 91], "substitut": 572, "substr": [220, 242], "subtract": 450, "succed": 403, "succeed": 122, "success": [16, 84, 90, 101, 104, 122, 123, 124, 125, 126, 129, 130, 132, 206, 207, 208, 209, 402, 425, 445, 446, 448, 449, 450, 452, 456, 457, 458, 462, 465, 468, 470, 475, 476, 481, 487, 495, 496, 535], "successfulli": [101, 445, 446, 448, 449, 450, 456, 457, 458, 467, 468, 470, 475, 476, 487, 495, 496], "sudo": 407, "suffer": [391, 468], "suffic": 467, "suffici": [377, 380, 387, 400, 439], "suffix": [101, 122, 375, 385, 397, 403, 482, 523, 525], "suggest": [377, 379, 381, 384, 388, 394, 396, 398, 402, 452, 460, 461, 511, 571], "suit": [190, 374, 524], "suitabl": 190, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 102, 105, 109, 110, 124, 125, 126, 128, 129, 130, 132, 140, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 189, 190, 192, 198, 201, 202, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 273, 282, 284, 286, 370, 374, 384, 385, 387, 396, 398, 402, 416, 440, 452, 456, 460, 468, 472, 474, 484, 487, 495, 496, 497, 507, 517, 570, 572], "sum_": 507, "sum_band": [189, 190], "sum_i": 127, "sum_j": 507, "sum_k": 507, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [189, 190, 192, 198, 201, 202, 362, 434, 454, 456, 462, 468, 474, 478, 480, 481, 487, 496], "sum_over_energy_group": [121, 125, 132, 452, 458, 462], "summar": [383, 499], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 284, 309, 313, 323, 348, 361, 375, 377, 394, 412, 445, 449, 466, 467, 474, 486, 495, 511], "summaris": [374, 379, 381, 394], "summat": [282, 284, 380], "summer": 382, "sun": 41, "sunpi": [391, 394, 395], "super": [188, 190, 262, 263, 264, 442, 450, 460, 489, 525, 557, 559], "superexpcutoffpowerlaw3fglspectralmodel": [253, 397, 482, 553], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 253, 482, 554], "superexpcutoffpowerlaw4fglspectralmodel": [253, 397, 482, 555], "superflu": [384, 468], "supernova": [28, 52, 445, 459, 482, 501, 502], "superpixel": 188, "supersed": [188, 189, 190, 200, 201, 202], "supervisor": 390, "suppli": [19, 20, 26, 87, 91, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 444, 467], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 102, 105, 109, 110, 113, 124, 141, 152, 157, 188, 189, 190, 191, 192, 194, 199, 200, 201, 202, 207, 220, 242, 373, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 401, 407, 411, 414, 415, 417, 418, 419, 420, 421, 422, 425, 427, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 449, 451, 453, 456, 458, 464, 467, 472, 473, 474, 479, 484, 486, 487, 488, 489, 495, 510, 516, 523, 524, 566, 568, 569, 571], "suppos": [234, 269, 379, 386, 570, 572], "suppress": [146, 147, 151, 511], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374, 377, 379, 390, 403, 448, 465, 479, 511, 571], "surfac": [28, 30, 35, 36, 39, 40, 45, 207, 258, 273, 327, 393, 422, 476, 482, 501], "surface_brightness_err": 473, "surprisingli": 388, "surround": [52, 319, 374], "survei": [63, 67, 125, 222, 381, 384, 394, 410, 442, 486, 491, 492, 501, 506, 511, 570], "survey_map": [442, 492, 493], "suspect": 573, "suss": [383, 400], "svg": 374, "swap": 188, "swept": 52, "swh": 400, "swhid": 400, "switch": [103, 108, 280, 374, 381, 384, 427, 431], "switcher": 403, "sy": [374, 409], "syllabl": 511, "symbol": 480, "symmetr": [102, 105, 109, 110, 121, 130, 132, 177, 186, 190, 229, 374, 385, 415, 427, 430, 446, 467, 478, 484, 486, 499, 509, 517, 528, 529, 573], "symmetri": [190, 415], "sync": 434, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 400, "synchrotron": [243, 421, 547], "syntact": [87, 91], "syntax": [16, 87, 91, 375, 390, 393, 419, 436, 571], "synthesi": [501, 502], "synthet": 413, "system": [11, 83, 87, 91, 144, 152, 153, 188, 189, 190, 192, 195, 197, 200, 201, 202, 220, 242, 374, 380, 385, 387, 391, 394, 395, 399, 400, 402, 407, 415, 433, 439, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 522, 523, 569, 571, 575], "systemat": [385, 398, 400, 401, 422, 448, 465, 478, 509, 570, 572], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 104, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130, 132, 139, 140, 141, 146, 186, 199, 220, 234, 242, 280, 282, 283, 284, 299, 346, 350, 373, 374, 375, 377, 379, 381, 382, 384, 386, 388, 390, 391, 392, 393, 394, 397, 398, 399, 401, 404, 405, 406, 408, 410, 422, 426, 429, 430, 431, 434, 439, 443, 444, 445, 448, 451, 453, 456, 458, 459, 462, 464, 465, 468, 470, 471, 472, 473, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 499, 503, 504, 505, 507, 509, 511, 520, 558, 559, 560, 561, 562, 563, 564, 569, 571, 574, 575], "t0": [227, 250, 460, 466, 467, 470, 559, 563], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 288, 516, 559, 560, 561, 562, 563, 564, 572], "t_0": 563, "t_b": 572, "t_decai": [233, 561], "t_delta": [103, 108, 199, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272], "t_i": 288, "t_j": 507, "t_live": [83, 88], "t_max": [219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 387, 398, 470], "t_min": [219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 387, 398, 470], "t_observ": [83, 88], "t_r": 234, "t_ref": [227, 231, 233, 234, 235, 250, 257, 269, 438, 439, 460, 461, 467, 482, 559, 560, 561, 562, 563, 564, 565, 566], "t_rise": [233, 561], "t_start": [86, 508], "t_stop": [52, 86, 508], "ta": 283, "ta2": 283, "ta3": 283, "tab": [146, 379, 456, 462, 465, 475, 484, 520], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 459, "table_class": [87, 91], "table_compon": [67, 473], "table_filenam": 26, "table_format": 124, "table_from_row_data": 439, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 473], "table_model": [271, 397], "table_oth": 344, "tableau": 511, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [385, 435], "tablepsf": [395, 413, 415], "tablepsfcheck": 431, "tabul": 499, "tabular": [482, 556], "tackl": 383, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 189, 190, 192, 198, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 399, 402, 403, 422, 436, 477, 482, 484, 530, 534], "tail": [486, 571], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 105, 109, 110, 121, 144, 164, 166, 198, 200, 207, 220, 242, 258, 349, 372, 374, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 398, 404, 420, 421, 422, 425, 427, 435, 436, 438, 439, 440, 443, 445, 448, 450, 451, 460, 461, 462, 467, 468, 470, 475, 476, 478, 479, 480, 482, 483, 484, 486, 496, 497, 508, 511, 524, 540, 572, 573, 574], "taken": [15, 27, 87, 91, 102, 105, 109, 110, 122, 124, 149, 157, 176, 182, 184, 198, 199, 202, 207, 291, 375, 379, 383, 387, 438, 444, 448, 456, 457, 468, 470, 475, 477, 480, 481, 486, 497, 507, 509, 520, 521, 573], "talk": [377, 379, 381, 391, 400], "tan": [190, 197, 388, 417, 448, 479, 487, 520], "tandem": 499, "tangent": [172, 217, 221, 229, 232, 244, 255, 256, 260, 266, 270], "tangenti": [188, 524], "tar": [404, 486], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 102, 105, 109, 110, 113, 117, 121, 123, 132, 147, 148, 159, 162, 179, 180, 184, 185, 189, 190, 192, 194, 198, 201, 202, 375, 380, 381, 387, 400, 403, 431, 445, 450, 458, 466, 478, 480, 496], "target_nam": 520, "target_posit": [172, 445, 448, 450, 458, 465, 466, 470, 496], "target_radec": 88, "targetmetadata": [90, 123], "task": [322, 394, 398, 400, 401, 403, 404, 435, 449, 452, 478, 479, 487, 491, 495, 511, 519, 569, 571, 575], "task_nam": 322, "tast": 571, "tau": [26, 51, 54, 133, 292, 402, 472, 537], "tau_0": 51, "taul": [26, 472], "taur": [26, 472], "taylor": [52, 53], "tb00058": 140, "tbl": [87, 91], "tctypn": 460, "tcunin": 460, "tdelta_precis": 297, "team": [379, 383, 391, 394, 396, 400, 412, 433], "technic": [376, 377, 379, 387, 394, 396, 398, 400, 404, 453], "techniqu": [380, 389, 390, 392, 445, 448, 456, 459, 478, 480, 518, 521, 569], "tediou": 473, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 104, 149, 387, 388, 401, 406, 410, 411, 460, 465, 468, 483, 486, 487, 489], "tell": 450, "temp": [429, 461], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 104, 105, 110, 114, 116, 123, 166, 174, 188, 189, 190, 192, 193, 194, 200, 201, 202, 208, 220, 234, 242, 266, 267, 268, 269, 270, 271, 277, 279, 293, 296, 379, 385, 386, 390, 397, 422, 436, 439, 440, 442, 451, 452, 454, 461, 479, 480, 481, 482, 499, 520, 525, 536, 543, 546, 551, 557, 565], "template_diffus": [481, 487], "template_extrapol": 556, "template_model": 460, "template_noextrapol": 556, "templatelightcurvetemporalmodel": 436, "templatend": [266, 267, 482], "templatendspatialmodel": [252, 482], "templatendspectralmodel": [26, 253, 427, 438, 482], "templatenpredmodel": [238, 425], "templatephasecurvetemporalmodel": [265, 436, 482, 565], "templatespatialmodel": [67, 252, 396, 397, 422, 436, 437, 439, 440, 460, 481, 482, 487, 535], "templatespectralmodel": [220, 242, 253, 275, 397, 482, 487, 507, 543, 546, 551, 556], "templatetemporalmodel": 436, "tempo2": [468, 511], "tempor": [211, 213, 219, 220, 227, 231, 233, 234, 235, 242, 250, 257, 258, 265, 269, 272, 288, 385, 387, 397, 398, 418, 420, 421, 422, 427, 436, 438, 439, 440, 442, 444, 446, 449, 451, 452, 456, 457, 458, 460, 463, 464, 470, 471, 473, 474, 475, 481, 487, 491, 495, 511, 512, 567, 568, 570], "temporal_model": [258, 387, 460, 461, 467, 482, 558, 559, 560, 561, 562, 563, 564, 565, 566], "temporal_model1": 467, "temporal_model2": 467, "temporal_model_map": 461, "temporal_model_registri": 482, "temporal_typ": 397, "temporalbackground": 385, "temporalmodel": [219, 227, 231, 233, 234, 235, 250, 257, 258, 269, 385, 398, 421, 436, 438, 439, 525], "temporari": 491, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 385], "ten": [380, 394], "tend": [374, 530], "tension": 471, "tensorflow": [392, 394], "tent": 403, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 235, 294, 298, 377, 379, 381, 383, 384, 388, 391, 394, 399, 401, 423, 427, 436, 444, 452, 476, 477, 571, 573, 574], "termin": [87, 91, 101, 390, 405, 406, 407, 408, 409, 445, 446, 448, 449, 450, 456, 457, 458, 468, 470, 475, 476, 487, 495, 496, 571], "terrier": [380, 383, 384, 385, 386, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 401, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "test": [6, 94, 101, 114, 116, 119, 121, 122, 124, 125, 126, 129, 130, 132, 139, 157, 159, 162, 189, 190, 192, 198, 201, 202, 234, 280, 281, 282, 284, 287, 331, 348, 349, 350, 351, 352, 353, 354, 375, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 399, 402, 403, 404, 414, 416, 417, 419, 421, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 439, 445, 451, 452, 461, 464, 465, 466, 467, 470, 474, 475, 477, 509, 511, 515, 521, 565, 566, 570, 573], "test2": 467, "test_aeff3d": 477, "test_edisp": 477, "test_events_with_gti": 508, "test_gti": 508, "test_person_txt": 374, "test_plot": 374, "test_psf": 477, "test_someth": 374, "test_using_data_fil": 353, "test_using_scipi": 354, "testcod": 375, "testoutput": 375, "testpar": 402, "teststatisticnest": 439, "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 101, 102, 105, 109, 110, 111, 115, 117, 122, 124, 125, 138, 139, 143, 144, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 169, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 258, 259, 261, 262, 263, 264, 267, 271, 273, 274, 299, 300, 321, 369, 375, 385, 397, 398, 401, 402, 410, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 505, 508, 509, 515, 516, 518, 520, 521, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569], "tevcat": [426, 473], "tevcat_nam": 71, "tevpi": 413, "tevtevtev1": 458, "tex": 375, "texliv": 375, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 105, 110, 122, 124, 132, 255, 256, 300, 337, 343, 363, 375, 382, 390, 400, 404, 449, 468, 477, 486, 495, 497, 528, 529, 530, 533, 534, 538, 554, 561, 571, 573], "textcolor": 363, "textkw": 363, "th": 194, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 131, 147, 148, 150, 151, 154, 158, 159, 160, 162, 166, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 280, 289, 352, 367, 374, 377, 379, 380, 381, 384, 387, 388, 389, 392, 393, 398, 400, 401, 404, 433, 436, 437, 438, 440, 443, 445, 456, 457, 460, 465, 466, 471, 476, 478, 480, 483, 484, 507, 524, 529, 530, 571, 573], "thank": [398, 419, 420, 425, 427, 478, 511], "thaw": 481, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 104, 108, 112, 123, 129, 134, 163, 269, 288, 321, 374, 375, 377, 379, 380, 381, 382, 383, 385, 388, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 404, 411, 422, 425, 427, 439, 440, 445, 446, 450, 472, 474, 476, 480, 481, 482, 483, 484, 486, 489, 499, 508, 509, 511, 516, 523, 524, 569, 570, 571, 572, 573, 575], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 104, 123, 211, 213, 220, 242, 301, 374, 375, 377, 379, 381, 382, 388, 390, 393, 400, 401, 403, 404, 410, 417, 433, 445, 446, 448, 451, 453, 456, 457, 459, 461, 465, 473, 474, 475, 476, 479, 480, 482, 484, 486, 488, 491, 496, 508, 511, 520, 571, 573], "theme": [427, 434], "themselv": [87, 91, 390, 478, 480, 518], "theorem": [280, 509, 573], "theoret": 484, "therefor": [105, 380, 384, 387, 388, 389, 393, 395, 397, 407, 425, 445, 465, 468, 476, 479, 480, 483, 484, 488, 497, 509, 573, 574], "thereof": 385, "thermal": [19, 547, 570], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 150, 156, 158, 160, 164, 172, 186, 195, 302, 305, 374, 422, 450, 487, 497, 528, 529, 533, 534], "theta2": [176, 186, 372, 433], "theta2_axi": 489, "theta2_max": 372, "theta2_min": 372, "theta2_t": 489, "theta_0": [33, 38], "theta_squared_axi": [186, 489], "thew": 473, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 102, 103, 104, 105, 108, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 134, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 169, 171, 172, 173, 175, 177, 179, 180, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210, 212, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 280, 282, 284, 290, 301, 309, 319, 322, 325, 330, 331, 349, 352, 359, 361, 363, 364, 365, 369, 371, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 499, 500, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575], "thick": 371, "thin": [56, 313], "thing": [374, 377, 379, 382, 388, 389, 390, 391, 394, 398, 404, 413, 432, 450, 453, 467, 468, 480, 487], "think": [379, 391, 392, 394], "third": [62, 63, 87, 91, 375, 425, 473, 476, 479, 491, 497, 506], "thoma": [400, 433], "thorough": [479, 499], "those": [15, 83, 175, 189, 190, 192, 198, 201, 202, 207, 211, 213, 220, 242, 309, 363, 374, 377, 379, 381, 383, 388, 390, 393, 394, 395, 396, 397, 399, 404, 405, 406, 408, 409, 419, 422, 465, 470, 476, 479, 480, 481, 483, 491, 497, 509, 511, 520, 575], "though": [15, 377, 382, 388, 389, 390, 392, 394, 449, 482, 495], "thought": [379, 388], "three": [87, 91, 157, 283, 374, 383, 386, 388, 400, 458, 460, 465, 471, 479, 484, 491, 516, 523, 570], "threshold": [67, 102, 109, 117, 122, 123, 124, 132, 138, 139, 146, 147, 151, 164, 175, 199, 280, 363, 364, 365, 388, 415, 421, 422, 443, 448, 450, 452, 458, 462, 465, 473, 474, 476, 478, 480, 486, 495, 507, 509], "threshold_alpha": 164, "through": [41, 87, 91, 300, 301, 371, 377, 379, 387, 388, 394, 398, 399, 407, 411, 425, 436, 444, 452, 461, 471, 476, 478, 479, 480, 481, 487, 488, 511, 516, 523, 570, 573], "throughout": [13, 381, 383, 384, 388, 390, 432, 473], "throught": 462, "thrown": 482, "thu": [374, 381, 388, 391, 392, 394, 429, 443, 444, 453, 454, 458, 460, 475, 568, 574], "thumbnail": 425, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 190, 383, 467], "tibaldo": 430, "tick": [438, 439], "tick_param": 443, "ticker": 363, "tight_layout": [476, 484, 530, 534], "tightli": 393, "tikonov": 402, "tild": [188, 200], "tile": [188, 190], "tilt": [248, 268, 385, 396, 397, 402, 414, 420, 453, 456, 457, 460, 461, 464, 474, 482, 487, 495, 496, 518, 524, 531, 551, 556], "tilt_prior": 402, "tim": 440, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 101, 102, 103, 104, 105, 108, 109, 110, 122, 123, 124, 129, 132, 133, 134, 141, 165, 171, 182, 184, 189, 190, 191, 192, 193, 198, 199, 201, 202, 207, 210, 212, 219, 222, 227, 231, 233, 234, 235, 250, 257, 258, 269, 272, 283, 288, 292, 297, 331, 351, 355, 356, 357, 358, 374, 375, 377, 379, 380, 381, 382, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 406, 410, 414, 415, 418, 419, 420, 422, 425, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 444, 448, 450, 451, 452, 454, 456, 458, 459, 461, 462, 464, 465, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 495, 496, 497, 503, 504, 505, 507, 508, 509, 511, 516, 520, 524, 529, 530, 537, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 574], "time1": 292, "time2": 292, "time_axi": [189, 190, 192, 193, 198, 201, 202, 283, 461, 470, 479, 524], "time_bin": 389, "time_bin_end": 389, "time_bin_s": 389, "time_bin_start": 389, "time_bound": 199, "time_box": 91, "time_column": 398, "time_delta": [86, 199, 355, 358], "time_edg": [199, 471, 479], "time_filt": 89, "time_format": [124, 199, 439, 467], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 129, 449, 453, 454, 456, 461, 465, 466, 470, 495], "time_map_axi": [199, 479], "time_map_axis_contigu": 479, "time_max": [100, 122, 124, 199, 388, 389, 390, 461, 465, 470, 473, 479], "time_mid": [199, 471], "time_min": [100, 122, 124, 199, 388, 389, 390, 461, 465, 470, 473, 479], "time_rang": [91, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 461, 558, 559, 560, 561, 562, 563, 564, 565, 566], "time_ref": [83, 85, 86, 91, 94, 193], "time_ref_default": 86, "time_ref_from_dict": 575, "time_relative_to_ref": 575, "time_resolved_spectroscopi": [442, 469, 470], "time_seri": 283, "time_start": [85, 86, 91, 389], "time_step": 389, "time_stop": [85, 86, 91, 389], "time_sum": [86, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272], "timedelta": [87, 91, 94, 199, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 331, 355, 358, 575], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [379, 381, 433], "timemapaxi": [124, 141, 191, 193, 425, 440, 466, 467, 470, 471], "timerangeconfig": 16, "timeref": 460, "timescal": [134, 227, 289, 399, 471], "timeseri": 389, "timesi": [94, 437, 439, 460], "timestamp": 374, "timeunit": 460, "timmer": 283, "timmer1995": 283, "tini": [458, 486], "tip": 511, "titl": [379, 462, 472], "tiziani": 431, "tke": 487, "tkn": 470, "tm": [87, 91], "tmax": 389, "tmid": [88, 439, 458, 478, 483, 496], "tmin": 389, "to_2d": [144, 489], "to_3d": [143, 438, 440], "to_bands_hdu": [187, 188, 197, 200], "to_binsz": [188, 197, 200, 425], "to_binsz_wc": 197, "to_contigu": [199, 479], "to_counts_hdulist": 107, "to_cub": [187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 422, 454, 524], "to_dict": [19, 20, 26, 99, 101, 102, 105, 109, 110, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 401, 484], "to_edisp_kernel": [151, 515], "to_edisp_kernel_map": [148, 425, 515], "to_energy_dependent_table_psf": 433, "to_even_npix": 200, "to_fits_head": 85, "to_fram": 195, "to_gti": [199, 440], "to_hdu": [189, 190, 201, 202], "to_hdulist": [102, 105, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 189, 190, 196, 197, 198, 201, 202, 479], "to_head": [84, 90, 104, 123, 188, 191, 193, 194, 199, 200, 401], "to_html": 374, "to_imag": [102, 105, 109, 110, 146, 147, 157, 159, 162, 187, 188, 197, 200, 396, 419, 420, 443, 454, 458, 474, 487, 521, 524], "to_json": [16, 84, 90, 104, 123], "to_map": [122, 124], "to_map_dataset": [105, 110], "to_mask": [102, 105, 109, 110, 472], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 425, 473], "to_node_typ": 194, "to_nsid": [188, 190], "to_odd_npix": 200, "to_panda": [87, 91], "to_parameters_t": [220, 242, 444, 445, 448, 449, 450, 453, 456, 476, 484, 496], "to_pixel": [388, 448, 458, 472, 478, 482, 520, 528, 529, 530], "to_polygon": 388, "to_psf3d": [150, 158, 160], "to_python": [16, 84, 90, 104, 123], "to_region": [216, 217, 220, 221, 229, 232, 242, 246, 255, 256, 270, 388, 419, 482, 528, 529, 530], "to_region_map_dataset": [102, 105, 109, 110, 474], "to_region_nd_map": [147, 148, 154, 159, 162, 190, 198, 202, 422, 425, 487], "to_region_nd_map_histogram": [202, 439], "to_sed_typ": 398, "to_sherpa": [419, 433, 434], "to_spectrum": 425, "to_spectrum_dataset": [100, 102, 105, 109, 110, 396, 418, 420, 468, 474, 484], "to_st": 439, "to_str": [439, 443], "to_swap": [188, 189, 190], "to_tabl": [101, 124, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 193, 194, 198, 199, 211, 213, 234, 425, 444, 446, 448, 449, 458, 462, 464, 465, 467, 473, 475, 482, 497, 509], "to_table_hdu": [83, 86, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 193, 194, 479], "to_table_psf": 431, "to_template_sky_model": [220, 242], "to_template_spectral_model": [220, 242, 397], "to_unit": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 189, 190, 192, 198, 201, 202], "to_wc": [189, 190], "to_wcs_geom": [188, 197, 524], "to_wcs_til": [188, 190], "to_yaml": [16, 84, 90, 104, 123, 220, 242, 385, 401, 482, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "tob": 449, "todai": 400, "todo": [13, 79, 87, 91, 99, 157, 271, 375, 398, 416, 486, 501, 502, 575], "tof": 156, "togeth": [100, 102, 105, 109, 110, 125, 129, 220, 242, 371, 374, 387, 391, 394, 405, 417, 444, 454, 456, 457, 462, 466, 474, 476, 478, 481, 482, 483, 484, 489, 496, 507, 508, 571], "tol": 476, "toler": [86, 100, 129, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 351, 476], "tolist": 476, "tomato": 444, "toml": 422, "ton": [289, 486], "too": [374, 379, 380, 424, 425, 438, 439, 440, 476, 480], "took": 399, "tool": [6, 13, 189, 190, 192, 201, 202, 373, 377, 381, 383, 385, 387, 390, 391, 394, 400, 411, 419, 430, 433, 434, 459, 462, 467, 474, 476, 479, 483, 486, 487, 489, 499, 511, 545, 569, 570], "toolbox": [390, 430], "top": [109, 110, 361, 370, 374, 379, 390, 394, 396, 407, 433, 450, 452, 458, 462, 465, 467, 471, 473, 478, 497, 511, 524, 569, 571, 575], "top_five_ts_3fhl": 497, "tophat2dkernel": 121, "topic": [379, 383, 394, 402, 497], "total": [51, 67, 99, 101, 102, 105, 109, 110, 125, 126, 129, 130, 137, 169, 184, 188, 208, 219, 227, 231, 233, 234, 235, 250, 257, 269, 272, 298, 382, 398, 402, 406, 408, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 484, 485, 487, 490, 492, 494, 495, 496, 497, 498, 501, 507, 511, 516, 526, 536, 547, 557, 567, 570], "total_jfact": 472, "total_jfact_decai": 472, "total_model": 385, "total_obstim": 478, "total_stat": [208, 209, 444, 470, 476, 572], "touch": [86, 414], "tour": 491, "toward": [319, 381, 388, 394, 435], "tox": [338, 375, 377, 436, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 535, 543, 559], "tqdm": 511, "trace": [207, 208, 209, 422, 476], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374], "track": [85, 94, 374, 383, 389, 400, 427, 481], "tracker": [377, 388], "tradition": [482, 572], "train": 399, "traitlet": [390, 401], "traittyp": 401, "transfer": 401, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 157, 191, 193, 194, 199, 200, 220, 242, 303, 307, 330, 335, 374, 388, 390, 398, 402, 413, 415, 431, 434, 452, 458, 478, 484, 523, 528, 529, 575], "transit": [27, 364, 365, 381, 414, 415, 433, 488], "transit_map": 488, "transit_numb": 488, "transitsmap_crab": 488, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 509], "transpar": 389, "transport": 479, "transpos": 434, "trapezoid": [143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 276, 312], "trapz": 312, "trapz_loglog": 420, "trash": 416, "travi": [419, 421, 425], "treat": [95, 406, 438, 439, 448, 460, 574], "treatment": [425, 448, 456, 570], "trend": 460, "tri": [77, 382, 388], "tributor": 400, "tricki": 388, "trigger": [352, 374, 403, 488], "trim": [102, 105, 147, 148, 154, 159, 162, 165, 200, 202, 268], "tripl": 150, "trivial": 381, "troubl": 571, "troubleshoot": [406, 407, 408], "trough": 471, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 121, 122, 123, 124, 125, 129, 130, 132, 137, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 169, 175, 176, 179, 180, 182, 183, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 298, 301, 309, 310, 313, 331, 343, 345, 362, 367, 371, 374, 380, 387, 388, 389, 390, 397, 398, 401, 416, 420, 421, 432, 434, 435, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 493, 495, 496, 497, 501, 507, 509, 511, 516, 521, 523, 524, 527, 528, 529, 532, 533, 535, 556, 570, 573], "truelov": 53, "truncat": [132, 319, 425], "truncation_valu": [285, 291], "trust": [16, 84, 90, 104, 123], "trustworthi": 402, "truth": 484, "try": [16, 77, 84, 90, 104, 123, 189, 190, 192, 198, 201, 202, 374, 375, 384, 388, 394, 403, 404, 410, 415, 446, 448, 450, 460, 461, 465, 473, 476, 479, 497, 571], "ts2": 283, "ts3": 283, "ts_image_estim": 458, "ts_scan": [122, 124], "ts_threshold": [141, 280], "ts_threshold_ul": [468, 509], "ts_to_sigma": [459, 573], "tsimageestim": 433, "tsmap_est": 367, "tsmapestim": [118, 140, 367, 395, 398, 420, 421, 423, 425, 439, 452, 458, 511], "tstart": [88, 91, 387, 389, 451, 460, 464, 466, 467, 470, 486], "tstop": [88, 387, 389, 451, 460, 464, 466, 470, 486], "tt": [86, 94, 356, 357, 400, 461, 466, 470, 575], "tth_sec3": 194, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 123, 127, 132, 143, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 162, 165, 170, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 268, 271, 282, 284, 287, 313, 323, 330, 374, 479, 523], "turn": [83, 88, 375, 377, 388, 486, 568], "tutori": [82, 99, 119, 129, 131, 174, 374, 377, 378, 383, 386, 387, 388, 389, 390, 391, 392, 395, 404, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 492, 494, 495, 496, 497, 498, 511, 512, 514, 523, 568, 571], "tutorials_jupyt": [403, 491], "tutorials_python": 491, "tweak": [390, 425, 479], "twice": [121, 523, 574], "twinx": 443, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 101, 102, 105, 109, 110, 133, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 158, 160, 161, 165, 170, 172, 188, 189, 190, 191, 192, 194, 197, 198, 200, 201, 202, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 331, 341, 363, 368, 371, 373, 374, 375, 377, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 398, 399, 400, 402, 403, 404, 406, 427, 433, 435, 439, 449, 450, 456, 457, 459, 462, 467, 473, 474, 475, 476, 477, 479, 480, 482, 483, 484, 486, 488, 495, 496, 501, 507, 508, 509, 511, 520, 523, 524, 539, 573, 574], "txt": [124, 399, 401, 481, 487], "tyler": 427, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 101, 102, 104, 113, 121, 122, 123, 124, 126, 132, 163, 169, 187, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 301, 331, 380, 383, 384, 385, 386, 388, 389, 390, 393, 397, 398, 400, 402, 404, 405, 410, 418, 425, 431, 432, 433, 439, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 495, 496, 497, 499, 511, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571], "typeerror": [16, 84, 90, 104, 123, 301, 388, 398, 402], "typic": [122, 380, 383, 385, 392, 396, 397, 398, 399, 401, 406, 407, 445, 450, 454, 462, 464, 465, 466, 473, 474, 475, 477, 480, 482, 483, 499, 506, 507, 508, 516, 520, 569, 570], "typing_extens": [16, 84, 90, 104, 123], "typo": [374, 411, 437, 438], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 102, 105, 109, 110, 114, 116, 117, 122, 124, 126, 128, 132, 138, 139, 146, 148, 157, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 201, 202, 214, 215, 218, 222, 224, 225, 226, 230, 234, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 273, 274, 283, 299, 300, 301, 321, 369, 374, 377, 381, 382, 383, 389, 390, 391, 392, 397, 398, 401, 402, 414, 415, 416, 433, 434, 435, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 501, 508, 509, 511, 513, 518, 520, 521, 524, 528, 530, 531, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565], "u03c3": 459, "u18": [33, 38], "uc": [87, 91], "ufunc": [189, 190, 192, 198, 201, 202, 450, 470], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 133, 149, 239, 273, 274, 283, 290, 292], "ul": [67, 121, 122, 124, 125, 126, 129, 130, 132, 281, 457, 462, 467, 473], "ultim": 374, "un": [386, 400, 422, 481], "un3pyrbv": 470, "unambigu": 482, "unbehaun": 440, "unbin": [386, 387, 434], "unboundlocalerror": 374, "uncertaint": 392, "uncertainti": [52, 102, 105, 109, 110, 282, 284, 378, 391, 432, 446, 448, 468, 476, 484, 496, 569, 570, 572], "unchang": [102, 105, 109, 110, 114, 116, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 202, 433], "unclear": [374, 384, 385, 391, 401], "uncom": [390, 486], "undefin": 574, "under": [72, 91, 140, 374, 378, 383, 391, 400, 434, 435, 444, 449, 491, 495, 507, 573, 574], "underestim": 509, "underflow": 199, "underli": [87, 91, 197, 387, 446, 473, 479, 484, 497, 499, 508, 520, 523], "underscor": 374, "understand": [390, 411, 419, 420, 445, 448, 449, 450, 453, 460, 461, 466, 467, 471, 479, 480, 481, 486, 495, 496, 571], "undertak": 394, "unevenli": [133, 292], "unexpect": 488, "unfold": 570, "unfreez": [19, 20, 26, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 547], "unfreeze_al": [211, 213, 481], "unfrozen": 518, "unheard": 571, "uni": [402, 403], "uni_prior_stat_sum": 484, "unicod": [87, 91, 374], "unid": 67, "unidimension": 193, "unif": 419, "unifi": [87, 91, 378, 383, 388, 414, 417, 419, 420, 421, 422, 425, 434, 435, 570], "uniform": [157, 207, 330, 374, 383, 385, 386, 396, 398, 402, 416, 417, 421, 425, 445, 479, 484, 569], "uniform_filt": [127, 202], "uniformli": [387, 509], "uniformprior": [402, 484], "uninstal": 373, "union": [84, 86, 89, 90, 102, 104, 105, 123, 197, 336, 388, 389, 400, 401, 417, 507], "uniqu": [87, 91, 100, 146, 188, 189, 190, 191, 192, 198, 200, 201, 202, 211, 213, 220, 228, 242, 258, 268, 367, 384, 385, 386, 387, 397, 400, 420, 449, 474, 482, 488, 524, 568], "unique_id": 482, "unique_paramet": [211, 213], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 101, 102, 105, 107, 109, 110, 111, 114, 115, 116, 117, 122, 124, 126, 128, 132, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 169, 172, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 210, 212, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 283, 292, 299, 300, 301, 331, 345, 346, 347, 349, 358, 359, 360, 363, 364, 365, 369, 375, 383, 385, 388, 390, 392, 397, 398, 402, 414, 415, 417, 425, 427, 433, 434, 436, 437, 438, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 501, 503, 504, 505, 508, 509, 511, 513, 515, 516, 518, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570], "unit_string_format": [439, 443], "unitbas": 301, "uniti": [127, 191, 270, 437, 530], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 228, 268], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [443, 451, 453, 456, 458, 464, 467, 486], "univers": [189, 190, 192, 198, 201, 202, 570], "univsers": 20, "unknown": [101, 284, 452, 476, 572, 573], "unless": [90, 93, 95, 125, 126, 129, 132, 165, 301, 373, 380, 399, 401, 477], "unlik": [87, 91, 280, 381, 392], "unmaintain": 415, "unmask": [87, 91], "unnam": [87, 91, 195], "unnecessari": [425, 436, 456], "unneed": 439, "unphys": 574, "unrealist": 374, "unrel": 575, "unreli": 486, "unsaf": 374, "unstabl": [374, 486], "unsupport": 391, "untar": 486, "until": [374, 377, 381, 388, 399, 432], "unus": [390, 417, 419], "unusu": 379, "unweight": [105, 110], "unzip": 486, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 101, 126, 128, 132, 150, 156, 158, 160, 197, 301, 374, 375, 378, 379, 381, 382, 383, 386, 388, 390, 391, 392, 394, 396, 400, 402, 404, 405, 406, 408, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 425, 429, 431, 432, 433, 434, 435, 448, 449, 456, 459, 460, 484, 486, 487, 524, 571], "upcast": 301, "upcom": [382, 383], "updat": [15, 16, 84, 87, 90, 91, 103, 104, 108, 123, 196, 210, 212, 220, 242, 270, 280, 321, 341, 374, 377, 379, 380, 381, 382, 383, 386, 391, 396, 398, 400, 401, 403, 404, 406, 407, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 431, 432, 433, 434, 436, 439, 440, 479, 482, 522, 523], "update_config": 15, "update_forward_ref": [16, 84, 90, 104, 123], "update_from_dict": [210, 212], "update_link_label": [220, 242], "update_parameters_from_t": [220, 242], "upgrad": [188, 373, 399, 407], "upload": [391, 403], "upon": [102, 105, 109, 110, 383, 453, 481, 486, 507], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 101, 121, 122, 123, 124, 125, 126, 129, 130, 132, 146, 194, 199, 207, 214, 215, 218, 219, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 239, 243, 245, 247, 248, 249, 250, 254, 257, 259, 261, 262, 263, 264, 267, 269, 271, 272, 281, 282, 284, 401, 410, 421, 425, 432, 433, 434, 440, 448, 452, 462, 465, 474, 475, 478, 495, 507, 509], "upper_error": 124, "upsampl": [159, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 416, 436], "upsample_geom": 159, "upstream": [374, 377], "upward": [282, 284], "url": 382, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 276, 281, 283, 285, 297, 299, 301, 309, 312, 313, 314, 321, 322, 325, 330, 331, 338, 341, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 461, 462, 464, 466, 467, 468, 470, 471, 472, 473, 475, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 497, 500, 501, 511, 513, 514, 515, 517, 521, 522, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 575, 576], "usabl": 374, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 104, 119, 123, 129, 131, 174, 187, 188, 197, 200, 325, 380, 384, 385, 387, 389, 393, 398, 418, 439, 440, 473, 478, 480, 481, 571], "use_cach": 243, "use_center_as_plot_label": 194, "use_enum_valu": [16, 84, 90, 104, 123], "use_evaluation_region": [220, 242], "use_fft": 202, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [169, 176, 179, 180, 182, 183, 425, 445], "useless": 486, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 418, 425, 426, 432, 433, 434, 436, 449, 452, 459, 460, 461, 474, 475, 477, 479, 480, 481, 482, 483, 491, 495, 508, 509, 510, 511, 516, 520, 523, 526, 532, 536, 557, 567, 568, 571], "userdataset": 386, "usernam": 377, "userwarn": [448, 450, 457, 458, 462, 487], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 571, "usual": [29, 82, 83, 122, 138, 143, 144, 145, 157, 198, 309, 374, 375, 377, 379, 380, 381, 382, 388, 389, 394, 400, 404, 439, 443, 444, 445, 446, 448, 450, 451, 453, 454, 458, 460, 461, 464, 465, 466, 467, 470, 471, 472, 474, 480, 483, 488, 496, 499, 507, 511, 513, 514, 515, 517, 520, 524, 529, 568, 570, 571, 572], "ut1": 575, "utc": [86, 88, 104, 123, 355, 460, 465, 466, 470, 479, 482, 558, 559, 560, 561, 562, 563, 564, 565, 566, 575], "utf": [87, 91], "utf8": [16, 84, 90, 104, 123], "util": [6, 96, 104, 111, 114, 115, 116, 123, 124, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 178, 179, 180, 181, 182, 183, 184, 185, 186, 279, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 374, 383, 385, 386, 387, 388, 398, 413, 416, 417, 418, 419, 426, 427, 430, 431, 432, 433, 434, 435, 439, 440, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 499, 500, 511, 570], "utilis": [139, 375, 406, 408, 443, 448, 452, 459, 471, 475, 479, 483, 488, 496, 508, 511, 518], "v": [26, 31, 32, 37, 87, 91, 150, 156, 158, 159, 160, 162, 171, 178, 196, 269, 280, 305, 377, 382, 389, 390, 401, 402, 403, 404, 427, 443, 465, 472, 483, 495], "v0": [95, 381, 382, 385, 386, 388, 391, 393, 394, 399, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 434, 435, 436, 460, 461, 477, 481, 486], "v1": [13, 16, 84, 90, 104, 123, 374, 381, 383, 385, 390, 391, 392, 393, 399, 400, 403, 406, 408, 419, 420, 421, 427, 432, 436, 437, 438, 439, 440, 462, 487, 543], "v2": [400, 401, 425, 433, 440], "v3": 417, "v_0": [37, 49], "v_glat": 308, "v_glon": 308, "va": 528, "vagu": 379, "vain": 377, "val": [87, 91, 189, 190, 192, 198, 201, 202, 211, 213, 479, 523], "valfmt": 363, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 106, 122, 123, 126, 140, 161, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 301, 319, 373, 374, 383, 387, 390, 391, 400, 419, 427, 436, 445, 448, 470, 476, 478, 479, 482, 487, 509, 511, 516, 570], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 470, "valid_tim": 470, "validate_al": 401, "validate_assign": [16, 84, 90, 104, 123, 401], "validate_default": [16, 84, 90, 104, 123], "validate_earth_loc": 90, "validate_loc": 401, "validate_scalar": 90, "validate_zenith_angl": 401, "validationerror": [16, 84, 90, 104, 123, 401], "valle": 38, "valleespir": 501, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 104, 105, 109, 110, 112, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 165, 169, 175, 176, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 280, 281, 282, 284, 285, 287, 288, 289, 292, 301, 305, 313, 314, 328, 331, 341, 345, 360, 363, 364, 365, 375, 377, 380, 385, 386, 388, 390, 392, 394, 397, 398, 401, 416, 419, 425, 436, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 486, 487, 488, 489, 495, 496, 497, 499, 503, 504, 505, 509, 511, 515, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 571, 572, 573, 574], "value_rang": 91, "value_scan": 281, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 220, 242, 374, 388, 401], "values_equ": [87, 91], "values_err": 468, "values_scal": [143, 144, 145, 198, 202, 234, 266, 270, 271, 313, 437, 439, 461, 477], "vanilla": [87, 91], "var": [290, 406, 408], "vari": [68, 103, 108, 129, 157, 207, 313, 341, 386, 388, 389, 399, 419, 422, 442, 444, 453, 458, 459, 461, 469, 470, 478, 482, 484, 487, 491], "variability_amplitud": 471, "variability_amplitude_100": 471, "variability_amplitude_error": 471, "variability_amplitude_signific": 471, "variability_estim": [442, 469, 471], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 104, 123, 133, 134, 202, 282, 284, 287, 288, 289, 290, 292, 297, 312, 339, 374, 375, 377, 387, 389, 390, 404, 406, 408, 414, 415, 431, 432, 433, 439, 440, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 495, 496, 497, 516, 571, 572, 573], "varianc": [96, 135, 136, 289, 290, 300, 389, 440, 483, 518], "variant": 404, "variat": [134, 235, 289, 380, 390, 443, 471, 477, 478, 521, 573], "varieti": [385, 569], "variou": [119, 125, 126, 129, 130, 132, 139, 374, 380, 384, 386, 389, 398, 401, 404, 406, 425, 426, 440, 444, 446, 449, 452, 457, 459, 465, 475, 476, 495, 507, 511, 569, 575], "vast": [391, 427], "vaughan": [290, 471], "vaughan2003": 290, "ve": [374, 375, 377, 571], "vector": [187, 188, 189, 190, 192, 197, 198, 200, 201, 202, 479, 515, 523], "vega": 434, "vel": 468, "vel_di": [45, 501], "vela": [66, 413, 446, 468, 497], "veloc": [31, 32, 37, 45, 49, 305, 308], "ver": 479, "verbos": [11, 82, 375, 397, 571, 573], "veri": [63, 87, 91, 138, 207, 364, 373, 374, 375, 376, 379, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 401, 404, 435, 443, 444, 451, 471, 473, 475, 476, 479, 484, 487, 497, 507, 511, 524, 533, 534, 568, 570, 571, 572], "verif": [100, 220, 242, 337, 340, 457, 487], "verifi": [211, 213, 232, 280, 374, 387, 473, 511], "verifywarn": 511, "verita": [97, 406, 411, 487], "versa": 188, "version": [11, 78, 85, 87, 91, 124, 177, 373, 375, 377, 378, 381, 382, 383, 384, 388, 391, 394, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 418, 419, 424, 426, 427, 429, 432, 433, 434, 436, 437, 439, 440, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 509, 571], "versu": [143, 149, 280, 282, 284, 486, 505], "vert": 249, "vertex": 388, "vhe": [445, 499], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 103, 108, 190, 195, 205, 373, 375, 377, 382, 386, 388, 389, 390, 391, 392, 393, 395, 397, 400, 401, 402, 403, 404, 406, 407, 414, 422, 430, 432, 433, 434, 438, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 493, 495, 496, 497, 511, 515, 520, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 571, 575], "viabil": 401, "vice": 188, "victor": 429, "view": [83, 87, 91, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 158, 160, 161, 166, 189, 190, 192, 196, 198, 201, 202, 228, 303, 307, 361, 374, 388, 415, 420, 425, 427, 434, 435, 448, 450, 454, 456, 460, 470, 474, 477, 478, 480, 486, 487, 511, 513, 514, 515, 516, 517, 518, 520, 570], "vika": 425, "vin\u00edciu": 432, "viridi": [450, 472], "virtual": [377, 404, 406, 407, 408, 571], "visibl": [87, 91, 364, 365, 382, 425, 443, 460, 488, 496, 497, 570], "vision": 379, "visit": 461, "visual": [6, 190, 202, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 388, 420, 421, 439, 440, 448, 450, 454, 456, 458, 461, 470, 476, 477, 483, 489, 496, 497, 511, 520, 525, 528, 569], "visualis": [371, 386, 388, 395, 421, 436, 450, 477, 482, 484, 486, 511], "vkplx0x4": 470, "vline": [505, 528, 529], "vmax": [102, 105, 109, 110, 364, 365, 453, 456, 458, 464, 474, 479, 480, 487, 488, 495, 496, 520], "vmin": [102, 105, 109, 110, 364, 365, 452, 456, 464, 474, 479, 480, 487, 488, 495, 496, 520], "vnh1i2z": 478, "volum": [27, 193, 197, 200], "vorokh": [430, 431], "voruganti": [432, 433], "vstack": [83, 86, 387], "vuillaum": [400, 433], "vx": [305, 308, 399], "vxfhrhqk": 456, "vy": [305, 308], "vz": [305, 308], "w": [26, 31, 49, 86, 186, 199, 298, 375, 399, 452, 454, 462, 472, 478, 482, 484, 520, 572, 574], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 102, 104, 117, 123, 125, 126, 129, 132, 165, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 367, 374, 377, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 414, 417, 418, 419, 420, 421, 422, 429, 433, 434, 435, 436, 437, 438, 439, 444, 446, 448, 454, 456, 458, 462, 478, 484, 486, 487, 488, 489, 497, 571], "wagner": 471, "wai": [33, 38, 83, 87, 91, 194, 283, 325, 331, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 394, 395, 398, 400, 406, 407, 408, 410, 413, 417, 433, 434, 446, 448, 450, 453, 456, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 486, 487, 488, 489, 491, 501, 508, 510, 511, 515, 524, 569, 571, 573], "wait": [374, 403, 404], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 104, 107, 123, 146, 172, 197, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 374, 376, 377, 379, 380, 381, 384, 388, 389, 390, 392, 393, 394, 404, 405, 406, 407, 408, 410, 411, 414, 434, 445, 448, 449, 450, 451, 453, 460, 461, 464, 465, 467, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 495, 496, 497, 515, 568, 571, 572, 573, 574, 575], "ward": 299, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 104, 123, 190, 210, 211, 212, 213, 266, 267, 268, 270, 360, 399, 404, 416, 433, 438, 439, 440, 443, 451, 452, 453, 456, 457, 458, 460, 461, 464, 467, 468, 486, 487, 511, 535, 543, 571], "warn_miss": 87, "warn_with_traceback": 374, "wasn": [381, 434], "watch": [487, 575], "water": [406, 488], "watson": 415, "wavelength": 393, "wavelet": [413, 431], "wc": [13, 16, 83, 102, 105, 109, 126, 164, 172, 173, 177, 188, 189, 190, 192, 197, 198, 200, 201, 202, 217, 220, 221, 229, 232, 242, 244, 255, 256, 260, 266, 270, 334, 369, 374, 380, 388, 393, 415, 416, 417, 419, 425, 433, 434, 438, 440, 448, 449, 452, 453, 454, 456, 458, 462, 465, 468, 472, 474, 477, 478, 480, 481, 482, 487, 495, 496, 497, 520, 523, 528, 529, 530, 535], "wcda": [57, 70], "wcs_geom": [197, 220, 242, 479, 524], "wcs_geom_3d": 479, "wcs_geom_cel": 479, "wcs_map": [201, 202, 367], "wcs_tile": [188, 190], "wcsax": [102, 105, 109, 110, 190, 197, 198, 202, 220, 242, 369, 371, 456, 479, 497, 527, 531, 532, 533], "wcsconfig": 16, "wcsgeom": [23, 83, 102, 105, 109, 110, 111, 113, 115, 121, 122, 132, 148, 157, 159, 169, 182, 183, 187, 188, 197, 201, 202, 216, 217, 221, 229, 232, 244, 246, 255, 256, 260, 266, 270, 375, 380, 388, 415, 418, 419, 420, 425, 438, 440, 448, 452, 453, 458, 460, 461, 462, 464, 468, 472, 474, 475, 477, 478, 479, 480, 482, 487, 488, 496, 497, 507, 509, 518, 520, 521, 524, 527, 529, 530, 531, 532], "wcslib": 374, "wcsmap": [189, 190, 192, 202, 436], "wcsndmap": [102, 105, 111, 115, 117, 132, 138, 157, 159, 162, 164, 166, 171, 172, 173, 174, 177, 182, 183, 188, 189, 190, 192, 198, 200, 201, 203, 204, 220, 242, 258, 266, 361, 367, 369, 380, 418, 419, 420, 422, 425, 427, 434, 436, 439, 440, 452, 453, 462, 472, 474, 478, 479, 487, 497, 507, 509, 517, 520], "wcsprm": 535, "wcsshape": 479, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 101, 132, 171, 197, 200, 210, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 274, 349, 374, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 421, 425, 427, 432, 433, 434, 435, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 493, 495, 496, 497, 508, 515, 516, 518, 520, 523, 534, 537, 547, 568, 571, 572, 573, 574, 575], "weak": [393, 475, 484], "weaker": 280, "weakli": 480, "web": [87, 91, 382, 400, 403, 404, 410, 411, 425, 433, 473, 486], "webpag": [376, 382, 394, 400, 403, 433, 436], "wedg": 388, "week": [377, 382, 392, 394, 399, 403], "weekli": [380, 383, 387, 388, 465], "wegen": [433, 434], "weigh": [159, 162, 484], "weight": [67, 105, 110, 147, 148, 154, 157, 159, 162, 188, 189, 190, 192, 197, 198, 200, 201, 202, 251, 268, 402, 435, 439, 459, 484, 507, 523], "weighted_chi2_paramet": 459, "weighted_kernel": 157, "welcom": [379, 388, 487], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 105, 110, 114, 116, 121, 122, 130, 188, 192, 194, 198, 200, 210, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 364, 365, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 410, 411, 414, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 433, 434, 435, 439, 440, 444, 445, 451, 454, 459, 461, 465, 467, 470, 474, 475, 476, 477, 478, 479, 480, 482, 486, 487, 491, 495, 496, 497, 507, 508, 509, 520, 523, 524, 568, 569, 571, 573], "went": 414, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 134, 288, 374, 379, 380, 381, 382, 387, 389, 390, 391, 392, 393, 394, 395, 397, 399, 402, 404, 414, 417, 418, 419, 420, 421, 422, 425, 428, 433, 434, 437, 457, 468, 470, 480, 484, 486, 574], "wg": 403, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 274, 331, 375, 380, 388, 391, 393, 394, 401, 404, 412, 462, 472, 473, 475, 476, 486, 487, 491, 496, 499, 507, 524, 556, 571, 572, 575], "whatev": [388, 390, 391, 571], "whatsnew": 403, "wheel": 391, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 121, 122, 123, 124, 137, 147, 148, 154, 159, 161, 162, 172, 175, 189, 190, 192, 194, 196, 198, 201, 202, 207, 208, 214, 215, 218, 220, 222, 224, 225, 226, 230, 234, 236, 237, 239, 242, 243, 245, 247, 248, 249, 251, 254, 259, 261, 262, 263, 264, 267, 270, 271, 313, 373, 374, 375, 377, 379, 380, 381, 384, 386, 388, 389, 391, 394, 399, 400, 401, 402, 406, 407, 408, 419, 427, 428, 433, 435, 438, 439, 440, 444, 450, 454, 458, 461, 462, 465, 466, 468, 473, 476, 478, 479, 482, 483, 486, 487, 507, 509, 511, 516, 518, 522, 523, 570, 572, 573, 574, 575], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 104, 122, 123, 124, 127, 132, 146, 147, 148, 154, 159, 162, 164, 175, 187, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 285, 288, 291, 293, 301, 338, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 406, 408, 410, 416, 428, 434, 443, 448, 453, 460, 461, 473, 478, 479, 480, 482, 484, 486, 487, 488, 497, 499, 507, 508, 511, 516, 523, 528, 529, 530, 533, 534, 537, 570, 571, 572, 573, 574, 575], "wherea": [380, 388, 391, 571], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 102, 104, 105, 107, 109, 110, 122, 123, 124, 125, 132, 143, 144, 145, 146, 149, 150, 151, 153, 156, 158, 160, 161, 175, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 207, 214, 215, 218, 220, 222, 224, 225, 226, 230, 234, 236, 237, 239, 242, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 268, 270, 271, 283, 301, 310, 337, 340, 342, 343, 371, 379, 381, 388, 391, 393, 394, 401, 439, 451, 464, 475, 478, 479, 497, 523, 572, 573], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 107, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 138, 139, 143, 144, 145, 146, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 175, 176, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 207, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 229, 230, 232, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 274, 280, 282, 283, 284, 288, 289, 290, 292, 297, 299, 313, 323, 333, 334, 352, 361, 363, 368, 370, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 411, 415, 416, 417, 419, 420, 421, 422, 425, 428, 434, 436, 439, 443, 444, 445, 448, 451, 452, 453, 454, 456, 459, 460, 461, 462, 465, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 495, 496, 497, 501, 502, 507, 508, 509, 511, 513, 514, 515, 517, 518, 520, 522, 523, 524, 525, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574], "whichev": [188, 189, 190], "while": [87, 91, 105, 189, 190, 192, 194, 198, 201, 202, 374, 377, 379, 380, 381, 383, 386, 387, 389, 393, 395, 396, 398, 399, 400, 403, 404, 406, 443, 448, 450, 453, 461, 467, 468, 474, 475, 477, 478, 479, 481, 482, 507, 509, 511, 522, 524, 571], "whilst": [375, 483, 491], "whippl": 97, "whirlwind": 491, "white": [289, 363, 364, 458, 468, 476, 481, 499, 524], "whitespac": 319, "who": [400, 472, 499], "whole": [95, 117, 166, 169, 176, 179, 180, 182, 183, 188, 189, 190, 192, 201, 202, 243, 273, 282, 284, 374, 380, 386, 389, 400, 445, 448, 456, 461, 465, 468, 474, 482, 487, 489, 568], "whose": [400, 404, 461, 517, 529], "why": [374, 375, 379, 381, 388, 476, 524], "wide": [381, 400, 401, 415, 434, 446, 457, 570], "wider": [466, 480, 518], "widget": [189, 190, 192, 198, 201, 202, 456, 464, 479, 495, 496], "width": [16, 27, 68, 83, 87, 91, 102, 105, 109, 110, 111, 112, 114, 115, 116, 117, 127, 132, 146, 147, 148, 151, 154, 157, 159, 162, 164, 169, 174, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 217, 220, 221, 229, 231, 232, 242, 244, 255, 256, 258, 260, 266, 268, 270, 364, 365, 390, 397, 435, 449, 450, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 468, 472, 473, 474, 477, 478, 479, 480, 482, 487, 488, 495, 496, 497, 518, 520, 521, 522, 523, 524, 528, 529, 530, 532, 533, 534], "width_err": 473, "width_error": 68, "width_min": 197, "width_pix": [188, 189, 190], "widthconfig": 16, "wiki": [34, 83, 88, 425, 486, 489], "wikipedia": [34, 83, 88, 330, 388, 392], "wilei": 140, "wilk": [280, 509, 573], "willing": 377, "wind": [50, 454, 459, 482, 502], "window": [112, 373, 374, 381, 391, 404, 405, 406, 408, 414, 430, 434, 452, 473, 570, 571, 573], "wise": [19, 20, 26, 87, 91, 138, 139, 190, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 402, 427, 454, 456, 507], "wish": [197, 377, 392, 459, 476], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [384, 385, 386, 389, 396, 398], "withdrawn": [378, 379, 384, 385, 386, 389, 396, 398], "within": [125, 128, 138, 188, 202, 219, 220, 221, 227, 231, 232, 233, 234, 235, 242, 250, 255, 257, 258, 269, 272, 373, 374, 375, 379, 383, 388, 390, 391, 392, 393, 394, 397, 399, 400, 402, 404, 405, 406, 408, 428, 431, 433, 437, 439, 449, 450, 456, 459, 465, 466, 467, 470, 473, 475, 477, 478, 479, 482, 483, 487, 491, 497, 507, 510, 511, 570], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 129, 149, 187, 188, 193, 197, 200, 371, 374, 377, 379, 382, 384, 388, 389, 390, 391, 393, 398, 404, 415, 416, 420, 449, 452, 456, 457, 470, 472, 478, 479, 480, 495, 511, 522, 523, 524, 566, 571, 573], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 472], "wo": 468, "wobbl": [95, 467, 486], "wobbleregionfind": 427, "wobbleregionsfind": 450, "wolfram": [328, 329], "women": 430, "won": [87, 91, 117, 121, 125, 129, 132, 346, 399, 456, 479, 486, 574], "wong": 417, "wood": [381, 431, 433, 434], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 511], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 124, 199, 338, 373, 374, 375, 377, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 426, 429, 430, 431, 432, 433, 434, 435, 436, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497, 507, 511, 521, 523, 535, 537, 543, 559, 565, 566, 571], "workaround": 391, "workflow": [377, 382, 383, 390, 395, 399, 404, 419, 449, 454, 491, 495, 496, 512], "workshop": 383, "workspac": 377, "world": [83, 200, 220, 242, 374, 380, 458, 497, 523], "worst": 377, "worth": [374, 499], "would": [16, 84, 87, 90, 91, 95, 104, 123, 189, 190, 192, 198, 201, 202, 374, 377, 380, 381, 382, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 416, 425, 446, 448, 451, 452, 464, 476, 479, 480, 482, 484, 487, 524], "wouldn": 388, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 254, 309, 388, 418], "wrap_at": 385, "wrap_coord": 194, "wrapper": [56, 243, 254, 313, 388, 389, 416, 419, 499, 511], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 101, 102, 105, 107, 109, 110, 122, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 189, 190, 192, 196, 198, 201, 202, 208, 220, 234, 242, 266, 267, 268, 269, 270, 343, 352, 375, 377, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 396, 397, 398, 400, 401, 402, 404, 410, 413, 419, 422, 427, 429, 432, 433, 434, 435, 440, 443, 448, 456, 457, 460, 462, 477, 481, 482, 486, 487, 493, 495, 496, 511, 516, 572, 574], "write_arf": 107, "write_bkg": 107, "write_covari": [15, 100, 208, 220, 242], "write_dataset": 15, "write_ds9": 482, "write_model": 15, "write_pha": 107, "write_rmf": 107, "writeabl": 402, "writer": [87, 91, 394, 401], "writeto": [86, 143, 144, 145, 149, 150, 151, 153, 156, 158, 160, 161, 460], "written": [88, 100, 101, 102, 105, 107, 109, 110, 122, 124, 147, 148, 154, 159, 162, 189, 190, 192, 196, 198, 201, 202, 204, 374, 375, 377, 379, 383, 384, 394, 400, 402, 437, 443, 461, 481, 484, 499, 507, 508, 511, 524, 570], "wrong": [374, 423, 437, 438, 439], "wrote": 400, "wrt": [83, 159, 162, 374, 392, 467, 566], "wstat": [105, 110, 294, 295, 386, 413, 431, 432, 444, 448, 449, 451, 454, 458, 468, 474, 484, 507, 570], "wstatcountsstatist": [468, 573], "wt": [26, 472], "wun": 417, "www": [26, 67, 87, 91, 140, 394, 486, 511], "wyatt": [413, 570], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 102, 109, 127, 138, 139, 140, 144, 194, 198, 199, 207, 210, 212, 214, 217, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 262, 263, 264, 269, 270, 283, 289, 290, 293, 304, 305, 306, 308, 312, 314, 319, 328, 363, 366, 367, 374, 375, 379, 381, 382, 383, 388, 399, 403, 406, 408, 446, 451, 452, 458, 461, 468, 470, 471, 473, 476, 477, 479, 484, 487, 497, 505, 511, 528, 529, 571, 573], "x27": [475, 477], "x86_64": [443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "x_": 127, "x_0": [189, 190, 192, 198, 201, 202], "x_1": 313, "x_2": 313, "x_3": 313, "x_bkg": 468, "x_edg": 128, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [189, 190, 192, 198, 201, 202], "x_j": 127, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [127, 326, 328, 462], "x_min": [127, 326, 328, 462], "x_n": [189, 190, 192, 198, 201, 202], "x_r_0": 232, "x_ref": [127, 462], "x_sigma": 229, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [207, 476], "xarg": 374, "xaxi": [475, 511], "xerr": [443, 470, 484], "xf": 486, "xfail": 374, "xlabel": [375, 439, 454, 467, 470, 484, 487, 503, 504, 505, 528, 565], "xlim": [361, 456, 484, 487, 505], "xm4o_e": 451, "xmax": [17, 18, 21, 22, 24, 25, 27, 198, 402], "xmin": [17, 18, 21, 22, 24, 25, 27, 198, 402], "xml": [383, 384, 385, 418, 432, 434, 486, 499], "xmltodict": [426, 486], "xref": 127, "xspec": [222, 271, 298, 432, 444, 572], "xunit": [450, 537], "xviii": 394, "xx": [385, 400], "xxx": [87, 91, 379, 400], "xxx_by_coord": 479, "xxxx": 511, "xy": [448, 458, 462, 528], "xy5kgrjz": 470, "xy_posit": [33, 34, 38], "xytext": 528, "xyz": 403, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 138, 139, 144, 194, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 304, 305, 306, 308, 312, 314, 366, 374, 388, 399, 406, 408, 439, 443, 452, 458, 461, 470, 476, 484, 505, 511], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [207, 476], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 280, 337, 340, 342, 343, 373, 382, 383, 385, 386, 387, 390, 391, 396, 401, 402, 404, 405, 417, 418, 419, 422, 427, 436, 440, 443, 445, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 496, 497, 510, 568, 569, 570, 571], "yaml_str": [220, 242, 449], "yaxi": [446, 475, 511], "ye": 404, "year": [45, 61, 65, 78, 374, 379, 381, 382, 384, 391, 394, 395, 399, 401, 404, 431, 433, 434, 457, 459, 473, 486, 503, 504, 505, 506], "yearli": [407, 432], "yellow": 364, "yerr": [468, 470], "yet": [89, 373, 374, 377, 379, 381, 388, 391, 394, 395, 441, 446, 449, 495, 575], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 189, 190, 192, 198, 201, 202, 338, 381, 387, 388, 393, 395, 397, 402, 480, 572, 573, 574], "yk04": [45, 48], "yk04b": 48, "ylabel": [375, 467, 470, 484, 487, 503, 504, 505, 528, 565], "ylim": [361, 444, 454, 484, 487, 503, 505, 544, 553, 554, 555], "ymax": [528, 529], "ymin": [528, 529], "yml": [377, 391, 403, 404, 405, 406, 408, 433], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 101, 104, 107, 123, 124, 138, 144, 146, 149, 172, 189, 190, 192, 198, 201, 202, 207, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 273, 280, 373, 374, 375, 376, 377, 379, 381, 384, 388, 391, 392, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 425, 433, 434, 435, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 458, 460, 461, 464, 466, 467, 468, 470, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 495, 496, 497, 507, 508, 511, 514, 518, 522, 545, 568, 571, 572, 573, 574, 575], "your": [16, 19, 20, 26, 84, 90, 99, 104, 123, 214, 215, 218, 222, 224, 225, 226, 230, 236, 237, 239, 243, 245, 247, 248, 249, 254, 259, 261, 262, 263, 264, 267, 271, 373, 374, 375, 377, 379, 381, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 419, 420, 425, 434, 435, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 506, 511, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 570, 573], "yourself": [571, 572], "yr": [45, 52, 53, 501, 503, 504, 505], "yscale": [454, 563], "yt": 374, "yu": 417, "yunit": [448, 450, 472, 473, 487, 548], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 433, "yy": 400, "yyyi": 400, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 304, 305, 308, 399, 400, 406, 408, 472, 501, 537], "z0oaxnw": 470, "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 429, "zanin": [433, 434], "zd": 83, "zen": 483, "zen_pnt": 483, "zenith": [443, 457, 483, 486, 487, 488, 516], "zenith_angl": [83, 401, 487, 497], "zenodo": [400, 427, 486], "zero": [52, 53, 67, 87, 91, 100, 102, 105, 109, 110, 132, 138, 146, 147, 148, 151, 154, 159, 175, 189, 190, 192, 198, 201, 202, 246, 268, 270, 313, 319, 331, 374, 418, 421, 436, 473, 478, 479, 484, 574], "zhao": [27, 440], "zhen": 140, "zip": [389, 402, 403, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 505, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "zl": [26, 472], "zone": 468, "zsh": 375, "zt": [26, 472], "zug4fpm7": 470, "z\u00e9": 432, "\u00e0": 431, "\u0261\u00e6m\u0259pa\u026a": 511, "\u03b3": [134, 499, 570], "\u03c3": 459}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 449, 461, 489, 495], "0": [383, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "1": [379, 383, 402, 412, 413, 420, 421, 423, 428, 436, 437, 438, 439, 440, 441, 484], "10": [388, 412, 414], "10th": 436, "11": [389, 412, 415], "12": [390, 412, 416], "12th": 427, "13": [391, 412, 417, 426, 429], "13th": 439, "14": [392, 412, 418], "14th": 437, "15": [412, 419], "16": [393, 412, 420], "16th": 428, "17": [412, 421], "18": [394, 412, 422, 423, 424], "19": [395, 412, 425], "19th": 424, "1d": [449, 451, 457, 465, 466, 491], "1dc": 486, "2": [380, 381, 402, 412, 424, 426, 438, 440, 484, 550], "20": [396, 412, 427, 428, 430], "2014": 413, "2015": [426, 429], "2016": [430, 431], "2017": 432, "2018": [433, 434, 435], "2019": [414, 415, 416, 417, 418, 419], "2020": [420, 421, 422, 423, 424], "2021": 425, "2022": [427, 428, 436], "2023": [437, 438, 439], "2024": 440, "21": 397, "2155": 475, "22": [398, 431], "22nd": 425, "23": [399, 434], "24": 400, "25": [401, 413], "26": [402, 417], "28": [414, 432, 433], "29": [415, 435], "29th": 440, "2d": [453, 491], "3": [381, 402, 412, 419, 429, 441], "30": [416, 418], "304": 475, "32": 374, "3955": 402, "3d": [456, 457, 464, 465, 491], "3fgl": [542, 553], "3fhl": 457, "4": [382, 412, 430], "4122": 402, "4fgl": [554, 555], "4th": 422, "5": [383, 412, 431], "6": [384, 412, 432], "64": 374, "6th": [423, 438], "7": [381, 385, 412, 433], "8": [386, 412, 434], "9": [387, 412, 435], "A": [448, 475], "As": 517, "In": 375, "ON": [445, 450, 457], "On": 451, "The": [380, 404, 457, 459, 475, 476, 484, 508, 520], "To": [374, 375, 394, 511], "about": 484, "abov": 459, "absolute_tim": 355, "absorpt": [397, 444, 537], "abstract": [379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "accept": 377, "access": [452, 474, 475, 479, 488, 508], "accessor": 523, "account": 444, "action": [374, 394], "ad": 479, "adapt": 452, "adaptiveringbackgroundmak": 164, "add": [385, 481], "add_colorbar": 362, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [397, 402, 517, 569], "aeff_2d": 513, "against": 450, "aim": 481, "algorithm": 470, "alia": 397, "all": 466, "along": 401, "altern": [382, 385, 387, 388, 389, 390, 391, 392, 394, 395, 398, 401], "amplitud": [402, 484], "an": [374, 443, 460, 461, 474, 480], "anaconda": 407, "analysi": [0, 11, 15, 380, 383, 443, 445, 448, 449, 450, 451, 456, 457, 458, 465, 468, 491, 495, 507, 510, 569], "analysisconfig": 16, "angl": [513, 514, 515, 517], "angular": 524, "annihil": 472, "annotate_heatmap": 363, "api": [6, 374, 375, 396, 398, 401, 402, 436, 439, 440, 475, 491, 496], "apply_edisp": [111, 115], "approach": [389, 445, 446, 449, 451, 452, 453, 454, 457, 460, 461, 462, 464, 465, 466, 467, 470, 471, 476, 480, 481, 483, 495, 496], "apr": [421, 426, 430, 432], "arbitrari": 401, "area": [477, 486, 513], "argument": [374, 388], "arm": 501, "asmoothmapestim": 117, "assert": 374, "assert_quantity_allclos": 349, "assert_skycoord_allclos": 350, "assert_time_allclos": 351, "assess": [456, 476], "assign": [466, 481], "astro": [1, 499, 502], "astronomi": 389, "astrophys": [1, 500, 501, 502], "astropi": [374, 399], "asymmetr": 477, "attribut": [374, 375, 385], "aug": [413, 429], "author": 400, "authorship": 400, "avail": 473, "ax": [479, 524], "axi": [374, 516], "backend_default": 316, "background": [385, 389, 393, 396, 402, 454, 459, 460, 478, 481, 486, 487, 495, 514, 518, 519, 520, 521, 572], "background2d": 143, "background3d": 144, "backgroundirf": 145, "backgroundirfmodel": 385, "backgroundmodel": 385, "backport": 374, "base": [398, 401, 522], "basic": [458, 479], "bayesian": 471, "between": 396, "bin": [389, 443, 459, 524], "binder": 404, "bit": 374, "bkg_2d": 514, "bkg_3d": 514, "block": 471, "boundari": 480, "branch": 403, "break": 374, "broken": [375, 538, 552], "brokenpowerlawspectralmodel": 214, "bsd": 374, "bug": [427, 436, 439, 440], "bugfix": 403, "build": [375, 377, 404, 465, 466], "built": 568, "bundl": 374, "burkertprofil": 17, "butterfli": 496, "call": 385, "candid": [403, 452], "caplog": 374, "cartesian": 302, "case": [380, 384, 402, 574], "casebattacharya1998": 28, "cash": [285, 572, 573], "cash_sum_cython": 286, "cashcountsstatist": 282, "catalog": [2, 473, 480, 481, 497, 506], "catalog_registri": 55, "caveat": 572, "cell": 374, "certif": 377, "cff": 400, "chain": [448, 450], "chang": [374, 395, 436, 439, 440], "changelog": 394, "character": 471, "check": [11, 374, 375, 409, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "checker": 348, "chi": 459, "choos": 375, "citat": 400, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 374, 375, 384, 385, 398, 401, 496, 517, 573], "clean": 393, "cli": 571, "click": 374, "clobber": 374, "clumpi": 499, "cluster": [13, 483], "code": [374, 375, 380, 383, 404], "codemeta": 400, "collect": 400, "colormap": 576, "colormap_hess": 364, "colormap_milagro": 365, "combin": [481, 508], "command": [11, 374, 571], "common": 475, "compar": [450, 465], "compound": [482, 539], "compound_region_to_region": 332, "compoundspectralmodel": 215, "comput": [442, 443, 447, 448, 449, 454, 455, 458, 463, 469, 476, 485, 490, 492, 494, 496, 498, 526, 536, 557, 567], "compute_chisq": 287, "compute_flux_doubl": 288, "compute_fpp": 289, "compute_fvar": 290, "compute_lightcurve_discrete_correl": 133, "compute_lightcurve_doublingtim": 134, "compute_lightcurve_fpp": 135, "compute_lightcurve_fvar": 136, "conda": 405, "confer": 400, "confid": 476, "config": [11, 453, 454, 571], "configur": [449, 456, 462, 465, 475, 495, 569], "constant": [527, 540, 558], "constantfluxspatialmodel": 216, "constantspatialmodel": 217, "constantspectralmodel": 218, "constanttemporalmodel": 219, "contain": 401, "containment_radiu": 203, "containment_region": 204, "content": [474, 524], "context": [445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 459, 460, 462, 464, 465, 466, 467, 470, 471, 480, 483, 484, 495, 496], "contigu": 479, "continu": 404, "contour": 476, "contribut": [377, 400, 481], "contributor": [400, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "conveni": 386, "convent": 374, "convers": [374, 475], "convert": 374, "coordin": [13, 374, 385, 514, 524], "correl": 454, "count": [475, 481, 487, 507, 573], "covari": [205, 476], "covarianceresult": 206, "creat": [445, 448, 453, 454, 461, 474, 475, 477, 479, 480, 496, 524], "create_cosmic_ray_spectral_model": 273, "create_crab_spectral_model": 274, "create_fermi_isotropic_diffuse_model": 275, "create_map_dataset_from_observ": 112, "create_map_dataset_geom": 113, "creation": [445, 449, 466], "cstat": 291, "cta": [384, 486], "ctao": 486, "cube": [380, 479, 491], "cumul": 445, "current": 399, "curv": [389, 465, 466, 467, 475, 565, 566], "custom": [482, 484, 568], "cut": [446, 450], "cutoff": [541, 542, 543, 553, 554, 555], "cutout": 479, "cycl": 399, "cython": [399, 404], "d_sun_to_galactic_cent": 301, "dark": [472, 499], "darkmatt": [1, 499], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 374, 380, 382, 383, 389, 401, 404, 444, 445, 448, 449, 450, 456, 457, 459, 462, 465, 466, 468, 470, 474, 478, 479, 488, 491, 495, 496, 497, 508, 519, 571, 572], "dataflow": 401, "dataset": [4, 11, 99, 100, 374, 383, 386, 395, 396, 401, 443, 445, 449, 450, 453, 454, 456, 457, 461, 465, 466, 467, 474, 475, 476, 478, 480, 481, 484, 488, 495, 496, 507], "dataset_registri": 98, "datasetmodel": 220, "datasetsmak": 165, "datastor": [82, 486, 496], "dco": [377, 400], "deal": 375, "dec": 419, "decai": 472, "decemb": 438, "decis": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "default": 385, "defin": [443, 445, 448, 450, 458, 460, 461, 465, 466, 480, 496, 524], "definit": [400, 465, 519], "depend": [373, 391, 397, 427, 450, 459, 461, 482], "deprec": [374, 399], "deriv": 574, "detail": [381, 456], "detect": [395, 452, 458, 516], "detector": 514, "develop": [374, 376, 377, 381], "diagram": 384, "differ": [457, 479, 575], "diffus": 487, "dilat": 480, "direct": 450, "discrete_correl": 292, "discuss": 389, "disk": [449, 461, 495, 496, 528], "diskspatialmodel": 221, "dispers": [477, 486, 487, 515], "dissolv": 393, "distribut": [391, 489, 501], "dl3": [3, 457, 489, 508, 516, 519], "dl4": [477, 507, 509, 519, 523, 568], "dl5": [509, 568], "dl6": 509, "dmprofil": 18, "do": 374, "doc": 404, "docstr": 375, "document": [375, 377, 383, 394, 440], "doubl": 471, "download": [11, 404], "downsampl": 524, "dr1": [489, 555], "dr2": 555, "dr3": 554, "draw": 324, "driven": 571, "drop": 381, "due": 444, "durat": 478, "e": 489, "each": 459, "earli": 377, "earth_location_from_dict": 311, "ebl": [444, 537], "ebl_data_builtin": 223, "eblabsorptionnormspectralmodel": 222, "edg": 509, "edisp": 477, "edisp_2d": 515, "edispkernel": 146, "edispkernelmap": 147, "edispmap": 148, "effect": [477, 478, 486, 513], "effectiveareatable2d": 149, "einastoprofil": 21, "elaps": 575, "empti": 474, "encourag": 484, "end": 374, "energi": [397, 443, 450, 459, 461, 477, 480, 482, 486, 487, 509, 513, 514, 515, 517], "energydependentmorphologyestim": 119, "energydependentmultigausspsf": 150, "energydispersion2d": 151, "environ": 405, "eros": 480, "error": [476, 573], "estim": [5, 120, 392, 395, 398, 401, 449, 452, 459, 462, 465, 470, 471, 475, 478, 509, 519, 520, 573], "estimate_exposure_reco_energi": 137, "estimator_registri": 118, "evalu": [385, 386, 387], "event": [383, 387, 460, 461, 468, 479, 486, 487, 489, 497, 508, 516], "eventlist": 83, "eventlistmetadata": 84, "evolut": 461, "exampl": [404, 484, 507, 509, 510, 518, 519, 520, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 572], "excess": [398, 445, 454, 471, 573], "excessmapestim": 121, "exclus": [448, 449, 454, 480, 495], "execut": 571, "exemplari": 402, "exercis": [443, 446, 448, 451, 456, 458, 460, 461, 467, 470, 486, 487, 488, 489, 497], "exist": 380, "expcutoffpowerlaw3fglspectralmodel": 224, "expcutoffpowerlawnormspectralmodel": 225, "expcutoffpowerlawspectralmodel": 226, "expdecai": 559, "expdecaytemporalmodel": 227, "expect": 516, "explor": [445, 449, 458, 491], "exponenti": [29, 446, 541, 542, 543, 553, 554, 555], "expos": 385, "exposur": [477, 487], "extend": [445, 460], "extens": [375, 444], "extern": 374, "extra": 404, "extract": [454, 465, 466, 467], "extrapol": [374, 556], "f_cash_root_cython": 293, "factor": 472, "factori": 479, "factoris": 516, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 402, "featur": [14, 399, 403, 436, 439, 440, 475], "feb": [420, 433], "februari": 440, "fermi": [457, 487], "fermist": 499, "file": [375, 400, 449, 453, 454, 457, 486, 495, 508, 524], "fill": [479, 524], "filter": 466, "final": [379, 403, 449, 574], "find_peak": 138, "find_peaks_in_flux_map": 139, "finder": 520, "first": [403, 449], "fit": [10, 13, 207, 383, 389, 444, 445, 446, 448, 449, 450, 453, 456, 457, 458, 464, 467, 476, 480, 484, 487, 495, 496, 524, 568, 572, 573, 574], "fitresult": 208, "fix": [374, 427, 436, 439, 440], "fixedpointinginfo": 85, "fixtur": 374, "flare": 466, "float": 374, "flux": [398, 402, 443, 444, 446, 448, 449, 457, 462, 472, 473, 475, 495, 496, 497, 509], "fluxestim": 398, "fluxmap": [122, 398, 475], "fluxmetadata": 123, "fluxpoint": [124, 475], "fluxpointscollect": 398, "fluxpointsdataset": [101, 386, 474], "fluxpointsestim": [125, 509], "fluxprofileestim": 126, "fold": 385, "folder": 404, "follow": 395, "format": [374, 575], "formula": 574, "forward": 385, "found": 571, "fov": [478, 518], "fov_to_ski": 303, "fovalign": 152, "fovbackgroundmak": [166, 518], "fovbackgroundmodel": 228, "fraction": 471, "freez": [399, 403, 481], "from": [374, 466, 479, 480, 481, 524], "from_yaml": 337, "fulli": 475, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 374, 375, 486, 513, 514, 515, 516, 517, 573, 575], "further": [389, 444, 572], "galact": [304, 487], "galactocentr": 501, "galleri": [374, 375, 525], "gamlik": 499, "gamma": [389, 472], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 374, 377, 380, 383, 391, 393, 394, 395, 399, 400, 401, 403, 404, 410, 411, 477, 486, 487, 488, 489, 499, 502, 506, 507, 508, 509, 510, 516, 518, 519, 520, 523, 568, 569, 575], "gaussian": [529, 530, 544, 560, 561], "gaussianspatialmodel": 229, "gaussianspectralmodel": 230, "gaussiantemporalmodel": 231, "gener": [374, 380, 384, 389, 400, 401, 509, 530, 561], "generalist": 398, "generalizedgaussianspatialmodel": 232, "generalizedgaussiantemporalmodel": 233, "geom": 187, "geometri": [445, 458, 465, 466, 479, 480, 495, 496, 522, 524], "get": [377, 394, 406, 444, 453, 454, 479, 500, 501, 502, 508, 523], "get_combined_significance_map": 140, "get_images_path": 338, "get_irfs_featur": 96, "get_random_st": 325, "get_rebinned_axi": 141, "get_wstat_gof_term": 294, "get_wstat_mu_bkg": 295, "github": 374, "given": 481, "global": 396, "glossari": 570, "good": 574, "gpl": 374, "group": 483, "gti": [86, 508], "guid": [376, 512], "guidelin": [375, 379, 380, 394], "h": 489, "halv": 471, "handl": [374, 383, 384, 385, 396, 400, 478, 575], "have": [382, 384, 389, 390, 398], "hawc": [457, 488], "hduindext": 87, "hduloc": 309, "healpix": 522, "help": 409, "helper": 386, "hess": 457, "hgp": 473, "hierarch": 483, "hierarchi": 401, "hierarchical_clust": 299, "high": [0, 5, 383, 390, 495, 510], "hli": 449, "how": [374, 375, 377, 394, 403, 479, 511], "hpxgeom": 188, "hpxmap": 189, "hpxndmap": 190, "hstack_column": 344, "i": [374, 377, 379, 462], "idea": 384, "imag": [375, 380, 388, 393, 452, 458, 479, 491], "imageprofil": 127, "imageprofileestim": 128, "implement": [384, 385, 394, 400, 402, 482, 484], "import": [374, 464], "improv": [385, 397, 427, 436, 439, 440], "inbuilt": 477, "includ": [375, 484], "index": [479, 484, 508], "info": [11, 374], "inform": [400, 473, 484, 515], "input": [374, 401, 452], "inspect": 496, "instal": [394, 406, 407, 409], "instrument": [7, 457, 516], "integr": [13, 404, 443], "integrate_spectrum": 276, "interact": 396, "interest": 459, "interfac": [0, 383, 385, 390, 495, 510, 523], "intern": 475, "interpol": [13, 374, 479], "interpolate_profil": 314, "interpolation_scal": 315, "interv": 466, "intrins": 444, "introduc": [385, 393, 395, 397, 398, 462], "introduct": [385, 388, 389, 391, 392, 394, 398, 400, 401, 443, 448, 450, 458, 468, 472, 473, 474, 478, 479, 486, 487, 488, 489, 491, 497, 499, 501, 502, 572], "inversecdfsampl": 323, "ipython": 410, "irf": [7, 153, 383, 401, 443, 474, 477, 486, 516], "irf_registri": 155, "irfmap": 154, "isothermalprofil": 22, "isotrop": 487, "issu": 409, "iter": 479, "j": 472, "jan": 414, "jfactori": 23, "joint": [456, 457, 507], "json": 400, "jul": 417, "june": [428, 439], "jupyt": [374, 406, 408, 410], "kei": 475, "kernel": 477, "labelmapaxi": [191, 479], "lat": [457, 487], "latest": 486, "law": [446, 538, 541, 542, 543, 549, 550, 551, 552, 553, 554, 555], "lazi": 386, "lazyfitsdata": 310, "lc": 465, "let": 461, "level": [0, 5, 380, 383, 390, 495, 496, 510], "li": 468, "licens": 374, "light": [389, 465, 466, 467, 475, 566], "lightcurv": [389, 460, 467, 471, 473], "lightcurveestim": [129, 509], "lightcurvetemplatetemporalmodel": 234, "like": [460, 475], "likelihood": 574, "limit": 384, "line": [11, 374, 571], "linear": 562, "lineartemporalmodel": 235, "link": 375, "list": [385, 386, 387, 388, 389, 390, 391, 460, 466, 473, 479, 480, 481, 482, 497, 508], "literatur": 450, "livetim": 478, "load": [386, 443, 444, 446, 448, 450, 473, 475, 481, 488], "load_irf_dict_from_fil": 163, "locat": 374, "log": [11, 374, 446, 545, 546], "logparabolanormspectralmodel": 236, "logparabolaspectralmodel": 237, "logspir": 34, "long": 400, "loop": [445, 478, 496], "lorimer2006": 35, "low": [380, 496], "lt": 399, "ma": 468, "mai": [416, 427], "maintain": [381, 400], "mainten": 383, "major": 403, "make": [374, 377, 403, 458, 461, 468, 496], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 333, "make_counts_rad_max": 178, "make_edisp_kernel_map": 179, "make_edisp_map": 180, "make_effective_livetime_map": 181, "make_map_background_irf": 182, "make_map_exposure_true_energi": 183, "make_observation_time_map": 184, "make_orthogonal_rectangle_sky_region": 334, "make_path": 339, "make_psf_map": 185, "make_theta_squared_t": 186, "maker": [8, 168, 395, 401, 445, 466, 478, 495, 496, 518, 519, 520], "maker_registri": 167, "mamba": 407, "manag": [383, 407], "manual": [480, 483], "map": [9, 192, 196, 380, 383, 384, 452, 453, 454, 457, 458, 464, 468, 472, 477, 479, 480, 481, 493, 497, 509, 522, 523, 524], "mapax": 193, "mapaxi": 194, "mapcoord": [195, 523], "mapdataset": [102, 386, 456, 460, 474, 488, 507], "mapdataseteventsampl": [103, 387], "mapdatasetmak": [169, 519], "mapdatasetmetadata": 104, "mapdatasetonoff": [105, 386], "mappanelplott": 361, "mar": 415, "march": 437, "mask": [388, 448, 449, 454, 474, 480, 495], "materi": 400, "matter": [472, 499], "measur": 572, "meet": 383, "messag": 374, "met": 575, "metadata": [400, 401], "method": [375, 386, 387, 402, 471, 479, 509, 523], "method_default": 317, "method_kwargs_default": 318, "meyercrabspectralmodel": 239, "miniconda": 407, "minor": 395, "mission": 575, "model": [10, 240, 242, 383, 385, 393, 396, 397, 401, 402, 444, 445, 448, 449, 450, 453, 456, 457, 458, 460, 461, 465, 466, 467, 470, 472, 473, 474, 476, 481, 482, 484, 486, 495, 496, 497, 501, 502, 503, 504, 505, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 572], "model_registri": 238, "modelbas": 241, "modif": 480, "modifi": [374, 479, 482], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 459, "morphologi": 482, "motion_since_birth": 305, "motiv": 402, "mpl_plot_check": 352, "multi": 457, "multipl": [460, 481, 484, 507], "multiprocessing_manag": 321, "n_jobs_default": 319, "naima": 547, "naimaspectralmodel": 243, "name": [374, 385, 516], "nebula": 504, "new": [374, 385, 389, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 439, 440, 466], "next": [446, 448, 449, 452, 458, 465, 486, 488, 489, 495, 497], "nfwprofil": 25, "night": 465, "non": [374, 479, 524], "norm": [397, 482, 531, 543, 546, 548, 551], "norm_bounds_cython": 296, "normal": [326, 495], "notat": 573, "note": [374, 412, 448, 475, 572], "notebook": [11, 374, 382, 410], "nov": [422, 423, 424, 425, 431, 435], "novemb": 436, "now": 389, "nuisanc": 402, "number": [374, 399, 516], "numpi": 399, "o": 462, "object": [374, 375, 384, 396, 453, 454, 460, 461, 473, 475, 483], "observ": [3, 88, 92, 383, 384, 444, 448, 449, 458, 460, 461, 465, 466, 478, 483, 495, 496], "observationeventsampl": 108, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [443, 459, 467, 483], "off": [446, 448, 451, 457], "offset": [513, 514, 515, 517], "ogipdatasetread": 106, "ogipdatasetwrit": 107, "old": 404, "one": 475, "onto": 479, "open": 468, "oper": [479, 480], "optimizeresult": 209, "option": [373, 391, 476], "org": 404, "organ": [380, 389], "origin": [374, 377], "other": [374, 375, 384, 404, 407, 499], "outlin": 402, "outlook": [386, 387, 388, 390, 391, 393, 394, 395, 398], "output": 374, "over": 468, "overview": [394, 406, 459, 486, 488, 518, 520, 521], "overwrit": 374, "own": 571, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 393, 395, 404, 407, 427, 491, 499, 500, 569], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 576, "paper": 383, "parabola": [446, 545, 546], "parallel": [13, 386], "paramet": [210, 211, 385, 397, 402, 449, 459, 476, 481, 482, 495], "parameterestim": 130, "parametr": 385, "parametricpsf": 160, "pdf": 327, "perform": [387, 445, 486, 496], "person": 400, "perspect": 381, "phase": [468, 565], "phasebackgroundmak": 170, "phasogram": 468, "piecewis": [531, 548], "piecewisenormspatialmodel": 244, "piecewisenormspectralmodel": 245, "pig": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "pip": 407, "pixel": [374, 388, 480], "pk": 475, "plan": 381, "plot": [14, 374, 444, 448, 449, 458, 459, 462, 479, 481, 496, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 576], "plot_contour_lin": 366, "plot_distribut": 367, "plot_heatmap": 368, "plot_map_rgb": 369, "plot_npred_sign": 370, "plot_spectrum_datasets_off_region": 371, "plot_theta_squared_t": 372, "png": 375, "point": [402, 443, 444, 446, 448, 449, 457, 458, 460, 471, 473, 475, 486, 495, 496, 497, 509, 517, 532], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 246, "poisson": 572, "polar": 306, "polici": 400, "pool_kwargs_default": 320, "popul": [1, 501], "posit": [402, 484, 515], "possibl": 400, "post": 403, "power": [446, 538, 541, 542, 543, 549, 550, 551, 552, 553, 554, 555], "powerlaw": [446, 563], "powerlaw2spectralmodel": 247, "powerlawnormspectralmodel": 248, "powerlawspectralmodel": 249, "powerlawtemporalmodel": 250, "precis": 387, "predict": 507, "prepar": [389, 399, 443, 445, 461, 496], "prerequisit": [445, 446, 448, 449, 450, 451, 453, 457, 459, 460, 461, 462, 464, 465, 466, 467, 471, 476, 480, 481, 484, 495, 496], "pretti": 473, "primaryflux": 26, "print": 473, "prior": [251, 402, 484], "priorparamet": [212, 213], "produc": 488, "product": [472, 477], "profil": [444, 462, 472, 574], "project": [383, 404], "propag": 401, "propos": [382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 401, 445, 446, 449, 451, 452, 453, 454, 457, 460, 461, 462, 464, 465, 466, 467, 470, 471, 476, 480, 481, 483, 495, 496], "psf": [477, 487, 517], "psf3d": 156, "psf_tabl": 517, "psfkernel": 157, "psfking": 158, "psfmap": [159, 477], "public": 400, "pull": [374, 377, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "pulsar": [51, 468, 503, 504], "purpos": 379, "pwn": 50, "pydant": 401, "python": [374, 375, 381, 399, 410], "qualiti": [383, 404, 448, 450, 456, 476], "quantiti": [475, 483, 509], "radial": 514, "radial_distribut": 48, "radmax2d": 161, "rai": [389, 472], "random": [13, 374], "rang": [478, 519], "read": [452, 457, 461, 462, 479, 480, 481, 524], "read_hermes_cub": [277, 279], "read_yaml": 340, "recommend": [406, 408], "reconstruct": 514, "recopsfmap": 162, "recursive_merge_dict": 341, "redshift": 444, "reduc": [4, 453, 454, 474, 495, 496], "reduct": [8, 383, 389, 445, 448, 449, 450, 456, 465, 466, 470, 478, 488, 495, 496, 519, 571], "refer": [6, 394, 570, 571, 572], "reflect": [478, 520], "reflectedregionsbackgroundmak": [171, 520], "reflectedregionsfind": 172, "region": [13, 385, 388, 443, 445, 448, 450, 478, 480, 481, 520, 524], "region_to_fram": 335, "regiongeom": [197, 524], "regionndmap": [198, 524], "regions_to_compound_region": 336, "regionsfind": 173, "relat": 524, "releas": [374, 383, 399, 400, 403, 404, 412], "remark": 379, "remnant": 505, "remov": [374, 481], "renam": 374, "repositori": 404, "repr": 374, "represent": [397, 475, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "request": [374, 377, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "requir": [373, 374, 391, 401], "requires_data": 353, "requires_depend": 354, "resampl": 474, "resample_energy_edg": 142, "residu": [448, 450, 456, 496], "resolv": [395, 468, 470], "respons": [7, 516], "restructur": 394, "result": [389, 398, 443, 445, 449, 452, 459, 462, 465, 470, 475, 574], "return": [374, 375], "review": 379, "ring": [454, 478, 521], "ringbackgroundmak": 174, "rmf": 515, "road": 384, "roadmap": 383, "rotat": 388, "rst": 375, "run": [11, 377, 448, 449, 450, 459, 461, 462, 465, 495, 571], "run_multiprocess": 322, "safe": [478, 519], "safemaskmak": 175, "sampl": [387, 460, 461], "sample_powerlaw": 328, "sample_spher": 329, "sample_sphere_dist": 330, "sample_tim": 331, "sampler": 461, "save": [449, 495, 496], "scale": 575, "scale_plot_flux": 278, "scaledregulargridinterpol": 313, "scalespectralmodel": 254, "scenario": 384, "schedul": 399, "scheme": [385, 400], "script": [11, 13, 374, 410, 491, 493], "section": 394, "sed": 509, "select": [445, 449, 458, 465, 466, 470, 473, 481, 495, 496, 508], "select_nested_model": 280, "sensit": 443, "sensitivityestim": 131, "sep": [418, 434], "serial": [386, 401, 457], "serialis": [402, 449, 462, 477, 481, 482, 487, 507], "seril": 385, "set": [377, 449, 479, 495], "setup": [382, 404, 406, 408, 409, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 495, 496, 497], "sever": 374, "share": 482, "shell": 533, "shell2": 534, "shell2spatialmodel": 255, "shellspatialmodel": 256, "shorter": 397, "should": 374, "show": [458, 459, 483], "signal": 459, "signific": [445, 452, 454, 480, 573], "simplepulsar": 54, "simplifi": 397, "simul": [383, 386, 450, 451, 460, 461, 464, 467], "sine": 564, "sinetemporalmodel": 257, "singl": [375, 451], "size": 524, "skip": 374, "sky": [9, 385, 388, 458, 460, 480, 515, 523], "sky_to_fov": 307, "skycoord": 523, "skymodel": [258, 482], "slice": 479, "small": 377, "smooth": [452, 552], "smoothbrokenpowerlawspectralmodel": 259, "snr": 52, "snrtruelovemcke": 53, "solut": 401, "some": [374, 384, 480], "sourc": [1, 2, 443, 445, 448, 452, 458, 459, 460, 461, 467, 473, 480, 484, 486, 497, 501, 502, 503, 504, 506], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 385, "sourcemodel": 385, "spatial": [385, 397, 458, 472, 479, 482, 501, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535], "spatial_model_registri": 252, "spatialirfmodel": 385, "spatialmodel": 260, "special": 574, "specif": [385, 394, 473, 475], "spectra": 472, "spectral": [397, 402, 444, 445, 446, 448, 449, 450, 457, 458, 472, 482, 491, 497, 525, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 556], "spectral_model_registri": 253, "spectralirfmodel": 385, "spectralmodel": 261, "spectroscopi": 470, "spectrum": [444, 448, 450, 451, 458, 468, 478, 496], "spectrumdataset": [109, 386, 474, 507], "spectrumdatasetmak": [176, 519], "spectrumdatasetonoff": [110, 386], "sphinx": [374, 375], "spiral": 501, "split_dataset": [114, 116], "spread": [486, 517], "squar": [459, 489], "stack": [448, 454, 456, 507], "standard_scal": 300, "standardise_unit": 359, "start": [394, 406, 500, 501, 502, 508, 523], "stat": [12, 444], "stat_contour": 476, "stat_profile_ul_scipi": 281, "stat_surfac": 476, "statist": [12, 448, 480, 572, 573], "statu": [379, 384, 393, 399], "step": [449, 486, 488, 489, 569], "store": [389, 449, 515], "str": 374, "structur": [393, 395, 427, 497, 569], "structure_funct": 297, "studi": 389, "style": 380, "sub": [479, 500], "subclass": 402, "subpackag": 380, "subset": 473, "suggest": 400, "summari": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 456, 487], "super": [553, 554, 555], "superexpcutoffpowerlaw3fglspectralmodel": 262, "superexpcutoffpowerlaw4fgldr3spectralmodel": 263, "superexpcutoffpowerlaw4fglspectralmodel": 264, "supernova": 505, "support": [374, 381, 399, 400, 402, 477, 507], "survei": [493, 576], "symmetr": 514, "systemat": 402, "t": [452, 573], "tabl": [13, 459, 473, 475, 488, 508], "table_row_to_dict": 345, "table_standardise_units_copi": 346, "table_standardise_units_inplac": 347, "tag": 397, "target": 448, "task": [385, 386, 387, 388, 389, 390, 391], "templat": [460, 535, 556], "templatendspatialmodel": 266, "templatendspectralmodel": 267, "templatenpredmodel": 268, "templatephasecurvetemporalmodel": 269, "templatespatialmodel": 270, "templatespectralmodel": 271, "tempor": [461, 467, 482, 525, 558, 559, 560, 561, 562, 563, 564, 565, 566], "temporal_model_registri": 265, "temporalmodel": 272, "term": 400, "terminologi": 384, "test": [13, 374, 377, 459, 468], "text": 374, "theta": 489, "thi": 377, "through": 475, "thumbnail": 375, "time": [13, 383, 389, 442, 447, 455, 460, 463, 466, 467, 469, 470, 471, 485, 490, 491, 492, 494, 498, 526, 536, 557, 567, 575], "time_ref_from_dict": 356, "time_ref_to_dict": 357, "time_relative_to_ref": 358, "timemapaxi": [199, 479], "timmerkonig_lightcurve_simul": 283, "to_yaml": 342, "tool": [11, 374, 571], "tooltip": 375, "touch": 377, "trapz_loglog": 312, "troubleshoot": [409, 571], "true": [513, 515, 517], "tsmapestim": 132, "tutori": [375, 382, 394, 406, 459, 486, 488, 491], "two": 481, "type": [374, 401, 507, 509], "uncertainti": 392, "underli": 524, "unfold": 402, "unfreez": 481, "unif": 398, "unifi": [385, 398], "unit": [13, 374], "unit_from_fits_image_hdu": 360, "unix": 374, "unreleas": 441, "up": [377, 393, 395], "upsampl": 524, "us": [374, 384, 402, 407, 410, 449, 459, 460, 465, 474, 476, 477, 479, 495, 496, 499, 502, 506, 507, 508, 509, 510, 516, 518, 519, 520, 523, 542, 553, 554, 555, 568], "user": [381, 512], "util": [4, 5, 8, 10, 13, 393, 569, 573, 575], "valid": 401, "valleespir": 38, "valu": [374, 402, 459, 479, 484], "vari": 467, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 460, 471], "varianc": 471, "variou": 483, "veloc": 501, "velocity_distribut": 49, "velocity_glon_glat": 308, "venv": 405, "version": [374, 399, 403, 412, 464], "virtual": 405, "visual": [14, 395, 479, 524, 576], "visualis": [452, 470, 475], "volum": 524, "warn": 374, "wc": [479, 524], "wcsgeom": 200, "wcsmap": 201, "wcsndmap": 202, "we": [382, 389, 390, 398, 488], "webpag": 404, "what": [374, 377, 379, 382, 384, 389, 390, 398, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 446, 448, 449, 452, 458, 465, 495, 497], "where": 374, "which": 374, "wind": 504, "wise": 465, "without": 484, "wobbleregionsfind": 177, "work": 508, "workflow": 569, "write": [374, 379, 449, 461, 479, 480, 508, 524, 571], "write_yaml": 343, "wstat": [298, 572, 573, 574], "wstatcountsstatist": 284, "yaml": [397, 449, 495, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566], "your": [409, 449, 571], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})