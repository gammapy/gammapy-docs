Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[407, "aug-25-2014"]], "0.10 (Jan 28, 2019)": [[408, "jan-28-2019"]], "0.11 (Mar 29, 2019)": [[409, "mar-29-2019"]], "0.12 (May 30, 2019)": [[410, "may-30-2019"]], "0.13 (Jul 26, 2019)": [[411, "jul-26-2019"]], "0.14 (Sep 30, 2019)": [[412, "sep-30-2019"]], "0.15 (Dec 3, 2019)": [[413, "dec-3-2019"]], "0.16 (Feb 1, 2020)": [[414, "feb-1-2020"]], "0.17 (Apr 1, 2020)": [[415, "apr-1-2020"]], "0.18 (Nov 4th, 2020)": [[416, "nov-4th-2020"]], "0.18.1 (Nov 6th, 2020)": [[417, "nov-6th-2020"]], "0.18.2 (Nov 19th, 2020)": [[418, "nov-19th-2020"]], "0.19 (Nov 22nd, 2021)": [[419, "nov-22nd-2021"]], "0.2 (Apr 13, 2015)": [[420, "apr-13-2015"]], "0.20 (May 12th, 2022)": [[421, "may-12th-2022"]], "0.20.1 (June 16th, 2022)": [[422, "june-16th-2022"]], "0.3 (Aug 13, 2015)": [[423, "aug-13-2015"]], "0.4 (Apr 20, 2016)": [[424, "apr-20-2016"]], "0.5 (Nov 22, 2016)": [[425, "nov-22-2016"]], "0.6 (Apr 28, 2017)": [[426, "apr-28-2017"]], "0.7 (Feb 28, 2018)": [[427, "feb-28-2018"]], "0.8 (Sep 23, 2018)": [[428, "sep-23-2018"]], "0.9 (Nov 29, 2018)": [[429, "nov-29-2018"]], "1.0 (November 10th, 2022)": [[430, "november-10th-2022"]], "1.0.1 (March 14th, 2023)": [[431, "march-14th-2023"]], "1.0.2 (December 6th, 2023)": [[432, "december-6th-2023"]], "1.1 (June 13th 2023)": [[433, "june-13th-2023"]], "1.2 (February 29th 2024)": [[434, "february-29th-2024"]], "1.3 (unreleased)": [[435, "unreleased"]], "1D Spectral": [[483, "d-spectral"]], "1D spectrum simulation": [[445, "d-spectrum-simulation"]], "2D Image": [[483, "d-image"]], "2D map fitting": [[447, "d-map-fitting"]], "3D Cube": [[483, "d-cube"]], "3D detailed analysis": [[450, "d-detailed-analysis"]], "3D map simulation": [[458, "d-map-simulation"]], "A note on statistics": [[442, "a-note-on-statistics"]], "API Links": [[369, "api-links"]], "API changes": [[430, "api-changes"], [433, "api-changes"], [434, "api-changes"]], "API reference": [[6, "api-reference"]], "ASmoothMapEstimator": [[116, "asmoothmapestimator"]], "Abstract": [[373, "abstract"], [374, "abstract"], [375, "abstract"], [376, "abstract"], [377, "abstract"], [378, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[371, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[471, "accessing-data"]], "Accessing contents of a dataset": [[467, "accessing-contents-of-a-dataset"]], "Accessor methods": [[515, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[438, "account-for-spectral-absorption-due-to-the-ebl"]], "Adaptive smoothing": [[446, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[162, "adaptiveringbackgroundmaker"]], "Add a model on multiple datasets": [[473, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[379, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[471, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[471, "adding-non-contiguous-axes"]], "Additional Models": [[391, "additional-models"]], "Additional PSF classes": [[509, "additional-psf-classes"]], "Additional utilities": [[561, "additional-utilities"]], "Aim": [[473, "aim"]], "Alternative": [[392, "alternative"]], "Alternatives": [[376, "alternatives"], [379, "alternatives"], [382, "alternatives"], [384, "alternatives"], [385, "alternatives"], [386, "alternatives"], [388, "alternatives"], [389, "alternatives"], [395, "alternatives"]], "Alternatives / Outlook": [[381, "alternatives-outlook"]], "Analysis": [[15, "analysis"]], "Analysis configuration": [[443, "analysis-configuration"], [450, "analysis-configuration"], [460, "analysis-configuration"], [487, "analysis-configuration"]], "Analysis steps": [[561, "analysis-steps"]], "Analysis workflow": [[561, "analysis-workflow"]], "AnalysisConfig": [[16, "analysisconfig"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[509, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[368, "assert-convention"]], "Assign to model to all datasets": [[461, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[473, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[494, "astrophysical-source-models"]], "Astrophysical source population models": [[493, "astrophysical-source-population-models"]], "Astrophysics": [[492, "astrophysics"]], "Authorship policy": [[394, "authorship-policy"]], "BACKEND_DEFAULT": [[312, "backend-default"]], "BSD or GPL license?": [[368, "bsd-or-gpl-license"]], "Background": [[478, "background"], [506, "background"]], "Background / What we have now": [[383, "background-what-we-have-now"]], "Background Model Handling": [[390, "background-model-handling"]], "Background estimation": [[470, "background-estimation"], [511, "background-estimation"]], "Background2D": [[141, "background2d"]], "Background3D": [[142, "background3d"]], "BackgroundIRF": [[143, "backgroundirf"]], "BackgroundIRFModel": [[379, "backgroundirfmodel"]], "BackgroundModel": [[379, "backgroundmodel"]], "Basic image exploration and fitting": [[452, "basic-image-exploration-and-fitting"]], "Basic operators": [[471, "basic-operators"]], "Bayesian blocks": [[459, "bayesian-blocks"]], "Bin volume and angular size": [[516, "bin-volume-and-angular-size"]], "Boundary mask": [[472, "boundary-mask"]], "Broken power law spectral model": [[530, "broken-power-law-spectral-model"]], "BrokenPowerLawSpectralModel": [[212, "brokenpowerlawspectralmodel"]], "Bug fixes and improvements": [[421, "bug-fixes-and-improvements"], [430, "bug-fixes-and-improvements"], [433, "bug-fixes-and-improvements"], [434, "bug-fixes-and-improvements"]], "Build": [[398, "build"]], "Building 1D datasets from the new observations": [[461, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[460, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[460, "building-the-3d-analysis-configuration"]], "Built-in models": [[560, "built-in-models"]], "Bundled gammapy.extern code": [[368, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, "burkertprofile"]], "CATALOG_REGISTRY": [[55, "catalog-registry"]], "CITATION.cff": [[394, "citation-cff"]], "CLUMPY": [[491, "clumpy"]], "CTA 1DC": [[478, "cta-1dc"]], "CTA performance files": [[478, "cta-performance-files"]], "CTA with Gammapy": [[478, "cta-with-gammapy"]], "Caplog fixture": [[368, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[396, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[396, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[396, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, "casebattacharya1998"]], "Cash : Poisson data with background model": [[564, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[565, "cash-counts-statistic"]], "CashCountsStatistic": [[279, "cashcountsstatistic"]], "Catalog table": [[466, "catalog-table"]], "Caveat": [[564, "caveat"]], "Changelog": [[388, "changelog"]], "Check Python code": [[369, "check-python-code"]], "Check broken links": [[369, "check-broken-links"]], "Check setup": [[437, "check-setup"], [439, "check-setup"], [442, "check-setup"], [443, "check-setup"], [444, "check-setup"], [445, "check-setup"], [446, "check-setup"], [447, "check-setup"], [448, "check-setup"], [450, "check-setup"], [451, "check-setup"], [452, "check-setup"], [453, "check-setup"], [454, "check-setup"], [455, "check-setup"], [456, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [468, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [474, "check-setup"], [476, "check-setup"], [478, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"], [487, "check-setup"], [488, "check-setup"], [489, "check-setup"]], "Check the dataset we produced": [[480, "check-the-dataset-we-produced"]], "Check your setup": [[403, "check-your-setup"]], "Checker": [[342, "checker"]], "Choose a thumbnail and tooltip for the tutorial gallery": [[369, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[394, "citation-scheme"]], "Class attributes": [[369, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[387, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[368, "clobber-or-overwrite"]], "Code in RST files": [[369, "code-in-rst-files"]], "Code in docstrings in Python files": [[369, "code-in-docstrings-in-python-files"]], "Code quality": [[398, "code-quality"]], "Collection of the personal information of authors": [[394, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[568, "colormaps"]], "Combining event lists and GTIs": [[500, "combining-event-lists-and-gtis"]], "Combining two Models": [[473, "combining-two-models"]], "Command line tools": [[563, "command-line-tools"]], "Command line tools using click": [[368, "command-line-tools-using-click"]], "Command not found": [[563, "command-not-found"]], "Compare against the literature": [[444, "compare-against-the-literature"]], "Compare results": [[460, "compare-results"]], "Compound Spectral Model": [[474, "compound-spectral-model"]], "Compound spectral model": [[531, "compound-spectral-model"]], "CompoundSpectralModel": [[213, "compoundspectralmodel"]], "Computation times": [[436, "computation-times"], [441, "computation-times"], [449, "computation-times"], [457, "computation-times"], [464, "computation-times"], [477, "computation-times"], [482, "computation-times"], [484, "computation-times"], [486, "computation-times"], [490, "computation-times"], [518, "computation-times"], [528, "computation-times"], [549, "computation-times"], [559, "computation-times"]], "Compute Flux Points": [[442, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[448, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[452, "compute-images"]], "Compute sensitivity": [[437, "compute-sensitivity"]], "Computing contours using stat_contour": [[468, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[468, "computing-contours-using-stat-surface"]], "Computing flux points": [[488, "computing-flux-points"]], "Conda Environments": [[399, "conda-environments"]], "Confidence contours": [[468, "confidence-contours"]], "Configurable analysis": [[561, "configurable-analysis"]], "Configuration": [[456, "configuration"]], "Configuration for stacked and joint analysis": [[450, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[443, "configuration-of-the-analysis"]], "Constant spatial model": [[519, "constant-spatial-model"]], "Constant spectral model": [[532, "constant-spectral-model"]], "Constant temporal model": [[550, "constant-temporal-model"]], "ConstantFluxSpatialModel": [[214, "constantfluxspatialmodel"]], "ConstantSpatialModel": [[215, "constantspatialmodel"]], "ConstantSpectralModel": [[216, "constantspectralmodel"]], "ConstantTemporalModel": [[217, "constanttemporalmodel"]], "Context": [[439, "context"], [440, "context"], [442, "context"], [443, "context"], [444, "context"], [445, "context"], [446, "context"], [447, "context"], [448, "context"], [451, "context"], [453, "context"], [454, "context"], [456, "context"], [458, "context"], [459, "context"], [460, "context"], [461, "context"], [462, "context"], [472, "context"], [475, "context"], [476, "context"], [487, "context"], [488, "context"]], "Continuous integration": [[398, "continuous-integration"]], "Contribution in conferences": [[394, "contribution-in-conferences"]], "Contributors": [[407, "contributors"], [408, "contributors"], [409, "contributors"], [410, "contributors"], [411, "contributors"], [412, "contributors"], [413, "contributors"], [414, "contributors"], [415, "contributors"], [416, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[368, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[368, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[516, "coordinates-defined-by-the-regiongeom"]], "Counts": [[479, "counts"]], "Counts and fit statistics": [[565, "counts-and-fit-statistics"]], "Counts statistics classes": [[565, "counts-statistics-classes"]], "Covariance": [[203, "covariance"]], "Covariance and parameters errors": [[468, "covariance-and-parameters-errors"]], "CovarianceResult": [[204, "covarianceresult"]], "Create DL4 product - PSFMap": [[469, "create-dl4-product-psfmap"]], "Create a mask in energy": [[472, "create-a-mask-in-energy"]], "Create a stacked dataset": [[448, "create-a-stacked-dataset"]], "Create edisp kernel map": [[469, "create-edisp-kernel-map"]], "Create exclusion mask": [[442, "create-exclusion-mask"], [448, "create-exclusion-mask"]], "Create exposure map": [[469, "create-exposure-map"]], "Create the energy-dependent temporal model": [[455, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[488, "create-the-maker-classes-to-be-used"]], "Create the makers": [[439, "create-the-makers"]], "Create the mask from a catalog of sources": [[472, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[472, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[472, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[472, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[455, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[471, "creating-wcs-maps"]], "Creating a RegionGeom": [[516, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[516, "creating-a-regionndmap"]], "Creating a mask for fitting": [[472, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[472, "creating-a-mask-manually"]], "Creating an empty dataset": [[467, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[472, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[471, "creating-from-a-map-geometry"]], "Creating the config file": [[447, "creating-the-config-file"], [448, "creating-the-config-file"]], "Creation of the Flux points": [[443, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[461, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[461, "creation-of-the-datasets"]], "Creation of the model": [[443, "creation-of-the-model"]], "Cube plotting": [[471, "cube-plotting"]], "Cumulative excess and significance": [[439, "cumulative-excess-and-significance"]], "Current status": [[393, "current-status"]], "Custom models": [[560, "custom-models"]], "Cutouts": [[471, "cutouts"]], "Cython": [[398, "cython"]], "DATASET_REGISTRY": [[97, "dataset-registry"]], "DCO implementation": [[394, "dco-implementation"]], "DL3 DR1": [[481, "dl3-dr1"]], "DMProfile": [[18, "dmprofile"]], "D_SUN_TO_GALACTIC_CENTER": [[297, "d-sun-to-galactic-center"]], "Dark matter": [[491, "dark-matter"]], "Dark matter spatial and spectral models": [[465, "dark-matter-spatial-and-spectral-models"]], "DarkMatterAnnihilationSpectralModel": [[19, "darkmatterannihilationspectralmodel"]], "DarkMatterDecaySpectralModel": [[20, "darkmatterdecayspectralmodel"]], "Data Fitting": [[383, "data-fitting"]], "Data access and selection (DL3)": [[500, "data-access-and-selection-dl3"]], "Data analysis": [[483, "data-analysis"]], "Data analysis subpackages in gammapy": [[374, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[377, "data-and-observation-handling"]], "Data and models files": [[451, "data-and-models-files"]], "Data exploration": [[483, "data-exploration"]], "Data reduction": [[383, "data-reduction"], [450, "data-reduction"], [450, "id1"], [487, "data-reduction"], [488, "data-reduction"]], "Data reduction (DL3 to DL4)": [[511, "data-reduction-dl3-to-dl4"]], "Data reduction into a MapDataset": [[480, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[470, "data-reduction-loop"]], "Data structures": [[489, "data-structures"]], "DataStore": [[82, "datastore"]], "Dataset": [[98, "dataset"], [380, "dataset"], [470, "dataset"]], "Dataset helper / convenience methods": [[380, "dataset-helper-convenience-methods"]], "Dataset serialization": [[380, "dataset-serialization"]], "Dataset simulations": [[444, "dataset-simulations"]], "DatasetModels": [[218, "datasetmodels"]], "Datasets": [[99, "datasets"], [377, "datasets"], [380, "datasets"], [395, "datasets"], [467, "datasets"]], "Datasets (DL4)": [[499, "datasets-dl4"]], "Datasets - Reduced data, IRFs, models": [[467, "datasets-reduced-data-irfs-models"]], "Datasets serialization": [[451, "datasets-serialization"]], "DatasetsMaker": [[163, "datasetsmaker"]], "Datastore": [[478, "datastore"]], "Dealing with links": [[369, "dealing-with-links"]], "Decision": [[373, "decision"], [374, "decision"], [375, "decision"], [376, "decision"], [377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"]], "Define Target Region": [[442, "define-target-region"]], "Define an Observation": [[454, "define-an-observation"]], "Define an observation and make a dataset": [[455, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[437, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[452, "define-map-geometry"]], "Define the MapDataset": [[454, "define-the-mapdataset"]], "Define the Model": [[461, "define-the-model"]], "Define the ON region": [[444, "define-the-on-region"]], "Define the Sky model: a point-like source": [[454, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[439, "define-the-geometries"]], "Define the geometry": [[472, "define-the-geometry"]], "Define the model": [[488, "define-the-model"]], "Define the model to be used": [[460, "define-the-model-to-be-used"], [460, "id3"]], "Define the simulation source model": [[455, "define-the-simulation-source-model"]], "Define time intervals": [[461, "define-time-intervals"]], "Defining the datastore and selecting observations": [[488, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[461, "defining-the-geometry"]], "Definition of a Contributor": [[394, "definition-of-a-contributor"]], "Definition of the Maintainer": [[394, "definition-of-the-maintainer"]], "Definition of the data selection": [[460, "definition-of-the-data-selection"], [460, "id1"]], "Definition of the dataset geometry": [[460, "definition-of-the-dataset-geometry"], [460, "id2"]], "Dependencies": [[367, "dependencies"], [385, "dependencies"]], "Deprecating a function or a class": [[368, "deprecating-a-function-or-a-class"]], "Deprecation": [[393, "deprecation"]], "Derivation of the WStat formula": [[566, "derivation-of-the-wstat-formula"]], "Detailed plan": [[375, "detailed-plan"]], "Developer How To": [[368, "developer-how-to"]], "Developer guide": [[370, "developer-guide"]], "Discussion / Alternatives": [[383, "discussion-alternatives"]], "Disk spatial model": [[520, "disk-spatial-model"]], "DiskSpatialModel": [[219, "diskspatialmodel"]], "Dissolve gammapy.background": [[387, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[387, "dissolve-gammapy-image"]], "Distributions": [[385, "distributions"], [385, "id1"]], "Documentation": [[377, "documentation"], [434, "documentation"]], "Documentation How To": [[369, "documentation-how-to"]], "Documentation building": [[369, "documentation-building"]], "Documentation guidelines": [[369, "documentation-guidelines"]], "Download": [[398, "download"]], "EBL absorption spectral model": [[529, "ebl-absorption-spectral-model"]], "EBLAbsorptionNormSpectralModel": [[220, "eblabsorptionnormspectralmodel"]], "EBL_DATA_BUILTIN": [[221, "ebl-data-builtin"]], "EDispKernel": [[144, "edispkernel"]], "EDispKernelMap": [[145, "edispkernelmap"]], "EDispMap": [[146, "edispmap"]], "ESTIMATOR_REGISTRY": [[117, "estimator-registry"]], "Effective Area": [[469, "effective-area"]], "Effective area": [[478, "effective-area"], [505, "effective-area"]], "EffectiveAreaTable2D": [[147, "effectiveareatable2d"]], "EinastoProfile": [[21, "einastoprofile"]], "Energy Dependent Spatial Models": [[391, "energy-dependent-spatial-models"]], "Energy Dispersion": [[469, "energy-dispersion"], [479, "energy-dispersion"], [507, "energy-dispersion"]], "Energy dispersion": [[478, "energy-dispersion"]], "Energy edges": [[501, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[118, "energydependentmorphologyestimator"]], "EnergyDependentMultiGaussPSF": [[148, "energydependentmultigausspsf"]], "EnergyDispersion2D": [[149, "energydispersion2d"]], "Estimating TS": [[565, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[459, "estimation-of-time-variability-in-a-lightcurve"]], "Estimator": [[119, "estimator"]], "Estimators": [[395, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[501, "estimators-dl4-to-dl5-and-dl6"]], "Event Simulation": [[377, "event-simulation"]], "Event lists": [[489, "event-lists"]], "Event sampling": [[454, "event-sampling"]], "EventList": [[83, "eventlist"]], "EventListMetaData": [[84, "eventlistmetadata"]], "Events": [[478, "events"], [479, "events"]], "Example": [[564, "example"], [564, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[476, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[476, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[519, "example-plot"], [520, "example-plot"], [521, "example-plot"], [522, "example-plot"], [523, "example-plot"], [524, "example-plot"], [525, "example-plot"], [526, "example-plot"], [527, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[502, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[491, "examples-using-gammapy-astro-darkmatter-darkmatterannihilationspectralmodel"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[498, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[498, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[500, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[500, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[499, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[499, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[501, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[501, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[508, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[508, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[508, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[510, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[511, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[512, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[511, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[515, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[515, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[515, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[560, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[565, "excess-and-significance"], [565, "id2"]], "Excess errors": [[565, "excess-errors"], [565, "id4"]], "Excess estimators": [[392, "excess-estimators"]], "ExcessMapEstimator": [[120, "excessmapestimator"]], "Exclusion masks": [[472, "exclusion-masks"]], "Execution": [[563, "execution"]], "Exemplary additional prior subclasses:": [[396, "exemplary-additional-prior-subclasses"]], "Exercises": [[437, "exercises"], [440, "exercises"], [442, "exercises"], [445, "exercises"], [450, "exercises"], [452, "exercises"], [454, "exercises"], [455, "exercises"], [462, "exercises"], [478, "exercises"], [479, "exercises"], [480, "exercises"], [481, "exercises"], [489, "exercises"], [489, "id1"], [489, "id2"], [489, "id3"]], "Existing code": [[374, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[222, "expcutoffpowerlaw3fglspectralmodel"]], "ExpCutoffPowerLawNormSpectralModel": [[223, "expcutoffpowerlawnormspectralmodel"]], "ExpCutoffPowerLawSpectralModel": [[224, "expcutoffpowerlawspectralmodel"]], "ExpDecay temporal model": [[551, "expdecay-temporal-model"]], "ExpDecayTemporalModel": [[225, "expdecaytemporalmodel"]], "Expected number of detected events": [[508, "expected-number-of-detected-events"]], "Exploration of the fit results": [[443, "exploration-of-the-fit-results"]], "Explore the fit results": [[439, "explore-the-fit-results"]], "Explore the results": [[439, "explore-the-results"]], "Exponential": [[29, "exponential"]], "Exponential Cut-Off Powerlaw Fit": [[440, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[535, "exponential-cutoff-power-law-norm-spectral-model"]], "Exponential cutoff power law spectral model": [[533, "exponential-cutoff-power-law-spectral-model"]], "Exponential cutoff power law spectral model used for 3FGL": [[534, "exponential-cutoff-power-law-spectral-model-used-for-3fgl"]], "Expose model parameters as attributes": [[379, "expose-model-parameters-as-attributes"]], "Exposure": [[479, "exposure"]], "Extended source using a template": [[454, "extended-source-using-a-template"]], "Extract the light curve": [[461, "extract-the-light-curve"]], "Extract the lightcurve": [[462, "extract-the-lightcurve"]], "Extracting the light curve": [[460, "extracting-the-light-curve"]], "Extracting the ring background": [[448, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[508, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, "faucherkaspi2006"]], "FaucherKaspi2006VelocityBimodal": [[31, "faucherkaspi2006velocitybimodal"]], "FaucherKaspi2006VelocityMaxwellian": [[32, "faucherkaspi2006velocitymaxwellian"]], "FaucherSpiral": [[33, "faucherspiral"]], "Feature Freeze and Branching": [[397, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[451, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[479, "fermi-lat-with-gammapy"]], "FermiST": [[491, "fermist"]], "Files": [[478, "files"]], "Filling a RegionNDMap": [[516, "filling-a-regionndmap"]], "Filling maps from event lists": [[471, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[471, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[461, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[373, "final-remarks"]], "Final result": [[566, "final-result"]], "Fit": [[205, "fit"], [458, "fit"], [479, "fit"]], "Fit quality and model residuals": [[442, "fit-quality-and-model-residuals"], [444, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[468, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[450, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[450, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[442, "fit-spectrum"], [444, "fit-spectrum"]], "Fit statistics": [[564, "fit-statistics"]], "Fit the datasets": [[462, "fit-the-datasets"]], "Fit the model": [[488, "fit-the-model"]], "FitResult": [[206, "fitresult"]], "Fitting": [[377, "fitting"], [468, "fitting"]], "Fitting Multiple Datasets with and without the Prior": [[476, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[476, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[468, "fitting-options"]], "Fitting temporal models": [[462, "fitting-temporal-models"]], "Fitting the obtained light curve": [[462, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[368, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, "fixedpointinginfo"]], "Float data type: 32 bit or 64 bit?": [[368, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[456, "flux-profile-estimation"]], "Flux maps": [[501, "flux-maps"]], "Flux maps for annihilation": [[465, "flux-maps-for-annihilation"]], "Flux maps for decay": [[465, "flux-maps-for-decay"]], "Flux point fitting": [[440, "flux-point-fitting"]], "Flux points": [[466, "flux-points"], [487, "flux-points"], [501, "flux-points"]], "Flux quantities": [[501, "flux-quantities"]], "FluxMaps": [[121, "fluxmaps"]], "FluxMetaData": [[122, "fluxmetadata"]], "FluxPoints": [[123, "fluxpoints"]], "FluxPointsDataset": [[100, "fluxpointsdataset"], [380, "fluxpointsdataset"], [467, "fluxpointsdataset"]], "FluxPointsEstimator": [[124, "fluxpointsestimator"]], "FluxProfileEstimator": [[125, "fluxprofileestimator"]], "FoV background": [[470, "fov-background"], [510, "fov-background"]], "FoVAlignment": [[150, "fovalignment"]], "FoVBackgroundMaker": [[164, "fovbackgroundmaker"]], "FoVBackgroundModel": [[226, "fovbackgroundmodel"]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[459, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[473, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[369, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[368, "functions-returning-several-values"]], "Further extensions": [[438, "further-extensions"]], "Further references": [[564, "further-references"]], "GTI": [[86, "gti"]], "Galactic diffuse background": [[479, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[493, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[465, "gamma-ray-spectra-at-production"]], "GammaLib": [[491, "gammalib"]], "Gammapy": [[405, "gammapy"]], "Gammapy Binder": [[398, "id1"]], "Gammapy analysis workflow and package structure": [[561, "gammapy-analysis-workflow-and-package-structure"]], "Gammapy overview": [[388, "gammapy-overview"]], "Gammapy repository": [[398, "gammapy-repository"]], "Gammapy webpages": [[398, "gammapy-webpages"]], "Gaussian spatial model": [[521, "gaussian-spatial-model"]], "Gaussian spectral model": [[536, "gaussian-spectral-model"]], "Gaussian temporal model": [[552, "gaussian-temporal-model"]], "GaussianSpatialModel": [[227, "gaussianspatialmodel"]], "GaussianSpectralModel": [[228, "gaussianspectralmodel"]], "GaussianTemporalModel": [[229, "gaussiantemporalmodel"]], "General Gammapy publications": [[394, "general-gammapy-publications"]], "General code style guidelines": [[374, "general-code-style-guidelines"]], "General conventions": [[368, "general-conventions"]], "General idea and class diagram": [[378, "general-idea-and-class-diagram"]], "General method": [[501, "general-method"]], "General organization of the new approach": [[383, "general-organization-of-the-new-approach"]], "Generalist estimators": [[392, "generalist-estimators"]], "Generalized Gaussian temporal model": [[553, "generalized-gaussian-temporal-model"]], "Generalized gaussian spatial model": [[522, "generalized-gaussian-spatial-model"]], "GeneralizedGaussianSpatialModel": [[230, "generalizedgaussianspatialmodel"]], "GeneralizedGaussianTemporalModel": [[231, "generalizedgaussiantemporalmodel"]], "Generating log messages": [[368, "generating-log-messages"]], "Geom": [[185, "geom"]], "Get a fit stat profile for the redshift": [[438, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[371, "get-in-touch-early"]], "Get set up": [[371, "get-set-up"]], "Get the flux points": [[438, "get-the-flux-points"]], "Getting started": [[388, "getting-started"], [400, "getting-started"], [492, "getting-started"], [493, "getting-started"], [494, "getting-started"]], "Getting started section restructuring": [[388, "getting-started-section-restructuring"]], "Getting started with data": [[500, "getting-started-with-data"]], "Getting started with maps": [[515, "getting-started-with-maps"]], "Getting the reduced dataset": [[447, "getting-the-reduced-dataset"], [448, "getting-the-reduced-dataset"]], "Global Model Handling": [[390, "global-model-handling"]], "Glossary": [[562, "glossary"]], "Glossary and references": [[562, "glossary-and-references"]], "Goodness of fit": [[566, "goodness-of-fit"]], "Guidelines and specific actions": [[388, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[481, "h-e-s-s-with-gammapy"]], "HAWC data access and reduction": [[480, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[480, "hawc-with-gammapy"]], "HAWC: 1D dataset for flux point fitting": [[451, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, "hduindextable"]], "HDULocation": [[305, "hdulocation"]], "HEALPix geometry": [[514, "healpix-geometry"]], "HEALPix-based maps": [[514, "healpix-based-maps"]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[451, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[394, "handling-of-conference-material"]], "Help!?": [[403, "help"]], "Hierarchical clustering of observations": [[475, "hierarchical-clustering-of-observations"]], "Hierarchy": [[395, "hierarchy"]], "High Level Analysis Interface": [[502, "high-level-analysis-interface"]], "High level interface": [[377, "high-level-interface"], [487, "high-level-interface"]], "How To": [[388, "how-to"], [503, "how-to"]], "How to contribute to Gammapy": [[371, "how-to-contribute-to-gammapy"]], "How to get data values": [[471, "how-to-get-data-values"]], "How to handle API breaking changes?": [[368, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[397, "how-to-make-a-gammapy-release"]], "How to make a pull request": [[368, "how-to-make-a-pull-request"]], "How to set data values": [[471, "how-to-set-data-values"]], "How to use logging": [[368, "how-to-use-logging"]], "How to use random numbers": [[368, "how-to-use-random-numbers"]], "How to write code": [[368, "how-to-write-code"]], "How to write tests": [[368, "how-to-write-tests"]], "HpxGeom": [[186, "hpxgeom"]], "HpxMap": [[187, "hpxmap"]], "HpxNDMap": [[188, "hpxndmap"]], "IPython": [[404, "id3"]], "IRF": [[151, "irf"], [395, "irf"]], "IRF axis naming": [[508, "irf-axis-naming"]], "IRFMap": [[152, "irfmap"]], "IRF_REGISTRY": [[153, "irf-registry"]], "IRFs": [[377, "irfs"], [478, "irfs"]], "Image Plotting": [[471, "image-plotting"]], "ImageProfile": [[126, "imageprofile"]], "ImageProfileEstimator": [[127, "imageprofileestimator"]], "Images and masks": [[382, "images-and-masks"]], "Implement default parameters": [[379, "implement-default-parameters"]], "Implement evaluation region specifications": [[379, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[379, "implement-sky-coordinate-handling"]], "Implementation": [[388, "implementation"], [396, "implementation"]], "Implementation Outline": [[396, "implementation-outline"]], "Implementation road map": [[378, "implementation-road-map"]], "Implementing a custom model": [[474, "implementing-a-custom-model"]], "Implementing a custom prior": [[476, "implementing-a-custom-prior"]], "Imports and versions": [[458, "imports-and-versions"]], "Improve SourceModels class": [[379, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[379, "improve-and-implement-model-serilization"]], "Improve spatial models": [[379, "improve-spatial-models"]], "In the RST files": [[369, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[469, "inbuilt-gammapy-irfs"]], "Include png files as images": [[369, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[471, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[488, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[488, "inspecting-residuals"]], "Install issues": [[403, "install-issues"]], "Installation": [[388, "installation"], [400, "installation"], [401, "installation"]], "Instrument Response Functions (DL3)": [[508, "instrument-response-functions-dl3"]], "Interaction Between Models and Dataset Objects": [[390, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[515, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[471, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[368, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[391, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[392, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[392, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[392, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[389, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[389, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[389, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[387, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[389, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[379, "introduce-naming-scheme-for-models"]], "Introduction": [[379, "introduction"], [382, "introduction"], [383, "introduction"], [385, "introduction"], [386, "introduction"], [388, "introduction"], [392, "introduction"], [394, "introduction"], [395, "introduction"], [437, "introduction"], [442, "introduction"], [444, "introduction"], [452, "introduction"], [463, "introduction"], [465, "introduction"], [466, "introduction"], [467, "introduction"], [470, "introduction"], [471, "introduction"], [478, "introduction"], [479, "introduction"], [483, "introduction"], [489, "introduction"], [491, "introduction"], [493, "introduction"], [494, "introduction"], [564, "introduction"]], "Introduction of background models": [[379, "introduction-of-background-models"]], "Introduction of model name attributes": [[379, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[379, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[319, "inversecdfsampler"]], "IsothermalProfile": [[22, "isothermalprofile"]], "Isotropic diffuse background": [[479, "isotropic-diffuse-background"]], "Iterating by image": [[471, "iterating-by-image"]], "J Factors": [[465, "j-factors"]], "JFactory": [[23, "jfactory"]], "Joint Analysis": [[499, "joint-analysis"]], "Joint analysis": [[450, "joint-analysis"], [451, "joint-analysis"]], "Jupyter notebooks": [[404, "jupyter-notebooks"]], "LabelMapAxis": [[189, "labelmapaxis"], [471, "labelmapaxis"]], "Lazy loading of Datasets": [[380, "lazy-loading-of-datasets"]], "LazyFitsData": [[306, "lazyfitsdata"]], "Let\u2019s simulate the model": [[455, "let-s-simulate-the-model"]], "Light Curve Fitting": [[383, "light-curve-fitting"]], "Light Curve estimation by observation": [[460, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[558, "light-curve-temporal-model"]], "Light curves": [[460, "light-curves"]], "Light curves for flares": [[461, "light-curves-for-flares"]], "LightCurveEstimator": [[128, "lightcurveestimator"]], "LightCurveTemplateTemporalModel": [[232, "lightcurvetemplatetemporalmodel"]], "Lightcurve": [[383, "lightcurve"]], "Lightcurves": [[466, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[383, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[378, "limitations"]], "Linear temporal model": [[554, "linear-temporal-model"]], "LinearTemporalModel": [[233, "lineartemporalmodel"]], "Links to other tutorials": [[369, "links-to-other-tutorials"]], "List available catalogs": [[466, "list-available-catalogs"]], "Load Data": [[442, "load-data"]], "Load IRFs and prepare dataset": [[437, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[466, "load-catalogs"]], "Load data": [[444, "load-data"]], "Load spectral points": [[440, "load-spectral-points"]], "Load the data": [[438, "load-the-data"]], "Loading models from a catalog": [[473, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[368, "locate-origin-of-warnings"]], "Log parabola spectral model": [[537, "log-parabola-spectral-model"]], "Log parabola spectral norm model": [[538, "log-parabola-spectral-norm-model"]], "Log-Parabola Fit": [[440, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[234, "logparabolanormspectralmodel"]], "LogParabolaSpectralModel": [[235, "logparabolaspectralmodel"]], "LogSpiral": [[34, "logspiral"]], "Long Term Support releases": [[394, "long-term-support-releases"]], "Lorimer2006": [[35, "lorimer2006"]], "Low level API": [[488, "low-level-api"]], "Low level map and cube analysis": [[374, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[165, "maker-registry"]], "METHOD_DEFAULT": [[313, "method-default"]], "METHOD_KWARGS_DEFAULT": [[314, "method-kwargs-default"]], "MODEL_REGISTRY": [[236, "model-registry"]], "Maintainer and developer perspective": [[375, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[377, "maintenance-and-code-quality"]], "Make a Bugfix release": [[397, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[463, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[452, "make-sky-images"]], "Make small pull requests": [[371, "make-small-pull-requests"]], "Maker": [[166, "maker"]], "Makers": [[395, "makers"]], "Makers - Data reduction": [[470, "makers-data-reduction"]], "Making a butterfly plot": [[488, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[368, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[368, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[368, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[475, "manual-grouping-of-observations"]], "Map": [[190, "map"]], "Map Analysis / Data Reduction": [[377, "map-analysis-data-reduction"]], "MapAxes": [[191, "mapaxes"]], "MapAxis": [[192, "mapaxis"]], "MapCoord": [[193, "mapcoord"], [515, "mapcoord"]], "MapDataset": [[101, "mapdataset"], [380, "mapdataset"], [467, "mapdataset"]], "MapDatasetEventSampler": [[102, "mapdataseteventsampler"], [381, "mapdataseteventsampler"]], "MapDatasetMaker": [[167, "mapdatasetmaker"]], "MapDatasetMetaData": [[103, "mapdatasetmetadata"]], "MapDatasetOnOff": [[104, "mapdatasetonoff"], [380, "mapdatasetonoff"]], "MapPanelPlotter": [[355, "mappanelplotter"]], "Maps": [[194, "maps"], [377, "maps"], [471, "maps"], [489, "maps"]], "Maps operations": [[471, "maps-operations"]], "Mask dilation and erosion": [[472, "mask-dilation-and-erosion"]], "Mask maps": [[472, "mask-maps"]], "Mask modifications": [[472, "mask-modifications"]], "Mask some sky regions": [[472, "mask-some-sky-regions"]], "Masks for fitting": [[472, "masks-for-fitting"]], "Masks operations": [[472, "masks-operations"]], "Meetings": [[377, "meetings"]], "Metadata API": [[395, "metadata-api"]], "Metadata files": [[394, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[395, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[459, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[237, "meyercrabspectralmodel"]], "Minor changes": [[389, "minor-changes"]], "Mission elapsed times (MET)": [[567, "mission-elapsed-times-met"]], "Model": [[238, "model"]], "Model and dataset": [[468, "model-and-dataset"], [476, "model-and-dataset"]], "Model fit": [[452, "model-fit"]], "Model fitting": [[443, "model-fitting"], [487, "model-fitting"]], "Model gallery": [[517, "model-gallery"]], "Model lists and serialisation": [[474, "model-lists-and-serialisation"]], "Model the observed spectrum": [[438, "model-the-observed-spectrum"]], "ModelBase": [[239, "modelbase"]], "Modeling": [[377, "modeling"], [395, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[560, "modeling-and-fitting-dl4-to-dl5"]], "Modeling and fitting": [[450, "modeling-and-fitting"]], "Modelling": [[447, "modelling"], [473, "modelling"]], "Models": [[240, "models"], [474, "models"]], "Models with energy dependent morphology": [[474, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[474, "models-with-shared-parameter"]], "Modifying Data": [[471, "modifying-data"]], "Modifying model parameters": [[474, "modifying-model-parameters"]], "MooreProfile": [[24, "mooreprofile"]], "Morphological energy dependence estimation": [[453, "morphological-energy-dependence-estimation"]], "Motivation": [[396, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[451, "multi-instrument-joint-3d-and-1d-analysis"]], "NFWProfile": [[25, "nfwprofile"]], "N_JOBS_DEFAULT": [[315, "n-jobs-default"]], "Naima spectral model": [[539, "naima-spectral-model"]], "NaimaSpectralModel": [[241, "naimaspectralmodel"]], "New features": [[430, "new-features"], [433, "new-features"], [434, "new-features"]], "Next steps": [[478, "next-steps"], [480, "next-steps"], [481, "next-steps"]], "Night-wise LC estimation": [[460, "night-wise-lc-estimation"]], "Norm Spectral Models": [[474, "norm-spectral-models"]], "Notations": [[565, "notations"]], "Notes": [[564, "notes"]], "OGIPDatasetReader": [[105, "ogipdatasetreader"]], "OGIPDatasetWriter": [[106, "ogipdatasetwriter"]], "Object text repr, str and info": [[368, "object-text-repr-str-and-info"]], "Objective": [[447, "objective"], [448, "objective"], [454, "objective"], [455, "objective"], [475, "objective"]], "Objectives": [[378, "objectives"]], "Observation": [[88, "observation"]], "Observation duration and effective livetime": [[470, "observation-duration-and-effective-livetime"]], "Observation selection": [[443, "observation-selection"], [487, "observation-selection"]], "ObservationEventSampler": [[107, "observationeventsampler"]], "ObservationFilter": [[89, "observationfilter"]], "ObservationTable": [[90, "observationtable"]], "Observational clustering": [[475, "observational-clustering"]], "Observations": [[91, "observations"]], "ObservationsEventsSampler": [[92, "observationseventssampler"]], "Obtain the data to use": [[453, "obtain-the-data-to-use"]], "Obtain the observations": [[475, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[437, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[398, "old-example-data"]], "On-Off analysis": [[445, "on-off-analysis"]], "Opening the data": [[463, "opening-the-data"]], "OptimizeResult": [[207, "optimizeresult"]], "Optional dependencies": [[367, "optional-dependencies"], [385, "optional-dependencies"]], "Other folders": [[398, "other-folders"]], "Other packages": [[491, "other-packages"]], "Other repositories": [[398, "other-repositories"]], "Others": [[368, "others"], [398, "others"]], "Outlook": [[380, "outlook"], [382, "outlook"], [384, "outlook"], [385, "outlook"], [387, "outlook"], [388, "outlook"], [389, "outlook"], [392, "outlook"]], "Output in Jupyter notebook cells": [[368, "output-in-jupyter-notebook-cells"]], "Overview": [[510, "overview"], [512, "overview"], [513, "overview"]], "PIG 1 - PIG purpose and guidelines": [[373, "pig-1-pig-purpose-and-guidelines"]], "PIG 10 - Regions": [[382, "pig-10-regions"]], "PIG 11 - Light curves": [[383, "pig-11-light-curves"]], "PIG 12 - High level interface": [[384, "pig-12-high-level-interface"]], "PIG 13 - Gammapy dependencies and distribution": [[385, "pig-13-gammapy-dependencies-and-distribution"]], "PIG 14 - Uncertainty estimation": [[386, "pig-14-uncertainty-estimation"]], "PIG 16 - Gammapy package structure": [[387, "pig-16-gammapy-package-structure"]], "PIG 18 - Documentation": [[388, "pig-18-documentation"]], "PIG 19 - Gammapy package structure follow up": [[389, "pig-19-gammapy-package-structure-follow-up"]], "PIG 2 - Organization of low level analysis code": [[374, "pig-2-organization-of-low-level-analysis-code"]], "PIG 20 - Global Model API": [[390, "pig-20-global-model-api"]], "PIG 21 - Models improvements": [[391, "pig-21-models-improvements"]], "PIG 22 - Unified flux estimators API": [[392, "pig-22-unified-flux-estimators-api"]], "PIG 23 - Gammapy release cycle and version numbering": [[393, "pig-23-gammapy-release-cycle-and-version-numbering"]], "PIG 24 - Authorship policy": [[394, "pig-24-authorship-policy"]], "PIG 25 - Metadata container for Gammapy": [[395, "pig-25-metadata-container-for-gammapy"]], "PIG 26 - Model Priors API": [[396, "pig-26-model-priors-api"]], "PIG 3 - Plan for dropping Python 2.7 support": [[375, "pig-3-plan-for-dropping-python-2-7-support"]], "PIG 4 - Setup for tutorial notebooks and data": [[376, "pig-4-setup-for-tutorial-notebooks-and-data"]], "PIG 5 - Gammapy 1.0 roadmap": [[377, "pig-5-gammapy-1-0-roadmap"]], "PIG 6 - CTA observation handling": [[378, "pig-6-cta-observation-handling"]], "PIG 7 - Models": [[379, "pig-7-models"]], "PIG 8 - Datasets": [[380, "pig-8-datasets"]], "PIG 9 - Event sampling": [[381, "pig-9-event-sampling"]], "PIG review": [[373, "pig-review"]], "PIG status": [[373, "pig-status"]], "PIGs": [[372, "pigs"]], "POOL_KWARGS_DEFAULT": [[316, "pool-kwargs-default"]], "PSF": [[469, "psf"], [479, "psf"]], "PSF3D": [[154, "psf3d"]], "PSFKernel": [[155, "psfkernel"]], "PSFKing": [[156, "psfking"]], "PSFMap": [[157, "psfmap"]], "PWN": [[50, "pwn"]], "Package / API": [[483, "package-api"]], "Package and docs": [[398, "package-and-docs"]], "Package structure and dependencies": [[421, "package-structure-and-dependencies"]], "Paczynski1990": [[36, "paczynski1990"]], "Paczynski1990Velocity": [[37, "paczynski1990velocity"]], "Papers": [[377, "papers"]], "Parallel evaluation of datasets": [[380, "parallel-evaluation-of-datasets"]], "Parameter": [[208, "parameter"]], "ParameterEstimator": [[129, "parameterestimator"]], "Parameters": [[209, "parameters"]], "ParametricPSF": [[158, "parametricpsf"]], "Perform spectral model fitting": [[439, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[488, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[439, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[381, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[557, "phase-curve-temporal-model"]], "Phase-resolved map": [[463, "phase-resolved-map"]], "Phase-resolved spectrum": [[463, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[168, "phasebackgroundmaker"]], "Phasogram": [[463, "phasogram"]], "Piecewise  norm spectral model": [[540, "piecewise-norm-spectral-model"]], "Piecewise norm spatial model": [[523, "piecewise-norm-spatial-model"]], "PiecewiseNormSpatialModel": [[242, "piecewisenormspatialmodel"]], "PiecewiseNormSpectralModel": [[243, "piecewisenormspectralmodel"]], "Pixel coordinate convention": [[368, "pixel-coordinate-convention"]], "Plot": [[452, "plot"]], "Plot off regions": [[442, "plot-off-regions"]], "Plot resulting images": [[446, "plot-resulting-images"]], "Plot the fitted spectrum": [[488, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[438, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[456, "plotting-results"]], "Plotting a RegionGeom": [[516, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[473, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[443, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[516, "plotting-the-map-content"]], "Plotting the results": [[453, "plotting-the-results"]], "Plotting the underlying region": [[516, "plotting-the-underlying-region"]], "Point Spread Function": [[509, "point-spread-function"]], "Point source sensitivity": [[437, "point-source-sensitivity"]], "Point spatial model": [[524, "point-spatial-model"]], "Point spread function": [[478, "point-spread-function"]], "PointSpatialModel": [[244, "pointspatialmodel"]], "PointingInfo": [[93, "pointinginfo"]], "PointingMode": [[94, "pointingmode"]], "Possible implementations": [[394, "possible-implementations"]], "Post release": [[397, "post-release"]], "Power Law Fit": [[440, "power-law-fit"]], "Power law 2 spectral model": [[542, "power-law-2-spectral-model"]], "Power law norm spectral model": [[543, "power-law-norm-spectral-model"]], "Power law spectral model": [[541, "power-law-spectral-model"]], "PowerLaw temporal model": [[555, "powerlaw-temporal-model"]], "PowerLaw2SpectralModel": [[245, "powerlaw2spectralmodel"]], "PowerLawNormSpectralModel": [[246, "powerlawnormspectralmodel"]], "PowerLawSpectralModel": [[247, "powerlawspectralmodel"]], "PowerLawTemporalModel": [[248, "powerlawtemporalmodel"]], "Predicted counts": [[499, "predicted-counts"]], "Prepare and run the event sampler": [[455, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[439, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[488, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[439, "prerequisites"], [440, "prerequisites"], [442, "prerequisites"], [443, "prerequisites"], [444, "prerequisites"], [445, "prerequisites"], [447, "prerequisites"], [451, "prerequisites"], [453, "prerequisites"], [454, "prerequisites"], [455, "prerequisites"], [456, "prerequisites"], [458, "prerequisites"], [459, "prerequisites"], [460, "prerequisites"], [461, "prerequisites"], [462, "prerequisites"], [468, "prerequisites"], [472, "prerequisites"], [473, "prerequisites"], [476, "prerequisites"], [487, "prerequisites"], [488, "prerequisites"]], "Pretty-print source information": [[466, "pretty-print-source-information"]], "PrimaryFlux": [[26, "primaryflux"]], "PriorParameter": [[210, "priorparameter"]], "PriorParameters": [[211, "priorparameters"]], "Priors": [[476, "priors"]], "Profile Estimation": [[456, "profile-estimation"]], "Profile Likelihood": [[566, "profile-likelihood"]], "Profiles": [[465, "profiles"]], "Project Management": [[377, "project-management"]], "Project setup": [[398, "project-setup"]], "Projects": [[377, "projects"]], "Proposal": [[376, "proposal"], [378, "proposal"], [379, "proposal"], [380, "proposal"], [381, "proposal"], [382, "proposal"], [383, "proposal"], [384, "proposal"], [386, "proposal"], [387, "proposal"], [388, "proposal"], [389, "proposal"], [390, "proposal"], [391, "proposal"]], "Proposal of API for flux estimate results": [[392, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[456, "proposed-approach"]], "Proposed approach": [[439, "proposed-approach"], [440, "proposed-approach"], [443, "proposed-approach"], [445, "proposed-approach"], [446, "proposed-approach"], [447, "proposed-approach"], [448, "proposed-approach"], [451, "proposed-approach"], [454, "proposed-approach"], [455, "proposed-approach"], [458, "proposed-approach"], [459, "proposed-approach"], [460, "proposed-approach"], [461, "proposed-approach"], [462, "proposed-approach"], [468, "proposed-approach"], [472, "proposed-approach"], [473, "proposed-approach"], [475, "proposed-approach"], [487, "proposed-approach"], [488, "proposed-approach"]], "Proposed class diagram": [[378, "proposed-class-diagram"]], "Proposed metadata classes": [[395, "proposed-metadata-classes"]], "Proposed solution": [[395, "proposed-solution"]], "Pull Requests": [[421, "pull-requests"], [422, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"]], "Pull requests": [[407, "pull-requests"], [408, "pull-requests"], [409, "pull-requests"], [410, "pull-requests"], [411, "pull-requests"], [412, "pull-requests"], [413, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"]], "Pulsar": [[51, "pulsar"]], "Pulsar Source Models": [[495, "pulsar-source-models"]], "Pulsar Wind Nebula Source Models": [[496, "pulsar-wind-nebula-source-models"]], "Pulsar analysis": [[463, "pulsar-analysis"]], "Python": [[404, "id2"]], "Python scripts": [[404, "python-scripts"]], "Python version support": [[368, "python-version-support"]], "RadMax2D": [[159, "radmax2d"]], "Read and Introduce Data": [[456, "read-and-introduce-data"]], "Read in input images": [[446, "read-in-input-images"]], "Read the datasets": [[473, "read-the-datasets"]], "Read the energy-dependent model": [[455, "read-the-energy-dependent-model"]], "Reading Maps": [[471, "reading-maps"]], "Reading and Writing": [[471, "reading-and-writing"]], "Reading and writing masks": [[472, "reading-and-writing-masks"]], "Reading different datasets": [[451, "reading-different-datasets"]], "RecoPSFMap": [[160, "recopsfmap"]], "Recommended Setup": [[400, "recommended-setup"], [402, "recommended-setup"]], "Reference": [[388, "reference"], [563, "reference"]], "References": [[562, "publications"]], "Reflected regions background": [[470, "reflected-regions-background"], [512, "reflected-regions-background"]], "ReflectedRegionsBackgroundMaker": [[169, "reflectedregionsbackgroundmaker"]], "ReflectedRegionsFinder": [[170, "reflectedregionsfinder"]], "Region arguments": [[382, "region-arguments"]], "RegionGeom": [[195, "regiongeom"], [516, "regiongeom"]], "RegionGeom and RegionNDMap": [[516, "regiongeom-and-regionndmap"]], "RegionGeom and coordinates": [[516, "regiongeom-and-coordinates"]], "RegionNDMap": [[196, "regionndmap"], [516, "regionndmap"]], "RegionsFinder": [[171, "regionsfinder"]], "Relation to WCS geometries": [[516, "relation-to-wcs-geometries"]], "Release notes": [[368, "release-notes"], [406, "release-notes"]], "Release preparation, feature freeze": [[393, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[393, "release-scheduling-and-lts"]], "Releases": [[377, "releases"], [394, "releases"], [398, "releases"]], "Releasing the final version of the major release": [[397, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[397, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[473, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[368, "removing-an-attribute"]], "Renaming an argument": [[368, "renaming-an-argument"]], "Required dependencies": [[367, "required-dependencies"], [385, "required-dependencies"]], "Requirements": [[395, "requirements"]], "Resampling datasets": [[467, "resampling-datasets"]], "Resolve gammapy.detect": [[389, "resolve-gammapy-detect"]], "Results": [[437, "results"]], "Results exploration": [[443, "results-exploration"]], "Ring background": [[470, "ring-background"], [513, "ring-background"]], "Ring background map": [[448, "ring-background-map"]], "RingBackgroundMaker": [[172, "ringbackgroundmaker"]], "Rotated regions": [[382, "rotated-regions"]], "Run Estimation": [[456, "run-estimation"]], "Run Estimator": [[453, "run-estimator"]], "Run data reduction chain": [[442, "run-data-reduction-chain"], [444, "run-data-reduction-chain"]], "Run the 1D data reduction": [[460, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[460, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[563, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[371, "running-tests-building-documentation"]], "Running the Data Reduction": [[443, "running-the-data-reduction"]], "Running the analysis": [[487, "running-the-analysis"]], "Running the estimation": [[443, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[443, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[443, "running-the-fit"]], "Running the light curve extraction in 1D": [[460, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, "snr"]], "SNRTrueloveMcKee": [[53, "snrtruelovemckee"]], "SPATIAL_MODEL_REGISTRY": [[249, "spatial-model-registry"]], "SPECTRAL_MODEL_REGISTRY": [[250, "spectral-model-registry"]], "Safe data range definition": [[511, "safe-data-range-definition"]], "Safe data range handling": [[470, "safe-data-range-handling"]], "SafeMaskMaker": [[173, "safemaskmaker"]], "Sample a source with energy-dependent temporal evolution": [[455, "sample-a-source-with-energy-dependent-temporal-evolution"]], "Sampling methods": [[381, "sampling-methods"]], "Sampling the source and background events": [[454, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[443, "save-dataset-to-disk"], [487, "save-dataset-to-disk"], [488, "save-dataset-to-disk"]], "ScaleSpectralModel": [[251, "scalespectralmodel"]], "ScaledRegularGridInterpolator": [[309, "scaledregulargridinterpolator"]], "Scripts": [[483, "scripts"]], "Select a catalog subset": [[466, "select-a-catalog-subset"]], "Select a source": [[466, "select-a-source"]], "Select observations": [[452, "select-observations"]], "Select the ON region": [[439, "select-the-on-region"]], "Select the data": [[439, "select-the-data"], [461, "select-the-data"]], "Selecting models contributing to a given region": [[473, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[473, "selecting-models-from-a-list"]], "SensitivityEstimator": [[130, "sensitivityestimator"]], "Serialisation": [[396, "serialisation"], [469, "serialisation"], [469, "id1"], [469, "id2"], [479, "serialisation"]], "Serialisation and I/O": [[456, "serialisation-and-i-o"]], "Serialisation of datasets": [[499, "serialisation-of-datasets"]], "Serialisation of the fit result": [[443, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[443, "serialisation-of-the-results"]], "Serialising models": [[473, "serialising-models"]], "Serialization": [[395, "serialization"]], "Setting fitting parameters": [[443, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[487, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[487, "setting-the-background-normalization-maker"]], "Setting the data to use": [[487, "setting-the-data-to-use"]], "Setting the exclusion mask": [[443, "setting-the-exclusion-mask"], [487, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[487, "setting-the-reduced-datasets-geometry"]], "Setup": [[437, "setup"], [438, "setup"], [439, "setup"], [440, "setup"], [442, "setup"], [443, "setup"], [444, "setup"], [445, "setup"], [446, "setup"], [447, "setup"], [448, "setup"], [452, "setup"], [453, "setup"], [454, "setup"], [455, "setup"], [456, "setup"], [459, "setup"], [460, "setup"], [461, "setup"], [462, "setup"], [465, "setup"], [467, "setup"], [470, "setup"], [471, "setup"], [472, "setup"], [473, "setup"], [474, "setup"], [478, "setup"], [479, "setup"], [487, "setup"], [488, "setup"], [489, "setup"]], "Shell spatial model": [[525, "shell-spatial-model"]], "Shell2 spatial model": [[526, "shell2-spatial-model"]], "Shell2SpatialModel": [[252, "shell2spatialmodel"]], "ShellSpatialModel": [[253, "shellspatialmodel"]], "Show images": [[452, "show-images"]], "Show the results tables": [[453, "show-the-results-tables"]], "Show various observation quantities": [[475, "show-various-observation-quantities"]], "SimplePulsar": [[54, "simplepulsar"]], "Simplify YAML Parameter Representation": [[391, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[391, "simplify-yaml-representation"]], "Simulate multiple event lists": [[454, "simulate-multiple-event-lists"]], "Simulating a light curve": [[462, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[462, "simulating-and-fitting-a-time-varying-source"]], "Simulation": [[458, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[380, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[445, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[556, "sine-temporal-model"]], "SineTemporalModel": [[254, "sinetemporalmodel"]], "Skip unit tests for some Astropy versions": [[368, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[382, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[515, "sky-maps-dl4"]], "SkyModel": [[255, "skymodel"], [474, "skymodel"]], "Smooth broken power law spectral model": [[544, "smooth-broken-power-law-spectral-model"]], "SmoothBrokenPowerLawSpectralModel": [[256, "smoothbrokenpowerlawspectralmodel"]], "Some terminology": [[378, "some-terminology"]], "Source Detection": [[452, "source-detection"]], "Source candidates": [[446, "source-candidates"]], "Source catalogs": [[466, "source-catalogs"], [489, "source-catalogs"], [498, "source-catalogs"]], "Source detection and significance maps": [[446, "source-detection-and-significance-maps"]], "Source information": [[466, "source-information"]], "Source models": [[466, "source-models"], [478, "source-models"]], "Source object": [[466, "source-object"]], "Source statistic": [[442, "source-statistic"]], "SourceCatalog": [[56, "sourcecatalog"]], "SourceCatalog1LHAASO": [[57, "sourcecatalog1lhaaso"]], "SourceCatalog2FHL": [[58, "sourcecatalog2fhl"]], "SourceCatalog2HWC": [[59, "sourcecatalog2hwc"]], "SourceCatalog2PC": [[60, "sourcecatalog2pc"]], "SourceCatalog3FGL": [[61, "sourcecatalog3fgl"]], "SourceCatalog3FHL": [[62, "sourcecatalog3fhl"]], "SourceCatalog3HWC": [[63, "sourcecatalog3hwc"]], "SourceCatalog3PC": [[64, "sourcecatalog3pc"]], "SourceCatalog4FGL": [[65, "sourcecatalog4fgl"]], "SourceCatalogGammaCat": [[66, "sourcecataloggammacat"]], "SourceCatalogHGPS": [[67, "sourcecataloghgps"]], "SourceCatalogLargeScaleHGPS": [[68, "sourcecataloglargescalehgps"]], "SourceCatalogObject": [[69, "sourcecatalogobject"]], "SourceCatalogObject1LHAASO": [[70, "sourcecatalogobject1lhaaso"]], "SourceCatalogObject2FHL": [[71, "sourcecatalogobject2fhl"]], "SourceCatalogObject2HWC": [[72, "sourcecatalogobject2hwc"]], "SourceCatalogObject2PC": [[73, "sourcecatalogobject2pc"]], "SourceCatalogObject3FGL": [[74, "sourcecatalogobject3fgl"]], "SourceCatalogObject3FHL": [[75, "sourcecatalogobject3fhl"]], "SourceCatalogObject3HWC": [[76, "sourcecatalogobject3hwc"]], "SourceCatalogObject3PC": [[77, "sourcecatalogobject3pc"]], "SourceCatalogObject4FGL": [[78, "sourcecatalogobject4fgl"]], "SourceCatalogObjectGammaCat": [[79, "sourcecatalogobjectgammacat"]], "SourceCatalogObjectHGPS": [[80, "sourcecatalogobjecthgps"]], "SourceCatalogObjectHGPSComponent": [[81, "sourcecatalogobjecthgpscomponent"]], "SourceIRFModel": [[379, "sourceirfmodel"]], "Spatial analysis": [[452, "spatial-analysis"]], "Spatial models": [[474, "spatial-models"], [517, "spatial-models"]], "SpatialIRFModel": [[379, "spatialirfmodel"]], "SpatialModel": [[257, "spatialmodel"]], "Special cases": [[566, "special-cases"]], "Specificities of the HGPS catalog": [[466, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[391, "spectral-absorption-model"]], "Spectral Norm Models": [[391, "spectral-norm-models"]], "Spectral analysis": [[442, "spectral-analysis"]], "Spectral analysis of extended sources": [[439, "spectral-analysis-of-extended-sources"]], "Spectral analysis with energy-dependent directional cuts": [[444, "spectral-analysis-with-energy-dependent-directional-cuts"]], "Spectral analysis with the HLI": [[443, "spectral-analysis-with-the-hli"]], "Spectral models": [[474, "spectral-models"], [517, "spectral-models"]], "Spectral models and flux points": [[489, "spectral-models-and-flux-points"]], "Spectral points": [[452, "spectral-points"]], "SpectralIRFModel": [[379, "spectralirfmodel"]], "SpectralModel": [[258, "spectralmodel"]], "Spectrum": [[452, "spectrum"]], "Spectrum dataset": [[470, "spectrum-dataset"]], "SpectrumDataset": [[108, "spectrumdataset"], [380, "spectrumdataset"], [467, "spectrumdataset"]], "SpectrumDatasetMaker": [[174, "spectrumdatasetmaker"]], "SpectrumDatasetOnOff": [[109, "spectrumdatasetonoff"], [380, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[369, "sphinx-gallery-extension"]], "Spiral arm models": [[493, "spiral-arm-models"]], "Stack observations": [[442, "stack-observations"]], "Stacked analysis": [[450, "stacked-analysis"]], "Stacking Multiple Datasets": [[499, "stacking-multiple-datasets"]], "Statistical utility functions": [[565, "statistical-utility-functions"]], "Status": [[378, "status"], [387, "status"]], "Storing the energy dispersion information as a function of sky position": [[507, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[383, "storing-the-results-and-further-studies"]], "Sub-packages": [[492, "sub-packages"]], "Suggestions": [[394, "suggestions"]], "Summary": [[407, "summary"], [408, "summary"], [409, "summary"], [410, "summary"], [411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [450, "summary"], [479, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[547, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr1-and-dr2"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[546, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr3"]], "Super exponential cutoff power law model used for 3FGL": [[545, "super-exponential-cutoff-power-law-model-used-for-3fgl"]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[259, "superexpcutoffpowerlaw3fglspectralmodel"]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[260, "superexpcutoffpowerlaw4fgldr3spectralmodel"]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[261, "superexpcutoffpowerlaw4fglspectralmodel"]], "Supernova Remnant Models": [[497, "supernova-remnant-models"]], "Support for Asymmetric IRFs": [[469, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[393, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[485, "survey-map-script"]], "Survey panel plots": [[568, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[262, "temporal-model-registry"]], "TS map estimation": [[446, "ts-map-estimation"]], "TSMapEstimator": [[131, "tsmapestimator"]], "Task List": [[380, "task-list"]], "Task list": [[379, "task-list"], [381, "task-list"], [382, "task-list"], [383, "task-list"], [384, "task-list"], [385, "task-list"]], "Template spatial model": [[527, "template-spatial-model"]], "Template spectral model": [[548, "template-spectral-model"]], "TemplateNDSpatialModel": [[263, "templatendspatialmodel"]], "TemplateNDSpectralModel": [[264, "templatendspectralmodel"]], "TemplateNPredModel": [[265, "templatenpredmodel"]], "TemplatePhaseCurveTemporalModel": [[266, "templatephasecurvetemporalmodel"]], "TemplateSpatialModel": [[267, "templatespatialmodel"]], "TemplateSpectralModel": [[268, "templatespectralmodel"]], "Temporal models": [[474, "temporal-models"], [517, "temporal-models"]], "TemporalModel": [[269, "temporalmodel"]], "Testing of plotting functions": [[368, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[374, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[453, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[398, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[398, "the-gammapy-extra-repository"]], "The index tables": [[500, "the-index-tables"]], "The reflected region finder": [[512, "the-reflected-region-finder"]], "The results for testing energy dependence": [[453, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[453, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[451, "the-setup"], [468, "the-setup"], [476, "the-setup"]], "Theta squared event distribution": [[481, "theta-squared-event-distribution"]], "Time": [[483, "time"]], "Time bin preparation": [[383, "time-bin-preparation"]], "Time bins": [[383, "time-bins"]], "Time differences": [[567, "time-differences"]], "Time format and scale": [[567, "time-format-and-scale"]], "Time handling in Gammapy": [[567, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[454, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[197, "timemapaxis"], [471, "timemapaxis"]], "Timing Analysis": [[377, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[280, "timmerkonig-lightcurve-simulator"]], "Troubleshooting": [[403, "troubleshooting"], [563, "troubleshooting"]], "Tutorial overview": [[453, "tutorial-overview"], [478, "tutorial-overview"]], "Tutorials": [[388, "tutorials"], [483, "tutorials"]], "Tutorials Overview": [[400, "tutorials-overview"]], "Type validation": [[395, "type-validation"]], "Types of supported datasets": [[499, "types-of-supported-datasets"]], "Unification of flux estimators?": [[392, "unification-of-flux-estimators"]], "Unify calling interface for models": [[379, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[516, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[396, "use-cases"]], "Use cases / scenarios": [[378, "use-cases-scenarios"]], "User guide": [[504, "user-guide"]], "User perspective": [[375, "user-perspective"]], "Using Anaconda / Miniconda": [[401, "using-anaconda-miniconda"]], "Using Factory Methods": [[471, "using-factory-methods"]], "Using Gammapy": [[404, "using-gammapy"]], "Using Gammapy IRFs": [[469, "using-gammapy-irfs"]], "Using Mamba": [[401, "using-mamba"]], "Using YAML configuration files": [[487, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[443, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[443, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[494, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[498, "using-gammapy-catalog"]], "Using gammapy.data": [[500, "using-gammapy-data"]], "Using gammapy.datasets": [[499, "using-gammapy-datasets"], [502, "using-gammapy-datasets"]], "Using gammapy.estimators": [[501, "using-gammapy-estimators"]], "Using gammapy.irf": [[508, "using-gammapy-irf"]], "Using gammapy.makers": [[511, "using-gammapy-makers"]], "Using gammapy.maps": [[515, "using-gammapy-maps"]], "Using gammapy.modeling": [[560, "using-gammapy-modeling"]], "Using masks": [[467, "using-masks"]], "Using other package managers": [[401, "using-other-package-managers"]], "Using pip": [[401, "using-pip"]], "Using regions": [[512, "using-regions"]], "Using the reflected background estimator": [[512, "using-the-reflected-background-estimator"]], "Utility functions": [[567, "utility-functions"]], "ValleeSpiral": [[38, "valleespiral"]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[493, "velocity-distributions"]], "Venv Environments": [[399, "venv-environments"]], "Version 0.1": [[406, "version-0-1"]], "Version 0.10": [[406, "version-0-10"]], "Version 0.11": [[406, "version-0-11"]], "Version 0.12": [[406, "version-0-12"]], "Version 0.13": [[406, "version-0-13"]], "Version 0.14": [[406, "version-0-14"]], "Version 0.15": [[406, "version-0-15"]], "Version 0.16": [[406, "version-0-16"]], "Version 0.17": [[406, "version-0-17"]], "Version 0.18": [[406, "version-0-18"]], "Version 0.19": [[406, "version-0-19"]], "Version 0.2": [[406, "version-0-2"]], "Version 0.20": [[406, "version-0-20"]], "Version 0.20.1": [[406, "version-0-20-1"]], "Version 0.3": [[406, "version-0-3"]], "Version 0.4": [[406, "version-0-4"]], "Version 0.5": [[406, "version-0-5"]], "Version 0.6": [[406, "version-0-6"]], "Version 0.7": [[406, "version-0-7"]], "Version 0.8": [[406, "version-0-8"]], "Version 0.9": [[406, "version-0-9"]], "Version 1.0": [[406, "version-1-0"]], "Version 1.0.1": [[406, "version-1-0-1"]], "Version 1.0.2": [[406, "version-1-0-2"]], "Version 1.1": [[406, "version-1-1"]], "Version 1.2": [[406, "version-1-2"]], "Version numbering": [[393, "version-numbering"]], "Virtual Environments": [[399, "virtual-environments"]], "Visualing a RegionNDMap": [[516, "visualing-a-regionndmap"]], "Visualization": [[568, "visualization"]], "Visualizing and Plotting": [[471, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[564, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[565, "wstat-counts-statistic"]], "WStatCountsStatistic": [[281, "wstatcountsstatistic"]], "WcsGeom": [[198, "wcsgeom"]], "WcsMap": [[199, "wcsmap"]], "WcsNDMap": [[200, "wcsndmap"]], "What checks and conversions should I do for inputs?": [[368, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[373, "what-is-a-pig"]], "What is this?": [[371, "what-is-this"]], "What next?": [[440, "what-next"], [442, "what-next"], [446, "what-next"], [452, "what-next"], [460, "what-next"], [489, "what-next"]], "What others have": [[378, "what-others-have"]], "What we have": [[376, "what-we-have"], [384, "what-we-have"], [392, "what-we-have"]], "What\u2019s new?": [[408, "what-s-new"], [409, "what-s-new"], [410, "what-s-new"], [411, "what-s-new"], [412, "what-s-new"], [413, "what-s-new"], [414, "what-s-new"], [415, "what-s-new"], [416, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"]], "What\u2019s next": [[487, "whats-next"]], "What\u2019s next?": [[443, "whats-next"]], "Where should I import from?": [[368, "where-should-i-import-from"]], "WobbleRegionsFinder": [[175, "wobbleregionsfinder"]], "Working with event lists": [[500, "working-with-event-lists"]], "Write your own CLI": [[563, "write-your-own-cli"]], "Writing Maps": [[471, "writing-maps"]], "Writing a PIG": [[373, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[516, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[500, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[519, "yaml-representation"], [520, "yaml-representation"], [521, "yaml-representation"], [522, "yaml-representation"], [523, "yaml-representation"], [524, "yaml-representation"], [525, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"]], "YusifovKucuk2004": [[39, "yusifovkucuk2004"]], "YusifovKucuk2004B": [[40, "yusifovkucuk2004b"]], "ZhaoProfile": [[27, "zhaoprofile"]], "absolute_time": [[349, "absolute-time"]], "add_colorbar": [[356, "add-colorbar"]], "add_observed_parameters": [[41, "add-observed-parameters"]], "add_pulsar_parameters": [[42, "add-pulsar-parameters"]], "add_pwn_parameters": [[43, "add-pwn-parameters"]], "add_snr_parameters": [[44, "add-snr-parameters"]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, "analysis-high-level-interface"]], "annotate_heatmap": [[357, "annotate-heatmap"]], "apply_edisp": [[110, "apply-edisp"], [114, "apply-edisp"]], "arbitrary type input and validation": [[395, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[507, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[506, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[506, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[507, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[505, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[343, "assert-quantity-allclose"]], "assert_skycoord_allclose": [[344, "assert-skycoord-allclose"]], "assert_time_allclose": [[345, "assert-time-allclose"]], "astro - Astrophysics": [[1, "astro-astrophysics"]], "cartesian": [[298, "cartesian"]], "cash": [[282, "cash"]], "cash_sum_cython": [[283, "cash-sum-cython"]], "catalog - Source catalogs": [[2, "catalog-source-catalogs"]], "check": [[11, "gammapy-check"]], "codemeta.json": [[394, "codemeta-json"]], "colormap_hess": [[358, "colormap-hess"]], "colormap_milagro": [[359, "colormap-milagro"]], "compound_region_to_regions": [[328, "compound-region-to-regions"]], "compute_chisq": [[284, "compute-chisq"]], "compute_flux_doubling": [[285, "compute-flux-doubling"]], "compute_fpp": [[286, "compute-fpp"]], "compute_fvar": [[287, "compute-fvar"]], "compute_lightcurve_doublingtime": [[132, "compute-lightcurve-doublingtime"]], "compute_lightcurve_fpp": [[133, "compute-lightcurve-fpp"]], "compute_lightcurve_fvar": [[134, "compute-lightcurve-fvar"]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[201, "containment-radius"]], "containment_region": [[202, "containment-region"]], "create_cosmic_ray_spectral_model": [[270, "create-cosmic-ray-spectral-model"]], "create_crab_spectral_model": [[271, "create-crab-spectral-model"]], "create_fermi_isotropic_diffuse_model": [[272, "create-fermi-isotropic-diffuse-model"]], "create_map_dataset_from_observation": [[111, "create-map-dataset-from-observation"]], "create_map_dataset_geoms": [[112, "create-map-dataset-geoms"]], "cstat": [[288, "cstat"]], "data": [[395, "data"]], "data - DL3 data and observations": [[3, "data-dl3-data-and-observations"]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, "datasets-reduced-datasets"]], "docs.gammapy.org": [[398, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[320, "draw"]], "earth_location_from_dict": [[307, "earth-location-from-dict"]], "estimate_exposure_reco_energy": [[135, "estimate-exposure-reco-energy"]], "estimators - High level estimators": [[5, "estimators-high-level-estimators"]], "f_cash_root_cython": [[289, "f-cash-root-cython"]], "find_peaks": [[136, "find-peaks"]], "find_peaks_in_flux_map": [[137, "find-peaks-in-flux-map"]], "fov_to_sky": [[299, "fov-to-sky"]], "galactic": [[300, "galactic"]], "gamLike": [[491, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[398, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[138, "get-combined-significance-maps"]], "get_images_paths": [[333, "get-images-paths"]], "get_irfs_features": [[95, "get-irfs-features"]], "get_random_state": [[321, "get-random-state"]], "get_rebinned_axis": [[139, "get-rebinned-axis"]], "get_wstat_gof_terms": [[290, "get-wstat-gof-terms"]], "get_wstat_mu_bkg": [[291, "get-wstat-mu-bkg"]], "hierarchical_clustering": [[295, "hierarchical-clustering"]], "hstack_columns": [[338, "hstack-columns"]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[273, "integrate-spectrum"]], "interpolate_profile": [[310, "interpolate-profile"]], "interpolation_scale": [[311, "interpolation-scale"]], "irf - Instrument response functions": [[7, "irf-instrument-response-functions"]], "load_irf_dict_from_file": [[161, "load-irf-dict-from-file"]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, "make-base-catalog-galactic"]], "make_catalog_random_positions_cube": [[46, "make-catalog-random-positions-cube"]], "make_catalog_random_positions_sphere": [[47, "make-catalog-random-positions-sphere"]], "make_concentric_annulus_sky_regions": [[329, "make-concentric-annulus-sky-regions"]], "make_counts_rad_max": [[176, "make-counts-rad-max"]], "make_edisp_kernel_map": [[177, "make-edisp-kernel-map"]], "make_edisp_map": [[178, "make-edisp-map"]], "make_effective_livetime_map": [[179, "make-effective-livetime-map"]], "make_map_background_irf": [[180, "make-map-background-irf"]], "make_map_exposure_true_energy": [[181, "make-map-exposure-true-energy"]], "make_observation_time_map": [[182, "make-observation-time-map"]], "make_orthogonal_rectangle_sky_regions": [[330, "make-orthogonal-rectangle-sky-regions"]], "make_path": [[334, "make-path"]], "make_psf_map": [[183, "make-psf-map"]], "make_theta_squared_table": [[184, "make-theta-squared-table"]], "makers - Data reduction": [[8, "makers-data-reduction"]], "maps - Sky maps": [[9, "maps-sky-maps"]], "modeling - Models and fitting": [[10, "modeling-models-and-fitting"]], "motion_since_birth": [[301, "motion-since-birth"]], "mpl_plot_check": [[346, "mpl-plot-check"]], "multiprocessing_manager": [[317, "multiprocessing-manager"]], "norm_bounds_cython": [[292, "norm-bounds-cython"]], "normalize": [[322, "normalize"]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[96, "observatory-locations"]], "pdf": [[323, "pdf"]], "plot_contour_line": [[360, "plot-contour-line"]], "plot_distribution": [[361, "plot-distribution"]], "plot_heatmap": [[362, "plot-heatmap"]], "plot_map_rgb": [[363, "plot-map-rgb"]], "plot_npred_signal": [[364, "plot-npred-signal"]], "plot_spectrum_datasets_off_regions": [[365, "plot-spectrum-datasets-off-regions"]], "plot_theta_squared_table": [[366, "plot-theta-squared-table"]], "polar": [[302, "polar"]], "pydantic": [[395, "pydantic"]], "radial_distributions": [[48, "radial-distributions"]], "read_hermes_cube": [[274, "read-hermes-cube"], [276, "read-hermes-cube"]], "read_yaml": [[335, "read-yaml"]], "recursive_merge_dicts": [[336, "recursive-merge-dicts"]], "region_to_frame": [[331, "region-to-frame"]], "regions_to_compound_region": [[332, "regions-to-compound-region"]], "requires_data": [[347, "requires-data"]], "requires_dependency": [[348, "requires-dependency"]], "resample_energy_edges": [[140, "resample-energy-edges"]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[318, "run-multiprocessing"]], "sample_powerlaw": [[324, "sample-powerlaw"]], "sample_sphere": [[325, "sample-sphere"]], "sample_sphere_distance": [[326, "sample-sphere-distance"]], "sample_times": [[327, "sample-times"]], "scale_plot_flux": [[275, "scale-plot-flux"]], "scripts - Command line tools": [[11, "scripts-command-line-tools"]], "select_nested_models": [[277, "select-nested-models"]], "sky_to_fov": [[303, "sky-to-fov"]], "split_dataset": [[113, "split-dataset"], [115, "split-dataset"]], "standard_scaler": [[296, "standard-scaler"]], "standardise_unit": [[353, "standardise-unit"]], "stat_profile_ul_scipy": [[278, "stat-profile-ul-scipy"]], "stats - Statistics": [[12, "stats-statistics"]], "structure_function": [[293, "structure-function"]], "table_row_to_dict": [[339, "table-row-to-dict"]], "table_standardise_units_copy": [[340, "table-standardise-units-copy"]], "table_standardise_units_inplace": [[341, "table-standardise-units-inplace"]], "the base class": [[395, "the-base-class"]], "time_ref_from_dict": [[350, "time-ref-from-dict"]], "time_ref_to_dict": [[351, "time-ref-to-dict"]], "time_relative_to_ref": [[352, "time-relative-to-ref"]], "trapz_loglog": [[308, "trapz-loglog"]], "unit_from_fits_image_hdu": [[354, "unit-from-fits-image-hdu"]], "utils - Utilities": [[13, "utils-utilities"]], "velocity_distributions": [[49, "velocity-distributions"]], "velocity_glon_glat": [[304, "velocity-glon-glat"]], "visualization - Plotting features": [[14, "visualization-plotting-features"]], "write_yaml": [[337, "write-yaml"]], "wstat": [[294, "wstat"]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[562, "term-1D-Analysis", true]], "3d analysis": [[562, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[309, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[349, "gammapy.utils.time.absolute_time", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[356, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[562, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[121, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[123, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[150, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[93, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[357, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[110, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[114, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[193, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[116, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[343, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[344, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[345, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[164, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[173, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[167, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[174, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[312, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[141, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[142, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[143, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[562, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[298, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[562, "term-Cash", true]], "cash() (in module gammapy.stats)": [[282, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[283, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[279, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[342, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[358, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[359, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[328, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[284, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[285, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[286, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[287, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[132, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[116, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[119, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[127, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[129, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[130, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[201, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[202, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[119, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[127, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[193, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[203, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[204, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[187, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[193, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[195, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[199, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[238, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[255, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[270, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[271, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[272, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[111, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[288, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[297, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[155, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[562, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[98, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[97, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[99, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[163, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[562, "term-DL3", true]], "dl4": [[562, "term-DL4", true]], "dl5": [[562, "term-DL5", true]], "dl6": [[562, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[320, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[94, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[307, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[221, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[562, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[144, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[145, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[146, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[147, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[149, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[120, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[562, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[119, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[117, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[233, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[254, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[156, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[156, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[102, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[107, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[102, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[107, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[128, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[289, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[205, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[206, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[121, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[122, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[100, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[562, "term-FoV", true]], "fov background": [[562, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[299, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[150, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[164, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[191, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[100, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[218, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[233, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[238, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[239, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[240, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[244, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[253, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[254, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[255, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[257, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[258, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[265, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[269, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[209, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[211, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[203, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[155, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[187, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[188, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[194, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[196, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[199, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[200, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[141, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[142, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[143, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[151, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[152, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[158, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[154, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[156, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[185, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[187, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[194, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[195, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[199, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[186, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[198, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[90, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[233, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[239, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[244, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[253, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[254, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[255, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[257, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[258, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[265, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[269, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[244, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[253, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[257, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[219, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[195, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[155, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[91, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[187, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[189, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[190, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[199, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[200, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[203, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[209, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[211, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[141, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[142, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[143, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[151, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[158, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[154, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[156, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[189, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[191, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[191, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[192, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[197, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[188, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[218, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[240, "gammapy.modeling.models.Models.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[562, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[300, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[185, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[194, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[93, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[105, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[106, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[93, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[333, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[186, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[95, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[321, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[116, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[203, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[105, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[290, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[291, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.groups", false]], "gti": [[562, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[305, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[295, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[562, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[186, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[187, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[188, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[338, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[91, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[126, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[273, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[310, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[311, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[319, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[562, "term-IRF", true]], "irf (class in gammapy.irf)": [[151, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[153, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[152, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[185, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[562, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[172, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[189, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[306, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[161, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[329, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[168, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[168, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[176, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[181, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[172, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[167, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[330, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[334, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[562, "term-Maker", true]], "maker (class in gammapy.makers)": [[166, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[165, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[190, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[191, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[192, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[193, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[167, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[355, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[194, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[98, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.message", false]], "met": [[562, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[164, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[313, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[314, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[236, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[301, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[346, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[317, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[92, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[315, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[98, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[292, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[322, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[107, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observations (class in gammapy.data)": [[91, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[92, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[90, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[96, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[105, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[207, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[92, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[208, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[209, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[99, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[158, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[305, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[323, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[197, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[355, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[360, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[203, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[361, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[362, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[363, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[364, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[355, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[365, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[366, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[94, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[93, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[94, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[302, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[316, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[210, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[211, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.projection", false]], "psf": [[562, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[154, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[155, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[155, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[156, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[157, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[150, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[159, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[90, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[93, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[99, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[100, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[101, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[104, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[105, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[108, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[121, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[123, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[141, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[142, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[143, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[144, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[145, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[146, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[147, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[149, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[151, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[152, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[158, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[154, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[155, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[156, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[157, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[159, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[160, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[187, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[188, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[190, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[194, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[196, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[199, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[200, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[218, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[240, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[274, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[276, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[105, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[335, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[562, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[160, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[336, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[562, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[170, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[331, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[195, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[196, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[332, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[171, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[347, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[348, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[562, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[172, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[562, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[92, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[119, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[120, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[124, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[125, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[127, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[128, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[129, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[130, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[131, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[163, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[164, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[166, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[167, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[168, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[170, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[171, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[172, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[173, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[174, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[175, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[342, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[318, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[173, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[319, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[319, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[324, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[102, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[107, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[325, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[326, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[327, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[275, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[309, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[277, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[91, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[116, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[116, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[119, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[127, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[129, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[130, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[203, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[191, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[203, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[92, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[303, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[126, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[249, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[250, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[108, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[174, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[113, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[115, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[562, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[296, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[353, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[278, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[205, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[293, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[204, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[279, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[281, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[339, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[340, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[341, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[98, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[100, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[101, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[103, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[104, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[105, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[106, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[108, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[116, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[118, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[119, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[120, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[122, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[124, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[125, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[127, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[128, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[129, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[130, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[131, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[145, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[146, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[152, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[157, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[160, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[162, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[163, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[164, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[166, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[167, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[168, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[169, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[172, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[173, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[174, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[262, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[193, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[93, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[350, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[351, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[352, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[233, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[254, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[269, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[197, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[280, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[98, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[204, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.fitresult method)": [[206, "gammapy.modeling.FitResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[207, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[193, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[103, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[122, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.fitresult method)": [[206, "gammapy.modeling.FitResult.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[206, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[207, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[308, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[562, "term-True-Energy", true]], "ts": [[562, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[279, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[281, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[121, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[123, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[213, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[217, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[219, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[226, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[227, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[233, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[239, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[241, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[244, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[251, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[252, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[254, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[255, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[257, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[258, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[265, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[267, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[268, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[269, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[212, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[213, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[214, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[215, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[216, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[217, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[219, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[220, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[225, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[226, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[227, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[228, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[230, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[233, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[234, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[237, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[239, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[241, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[242, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[244, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[245, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[246, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[248, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[251, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[252, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[253, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[254, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[255, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[256, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[257, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[258, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[260, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[268, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[269, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[209, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[211, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[141, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[142, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[143, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[144, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[147, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[149, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[151, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[158, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[154, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[156, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[159, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[187, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[188, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[189, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[190, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[196, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[197, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[199, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[200, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[354, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[208, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[210, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[185, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[186, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[189, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[191, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[195, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[197, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[198, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[192, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[103, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[122, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[208, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[209, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[210, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[211, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[90, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[304, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[218, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[240, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[198, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[199, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[200, "gammapy.maps.WcsNDMap", false]], "width (gammapy.maps.hpxgeom attribute)": [[186, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[195, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[198, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[253, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[175, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[192, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[90, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[99, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[100, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[101, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[104, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[108, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[109, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[121, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[123, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[141, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[142, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[143, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[144, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[145, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[146, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[147, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[148, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[149, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[151, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[152, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[158, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[154, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[155, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[156, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[157, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[159, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[160, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[187, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[188, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[190, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[194, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[196, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[199, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[200, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[206, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[232, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[263, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[264, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[265, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[266, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[267, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[218, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[240, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[106, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[337, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[562, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[294, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[281, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[126, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationTable"], [91, 1, 1, "", "Observations"], [92, 1, 1, "", "ObservationsEventsSampler"], [93, 1, 1, "", "PointingInfo"], [94, 1, 1, "", "PointingMode"], [95, 4, 1, "", "get_irfs_features"], [96, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"], [83, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "muoneff"], [88, 2, 1, "", "obs_info"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationTable": [[90, 2, 1, "", "ColumnClass"], [90, 3, 1, "", "add_column"], [90, 3, 1, "", "add_columns"], [90, 3, 1, "", "add_index"], [90, 3, 1, "", "add_row"], [90, 3, 1, "", "argsort"], [90, 3, 1, "", "as_array"], [90, 2, 1, "", "colnames"], [90, 3, 1, "", "convert_bytestring_to_unicode"], [90, 3, 1, "", "convert_unicode_to_bytestring"], [90, 3, 1, "", "copy"], [90, 2, 1, "", "dtype"], [90, 3, 1, "", "field"], [90, 3, 1, "", "filled"], [90, 3, 1, "", "from_pandas"], [90, 3, 1, "", "group_by"], [90, 2, 1, "", "groups"], [90, 2, 1, "", "has_masked_columns"], [90, 2, 1, "", "has_masked_values"], [90, 2, 1, "", "has_mixin_columns"], [90, 2, 1, "", "iloc"], [90, 3, 1, "", "index_column"], [90, 3, 1, "", "index_mode"], [90, 2, 1, "", "indices"], [90, 2, 1, "", "info"], [90, 3, 1, "", "insert_row"], [90, 3, 1, "", "items"], [90, 3, 1, "", "itercols"], [90, 3, 1, "", "iterrows"], [90, 3, 1, "", "keep_columns"], [90, 3, 1, "", "keys"], [90, 2, 1, "", "loc"], [90, 2, 1, "", "loc_indices"], [90, 2, 1, "", "mask"], [90, 2, 1, "", "masked"], [90, 2, 1, "", "meta"], [90, 3, 1, "", "more"], [90, 3, 1, "", "pformat"], [90, 3, 1, "", "pformat_all"], [90, 2, 1, "", "pointing_galactic"], [90, 2, 1, "", "pointing_radec"], [90, 3, 1, "", "pprint"], [90, 3, 1, "", "pprint_all"], [90, 2, 1, "", "pprint_exclude_names"], [90, 2, 1, "", "pprint_include_names"], [90, 3, 1, "", "read"], [90, 3, 1, "", "remove_column"], [90, 3, 1, "", "remove_columns"], [90, 3, 1, "", "remove_indices"], [90, 3, 1, "", "remove_row"], [90, 3, 1, "", "remove_rows"], [90, 3, 1, "", "rename_column"], [90, 3, 1, "", "rename_columns"], [90, 3, 1, "", "replace_column"], [90, 3, 1, "", "reverse"], [90, 3, 1, "", "round"], [90, 3, 1, "", "select_obs_id"], [90, 3, 1, "", "select_observations"], [90, 3, 1, "", "select_range"], [90, 3, 1, "", "select_sky_circle"], [90, 3, 1, "", "select_time_range"], [90, 3, 1, "", "show_in_browser"], [90, 3, 1, "", "show_in_notebook"], [90, 3, 1, "", "sort"], [90, 3, 1, "", "summary"], [90, 2, 1, "", "time_ref"], [90, 2, 1, "", "time_start"], [90, 2, 1, "", "time_stop"], [90, 3, 1, "", "to_pandas"], [90, 3, 1, "", "update"], [90, 3, 1, "", "values"], [90, 3, 1, "", "values_equal"], [90, 2, 1, "", "write"]], "gammapy.data.Observations": [[91, 3, 1, "", "append"], [91, 3, 1, "", "clear"], [91, 3, 1, "", "count"], [91, 3, 1, "", "extend"], [91, 3, 1, "", "from_stack"], [91, 3, 1, "", "group_by_label"], [91, 2, 1, "", "ids"], [91, 3, 1, "", "in_memory_generator"], [91, 3, 1, "", "index"], [91, 3, 1, "", "insert"], [91, 3, 1, "", "pop"], [91, 3, 1, "", "remove"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[92, 2, 1, "", "n_jobs"], [92, 2, 1, "", "parallel_backend"], [92, 3, 1, "", "run"], [92, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[93, 2, 1, "", "altaz"], [93, 2, 1, "", "altaz_frame"], [93, 2, 1, "", "altaz_from_table"], [93, 3, 1, "", "altaz_interpolate"], [93, 2, 1, "", "duration"], [93, 3, 1, "", "get_altaz"], [93, 3, 1, "", "get_icrs"], [93, 2, 1, "", "location"], [93, 2, 1, "", "radec"], [93, 3, 1, "", "read"], [93, 2, 1, "", "time"], [93, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[94, 2, 1, "", "DRIFT"], [94, 2, 1, "", "POINTING"]], "gammapy.datasets": [[97, 5, 1, "", "DATASET_REGISTRY"], [98, 1, 1, "", "Dataset"], [99, 1, 1, "", "Datasets"], [100, 1, 1, "", "FluxPointsDataset"], [101, 1, 1, "", "MapDataset"], [102, 1, 1, "", "MapDatasetEventSampler"], [103, 1, 1, "", "MapDatasetMetaData"], [104, 1, 1, "", "MapDatasetOnOff"], [105, 1, 1, "", "OGIPDatasetReader"], [106, 1, 1, "", "OGIPDatasetWriter"], [107, 1, 1, "", "ObservationEventSampler"], [108, 1, 1, "", "SpectrumDataset"], [109, 1, 1, "", "SpectrumDatasetOnOff"], [110, 4, 1, "", "apply_edisp"], [111, 4, 1, "", "create_map_dataset_from_observation"], [112, 4, 1, "", "create_map_dataset_geoms"], [113, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[98, 3, 1, "", "copy"], [98, 2, 1, "", "mask"], [98, 2, 1, "", "name"], [98, 3, 1, "", "stat_array"], [98, 3, 1, "", "stat_sum"], [98, 2, 1, "", "tag"], [98, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[99, 3, 1, "", "append"], [99, 3, 1, "", "clear"], [99, 2, 1, "", "contributes_to_stat"], [99, 3, 1, "", "copy"], [99, 3, 1, "", "count"], [99, 2, 1, "", "energy_axes_are_aligned"], [99, 2, 1, "", "energy_ranges"], [99, 3, 1, "", "extend"], [99, 2, 1, "", "gti"], [99, 3, 1, "", "index"], [99, 3, 1, "", "info_table"], [99, 3, 1, "", "insert"], [99, 2, 1, "", "is_all_same_energy_shape"], [99, 2, 1, "", "is_all_same_shape"], [99, 2, 1, "", "is_all_same_type"], [99, 2, 1, "", "meta_table"], [99, 2, 1, "", "models"], [99, 2, 1, "", "names"], [99, 2, 1, "", "parameters"], [99, 3, 1, "", "pop"], [99, 3, 1, "", "read"], [99, 3, 1, "", "remove"], [99, 3, 1, "", "reverse"], [99, 3, 1, "", "select_time"], [99, 3, 1, "", "slice_by_energy"], [99, 3, 1, "", "stack_reduce"], [99, 3, 1, "", "stat_sum"], [99, 3, 1, "", "to_spectrum_datasets"], [99, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[100, 2, 1, "", "available_stat_type"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "data_shape"], [100, 3, 1, "", "flux_pred"], [100, 3, 1, "", "from_dict"], [100, 2, 1, "", "gti"], [100, 2, 1, "", "mask"], [100, 2, 1, "", "mask_safe"], [100, 2, 1, "", "mask_valid"], [100, 2, 1, "", "models"], [100, 2, 1, "", "name"], [100, 3, 1, "", "plot_fit"], [100, 3, 1, "", "plot_residuals"], [100, 3, 1, "", "plot_spectrum"], [100, 3, 1, "", "read"], [100, 3, 1, "", "residuals"], [100, 3, 1, "", "stat_array"], [100, 3, 1, "", "stat_sum"], [100, 2, 1, "", "stat_type"], [100, 2, 1, "", "tag"], [100, 3, 1, "", "to_dict"], [100, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[101, 2, 1, "", "background"], [101, 2, 1, "", "background_model"], [101, 3, 1, "", "copy"], [101, 2, 1, "", "counts"], [101, 3, 1, "", "create"], [101, 3, 1, "", "cutout"], [101, 2, 1, "", "data_shape"], [101, 3, 1, "", "downsample"], [101, 2, 1, "", "edisp"], [101, 2, 1, "", "energy_range"], [101, 2, 1, "", "energy_range_fit"], [101, 2, 1, "", "energy_range_safe"], [101, 2, 1, "", "energy_range_total"], [101, 2, 1, "", "evaluators"], [101, 2, 1, "", "excess"], [101, 2, 1, "", "exposure"], [101, 3, 1, "", "fake"], [101, 3, 1, "", "from_dict"], [101, 3, 1, "", "from_geoms"], [101, 3, 1, "", "from_hdulist"], [101, 2, 1, "", "geoms"], [101, 2, 1, "", "gti"], [101, 3, 1, "", "info_dict"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_fit"], [101, 2, 1, "", "mask_fit_image"], [101, 2, 1, "", "mask_image"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_safe_edisp"], [101, 2, 1, "", "mask_safe_image"], [101, 2, 1, "", "mask_safe_psf"], [101, 2, 1, "", "meta"], [101, 2, 1, "", "meta_table"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "npred"], [101, 3, 1, "", "npred_background"], [101, 3, 1, "", "npred_signal"], [101, 3, 1, "", "pad"], [101, 3, 1, "", "peek"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_residuals_spatial"], [101, 3, 1, "", "plot_residuals_spectral"], [101, 2, 1, "", "psf"], [101, 3, 1, "", "read"], [101, 3, 1, "", "resample_energy_axis"], [101, 3, 1, "", "reset_data_cache"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "slice_by_energy"], [101, 3, 1, "", "slice_by_idx"], [101, 3, 1, "", "stack"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "to_hdulist"], [101, 3, 1, "", "to_image"], [101, 3, 1, "", "to_masked"], [101, 3, 1, "", "to_region_map_dataset"], [101, 3, 1, "", "to_spectrum_dataset"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[102, 3, 1, "", "event_det_coords"], [102, 3, 1, "", "event_list_meta"], [102, 3, 1, "", "run"], [102, 3, 1, "", "sample_background"], [102, 3, 1, "", "sample_edisp"], [102, 3, 1, "", "sample_psf"], [102, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[103, 3, 1, "", "construct"], [103, 3, 1, "", "copy"], [103, 3, 1, "", "dict"], [103, 3, 1, "", "from_header"], [103, 3, 1, "", "from_orm"], [103, 3, 1, "", "json"], [103, 2, 1, "", "model_computed_fields"], [103, 2, 1, "", "model_config"], [103, 3, 1, "", "model_construct"], [103, 3, 1, "", "model_copy"], [103, 3, 1, "", "model_dump"], [103, 3, 1, "", "model_dump_json"], [103, 2, 1, "", "model_extra"], [103, 2, 1, "", "model_fields"], [103, 2, 1, "", "model_fields_set"], [103, 3, 1, "", "model_json_schema"], [103, 3, 1, "", "model_parametrized_name"], [103, 3, 1, "", "model_post_init"], [103, 3, 1, "", "model_rebuild"], [103, 3, 1, "", "model_validate"], [103, 3, 1, "", "model_validate_json"], [103, 3, 1, "", "model_validate_strings"], [103, 3, 1, "", "parse_file"], [103, 3, 1, "", "parse_obj"], [103, 3, 1, "", "parse_raw"], [103, 3, 1, "", "schema"], [103, 3, 1, "", "schema_json"], [103, 3, 1, "", "stack"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_header"], [103, 3, 1, "", "to_yaml"], [103, 3, 1, "", "update_forward_refs"], [103, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[104, 2, 1, "", "alpha"], [104, 2, 1, "", "background"], [104, 2, 1, "", "background_model"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "counts"], [104, 3, 1, "", "create"], [104, 3, 1, "", "cutout"], [104, 2, 1, "", "data_shape"], [104, 3, 1, "", "downsample"], [104, 2, 1, "", "edisp"], [104, 2, 1, "", "energy_range"], [104, 2, 1, "", "energy_range_fit"], [104, 2, 1, "", "energy_range_safe"], [104, 2, 1, "", "energy_range_total"], [104, 2, 1, "", "evaluators"], [104, 2, 1, "", "excess"], [104, 2, 1, "", "exposure"], [104, 3, 1, "", "fake"], [104, 3, 1, "", "from_dict"], [104, 3, 1, "", "from_geoms"], [104, 3, 1, "", "from_hdulist"], [104, 3, 1, "", "from_map_dataset"], [104, 2, 1, "", "geoms"], [104, 2, 1, "", "gti"], [104, 3, 1, "", "info_dict"], [104, 2, 1, "", "mask"], [104, 2, 1, "", "mask_fit"], [104, 2, 1, "", "mask_fit_image"], [104, 2, 1, "", "mask_image"], [104, 2, 1, "", "mask_safe"], [104, 2, 1, "", "mask_safe_edisp"], [104, 2, 1, "", "mask_safe_image"], [104, 2, 1, "", "mask_safe_psf"], [104, 2, 1, "", "meta"], [104, 2, 1, "", "meta_table"], [104, 2, 1, "", "models"], [104, 2, 1, "", "name"], [104, 3, 1, "", "npred"], [104, 3, 1, "", "npred_background"], [104, 3, 1, "", "npred_off"], [104, 3, 1, "", "npred_signal"], [104, 3, 1, "", "pad"], [104, 3, 1, "", "peek"], [104, 3, 1, "", "plot_residuals"], [104, 3, 1, "", "plot_residuals_spatial"], [104, 3, 1, "", "plot_residuals_spectral"], [104, 2, 1, "", "psf"], [104, 3, 1, "", "read"], [104, 3, 1, "", "resample_energy_axis"], [104, 3, 1, "", "reset_data_cache"], [104, 3, 1, "", "residuals"], [104, 3, 1, "", "slice_by_energy"], [104, 3, 1, "", "slice_by_idx"], [104, 3, 1, "", "stack"], [104, 3, 1, "", "stat_array"], [104, 3, 1, "", "stat_sum"], [104, 2, 1, "", "stat_type"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_dict"], [104, 3, 1, "", "to_hdulist"], [104, 3, 1, "", "to_image"], [104, 3, 1, "", "to_map_dataset"], [104, 3, 1, "", "to_masked"], [104, 3, 1, "", "to_region_map_dataset"], [104, 3, 1, "", "to_spectrum_dataset"], [104, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[105, 3, 1, "", "get_filenames"], [105, 3, 1, "", "get_valid_path"], [105, 3, 1, "", "read"], [105, 3, 1, "", "read_arf"], [105, 3, 1, "", "read_bkg"], [105, 3, 1, "", "read_pha"], [105, 3, 1, "", "read_rmf"], [105, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_ogip_meta"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_counts_hdulist"], [106, 3, 1, "", "write"], [106, 3, 1, "", "write_arf"], [106, 3, 1, "", "write_bkg"], [106, 3, 1, "", "write_pha"], [106, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[107, 3, 1, "", "event_det_coords"], [107, 3, 1, "", "event_list_meta"], [107, 3, 1, "", "run"], [107, 3, 1, "", "sample_background"], [107, 3, 1, "", "sample_edisp"], [107, 3, 1, "", "sample_psf"], [107, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[108, 2, 1, "", "background"], [108, 2, 1, "", "background_model"], [108, 3, 1, "", "copy"], [108, 2, 1, "", "counts"], [108, 3, 1, "", "create"], [108, 3, 1, "", "cutout"], [108, 2, 1, "", "data_shape"], [108, 3, 1, "", "downsample"], [108, 2, 1, "", "edisp"], [108, 2, 1, "", "energy_range"], [108, 2, 1, "", "energy_range_fit"], [108, 2, 1, "", "energy_range_safe"], [108, 2, 1, "", "energy_range_total"], [108, 2, 1, "", "evaluators"], [108, 2, 1, "", "excess"], [108, 2, 1, "", "exposure"], [108, 3, 1, "", "fake"], [108, 3, 1, "", "from_dict"], [108, 3, 1, "", "from_geoms"], [108, 3, 1, "", "from_hdulist"], [108, 2, 1, "", "geoms"], [108, 2, 1, "", "gti"], [108, 3, 1, "", "info_dict"], [108, 2, 1, "", "mask"], [108, 2, 1, "", "mask_fit"], [108, 2, 1, "", "mask_fit_image"], [108, 2, 1, "", "mask_image"], [108, 2, 1, "", "mask_safe"], [108, 2, 1, "", "mask_safe_edisp"], [108, 2, 1, "", "mask_safe_image"], [108, 2, 1, "", "mask_safe_psf"], [108, 2, 1, "", "meta"], [108, 2, 1, "", "meta_table"], [108, 2, 1, "", "models"], [108, 2, 1, "", "name"], [108, 3, 1, "", "npred"], [108, 3, 1, "", "npred_background"], [108, 3, 1, "", "npred_signal"], [108, 3, 1, "", "pad"], [108, 3, 1, "", "peek"], [108, 3, 1, "", "plot_counts"], [108, 3, 1, "", "plot_excess"], [108, 3, 1, "", "plot_fit"], [108, 3, 1, "", "plot_masks"], [108, 3, 1, "", "plot_residuals"], [108, 3, 1, "", "plot_residuals_spatial"], [108, 3, 1, "", "plot_residuals_spectral"], [108, 2, 1, "", "psf"], [108, 3, 1, "", "read"], [108, 3, 1, "", "resample_energy_axis"], [108, 3, 1, "", "reset_data_cache"], [108, 3, 1, "", "residuals"], [108, 3, 1, "", "slice_by_energy"], [108, 3, 1, "", "slice_by_idx"], [108, 3, 1, "", "stack"], [108, 3, 1, "", "stat_array"], [108, 3, 1, "", "stat_sum"], [108, 2, 1, "", "stat_type"], [108, 2, 1, "", "tag"], [108, 3, 1, "", "to_dict"], [108, 3, 1, "", "to_hdulist"], [108, 3, 1, "", "to_image"], [108, 3, 1, "", "to_masked"], [108, 3, 1, "", "to_region_map_dataset"], [108, 3, 1, "", "to_spectrum_dataset"], [108, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[109, 2, 1, "", "alpha"], [109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 3, 1, "", "from_map_dataset"], [109, 3, 1, "", "from_spectrum_dataset"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_off"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_map_dataset"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.utils": [[114, 4, 1, "", "apply_edisp"], [115, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[116, 1, 1, "", "ASmoothMapEstimator"], [117, 5, 1, "", "ESTIMATOR_REGISTRY"], [118, 1, 1, "", "EnergyDependentMorphologyEstimator"], [119, 1, 1, "", "Estimator"], [120, 1, 1, "", "ExcessMapEstimator"], [121, 1, 1, "", "FluxMaps"], [122, 1, 1, "", "FluxMetaData"], [123, 1, 1, "", "FluxPoints"], [124, 1, 1, "", "FluxPointsEstimator"], [125, 1, 1, "", "FluxProfileEstimator"], [126, 1, 1, "", "ImageProfile"], [127, 1, 1, "", "ImageProfileEstimator"], [128, 1, 1, "", "LightCurveEstimator"], [129, 1, 1, "", "ParameterEstimator"], [130, 1, 1, "", "SensitivityEstimator"], [131, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[116, 2, 1, "", "config_parameters"], [116, 3, 1, "", "copy"], [116, 3, 1, "", "estimate_maps"], [116, 3, 1, "", "get_kernels"], [116, 3, 1, "", "get_scales"], [116, 3, 1, "", "run"], [116, 3, 1, "", "selection_all"], [116, 2, 1, "", "selection_optional"], [116, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[118, 2, 1, "", "config_parameters"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "estimate_energy_dependence"], [118, 3, 1, "", "run"], [118, 2, 1, "", "selection_optional"], [118, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[119, 2, 1, "", "config_parameters"], [119, 3, 1, "", "copy"], [119, 3, 1, "", "run"], [119, 2, 1, "", "selection_optional"], [119, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 2, 1, "", "correlation_radius"], [120, 3, 1, "", "estimate_excess_map"], [120, 3, 1, "", "estimate_exposure_reco_energy"], [120, 3, 1, "", "estimate_kernel"], [120, 3, 1, "", "estimate_mask_default"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[121, 3, 1, "", "all_quantities"], [121, 2, 1, "", "available_quantities"], [121, 3, 1, "", "copy"], [121, 2, 1, "", "counts"], [121, 2, 1, "", "dnde"], [121, 2, 1, "", "dnde_err"], [121, 2, 1, "", "dnde_errn"], [121, 2, 1, "", "dnde_errp"], [121, 2, 1, "", "dnde_ref"], [121, 2, 1, "", "dnde_ul"], [121, 2, 1, "", "e2dnde"], [121, 2, 1, "", "e2dnde_err"], [121, 2, 1, "", "e2dnde_errn"], [121, 2, 1, "", "e2dnde_errp"], [121, 2, 1, "", "e2dnde_ref"], [121, 2, 1, "", "e2dnde_ul"], [121, 2, 1, "", "eflux"], [121, 2, 1, "", "eflux_err"], [121, 2, 1, "", "eflux_errn"], [121, 2, 1, "", "eflux_errp"], [121, 2, 1, "", "eflux_ref"], [121, 2, 1, "", "eflux_ul"], [121, 2, 1, "", "energy_axis"], [121, 2, 1, "", "energy_max"], [121, 2, 1, "", "energy_min"], [121, 2, 1, "", "energy_ref"], [121, 2, 1, "", "filter_success_nan"], [121, 2, 1, "", "flux"], [121, 2, 1, "", "flux_err"], [121, 2, 1, "", "flux_errn"], [121, 2, 1, "", "flux_errp"], [121, 2, 1, "", "flux_ref"], [121, 2, 1, "", "flux_sensitivity"], [121, 2, 1, "", "flux_ul"], [121, 3, 1, "", "from_hdulist"], [121, 3, 1, "", "from_maps"], [121, 3, 1, "", "from_stack"], [121, 2, 1, "", "geom"], [121, 3, 1, "", "get_flux_points"], [121, 2, 1, "", "has_any_ts"], [121, 2, 1, "", "has_stat_profiles"], [121, 2, 1, "", "has_success"], [121, 2, 1, "", "has_ul"], [121, 2, 1, "", "is_convertible_to_flux_sed_type"], [121, 2, 1, "", "is_ul"], [121, 3, 1, "", "iter_by_axis"], [121, 2, 1, "", "n_dof"], [121, 2, 1, "", "n_sigma"], [121, 2, 1, "", "n_sigma_ul"], [121, 2, 1, "", "niter"], [121, 2, 1, "", "norm"], [121, 2, 1, "", "norm_err"], [121, 2, 1, "", "norm_errn"], [121, 2, 1, "", "norm_errp"], [121, 2, 1, "", "norm_sensitivity"], [121, 2, 1, "", "norm_ul"], [121, 2, 1, "", "npred"], [121, 2, 1, "", "npred_background"], [121, 2, 1, "", "npred_excess"], [121, 2, 1, "", "npred_excess_err"], [121, 2, 1, "", "npred_excess_errn"], [121, 2, 1, "", "npred_excess_errp"], [121, 2, 1, "", "npred_excess_ref"], [121, 2, 1, "", "npred_excess_ul"], [121, 3, 1, "", "read"], [121, 2, 1, "", "reference_model"], [121, 2, 1, "", "reference_model_default"], [121, 2, 1, "", "reference_spectral_model"], [121, 2, 1, "", "sed_type_init"], [121, 2, 1, "", "sed_type_plot_default"], [121, 3, 1, "", "slice_by_coord"], [121, 3, 1, "", "slice_by_energy"], [121, 3, 1, "", "slice_by_idx"], [121, 3, 1, "", "slice_by_time"], [121, 2, 1, "", "sqrt_ts"], [121, 2, 1, "", "sqrt_ts_threshold_ul"], [121, 2, 1, "", "stat"], [121, 2, 1, "", "stat_null"], [121, 2, 1, "", "stat_scan"], [121, 2, 1, "", "success"], [121, 3, 1, "", "to_hdulist"], [121, 3, 1, "", "to_maps"], [121, 2, 1, "", "ts"], [121, 2, 1, "", "ts_scan"], [121, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[122, 3, 1, "", "construct"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "dict"], [122, 3, 1, "", "from_header"], [122, 3, 1, "", "from_orm"], [122, 3, 1, "", "json"], [122, 2, 1, "", "model_computed_fields"], [122, 2, 1, "", "model_config"], [122, 3, 1, "", "model_construct"], [122, 3, 1, "", "model_copy"], [122, 3, 1, "", "model_dump"], [122, 3, 1, "", "model_dump_json"], [122, 2, 1, "", "model_extra"], [122, 2, 1, "", "model_fields"], [122, 2, 1, "", "model_fields_set"], [122, 3, 1, "", "model_json_schema"], [122, 3, 1, "", "model_parametrized_name"], [122, 3, 1, "", "model_post_init"], [122, 3, 1, "", "model_rebuild"], [122, 3, 1, "", "model_validate"], [122, 3, 1, "", "model_validate_json"], [122, 3, 1, "", "model_validate_strings"], [122, 3, 1, "", "parse_file"], [122, 3, 1, "", "parse_obj"], [122, 3, 1, "", "parse_raw"], [122, 3, 1, "", "schema"], [122, 3, 1, "", "schema_json"], [122, 2, 1, "", "tag"], [122, 3, 1, "", "to_header"], [122, 3, 1, "", "to_yaml"], [122, 3, 1, "", "update_forward_refs"], [122, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[123, 3, 1, "", "all_quantities"], [123, 2, 1, "", "available_quantities"], [123, 3, 1, "", "copy"], [123, 2, 1, "", "counts"], [123, 2, 1, "", "dnde"], [123, 2, 1, "", "dnde_err"], [123, 2, 1, "", "dnde_errn"], [123, 2, 1, "", "dnde_errp"], [123, 2, 1, "", "dnde_ref"], [123, 2, 1, "", "dnde_ul"], [123, 2, 1, "", "e2dnde"], [123, 2, 1, "", "e2dnde_err"], [123, 2, 1, "", "e2dnde_errn"], [123, 2, 1, "", "e2dnde_errp"], [123, 2, 1, "", "e2dnde_ref"], [123, 2, 1, "", "e2dnde_ul"], [123, 2, 1, "", "eflux"], [123, 2, 1, "", "eflux_err"], [123, 2, 1, "", "eflux_errn"], [123, 2, 1, "", "eflux_errp"], [123, 2, 1, "", "eflux_ref"], [123, 2, 1, "", "eflux_ul"], [123, 2, 1, "", "energy_axis"], [123, 2, 1, "", "energy_max"], [123, 2, 1, "", "energy_min"], [123, 2, 1, "", "energy_ref"], [123, 2, 1, "", "filter_success_nan"], [123, 2, 1, "", "flux"], [123, 2, 1, "", "flux_err"], [123, 2, 1, "", "flux_errn"], [123, 2, 1, "", "flux_errp"], [123, 2, 1, "", "flux_ref"], [123, 2, 1, "", "flux_sensitivity"], [123, 2, 1, "", "flux_ul"], [123, 3, 1, "", "from_hdulist"], [123, 3, 1, "", "from_maps"], [123, 3, 1, "", "from_stack"], [123, 3, 1, "", "from_table"], [123, 2, 1, "", "geom"], [123, 3, 1, "", "get_flux_points"], [123, 2, 1, "", "has_any_ts"], [123, 2, 1, "", "has_stat_profiles"], [123, 2, 1, "", "has_success"], [123, 2, 1, "", "has_ul"], [123, 2, 1, "", "is_convertible_to_flux_sed_type"], [123, 2, 1, "", "is_ul"], [123, 3, 1, "", "iter_by_axis"], [123, 2, 1, "", "n_dof"], [123, 2, 1, "", "n_sigma"], [123, 2, 1, "", "n_sigma_ul"], [123, 2, 1, "", "niter"], [123, 2, 1, "", "norm"], [123, 2, 1, "", "norm_err"], [123, 2, 1, "", "norm_errn"], [123, 2, 1, "", "norm_errp"], [123, 2, 1, "", "norm_sensitivity"], [123, 2, 1, "", "norm_ul"], [123, 2, 1, "", "npred"], [123, 2, 1, "", "npred_background"], [123, 2, 1, "", "npred_excess"], [123, 2, 1, "", "npred_excess_err"], [123, 2, 1, "", "npred_excess_errn"], [123, 2, 1, "", "npred_excess_errp"], [123, 2, 1, "", "npred_excess_ref"], [123, 2, 1, "", "npred_excess_ul"], [123, 3, 1, "", "plot"], [123, 3, 1, "", "plot_ts_profiles"], [123, 3, 1, "", "read"], [123, 3, 1, "", "recompute_ul"], [123, 2, 1, "", "reference_model"], [123, 2, 1, "", "reference_model_default"], [123, 2, 1, "", "reference_spectral_model"], [123, 3, 1, "", "resample_axis"], [123, 2, 1, "", "sed_type_init"], [123, 2, 1, "", "sed_type_plot_default"], [123, 3, 1, "", "slice_by_coord"], [123, 3, 1, "", "slice_by_energy"], [123, 3, 1, "", "slice_by_idx"], [123, 3, 1, "", "slice_by_time"], [123, 2, 1, "", "sqrt_ts"], [123, 2, 1, "", "sqrt_ts_threshold_ul"], [123, 2, 1, "", "stat"], [123, 2, 1, "", "stat_null"], [123, 2, 1, "", "stat_scan"], [123, 2, 1, "", "success"], [123, 3, 1, "", "to_hdulist"], [123, 3, 1, "", "to_maps"], [123, 3, 1, "", "to_table"], [123, 2, 1, "", "ts"], [123, 2, 1, "", "ts_scan"], [123, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "estimate_best_fit"], [124, 3, 1, "", "estimate_counts"], [124, 3, 1, "", "estimate_errn_errp"], [124, 3, 1, "", "estimate_flux_point"], [124, 3, 1, "", "estimate_npred"], [124, 3, 1, "", "estimate_npred_excess"], [124, 3, 1, "", "estimate_scan"], [124, 3, 1, "", "estimate_ts"], [124, 3, 1, "", "estimate_ul"], [124, 3, 1, "", "get_scale_model"], [124, 2, 1, "", "n_jobs"], [124, 2, 1, "", "norm_max"], [124, 2, 1, "", "norm_min"], [124, 2, 1, "", "norm_n_values"], [124, 2, 1, "", "norm_values"], [124, 2, 1, "", "parallel_backend"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_flux_point"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_npred_excess"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "get_scale_model"], [125, 2, 1, "", "n_jobs"], [125, 2, 1, "", "norm_max"], [125, 2, 1, "", "norm_min"], [125, 2, 1, "", "norm_n_values"], [125, 2, 1, "", "norm_values"], [125, 2, 1, "", "parallel_backend"], [125, 2, 1, "", "projected_distance_axis"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[126, 3, 1, "", "normalize"], [126, 3, 1, "", "peek"], [126, 3, 1, "", "plot"], [126, 3, 1, "", "plot_err"], [126, 2, 1, "", "profile"], [126, 2, 1, "", "profile_err"], [126, 3, 1, "", "smooth"], [126, 2, 1, "", "x_max"], [126, 2, 1, "", "x_min"], [126, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_best_fit"], [128, 3, 1, "", "estimate_counts"], [128, 3, 1, "", "estimate_errn_errp"], [128, 3, 1, "", "estimate_flux_point"], [128, 3, 1, "", "estimate_npred"], [128, 3, 1, "", "estimate_npred_excess"], [128, 3, 1, "", "estimate_scan"], [128, 3, 1, "", "estimate_time_bin_flux"], [128, 3, 1, "", "estimate_ts"], [128, 3, 1, "", "estimate_ul"], [128, 3, 1, "", "expand_map"], [128, 3, 1, "", "get_scale_model"], [128, 2, 1, "", "n_jobs"], [128, 2, 1, "", "norm_max"], [128, 2, 1, "", "norm_min"], [128, 2, 1, "", "norm_n_values"], [128, 2, 1, "", "norm_values"], [128, 2, 1, "", "parallel_backend"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_min_e2dnde"], [130, 3, 1, "", "estimate_min_excess"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_fit_input_maps"], [131, 3, 1, "", "estimate_flux_default"], [131, 3, 1, "", "estimate_flux_map"], [131, 3, 1, "", "estimate_kernel"], [131, 3, 1, "", "estimate_mask_default"], [131, 3, 1, "", "estimate_pad_width"], [131, 2, 1, "", "n_jobs"], [131, 2, 1, "", "parallel_backend"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_all"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[132, 4, 1, "", "compute_lightcurve_doublingtime"], [133, 4, 1, "", "compute_lightcurve_fpp"], [134, 4, 1, "", "compute_lightcurve_fvar"], [135, 4, 1, "", "estimate_exposure_reco_energy"], [136, 4, 1, "", "find_peaks"], [137, 4, 1, "", "find_peaks_in_flux_map"], [138, 4, 1, "", "get_combined_significance_maps"], [139, 4, 1, "", "get_rebinned_axis"], [140, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[141, 1, 1, "", "Background2D"], [142, 1, 1, "", "Background3D"], [143, 1, 1, "", "BackgroundIRF"], [144, 1, 1, "", "EDispKernel"], [145, 1, 1, "", "EDispKernelMap"], [146, 1, 1, "", "EDispMap"], [147, 1, 1, "", "EffectiveAreaTable2D"], [148, 1, 1, "", "EnergyDependentMultiGaussPSF"], [149, 1, 1, "", "EnergyDispersion2D"], [150, 1, 1, "", "FoVAlignment"], [151, 1, 1, "", "IRF"], [152, 1, 1, "", "IRFMap"], [153, 5, 1, "", "IRF_REGISTRY"], [154, 1, 1, "", "PSF3D"], [155, 1, 1, "", "PSFKernel"], [156, 1, 1, "", "PSFKing"], [157, 1, 1, "", "PSFMap"], [158, 1, 1, "", "ParametricPSF"], [159, 1, 1, "", "RadMax2D"], [160, 1, 1, "", "RecoPSFMap"], [161, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[141, 2, 1, "", "axes"], [141, 3, 1, "", "cumsum"], [141, 2, 1, "", "data"], [141, 2, 1, "", "default_interp_kwargs"], [141, 2, 1, "", "default_unit"], [141, 3, 1, "", "evaluate"], [141, 2, 1, "", "fov_alignment"], [141, 3, 1, "", "from_hdulist"], [141, 3, 1, "", "from_table"], [141, 2, 1, "", "has_offset_axis"], [141, 3, 1, "", "integral"], [141, 3, 1, "", "integrate_log_log"], [141, 3, 1, "", "interp_missing_data"], [141, 3, 1, "", "is_allclose"], [141, 2, 1, "", "is_pointlike"], [141, 3, 1, "", "normalize"], [141, 3, 1, "", "pad"], [141, 3, 1, "", "peek"], [141, 3, 1, "", "plot"], [141, 3, 1, "", "plot_at_energy"], [141, 3, 1, "", "plot_energy_dependence"], [141, 3, 1, "", "plot_offset_dependence"], [141, 3, 1, "", "plot_spectrum"], [141, 2, 1, "", "quantity"], [141, 3, 1, "", "read"], [141, 2, 1, "", "required_axes"], [141, 3, 1, "", "slice_by_idx"], [141, 2, 1, "", "tag"], [141, 3, 1, "", "to_3d"], [141, 3, 1, "", "to_hdulist"], [141, 3, 1, "", "to_table"], [141, 3, 1, "", "to_table_hdu"], [141, 3, 1, "", "to_unit"], [141, 2, 1, "", "unit"], [141, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[142, 2, 1, "", "axes"], [142, 3, 1, "", "cumsum"], [142, 2, 1, "", "data"], [142, 2, 1, "", "default_interp_kwargs"], [142, 2, 1, "", "default_unit"], [142, 3, 1, "", "evaluate"], [142, 2, 1, "", "fov_alignment"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "from_table"], [142, 2, 1, "", "has_offset_axis"], [142, 3, 1, "", "integral"], [142, 3, 1, "", "integrate_log_log"], [142, 3, 1, "", "interp_missing_data"], [142, 3, 1, "", "is_allclose"], [142, 2, 1, "", "is_pointlike"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "pad"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "plot_at_energy"], [142, 2, 1, "", "quantity"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "slice_by_idx"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_2d"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_table"], [142, 3, 1, "", "to_table_hdu"], [142, 3, 1, "", "to_unit"], [142, 2, 1, "", "unit"], [142, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 3, 1, "", "evaluate"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_diagonal_response"], [144, 3, 1, "", "from_gauss"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 3, 1, "", "get_bias"], [144, 3, 1, "", "get_bias_energy"], [144, 3, 1, "", "get_mean"], [144, 3, 1, "", "get_resolution"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 3, 1, "", "pdf_in_safe_range"], [144, 2, 1, "", "pdf_matrix"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "plot_bias"], [144, 3, 1, "", "plot_matrix"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_image"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[145, 3, 1, "", "copy"], [145, 3, 1, "", "cutout"], [145, 3, 1, "", "downsample"], [145, 2, 1, "", "edisp_map"], [145, 3, 1, "", "from_diagonal_response"], [145, 3, 1, "", "from_edisp_kernel"], [145, 3, 1, "", "from_gauss"], [145, 3, 1, "", "from_geom"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "get_edisp_kernel"], [145, 2, 1, "", "mask_safe_image"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "resample_energy_axis"], [145, 3, 1, "", "slice_by_idx"], [145, 3, 1, "", "stack"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_image"], [145, 3, 1, "", "to_region_nd_map"], [145, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[146, 3, 1, "", "copy"], [146, 3, 1, "", "cutout"], [146, 3, 1, "", "downsample"], [146, 2, 1, "", "edisp_map"], [146, 3, 1, "", "from_diagonal_response"], [146, 3, 1, "", "from_geom"], [146, 3, 1, "", "from_hdulist"], [146, 3, 1, "", "get_edisp_kernel"], [146, 2, 1, "", "mask_safe_image"], [146, 3, 1, "", "normalize"], [146, 3, 1, "", "peek"], [146, 3, 1, "", "read"], [146, 2, 1, "", "required_axes"], [146, 3, 1, "", "sample_coord"], [146, 3, 1, "", "slice_by_idx"], [146, 3, 1, "", "stack"], [146, 2, 1, "", "tag"], [146, 3, 1, "", "to_edisp_kernel_map"], [146, 3, 1, "", "to_hdulist"], [146, 3, 1, "", "to_region_nd_map"], [146, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 2, 1, "", "default_unit"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_parametrization"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "plot"], [147, 3, 1, "", "plot_energy_dependence"], [147, 3, 1, "", "plot_offset_dependence"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[148, 2, 1, "", "axes"], [148, 3, 1, "", "containment"], [148, 3, 1, "", "containment_radius"], [148, 3, 1, "", "cumsum"], [148, 2, 1, "", "data"], [148, 2, 1, "", "default_interp_kwargs"], [148, 3, 1, "", "evaluate"], [148, 3, 1, "", "evaluate_containment"], [148, 3, 1, "", "evaluate_direct"], [148, 3, 1, "", "evaluate_parameters"], [148, 2, 1, "", "fov_alignment"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "from_table"], [148, 2, 1, "", "has_offset_axis"], [148, 3, 1, "", "info"], [148, 3, 1, "", "integral"], [148, 3, 1, "", "integrate_log_log"], [148, 3, 1, "", "interp_missing_data"], [148, 3, 1, "", "is_allclose"], [148, 2, 1, "", "is_pointlike"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "pad"], [148, 3, 1, "", "peek"], [148, 3, 1, "", "plot_containment_radius"], [148, 3, 1, "", "plot_containment_radius_vs_energy"], [148, 3, 1, "", "plot_psf_vs_rad"], [148, 2, 1, "", "quantity"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 2, 1, "", "required_parameters"], [148, 3, 1, "", "slice_by_idx"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_psf3d"], [148, 3, 1, "", "to_table"], [148, 3, 1, "", "to_table_hdu"], [148, 3, 1, "", "to_unit"], [148, 2, 1, "", "unit"], [148, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 2, 1, "", "default_unit"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_gauss"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "peek"], [149, 3, 1, "", "plot_bias"], [149, 3, 1, "", "plot_migration"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_edisp_kernel"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[150, 2, 1, "", "ALTAZ"], [150, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[152, 3, 1, "", "copy"], [152, 3, 1, "", "cutout"], [152, 3, 1, "", "downsample"], [152, 3, 1, "", "from_hdulist"], [152, 2, 1, "", "mask_safe_image"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 3, 1, "", "stack"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_region_nd_map"], [152, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 2, 1, "", "default_unit"], [154, 3, 1, "", "evaluate"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[155, 2, 1, "", "data"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_spatial_model"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot_kernel"], [155, 2, 1, "", "psf_kernel_map"], [155, 3, 1, "", "read"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "to_image"], [155, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 3, 1, "", "evaluate"], [156, 3, 1, "", "evaluate_containment"], [156, 3, 1, "", "evaluate_direct"], [156, 3, 1, "", "evaluate_parameters"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "info"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 2, 1, "", "required_parameters"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_psf3d"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "containment_radius_map"], [157, 3, 1, "", "copy"], [157, 3, 1, "", "cutout"], [157, 3, 1, "", "downsample"], [157, 2, 1, "", "energy_name"], [157, 3, 1, "", "from_gauss"], [157, 3, 1, "", "from_geom"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "get_psf_kernel"], [157, 2, 1, "", "mask_safe_image"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "psf_map"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "sample_coord"], [157, 3, 1, "", "slice_by_idx"], [157, 3, 1, "", "stack"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_image"], [157, 3, 1, "", "to_region_nd_map"], [157, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 3, 1, "", "evaluate"], [158, 3, 1, "", "evaluate_containment"], [158, 3, 1, "", "evaluate_direct"], [158, 3, 1, "", "evaluate_parameters"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "info"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 2, 1, "", "required_parameters"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_psf3d"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 2, 1, "", "default_unit"], [159, 3, 1, "", "evaluate"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_irf"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_fixed_rad_max"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 3, 1, "", "plot_rad_max_vs_energy"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[160, 3, 1, "", "containment"], [160, 3, 1, "", "containment_radius"], [160, 3, 1, "", "containment_radius_map"], [160, 3, 1, "", "copy"], [160, 3, 1, "", "cutout"], [160, 3, 1, "", "downsample"], [160, 2, 1, "", "energy_name"], [160, 3, 1, "", "from_gauss"], [160, 3, 1, "", "from_geom"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "get_psf_kernel"], [160, 2, 1, "", "mask_safe_image"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "peek"], [160, 3, 1, "", "plot_containment_radius_vs_energy"], [160, 3, 1, "", "plot_psf_vs_rad"], [160, 2, 1, "", "psf_map"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "sample_coord"], [160, 3, 1, "", "slice_by_idx"], [160, 3, 1, "", "stack"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_image"], [160, 3, 1, "", "to_region_nd_map"], [160, 3, 1, "", "write"]], "gammapy.makers": [[162, 1, 1, "", "AdaptiveRingBackgroundMaker"], [163, 1, 1, "", "DatasetsMaker"], [164, 1, 1, "", "FoVBackgroundMaker"], [165, 5, 1, "", "MAKER_REGISTRY"], [166, 1, 1, "", "Maker"], [167, 1, 1, "", "MapDatasetMaker"], [168, 1, 1, "", "PhaseBackgroundMaker"], [169, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [170, 1, 1, "", "ReflectedRegionsFinder"], [171, 1, 1, "", "RegionsFinder"], [172, 1, 1, "", "RingBackgroundMaker"], [173, 1, 1, "", "SafeMaskMaker"], [174, 1, 1, "", "SpectrumDatasetMaker"], [175, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[162, 3, 1, "", "kernels"], [162, 3, 1, "", "make_cubes"], [162, 3, 1, "", "run"], [162, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[163, 3, 1, "", "callback"], [163, 3, 1, "", "error_callback"], [163, 3, 1, "", "make_dataset"], [163, 2, 1, "", "n_jobs"], [163, 2, 1, "", "offset_max"], [163, 2, 1, "", "parallel_backend"], [163, 3, 1, "", "run"], [163, 2, 1, "", "safe_mask_maker"], [163, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[164, 2, 1, "", "available_methods"], [164, 3, 1, "", "make_background_fit"], [164, 3, 1, "", "make_background_scale"], [164, 3, 1, "", "make_default_fov_background_model"], [164, 3, 1, "", "make_exclusion_mask"], [164, 2, 1, "", "method"], [164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[166, 3, 1, "", "run"], [166, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[167, 2, 1, "", "available_selection"], [167, 3, 1, "", "make_background"], [167, 3, 1, "", "make_counts"], [167, 3, 1, "", "make_edisp"], [167, 3, 1, "", "make_edisp_kernel"], [167, 3, 1, "", "make_exposure"], [167, 3, 1, "", "make_exposure_irf"], [167, 3, 1, "", "make_meta_table"], [167, 3, 1, "", "make_psf"], [167, 3, 1, "", "run"], [167, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[168, 3, 1, "", "make_counts"], [168, 3, 1, "", "make_counts_off"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[169, 3, 1, "", "make_counts_off"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[170, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[171, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[172, 3, 1, "", "kernel"], [172, 3, 1, "", "make_maps_off"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[173, 2, 1, "", "available_methods"], [173, 3, 1, "", "make_mask_bkg_invalid"], [173, 3, 1, "", "make_mask_energy_aeff_default"], [173, 3, 1, "", "make_mask_energy_aeff_max"], [173, 3, 1, "", "make_mask_energy_bkg_peak"], [173, 3, 1, "", "make_mask_energy_edisp_bias"], [173, 3, 1, "", "make_mask_offset_max"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[174, 2, 1, "", "available_selection"], [174, 3, 1, "", "make_background"], [174, 3, 1, "", "make_counts"], [174, 3, 1, "", "make_edisp"], [174, 3, 1, "", "make_edisp_kernel"], [174, 3, 1, "", "make_exposure"], [174, 3, 1, "", "make_exposure_irf"], [174, 3, 1, "", "make_meta_table"], [174, 3, 1, "", "make_psf"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[175, 3, 1, "", "run"]], "gammapy.makers.utils": [[176, 4, 1, "", "make_counts_rad_max"], [177, 4, 1, "", "make_edisp_kernel_map"], [178, 4, 1, "", "make_edisp_map"], [179, 4, 1, "", "make_effective_livetime_map"], [180, 4, 1, "", "make_map_background_irf"], [181, 4, 1, "", "make_map_exposure_true_energy"], [182, 4, 1, "", "make_observation_time_map"], [183, 4, 1, "", "make_psf_map"], [184, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[185, 1, 1, "", "Geom"], [186, 1, 1, "", "HpxGeom"], [187, 1, 1, "", "HpxMap"], [188, 1, 1, "", "HpxNDMap"], [189, 1, 1, "", "LabelMapAxis"], [190, 1, 1, "", "Map"], [191, 1, 1, "", "MapAxes"], [192, 1, 1, "", "MapAxis"], [193, 1, 1, "", "MapCoord"], [194, 1, 1, "", "Maps"], [195, 1, 1, "", "RegionGeom"], [196, 1, 1, "", "RegionNDMap"], [197, 1, 1, "", "TimeMapAxis"], [198, 1, 1, "", "WcsGeom"], [199, 1, 1, "", "WcsMap"], [200, 1, 1, "", "WcsNDMap"], [201, 4, 1, "", "containment_radius"], [202, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[185, 2, 1, "", "as_energy_true"], [185, 2, 1, "", "center_coord"], [185, 2, 1, "", "center_pix"], [185, 2, 1, "", "center_skydir"], [185, 3, 1, "", "contains"], [185, 3, 1, "", "contains_pix"], [185, 3, 1, "", "coord_to_idx"], [185, 3, 1, "", "coord_to_pix"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "crop"], [185, 3, 1, "", "data_nbytes"], [185, 2, 1, "", "data_shape"], [185, 3, 1, "", "downsample"], [185, 3, 1, "", "drop"], [185, 3, 1, "", "energy_mask"], [185, 3, 1, "", "from_hdulist"], [185, 3, 1, "", "get_coord"], [185, 3, 1, "", "get_idx"], [185, 2, 1, "", "has_energy_axis"], [185, 2, 1, "", "is_allsky"], [185, 2, 1, "", "is_flat"], [185, 2, 1, "", "is_image"], [185, 3, 1, "", "pad"], [185, 3, 1, "", "pix_to_coord"], [185, 3, 1, "", "pix_to_idx"], [185, 3, 1, "", "rename_axes"], [185, 3, 1, "", "replace_axis"], [185, 3, 1, "", "resample_axis"], [185, 3, 1, "", "slice_by_idx"], [185, 3, 1, "", "solid_angle"], [185, 3, 1, "", "squash"], [185, 3, 1, "", "to_bands_hdu"], [185, 3, 1, "", "to_cube"], [185, 3, 1, "", "to_image"], [185, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[186, 2, 1, "", "as_energy_true"], [186, 2, 1, "", "axes"], [186, 2, 1, "", "axes_names"], [186, 2, 1, "", "center_coord"], [186, 2, 1, "", "center_pix"], [186, 2, 1, "", "center_skydir"], [186, 3, 1, "", "contains"], [186, 3, 1, "", "contains_pix"], [186, 3, 1, "", "coord_to_idx"], [186, 3, 1, "", "coord_to_pix"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "create"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "cutout"], [186, 3, 1, "", "data_nbytes"], [186, 2, 1, "", "data_shape"], [186, 2, 1, "", "data_shape_axes"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "drop"], [186, 3, 1, "", "energy_mask"], [186, 2, 1, "", "frame"], [186, 3, 1, "", "from_hdu"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "from_header"], [186, 3, 1, "", "get_coord"], [186, 3, 1, "", "get_idx"], [186, 3, 1, "", "get_index_list"], [186, 3, 1, "", "global_to_local"], [186, 2, 1, "", "has_energy_axis"], [186, 3, 1, "", "interp_weights"], [186, 2, 1, "", "ipix"], [186, 3, 1, "", "is_aligned"], [186, 3, 1, "", "is_allclose"], [186, 2, 1, "", "is_allsky"], [186, 2, 1, "", "is_flat"], [186, 2, 1, "", "is_hpx"], [186, 2, 1, "", "is_image"], [186, 2, 1, "", "is_region"], [186, 2, 1, "", "is_regular"], [186, 3, 1, "", "local_to_global"], [186, 2, 1, "", "ndim"], [186, 2, 1, "", "nest"], [186, 2, 1, "", "npix"], [186, 2, 1, "", "npix_max"], [186, 2, 1, "", "nside"], [186, 2, 1, "", "order"], [186, 2, 1, "", "ordering"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "pix_to_coord"], [186, 3, 1, "", "pix_to_idx"], [186, 2, 1, "", "pixel_scales"], [186, 2, 1, "", "projection"], [186, 2, 1, "", "region"], [186, 3, 1, "", "region_mask"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "replace_axis"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "separation"], [186, 2, 1, "", "shape_axes"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "solid_angle"], [186, 3, 1, "", "squash"], [186, 3, 1, "", "to_bands_hdu"], [186, 3, 1, "", "to_binsz"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_header"], [186, 3, 1, "", "to_image"], [186, 3, 1, "", "to_nside"], [186, 3, 1, "", "to_swapped"], [186, 3, 1, "", "to_wcs_geom"], [186, 3, 1, "", "to_wcs_tiles"], [186, 3, 1, "", "upsample"], [186, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[187, 3, 1, "", "coadd"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "create"], [187, 3, 1, "", "crop"], [187, 3, 1, "", "cumsum"], [187, 2, 1, "", "data"], [187, 3, 1, "", "dot"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "fill_by_coord"], [187, 3, 1, "", "fill_by_idx"], [187, 3, 1, "", "fill_by_pix"], [187, 3, 1, "", "fill_events"], [187, 3, 1, "", "from_geom"], [187, 3, 1, "", "from_hdulist"], [187, 3, 1, "", "from_stack"], [187, 2, 1, "", "geom"], [187, 3, 1, "", "get_by_coord"], [187, 3, 1, "", "get_by_idx"], [187, 3, 1, "", "get_by_pix"], [187, 3, 1, "", "get_image_by_coord"], [187, 3, 1, "", "get_image_by_idx"], [187, 3, 1, "", "get_image_by_pix"], [187, 3, 1, "", "get_spectrum"], [187, 3, 1, "", "integral"], [187, 3, 1, "", "interp_by_coord"], [187, 3, 1, "", "interp_by_pix"], [187, 3, 1, "", "interp_to_geom"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "is_mask"], [187, 3, 1, "", "iter_by_axis"], [187, 3, 1, "", "iter_by_image"], [187, 3, 1, "", "iter_by_image_data"], [187, 3, 1, "", "iter_by_image_index"], [187, 3, 1, "", "mask_nearest_position"], [187, 2, 1, "", "meta"], [187, 3, 1, "", "normalize"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "plot_grid"], [187, 3, 1, "", "plot_interactive"], [187, 2, 1, "", "quantity"], [187, 3, 1, "", "read"], [187, 3, 1, "", "reduce"], [187, 3, 1, "", "reduce_over_axes"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "reorder_axes"], [187, 3, 1, "", "reproject_by_image"], [187, 3, 1, "", "reproject_to_geom"], [187, 3, 1, "", "resample"], [187, 3, 1, "", "resample_axis"], [187, 3, 1, "", "sample_coord"], [187, 3, 1, "", "set_by_coord"], [187, 3, 1, "", "set_by_idx"], [187, 3, 1, "", "set_by_pix"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "split_by_axis"], [187, 3, 1, "", "sum_over_axes"], [187, 2, 1, "", "tag"], [187, 3, 1, "", "to_cube"], [187, 3, 1, "", "to_hdu"], [187, 3, 1, "", "to_hdulist"], [187, 3, 1, "", "to_swapped"], [187, 3, 1, "", "to_unit"], [187, 3, 1, "", "to_wcs"], [187, 2, 1, "", "unit"], [187, 3, 1, "", "upsample"], [187, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[188, 3, 1, "", "coadd"], [188, 3, 1, "", "convolve"], [188, 3, 1, "", "convolve_full"], [188, 3, 1, "", "convolve_wcs"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "create"], [188, 3, 1, "", "crop"], [188, 3, 1, "", "cumsum"], [188, 3, 1, "", "cutout"], [188, 2, 1, "", "data"], [188, 3, 1, "", "dot"], [188, 3, 1, "", "downsample"], [188, 3, 1, "", "fill_by_coord"], [188, 3, 1, "", "fill_by_idx"], [188, 3, 1, "", "fill_by_pix"], [188, 3, 1, "", "fill_events"], [188, 3, 1, "", "from_geom"], [188, 3, 1, "", "from_hdu"], [188, 3, 1, "", "from_hdulist"], [188, 3, 1, "", "from_stack"], [188, 3, 1, "", "from_wcs_tiles"], [188, 2, 1, "", "geom"], [188, 3, 1, "", "get_by_coord"], [188, 3, 1, "", "get_by_idx"], [188, 3, 1, "", "get_by_pix"], [188, 3, 1, "", "get_image_by_coord"], [188, 3, 1, "", "get_image_by_idx"], [188, 3, 1, "", "get_image_by_pix"], [188, 3, 1, "", "get_spectrum"], [188, 3, 1, "", "integral"], [188, 3, 1, "", "interp_by_coord"], [188, 3, 1, "", "interp_by_pix"], [188, 3, 1, "", "interp_to_geom"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_mask"], [188, 3, 1, "", "iter_by_axis"], [188, 3, 1, "", "iter_by_image"], [188, 3, 1, "", "iter_by_image_data"], [188, 3, 1, "", "iter_by_image_index"], [188, 3, 1, "", "mask_nearest_position"], [188, 2, 1, "", "meta"], [188, 3, 1, "", "normalize"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "plot"], [188, 3, 1, "", "plot_grid"], [188, 3, 1, "", "plot_interactive"], [188, 3, 1, "", "plot_mask"], [188, 2, 1, "", "quantity"], [188, 3, 1, "", "read"], [188, 3, 1, "", "reduce"], [188, 3, 1, "", "reduce_over_axes"], [188, 3, 1, "", "rename_axes"], [188, 3, 1, "", "reorder_axes"], [188, 3, 1, "", "reproject_by_image"], [188, 3, 1, "", "reproject_to_geom"], [188, 3, 1, "", "resample"], [188, 3, 1, "", "resample_axis"], [188, 3, 1, "", "sample_coord"], [188, 3, 1, "", "set_by_coord"], [188, 3, 1, "", "set_by_idx"], [188, 3, 1, "", "set_by_pix"], [188, 3, 1, "", "slice_by_idx"], [188, 3, 1, "", "smooth"], [188, 3, 1, "", "split_by_axis"], [188, 3, 1, "", "stack"], [188, 3, 1, "", "sum_over_axes"], [188, 2, 1, "", "tag"], [188, 3, 1, "", "to_cube"], [188, 3, 1, "", "to_hdu"], [188, 3, 1, "", "to_hdulist"], [188, 3, 1, "", "to_nside"], [188, 3, 1, "", "to_region_nd_map"], [188, 3, 1, "", "to_swapped"], [188, 3, 1, "", "to_unit"], [188, 3, 1, "", "to_wcs"], [188, 3, 1, "", "to_wcs_tiles"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[189, 2, 1, "", "as_plot_center"], [189, 2, 1, "", "as_plot_edges"], [189, 2, 1, "", "as_plot_labels"], [189, 2, 1, "", "as_plot_xerr"], [189, 3, 1, "", "assert_name"], [189, 2, 1, "", "bin_width"], [189, 2, 1, "", "center"], [189, 3, 1, "", "concatenate"], [189, 3, 1, "", "coord_to_idx"], [189, 3, 1, "", "coord_to_pix"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "downsample"], [189, 2, 1, "", "edges"], [189, 2, 1, "", "edges_max"], [189, 2, 1, "", "edges_min"], [189, 3, 1, "", "format_plot_xaxis"], [189, 3, 1, "", "from_stack"], [189, 3, 1, "", "from_table"], [189, 3, 1, "", "is_allclose"], [189, 2, 1, "", "name"], [189, 2, 1, "", "nbin"], [189, 2, 1, "", "node_type"], [189, 3, 1, "", "pad"], [189, 3, 1, "", "pix_to_coord"], [189, 3, 1, "", "pix_to_idx"], [189, 3, 1, "", "resample"], [189, 3, 1, "", "slice"], [189, 3, 1, "", "squash"], [189, 3, 1, "", "to_header"], [189, 2, 1, "", "unit"], [189, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[190, 3, 1, "", "coadd"], [190, 3, 1, "", "copy"], [190, 3, 1, "", "create"], [190, 3, 1, "", "crop"], [190, 3, 1, "", "cumsum"], [190, 2, 1, "", "data"], [190, 3, 1, "", "dot"], [190, 3, 1, "", "downsample"], [190, 3, 1, "", "fill_by_coord"], [190, 3, 1, "", "fill_by_idx"], [190, 3, 1, "", "fill_by_pix"], [190, 3, 1, "", "fill_events"], [190, 3, 1, "", "from_geom"], [190, 3, 1, "", "from_hdulist"], [190, 3, 1, "", "from_stack"], [190, 2, 1, "", "geom"], [190, 3, 1, "", "get_by_coord"], [190, 3, 1, "", "get_by_idx"], [190, 3, 1, "", "get_by_pix"], [190, 3, 1, "", "get_image_by_coord"], [190, 3, 1, "", "get_image_by_idx"], [190, 3, 1, "", "get_image_by_pix"], [190, 3, 1, "", "get_spectrum"], [190, 3, 1, "", "integral"], [190, 3, 1, "", "interp_by_coord"], [190, 3, 1, "", "interp_by_pix"], [190, 3, 1, "", "interp_to_geom"], [190, 3, 1, "", "is_allclose"], [190, 2, 1, "", "is_mask"], [190, 3, 1, "", "iter_by_axis"], [190, 3, 1, "", "iter_by_image"], [190, 3, 1, "", "iter_by_image_data"], [190, 3, 1, "", "iter_by_image_index"], [190, 3, 1, "", "mask_nearest_position"], [190, 2, 1, "", "meta"], [190, 3, 1, "", "normalize"], [190, 3, 1, "", "pad"], [190, 3, 1, "", "plot_grid"], [190, 3, 1, "", "plot_interactive"], [190, 2, 1, "", "quantity"], [190, 3, 1, "", "read"], [190, 3, 1, "", "reduce"], [190, 3, 1, "", "reduce_over_axes"], [190, 3, 1, "", "rename_axes"], [190, 3, 1, "", "reorder_axes"], [190, 3, 1, "", "reproject_by_image"], [190, 3, 1, "", "reproject_to_geom"], [190, 3, 1, "", "resample"], [190, 3, 1, "", "resample_axis"], [190, 3, 1, "", "sample_coord"], [190, 3, 1, "", "set_by_coord"], [190, 3, 1, "", "set_by_idx"], [190, 3, 1, "", "set_by_pix"], [190, 3, 1, "", "slice_by_idx"], [190, 3, 1, "", "split_by_axis"], [190, 3, 1, "", "sum_over_axes"], [190, 2, 1, "", "tag"], [190, 3, 1, "", "to_cube"], [190, 3, 1, "", "to_unit"], [190, 2, 1, "", "unit"], [190, 3, 1, "", "upsample"], [190, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[191, 3, 1, "", "assert_names"], [191, 3, 1, "", "bin_volume"], [191, 2, 1, "", "center_coord"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "count"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "from_default"], [191, 3, 1, "", "from_table"], [191, 3, 1, "", "from_table_hdu"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "index"], [191, 3, 1, "", "index_data"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_unidimensional"], [191, 2, 1, "", "iter_with_reshape"], [191, 2, 1, "", "names"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 2, 1, "", "primary_axis"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace"], [191, 3, 1, "", "resample"], [191, 2, 1, "", "reverse"], [191, 2, 1, "", "shape"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_header"], [191, 3, 1, "", "to_table"], [191, 3, 1, "", "to_table_hdu"], [191, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[192, 2, 1, "", "as_plot_center"], [192, 2, 1, "", "as_plot_edges"], [192, 2, 1, "", "as_plot_labels"], [192, 2, 1, "", "as_plot_scale"], [192, 2, 1, "", "as_plot_xerr"], [192, 3, 1, "", "assert_name"], [192, 2, 1, "", "bin_width"], [192, 2, 1, "", "bounds"], [192, 2, 1, "", "center"], [192, 3, 1, "", "concatenate"], [192, 3, 1, "", "coord_to_idx"], [192, 3, 1, "", "coord_to_pix"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "downsample"], [192, 2, 1, "", "edges"], [192, 2, 1, "", "edges_max"], [192, 2, 1, "", "edges_min"], [192, 3, 1, "", "format_plot_xaxis"], [192, 3, 1, "", "format_plot_yaxis"], [192, 3, 1, "", "from_bounds"], [192, 3, 1, "", "from_edges"], [192, 3, 1, "", "from_energy_bounds"], [192, 3, 1, "", "from_energy_edges"], [192, 3, 1, "", "from_nodes"], [192, 3, 1, "", "from_stack"], [192, 3, 1, "", "from_table"], [192, 3, 1, "", "from_table_hdu"], [192, 3, 1, "", "group_table"], [192, 2, 1, "", "interp"], [192, 3, 1, "", "is_aligned"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_energy_axis"], [192, 2, 1, "", "iter_by_edges"], [192, 2, 1, "", "name"], [192, 2, 1, "", "nbin"], [192, 2, 1, "", "nbin_per_decade"], [192, 2, 1, "", "node_type"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "pix_to_coord"], [192, 3, 1, "", "pix_to_idx"], [192, 3, 1, "", "rename"], [192, 3, 1, "", "round"], [192, 3, 1, "", "slice"], [192, 3, 1, "", "squash"], [192, 3, 1, "", "to_header"], [192, 3, 1, "", "to_node_type"], [192, 3, 1, "", "to_table"], [192, 3, 1, "", "to_table_hdu"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 2, 1, "", "use_center_as_plot_labels"], [192, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[193, 3, 1, "", "apply_mask"], [193, 2, 1, "", "axis_names"], [193, 2, 1, "", "broadcasted"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create"], [193, 2, 1, "", "flat"], [193, 2, 1, "", "frame"], [193, 2, 1, "", "lat"], [193, 2, 1, "", "lon"], [193, 2, 1, "", "match_by_name"], [193, 2, 1, "", "ndim"], [193, 2, 1, "", "phi"], [193, 2, 1, "", "shape"], [193, 2, 1, "", "size"], [193, 2, 1, "", "skycoord"], [193, 2, 1, "", "theta"], [193, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[194, 3, 1, "", "clear"], [194, 3, 1, "", "from_geom"], [194, 3, 1, "", "from_hdulist"], [194, 2, 1, "", "geom"], [194, 3, 1, "", "get"], [194, 3, 1, "", "items"], [194, 3, 1, "", "keys"], [194, 3, 1, "", "pop"], [194, 3, 1, "", "popitem"], [194, 3, 1, "", "read"], [194, 3, 1, "", "setdefault"], [194, 3, 1, "", "to_hdulist"], [194, 3, 1, "", "update"], [194, 3, 1, "", "values"], [194, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "axes"], [195, 2, 1, "", "axes_names"], [195, 3, 1, "", "bin_volume"], [195, 2, 1, "", "binsz_wcs"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "contains_wcs_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 2, 1, "", "data_shape_axes"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 2, 1, "", "frame"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_regions"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 3, 1, "", "get_wcs_coord_and_weights"], [195, 2, 1, "", "has_energy_axis"], [195, 2, 1, "", "is_all_point_sky_regions"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_hpx"], [195, 2, 1, "", "is_image"], [195, 2, 1, "", "is_region"], [195, 2, 1, "", "is_regular"], [195, 2, 1, "", "npix"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 3, 1, "", "plot_region"], [195, 2, 1, "", "projection"], [195, 2, 1, "", "region"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "separation"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_binsz"], [195, 3, 1, "", "to_binsz_wcs"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "to_wcs_geom"], [195, 3, 1, "", "union"], [195, 3, 1, "", "upsample"], [195, 2, 1, "", "wcs"], [195, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 3, 1, "", "cutout"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 3, 1, "", "from_table"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_axis_data"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_hist"], [196, 3, 1, "", "plot_interactive"], [196, 3, 1, "", "plot_mask"], [196, 3, 1, "", "plot_region"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "stack"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_region_nd_map"], [196, 3, 1, "", "to_table"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[197, 2, 1, "", "as_plot_center"], [197, 2, 1, "", "as_plot_edges"], [197, 2, 1, "", "as_plot_labels"], [197, 2, 1, "", "as_plot_xerr"], [197, 3, 1, "", "assert_name"], [197, 2, 1, "", "bin_width"], [197, 2, 1, "", "bounds"], [197, 2, 1, "", "center"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "downsample"], [197, 2, 1, "", "edges"], [197, 2, 1, "", "edges_max"], [197, 2, 1, "", "edges_min"], [197, 3, 1, "", "format_plot_xaxis"], [197, 3, 1, "", "from_gti"], [197, 3, 1, "", "from_gti_bounds"], [197, 3, 1, "", "from_table"], [197, 3, 1, "", "from_time_bounds"], [197, 3, 1, "", "from_time_edges"], [197, 3, 1, "", "group_table"], [197, 2, 1, "", "interp"], [197, 3, 1, "", "is_aligned"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_contiguous"], [197, 2, 1, "", "iter_by_edges"], [197, 2, 1, "", "name"], [197, 2, 1, "", "nbin"], [197, 2, 1, "", "node_type"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 2, 1, "", "reference_time"], [197, 3, 1, "", "slice"], [197, 3, 1, "", "squash"], [197, 2, 1, "", "time_bounds"], [197, 2, 1, "", "time_delta"], [197, 2, 1, "", "time_edges"], [197, 2, 1, "", "time_format"], [197, 2, 1, "", "time_max"], [197, 2, 1, "", "time_mid"], [197, 2, 1, "", "time_min"], [197, 3, 1, "", "to_contiguous"], [197, 3, 1, "", "to_gti"], [197, 3, 1, "", "to_header"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[198, 2, 1, "", "as_energy_true"], [198, 2, 1, "", "axes"], [198, 2, 1, "", "axes_names"], [198, 3, 1, "", "bin_volume"], [198, 3, 1, "", "binary_structure"], [198, 3, 1, "", "boundary_mask"], [198, 2, 1, "", "center_coord"], [198, 2, 1, "", "center_pix"], [198, 2, 1, "", "center_skydir"], [198, 3, 1, "", "contains"], [198, 3, 1, "", "contains_pix"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cutout"], [198, 3, 1, "", "cutout_slices"], [198, 3, 1, "", "data_nbytes"], [198, 2, 1, "", "data_shape"], [198, 2, 1, "", "data_shape_axes"], [198, 2, 1, "", "data_shape_image"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "drop"], [198, 3, 1, "", "energy_mask"], [198, 2, 1, "", "footprint"], [198, 2, 1, "", "footprint_rectangle_sky_region"], [198, 2, 1, "", "frame"], [198, 3, 1, "", "from_aligned"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_header"], [198, 3, 1, "", "get_coord"], [198, 3, 1, "", "get_idx"], [198, 3, 1, "", "get_pix"], [198, 2, 1, "", "has_energy_axis"], [198, 3, 1, "", "is_aligned"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_allsky"], [198, 2, 1, "", "is_flat"], [198, 2, 1, "", "is_hpx"], [198, 2, 1, "", "is_image"], [198, 2, 1, "", "is_region"], [198, 2, 1, "", "is_regular"], [198, 2, 1, "", "ndim"], [198, 2, 1, "", "npix"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 2, 1, "", "pixel_area"], [198, 2, 1, "", "pixel_scales"], [198, 2, 1, "", "projection"], [198, 3, 1, "", "region_mask"], [198, 3, 1, "", "region_weights"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "replace_axis"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "separation"], [198, 2, 1, "", "shape_axes"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "solid_angle"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_bands_hdu"], [198, 3, 1, "", "to_binsz"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_even_npix"], [198, 3, 1, "", "to_header"], [198, 3, 1, "", "to_image"], [198, 3, 1, "", "to_odd_npix"], [198, 3, 1, "", "upsample"], [198, 2, 1, "", "wcs"], [198, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[199, 3, 1, "", "coadd"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cumsum"], [199, 2, 1, "", "data"], [199, 3, 1, "", "dot"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "fill_by_coord"], [199, 3, 1, "", "fill_by_idx"], [199, 3, 1, "", "fill_by_pix"], [199, 3, 1, "", "fill_events"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_stack"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get_by_coord"], [199, 3, 1, "", "get_by_idx"], [199, 3, 1, "", "get_by_pix"], [199, 3, 1, "", "get_image_by_coord"], [199, 3, 1, "", "get_image_by_idx"], [199, 3, 1, "", "get_image_by_pix"], [199, 3, 1, "", "get_spectrum"], [199, 3, 1, "", "integral"], [199, 3, 1, "", "interp_by_coord"], [199, 3, 1, "", "interp_by_pix"], [199, 3, 1, "", "interp_to_geom"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_mask"], [199, 3, 1, "", "iter_by_axis"], [199, 3, 1, "", "iter_by_image"], [199, 3, 1, "", "iter_by_image_data"], [199, 3, 1, "", "iter_by_image_index"], [199, 3, 1, "", "mask_nearest_position"], [199, 2, 1, "", "meta"], [199, 3, 1, "", "normalize"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "plot_grid"], [199, 3, 1, "", "plot_interactive"], [199, 2, 1, "", "quantity"], [199, 3, 1, "", "read"], [199, 3, 1, "", "reduce"], [199, 3, 1, "", "reduce_over_axes"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "reorder_axes"], [199, 3, 1, "", "reproject_by_image"], [199, 3, 1, "", "reproject_to_geom"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "sample_coord"], [199, 3, 1, "", "set_by_coord"], [199, 3, 1, "", "set_by_idx"], [199, 3, 1, "", "set_by_pix"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "split_by_axis"], [199, 3, 1, "", "sum_over_axes"], [199, 2, 1, "", "tag"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_hdu"], [199, 3, 1, "", "to_hdulist"], [199, 3, 1, "", "to_unit"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"], [199, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[200, 3, 1, "", "binary_dilate"], [200, 3, 1, "", "binary_erode"], [200, 3, 1, "", "coadd"], [200, 3, 1, "", "convolve"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "cumsum"], [200, 3, 1, "", "cutout"], [200, 3, 1, "", "cutout_and_mask_region"], [200, 2, 1, "", "data"], [200, 3, 1, "", "dot"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "fill_by_coord"], [200, 3, 1, "", "fill_by_idx"], [200, 3, 1, "", "fill_by_pix"], [200, 3, 1, "", "fill_events"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdu"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_stack"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get_by_coord"], [200, 3, 1, "", "get_by_idx"], [200, 3, 1, "", "get_by_pix"], [200, 3, 1, "", "get_image_by_coord"], [200, 3, 1, "", "get_image_by_idx"], [200, 3, 1, "", "get_image_by_pix"], [200, 3, 1, "", "get_spectrum"], [200, 3, 1, "", "integral"], [200, 3, 1, "", "interp_by_coord"], [200, 3, 1, "", "interp_by_pix"], [200, 3, 1, "", "interp_to_geom"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_mask"], [200, 3, 1, "", "iter_by_axis"], [200, 3, 1, "", "iter_by_image"], [200, 3, 1, "", "iter_by_image_data"], [200, 3, 1, "", "iter_by_image_index"], [200, 3, 1, "", "mask_contains_region"], [200, 3, 1, "", "mask_nearest_position"], [200, 2, 1, "", "meta"], [200, 3, 1, "", "normalize"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "plot"], [200, 3, 1, "", "plot_grid"], [200, 3, 1, "", "plot_interactive"], [200, 3, 1, "", "plot_mask"], [200, 2, 1, "", "quantity"], [200, 3, 1, "", "read"], [200, 3, 1, "", "reduce"], [200, 3, 1, "", "reduce_over_axes"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "reorder_axes"], [200, 3, 1, "", "reproject_by_image"], [200, 3, 1, "", "reproject_to_geom"], [200, 3, 1, "", "resample"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "sample_coord"], [200, 3, 1, "", "set_by_coord"], [200, 3, 1, "", "set_by_idx"], [200, 3, 1, "", "set_by_pix"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "smooth"], [200, 3, 1, "", "split_by_axis"], [200, 3, 1, "", "stack"], [200, 3, 1, "", "sum_over_axes"], [200, 2, 1, "", "tag"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_hdu"], [200, 3, 1, "", "to_hdulist"], [200, 3, 1, "", "to_region_nd_map"], [200, 3, 1, "", "to_region_nd_map_histogram"], [200, 3, 1, "", "to_unit"], [200, 2, 1, "", "unit"], [200, 3, 1, "", "upsample"], [200, 3, 1, "", "write"]], "gammapy.modeling": [[203, 1, 1, "", "Covariance"], [204, 1, 1, "", "CovarianceResult"], [205, 1, 1, "", "Fit"], [206, 1, 1, "", "FitResult"], [207, 1, 1, "", "OptimizeResult"], [208, 1, 1, "", "Parameter"], [209, 1, 1, "", "Parameters"], [210, 1, 1, "", "PriorParameter"], [211, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [277, 4, 1, "", "select_nested_models"], [278, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[203, 2, 1, "", "correlation"], [203, 2, 1, "", "data"], [203, 3, 1, "", "from_factor_matrix"], [203, 3, 1, "", "from_stack"], [203, 3, 1, "", "get_subcovariance"], [203, 3, 1, "", "plot_correlation"], [203, 2, 1, "", "scipy_mvn"], [203, 3, 1, "", "set_subcovariance"], [203, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[204, 2, 1, "", "backend"], [204, 2, 1, "", "matrix"], [204, 2, 1, "", "message"], [204, 2, 1, "", "method"], [204, 2, 1, "", "success"], [204, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[205, 3, 1, "", "confidence"], [205, 3, 1, "", "covariance"], [205, 3, 1, "", "optimize"], [205, 3, 1, "", "run"], [205, 3, 1, "", "stat_contour"], [205, 3, 1, "", "stat_profile"], [205, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[206, 2, 1, "", "backend"], [206, 2, 1, "", "covariance_result"], [206, 2, 1, "", "message"], [206, 2, 1, "", "method"], [206, 2, 1, "", "minuit"], [206, 2, 1, "", "models"], [206, 2, 1, "", "nfev"], [206, 2, 1, "", "optimize_result"], [206, 2, 1, "", "parameters"], [206, 2, 1, "", "success"], [206, 3, 1, "", "to_dict"], [206, 3, 1, "", "to_yaml"], [206, 2, 1, "", "total_stat"], [206, 2, 1, "", "trace"], [206, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[207, 2, 1, "", "backend"], [207, 2, 1, "", "message"], [207, 2, 1, "", "method"], [207, 2, 1, "", "minuit"], [207, 2, 1, "", "models"], [207, 2, 1, "", "nfev"], [207, 2, 1, "", "parameters"], [207, 2, 1, "", "success"], [207, 3, 1, "", "to_dict"], [207, 2, 1, "", "total_stat"], [207, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[208, 3, 1, "", "autoscale"], [208, 3, 1, "", "check_limits"], [208, 2, 1, "", "conf_max"], [208, 2, 1, "", "conf_min"], [208, 3, 1, "", "copy"], [208, 2, 1, "", "error"], [208, 2, 1, "", "factor"], [208, 2, 1, "", "factor_max"], [208, 2, 1, "", "factor_min"], [208, 2, 1, "", "frozen"], [208, 2, 1, "", "is_norm"], [208, 2, 1, "", "max"], [208, 2, 1, "", "min"], [208, 2, 1, "", "name"], [208, 2, 1, "", "norm_parameters"], [208, 2, 1, "", "prior"], [208, 3, 1, "", "prior_stat_sum"], [208, 2, 1, "", "quantity"], [208, 2, 1, "", "scale"], [208, 2, 1, "", "scale_method"], [208, 2, 1, "", "scan_max"], [208, 2, 1, "", "scan_min"], [208, 2, 1, "", "scan_n_sigma"], [208, 2, 1, "", "scan_values"], [208, 3, 1, "", "to_dict"], [208, 2, 1, "", "type"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "update_from_dict"], [208, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[209, 3, 1, "", "autoscale"], [209, 3, 1, "", "check_limits"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "count"], [209, 2, 1, "", "free_parameters"], [209, 3, 1, "", "freeze_all"], [209, 3, 1, "", "from_dict"], [209, 3, 1, "", "from_stack"], [209, 3, 1, "", "index"], [209, 2, 1, "", "max"], [209, 2, 1, "", "min"], [209, 2, 1, "", "names"], [209, 2, 1, "", "norm_parameters"], [209, 2, 1, "", "prior"], [209, 3, 1, "", "prior_stat_sum"], [209, 3, 1, "", "restore_status"], [209, 3, 1, "", "select"], [209, 3, 1, "", "set_parameter_factors"], [209, 3, 1, "", "to_dict"], [209, 3, 1, "", "to_table"], [209, 2, 1, "", "types"], [209, 3, 1, "", "unfreeze_all"], [209, 2, 1, "", "unique_parameters"], [209, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[210, 3, 1, "", "autoscale"], [210, 3, 1, "", "check_limits"], [210, 2, 1, "", "conf_max"], [210, 2, 1, "", "conf_min"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "error"], [210, 2, 1, "", "factor"], [210, 2, 1, "", "factor_max"], [210, 2, 1, "", "factor_min"], [210, 2, 1, "", "frozen"], [210, 2, 1, "", "is_norm"], [210, 2, 1, "", "max"], [210, 2, 1, "", "min"], [210, 2, 1, "", "name"], [210, 2, 1, "", "norm_parameters"], [210, 2, 1, "", "prior"], [210, 3, 1, "", "prior_stat_sum"], [210, 2, 1, "", "quantity"], [210, 2, 1, "", "scale"], [210, 2, 1, "", "scale_method"], [210, 2, 1, "", "scan_max"], [210, 2, 1, "", "scan_min"], [210, 2, 1, "", "scan_n_sigma"], [210, 2, 1, "", "scan_values"], [210, 3, 1, "", "to_dict"], [210, 2, 1, "", "type"], [210, 2, 1, "", "unit"], [210, 3, 1, "", "update_from_dict"], [210, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[211, 3, 1, "", "autoscale"], [211, 3, 1, "", "check_limits"], [211, 3, 1, "", "copy"], [211, 3, 1, "", "count"], [211, 2, 1, "", "free_parameters"], [211, 3, 1, "", "freeze_all"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_stack"], [211, 3, 1, "", "index"], [211, 2, 1, "", "max"], [211, 2, 1, "", "min"], [211, 2, 1, "", "names"], [211, 2, 1, "", "norm_parameters"], [211, 2, 1, "", "prior"], [211, 3, 1, "", "prior_stat_sum"], [211, 3, 1, "", "restore_status"], [211, 3, 1, "", "select"], [211, 3, 1, "", "set_parameter_factors"], [211, 3, 1, "", "to_dict"], [211, 3, 1, "", "to_table"], [211, 2, 1, "", "types"], [211, 3, 1, "", "unfreeze_all"], [211, 2, 1, "", "unique_parameters"], [211, 2, 1, "", "value"]], "gammapy.modeling.models": [[212, 1, 1, "", "BrokenPowerLawSpectralModel"], [213, 1, 1, "", "CompoundSpectralModel"], [214, 1, 1, "", "ConstantFluxSpatialModel"], [215, 1, 1, "", "ConstantSpatialModel"], [216, 1, 1, "", "ConstantSpectralModel"], [217, 1, 1, "", "ConstantTemporalModel"], [218, 1, 1, "", "DatasetModels"], [219, 1, 1, "", "DiskSpatialModel"], [220, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [221, 5, 1, "", "EBL_DATA_BUILTIN"], [222, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [223, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [224, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [225, 1, 1, "", "ExpDecayTemporalModel"], [226, 1, 1, "", "FoVBackgroundModel"], [227, 1, 1, "", "GaussianSpatialModel"], [228, 1, 1, "", "GaussianSpectralModel"], [229, 1, 1, "", "GaussianTemporalModel"], [230, 1, 1, "", "GeneralizedGaussianSpatialModel"], [231, 1, 1, "", "GeneralizedGaussianTemporalModel"], [232, 1, 1, "", "LightCurveTemplateTemporalModel"], [233, 1, 1, "", "LinearTemporalModel"], [234, 1, 1, "", "LogParabolaNormSpectralModel"], [235, 1, 1, "", "LogParabolaSpectralModel"], [236, 5, 1, "", "MODEL_REGISTRY"], [237, 1, 1, "", "MeyerCrabSpectralModel"], [238, 1, 1, "", "Model"], [239, 1, 1, "", "ModelBase"], [240, 1, 1, "", "Models"], [241, 1, 1, "", "NaimaSpectralModel"], [242, 1, 1, "", "PiecewiseNormSpatialModel"], [243, 1, 1, "", "PiecewiseNormSpectralModel"], [244, 1, 1, "", "PointSpatialModel"], [245, 1, 1, "", "PowerLaw2SpectralModel"], [246, 1, 1, "", "PowerLawNormSpectralModel"], [247, 1, 1, "", "PowerLawSpectralModel"], [248, 1, 1, "", "PowerLawTemporalModel"], [249, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [250, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [251, 1, 1, "", "ScaleSpectralModel"], [252, 1, 1, "", "Shell2SpatialModel"], [253, 1, 1, "", "ShellSpatialModel"], [254, 1, 1, "", "SineTemporalModel"], [255, 1, 1, "", "SkyModel"], [256, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [257, 1, 1, "", "SpatialModel"], [258, 1, 1, "", "SpectralModel"], [259, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [260, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [261, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [262, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [263, 1, 1, "", "TemplateNDSpatialModel"], [264, 1, 1, "", "TemplateNDSpectralModel"], [265, 1, 1, "", "TemplateNPredModel"], [266, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [267, 1, 1, "", "TemplateSpatialModel"], [268, 1, 1, "", "TemplateSpectralModel"], [269, 1, 1, "", "TemporalModel"], [270, 4, 1, "", "create_cosmic_ray_spectral_model"], [271, 4, 1, "", "create_crab_spectral_model"], [272, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [273, 4, 1, "", "integrate_spectrum"], [274, 4, 1, "", "read_hermes_cube"], [275, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[212, 3, 1, "", "__call__"], [212, 2, 1, "", "amplitude"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "covariance"], [212, 2, 1, "", "default_parameters"], [212, 2, 1, "", "ebreak"], [212, 3, 1, "", "energy_flux"], [212, 3, 1, "", "energy_flux_error"], [212, 3, 1, "", "evaluate"], [212, 3, 1, "", "evaluate_error"], [212, 3, 1, "", "freeze"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_parameters"], [212, 2, 1, "", "frozen"], [212, 2, 1, "", "index1"], [212, 2, 1, "", "index2"], [212, 3, 1, "", "integral"], [212, 3, 1, "", "integral_error"], [212, 3, 1, "", "inverse"], [212, 3, 1, "", "inverse_all"], [212, 2, 1, "", "is_norm_spectral_model"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "parameters_unique_names"], [212, 2, 1, "", "pivot_energy"], [212, 3, 1, "", "plot"], [212, 3, 1, "", "plot_error"], [212, 3, 1, "", "reassign"], [212, 3, 1, "", "reference_fluxes"], [212, 3, 1, "", "spectral_index"], [212, 3, 1, "", "spectral_index_error"], [212, 2, 1, "", "tag"], [212, 3, 1, "", "to_dict"], [212, 2, 1, "", "type"], [212, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[213, 3, 1, "", "__call__"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 3, 1, "", "energy_flux"], [213, 3, 1, "", "energy_flux_error"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "evaluate_error"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 2, 1, "", "frozen"], [213, 3, 1, "", "integral"], [213, 3, 1, "", "integral_error"], [213, 3, 1, "", "inverse"], [213, 3, 1, "", "inverse_all"], [213, 2, 1, "", "is_norm_spectral_model"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "parameters_unique_names"], [213, 2, 1, "", "pivot_energy"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "plot_error"], [213, 3, 1, "", "reassign"], [213, 3, 1, "", "reference_fluxes"], [213, 3, 1, "", "spectral_index"], [213, 3, 1, "", "spectral_index_error"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[214, 3, 1, "", "__call__"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "covariance"], [214, 2, 1, "", "default_parameters"], [214, 3, 1, "", "evaluate"], [214, 3, 1, "", "evaluate_geom"], [214, 2, 1, "", "evaluation_bin_size_min"], [214, 2, 1, "", "evaluation_radius"], [214, 2, 1, "", "evaluation_region"], [214, 2, 1, "", "frame"], [214, 3, 1, "", "freeze"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_parameters"], [214, 3, 1, "", "from_position"], [214, 2, 1, "", "frozen"], [214, 3, 1, "", "integrate_geom"], [214, 2, 1, "", "is_energy_dependent"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "parameters_unique_names"], [214, 2, 1, "", "phi_0"], [214, 3, 1, "", "plot"], [214, 3, 1, "", "plot_error"], [214, 3, 1, "", "plot_grid"], [214, 3, 1, "", "plot_interactive"], [214, 3, 1, "", "plot_position_error"], [214, 2, 1, "", "position"], [214, 2, 1, "", "position_error"], [214, 2, 1, "", "position_lonlat"], [214, 3, 1, "", "reassign"], [214, 2, 1, "", "tag"], [214, 3, 1, "", "to_dict"], [214, 3, 1, "", "to_region"], [214, 2, 1, "", "type"], [214, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[215, 3, 1, "", "__call__"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_geom"], [215, 2, 1, "", "evaluation_bin_size_min"], [215, 2, 1, "", "evaluation_radius"], [215, 2, 1, "", "evaluation_region"], [215, 2, 1, "", "frame"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 3, 1, "", "from_position"], [215, 2, 1, "", "frozen"], [215, 3, 1, "", "integrate_geom"], [215, 2, 1, "", "is_energy_dependent"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "parameters_unique_names"], [215, 2, 1, "", "phi_0"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "plot_grid"], [215, 3, 1, "", "plot_interactive"], [215, 3, 1, "", "plot_position_error"], [215, 2, 1, "", "position"], [215, 2, 1, "", "position_error"], [215, 2, 1, "", "position_lonlat"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 3, 1, "", "to_region"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"], [215, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[216, 3, 1, "", "__call__"], [216, 2, 1, "", "const"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "energy_flux"], [216, 3, 1, "", "energy_flux_error"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_error"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 2, 1, "", "frozen"], [216, 3, 1, "", "integral"], [216, 3, 1, "", "integral_error"], [216, 3, 1, "", "inverse"], [216, 3, 1, "", "inverse_all"], [216, 2, 1, "", "is_norm_spectral_model"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "parameters_unique_names"], [216, 2, 1, "", "pivot_energy"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "reassign"], [216, 3, 1, "", "reference_fluxes"], [216, 3, 1, "", "spectral_index"], [216, 3, 1, "", "spectral_index_error"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[217, 3, 1, "", "__call__"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "integral"], [217, 2, 1, "", "is_energy_dependent"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "parameters_unique_names"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "reassign"], [217, 2, 1, "", "reference_time"], [217, 3, 1, "", "sample_time"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "time_sum"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 2, 1, "", "covariance"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_yaml"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "index"], [218, 2, 1, "", "names"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 3, 1, "", "plot_positions"], [218, 3, 1, "", "plot_regions"], [218, 2, 1, "", "positions"], [218, 3, 1, "", "read"], [218, 3, 1, "", "read_covariance"], [218, 3, 1, "", "reassign"], [218, 3, 1, "", "restore_status"], [218, 3, 1, "", "select"], [218, 3, 1, "", "select_from_geom"], [218, 3, 1, "", "select_mask"], [218, 3, 1, "", "select_region"], [218, 3, 1, "", "selection_mask"], [218, 3, 1, "", "set_parameters_bounds"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "to_parameters_table"], [218, 3, 1, "", "to_regions"], [218, 3, 1, "", "to_template_sky_model"], [218, 3, 1, "", "to_template_spectral_model"], [218, 3, 1, "", "to_yaml"], [218, 3, 1, "", "unfreeze"], [218, 3, 1, "", "update_link_label"], [218, 3, 1, "", "update_parameters_from_table"], [218, 2, 1, "", "wcs_geom"], [218, 3, 1, "", "write"], [218, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[219, 3, 1, "", "__call__"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 2, 1, "", "e"], [219, 2, 1, "", "edge_width"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_geom"], [219, 2, 1, "", "evaluation_bin_size_min"], [219, 2, 1, "", "evaluation_radius"], [219, 2, 1, "", "evaluation_region"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 3, 1, "", "from_position"], [219, 3, 1, "", "from_region"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "integrate_geom"], [219, 2, 1, "", "is_energy_dependent"], [219, 2, 1, "", "lat_0"], [219, 2, 1, "", "lon_0"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 2, 1, "", "phi"], [219, 2, 1, "", "phi_0"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "plot_error"], [219, 3, 1, "", "plot_grid"], [219, 3, 1, "", "plot_interactive"], [219, 3, 1, "", "plot_position_error"], [219, 2, 1, "", "position"], [219, 2, 1, "", "position_error"], [219, 2, 1, "", "position_lonlat"], [219, 2, 1, "", "r_0"], [219, 3, 1, "", "reassign"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_region"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[220, 3, 1, "", "__call__"], [220, 2, 1, "", "alpha_norm"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 3, 1, "", "energy_flux"], [220, 3, 1, "", "energy_flux_error"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_error"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integral"], [220, 3, 1, "", "integral_error"], [220, 3, 1, "", "inverse"], [220, 3, 1, "", "inverse_all"], [220, 2, 1, "", "is_norm_spectral_model"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "pivot_energy"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "read"], [220, 3, 1, "", "read_builtin"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "redshift"], [220, 3, 1, "", "reference_fluxes"], [220, 3, 1, "", "spectral_index"], [220, 3, 1, "", "spectral_index_error"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "amplitude"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 2, 1, "", "ecut"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 2, 1, "", "index"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "reference"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[223, 3, 1, "", "__call__"], [223, 2, 1, "", "alpha"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "energy_flux"], [223, 3, 1, "", "energy_flux_error"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_error"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 2, 1, "", "index"], [223, 3, 1, "", "integral"], [223, 3, 1, "", "integral_error"], [223, 3, 1, "", "inverse"], [223, 3, 1, "", "inverse_all"], [223, 2, 1, "", "is_norm_spectral_model"], [223, 2, 1, "", "lambda_"], [223, 2, 1, "", "norm"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "pivot_energy"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "reference"], [223, 3, 1, "", "reference_fluxes"], [223, 3, 1, "", "spectral_index"], [223, 3, 1, "", "spectral_index_error"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "alpha"], [224, 2, 1, "", "amplitude"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "e_peak"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 2, 1, "", "index"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "lambda_"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "reference"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference_time"], [225, 3, 1, "", "sample_time"], [225, 2, 1, "", "t0"], [225, 2, 1, "", "t_ref"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "time_sum"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[226, 3, 1, "", "contributes"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_geom"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 2, 1, "", "name"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 3, 1, "", "reassign"], [226, 3, 1, "", "reset_to_default"], [226, 2, 1, "", "spatial_model"], [226, 2, 1, "", "spectral_model"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 2, 1, "", "e"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_geom"], [227, 2, 1, "", "evaluation_bin_size_min"], [227, 2, 1, "", "evaluation_radius"], [227, 2, 1, "", "evaluation_region"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 3, 1, "", "from_position"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integrate_geom"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "lat_0"], [227, 2, 1, "", "lon_0"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "phi"], [227, 2, 1, "", "phi_0"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "plot_grid"], [227, 3, 1, "", "plot_interactive"], [227, 3, 1, "", "plot_position_error"], [227, 2, 1, "", "position"], [227, 2, 1, "", "position_error"], [227, 2, 1, "", "position_lonlat"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "sigma"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 3, 1, "", "to_region"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "amplitude"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "mean"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 3, 1, "", "reference_fluxes"], [228, 2, 1, "", "sigma"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[229, 3, 1, "", "__call__"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference_time"], [229, 3, 1, "", "sample_time"], [229, 2, 1, "", "sigma"], [229, 2, 1, "", "t_ref"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "time_sum"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "e"], [230, 2, 1, "", "eta"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_geom"], [230, 2, 1, "", "evaluation_bin_size_min"], [230, 2, 1, "", "evaluation_radius"], [230, 2, 1, "", "evaluation_region"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 3, 1, "", "from_position"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integrate_geom"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "lat_0"], [230, 2, 1, "", "lon_0"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "phi"], [230, 2, 1, "", "phi_0"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "plot_grid"], [230, 3, 1, "", "plot_interactive"], [230, 3, 1, "", "plot_position_error"], [230, 2, 1, "", "position"], [230, 2, 1, "", "position_error"], [230, 2, 1, "", "position_lonlat"], [230, 2, 1, "", "r_0"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 3, 1, "", "to_region"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "eta"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference_time"], [231, 3, 1, "", "sample_time"], [231, 2, 1, "", "t_decay"], [231, 2, 1, "", "t_ref"], [231, 2, 1, "", "t_rise"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "time_sum"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[232, 3, 1, "", "__call__"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 3, 1, "", "from_table"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integral"], [232, 2, 1, "", "is_energy_dependent"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "read"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference_time"], [232, 3, 1, "", "sample_time"], [232, 2, 1, "", "t_ref"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "time_sum"], [232, 3, 1, "", "to_dict"], [232, 3, 1, "", "to_table"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"], [232, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "alpha"], [233, 2, 1, "", "beta"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 2, 1, "", "is_energy_dependent"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference_time"], [233, 3, 1, "", "sample_time"], [233, 2, 1, "", "t_ref"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "time_sum"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "alpha"], [234, 2, 1, "", "beta"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_log10"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "norm"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 2, 1, "", "amplitude"], [235, 2, 1, "", "beta"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 2, 1, "", "e_peak"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_log10"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[237, 3, 1, "", "__call__"], [237, 2, 1, "", "coefficients"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "energy_flux"], [237, 3, 1, "", "energy_flux_error"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_error"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 3, 1, "", "integral_error"], [237, 3, 1, "", "inverse"], [237, 3, 1, "", "inverse_all"], [237, 2, 1, "", "is_norm_spectral_model"], [237, 2, 1, "", "norm"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "pivot_energy"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "reference_fluxes"], [237, 3, 1, "", "spectral_index"], [237, 3, 1, "", "spectral_index_error"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[238, 3, 1, "", "create"], [238, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "reassign"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[240, 3, 1, "", "append"], [240, 3, 1, "", "clear"], [240, 3, 1, "", "copy"], [240, 3, 1, "", "count"], [240, 2, 1, "", "covariance"], [240, 3, 1, "", "extend"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_yaml"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "index"], [240, 3, 1, "", "insert"], [240, 2, 1, "", "names"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 3, 1, "", "plot_positions"], [240, 3, 1, "", "plot_regions"], [240, 3, 1, "", "pop"], [240, 2, 1, "", "positions"], [240, 3, 1, "", "read"], [240, 3, 1, "", "read_covariance"], [240, 3, 1, "", "reassign"], [240, 3, 1, "", "remove"], [240, 3, 1, "", "restore_status"], [240, 3, 1, "", "reverse"], [240, 3, 1, "", "select"], [240, 3, 1, "", "select_from_geom"], [240, 3, 1, "", "select_mask"], [240, 3, 1, "", "select_region"], [240, 3, 1, "", "selection_mask"], [240, 3, 1, "", "set_parameters_bounds"], [240, 3, 1, "", "set_prior"], [240, 3, 1, "", "to_dict"], [240, 3, 1, "", "to_parameters_table"], [240, 3, 1, "", "to_regions"], [240, 3, 1, "", "to_template_sky_model"], [240, 3, 1, "", "to_template_spectral_model"], [240, 3, 1, "", "to_yaml"], [240, 3, 1, "", "unfreeze"], [240, 3, 1, "", "update_link_label"], [240, 3, 1, "", "update_parameters_from_table"], [240, 2, 1, "", "wcs_geom"], [240, 3, 1, "", "write"], [240, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 2, 1, "", "include_ssc"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 2, 1, "", "particle_distribution"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "reference_fluxes"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "ssc_model"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[242, 3, 1, "", "__call__"], [242, 2, 1, "", "coords"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_geom"], [242, 2, 1, "", "evaluation_bin_size_min"], [242, 2, 1, "", "evaluation_radius"], [242, 2, 1, "", "evaluation_region"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_position"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integrate_geom"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "norms"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "phi_0"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "plot_grid"], [242, 3, 1, "", "plot_interactive"], [242, 3, 1, "", "plot_position_error"], [242, 2, 1, "", "position"], [242, 2, 1, "", "position_error"], [242, 2, 1, "", "position_lonlat"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 2, 1, "", "energy"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "norms"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate_geom"], [244, 2, 1, "", "evaluation_bin_size_min"], [244, 2, 1, "", "evaluation_radius"], [244, 2, 1, "", "evaluation_region"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 3, 1, "", "from_position"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integrate_geom"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "lat_0"], [244, 2, 1, "", "lon_0"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "phi_0"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "plot_grid"], [244, 3, 1, "", "plot_interactive"], [244, 3, 1, "", "plot_position_error"], [244, 2, 1, "", "position"], [244, 2, 1, "", "position_error"], [244, 2, 1, "", "position_lonlat"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 3, 1, "", "to_region"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "amplitude"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "emax"], [245, 2, 1, "", "emin"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "evaluate_integral"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 2, 1, "", "index"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_energy_flux"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "evaluate_integral"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "norm"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "tag"], [246, 2, 1, "", "tilt"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "amplitude"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_energy_flux"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "evaluate_integral"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 2, 1, "", "index"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "alpha"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 2, 1, "", "is_energy_dependent"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "reference_time"], [248, 3, 1, "", "sample_time"], [248, 2, 1, "", "t0"], [248, 2, 1, "", "t_ref"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "time_sum"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ScaleSpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "norm"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 2, 1, "", "tag"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[252, 3, 1, "", "__call__"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 2, 1, "", "eta"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_geom"], [252, 2, 1, "", "evaluation_bin_size_min"], [252, 2, 1, "", "evaluation_radius"], [252, 2, 1, "", "evaluation_region"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 3, 1, "", "from_position"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "integrate_geom"], [252, 2, 1, "", "is_energy_dependent"], [252, 2, 1, "", "lat_0"], [252, 2, 1, "", "lon_0"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "phi_0"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "plot_grid"], [252, 3, 1, "", "plot_interactive"], [252, 3, 1, "", "plot_position_error"], [252, 2, 1, "", "position"], [252, 2, 1, "", "position_error"], [252, 2, 1, "", "position_lonlat"], [252, 2, 1, "", "r_0"], [252, 2, 1, "", "r_in"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 3, 1, "", "to_region"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_geom"], [253, 2, 1, "", "evaluation_bin_size_min"], [253, 2, 1, "", "evaluation_radius"], [253, 2, 1, "", "evaluation_region"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 3, 1, "", "from_position"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integrate_geom"], [253, 2, 1, "", "is_energy_dependent"], [253, 2, 1, "", "lat_0"], [253, 2, 1, "", "lon_0"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "phi_0"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "plot_grid"], [253, 3, 1, "", "plot_interactive"], [253, 3, 1, "", "plot_position_error"], [253, 2, 1, "", "position"], [253, 2, 1, "", "position_error"], [253, 2, 1, "", "position_lonlat"], [253, 2, 1, "", "radius"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 3, 1, "", "to_region"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"], [253, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "amp"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 2, 1, "", "is_energy_dependent"], [254, 2, 1, "", "omega"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference_time"], [254, 3, 1, "", "sample_time"], [254, 2, 1, "", "t_ref"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "time_sum"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "contributes"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 3, 1, "", "create"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 2, 1, "", "frame"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "name"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "spatial_model"], [255, 2, 1, "", "spectral_model"], [255, 2, 1, "", "tag"], [255, 2, 1, "", "temporal_model"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "amplitude"], [256, 2, 1, "", "beta"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 2, 1, "", "ebreak"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 2, 1, "", "index1"], [256, 2, 1, "", "index2"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "reference"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "evaluate_geom"], [257, 2, 1, "", "evaluation_bin_size_min"], [257, 2, 1, "", "evaluation_radius"], [257, 2, 1, "", "evaluation_region"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 3, 1, "", "from_position"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integrate_geom"], [257, 2, 1, "", "is_energy_dependent"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "phi_0"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "plot_grid"], [257, 3, 1, "", "plot_interactive"], [257, 3, 1, "", "plot_position_error"], [257, 2, 1, "", "position"], [257, 2, 1, "", "position_error"], [257, 2, 1, "", "position_lonlat"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "amplitude"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 2, 1, "", "ecut"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "index_1"], [259, 2, 1, "", "index_2"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[260, 3, 1, "", "__call__"], [260, 2, 1, "", "amplitude"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_error"], [260, 2, 1, "", "expfactor"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 2, 1, "", "index_1"], [260, 2, 1, "", "index_2"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "amplitude"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_error"], [261, 2, 1, "", "expfactor"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 2, 1, "", "index_1"], [261, 2, 1, "", "index_2"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_geom"], [263, 2, 1, "", "evaluation_bin_size_min"], [263, 2, 1, "", "evaluation_radius"], [263, 2, 1, "", "evaluation_region"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 3, 1, "", "from_position"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integrate_geom"], [263, 2, 1, "", "is_energy_dependent"], [263, 2, 1, "", "map"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "phi_0"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "plot_grid"], [263, 3, 1, "", "plot_interactive"], [263, 3, 1, "", "plot_position_error"], [263, 2, 1, "", "position"], [263, 2, 1, "", "position_error"], [263, 2, 1, "", "position_lonlat"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"], [263, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "energy_flux"], [264, 3, 1, "", "energy_flux_error"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_error"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integral"], [264, 3, 1, "", "integral_error"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "inverse_all"], [264, 2, 1, "", "is_norm_spectral_model"], [264, 2, 1, "", "map"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "pivot_energy"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "reassign"], [264, 3, 1, "", "reference_fluxes"], [264, 3, 1, "", "spectral_index"], [264, 3, 1, "", "spectral_index_error"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"], [264, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 3, 1, "", "cutout"], [265, 2, 1, "", "default_parameters"], [265, 2, 1, "", "energy_center"], [265, 3, 1, "", "evaluate"], [265, 2, 1, "", "evaluation_radius"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 2, 1, "", "map"], [265, 2, 1, "", "name"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "position"], [265, 3, 1, "", "reassign"], [265, 3, 1, "", "slice_by_energy"], [265, 2, 1, "", "spectral_model"], [265, 3, 1, "", "stack"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"], [265, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 2, 1, "", "f0"], [266, 2, 1, "", "f1"], [266, 2, 1, "", "f2"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_ref"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_phasogram"], [266, 3, 1, "", "read"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "reference_time"], [266, 3, 1, "", "sample_time"], [266, 2, 1, "", "t_ref"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "time_sum"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"], [266, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 3, 1, "", "from_position"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "lat_0"], [267, 2, 1, "", "lon_0"], [267, 2, 1, "", "map"], [267, 2, 1, "", "map_center"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "phi_0"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "plot_grid"], [267, 3, 1, "", "plot_interactive"], [267, 3, 1, "", "plot_position_error"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_error"], [267, 2, 1, "", "position_lonlat"], [267, 3, 1, "", "read"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 3, 1, "", "to_region"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"], [267, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[268, 3, 1, "", "__call__"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "energy_flux"], [268, 3, 1, "", "energy_flux_error"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_error"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 3, 1, "", "from_region_map"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integral"], [268, 3, 1, "", "integral_error"], [268, 3, 1, "", "inverse"], [268, 3, 1, "", "inverse_all"], [268, 2, 1, "", "is_norm_spectral_model"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "pivot_energy"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "read_xspec_model"], [268, 3, 1, "", "reassign"], [268, 3, 1, "", "reference_fluxes"], [268, 3, 1, "", "spectral_index"], [268, 3, 1, "", "spectral_index_error"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integral"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "reference_time"], [269, 3, 1, "", "sample_time"], [269, 3, 1, "", "time_sum"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[276, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[279, 1, 1, "", "CashCountsStatistic"], [280, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [281, 1, 1, "", "WStatCountsStatistic"], [282, 4, 1, "", "cash"], [283, 4, 1, "", "cash_sum_cython"], [284, 4, 1, "", "compute_chisq"], [285, 4, 1, "", "compute_flux_doubling"], [286, 4, 1, "", "compute_fpp"], [287, 4, 1, "", "compute_fvar"], [288, 4, 1, "", "cstat"], [289, 4, 1, "", "f_cash_root_cython"], [290, 4, 1, "", "get_wstat_gof_terms"], [291, 4, 1, "", "get_wstat_mu_bkg"], [292, 4, 1, "", "norm_bounds_cython"], [293, 4, 1, "", "structure_function"], [294, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[279, 3, 1, "", "compute_errn"], [279, 3, 1, "", "compute_errp"], [279, 3, 1, "", "compute_upper_limit"], [279, 2, 1, "", "error"], [279, 3, 1, "", "info_dict"], [279, 2, 1, "", "n_bkg"], [279, 2, 1, "", "n_sig"], [279, 3, 1, "", "n_sig_matching_significance"], [279, 2, 1, "", "p_value"], [279, 2, 1, "", "sqrt_ts"], [279, 2, 1, "", "stat_max"], [279, 2, 1, "", "stat_null"], [279, 3, 1, "", "sum"], [279, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[281, 3, 1, "", "compute_errn"], [281, 3, 1, "", "compute_errp"], [281, 3, 1, "", "compute_upper_limit"], [281, 2, 1, "", "error"], [281, 3, 1, "", "info_dict"], [281, 2, 1, "", "n_bkg"], [281, 2, 1, "", "n_sig"], [281, 3, 1, "", "n_sig_matching_significance"], [281, 2, 1, "", "p_value"], [281, 2, 1, "", "sqrt_ts"], [281, 2, 1, "", "stat_max"], [281, 2, 1, "", "stat_null"], [281, 3, 1, "", "sum"], [281, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[295, 4, 1, "", "hierarchical_clustering"], [296, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[297, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [298, 4, 1, "", "cartesian"], [299, 4, 1, "", "fov_to_sky"], [300, 4, 1, "", "galactic"], [301, 4, 1, "", "motion_since_birth"], [302, 4, 1, "", "polar"], [303, 4, 1, "", "sky_to_fov"], [304, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[305, 1, 1, "", "HDULocation"], [306, 1, 1, "", "LazyFitsData"], [307, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[305, 3, 1, "", "get_hdu"], [305, 3, 1, "", "info"], [305, 3, 1, "", "load"], [305, 3, 1, "", "path"]], "gammapy.utils.integrate": [[308, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[309, 1, 1, "", "ScaledRegularGridInterpolator"], [310, 4, 1, "", "interpolate_profile"], [311, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[309, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[312, 5, 1, "", "BACKEND_DEFAULT"], [313, 5, 1, "", "METHOD_DEFAULT"], [314, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [315, 5, 1, "", "N_JOBS_DEFAULT"], [316, 5, 1, "", "POOL_KWARGS_DEFAULT"], [317, 1, 1, "", "multiprocessing_manager"], [318, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[319, 1, 1, "", "InverseCDFSampler"], [320, 4, 1, "", "draw"], [321, 4, 1, "", "get_random_state"], [322, 4, 1, "", "normalize"], [323, 4, 1, "", "pdf"], [324, 4, 1, "", "sample_powerlaw"], [325, 4, 1, "", "sample_sphere"], [326, 4, 1, "", "sample_sphere_distance"], [327, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[319, 3, 1, "", "sample"], [319, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[328, 4, 1, "", "compound_region_to_regions"], [329, 4, 1, "", "make_concentric_annulus_sky_regions"], [330, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [331, 4, 1, "", "region_to_frame"], [332, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[333, 4, 1, "", "get_images_paths"], [334, 4, 1, "", "make_path"], [335, 4, 1, "", "read_yaml"], [336, 4, 1, "", "recursive_merge_dicts"], [337, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[338, 4, 1, "", "hstack_columns"], [339, 4, 1, "", "table_row_to_dict"], [340, 4, 1, "", "table_standardise_units_copy"], [341, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[342, 1, 1, "", "Checker"], [343, 4, 1, "", "assert_quantity_allclose"], [344, 4, 1, "", "assert_skycoord_allclose"], [345, 4, 1, "", "assert_time_allclose"], [346, 4, 1, "", "mpl_plot_check"], [347, 4, 1, "", "requires_data"], [348, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[342, 3, 1, "", "run"]], "gammapy.utils.time": [[349, 4, 1, "", "absolute_time"], [350, 4, 1, "", "time_ref_from_dict"], [351, 4, 1, "", "time_ref_to_dict"], [352, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[353, 4, 1, "", "standardise_unit"], [354, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[355, 1, 1, "", "MapPanelPlotter"], [356, 4, 1, "", "add_colorbar"], [357, 4, 1, "", "annotate_heatmap"], [358, 4, 1, "", "colormap_hess"], [359, 4, 1, "", "colormap_milagro"], [360, 4, 1, "", "plot_contour_line"], [361, 4, 1, "", "plot_distribution"], [362, 4, 1, "", "plot_heatmap"], [363, 4, 1, "", "plot_map_rgb"], [364, 4, 1, "", "plot_npred_signal"], [365, 4, 1, "", "plot_spectrum_datasets_off_regions"], [366, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[355, 3, 1, "", "plot"], [355, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 94, 99, 100, 101, 102, 103, 104, 107, 108, 109, 122, 123, 128, 131, 136, 137, 141, 142, 143, 147, 167, 194, 200, 212, 216, 217, 222, 224, 225, 228, 229, 231, 232, 233, 235, 238, 240, 241, 245, 247, 248, 254, 255, 256, 259, 260, 261, 266, 269, 270, 271, 277, 287, 305, 353, 357, 358, 365, 368, 369, 371, 373, 378, 379, 380, 382, 384, 385, 386, 387, 388, 391, 394, 397, 398, 400, 401, 403, 404, 405, 406, 434, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 482, 483, 485, 488, 489, 495, 496, 497, 498, 500, 501, 503, 508, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 567], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 93, 95, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 123, 124, 125, 126, 128, 130, 131, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 170, 171, 175, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 275, 277, 279, 280, 281, 282, 285, 286, 287, 288, 295, 296, 315, 319, 326, 327, 345, 356, 358, 359, 363, 365, 368, 369, 371, 372, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 401, 404, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 495, 497, 501, 505, 507, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566], "00": [67, 87, 88, 89, 90, 100, 191, 369, 383, 436, 437, 438, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 454, 455, 457, 458, 461, 462, 464, 466, 467, 468, 469, 470, 471, 473, 474, 477, 478, 479, 480, 482, 484, 486, 487, 488, 489, 490, 518, 520, 521, 528, 548, 549, 559, 567], "000": [67, 87, 88, 90, 123, 383, 438, 440, 442, 443, 445, 450, 451, 452, 454, 455, 458, 461, 462, 466, 467, 471, 473, 474, 479, 486, 487, 489, 518], "0000": 394, "000000": 466, "000000000000002": 471, "00000000000001": 445, "00000000000003": 463, "00000000000004": 466, "0000000000016": 86, "0000000000018": 93, "000000000002": 454, "000000000006": 454, "000000000007": 466, "00000000001": 466, "00000000e": [468, 469], "00000001": 86, "0000000e": 469, "00000143": [369, 567], "0000e": [100, 438, 439, 442, 443, 444, 445, 447, 450, 458, 462, 468, 474, 488, 548], "0001": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 359, 452], "00010298": 467, "000150": 440, "0002": [440, 489], "00020": 440, "0002000": 440, "0003": 452, "0004": 100, "00050": 440, "000500": 440, "0006": 440, "00074287037": [93, 455], "000742870370370241": 93, "0008": 466, "0009": 440, "000e": [438, 442, 445, 451, 458, 462, 466, 474, 489, 548], "000true": 440, "001": [50, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 345, 454, 468, 526], "0016288e": 469, "001e": 67, "002018": 479, "0025508e": 469, "0028272e": 469, "0029": 393, "0029490222317034775": 487, "002e": 67, "003": [463, 473, 479], "003026327991562108": 451, "003131946268913696": 487, "0033": 565, "0036925550381217": 445, "00375698": 232, "004": 67, "00422666667": 459, "00449161": 237, "00490": 452, "00490483": 452, "0049409": 478, "005": 466, "00521472221220211": 451, "005914854792576181": 453, "0064830e": 469, "00688029": 232, "007": [436, 452, 457, 466], "0076540e": 469, "008": [466, 564], "0080714335304": 462, "008164325487530225": 453, "008366": 554, "008898002182656187": 453, "00894": 489, "009": 466, "00931e": 437, "009431203058496632": 453, "00e": [83, 437, 443, 454, 458, 462, 463, 467, 469, 470, 479, 487], "01": [39, 52, 75, 83, 87, 88, 90, 93, 101, 104, 108, 109, 111, 125, 131, 170, 171, 175, 185, 186, 191, 195, 198, 219, 225, 229, 231, 233, 248, 254, 369, 404, 436, 437, 438, 441, 442, 444, 446, 447, 450, 451, 454, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 479, 480, 481, 487, 488, 489, 490, 495, 500, 510, 512, 513, 516, 520, 522, 523, 524, 525, 546, 547, 551, 552, 553, 559, 564, 567], "010": 473, "0105e": 462, "010e": 67, "011": 473, "011496": 540, "011872336272724": 487, "012": [436, 461, 464, 473], "0122385e": 469, "01235137e": 469, "012733796525585": 475, "013": 450, "0139252e": 469, "014": [85, 101, 104, 108, 109, 167, 443, 466, 470, 487, 488, 512], "0143724": 232, "0143764": 478, "01449": 83, "0145": 472, "01450": [460, 488], "0149044e": 469, "015": 466, "01551196351647377": 232, "0164": 452, "01648855015875024": 563, "01700709977114979": 459, "017442925431194484": 459, "018": 67, "018182745349064267": 451, "0183519e": 469, "01960784313726": 456, "019899368286133": 451, "01e": [167, 404, 437, 466], "01t00": [87, 90, 93, 191, 369, 446, 454, 567], "01t01": 90, "01t02": 90, "02": [16, 67, 83, 93, 101, 104, 108, 109, 110, 114, 155, 162, 167, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 404, 436, 437, 438, 440, 442, 443, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 477, 479, 484, 487, 488, 489, 510, 512, 513, 520, 521, 522, 526, 527, 528], "020": [451, 466], "020420144596410953": 475, "021": [67, 436, 457, 466], "0225e": 466, "02288737": 232, "023": 466, "023473560586078527": 487, "023e": 446, "024": 466, "02432": 466, "024551293715163": 487, "024e": 489, "025": [466, 479], "0251191219844263": 452, "025e": 137, "026": [53, 67, 466], "02653": [446, 452], "026891": 466, "026914": 466, "027": 67, "028854": 472, "029627": 550, "029e": [438, 466], "02e": 83, "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 90, 197, 381, 396, 436, 437, 438, 440, 451, 452, 454, 457, 458, 462, 466, 469, 471, 473, 475, 476, 477, 481, 482, 488, 523, 529], "032": 466, "0322": 67, "0322775e": 469, "033": [67, 466], "033176650892097": 95, "03383": 478, "034": 564, "0344": 67, "034e": 440, "0354700e": 469, "0356": 437, "0356551": 437, "036": 67, "036e": 466, "037": 473, "03745318352059925": 557, "0375512e": 469, "0376213e": 469, "038": [436, 441], "039": [450, 451], "039215686274545": 456, "03921700077803329": 451, "0395135e": 469, "03978226e": 474, "04": [30, 67, 93, 436, 441, 443, 445, 446, 448, 451, 454, 462, 463, 466, 469, 471, 474, 478, 479, 530, 531], "040": 442, "041": 479, "0415": 489, "041882": 466, "042": 466, "0423761": 437, "042e": 466, "043": [67, 436, 490], "04357249662280083": 442, "044": 443, "04454": 479, "0447": 446, "0454683": 478, "046": 67, "0462798e": 469, "047": 67, "0473174": 237, "0474750e": 469, "048": [450, 479], "0482342e": 469, "04897634344908595": 95, "048e": 67, "049": [440, 450], "04939e": 437, "049676": 466, "04d": 454, "04e": 470, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 90, 103, 120, 121, 122, 123, 130, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 329, 396, 405, 436, 437, 438, 439, 440, 441, 442, 446, 449, 450, 451, 452, 455, 458, 461, 465, 466, 467, 468, 469, 470, 473, 476, 478, 480, 482, 487, 488, 515, 520, 532, 533, 534, 549], "050": 473, "05019": 137, "0503641": 437, "0505949e": 469, "05075": 469, "0508075688763": 466, "05088486522436142": 442, "051": [19, 20, 26, 473], "051289": 535, "051c": [17, 21, 22, 24, 25, 27], "052": 466, "0520119e": 469, "0521842481248": 453, "05227": 466, "053": 450, "053212009682775": 475, "053999": 532, "054833602905273e": 451, "05487060546875": 442, "0548e": 451, "054e": 67, "055": 466, "055e": 440, "0560": 489, "056130": 466, "05628243": 489, "05637e": 437, "05673": 489, "057": 466, "05762513693893088": 451, "058": 67, "058201": 466, "05853": 446, "058823529411775": 456, "058e": 446, "059": 67, "05901956e": 469, "0598579": 437, "059e": 462, "05deg": 198, "05t12": [487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "05t13": [443, 474], "06": [141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 436, 450, 451, 452, 457, 464, 466, 467, 468, 469, 470, 471, 474, 477, 479, 482, 535, 536, 537], "060113": 538, "061": [443, 489], "062": [454, 473, 474, 479], "0625": 474, "0628": 489, "063": 67, "0631757e": 469, "06334488877417636": 475, "064108e": 466, "06430": 452, "0643032": 452, "06450": 137, "065071": 466, "065119": 489, "06549": 137, "066": 442, "066442": 466, "0674": 446, "068245": 466, "0689": 468, "068e": 440, "069": 67, "07": [101, 103, 122, 167, 343, 383, 404, 436, 440, 441, 443, 450, 452, 461, 463, 464, 466, 467, 469, 471, 473, 474, 479, 487, 490, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "07022": 137, "070483": 466, "070e": 446, "0711412": 437, "072": 67, "073": 67, "0739282e": 469, "073961": 522, "074": [466, 479], "07454639": 452, "07455": 452, "0746": 489, "0748": [466, 489], "075": 67, "07512322002655547": 451, "0756e": 437, "076": 489, "077": 437, "078": 440, "07843137254903": 456, "07943648658692837": 475, "07944657408": 466, "079464e": 489, "0799109224230051": 475, "07e": 463, "08": [86, 363, 404, 436, 441, 444, 445, 447, 448, 450, 451, 458, 466, 467, 468, 470, 479, 487, 488, 529, 540, 541, 542], "0800792e": 469, "08075": 469, "08081469527619482": 445, "08088": [173, 470], "081": 442, "0811551760882139": 475, "08142": 465, "08191603310406206": 475, "08192": 452, "08192101": 452, "082": 466, "082691868487906": 459, "08269984": 489, "082e": 123, "083": [67, 466], "08328557573258877": 475, "0833333358168602": 442, "0833333432674408": 442, "08342": 137, "08388624433428049": 475, "084": [67, 443], "08447355125099419": 475, "0845515": 437, "085": 466, "08529426": 96, "0855013383552432": 475, "086": 441, "08675": 467, "086e": 466, "087": 489, "08795162606984375": 475, "087e": 466, "088": [436, 453, 457], "088742": 466, "08880368117243051": 475, "08894569035619496": 475, "089": 132, "0894640e": 469, "0897868126630783": 475, "089881": 466, "08e": [458, 473], "09": [33, 123, 167, 436, 438, 443, 446, 448, 450, 466, 467, 469, 470, 477, 487, 488, 489, 543, 544, 545, 565], "090": [436, 443], "0902437e": 469, "0907128e": 469, "091": [436, 477], "0910": [246, 247], "0914": [52, 53], "093477": 452, "09348": 452, "09426693227142095": 475, "094834": 466, "095": 528, "095232": 466, "09562941": 489, "095707": 489, "096": 443, "0960": 489, "09607": 489, "09610314778983592": 475, "09623312838375568": 475, "096321": 558, "0963e": 462, "09740295372903346": 475, "097e": 67, "09805": 137, "098903": 466, "09907043184188653": 475, "09e": [470, 479], "0b100": 315, "0d": [125, 456, 467, 524], "0e": [391, 443, 445, 447, 451, 454, 458, 462, 467, 469, 471, 473, 474, 479, 487, 519, 520, 521, 522, 524, 525, 526, 527, 530, 531, 533, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "0f": [468, 479, 489], "0rc": 397, "0rc1": 397, "0true": 452, "0x105fd0cf8": 368, "0x105fe3b70": 368, "0x129602550": 368, "0x7fa6534cd8b0": 475, "0x7fa6534cda00": 475, "0x7fa65350c280": 467, "0x7fa658247490": 476, "0x7fa6582b2730": 467, "0x7fa66c64fdc0": 478, "0x7fa66c6771f0": 478, "0x7fa66c74a7c0": 456, "0x7fa66c74a880": 456, "0x7fa66c916670": 467, "0x7fa66c9d04c0": 475, "0x7fa66c9d0550": 475, "0x7fa66cbd65e0": 474, "0x7fa66cd3e730": 478, "0x7fa66cd3e820": 478, "0x7fa66cd680d0": 459, "0x7fa66cfb5d90": 467, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 94, 95, 100, 101, 103, 104, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 162, 167, 170, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 208, 210, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 277, 279, 280, 281, 285, 286, 295, 296, 308, 309, 315, 316, 317, 326, 327, 329, 330, 353, 355, 358, 359, 363, 365, 368, 369, 371, 372, 375, 376, 378, 379, 380, 382, 383, 385, 388, 390, 391, 392, 393, 394, 395, 397, 398, 401, 404, 405, 408, 409, 411, 412, 416, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 484, 487, 488, 489, 491, 495, 496, 497, 500, 501, 503, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 564, 565, 566], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 86, 87, 88, 89, 90, 100, 101, 102, 104, 107, 108, 109, 110, 114, 116, 120, 121, 123, 124, 125, 129, 130, 131, 136, 137, 138, 141, 142, 144, 146, 148, 154, 155, 156, 157, 158, 160, 167, 173, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 205, 208, 210, 219, 222, 234, 235, 237, 238, 259, 271, 286, 315, 317, 327, 356, 361, 363, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384, 385, 390, 391, 392, 396, 398, 404, 409, 411, 422, 424, 427, 431, 433, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 491, 497, 501, 507, 510, 512, 513, 514, 515, 525, 526, 529, 531, 534, 535, 537, 538, 539, 540, 542, 543, 545, 546, 547, 548, 551, 552, 553, 563, 564, 567], "100": [19, 20, 26, 46, 47, 74, 93, 123, 131, 146, 147, 157, 198, 200, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 273, 327, 368, 369, 371, 376, 387, 407, 437, 439, 442, 445, 450, 451, 452, 454, 455, 456, 458, 459, 463, 465, 466, 467, 469, 470, 471, 474, 476, 478, 479, 480, 489, 493, 495, 496, 497, 501, 512, 515, 516, 519, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 564], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 193, 368, 371, 440, 466, 467, 469, 476, 479, 489, 515], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 102, 107, 146, 157, 160, 170, 466, 479], "100000": [74, 466, 487], "1000000": [51, 52, 54, 466, 548], "10000000": 548, "1001": [426, 454, 455], "1002": 426, "10041": 136, "10045": [65, 261, 547], "10049": 437, "1006": 426, "101": [412, 463, 466], "1012": 465, "1013": 427, "1014": 427, "101430": 463, "10172": 474, "102": [167, 446, 564, 565], "1021": 427, "1025": 427, "1026": 427, "10262943822890519": [95, 475], "1027": 427, "102877228833871": 475, "1029": 427, "10295505": 489, "102e": 466, "103": [136, 407, 430], "103000133": 480, "1031": 427, "10317325958321796": 487, "1032": 427, "1034": 489, "1035": 427, "10350021860740599": 443, "1036": 446, "1038": 427, "104": 452, "1040": 427, "10409": 452, "10409446": 452, "1043": 427, "104317": [101, 467, 473], "1044": 446, "1045": 427, "1046": 386, "10470702368766069": 475, "10477": 489, "105": [82, 443, 481], "1051": 427, "1052": 466, "1053": 427, "1054": 427, "1054498": 132, "1056": 462, "1057": 427, "10592": 567, "105953": 489, "1061971e": 469, "106217": 83, "1062535e": 469, "1064": 466, "1065": 427, "1067": 427, "1069": 427, "107": [437, 445, 471], "1070": [427, 489], "1072542e": 469, "1073": 427, "10752883769757363": 475, "1076": 427, "1078": 427, "107e": 466, "108": [424, 436, 559], "108034597491956e": 474, "108043": 450, "1082": 427, "1083": 427, "1084": 427, "1085": 427, "1085000": 450, "1086": 286, "1087": 427, "1088": [100, 427], "1089": 427, "109": [407, 438, 471], "1090": 427, "1092": [427, 446], "1093": [427, 446], "1098": 427, "1099306e": 469, "109e": 452, "10d": 456, "10e": [167, 466, 469], "10k": 188, "10th": [395, 406], "11": [67, 87, 90, 93, 123, 124, 128, 129, 208, 329, 372, 375, 377, 385, 392, 396, 407, 408, 429, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 470, 472, 473, 476, 477, 479, 487, 488, 489, 512, 514, 565], "110": [466, 479], "1100": 427, "110000": [467, 470], "1102": 427, "1102e": 439, "1103": 427, "110380": [83, 384, 447, 450, 452, 478], "1104": 427, "1105": 427, "1107": 427, "1108": 427, "111": [356, 375, 427, 436, 450, 466, 559], "1110": 427, "1111": [138, 466, 489], "111140": [384, 447, 450, 452], "111159": [384, 447, 450, 452, 478], "11132": 64, "1115": 427, "111507416": 463, "111630": [89, 463, 478], "111797": 466, "11184": [65, 260, 546], "112": [437, 442], "11208": 65, "1127": 427, "11291820875721864": 475, "113": [436, 489, 559], "1131": 376, "1133": 427, "1134": 427, "1136": 427, "114416978060046": 462, "1149": 467, "115": 67, "1150": 427, "11517": 489, "11553325504064559": [95, 475], "11587179071752986": 95, "116": [407, 438], "1160": 466, "11610": 489, "1162": 427, "1166": 427, "1167": [375, 382], "1169": 427, "116e": 67, "117": [407, 529], "1170": 427, "1172": 382, "1173775": 466, "1176": 427, "117877e": 466, "1179": 427, "118": [136, 450], "1183": 427, "118355": 466, "119": [438, 446, 450], "1190": 427, "1193777560333226e": 460, "119432": 437, "1195": 427, "11af4c": 407, "11e": [448, 466], "12": [17, 38, 42, 67, 86, 87, 90, 101, 103, 104, 111, 122, 123, 137, 157, 160, 186, 187, 188, 190, 196, 199, 200, 212, 216, 222, 224, 228, 235, 245, 247, 256, 259, 260, 261, 271, 372, 374, 375, 376, 377, 379, 380, 385, 388, 391, 407, 411, 412, 413, 425, 430, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 458, 459, 460, 461, 462, 466, 467, 468, 471, 473, 474, 476, 477, 479, 487, 489, 501, 512, 515, 516, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 533, 536, 537, 540, 541, 542, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558], "120": [53, 383, 444, 479, 523], "120000": 447, "120154": 466, "1204": 427, "1207": 427, "120e": [67, 489], "121": [67, 452, 473], "1210": 427, "1211": [427, 466], "121241": 450, "12148": 446, "1215": 427, "1216": 439, "12186": 489, "1219": 466, "122": [67, 136, 407, 440, 473], "1220": 427, "1226": 427, "1227": 427, "12276676166802643": 475, "123": [87, 90, 380, 446], "1231": 428, "1234": 88, "123456789": [191, 369, 567], "1235": 427, "1237": 376, "1238": 427, "123890826": 86, "123892513": 86, "1238e": 462, "1239": 373, "123944": 83, "124": [136, 380, 436, 442, 446, 466, 473, 559], "1240": 427, "12423250e": 469, "1243": 489, "1244969200533408": 296, "1246": 427, "12493874": 469, "124e": 67, "125": [67, 123, 136, 436, 442, 452, 471, 479, 489, 559, 564], "12518": 451, "12525306": 459, "12546": 65, "125e": 451, "126": [67, 440, 466, 468], "12611": 137, "1264500e": 469, "126585": 437, "1266": 427, "1268": 427, "12688": 83, "1269263e": 469, "12697": 451, "127": 446, "12704": [136, 137], "1271v": 287, "12751": 437, "1277": 374, "1278": 375, "12794487": 474, "128": [407, 463, 491], "12809": [101, 467, 473], "1281": 427, "12816": 489, "12856": 479, "1287": 427, "1289": 427, "128e": 440, "129": 433, "1290": 427, "1291": 427, "1294": 427, "1299": 466, "129e": 446, "12nan5": 440, "12r_": 53, "12th": [393, 406], "13": [67, 100, 123, 137, 197, 295, 372, 373, 377, 382, 387, 396, 412, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 490, 497, 554, 555, 556, 557, 565], "130": 512, "1300": 427, "1301v": 38, "13030": 489, "1305": 427, "13061": 474, "131": [440, 452], "1310": 489, "1312": 427, "13133": 489, "13152": 452, "1316": 427, "1317": 428, "1318": 427, "1319": [93, 427], "13197": 450, "132": [436, 446, 457, 458], "1321e": 451, "13226": 489, "132472": 452, "133": 137, "1331": 428, "1334": 428, "1337": 428, "1339": 428, "133e": [440, 446], "134": [137, 443, 446, 452], "1341": 428, "1342a": 147, "1343": 428, "1344": 466, "1345": 428, "1346": 428, "1347": 428, "135": [38, 100, 137, 440, 466, 468], "13500212963": 466, "13500566998758723": 453, "1351e": 466, "1354": 428, "135498046875": 442, "1357": 428, "1359316": 489, "135e": 123, "136": 466, "1360": 428, "1361": 466, "1362": 428, "1367": 428, "1369": [376, 428], "137": [443, 446, 453], "1372": 428, "137254901960785": 456, "1373": 428, "1374": 428, "1376": 428, "1377": 428, "1378": 428, "1379190199428797": 296, "137990": 466, "137e": 446, "138": [407, 440, 454, 489], "1381": 428, "1386": 428, "1387": 428, "138e": 452, "139": [442, 446, 479], "13911": 489, "1395": 428, "1396": [368, 443], "13960": 489, "1397": 428, "1397412321592923": 475, "13e": 467, "13nan6": 440, "13th": 406, "14": [28, 65, 67, 86, 369, 372, 377, 380, 385, 387, 388, 426, 436, 437, 440, 442, 443, 446, 449, 450, 457, 462, 463, 466, 467, 468, 470, 472, 473, 474, 477, 488, 489, 558, 564], "140": [436, 442, 480, 528], "1401": 428, "1402": 535, "1406": 428, "140779935183259e": 460, "14079": 136, "1408": [428, 489], "140e": 458, "141": [294, 452, 466], "1411180": 450, "1412": 428, "14121": 452, "1412536400000000": 489, "14149953611195087": [95, 475], "14150": 452, "1419": [376, 429], "141945": 437, "142": [67, 407, 440, 466, 489], "14201": 136, "1421": 428, "14210": 440, "1426": 428, "142e": 466, "143": 446, "1432": 428, "1433": 428, "1435": 428, "1438": 170, "1438465e": 469, "1439110308062257": 475, "144": [440, 473, 489], "14419991": 96, "1442739329466746e": 474, "1443": 428, "1444": 428, "1445": 382, "14457": 489, "1446": 428, "1447": 428, "145": 466, "1451": 383, "14531053887243": 452, "1456": 428, "1456479e": 469, "146": 489, "14610": 567, "146472": 466, "1467": 138, "14671140315352": 453, "147": [426, 466, 471], "1470": [428, 489], "1474": 428, "1475": 428, "1476": 428, "14773": 479, "147e": 466, "148": 446, "1482": 466, "1485314": 96, "1486415e": 469, "1489": 428, "149": [442, 470, 473], "1491": 452, "1492": 428, "1494": 452, "1495": 428, "1496e": 447, "1499472780781963": 296, "149e": 466, "14e": [447, 465], "14msts37sst": [454, 455], "14nan3": 440, "14nan5": 440, "14th": [392, 395, 406], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 90, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 197, 358, 359, 363, 377, 385, 407, 411, 416, 421, 424, 425, 426, 428, 437, 442, 443, 446, 448, 450, 451, 452, 454, 455, 456, 458, 459, 463, 466, 468, 470, 471, 473, 474, 479, 489, 512, 520], "150": [129, 136, 137, 407, 440, 442, 454, 455, 471, 489], "1503e": 444, "1505": 428, "15076259": 96, "151": [407, 473], "1510": 132, "1510240e": 469, "15140": 446, "1515": 428, "15154854": 96, "1517": 428, "152": [436, 446, 452, 477, 488], "1520": 491, "1521": 452, "15228678433255e": 487, "1523": 454, "15246": 454, "152477": 479, "1527": 428, "153": 466, "1530": 467, "15319": 454, "153600": 467, "154": [407, 437, 466], "1543": 428, "154e": 452, "155": 407, "15518": 489, "1552": 448, "1553": [466, 489], "1554": 428, "1554106e": 469, "1556": [428, 466, 489], "1556008e": 469, "1558": 428, "156": [407, 442, 443, 446, 452, 473], "1562": 428, "15621": 489, "1564": 428, "156525": 466, "1567629e": 469, "1568": 428, "15686274509804": 456, "157": [407, 489], "1573": 428, "1576": 428, "158": [137, 437, 443, 450], "1582": 428, "1586": 93, "15899": 446, "1594": 428, "1597317": 96, "159t": 52, "15h14m00": 466, "15nan8": 440, "16": [16, 24, 53, 67, 93, 108, 109, 186, 372, 376, 385, 388, 389, 412, 427, 432, 434, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 514, 556, 564, 565], "160": [31, 123, 407, 416, 456, 473], "1600": 455, "1600e": 438, "1605": 428, "16056": 446, "1606": 428, "1607": 465, "160e": 67, "161": [136, 376, 442, 452, 462, 466], "1610e": [438, 466], "161250": 458, "1613279491744304": 475, "1616": 428, "1618850e": 469, "1619e": 100, "162": 67, "16227766": 471, "1622776601683795": [470, 471, 487], "16240": 488, "16287": 489, "1629219e": 469, "163": [456, 564], "1630": [428, 489], "16303": 452, "16303044": 452, "1634": 428, "164": 466, "1642": 437, "165": 473, "1650": 489, "16506": 437, "16511": 452, "16511148": 452, "1653": 462, "1658": 428, "166": [407, 452, 466], "1660": 428, "16650390625": 439, "1665478": 96, "167": [407, 452, 458], "167219": 466, "1675": 428, "167e": 446, "168": [100, 466, 489], "1681": 428, "1685": 428, "1686": 466, "1687": 86, "168702": 437, "169": 452, "1691": 437, "1695": 428, "1696": 428, "1697": 428, "169815": 458, "169871": 458, "16th": 406, "17": [20, 21, 40, 67, 86, 379, 382, 385, 416, 433, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 565], "170": 439, "17016482e": 468, "1702": 428, "17020": 446, "171": 446, "1710": 429, "1711": 428, "1713": [439, 538], "1715": 382, "1717": 489, "171749": 489, "1719": 538, "1719502": 96, "1719610": 96, "1719670": 96, "171b": 270, "172": 456, "17229679": 96, "173": 466, "1731": [428, 473], "1732": 466, "17320": 466, "1737799900000000": 489, "174": 442, "1742": 67, "17445": 489, "1746": [428, 489], "1748": [428, 473], "1750": 428, "1751": 428, "1753": 489, "1755": [428, 446], "1759": 428, "175e": 466, "176": [137, 407, 436, 463, 466, 549], "1760": 428, "1761": 428, "1762": 491, "1763": [429, 466], "1764": [428, 452], "176470588235294": 456, "1766": 429, "1768896e": 469, "177": [407, 436, 479, 480, 528, 549], "17776": 437, "177e": 466, "178": [427, 436, 441], "178442": 67, "1785": [428, 437], "1791": 428, "179475": 237, "1799": 428, "17a": [60, 466], "17e": 473, "17g": 50, "17th": 422, "18": [11, 87, 90, 136, 197, 372, 387, 393, 413, 419, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "180": [382, 400, 402, 407, 462, 466, 471], "1800": [428, 455, 471, 478], "180000": [454, 455], "1804": 466, "180458": 450, "18046952655570045": 296, "1805": 382, "1807": 429, "1808": [428, 466, 489], "181": 446, "1811": 445, "1812": 428, "1813": 466, "1818": 428, "182": [436, 528], "1821": 428, "1822": 428, "1825": 466, "18257": 446, "183": [442, 450], "1830e": 442, "183139597": 86, "1834": 439, "1835": 93, "1836": 429, "1836544903987521": 475, "1837": 429, "18385658": 452, "18386": 452, "18392464": 503, "184": [86, 93, 421, 425, 446, 454, 461, 472, 473], "18400002": 461, "1841": 377, "1845": 429, "1846": 429, "18465": 489, "1849": 429, "184989894219835": 459, "185": 472, "1854": [429, 466], "1855": 429, "1857": 429, "1859": 429, "186": [420, 452, 466], "1861": 429, "1862": 429, "186484131475074": 327, "1866": 470, "186643": 489, "186e": 446, "187": [413, 420, 452, 462], "1871": 429, "1877": 378, "188": [420, 437, 466], "1883": 429, "1884": 429, "18842983819716610": 452, "1886": 462, "1888": 429, "188e": 440, "189": [442, 469], "1890": 429, "1891": 429, "18921591": 469, "1893": 429, "1893e": [438, 466], "1894": 429, "1895": 429, "1896e": 438, "1898": 429, "18988": 489, "1899070e": 469, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 197, 372, 384, 386, 388, 407, 415, 416, 418, 430, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "190": [443, 466], "1902": [65, 261, 547], "1903": 429, "1904": 429, "1905": 451, "1908": 429, "1909": 429, "191": [136, 420, 436, 549], "1910": [173, 470], "1912": 429, "1917": 489, "1918": 429, "1919": 429, "192": [436, 549], "1920": 489, "1921": 429, "19214093": 96, "1922": 429, "1926": 429, "1926520e": 469, "1927": 429, "1928": 466, "1929": 429, "193": [446, 479], "1930": 429, "1933": 429, "1934": 429, "19354": 452, "1936925": 96, "1937": [429, 466], "194": 420, "1943186": 96, "1947565": 96, "1949": 429, "195": [232, 436, 442, 549], "1950rspsa": 52, "1951": 408, "1953830": 96, "1955810e": 469, "1958e": 468, "196": [67, 437, 473], "1960784313725492": 456, "1961": 138, "1962": 408, "1963": 466, "19646": 479, "1965tralm": 21, "1966": 408, "1969": 408, "196991563774588": 271, "197": [67, 436, 452, 559], "1971": 379, "19735897928723367": 453, "1975": 408, "1976572e": 469, "1978": 466, "1979": [282, 288, 408, 562], "1979892": 452, "1980": 466, "1982": 37, "1983": 562, "1986": 380, "1986027": 489, "1987": 452, "19879005": 170, "1988": 408, "1989": 408, "199": [452, 458, 473], "1990": [37, 408], "1990apj": [36, 37], "1991": 408, "1991mnra": 22, "19932878": 469, "1994": [408, 562], "1994a": [52, 53], "1995": [407, 408], "1995a": 280, "1995apj": 17, "1996": [27, 446, 459, 562], "1996mnra": 27, "1997": 487, "1997apj": 25, "1998": [87, 90, 408, 562], "1998apj": 28, "1999": [53, 191, 369, 567], "19991": 487, "199999809265137": 466, "19999999999999998": 445, "1999apj": 53, "19e": 470, "19th": 406, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 108, 109, 125, 145, 146, 155, 169, 186, 188, 322, 361, 374, 378, 379, 381, 382, 383, 384, 387, 388, 389, 400, 410, 412, 413, 414, 415, 419, 421, 424, 428, 430, 431, 434, 436, 437, 439, 440, 441, 442, 444, 446, 450, 457, 462, 467, 468, 470, 472, 474, 475, 476, 478, 479, 487, 499, 501, 503, 508, 511, 516, 560, 562], "1dc": [82, 83, 89, 101, 104, 108, 109, 113, 115, 116, 120, 136, 137, 142, 146, 147, 148, 157, 356, 361, 363, 376, 378, 384, 388, 409, 437, 445, 447, 450, 452, 458, 462, 463, 467, 469, 473, 501], "1deg": 198, "1e": [19, 20, 26, 86, 99, 128, 129, 131, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 238, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 282, 288, 329, 343, 345, 368, 379, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 458, 460, 462, 463, 466, 468, 474, 476, 479, 480, 497, 501, 505, 529, 530, 531, 533, 536, 537, 541, 542, 544, 545, 546, 547], "1e0": 495, "1e10": [51, 147], "1e11": 468, "1e12": [495, 505], "1e2": [440, 495, 497], "1e3": [479, 505], "1e30": 539, "1e4": [468, 479, 480], "1e40": 496, "1e5": [444, 479, 497, 515, 516], "1e51": 52, "1e6": [45, 479, 493, 548], "1e7": [125, 548], "1f": 443, "1fhl": [413, 426], "1fhl_name": 71, "1h": [124, 157], "1k": [101, 108], "1kpc": 497, "1lhaaso": [57, 70, 434, 466], "1lhaaso_catalog": 57, "1rc1": 397, "1tev": [52, 53, 129, 455], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 100, 101, 103, 104, 108, 109, 112, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 137, 139, 140, 144, 145, 146, 147, 149, 155, 157, 160, 167, 170, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 208, 209, 210, 211, 212, 216, 220, 222, 224, 228, 230, 231, 235, 238, 245, 246, 247, 252, 253, 255, 256, 259, 260, 261, 266, 270, 271, 277, 279, 280, 281, 282, 287, 288, 293, 295, 315, 317, 353, 356, 361, 363, 365, 368, 369, 372, 373, 377, 379, 380, 382, 383, 384, 385, 388, 391, 392, 393, 394, 395, 397, 400, 402, 404, 407, 408, 409, 410, 411, 412, 419, 424, 425, 426, 427, 428, 429, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 487, 488, 489, 491, 497, 500, 501, 503, 508, 509, 510, 512, 513, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566], "20": [16, 38, 83, 87, 89, 90, 101, 104, 108, 109, 148, 149, 154, 156, 158, 167, 187, 188, 190, 196, 199, 200, 280, 295, 369, 372, 373, 374, 376, 381, 383, 386, 388, 393, 430, 436, 437, 438, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 465, 466, 468, 470, 471, 473, 474, 476, 478, 481, 487, 488, 489, 491, 510, 512, 513, 514, 520, 521, 522, 525, 526, 535, 538, 543, 549, 564], "200": [52, 87, 90, 131, 198, 392, 420, 442, 443, 446, 452, 456, 458, 466, 471, 474, 489, 564], "2000": [88, 101, 104, 108, 109, 125, 225, 229, 231, 233, 248, 254, 408, 454, 455, 456, 470, 479, 489, 562], "2000000": 450, "20000000000000004": 445, "20009124": 469, "2000apj": 271, "2000e": 474, "2001": [93, 408, 446, 562], "2002": [87, 90, 286, 459], "2003": [287, 459], "2003mnra": 287, "2004": [86, 93, 459, 481], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 562], "200503": 437, "2005a": 466, "2006": [31, 33, 383, 446, 453, 461], "200638": 489, "2006a": 271, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 116], "2007": [386, 562], "20072608": 469, "2008": [38, 86, 220, 268, 438, 479, 491, 529], "2008aj": 38, "2009": [131, 289, 409, 446, 562], "20097159": 469, "2009851": 469, "20099855": 469, "201": [52, 436, 471, 528], "2010": [125, 147, 220, 237, 293, 369, 529, 562, 567], "2010a": [237, 271], "2010mnra": 147, "2011": [220, 438, 491, 529], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [90, 409, 562], "2013": [100, 132, 388, 394, 398, 407, 459], "20136": [82, 296, 481], "20137": [296, 481], "2013aph": 270, "2013apj": 60, "2014": [138, 406, 491], "2015": [52, 86, 382, 385, 406, 479], "20151": 296, "2015apj": [61, 124], "2015jheap": 271, "2016": [26, 382, 385, 406, 409, 459, 470], "2016apj": 58, "2017": [220, 373, 375, 385, 388, 404, 406, 409, 452, 478, 529], "2017apj": [59, 62], "2017icrc": 478, "2018": [52, 373, 374, 375, 376, 377, 378, 379, 383, 385, 387, 388, 406, 433, 478, 481, 562], "2018a": 124, "2019": [375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 406, 428, 429, 453, 478, 562], "202": [452, 462], "2020": [197, 377, 388, 389, 390, 391, 392, 406, 453, 454, 462, 471, 551, 552, 553], "2021": [89, 220, 390, 392, 406, 433, 474, 529], "2021345e": 469, "2022": [393, 394, 406, 409, 480], "2023": [380, 395, 396, 406, 409], "2023arxiv230517030c": 57, "2024": [103, 122, 405, 406, 443, 474, 487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "2024e": 488, "2026": [380, 409], "2028": 409, "2030": [380, 409], "2031": 409, "20326": [295, 439], "20327": [295, 439], "2033": 409, "20339": 295, "2034": 409, "20343": 295, "20344": 295, "20345": 295, "20346": 295, "20349": 439, "2035": [121, 123, 409], "20350": 439, "2036": [121, 123], "2037": 409, "20372": 478, "20376100103195": 462, "2038": 409, "2039": 409, "20396": 439, "20397": 439, "204": 136, "2040469e": 469, "2041222e": 469, "20421": 439, "20422": 439, "2045": 380, "2046": 409, "2049": [409, 466, 489], "205": [420, 436, 452, 471, 549], "2050": 409, "20508075688775": 466, "2051": 409, "20517": 439, "20518": 439, "20519": 439, "205192": 466, "20521": 439, "2053315944536949e": 478, "205357": 466, "2054": 409, "20559": 489, "2058705e": 469, "206": [436, 446, 466, 477], "2061": 466, "2062580e": 469, "2064": 409, "2064335": 96, "2065": 409, "2066": 409, "2068682e": 469, "2069": 409, "207": [436, 452, 456, 465, 473, 477], "2071": [380, 409], "2075": 396, "207520865": 461, "207521465": 461, "2076": 409, "2077": 409, "2079930e": 469, "208": [60, 436, 549], "2085": 409, "2089": [382, 411], "20898": 439, "20899": 439, "209": 452, "20900": 439, "2093": 409, "2095": 452, "2097": [409, 437, 445, 447, 450, 452, 458, 462, 478], "2097e": 442, "2098": 409, "209e": 462, "20deg": [454, 455], "20e": 469, "20th": 394, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 125, 142, 371, 372, 416, 422, 431, 437, 438, 442, 445, 446, 448, 452, 461, 465, 466, 469, 471, 489, 490, 516, 564], "210": [420, 466], "2103": 466, "2104": 410, "2104353e": 469, "2106": 410, "2108": 410, "211": [466, 467], "2111": 410, "2112": [410, 488], "2114": 410, "2115": 410, "211770556360534": 463, "2118": 410, "2119": 410, "211e": 466, "212": [67, 420, 442, 466], "2121": 410, "2121164e": 469, "2123": 410, "21236e": 437, "2124": 410, "2126": 410, "2128": 410, "2129": [382, 411], "213": [436, 444, 528], "2130": 410, "2131": [410, 466], "2132": 410, "21325": 479, "2133": 410, "2136": [381, 412], "2139": 410, "214": [440, 446], "2140": 410, "2141": 410, "2142": 410, "2145": 410, "2146": 410, "21464892": 489, "215": [67, 420, 434, 466], "21500000000003": 523, "2151": 410, "2152": 410, "21525376976022406": 453, "2153": [410, 466], "2154": [410, 466], "2155": [414, 438, 459, 461, 462, 466, 475, 489, 529], "215686274509824": 456, "2157": 410, "2159e": 100, "215e": 466, "216": [232, 442, 443, 471, 473, 558], "2160": 410, "2162670e": 469, "2163": 410, "2164425e": 469, "2166": 410, "2169": 410, "217": [442, 466], "2171": 410, "21731921e": 471, "21733761e": 471, "21735587e": 471, "218": [61, 124], "2190": 386, "2192": 411, "21t19": 93, "21t20": 93, "22": [67, 83, 85, 88, 101, 104, 108, 109, 131, 162, 167, 170, 185, 186, 195, 198, 372, 406, 419, 442, 443, 444, 445, 446, 451, 460, 462, 466, 467, 470, 471, 472, 480, 481, 482, 487, 488, 489, 500, 507, 510, 512, 513, 516], "220": [450, 466, 473, 564, 565], "2200": 411, "2201": [65, 260, 466, 489, 546], "2202e": 489, "2204": 411, "2206": 411, "220e": 466, "221": [382, 420, 442], "22149": 446, "2217": 411, "2217412e": 469, "2218": [385, 412], "2219": [384, 412], "222": [58, 436, 466, 473, 487, 490], "2221": 466, "22245374e": 123, "2227134679628": 462, "22271346796282": 462, "22271346796283": 462, "2229": [381, 411], "223": 473, "2230": 411, "2231": 466, "2235": 411, "2237": [411, 489], "2238": 411, "2239": 411, "224": [436, 549], "2240": 411, "2243": 411, "2244": 411, "224436": 489, "225": [95, 295, 296, 392, 420, 466], "2250": 411, "22500": 448, "2254": 411, "2255": [386, 475], "225575051666": 466, "2255890": [461, 475], "2257": 411, "2259": 411, "226": [436, 452, 479, 528], "22608": 467, "2262": 411, "22635140877790516": 468, "2264": [380, 411], "22646133647326874": 468, "2264827111476982": 468, "22648881839710966": 468, "2265163003209506": 468, "22662622801631419": 468, "227": 442, "2270": 385, "2272": 411, "2274": [387, 412, 437], "2276": 411, "2277": 411, "2278": 411, "2278975306934438": 468, "2279": [385, 412], "227e": 466, "228": [282, 288, 376, 382, 443, 448, 466, 470, 481], "2287": 411, "2289": 411, "229": [67, 436, 466, 549], "2290": 387, "2292": [412, 462], "2294": 411, "2296": 411, "2297": 411, "22974080e": 479, "2298": 411, "22e": 470, "22nd": 406, "23": [93, 170, 368, 372, 394, 406, 430, 439, 444, 445, 446, 462, 466, 468, 471, 473, 475, 489, 512], "230": [420, 446], "2300": 411, "2304": 386, "2305": 411, "230542e": 466, "2307": [64, 65], "2308": 412, "231": 420, "2310": 411, "231025": 543, "2313": 412, "2314": 412, "232": 62, "2320": [412, 466, 467], "2321": 412, "2323": 412, "2326": 412, "2327": [466, 473], "23273": 479, "233": 443, "2330": 412, "23306": 446, "2332": 473, "2334": 412, "2335": 412, "233721": 530, "2338": 412, "2339": [439, 466, 489], "234": [420, 463], "234132519034915": 471, "23413252": 471, "2342": 412, "2343": 412, "234359264373779": 470, "2343e": 473, "2344": 412, "2345": 412, "2346": 412, "2347": 412, "235": 420, "2350": 413, "2351": 412, "23523": [140, 167, 404, 442, 443, 451, 460, 467, 468, 470, 481, 487, 488, 500, 503, 563], "23526": [140, 442, 443, 451, 460, 467, 468, 470, 481, 487, 488, 563], "235294117647083": 456, "2354": 412, "23559": [442, 443, 460, 467, 470, 487, 488, 510, 512, 513, 563], "2356": 412, "2357": 473, "2358": 412, "2359": 412, "23592": [442, 443, 460, 467, 470, 487, 488, 510, 512, 513, 563], "236": [420, 466], "2360": 412, "2362506e": 469, "23628": 479, "2365": 412, "2366": 412, "2367": 412, "2368": 412, "237": 437, "23734": 489, "2375": 412, "2377": 412, "2378": 412, "2379": 412, "238": [436, 528], "2381": 412, "238298": 437, "2384": 437, "2385": 412, "239": [67, 452], "23905561": 469, "239439": 489, "239557417": 86, "2399": 466, "239e": 466, "23a": [61, 124], "24": [25, 27, 52, 53, 86, 87, 90, 93, 371, 372, 385, 389, 423, 428, 436, 437, 446, 454, 457, 462, 466, 467, 471, 473, 478, 479, 487, 512, 529, 536, 545, 546, 547], "240": [101, 104, 108, 109, 120, 436, 466, 467, 501, 549], "2400": 412, "2401": 412, "2404": 412, "2405": 413, "241": 466, "2412": 412, "2414": 466, "2419": 437, "242": [436, 549], "242835": 67, "243": 442, "2431": 466, "2433": 413, "2435": 413, "244": [67, 420, 442], "2440": 466, "2441": 413, "244140625": 473, "2443672e": 469, "2444": [413, 446], "2446": [413, 473], "2448": 413, "2449": 413, "245": [420, 443], "2450": [413, 473], "245152": 452, "2454": 413, "2455": 413, "2459": 413, "246": 420, "2461": 413, "24611324074": 466, "2463": [388, 413], "2464": 413, "2465055e": 469, "2468": 413, "24685677e": 469, "247": [67, 420, 443], "2470": 413, "2471938975366008": 295, "2472": 413, "2475": 413, "2476": [413, 462], "2477": 413, "2478": 413, "2479": [413, 488], "248": 420, "2481": 413, "248122": 466, "2483": 413, "2485": 487, "2486": 413, "249": [22, 420], "2490": 413, "2491": 413, "2492": 413, "2493": 413, "2496": 413, "24968": 437, "2497": 413, "2498": 413, "2499": 413, "249965667724609": 470, "249e": 137, "24e": [466, 473], "25": [33, 52, 87, 90, 100, 136, 146, 157, 170, 282, 288, 372, 385, 392, 406, 427, 434, 437, 438, 442, 443, 446, 452, 462, 463, 466, 469, 471, 473, 489, 521, 526], "250": [471, 562], "2501": 413, "250185": 470, "2502": [413, 452], "2505": 413, "2505121": 96, "2505703": 463, "2509": 466, "251": [446, 450], "2510": 413, "251185": 489, "2511884200000000": 489, "25162e": 437, "2518": 466, "251932": 466, "252": [420, 442, 452, 466], "2520": 413, "2521": 413, "2523": 413, "2525": 413, "2528": 413, "253": [445, 473], "2535": 413, "2536": [413, 473], "2537": 473, "2538": 413, "254": 420, "2540": 413, "2546": 413, "254901960784338": 456, "25496": 489, "2551": 413, "2552": [413, 466], "2553": 413, "2555": 389, "2557": 413, "255750516626": 466, "2558": 413, "2559": 413, "256": [67, 423], "2560538e": 469, "2561": 413, "2562": 413, "2563": 413, "2564": 413, "2567": 413, "2568720263723087": 453, "257": [136, 445], "2574": 413, "25743553e": 468, "25763": 446, "257642": 466, "2579999": 478, "258": [445, 527], "2580": 413, "2585": 413, "2587": 413, "2589254117941673": 487, "259": [445, 487, 489], "2591e": [438, 466], "2594": 413, "2595": 413, "259e": 137, "25b": 17, "25e": 473, "25t_": 53, "25th": 394, "26": [19, 87, 90, 372, 406, 434, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 491, 539, 557], "260": [423, 489], "2604": 413, "2604404372873": 462, "2609": 473, "261": [423, 489], "2610e": 450, "2616": 413, "26173": 446, "2619": 413, "262": [423, 446, 473, 489], "2620": 413, "2625818241224747": 468, "2627": 413, "262728": 478, "26272868097919794": 475, "2628525e": 469, "263": [136, 137, 446, 473], "2634e": 451, "2635": 413, "2635108e": 469, "2637": 413, "26392": 448, "2639554729438709": 475, "264": [136, 423, 452], "2645": 413, "264516271942103": 487, "2648150": 96, "2649e": 468, "265": [32, 137, 382, 437, 446, 452, 473, 489], "2651": 413, "2654": 413, "266": [136, 137, 382, 436, 445, 446, 452, 454, 458, 471, 473, 477, 489], "2660": 413, "266192": 437, "26665050077722524": 475, "2667": 414, "267": [67, 137, 445, 446, 452, 473, 478], "2672": 414, "2673": 414, "26739753": 96, "2674": 414, "268": [394, 445, 446, 452, 466, 473, 489], "2681": 414, "2684": 414, "2685": 414, "268663733018811": 475, "2687": 414, "26883694": 489, "26887783978974283": 475, "269": 489, "2692": 414, "269385": 466, "2695": 452, "269627": 478, "2697": 414, "2699878e": 469, "26a": [39, 40, 50, 52, 53, 124, 237, 271, 280, 466], "26e": [466, 473], "26th": 390, "27": [137, 374, 434, 442, 446, 452, 467, 489, 564], "270": [439, 446, 466, 473, 489], "2703": 414, "2705": 414, "27057337686547633": 475, "2707": 414, "2708": 237, "2709": 414, "27093776e": 469, "271": [442, 445, 446, 489], "2711": 414, "2712": 414, "2713": 414, "2715": 414, "271777777777796": 439, "27177778": 93, "2718": 414, "2719": 414, "271e": 446, "272": [445, 446, 450, 466, 473], "2720": [389, 415], "27209": 489, "2723": 414, "2725": 414, "2726": 414, "2726e": 489, "2727": 414, "2727693": 478, "2727e": 442, "2728": 414, "2729": 414, "273": [83, 423, 440, 446, 489], "2730": 414, "2731": 414, "2733": 414, "2734": 123, "2735": 414, "2737": 414, "2738": 414, "2739": 414, "274": 471, "27409496735322464": 475, "2741": 414, "2742": 414, "2743": 414, "274509803921596": 456, "2746": 414, "2747": 414, "27473": 452, "274904": 551, "275": [445, 466, 557], "2750": 414, "2751": 414, "2752": 414, "2753": 414, "2755": 414, "2756": 414, "2759": 415, "276": 423, "2761": 415, "2762": 415, "2764": 415, "2765": 415, "2767": 415, "2768": 415, "277": 445, "2771": 415, "2772": 415, "27727": 473, "2775": 415, "277522957147003": 453, "2776": 415, "2777": 415, "2777074437073429": 475, "2778": 415, "2779": 415, "278": [27, 423, 445, 458, 466, 473], "2781": 415, "2782": 415, "2783": 415, "2784": 415, "2785": 415, "2785e": 442, "2787": 415, "2788": 415, "2789": 415, "279": 423, "2790": 415, "2791": 415, "2792": 415, "2793": 415, "2794": 415, "2796": 415, "2797": 415, "2798": 415, "2799": 415, "27e": 466, "27t20": 89, "28": [21, 24, 67, 93, 136, 137, 377, 406, 436, 440, 442, 443, 444, 445, 446, 452, 454, 458, 465, 466, 470, 471, 473, 477, 478, 489], "280": [67, 423, 442, 445, 471], "2800": [454, 473, 489], "2801": 415, "2802": 415, "2803": 415, "2804": 415, "2805": 415, "2808": 415, "2809": 415, "281": [445, 466], "2810": 415, "2811": 415, "28118133544922": 466, "2812": 415, "28120079": 466, "2815": 415, "2816": [415, 473], "2817": 415, "2818": 415, "2818047723094509": 475, "282": [136, 137], "2820": 415, "2822": [415, 473], "2823": 415, "2825456e": 469, "2827": 415, "2827988e": 469, "2828": 415, "2829": 415, "282e": 466, "283": [423, 445], "2832": 415, "283218": 437, "283487": 466, "2837": 415, "28382603": 469, "2838398": 478, "28385358839966657": 475, "2839": 415, "284": [445, 466, 567], "2841": 415, "2842": 415, "28429": 452, "2845": 415, "2846": [415, 452], "285": [423, 442, 445], "2852": 473, "28551": 137, "285f": [83, 88], "286": [423, 445], "2861432787940619": 475, "286e": 466, "287": [52, 53], "2872": 416, "28720322": 96, "2874": [416, 489], "28755283551095173": 475, "2878662980210884": 296, "287e": 446, "288": [123, 442], "2880470e": 469, "288137": 526, "2885": 416, "288e": 440, "289": [423, 445], "28905": 479, "2891": 416, "28958": 446, "2896": 416, "2897": 416, "28e": [101, 440, 450, 452, 467], "29": [67, 137, 266, 383, 393, 406, 434, 437, 440, 443, 445, 446, 452, 458, 461, 462, 466, 471, 473, 474, 478, 489], "290": [424, 442, 445, 453], "2900": 473, "2903": [416, 473], "2903e": 444, "2907": 416, "291": [423, 436, 549], "2912": 416, "29170324": 467, "291e": [458, 489], "2922477": 96, "2924": 416, "2927": 416, "2929": 416, "293": 445, "2930": 466, "2931": 416, "2932": 416, "29355238360800506": 475, "2938": 416, "2939": 416, "293e": 446, "294": [436, 549], "2942": 390, "2943": 416, "2944": [391, 416], "2945": 416, "2947": 416, "2948": 416, "295": 423, "2950": 416, "2951": 416, "2953": 452, "2956": 416, "29585273e": 479, "2959": 473, "295e": [446, 466], "296": [423, 443], "2965": 416, "2966": 416, "2967": 416, "297": 437, "2971e": 466, "2974": 416, "2976": 416, "2978e": 438, "298": [445, 452, 466], "2981": 416, "2984": 416, "29882214027996945": 475, "299": [423, 445, 458, 466], "2990": 416, "299041": 487, "2991": 416, "2992": 416, "2993": 416, "2995484265169": 459, "2996": 489, "2998": 416, "2999": [416, 466], "299940468335294": 452, "299995937905366": 452, "299e": 466, "299t": 53, "29t20": 461, "29th": 406, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 167, 177, 178, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 227, 374, 379, 384, 387, 388, 389, 400, 408, 414, 427, 428, 429, 436, 446, 448, 449, 452, 471, 472, 489, 499, 502, 513, 514, 515, 527], "2degx2deg": 454, "2e": [192, 437, 439, 440, 454, 455, 461, 466, 468, 473], "2e3": [192, 471], "2e6": 479, "2f": [357, 437, 443, 475, 488, 565], "2fhl": [58, 71, 413, 425, 426, 466, 489, 498], "2hwc": [59, 72, 413, 419, 427, 466, 498], "2k": [101, 108], "2m": [237, 271], "2nd": [60, 393], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 466], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 80, 83, 85, 86, 87, 90, 93, 95, 101, 103, 104, 108, 109, 110, 114, 116, 122, 123, 137, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 170, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 209, 211, 220, 227, 230, 238, 260, 266, 268, 270, 271, 279, 280, 281, 286, 295, 296, 317, 326, 345, 356, 361, 363, 365, 368, 369, 371, 372, 374, 379, 380, 382, 383, 384, 385, 387, 392, 393, 394, 399, 404, 405, 407, 408, 409, 411, 412, 417, 419, 421, 424, 425, 426, 427, 428, 429, 430, 432, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 490, 491, 493, 496, 497, 500, 501, 505, 507, 509, 510, 512, 513, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 564, 565], "30": [24, 52, 67, 83, 95, 101, 111, 136, 147, 186, 295, 296, 375, 376, 381, 388, 395, 406, 408, 436, 437, 438, 439, 441, 442, 443, 446, 447, 452, 455, 458, 461, 462, 463, 466, 467, 468, 471, 473, 474, 475, 476, 478, 479, 489, 501, 507, 512, 513, 520, 521, 535, 538, 539, 540, 543], "300": [74, 87, 90, 280, 445, 447, 451, 454, 455, 458, 462, 466, 479], "3000": [378, 466, 515], "30000": 466, "3000000": 548, "30000000": 548, "3000020211954284": 452, "3000e": 438, "3001": 416, "30015e": 437, "3002": 416, "3003": 473, "300451666228708": 487, "3004625872247901": 451, "3005": 416, "3006": 489, "3006942": 96, "3007": 416, "301": [423, 436, 445, 549], "3011061699260256": 475, "3012": 416, "3013": 466, "301668796295": 466, "302": [445, 451, 462], "3020791585772495": 295, "30287": 446, "3028e": 473, "302e": 466, "303": [442, 445, 466], "3030": 416, "3032": 416, "3034": 466, "3035": 416, "3035897658854436": 453, "3037": 416, "3037632e": 469, "3038": [416, 489], "3039": 416, "304": [438, 459, 461, 462, 466, 475, 489, 529], "3041": 416, "3042": 416, "3043": 473, "3045": 416, "3046875": [467, 473], "3049664466089965": 296, "304_steadi": 438, "305": [67, 445], "3051": 416, "3051827": 96, "3051852": 96, "3051856": 96, "3052": 416, "3053": 416, "30535345877453707": 475, "3054": 416, "30561": 137, "3058": 416, "3058422e": 469, "305e": 466, "306": [423, 564], "3060": 416, "306196370000000": 489, "3063": 416, "3069": 416, "306e": 466, "307": 445, "3070": 416, "3071": 466, "3072": 416, "3074": 416, "3075": 392, "3076": 416, "307e": 466, "308": [445, 452, 523], "3080": 416, "3081": 416, "3083": 416, "3085": 416, "3086": 416, "3088": 416, "3089": 416, "3091": 416, "3092": 416, "30997": 489, "30a": 271, "30d00m00": 395, "30e": [438, 448, 469, 473], "30th": 380, "31": [136, 137, 377, 378, 391, 392, 404, 431, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "310": 443, "3100": 416, "3106": 416, "310610": 474, "31067517": 466, "3107": [466, 489], "311": [523, 565], "3110": 417, "3111": 417, "3112": 417, "3113": 417, "31139074e": 468, "3114": 417, "311489174710791e": 489, "3116": 417, "3117988e": 469, "31186857659616535": 475, "3119611261122878": 475, "312": [423, 462], "3122": 418, "3123": 418, "3124": 418, "3125": 418, "3126": 418, "3127": 418, "3129": 418, "312e": 446, "313": 445, "3130": 418, "3131": [419, 473], "3135914081482271": 475, "3136": 419, "313714614138": 467, "3138": 419, "314": 428, "3140": 419, "3141": 419, "314440": 546, "3145": 419, "3148": 419, "315": 466, "3152": 419, "3153": 419, "3155": 419, "3158": 419, "316": [436, 445, 468, 477, 479, 480], "3162": 419, "316227": 466, "316227766016838": 470, "3165": 419, "3168": 419, "3169": 419, "317": [423, 436, 445, 528], "3173": 419, "3178": 419, "317a": 271, "317e": [438, 466], "318": 423, "3180": 419, "3182": 419, "31834": 137, "3185": 419, "319": [424, 479], "3191": 419, "3195": 489, "3197": 419, "319725": 478, "3199": 419, "32": [83, 136, 186, 442, 446, 448, 449, 450, 467, 470, 471, 489], "320": [101, 104, 108, 109, 120, 466, 467, 473, 501], "3202": 419, "3207": 419, "3208": 419, "32095": 489, "321": 456, "3211": 419, "3216": 419, "3217": 419, "3219": 419, "322": 445, "3222": 419, "3228": 419, "323": [436, 443, 445, 452, 549], "3230": 419, "3232943": 336, "3233356": 336, "32377509405904137": 95, "323779": 286, "3237948931463171": 475, "3238": 419, "3241": 419, "3243": 419, "324424288934": 467, "3246": 419, "32465247": 474, "3254": 419, "3257": 419, "3258": 419, "326": [423, 436, 549], "3262": 419, "32684": 489, "32684833": 478, "327": 452, "3272": 419, "3276": 419, "3277": 419, "3278": 419, "3279": 419, "3279955e": 469, "328": 452, "3281": 419, "3283": 419, "3284": 419, "32843": 489, "32847": 437, "3285": 419, "329": [95, 295, 296, 461, 466, 475, 503], "3293": 419, "3299": 466, "329e": [442, 466], "33": [443, 459, 465, 467, 468, 471, 489, 503], "330": [424, 445, 473], "3301": 419, "33013e": 437, "3302": 419, "3302565e": 469, "3303": 419, "330376": 67, "3304": 419, "3305": 419, "330505": 478, "33055e": 437, "3306": 419, "3307": 419, "3308": 419, "3309": 419, "3310": 419, "3314": 419, "33164865722698683": 475, "3319": 419, "3319831545301117": 295, "332": [67, 424], "3320": 419, "3323": [419, 467], "332525": 466, "3328": 419, "332e": 452, "332f": [30, 31, 32, 33], "3330487": 96, "3331": 489, "3331761": 96, "3333": 419, "33333333": 368, "3333333333333344": 456, "3335": 419, "33368e": 437, "3337": 419, "3338": 419, "334": [123, 479], "3342": 419, "3343": 419, "3346": 419, "3347": 419, "33484": 437, "3349": 419, "334e": 466, "335": 424, "3353": 419, "3357": 419, "3358": 419, "335e": 440, "336": [456, 466], "3363": 419, "3364130e": 469, "336444e": 466, "336606": 437, "3368855e": 469, "3369": 419, "337": [424, 445], "3374": 419, "3377": 419, "33787": [95, 475], "33788": [95, 475], "33789": [95, 475], "3379": 419, "33790": 475, "33791": 475, "33792": 475, "33793": 475, "33794": 475, "33795": 475, "33796": 475, "33797": 475, "33798": 475, "33799": 475, "338": [424, 466], "33800": 475, "33800122": 96, "33801": 475, "3380311e": 469, "3381": 419, "339": [424, 442, 456], "3390": 419, "3392": 419, "3393": 419, "339342": 555, "3395": 419, "3396e": 450, "3397": 419, "339835555384604": 475, "3398360": 469, "33983991887701287": 95, "3399": 419, "33e": 463, "34": [52, 53, 67, 407, 436, 437, 442, 443, 452, 461, 464, 467, 471, 473, 489], "34005": 437, "3402": 419, "3403": 419, "340391": 489, "3404": 419, "34047": 437, "3406": 419, "3409": [93, 419], "341": 437, "3413": 419, "3416": 419, "3418": 419, "342": 424, "3420": 419, "3423": 419, "342415": 523, "3426": 419, "3428": 419, "343": 462, "3434": 419, "3438": 419, "3439": 419, "343e": 440, "344": 466, "344238": 489, "3443842": 478, "3445": 419, "3446": 419, "3447": 419, "3449": 419, "344e": 67, "345": [287, 437, 473], "3453": 419, "3454": 419, "345692": 489, "3458": 419, "346": 473, "34613004113985": 453, "346488e": 466, "3466": 419, "346644": 520, "3468": 419, "347": [424, 439], "3471": 419, "3474": 419, "347e": 446, "348": [36, 37, 424, 442], "3480": 419, "3481e": 450, "3485e": 488, "3488": 419, "348e": [67, 466], "3491": 419, "3493": 136, "349530550405035": 468, "349530725254468": 468, "34953073943366": 468, "34953075819191": 468, "34953077463306": 468, "34953079334042": 468, "349530807529028": 468, "349535814693404": 468, "349536723056637": 468, "349537158300407": 468, "349537804239922": 468, "34953807814367": 468, "34953910575007": 468, "34953932636892": 468, "349542158419318": 468, "349559366703698": 468, "34971209244579": 468, "349724940685938": 468, "3499075e": 469, "34e": [466, 473], "35": [67, 385, 392, 404, 442, 443, 461, 466, 468, 476, 478], "350": [456, 463], "3501": 446, "350105": 452, "3502": 466, "35030398537787": 468, "3503706026275275": 475, "3504": 489, "35052105086856": 468, "350556388466543": 468, "350d": 456, "351": [424, 466, 489], "3515": 419, "352": [424, 466], "3521": 439, "3523": 419, "3529": 419, "3529411764705888": 456, "353": [24, 424, 489], "3535": 421, "3536": 437, "353e": 452, "354": [456, 477], "3544": 419, "35569283": 469, "355804": 489, "3559": 419, "356": [436, 448, 449, 489], "3561": 419, "356263170943497e": 487, "3568": 419, "357": [436, 449, 466, 489], "3570e": 447, "35722435185": 466, "3576e": 439, "357e": 446, "358": [452, 462, 466, 489], "3584": 419, "3585": 452, "359": [424, 452, 466, 489], "3590188e": 469, "3592": 419, "3599": 454, "359e": 489, "36": [67, 86, 142, 315, 452, 454, 466, 467, 469, 489], "360": [382, 471, 491], "3600": [445, 454, 455, 471], "36014": 450, "36073833513766157": 475, "361": [67, 424], "3619e": 488, "36228879": 489, "36273": 489, "363472509034498": 475, "3639946": 463, "364": 424, "3659253e": 469, "366": [464, 488], "36669663417038234": 475, "3669": 421, "367": [424, 456, 462, 473], "3674884": 466, "368": 116, "36834038301420274": 475, "368346217294295": 95, "3684": 421, "3689322e": 469, "369": 424, "3690": 489, "3699": 421, "36e": [465, 466], "37": [437, 438, 443, 445, 468, 479, 565], "370": [456, 466, 473], "37058": 137, "371": [424, 436, 443, 490], "3710784e": 469, "3712": 421, "3713": 421, "3715810e": 469, "3718745": 96, "372": [35, 123, 489], "3720": 421, "3722": 421, "3725490196078436": 456, "3728": 421, "373": [442, 452], "3733": 421, "3739292e": 469, "374": [454, 456], "3740": 421, "37455141": 489, "3748": 421, "375": [424, 471], "3750": 452, "37506": 489, "37517": 446, "3752": 421, "3759377929871826": 475, "376": 67, "3760": 421, "3761": 421, "3765": 437, "377": 462, "3777": 421, "37773": 446, "3779": 489, "378": [436, 441, 470, 477], "3783": 421, "3784": 136, "379": [424, 442], "3792": 473, "3796": 421, "3797": 421, "38": [22, 67, 437, 439, 466, 471, 473, 489, 548], "3802": 421, "3804": 421, "3806": 421, "381": 473, "3810": 421, "3812": [466, 489], "3812120e": 469, "3812160e": 469, "38143003": 96, "3817": 421, "3829": 489, "382e": 442, "383": [67, 424, 466, 471], "3833": 421, "3837": 421, "383e": 67, "3842": 421, "384592": 533, "3846": 421, "3848912826152664e": 489, "3856": 421, "385e": 137, "3860": 421, "3862": 430, "387": [424, 489], "3872": 466, "3873": 421, "3874": 421, "3876": 421, "387834": 489, "388": 527, "388405": 489, "3885947175689592": 475, "3886270e": 469, "3887": 421, "389": 373, "3892": 421, "3895": 421, "3898": 421, "389e": 489, "39": [17, 18, 21, 22, 24, 25, 27, 59, 465, 466, 471, 479, 527, 548], "390": 419, "3904": 421, "39042": 86, "3905": 421, "3906": 421, "391": [436, 457, 466], "3915": 421, "39151": 448, "3918": 421, "3919677734375": 442, "392": [424, 443], "392156862745098": 456, "39224": 446, "3925": 430, "393": [201, 202], "3933": 421, "3935": 439, "3936": 421, "394": [424, 442], "3941": 421, "3945": [439, 466], "3947637541758": 462, "3948": 422, "395": 424, "3950": [393, 430], "395004": 489, "3956": 430, "3959": 422, "396": 424, "3962942e": 469, "3966": 422, "397": 442, "3970": 394, "39728": 489, "3975": 422, "3979": [422, 563], "397918129147546": [404, 563], "39791813": [404, 563], "398": [424, 450], "3981": 489, "3981075200000000": 489, "3983": 422, "3986": 422, "3987": 422, "3988": 422, "398e": 466, "3990": 422, "39e": 466, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 142, 148, 155, 156, 158, 167, 274, 276, 374, 377, 378, 379, 383, 384, 387, 388, 389, 400, 408, 409, 410, 412, 413, 414, 415, 426, 427, 428, 436, 437, 438, 440, 442, 443, 446, 447, 448, 452, 453, 454, 455, 456, 457, 461, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 487, 488, 499, 501, 502, 503, 508, 510, 511, 515, 560, 562], "3d33m15": 67, "3dataset": 451, "3e": [20, 123, 129, 452, 455, 458, 460, 463, 466, 473], "3e4": 479, "3e5": 479, "3e6": 548, "3e7": 548, "3f": [123, 453, 564, 565], "3fgl": [61, 67, 74, 222, 259, 391, 420, 423, 425, 426, 427, 436, 440, 466, 474, 489, 498, 517, 549], "3fgl_name": 71, "3fhl": [62, 75, 86, 125, 127, 131, 277, 388, 426, 427, 440, 446, 454, 456, 466, 471, 472, 473, 474, 479, 489, 498, 500], "3fhl_data_fermi": 451, "3fhl_dataset": [277, 451, 472], "3fhl_model": [277, 451, 473], "3g": [465, 466], "3hwc": [63, 76, 419, 430, 466, 498], "3ml": [386, 479], "3pc": [64, 69, 77, 466], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 90, 100, 101, 104, 108, 109, 113, 115, 126, 131, 137, 139, 144, 147, 155, 167, 170, 186, 187, 188, 189, 190, 191, 196, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 277, 278, 315, 355, 368, 369, 371, 372, 380, 382, 385, 388, 392, 393, 404, 407, 416, 418, 419, 420, 423, 425, 426, 429, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 487, 488, 489, 491, 496, 497, 498, 512, 515, 516, 520, 521, 524, 529, 534, 547, 548, 556, 562, 563, 564, 565, 566], "40": [59, 108, 109, 375, 420, 439, 440, 442, 443, 445, 450, 452, 461, 462, 471, 474, 478, 489, 512, 535, 538, 543, 564], "400": [131, 447, 452, 456, 466, 471, 489, 557], "4000": 430, "40000": [167, 488], "400023002295445": 487, "400056": 437, "40050506591797": 466, "40051": 448, "40051035": 466, "40071076": 96, "400x200": 456, "401": [442, 443], "40112": 489, "4013": 430, "4014": 430, "4015": 430, "4017": 430, "4018": 430, "402": [147, 443], "4022": 430, "40235": 450, "4024": 430, "4025": 430, "4026": 430, "402712": 466, "403": [424, 436, 452, 473, 528], "4035": 489, "4037": 430, "404": 293, "4043": 430, "404314": 536, "4044": 430, "40481": 450, "405": 376, "4051": 430, "40525": 450, "4054": 430, "4058": 430, "406": 489, "40611": 489, "4067": 430, "407": 466, "4071": 430, "4073": 430, "4073799600000000": 489, "4075": 430, "4076": 430, "4079": 430, "408": [442, 471], "4080": 430, "4080942e": 469, "40822469e": 474, "4083": 430, "4084": 430, "4088": 430, "4089": 430, "40919": 446, "4093": 430, "409416": 489, "4095": 430, "4098": 430, "40a": 59, "41": [67, 86, 93, 382, 466, 467, 471, 479, 489], "410": 456, "41009347393684": 467, "4103": 430, "4105": 430, "4106": 430, "4107": 430, "4108": 430, "411": 489, "4110e": 466, "4112": [123, 430], "4113": 430, "4115": 430, "41176470588239": 456, "4119": 430, "411e": 440, "4120719e": 469, "412165": 452, "412779907405": 466, "413": 452, "414": [424, 450], "41405230487": 453, "41415047": 96, "4142135623730951": 116, "41449": 446, "4144e": 450, "415": [424, 539], "4155": [466, 489], "41584196": 459, "416": [67, 466, 470], "417": 466, "418007850646973": 404, "41866": 479, "419": 473, "4191": 433, "41924": 136, "4198250e": 469, "41995": 446, "419e": 466, "41e19": [19, 20], "42": [25, 27, 93, 147, 336, 382, 445, 452, 466, 469, 470, 471, 475, 478, 516, 519], "420": 442, "42050348": 467, "4208": 433, "4209": 433, "421": [424, 456, 489, 562], "4210": 433, "4212": 433, "4212028e": 469, "4213": 433, "4215": 433, "4216": 433, "4217": 434, "4219": 433, "422": [39, 40, 436, 464], "4220": 450, "4221": 431, "4225498e": 469, "4225631e": 469, "42267": 452, "4226731": 452, "423": 442, "4231": [431, 433], "4236": 446, "42361": 446, "42399798": 452, "423e": 123, "42400": 452, "4242": 433, "4243": 433, "4245": 433, "42463": 479, "424649": 467, "42474": 489, "424e": 446, "425": 489, "4252": 433, "426": 466, "4264": 433, "4268": 431, "427": 443, "4275": [431, 433], "4277": 433, "4280": 433, "4281": 466, "4282": 433, "4288": 433, "429": 442, "4294": 433, "42e": [468, 473], "43": [270, 336, 382, 443, 452, 462, 467, 471, 489, 516], "430": [466, 479], "43000": [52, 53], "4301": [431, 433], "4303606e": 469, "4305": 433, "430527": 541, "431": [132, 376, 456, 467], "43113": 437, "43137254901962": 456, "4313847458879893": 475, "4319": 489, "43197": 446, "4324": [431, 433], "4326": 433, "432878": 466, "432e": 466, "433": 446, "4336": [431, 433], "43366": 557, "4338e": 438, "434": 466, "43416595": 463, "4344": 431, "4346": 433, "435": 424, "4350": 433, "4351637481047363": 475, "4352": 433, "4359": [431, 433], "435l": 466, "436": [424, 442], "4360750e": 469, "4369": 433, "437": [466, 473], "4370": 433, "4373240195300975": 475, "438": 473, "4380": [432, 433], "4381": [396, 434], "4382": 432, "439": 442, "4393": [432, 433], "439306769641669e": 487, "4394": 432, "4395": 433, "4397": [432, 433], "439e": 466, "43e": 473, "44": [21, 50, 86, 336, 438, 445, 461, 462, 463, 471], "4402": 433, "44055555555555603": 93, "4406": 433, "4408": 434, "4409": 433, "441121556505": 554, "44112434873": 555, "44112807576": 556, "4412": [432, 433], "4417": 433, "4418": 433, "4420073e": 469, "4420222e": 469, "4428": 433, "4428634e": 469, "442e": 446, "443": 442, "4430": 433, "44318": 467, "4432": 434, "4435": [432, 433], "4444": 433, "445": 446, "4450": 489, "44528685": 489, "4453": [432, 433], "44573": 93, "4458": 433, "4459": 433, "446": [473, 565], "4466": [433, 450], "4466832000000000": 489, "447": 424, "44742": 489, "44749e": 437, "447552": 437, "447e": [452, 466], "447l": 17, "448": 456, "4480056e": 469, "44802852": 489, "4481": 466, "4485": 434, "4486": [432, 433], "448e": [137, 451], "449": [436, 441], "4491": [395, 434], "4495": 433, "4498": 136, "44e": 404, "45": [51, 54, 445, 451, 462, 463, 467, 471, 472, 474, 491, 516, 521, 522], "450": [443, 473], "4500": [432, 433], "4501": 434, "4504": 433, "4506": 433, "4508": 433, "4509803921569": 456, "451": 442, "4510": [433, 450, 489], "4515": 465, "4517490659800822": 460, "4520": 432, "4521": 433, "4524": 432, "453": [438, 473], "454": 442, "4540": 434, "4545": 433, "4546": 434, "455": [424, 440], "45515263080596924": 439, "4558750": 452, "455e": 67, "456": 424, "4561": 434, "45646095": 463, "4567": 434, "457": [271, 424, 473], "457251": 489, "4574": [432, 434], "4575": 93, "4578": 432, "4579e": 437, "458": [456, 466], "4584": 434, "45856": 489, "4586649826004114": 295, "459": [424, 436, 467, 473, 482], "4593": 432, "45935": 489, "4595": 434, "4599": 434, "45\u00ba": 480, "46": [53, 67, 108, 109, 382, 436, 466, 471, 477, 479], "460249999": 86, "4608": 434, "461": [424, 436, 462, 464], "4615": 434, "4618695378303528": 439, "4619": 432, "462": [424, 442], "4620": [396, 434], "4620e": 466, "46225": 446, "4628": 434, "463": 489, "4631": 432, "4635": 434, "4638": 434, "464": 458, "4642048e": 469, "4647544e": 469, "465": [442, 466, 473], "4653": 432, "4657": [432, 434], "465784": 489, "4660": 434, "4664": 434, "4668": 434, "4669": 434, "4671": 434, "46711": 446, "4677": [432, 434], "468": [463, 466], "4681": 432, "4684": 439, "468805426856864e": 52, "468e": 67, "4697": 434, "46e": [83, 447, 452], "47": [67, 462, 466, 471, 489], "4703": 434, "470588235294144": 456, "4711": 489, "4714": 434, "4721": 432, "4726": 434, "4728": 432, "4729": 434, "473": [424, 442], "4732": 446, "4738": 434, "474": 424, "4740": 434, "4741": 434, "474e": 466, "475": [424, 473], "4750": 434, "4753": [432, 434], "475468": 437, "4755": 432, "4759": 434, "4770": 434, "4772": 432, "47797": 446, "477e": 466, "478": 424, "47802": 475, "47803": 475, "47804": 475, "47827": 475, "47828": 475, "47829": [82, 475, 481], "4783": 434, "4785": 434, "479": [436, 441], "47e": 466, "48": [33, 167, 407, 450, 451, 471, 473, 479], "480": [439, 466, 473], "4802": 434, "4805": 434, "480554966147": 450, "48068": 446, "4808": 434, "480e": 466, "481": [373, 424], "4810": 434, "4814": [434, 489], "4817": 434, "4819444e": 469, "482": 437, "48215685": 96, "4822": 434, "48248": 466, "4825": [466, 489], "48250480010309": 462, "4828": 434, "4829": 434, "4834": 434, "4834488e": 469, "4835": 434, "4837": 434, "484": 424, "48442": 266, "4845": 434, "4847": 434, "4848653": 466, "4849": [434, 466, 489], "484e": 137, "485": 424, "4850": 434, "4851": 434, "4854": 434, "485p": [36, 37], "486": 442, "48602294921875": 439, "4860820095741": 462, "487": [424, 487], "4875723e": 469, "4876": 432, "4879": 434, "4881": [246, 247], "4886": 434, "48871": 437, "4888969467051004e": 487, "488z": 27, "489e": 466, "48e": [466, 473, 488], "49": [53, 446, 450, 466, 473, 479, 487, 515], "490": 25, "4902": 434, "4904": 434, "4904078e": 469, "49078e": 437, "4913": 432, "49152": 479, "4917": 434, "493": [25, 442], "4930435940405": 450, "4933657e": 469, "4936": [432, 434], "493670": 474, "4937": [432, 434], "494": [436, 484], "4940": 434, "49417615": 86, "4942": 434, "49447596": 448, "4958277": 96, "496021": 478, "4963": 489, "4966": 489, "4968236e": 469, "4970": 434, "4971": 434, "4971704e": 469, "4973": 434, "4975": 434, "4978": 434, "498": 489, "498784": 466, "4989": 434, "498e": [466, 489], "499": [67, 436, 466, 549], "49919925926": [232, 558], "4992": 434, "4994": 434, "49972277488662115": 475, "4999833830074": 452, "4d": 387, "4e": [463, 466, 473, 548], "4f": [563, 564, 565], "4fgl": [65, 78, 260, 261, 391, 411, 413, 419, 421, 434, 436, 438, 451, 466, 472, 474, 498, 517, 549], "4th": [380, 406], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 90, 101, 102, 104, 107, 108, 109, 116, 120, 123, 124, 126, 128, 130, 136, 137, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 167, 170, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 216, 219, 220, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 271, 293, 297, 329, 358, 359, 363, 365, 368, 369, 372, 373, 375, 379, 380, 382, 383, 384, 385, 387, 391, 392, 393, 399, 404, 407, 409, 411, 412, 419, 421, 423, 424, 426, 427, 428, 432, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 491, 496, 497, 500, 507, 510, 512, 513, 514, 515, 516, 520, 521, 522, 523, 525, 529, 530, 535, 537, 538, 539, 543, 544, 551, 552, 553, 554, 556, 562, 564, 565], "50": [87, 90, 93, 110, 114, 336, 375, 395, 437, 443, 444, 450, 458, 461, 462, 463, 466, 467, 469, 471, 473, 474, 475, 478, 479, 481, 487, 488, 489, 512, 515, 523, 565], "500": [187, 188, 190, 196, 199, 200, 446, 452, 454, 455, 471, 478, 479, 489, 515, 520], "5000": [19, 20, 87, 90, 491, 515], "5000056568267741": 452, "5000e": 445, "50022222": 93, "500249": 466, "5004": 452, "5015": 434, "502": 424, "5029747": 444, "503": 424, "5030": 489, "504": 28, "5040": 434, "5044": 434, "5049": 489, "505": [67, 466, 467], "505523195905": 450, "506": 424, "5066": 466, "507": 424, "5074834": 96, "5078068": 96, "50807568877": 466, "509": 443, "509e": 466, "50e": [445, 473], "51": [52, 53, 67, 442, 450, 456, 487], "510": 424, "5106": 489, "51095676": 463, "511": [67, 424], "51179": [369, 567], "512": 442, "5126": 67, "513": [404, 471], "51312": 452, "5144": [93, 437], "514854": 478, "51544": [445, 454, 455, 458], "5162628e": 469, "518": [424, 473], "5188338e": 469, "51910": 93, "5192420e": 469, "5194769e": 469, "51948705e": 474, "52": [53, 123, 167, 437, 439, 446, 448, 450, 462, 466, 478, 481, 489], "5205": 479, "520545": 552, "52074074074": 83, "521": 425, "523": [425, 471], "5230376e": 469, "52318414": 96, "5237647004325865": 475, "52389101852": 466, "523a": [237, 271], "523b": 22, "524": [425, 466, 473], "5248": 489, "524807800000000": 489, "52587": 446, "526": 425, "52607": 489, "527": [425, 479], "528": [442, 473], "52826166": 466, "5283": [466, 489], "52839183495354": 462, "529": 425, "5292": 467, "529411764705883": 456, "5297030e": 469, "52e": [463, 487], "53": [28, 103, 122, 443, 452, 476, 520, 529], "530": 425, "53025": 93, "531": [425, 456], "53213": 452, "5324402": 96, "5326744": 96, "5326841": 96, "5326859": 96, "533": 466, "53343": [404, 460], "53344": 460, "53345": 460, "53346": 460, "53347": 460, "53348": 460, "5345275e": 469, "53482e": 437, "535": [425, 442, 466], "535058216604496": 271, "53566": 437, "53616": 237, "539": [271, 473], "5390438": 96, "539397": 466, "53945": 461, "53946": 459, "539e": 466, "53e": [404, 445], "54": [67, 442, 466, 469], "5400": 467, "5407363826067": 500, "5407363826070": 500, "541": 425, "5411": 437, "5427520e": 469, "54282": 446, "5438860e": 469, "544": [425, 466, 479], "545": [425, 442], "54566271": 564, "545y": [39, 40], "546": 425, "5461745": 96, "54676837e": 468, "54682": [446, 466, 479, 489], "547": [425, 437, 466], "54721e": 437, "5477": 466, "54772": 466, "54892": 446, "548e": 466, "549": 425, "549019607843138": 456, "54e": 473, "55": [39, 42, 87, 90, 462, 463, 468, 472, 476], "550": 442, "55026401977972e": 487, "55027": 137, "55045": 466, "551": [466, 527], "55197": [369, 567], "552": 466, "55275": 479, "553": [438, 466], "5531e": 438, "553337": 489, "5538": 489, "5538942e": 469, "554": 67, "55410": 466, "5545130e": 469, "554e": 440, "556": [425, 442, 565], "5561760e": 469, "5563052715230388": 487, "557": [425, 473], "55775": 466, "558": 425, "559": 425, "5594": 83, "56": [437, 463, 471, 480], "560": [37, 466], "5606985": 463, "5607778e": 469, "56093766": 96, "56141": 466, "562": 466, "5622482": 96, "562919": 458, "56353481": 564, "56393115380234": 453, "563e": [442, 452], "564": [286, 425, 442, 473], "56413952067279": 453, "5644": 467, "565": 425, "56506": 466, "565095": 437, "566e": 442, "56711": 489, "5686274509803928": 456, "56871": 466, "569": 425, "56922612": 564, "5692809e": 469, "56973": 489, "57": [33, 446, 448, 452, 463, 471], "57011": 452, "571": 466, "571829": 556, "57185": 500, "5719922e": 469, "571e": 466, "572": 443, "57233": 489, "57236": [446, 466, 479, 489], "572e": 440, "573": [67, 442, 489], "57300957": 170, "5754970e": 469, "576": 473, "5760": 489, "57602": 466, "5763635e": 469, "5768262e": 469, "577398": 479, "5779092e": 469, "578": [466, 564], "579": 466, "57944657408": 466, "57967": 466, "57e": 466, "58": [103, 122, 404, 407, 445, 450, 453, 466, 470, 471, 473, 481, 487, 519], "580": 565, "581": [436, 443, 464], "5819e": 444, "582": 425, "58332": 466, "5833e": 466, "5835918e": 469, "5842497e": 469, "585": 466, "58540702": 96, "5867488e": 469, "58693695": 463, "58698": 466, "586e": 446, "5882352941176467": 456, "588e": 466, "58909": 462, "58926": 446, "5892966e": 469, "5895": 439, "58999": 232, "58e": [458, 466], "59": [83, 448, 458, 466, 470, 481, 487, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "590": 442, "59000": [232, 558], "59001": 232, "59063": 466, "5908": 466, "590835686434463": 475, "591": [425, 466], "59100": [557, 558], "59123": [551, 552, 553], "5915030546513255": 459, "5915e": [466, 488], "59200": 557, "59233": 474, "59235": [83, 478], "59240": 474, "59250": 474, "59254e": 437, "59265": 437, "593": 425, "59300": 463, "59344": 489, "59348": 489, "59365": 558, "594": 425, "59400008": 96, "59428": 466, "59451": 446, "5951631e": 469, "596": 473, "59696": 446, "596e": 466, "597": 479, "597774": 469, "59793": 466, "598": 489, "5985": 489, "5987726": 96, "599": [425, 456, 461, 473], "599625": 478, "59976": 466, "599999904632568": 466, "599e": 446, "59d09m41": 466, "59e": [466, 473, 479], "5a": 58, "5e": [445, 455, 466, 473], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 90, 99, 101, 108, 110, 114, 123, 128, 137, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 232, 271, 356, 359, 372, 375, 380, 384, 385, 388, 393, 401, 404, 417, 419, 421, 427, 428, 432, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 491, 495, 512, 516, 522, 526, 546, 562, 564], "60": [67, 90, 149, 432, 443, 445, 446, 466, 468, 479], "600": [443, 446, 451], "6000": 515, "6000000000000001": 474, "6002e": 488, "600661": 469, "60075": 469, "60090769e": 474, "600e": 442, "6018166e": 469, "601e": 466, "603": [436, 467, 473, 477, 489], "6033": 437, "60350": 440, "603625": 469, "604": 442, "6046689e": 469, "60496": [554, 555, 556], "60603928": 474, "607843137254942": 456, "609e": 446, "60e": 466, "61": [67, 414, 443, 458, 466, 473, 565], "610": 473, "61051": 479, "6105760e": 469, "611": [436, 446, 450, 457, 564], "6116853": 466, "611e": 466, "6125": 481, "612a": 124, "613114": 459, "61422433": 96, "61489": 469, "614e": 446, "615316": 489, "617": 443, "617835": 469, "6181862e": 469, "61862": 232, "619": 466, "6194453e": 469, "619794257232": 487, "62": [442, 448, 462, 466, 480, 488], "620": 466, "620398": 469, "6205": 489, "62111": 446, "621499": 489, "6218742e": 469, "6219": 440, "622": [425, 440], "62258": 466, "6227766": 471, "62277660168379": 471, "6228e": 440, "623": [466, 489], "62320": 440, "623397": 469, "62341325": 471, "623413251903492": 471, "624": 473, "624122": 452, "624d": 24, "62503": 466, "62514628": 469, "6253652e": 469, "6259962e": 469, "6266": 489, "6267247": 489, "627450980392158": 456, "628": 425, "62842028": 467, "6290e": 444, "629502": 527, "63": [185, 186, 195, 198, 437, 442, 444, 467, 470, 480, 481, 487, 488, 510, 512, 513, 516], "630": [82, 473, 481, 487], "6309576500000000": 489, "630e": 67, "631": [425, 450], "631155605": 454, "631159205": 454, "631170005": 454, "631173605": 454, "631177205": 454, "631180805": 454, "6318811e": 469, "632533": 547, "632627": 489, "633": [85, 101, 104, 108, 109, 167, 443, 451, 470, 487, 488, 512], "63307": 83, "63308": [460, 488], "633083": 472, "63310241699219": 451, "63326": 446, "6333": 93, "63342": 489, "633600": 473, "635": 425, "63500212963": 466, "6354": 489, "63541": 478, "636": 490, "636688324856333": 462, "637x": 100, "638": 473, "639": 466, "6390": 437, "63902": 437, "6397": 489, "63e": 467, "64": [39, 67, 83, 123, 186, 407, 445, 466, 479], "640": [425, 436, 482], "6402822e": 469, "641": [425, 489], "64103": 478, "641238434562": 462, "6413": 452, "641635917844372": 453, "6417": 452, "6419578e": 469, "642": 489, "6429005895278312": 475, "643": [30, 31, 32, 33], "64323": 446, "64438": 479, "6444": 437, "645": 467, "6451": 452, "6464": 437, "6465e": 462, "647": 425, "647058823529452": 456, "6471115e": 469, "64794383e": 474, "648": 425, "648e": 67, "649": 425, "64987376": 96, "64e": 443, "65": [63, 392, 407, 409, 451, 467, 479], "650": 467, "6500e": 444, "6509": 437, "651": 466, "651058": 489, "6514": 489, "652": 451, "6522806": 489, "652368617859867": 451, "653": [425, 439], "65357608e": 469, "653e": 446, "654": [437, 466], "65412": 452, "654e": 466, "655": 446, "655283": 446, "6554088e": 469, "6556": 446, "6556248e": 469, "655e": 67, "656": 564, "65603222222": 479, "65603794185": 466, "6577182894355391": 475, "658": 473, "658909145253801e": 489, "6589622747787678": 475, "659": [442, 446], "65e": 116, "66": [52, 53, 407, 410, 445, 458, 467, 468, 473, 476], "660": 425, "6604475": 452, "660e": 489, "660fals": 440, "661": 425, "66104": 437, "662": 466, "6623e": 450, "662648": 544, "663": [442, 564], "663742400000000": 489, "664502403": 478, "664502405": 478, "664502408": 478, "664502409": 478, "664502414": 478, "6652219e": 469, "6654036168695552": 453, "6659": 446, "66650390625": 439, "6666666666583865": 461, "6666666666666666": 553, "666666666666696": 456, "66813": 452, "669": 443, "66984341": 469, "669e": 137, "66e": [450, 467], "67": [17, 407, 466, 489], "670": 466, "6705024680435898": 295, "671616": 437, "6728": [466, 489], "673": [454, 481, 551], "67304": 96, "67375": 437, "67457342435522e": 489, "675": [436, 442, 477], "676836990188792": 443, "6768e": 443, "676e": 462, "677": 425, "6772235e": 469, "67759236e": 469, "678": [86, 453], "67824": 467, "6784": 564, "67861": 469, "678684049503813e": 443, "678932": 524, "679": [425, 442], "679478012854058e": 443, "6795e": 443, "67992517": 96, "67e21": 465, "68": [67, 83, 95, 148, 154, 156, 157, 158, 160, 227, 407, 437, 466, 468, 469, 471, 478, 489, 565], "680": [443, 473], "6803": 489, "681": 482, "6812310184489": 462, "68125": 469, "6823": 437, "682858": 531, "682e": 462, "683": 442, "684": 167, "68542112": 96, "686": 443, "68628538586": 467, "687": 473, "687214": 470, "687500": 470, "687685": 466, "687758": 521, "687840": 539, "689": 442, "68e": [438, 450, 466], "69": [101, 434, 446, 466, 467], "690": 67, "690311850083152": 453, "690557685186": 466, "6909290e": 469, "691": 466, "69138": 446, "691680": [101, 467, 473], "692": [446, 449], "693": [436, 482], "69314486": 472, "693940": 450, "694": 443, "6953125": 467, "69543812": 96, "6959369197218669": 475, "697317": 479, "69735": 469, "697e": 440, "697fals": 440, "6985": 439, "698512": 537, "6992": 452, "699e": 446, "6e": [440, 466, 473], "6h": 480, "6th": 406, "7": [30, 31, 38, 52, 53, 67, 87, 90, 123, 129, 136, 167, 170, 197, 230, 358, 359, 368, 372, 373, 380, 384, 385, 388, 404, 408, 409, 411, 412, 418, 419, 424, 425, 426, 428, 429, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 516, 520, 521, 557, 564, 565], "70": [67, 90, 101, 452, 466, 467, 564], "700": [376, 455, 472], "70000000e": 474, "7000e": 474, "70016": 452, "7007": 452, "701": 512, "70181": 137, "702": [460, 466, 488], "703": 404, "70358483e": 474, "704": 473, "70428": 489, "70437": 469, "705": 489, "70546": 446, "70634e": 437, "706e": 466, "707e": 451, "707t": 280, "708": [442, 443], "708e": 446, "709": 425, "709610": 534, "7097381e": 469, "70e": 474, "71": [33, 445, 460, 473, 565], "710": 425, "71067811865478": 466, "7116851": 474, "712": 453, "71220672": 467, "7123895e": 469, "712e": [460, 488], "713": [425, 466], "7132e": 489, "714": 466, "714e": 446, "715": 489, "716": [95, 295, 296, 471], "716062": 478, "71693826": [461, 475, 503], "717": 466, "71795506": 489, "7184": 489, "719": [425, 473], "7190994e": 469, "71944e": 437, "7195": 466, "719e": 466, "72": [411, 466, 470, 489], "720": [455, 466], "7200": 458, "721e": 446, "722": 473, "72217": 489, "722557505166": 466, "723": 446, "723e": 466, "724061": 443, "7240965e": 469, "725": 466, "725490196078432": 456, "727": 473, "72775": 489, "7284447e": 469, "7297": 462, "73": [437, 489], "7303": 489, "731": 425, "732e": [67, 466], "733": [67, 425], "733360190578827e": 487, "734": 489, "7350250533013533": 475, "7350380e": 469, "7351418e": 469, "735e": 466, "736": [442, 564, 565], "737": [442, 549], "738": [425, 466], "7385727e": 469, "739": [425, 442], "7395744e": 469, "739e": 67, "73e": [466, 487], "74": [437, 448, 462, 489], "740": 425, "7409385304834": 462, "740e": 446, "742": 473, "743e": [438, 466], "744": 452, "74427": 452, "74465974e": 469, "74479": 446, "745098039215687": 456, "74542e": 437, "746": 425, "7471700e": 469, "7479085e": 469, "748": 466, "748259": 450, "748e": 462, "75": [67, 361, 438, 442, 489], "750": [436, 476, 477, 565], "752348": 529, "75267735": 489, "753": [425, 443], "7537086e": 469, "754": 425, "75408483": 489, "7555": 470, "7559": 489, "756": 466, "7567": 437, "7580410e": 469, "759": 425, "7596682e": 469, "75e": [466, 488], "76": [453, 471], "7613": 404, "7613e": 447, "761c": 28, "762": 425, "762199399999986": 527, "763": 425, "7637308880733709": 475, "76419591747674": 462, "7642": 446, "7647": 489, "764705882352942": 456, "76473": 446, "7652512e": 469, "765936": 553, "765e": 446, "766": [425, 446], "7660168382": 466, "7660365375951": 487, "766d": 478, "767": 425, "76739": 466, "768000": [101, 467], "768048": 96, "7681656e": 469, "76837444": 463, "7684028": 489, "7692170e": 469, "76e": 473, "770": 67, "771667": 481, "77174": 446, "7718272408581743": 295, "771e": 466, "772": [425, 437], "77206": 489, "77218": 446, "773": [100, 466], "7733e": [438, 466], "77351": 446, "77358627319336": 439, "774": [425, 458], "7743835449219": 442, "774e": [446, 466], "775": [67, 473], "7752244878226383": 452, "7755386e": 469, "776": 479, "7760": 489, "7763307219821931": 295, "7765957e": 469, "77678": 437, "7769775": 478, "777": 425, "7771617763704126": 295, "77751797": 96, "777e": [67, 440], "777l": 35, "778": [425, 442, 466], "77827941": 471, "778279410038923": 471, "779": [443, 466], "7796942": 489, "77e": [445, 466], "78": [471, 472, 480, 488], "780": [31, 123], "7800e": 442, "7804888e": 469, "78083": [136, 137], "780e": 123, "78188": 446, "78188096": 96, "782": [436, 477, 479], "7827941": 471, "78279410038923": 471, "783": [425, 466, 489], "78332719": 452, "78333": 452, "783587001383003": 478, "783e": 452, "784": [426, 443], "7843137254901955": 456, "78499999999997": 523, "785": 523, "7853981633974483": 556, "787": [67, 167], "7872234642813915e": 460, "7875405607868806": 475, "7876233e": 469, "788": 466, "7887840e": 469, "788e": 466, "789": 425, "78910994": 96, "7894": 452, "78952750835169": 462, "78e": 473, "79": [439, 466], "790": 425, "791": 426, "7913e": 442, "7922": 437, "793": 426, "79432823": 474, "79469899": 452, "7947": 446, "79470": 452, "796": [426, 473], "797": 426, "7972": 470, "798": 426, "798218": 437, "799": 442, "7990194e": 469, "7997221e": 469, "799999952316284": 466, "7c": 471, "7d": 466, "7e": [466, 473, 474], "7e955f": 407, "8": [16, 17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 84, 87, 89, 90, 101, 103, 104, 108, 109, 110, 114, 122, 126, 137, 141, 142, 191, 198, 230, 232, 297, 368, 372, 375, 376, 385, 408, 409, 412, 414, 415, 419, 420, 421, 424, 425, 426, 429, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 496, 498, 507, 512, 516, 520, 529, 540, 548, 564], "80": [170, 442, 444, 446, 467, 471, 479, 512, 539], "800932": 466, "801": [489, 512], "801668796295": 466, "802": [473, 489], "803": [442, 446, 527], "8031431e": 469, "8037638e": 469, "803921568627494": 456, "804": 473, "804492": 458, "80492": 137, "80571": 136, "8062607e": 469, "80683246": 469, "8069e": 450, "807201": 489, "8075": [466, 489], "8075185": 466, "8086": 446, "808687936570502e": 468, "80871364": 96, "8090746": 478, "809505": 466, "80982039": 469, "80e": 438, "81": [415, 438, 460, 529], "810": [426, 466], "810000": 458, "8100e": 438, "810e": 466, "811": 426, "8113e": 462, "8115337251905373e": 468, "812": 426, "812075194992371e": 468, "8122169596532167e": 468, "8122425483643125e": 468, "8122e": 468, "812358724314062e": 468, "8129257829574434e": 468, "812951371538087e": 468, "813": 426, "814": 426, "8150": 489, "8157971601581226e": 468, "816": [426, 453], "8160964882165554": 295, "81699e": 437, "816e": 466, "818388e": 489, "81847286": 463, "818e": 440, "819": 466, "81e": 529, "82": [67, 407, 436, 466, 516], "820": 426, "8205513": 478, "820562952023891": 295, "8222980e": 469, "8226e": 458, "823": 442, "82352941176471": 456, "824": [132, 426, 436, 441, 442, 473], "8241471833009617": 475, "825": [426, 437, 466], "8256": 489, "826": 426, "826414166666": 93, "827": 426, "8272": 491, "82739": 446, "827e": 137, "8290458e": 469, "8293": 489, "82946153": 489, "82e": [451, 458], "83": [30, 67, 83, 85, 93, 101, 104, 108, 109, 167, 170, 185, 186, 195, 198, 442, 443, 444, 446, 451, 460, 467, 470, 471, 472, 480, 481, 487, 488, 507, 510, 512, 513, 516], "830": 426, "8300": 489, "831": 426, "832": 426, "83242471": 469, "833": [426, 443], "833333333336": 463, "833444": 557, "833e": 446, "834": 426, "8341884287660133": 475, "8349780e": 469, "835": 426, "835e": 452, "835fals": 440, "836": [426, 436, 441, 446, 463, 466], "836731": 466, "8369650e": 469, "837": [426, 473], "8377268e": 469, "838": 446, "8383396349722769": 295, "84": [24, 407, 442, 444, 452, 466, 473, 516], "840": [426, 446], "841": 466, "84196311": 96, "842": [426, 466], "84233": 446, "842x": 138, "843": [59, 437, 463], "843137254902004": 456, "843e": 67, "8441040e": 469, "844770648146": 93, "8449575657133206": 295, "845": 427, "84529": 466, "8455480e": 469, "845693": 437, "846": [446, 466, 564], "847": 426, "8475576e": 469, "8475650e": 469, "847e": 462, "84e": 450, "85": [87, 90, 433, 452, 520, 521], "851": 426, "85157506": 489, "8515948e": 469, "85188496e": 469, "85202": 489, "85287": 479, "852e": 466, "854": [426, 436, 456, 457], "854166666664": 463, "85416667": 461, "85469291": 96, "855": [426, 442], "85527": 452, "85527359": 452, "8555500e": 469, "855887646638273e": 487, "85624": 447, "85625": 447, "8564": 458, "8568": 489, "85692555603579": 462, "856e": 466, "8570719e": 469, "85722435185": 466, "858": 426, "858e": 466, "859": [426, 442], "85900": 452, "85900392": 452, "85925": 489, "8593054": 466, "85e": 466, "86": [440, 442, 443, 446, 471, 489, 500], "860": 466, "860870": 542, "861": 489, "86111111": 461, "861150": 440, "8613613e": 469, "86178": 136, "8620": 458, "8623": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "862745098039234": 456, "863348": 103, "864": [426, 489], "865": [426, 446], "8654572343324": 462, "86676": 479, "8669": 437, "8673": 452, "868": [426, 466], "86831929": 96, "8699": 437, "8699165e": 469, "87": [67, 452, 471, 488], "870": [67, 426, 462], "871": 426, "872": 426, "872e": 446, "873": 443, "8733348": 478, "873581766271": 453, "873659477745188": 475, "874": 439, "875": 426, "876": 473, "8767": 446, "8769240e": 469, "87710186": 96, "877563": 466, "878": [466, 473], "87897": 452, "87897418": 452, "8799800e": 469, "87e": 21, "88": [407, 429, 444, 452, 453, 466, 471, 489], "881": [426, 436, 437, 446, 454, 457], "88113384": 448, "8815212313941426": 475, "882": [67, 446], "882352941176466": 456, "883": 426, "8834862e": 469, "883e": 67, "884": 426, "88470839": 474, "885": 426, "886": 466, "8865": 489, "88781": 446, "888": 426, "8885138e": 469, "889": [436, 466, 482], "8893600e": 469, "889e": 446, "88e": [440, 466], "89": [33, 443, 471], "8908866e": 469, "8909e": 462, "890e": 67, "891": [436, 462, 464], "892": 473, "89243456": 489, "8926": 489, "89287": 437, "893": 426, "894": 440, "8943121e": 469, "89492144e": 468, "895": 463, "8954039e": 469, "89595846": 474, "89709472": 489, "898": 426, "8986348363207728": 475, "89873": 452, "8989213": 452, "898e": 466, "899": [67, 448], "8999": 452, "899a": 271, "89e": 467, "8e": [440, 450, 453, 455, 473, 479, 548], "9": [31, 33, 35, 67, 83, 87, 90, 136, 191, 230, 232, 327, 333, 365, 372, 373, 377, 385, 404, 410, 412, 423, 426, 428, 431, 433, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 515, 522, 526, 527, 528, 535, 538, 551, 559, 564], "90": [57, 67, 391, 445, 451, 452, 466, 471, 474, 491], "900": 466, "9002269877996247": 463, "900269": 469, "9023670e": 469, "90242058e": 467, "9032163": 86, "904": [436, 441, 489], "905": 466, "9053655e": 469, "9053906e": 469, "905526": 519, "906": [426, 466], "90605275e": 479, "90685": 446, "907": 466, "9074812e": 469, "9077294": 478, "908700583573673": 487, "90e": [101, 443, 450, 467], "91": [445, 471, 476, 516], "911": 426, "912": 466, "912525e": 489, "912779907405": 466, "912868843587422e": 460, "913196574074": 460, "914": 67, "915": [462, 466], "91507": [101, 467], "9163195e": 469, "91719": 467, "918": 67, "918365": 466, "919": 426, "919e": 466, "91e": 473, "92": [137, 445, 446, 471, 478], "920": 442, "9205875e": 469, "921": 443, "9215375e": 469, "92234009259": [404, 460], "923e": 446, "924": 443, "9240e": 474, "92490": 446, "925106": 452, "925277": 122, "925e": 446, "9269494e": 469, "9277492e": 469, "928": [436, 466, 477], "9280475e": 469, "929": [437, 443], "93": [67, 121, 123, 445, 446, 471, 478], "93026": 466, "9303": [466, 489], "931": 293, "93128e": 437, "932": 426, "93271046296": 460, "933": 426, "9332549000000": 489, "933818": 548, "9343": 437, "935826709880043": 459, "93702": 479, "9382336444241555": 475, "938e": [452, 466], "939": [282, 288], "9391360e": 469, "93988308": 96, "93e": 466, "94": [445, 466, 471, 478, 487, 489], "940e": 466, "940fals": 440, "94111838": 96, "941176470588236": 456, "94186555556": [404, 460], "943282347242818": 487, "9445e": 447, "9453950989269149": 475, "945e": 446, "9462": 452, "946923": 266, "94722599": 452, "94723": 452, "948683": 437, "9489822e": 469, "949": 473, "9499210e": 469, "94e": [452, 466], "95": [33, 67, 148, 154, 156, 157, 158, 160, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 445, 446, 452, 458, 462, 466, 467, 468, 471, 472, 478, 520, 565], "950": 426, "9500979841335693": 295, "95024543e": 468, "952": 67, "9529719e": 469, "953": 473, "95421509259": 460, "95451985e": 123, "9546285068162436": 475, "95615": 437, "957": 67, "9580e": 444, "95883": 489, "959198": 466, "959d": [52, 53], "96": [407, 438, 445, 467, 471, 529], "9606540e": 469, "960784313725491": 456, "9608912e": 469, "9619812963": 460, "9620e": 458, "964": 559, "965": [436, 559], "965e": 446, "966": 426, "96602": 447, "967546": 446, "9677107409819438": 295, "968": 442, "96814": 489, "96833546296": [466, 479], "968488": 293, "969": [452, 466], "9692e": 438, "96e": 440, "96r": 471, "97": [445, 466, 469, 475, 487, 488], "97003": 489, "97054": 446, "970e": 466, "97116": 452, "973": 466, "97369425926": 460, "974": 443, "9741e": 451, "974e": 466, "975": 426, "97529": 136, "975298744131843": 462, "97596": 446, "976": 426, "97749": 452, "97749371": 452, "9776920e": 469, "978": [436, 446, 449], "979": [67, 426, 471], "97934": 446, "97978": 83, "97e": 466, "98": [83, 336, 444, 445, 446, 450, 460, 462, 469, 487], "980": 67, "9803921568627443": 456, "98049": 446, "98149518519": 460, "9816452e": 469, "982075849517389e": 474, "98258": 446, "9833462074166": 466, "9834338e": 469, "98359208475904647": 452, "98429": 446, "9845": 437, "984586": 525, "9847406e": 469, "984e": 458, "985": [426, 440, 457], "985502122122975": 475, "986": [436, 549], "9864771491419372": 487, "986e": 458, "9873e": 458, "9876": 437, "98772": 136, "988": [426, 466, 473], "988409870698051e": 52, "9890": 489, "98e": 466, "99": [336, 445, 446, 447, 458, 488, 489], "991": 466, "9910796e": 469, "9912648e": 469, "9912712e": 469, "9925e": 458, "993": [439, 458], "9931": 489, "9939e": 462, "993e": 458, "994": 426, "9948e": 458, "994e": 466, "995": 473, "9952623149688797": 487, "996092": 545, "9969731e": 469, "997": 426, "9977859e": 469, "9978": 489, "998": 453, "99848e": 479, "999": [50, 157, 160, 466], "99919925926": 232, "99996948242188": 442, "9999912037958": 452, "999999": 466, "99999994": 86, "9999999995": 466, "9999999997835": 439, "999999999997": 454, "9999999999977": 466, "9999999999978": 461, "9999999999998": 466, "99999999999994": 466, "99999999999999": [445, 466], "99e": 466, "9e": [438, 440, 466, 548], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 98, 99, 100, 101, 103, 104, 107, 108, 109, 121, 122, 123, 131, 136, 137, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 279, 281, 289, 297, 306, 357, 358, 359, 361, 362, 369, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 406, 408, 412, 413, 414, 415, 416, 419, 421, 422, 425, 426, 427, 428, 430, 432, 433, 434, 437, 439, 444, 446, 450, 452, 453, 456, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 486, 488, 489, 491, 499, 500, 501, 503, 504, 512, 513, 515, 516, 518, 520, 557, 558, 561, 562, 565], "AND": [472, 473], "And": [271, 368, 371, 386, 388, 394, 399, 439, 440, 442, 443, 450, 454, 456, 462, 467, 468, 471, 472, 474, 478, 480, 487, 488, 489], "As": [83, 297, 327, 368, 369, 371, 376, 380, 381, 382, 384, 386, 394, 395, 397, 404, 409, 428, 437, 438, 439, 442, 443, 444, 446, 447, 448, 452, 454, 455, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 474, 476, 479, 481, 487, 489, 503, 512, 565], "At": [255, 382, 385, 394, 395, 398, 412, 454, 471, 478, 508, 561], "But": [368, 373, 376, 382, 387, 395, 398, 404, 428, 442, 443, 468, 476, 478, 487, 491, 563], "By": [19, 20, 26, 50, 65, 87, 90, 100, 101, 104, 108, 109, 120, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 164, 167, 174, 184, 186, 187, 188, 190, 196, 199, 200, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 365, 368, 394, 395, 396, 413, 414, 416, 454, 455, 459, 461, 468, 471, 476, 488, 510, 514, 520, 521, 522, 566], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 82, 87, 88, 90, 94, 98, 100, 101, 104, 108, 109, 116, 118, 120, 121, 123, 124, 125, 128, 129, 130, 131, 144, 145, 146, 152, 157, 160, 167, 172, 174, 177, 178, 180, 181, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 240, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 256, 257, 259, 260, 261, 263, 267, 268, 280, 282, 286, 288, 294, 300, 315, 367, 368, 369, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 409, 410, 411, 413, 414, 415, 416, 419, 426, 430, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 456, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 483, 487, 488, 489, 491, 498, 499, 501, 503, 513, 515, 516, 521, 526, 558, 562, 563, 565, 566, 567], "IN": [91, 99, 240], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 118, 120, 121, 122, 123, 124, 126, 128, 131, 135, 136, 139, 144, 145, 146, 152, 155, 157, 160, 161, 163, 164, 167, 169, 170, 173, 174, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 278, 294, 297, 309, 310, 315, 354, 357, 361, 362, 363, 364, 368, 369, 370, 371, 373, 375, 376, 381, 382, 384, 385, 386, 389, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 427, 428, 429, 437, 439, 440, 442, 444, 445, 447, 450, 452, 455, 458, 460, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 489, 501, 503, 514, 516, 522, 524, 537, 563, 564, 565, 566], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 90, 93, 100, 102, 107, 123, 144, 163, 186, 188, 191, 194, 200, 208, 210, 267, 278, 310, 368, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 404, 409, 410, 411, 412, 413, 414, 415, 416, 419, 430, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 487, 488, 489, 499, 501, 503, 508, 511, 512, 513, 515, 516, 517, 520, 521, 526, 539, 558, 561, 562, 563, 564, 565, 566, 567], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 101, 104, 108, 109, 110, 112, 114, 121, 136, 144, 148, 155, 156, 157, 158, 160, 170, 173, 177, 178, 183, 187, 188, 190, 192, 195, 196, 199, 200, 202, 212, 213, 216, 219, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 251, 255, 256, 258, 259, 260, 261, 264, 268, 280, 284, 286, 287, 305, 319, 324, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 403, 405, 409, 410, 411, 412, 416, 419, 421, 422, 423, 428, 430, 432, 433, 434, 437, 443, 448, 451, 453, 455, 458, 459, 463, 466, 467, 468, 470, 471, 472, 474, 476, 478, 479, 480, 481, 487, 488, 489, 491, 492, 499, 500, 502, 503, 507, 508, 510, 512, 516, 530, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547, 560, 561, 562, 563, 564, 565, 567], "Its": [144, 380, 394, 395, 419, 421, 456, 461, 476, 488, 505, 506, 507, 509], "NOT": [472, 503], "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 379, 389, 392, 393, 427, 429, 435, 456, 466, 468, 470, 471, 489], "Not": [104, 108, 109, 189, 195, 197, 376], "ON": [101, 104, 130, 174, 175, 176, 184, 366, 374, 421, 437, 438, 442, 445, 448, 452, 460, 461, 463, 468, 470, 476, 503, 512, 562, 564, 566], "OR": [101, 108, 467, 472, 473], "Of": [368, 371, 404, 450, 467, 471, 479, 563, 566], "On": [59, 162, 168, 169, 172, 280, 287, 293, 368, 369, 374, 376, 383, 384, 397, 399, 400, 401, 402, 423, 450, 451, 468, 483, 565], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 101, 104, 108, 109, 218, 240, 323, 368, 369, 374, 376, 377, 378, 379, 382, 384, 385, 386, 394, 433, 439, 443, 448, 460, 470, 471, 472, 487, 489, 512, 516, 539, 563, 565], "Ones": 297, "Or": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 369, 387, 388, 443, 450, 467, 471, 478, 479, 501], "Such": [380, 469, 507], "That": [16, 19, 20, 84, 103, 122, 205, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 368, 369, 373, 382, 385, 388, 468, 489, 563], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 168, 169, 173, 174, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 297, 309, 315, 317, 318, 321, 336, 351, 352, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 405, 408, 409, 411, 412, 413, 414, 415, 416, 419, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 487, 488, 489, 491, 492, 493, 494, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 520, 522, 524, 525, 526, 529, 535, 537, 538, 539, 548, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568], "Their": 472, "Then": [67, 101, 106, 108, 371, 373, 378, 381, 383, 384, 385, 386, 392, 401, 439, 442, 450, 451, 454, 458, 460, 468, 472, 474, 476, 488], "There": [87, 90, 136, 368, 369, 373, 374, 375, 377, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 398, 400, 401, 427, 452, 456, 459, 465, 466, 467, 468, 469, 470, 472, 473, 480, 491, 499, 500, 503, 516], "These": [94, 192, 270, 368, 369, 373, 374, 379, 381, 382, 383, 384, 388, 389, 394, 411, 413, 414, 415, 419, 427, 433, 437, 451, 453, 454, 459, 462, 465, 467, 469, 471, 474, 475, 480, 483, 491, 508, 513, 515, 516, 564, 565, 566], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 99, 103, 107, 120, 122, 124, 128, 186, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 270, 280, 358, 359, 370, 371, 375, 376, 379, 380, 381, 383, 384, 389, 390, 391, 392, 393, 394, 398, 399, 401, 403, 404, 405, 409, 410, 411, 414, 415, 419, 421, 427, 428, 430, 433, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 487, 489, 499, 500, 501, 504, 508, 510, 512, 513, 520, 561, 563, 564, 565], "With": [83, 368, 377, 378, 394, 415, 428, 476, 499, 565], "_": [101, 108, 126, 228, 247, 368, 382, 392, 394, 442, 445, 448, 465, 466, 468, 473, 476, 499, 512], "_0": [50, 51], "_1": [104, 109, 500], "_2": [104, 109], "__all__": 368, "__array__": 297, "__array_ufunc__": [454, 481, 551], "__attributes__": [87, 90], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 309, 374, 379, 396, 415], "__class__": [368, 392, 465, 497], "__dict__": [16, 84, 103, 122, 368], "__enter__": 346, "__eq__": 421, "__exit__": 346, "__fields__": [16, 84, 103, 122, 395], "__getitem__": [378, 379, 380], "__init__": [16, 84, 103, 122, 195, 267, 368, 374, 380, 392, 430], "__int__": 315, "__len__": 378, "__main__": [250, 368, 476, 485, 563], "__name__": [368, 448, 460, 461, 462, 465, 485, 497, 563], "__neq__": 421, "__pydantic_extra__": [16, 84, 103, 122], "__pydantic_fields_set__": [16, 84, 103, 122], "__repr__": [368, 414, 428], "__str__": [368, 380, 395, 411], "__subclasses__": 465, "__version__": 403, "_basemodel__context": [16, 84, 103, 122], "_build": [369, 398], "_check_interv": 433, "_compute_flux_spati": 419, "_covari": [218, 240], "_data": 392, "_dom_class": [450, 458, 471, 487, 488], "_energy_t": 392, "_errn": [124, 125, 128, 129], "_errp": [124, 125, 128, 129], "_evaluate_timevar_sourc": 433, "_f_cash_root_cython": 292, "_factr": 468, "_fields_set": [16, 84, 103, 122], "_i": 126, "_k": [101, 108, 499], "_l": 499, "_lat": 368, "_lon": 368, "_map": 361, "_model": 121, "_new_attribut": 368, "_old_attribut": 368, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 103, 122], "_phi": 368, "_prior": 396, "_propagate_error": 418, "_reco": 368, "_repr_html_": 368, "_row_index": 69, "_sample_coord_time_energi": 433, "_scan": 468, "_time_group": 392, "_time_t": 392, "_true": 368, "_type": [396, 476], "_types_namespac": [16, 84, 103, 122], "_was_": [16, 84, 103, 122], "_wc": 527, "_weight": 396, "a_": [104, 109, 147, 505, 508, 565], "a_off": 565, "a_on": 565, "a_scan": 476, "aa": [87, 90, 297, 394], "aaguasca": 430, "aaocyiqo": 470, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 116, 124, 138, 147, 200, 208, 210, 237, 270, 271, 280, 287, 465, 466], "abc": [18, 56, 98, 119, 166, 185, 190, 470], "abcmeta": 470, "abdalla2018": [512, 513, 562], "abeysekara": 59, "abil": [392, 476], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378, 383, 386, 439, 458, 460, 461, 476, 483, 563], "about": [11, 13, 16, 84, 103, 122, 142, 147, 227, 232, 327, 368, 371, 373, 377, 384, 385, 387, 388, 389, 393, 394, 396, 397, 398, 403, 404, 423, 424, 428, 429, 430, 438, 440, 446, 447, 448, 451, 452, 454, 466, 469, 471, 474, 479, 488, 489, 491, 499, 500, 563, 566], "abov": [29, 44, 52, 53, 83, 120, 122, 123, 126, 130, 131, 136, 137, 162, 197, 357, 359, 368, 369, 374, 377, 378, 380, 382, 384, 385, 386, 387, 388, 392, 400, 401, 404, 437, 452, 454, 455, 456, 460, 463, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 487, 497, 499, 500, 507, 510, 516, 562, 563, 564, 565, 566], "abramowski": 147, "abruptli": [368, 393], "abs_path": 305, "absenc": [383, 448, 470, 472, 512, 564], "absolut": [82, 90, 105, 141, 142, 143, 144, 147, 149, 151, 154, 159, 187, 188, 190, 192, 196, 199, 200, 301, 327, 345, 349, 501], "absolute_tim": 567, "absopt": 386, "absorb": [268, 378, 391, 426, 529], "absorbedspectralmodel": [413, 426], "absorbt": 391, "absorpt": [220, 386, 416, 426, 436, 441, 483, 499, 501, 517, 549, 560], "abstract": [56, 57, 59, 98, 119, 158, 166, 171, 185, 187, 190, 199, 280, 379, 415, 515], "abstractsetintstr": [16, 84, 103, 122], "acada": 394, "academ": [132, 293], "accept": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 103, 104, 105, 109, 122, 162, 179, 184, 186, 187, 188, 190, 198, 199, 200, 218, 240, 281, 366, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 420, 424, 433, 437, 438, 443, 444, 445, 448, 452, 455, 467, 470, 471, 479, 499, 515, 521, 539, 564, 565], "acceptance_off": [104, 105, 109, 162, 172, 380, 437, 439, 442, 445, 448, 499, 565], "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 88, 90, 101, 155, 185, 186, 195, 198, 287, 305, 368, 376, 377, 378, 379, 381, 384, 392, 398, 400, 403, 408, 409, 416, 423, 424, 426, 427, 433, 434, 440, 442, 443, 444, 450, 466, 468, 469, 473, 474, 478, 481, 487, 488, 489, 498, 503, 514, 515, 516, 561], "accessor": 471, "accident": [479, 563], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 90, 101, 104, 108, 109, 116, 121, 139, 145, 155, 162, 186, 192, 208, 210, 294, 357, 378, 379, 382, 383, 386, 392, 394, 413, 422, 434, 448, 460, 467, 470, 474, 475, 483, 499, 500, 503], "accordingli": [380, 394, 410, 416, 472], "account": [101, 104, 108, 109, 120, 164, 180, 218, 240, 255, 279, 281, 287, 343, 376, 381, 384, 392, 394, 415, 432, 434, 436, 437, 439, 441, 442, 444, 448, 450, 456, 462, 463, 468, 470, 472, 483, 488, 499, 501, 560, 564, 565], "accur": [386, 429, 450, 468, 510], "accuraci": [382, 468, 503], "aceptance_off": 380, "acero": [386, 409, 411, 413, 416, 419, 421, 426, 428, 434], "achiev": [16, 84, 103, 116, 122, 162, 358, 359, 368, 377, 378, 379, 380, 381, 382, 384, 391, 394, 416, 471, 474, 475, 513], "acknowledg": [371, 394, 405], "acquir": 404, "acquisit": 562, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 116, 157, 160, 368, 377, 380, 398, 453, 462, 473, 479, 499, 515, 524, 562], "act": [90, 384, 473, 526], "action": [162, 373, 378, 384, 394, 398, 419, 462], "activ": [90, 287, 371, 385, 399, 400, 402, 403, 404, 413, 430, 459, 503], "actual": [175, 343, 344, 345, 367, 368, 369, 373, 377, 379, 381, 383, 384, 392, 393, 395, 397, 445, 455, 458, 461, 467, 468, 470, 471, 472, 476, 479, 480, 488, 489, 510, 512, 562, 563, 565, 567], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 101, 103, 104, 108, 109, 112, 113, 115, 122, 123, 187, 188, 190, 195, 196, 199, 200, 368, 369, 371, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 392, 394, 408, 409, 410, 412, 413, 414, 416, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 444, 450, 451, 469, 470, 473, 474, 475, 476, 480, 499, 516, 566], "adapt": [116, 162, 205, 377, 378, 381, 382, 387, 388, 390, 391, 394, 397, 404, 409, 410, 412, 413, 414, 416, 417, 419, 422, 425, 426, 428, 430, 432, 433, 434, 467, 469, 471, 472, 510, 513], "adaptiveringbackgroundestim": [172, 374], "adaptiveringbackgroundmak": [165, 413, 513], "adass": 388, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 83, 84, 87, 88, 90, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 121, 122, 123, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 164, 187, 188, 190, 194, 196, 199, 200, 206, 218, 240, 255, 294, 337, 356, 365, 367, 368, 369, 371, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 396, 397, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 445, 450, 451, 454, 458, 460, 463, 467, 469, 470, 471, 472, 474, 476, 478, 489, 493, 494, 503, 516, 531, 563, 566], "add_artist": [474, 520, 521], "add_cbar": [101, 104, 108, 109, 123, 141, 142, 144, 147, 148, 149, 154, 155, 156, 158, 187, 188, 190, 196, 199, 200, 356, 446, 447, 448, 450, 452, 458, 463, 465, 467, 469, 470, 471, 473, 474, 479, 480, 487, 488, 516, 519, 520, 521, 524, 525, 527], "add_column": [87, 90], "add_enabled_unit": [437, 445, 447, 450, 452, 458, 462, 478], "add_index": [87, 90], "add_loc": 368, "add_row": [87, 90], "add_subplot": 356, "addit": [16, 19, 20, 26, 43, 84, 87, 88, 90, 101, 103, 104, 108, 109, 112, 120, 122, 124, 129, 159, 187, 188, 190, 193, 196, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 368, 371, 372, 373, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 392, 393, 394, 395, 397, 398, 399, 400, 401, 410, 411, 413, 415, 416, 419, 420, 427, 428, 430, 433, 434, 440, 444, 456, 463, 466, 467, 468, 471, 473, 474, 476, 478, 479, 488, 489, 499, 501, 503, 510, 515, 516, 560, 566], "addition": [129, 380, 467, 468, 471, 473, 474], "address": [377, 380, 381, 382, 384, 394, 476, 502], "adequ": 195, "adher": 371, "adjac": [139, 192, 419, 461, 471, 512], "adjust": [16, 67, 187, 188, 190, 196, 199, 200, 377, 379, 391, 443, 459, 467, 474, 475, 487, 503, 510], "admit": 388, "adonath": 374, "adopt": [37, 381, 384, 389, 444, 454, 455, 465], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 237, 270, 271, 280, 287], "adult": 368, "advanc": [380, 384, 385, 388, 396, 400, 469, 471, 503, 562, 563], "advantag": [376, 382, 385, 392, 419, 471, 476, 539, 563], "advanteg": 380, "advertis": 397, "advic": [368, 394], "advis": [369, 394, 468, 476, 483], "advoc": 368, "aeff": [16, 82, 87, 88, 104, 109, 147, 173, 181, 378, 380, 381, 415, 416, 439, 442, 443, 444, 447, 448, 450, 452, 461, 469, 470, 478, 480, 481, 487, 488, 505, 510, 512, 513, 562], "aeff2d": 146, "aeff_2d": [82, 87, 147, 478, 481], "aeff_3d": 469, "aeff_ev": 469, "aeff_new": 469, "aeff_perc": [173, 439, 442, 443, 452, 461, 470, 480, 512], "aegi": 220, "af": 364, "affect": [368, 376, 380, 382, 393, 410, 411, 422, 431, 438, 476], "affili": [382, 394, 430], "afmhot": [473, 489], "aforement": 394, "after": [16, 45, 50, 51, 52, 53, 84, 90, 99, 101, 103, 104, 108, 122, 157, 160, 287, 309, 327, 349, 352, 368, 371, 373, 376, 377, 379, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 404, 408, 415, 417, 418, 419, 421, 427, 429, 430, 431, 440, 450, 459, 461, 468, 471, 473, 478, 480, 481, 503, 563, 567], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 301, 368, 493], "again": [101, 104, 108, 109, 157, 371, 378, 380, 382, 384, 389, 395, 399, 414, 415, 418, 425, 430, 440, 442, 443, 450, 455, 456, 471, 474, 476, 479, 487, 489, 516, 563], "against": [16, 84, 103, 122, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 369, 371, 385, 391, 398, 466, 479, 487, 498, 501], "agent": 384, "agglom": 13, "aggreg": 395, "agil": 381, "agn": [132, 285, 382, 442, 459, 460, 462, 478], "agnost": 468, "ago": 375, "agre": [189, 192, 371, 373, 382, 394], "agreement": [368, 371, 389, 463], "aguasca": [421, 430, 431, 432, 433], "aharonian": 453, "ahead": [382, 408], "ahelp": 205, "aim": [377, 378, 394, 450, 454, 465, 475, 491, 562], "air": 478, "ait": [186, 187, 188, 485], "aitoff": 382, "aka": 489, "al": [26, 33, 59, 100, 132, 147, 220, 286, 287, 293, 378, 446, 453, 459, 491, 562], "albert": 562, "albert2007": 562, "alexi": [416, 419], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 90, 116, 131, 162, 205, 280, 368, 374, 380, 381, 382, 387, 395, 411, 416, 424, 425, 426, 446, 459, 468, 480, 501, 515, 561, 565], "alia": [16, 56, 84, 103, 122, 371, 489], "alias": [16, 56, 84, 103, 122, 468], "align": [87, 90, 99, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 186, 187, 188, 190, 192, 196, 198, 199, 200, 368, 469, 472, 474], "alisha": 421, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 99, 101, 102, 103, 104, 106, 107, 108, 109, 120, 121, 122, 123, 124, 128, 129, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 161, 167, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 340, 341, 342, 343, 344, 345, 355, 364, 367, 368, 369, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 442, 443, 444, 447, 448, 450, 452, 453, 454, 458, 460, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 493, 499, 501, 503, 512, 514, 515, 516, 517, 539, 560, 563, 564, 565], "all_quant": [121, 123], "allclos": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 189, 190, 192, 196, 197, 199, 200, 343], "alloc": [188, 196, 200], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 103, 116, 121, 122, 123, 130, 131, 157, 160, 186, 191, 193, 320, 368, 369, 371, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 410, 412, 413, 414, 415, 416, 419, 421, 428, 429, 430, 433, 437, 442, 453, 462, 467, 468, 469, 470, 471, 472, 488, 499, 501, 503, 510, 515, 516, 560, 561, 563, 568], "allow_extra": 191, "allow_pickl": [16, 84, 103, 122], "allowed_channel": [26, 465], "allski": [83, 471], "alma": 387, "almeida": 416, "almost": [367, 369, 371, 382, 479, 489], "alon": 373, "along": [68, 100, 121, 123, 127, 139, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 158, 159, 187, 188, 190, 196, 198, 199, 200, 285, 286, 287, 308, 309, 319, 329, 330, 377, 378, 392, 430, 433, 447, 456, 466, 467, 469, 470, 473, 474, 500, 515, 516, 532, 562], "alpha": [21, 27, 28, 48, 101, 104, 108, 109, 162, 184, 223, 224, 233, 234, 235, 248, 281, 291, 294, 365, 366, 380, 391, 393, 419, 426, 437, 438, 439, 440, 442, 444, 445, 448, 450, 451, 455, 463, 466, 468, 476, 520, 529, 531, 533, 535, 537, 538, 539, 554, 555, 564, 565, 566], "alpha_": [104, 109], "alpha_1": [104, 109], "alpha_2": [104, 109], "alpha_norm": [220, 391, 438, 529], "alphabet": [385, 394, 409, 410, 411, 412, 413, 414, 415, 416, 419], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 122, 205, 263, 264, 265, 267, 368, 374, 375, 376, 379, 380, 381, 382, 383, 385, 388, 389, 390, 392, 395, 397, 398, 428, 438, 440, 444, 446, 455, 463, 465, 466, 467, 471, 472, 473, 474, 478, 479, 480, 489, 491, 516, 527], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 94, 116, 120, 121, 123, 124, 136, 138, 159, 164, 170, 185, 192, 194, 195, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 278, 297, 305, 310, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 419, 427, 428, 429, 433, 437, 438, 439, 442, 443, 444, 445, 446, 450, 452, 453, 454, 455, 456, 459, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 487, 488, 491, 499, 500, 501, 502, 503, 510, 512, 515, 516, 539, 542, 560, 562, 563, 564, 565, 567], "alt": [83, 85, 88, 93, 94, 368, 567], "alt_pnt": 90, "altaz": [83, 85, 93, 150, 368, 469, 567], "altaz_fram": [83, 93], "altaz_from_t": [83, 93], "altaz_interpol": 93, "altern": [82, 277, 367, 368, 371, 373, 377, 401, 419, 438, 442, 444, 446, 453, 466, 468, 469, 471, 473, 478, 499, 500, 563], "although": [368, 381, 382, 383, 385, 388, 392, 468, 478, 525, 526, 560, 567], "altitud": 439, "alwai": [83, 87, 90, 144, 192, 195, 202, 208, 210, 226, 368, 369, 371, 374, 375, 376, 378, 379, 380, 382, 385, 393, 394, 401, 408, 415, 430, 431, 433, 445, 446, 450, 458, 465, 468, 470, 471, 473, 475, 476, 483, 501, 515, 516], "am": 377, "ambigu": [382, 427], "amend": 371, "among": [82, 87, 90, 101, 104, 108, 109, 384, 388, 389, 391, 396, 416, 468, 562], "amount": [375, 382, 396, 503], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 254, 556], "ampl_2": [148, 469], "ampl_3": [148, 469], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 100, 124, 129, 131, 187, 188, 190, 199, 200, 212, 219, 222, 224, 228, 235, 238, 245, 246, 247, 254, 256, 259, 260, 261, 271, 277, 289, 379, 380, 383, 391, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 466, 467, 468, 473, 474, 478, 479, 487, 488, 489, 501, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 533, 534, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 565], "amplitude_maximum_signific": 459, "amplitude_maximum_vari": 459, "amplitude_ref": 463, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 114, 121, 122, 123, 124, 125, 126, 128, 129, 131, 135, 136, 137, 142, 144, 145, 146, 147, 149, 152, 155, 157, 159, 160, 163, 167, 170, 172, 175, 177, 178, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 273, 280, 285, 287, 295, 297, 301, 315, 326, 330, 346, 352, 358, 359, 361, 364, 367, 369, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 408, 409, 412, 413, 414, 415, 416, 419, 421, 422, 423, 426, 427, 428, 430, 431, 433, 434, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 466, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 493, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 566], "anaconda": [385, 399, 400], "analog": [87, 90, 187, 188, 190, 196, 199, 200, 516], "analogi": 389, "analys": [82, 367, 368, 377, 378, 379, 380, 382, 386, 388, 390, 391, 396, 404, 405, 411, 412, 413, 415, 416, 426, 428, 431, 442, 443, 450, 461, 462, 465, 466, 472, 474, 478, 479, 487, 488, 491, 499, 563], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 101, 103, 104, 108, 109, 113, 115, 169, 173, 367, 368, 369, 372, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 395, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 412, 413, 414, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 438, 440, 441, 446, 447, 448, 449, 453, 454, 456, 457, 458, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 488, 489, 491, 500, 501, 503, 504, 508, 510, 511, 512, 513, 515, 516, 542, 560, 562, 563, 565], "analysis3d": 429, "analysis_1": [436, 487, 490], "analysis_1d": 460, "analysis_2": [369, 436, 488, 490], "analysis_3d": [428, 436, 450, 457, 460], "analysis_joint": 450, "analysis_mwl": [436, 451, 457], "analysis_stack": 450, "analysisconfig": [15, 369, 443, 447, 448, 450, 460, 487], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 147, 148, 156, 158, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 381, 386, 434, 469, 474, 501, 522, 566], "analyz": [378, 480, 562], "andrea": 381, "andrew": 428, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 90, 95, 101, 104, 113, 115, 116, 120, 127, 131, 141, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 163, 170, 171, 173, 175, 185, 186, 188, 193, 195, 198, 200, 201, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 270, 325, 355, 368, 374, 382, 384, 391, 395, 407, 409, 410, 411, 428, 437, 439, 442, 445, 451, 454, 455, 461, 466, 471, 472, 474, 475, 478, 479, 503, 508, 512, 515, 516, 520, 521, 522, 525, 526, 562], "angle_incr": 170, "angular": [23, 101, 104, 113, 115, 126, 145, 146, 152, 157, 160, 163, 188, 195, 198, 200, 219, 227, 230, 265, 301, 304, 368, 384, 432, 444, 455, 463, 508, 509, 562], "angular_extens": 41, "angular_s": 516, "angular_separ": [391, 432, 434, 474], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 103, 118, 122, 128, 146, 169, 187, 188, 190, 195, 196, 198, 199, 200, 297, 320, 353, 367, 368, 369, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 394, 395, 397, 400, 401, 402, 403, 404, 408, 409, 427, 428, 429, 434, 443, 452, 453, 456, 460, 463, 467, 470, 471, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 491, 500, 501, 513, 515, 516, 531, 563, 567], "ann": [23, 427], "anna": 368, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 430, 474, 491], "annoi": [368, 563], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 357, 395, 468, 520], "announc": [368, 373, 375, 382, 384, 387, 389, 391, 393, 394, 397, 398], "annuli": [456, 516], "annulu": [125, 329, 516], "anonym": 371, "anoth": [19, 20, 26, 83, 86, 87, 90, 101, 104, 108, 109, 145, 146, 147, 152, 157, 159, 160, 189, 192, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 368, 382, 383, 384, 386, 388, 389, 392, 395, 399, 404, 413, 428, 463, 467, 471, 472, 474, 516, 563], "another_posit": 512, "answer": [468, 503], "anti": [471, 472], "anticip": 377, "anymor": 430, "anyon": [373, 375, 478], "anyth": [144, 384, 563], "anytim": [371, 410], "anywai": [371, 382], "anywher": [382, 385, 387, 499], "ap": [373, 385, 393], "apart": 383, "apertur": 562, "api": [226, 372, 374, 377, 378, 379, 380, 381, 382, 384, 387, 388, 389, 393, 394, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 419, 423, 427, 428, 436, 439, 442, 443, 446, 452, 454, 461, 467, 471, 472, 473, 474, 477, 478, 479, 487, 489, 490, 499, 500, 501, 502, 510, 511, 515, 560, 561, 562, 563], "apj": [282, 288], "aplpi": 428, "apologis": [408, 409, 428], "app": [87, 90, 398, 404, 427], "appear": [87, 90, 368, 369, 376, 382, 395, 422, 433, 466], "append": [87, 90, 91, 99, 140, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 240, 380, 381, 383, 414, 433, 439, 442, 444, 445, 450, 451, 452, 454, 461, 462, 463, 467, 468, 470, 473, 474, 475, 476, 512], "append_ax": [141, 142, 144, 147, 148, 149, 154, 156, 158, 200, 356], "appendix": [30, 131, 147, 237, 271, 289, 446], "appl": [400, 402, 404], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 90, 100, 101, 102, 104, 108, 109, 110, 113, 114, 115, 116, 120, 123, 124, 128, 131, 144, 145, 146, 152, 157, 159, 160, 164, 170, 173, 174, 187, 188, 190, 191, 195, 196, 198, 199, 200, 208, 210, 218, 226, 240, 255, 268, 278, 279, 281, 309, 310, 353, 357, 365, 368, 374, 375, 378, 379, 381, 383, 386, 392, 393, 394, 416, 421, 426, 427, 428, 429, 433, 437, 442, 444, 454, 461, 462, 463, 467, 470, 471, 472, 473, 474, 476, 478, 481, 488, 489, 501, 503, 510, 548, 561, 564], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 90, 368, 379, 394, 396, 415, 459, 468, 515, 562], "apply_async": [317, 318], "apply_edisp": 434, "apply_hysteresis_threshold": 472, "apply_irf": [255, 415], "apply_mask": 193, "apply_psf": [379, 412], "apply_standard_scal": 95, "apply_threshold_sensit": 120, "apply_union": 202, "approach": [87, 90, 131, 368, 374, 376, 380, 384, 389, 392, 393, 395, 433, 437, 442, 470, 483, 562, 565], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 186, 187, 188, 190, 199, 200, 297, 305, 369, 444, 448, 450, 471, 563], "approv": [374, 375, 376], "approx": [52, 53], "approxim": [100, 131, 173, 174, 186, 187, 188, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 279, 281, 308, 379, 382, 410, 437, 442, 468, 478, 501, 512, 521, 522, 525, 526, 562], "appveyor": 424, "apr": [390, 406], "april": [388, 395, 415], "apt": 401, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 95, 99, 100, 101, 103, 104, 107, 108, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 173, 174, 175, 180, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 280, 285, 293, 297, 309, 315, 317, 329, 330, 343, 357, 359, 364, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 488, 489, 491, 492, 493, 494, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 520, 521, 529, 539, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568], "arakelian": 286, "arang": [116, 383, 446, 461, 515], "arb": 476, "arbitrari": [193, 195, 196, 379, 391, 414, 427, 454, 467, 471, 476, 515, 516], "arbitrary_types_allow": [16, 84, 103, 122, 395], "arbitrarytypemetadata": 395, "architectur": [400, 402], "archiv": [394, 481, 488], "arcsec": 170, "arctan": 382, "area": [82, 88, 104, 106, 146, 147, 162, 173, 174, 181, 188, 196, 198, 200, 368, 369, 379, 423, 425, 437, 442, 454, 463, 470, 480, 481, 508, 515, 516, 562], "areasc": [426, 428], "aren": [344, 368, 382, 387, 388, 399, 400, 402], "arf": [105, 106, 109, 191, 192, 195, 196, 442, 516], "arf_ob": 105, "arffil": 105, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 103, 108, 109, 122, 141, 142, 143, 147, 148, 149, 151, 154, 155, 156, 158, 159, 188, 189, 196, 213, 226, 238, 245, 246, 247, 320, 563], "arg_in_kwarg": 368, "argmax": 459, "argmin": 459, "argpars": [373, 563], "argsort": [87, 90], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 99, 100, 101, 103, 104, 107, 108, 109, 122, 123, 124, 126, 128, 140, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 163, 173, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 278, 295, 297, 309, 315, 317, 318, 355, 356, 357, 361, 362, 363, 364, 365, 371, 374, 380, 383, 415, 416, 419, 421, 427, 433, 434, 446, 450, 455, 468, 470, 471, 474, 475, 488, 501, 503, 514, 515, 516, 539, 563], "aris": [373, 384], "arithmet": [213, 379, 429, 471, 472, 474, 531], "arjun": [426, 427], "arm": [33, 34, 38, 45, 423], "arm64": [400, 402], "armstrong": 427, "arnau": [421, 430, 431, 432, 433], "around": [56, 136, 163, 186, 188, 198, 200, 309, 382, 383, 444, 463, 465, 468, 472, 480, 489, 503, 512, 515, 516], "arpit": 426, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 90, 91, 93, 98, 99, 100, 101, 108, 109, 116, 121, 123, 124, 125, 128, 129, 131, 136, 137, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 208, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 268, 269, 278, 279, 281, 283, 293, 297, 308, 309, 310, 324, 325, 326, 330, 361, 362, 367, 368, 381, 382, 386, 392, 395, 404, 414, 427, 430, 432, 434, 445, 454, 455, 463, 466, 467, 468, 469, 471, 473, 474, 476, 478, 480, 481, 489, 515, 516, 523, 548, 551, 564, 565], "array_lik": [101, 108, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 282, 288, 294], "array_shap": [432, 434], "arriba": [420, 423, 424], "arriv": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 373, 381, 413, 414, 415, 454, 562, 566], "arrow": 561, "arrowprop": 520, "arrowstyl": 520, "artefact": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "arthmet": 379, "articl": [100, 132, 138, 286, 293, 373, 439, 461], "artifact": [120, 188], "artifici": 454, "artist": [195, 218, 240, 520, 521], "arxiv": [64, 65, 173, 246, 247, 260, 261, 451, 465, 466, 470, 546, 547], "as_arrai": [87, 90], "as_artist": [195, 196, 474, 516, 520, 521], "as_energy_tru": [185, 186, 195, 198], "as_plot_cent": [189, 192, 197], "as_plot_edg": [189, 192, 197], "as_plot_label": [189, 192, 197], "as_plot_scal": 192, "as_plot_xerr": [189, 192, 197], "asanyarrai": 368, "ascii": [87, 90, 123, 368], "asimov": 476, "asinh": 446, "asinha": 82, "ask": [369, 371, 373, 375, 382, 384, 385, 388, 394, 403, 460, 489, 503, 504, 563], "asmooth": [116, 117, 387, 414, 425, 428], "asmoothestim": 389, "asmoothmapestim": [117, 389, 414, 416, 419, 446, 503], "aspect": [371, 394, 504, 563, 568], "assert": [189, 191, 192, 197, 343, 344, 345, 371, 379, 391, 471], "assert_allclos": 368, "assert_equ": 368, "assert_nam": [189, 191, 192, 197], "assert_quantity_allclos": [368, 423], "assess": [442, 444, 459], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 102, 107, 108, 186, 255, 265, 364, 368, 377, 380, 383, 395, 397, 439, 458, 460, 467, 471, 474, 476, 488, 489, 515], "assist": 384, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 466, 489], "assoc2": [74, 75, 78, 489], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 466, "assoc_prob_lr": 466, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 90, 99, 101, 104, 121, 130, 132, 133, 134, 145, 146, 157, 160, 177, 178, 183, 196, 266, 297, 374, 384, 392, 393, 394, 395, 396, 433, 434, 438, 439, 440, 442, 446, 451, 466, 467, 470, 471, 473, 474, 480, 489, 500, 501, 503, 516, 565], "association_catalog": [67, 466], "association_nam": [67, 466], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 94, 100, 120, 121, 123, 131, 135, 138, 147, 159, 170, 184, 186, 187, 188, 190, 193, 197, 199, 200, 205, 261, 267, 270, 277, 324, 327, 368, 371, 380, 381, 383, 391, 392, 396, 404, 405, 437, 438, 439, 442, 444, 445, 448, 454, 455, 456, 458, 461, 465, 469, 471, 474, 476, 479, 493, 499, 501, 508, 560, 565], "assumpt": [72, 94, 101, 104, 108, 109, 116, 130, 138, 382, 392, 438, 508, 512, 564], "astri": 96, "astrisim": 381, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 124, 180, 187, 188, 190, 199, 200, 250, 268, 368, 369, 380, 387, 388, 392, 397, 411, 420, 424, 428, 430, 434, 444, 465, 469, 471, 478, 492, 493, 495, 496, 497, 500, 562], "astro_dark_matt": [388, 436, 465, 477], "astromodel": 491, "astronom": [13, 382, 389, 427, 562], "astronomi": [11, 271, 367, 378, 382, 386, 398, 405, 426, 439, 442, 448, 452, 470, 478, 503, 512, 513, 560, 561, 562, 563, 564, 565, 567, 568], "astrophys": [6, 23, 301, 383, 503, 561, 562], "astropi": [13, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 101, 104, 108, 109, 113, 115, 116, 121, 123, 125, 127, 128, 131, 136, 137, 144, 146, 155, 157, 170, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 231, 232, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 255, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 280, 295, 296, 297, 327, 344, 345, 354, 358, 359, 363, 367, 369, 370, 371, 373, 374, 375, 379, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 404, 405, 407, 411, 412, 413, 414, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 488, 489, 493, 495, 496, 497, 499, 500, 501, 503, 505, 507, 510, 512, 513, 514, 515, 516, 520, 521, 522, 523, 524, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 564, 567], "astropy_healpix": 377, "astropy_help": [368, 409, 410, 411], "astropy_introduct": 410, "astropy_timeseri": 383, "astropy_vers": 368, "astropydeprecationwarn": 454, "astyp": [87, 90], "asymetr": [100, 442], "asymmetr": [120, 124, 125, 128, 129, 131, 386, 409, 415, 434, 442, 476, 487, 501, 521], "asymmetri": 469, "asymptot": [565, 566], "atmospher": [383, 400, 405, 478], "atnf": 427, "atol": [86, 99, 128, 192, 197, 343, 345, 368], "atol_ax": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200], "atom": 384, "atproduction_gamma": 26, "atreye": [380, 383, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 427, 428, 429, 430, 431, 432, 433, 434], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 93, 218, 226, 240, 255, 265, 379, 389, 432, 462, 468, 473, 474, 563], "attempt": [16, 84, 103, 122, 371, 382, 385], "attenu": 438, "attr": 368, "attract": 388, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 297, 378, 380, 390, 395, 396, 409, 410, 413, 414, 415, 416, 419, 421, 423, 425, 427, 432, 433, 434, 440, 444, 454, 468, 470, 471, 472, 474, 489, 499, 515, 516, 565], "attributeerror": 368, "attrribut": 471, "aug": [381, 384, 385, 387, 406], "august": [375, 381, 384, 387, 452], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397], "authoris": 394, "authorship": 372, "auto": [187, 188, 190, 199, 200, 369, 371, 379, 388, 414, 428, 468, 563], "autodiff": 386, "autogener": 388, "autograd": [379, 386], "autom": [11, 376, 384, 394, 397, 398, 421, 468, 563], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 103, 111, 122, 124, 128, 157, 160, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 367, 368, 369, 371, 375, 376, 378, 379, 385, 388, 390, 394, 397, 408, 409, 415, 444, 452, 454, 468, 471, 563, 567], "automatis": 502, "autopep8": 368, "autoscal": [208, 209, 210, 211], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 78, 83, 87, 88, 90, 100, 101, 104, 108, 109, 120, 121, 123, 124, 128, 129, 131, 140, 161, 167, 173, 174, 192, 205, 208, 210, 214, 215, 219, 220, 227, 230, 242, 244, 252, 253, 257, 263, 265, 267, 271, 321, 356, 368, 371, 374, 375, 376, 377, 379, 380, 381, 382, 385, 386, 388, 395, 398, 399, 400, 401, 402, 403, 409, 413, 414, 415, 419, 422, 426, 428, 430, 433, 438, 442, 443, 446, 468, 470, 472, 474, 478, 479, 483, 487, 489, 491, 493, 494, 500, 502, 503, 505, 506, 507, 509, 517, 529, 561, 563, 565], "available_hdu": 88, "available_irf": 88, "available_method": [164, 173], "available_quant": [121, 123], "available_select": [167, 174], "available_stat_typ": 100, "averag": [19, 101, 104, 108, 109, 167, 174, 177, 178, 180, 181, 419, 438, 439, 442, 499, 562], "averageaz": [454, 455], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 120, 167, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 280, 368, 369, 374, 375, 376, 378, 382, 386, 387, 390, 391, 393, 394, 396, 419, 421, 430, 432, 433, 442, 472, 476, 500, 512, 563], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 279, 281], "awar": [368, 373, 380, 388, 394], "ax": [16, 19, 20, 26, 66, 67, 83, 100, 101, 104, 108, 109, 110, 111, 112, 114, 120, 121, 123, 125, 126, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 174, 177, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 279, 281, 355, 356, 360, 361, 362, 363, 364, 365, 368, 377, 387, 410, 414, 419, 425, 426, 427, 430, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 487, 488, 489, 499, 501, 503, 505, 510, 512, 513, 514, 515, 520, 521, 522, 526, 529, 557, 558, 562], "ax1": [437, 446, 448, 452, 463, 472, 473], "ax2": [437, 446, 448, 452, 463, 472, 473], "ax3": [446, 452], "ax_crab_3fhl": 489, "ax_ebl": 529, "ax_excess": [439, 442], "ax_model": 529, "ax_residu": [100, 108, 109, 439, 442, 443, 444, 463, 487], "ax_s": [443, 487], "ax_spati": [101, 104, 108, 109], "ax_spectr": [101, 104, 108, 109], "ax_spectrum": [100, 108, 109, 439, 442, 443, 444, 463], "ax_sqrt_t": [439, 442], "axcols1": 471, "axcols2": 471, "axel": [377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "axes0": [187, 188, 190, 196, 199, 200], "axes_loc": [141, 142, 144, 147, 148, 149, 154, 156, 158, 200, 356], "axes_nam": [186, 187, 188, 190, 195, 196, 198, 199, 200], "axesimag": [356, 357], "axesn": [187, 188, 190, 196, 199, 200], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 99, 100, 101, 104, 108, 109, 110, 111, 112, 114, 116, 120, 121, 123, 124, 125, 127, 128, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 275, 279, 280, 281, 285, 286, 287, 308, 309, 319, 356, 361, 362, 363, 364, 374, 377, 390, 392, 411, 414, 415, 416, 419, 421, 426, 428, 429, 430, 433, 437, 439, 442, 443, 444, 445, 447, 448, 450, 452, 454, 455, 456, 458, 459, 461, 462, 466, 467, 469, 470, 471, 478, 479, 480, 487, 488, 489, 499, 501, 503, 507, 512, 515, 516, 558, 562], "axis0": 515, "axis1": 471, "axis2": 471, "axis_edg": 361, "axis_nam": [100, 101, 104, 108, 109, 121, 123, 132, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 456, 460, 461, 462, 467], "axis_new": [123, 139, 459, 461], "axis_origin": 459, "axis_rgb": 363, "axis_tru": 452, "axisymmetr": 434, "axvlin": [445, 465, 475, 476], "axvspan": [196, 463], "az": [83, 85, 88, 93, 94, 368, 567], "azimuth": 479, "azur": 415, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 84, 87, 90, 103, 122, 147, 205, 336, 368, 369, 382, 391, 394, 442, 453, 465, 466, 468, 471, 472, 474, 479, 489, 495, 499, 516], "b1509": 466, "b3zhble5": 450, "b_0": [520, 521], "b_1": [87, 90], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 87, 90, 188, 309, 371, 378, 379, 382, 388, 442, 443, 445, 471, 474, 487, 563], "backend": [92, 100, 118, 124, 125, 128, 129, 131, 163, 204, 205, 206, 207, 277, 312, 317, 318, 367, 377, 379, 409, 428, 429, 433, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488, 560, 561], "backend_default": [125, 128, 131], "background": [16, 67, 82, 83, 88, 92, 101, 102, 104, 105, 107, 108, 109, 111, 112, 116, 120, 121, 123, 130, 141, 142, 143, 153, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 180, 220, 226, 265, 272, 279, 281, 289, 290, 291, 292, 294, 364, 368, 374, 377, 380, 381, 382, 384, 388, 389, 392, 400, 405, 408, 409, 410, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 449, 450, 452, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 469, 471, 472, 476, 480, 481, 483, 488, 499, 501, 502, 515, 561, 562, 563, 565, 566], "background2d": [142, 143, 153, 415, 422, 430, 432, 434, 506], "background3d": [88, 141, 153, 180, 374, 415, 419, 427, 428, 429, 469, 478, 506], "background_estim": 387, "background_interp_missing_data": 167, "background_map": [265, 379], "background_min": 140, "background_model": [101, 104, 108, 109, 131, 380, 381, 388, 390, 415, 447, 488, 506], "background_oversampl": [167, 174, 470], "background_pad_offset": 167, "background_r": [387, 467], "backgroundconfig": 16, "backgroundestim": [383, 413], "backgroundevalu": 379, "backgroundirf": [141, 142], "backgroundirfmodel": 390, "backgroundmodel": [380, 390, 391, 412, 414, 415, 416, 419], "backgroundtempl": 379, "backport": [375, 393, 397], "backround": 377, "backscal": 196, "backward": [368, 373, 382, 391, 392, 393, 411, 501], "bad": [86, 368, 382], "badli": 398, "balanc": 499, "band": [19, 20, 26, 68, 83, 89, 118, 121, 123, 126, 145, 146, 149, 152, 157, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 374, 386, 387, 391, 392, 400, 408, 440, 442, 443, 451, 452, 453, 463, 465, 466, 474, 479, 481, 498, 499, 501, 561], "bandshdu": 471, "banner": 398, "bar": [15, 82, 87, 90, 101, 104, 108, 109, 116, 128, 131, 141, 142, 200, 205, 228, 287, 318, 362, 385, 419, 422, 423, 429, 434, 463, 476, 503, 536], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 296, 305, 306, 309, 315, 317, 319, 342, 355, 363, 368, 369, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 391, 396, 398, 400, 401, 408, 410, 411, 413, 415, 416, 419, 421, 424, 425, 426, 427, 428, 434, 438, 442, 444, 445, 447, 450, 451, 452, 453, 454, 456, 459, 463, 466, 469, 471, 472, 474, 475, 476, 478, 479, 488, 489, 491, 500, 501, 503, 513, 515, 527, 537, 561, 562, 564, 565], "base_dir": [82, 87, 305, 478, 480, 481, 491], "baselin": [82, 83, 233, 478], "basement": 410, "basemodel": [16, 84, 103, 122, 395], "baseradi": 241, "bash": [400, 402, 563], "basi": [373, 374, 384, 387, 397, 421, 423, 463, 465], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 104, 109, 123, 232, 371, 374, 378, 379, 380, 381, 382, 384, 388, 392, 395, 404, 416, 426, 428, 436, 439, 442, 444, 457, 459, 460, 465, 466, 472, 483, 489, 491, 493, 494, 499, 500, 501, 511, 512, 515, 560, 562, 563], "basicconfig": [16, 452, 485], "bayesian": 386, "bayesian_block": 459, "bayesian_edg": 459, "baysian": 377, "bb": [87, 90, 394], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [142, 146, 147, 148, 157, 437, 445, 458, 462, 469, 478], "becam": 375, "becaus": [16, 84, 103, 122, 187, 188, 190, 194, 196, 199, 200, 368, 369, 371, 373, 375, 379, 380, 382, 383, 387, 391, 392, 395, 398, 419, 421, 439, 440, 443, 456, 461, 463, 470, 471, 472, 473, 478, 479, 480, 487, 488, 489, 499, 503, 563, 566], "becom": [368, 376, 378, 379, 382, 387, 395, 454, 461, 474, 503, 563, 566], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 99, 103, 120, 121, 122, 123, 159, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 297, 373, 374, 375, 376, 377, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 399, 401, 415, 416, 419, 421, 422, 428, 429, 430, 431, 432, 433, 434, 438, 443, 453, 461, 462, 463, 471, 474, 475, 478, 480, 487, 500, 515, 548, 567], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 99, 103, 121, 122, 187, 188, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 309, 363, 368, 369, 371, 373, 375, 376, 377, 378, 382, 383, 384, 386, 387, 393, 397, 398, 404, 422, 428, 438, 443, 445, 460, 461, 468, 471, 474, 480, 483, 487, 539, 563], "begin": [52, 87, 90, 101, 108, 121, 123, 131, 388, 391, 394, 442, 444, 471, 474, 520, 525, 526, 530, 546, 565], "behav": [368, 378, 433, 447, 566], "behavior": [16, 84, 87, 90, 94, 103, 122, 392, 418, 422, 433, 480], "behaviour": [343, 368, 390, 391, 416, 421, 427, 434, 461, 472, 479, 499, 564], "being": [120, 130, 188, 368, 373, 376, 382, 389, 392, 398, 444, 453, 459, 472, 476, 492, 516, 563], "belief": 476, "believ": [403, 476], "belong": [86, 392, 415], "below": [52, 53, 87, 90, 186, 190, 197, 198, 357, 358, 359, 363, 365, 369, 371, 372, 377, 378, 382, 384, 385, 388, 391, 392, 394, 395, 396, 398, 399, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 442, 446, 463, 466, 468, 470, 472, 474, 475, 476, 478, 479, 500, 503, 521, 565], "benchmark": [384, 394, 398], "benefit": 385, "benn": 384, "berg": 562, "berge2007": [382, 512, 513, 562], "bernet": 434, "besancon": 493, "besid": [120, 131, 382, 383, 392, 443, 444, 471, 479, 487, 488, 516], "best": [67, 71, 74, 75, 78, 80, 100, 121, 123, 124, 125, 128, 129, 136, 206, 207, 277, 279, 281, 361, 368, 371, 378, 381, 386, 394, 400, 402, 438, 440, 442, 443, 444, 447, 450, 453, 463, 466, 468, 476, 487, 501, 503, 505, 529, 535, 538, 539, 543, 565, 566, 567], "best_fit_model": 444, "beta": [27, 28, 48, 233, 234, 235, 256, 391, 393, 415, 438, 440, 444, 451, 466, 468, 531, 537, 538, 539, 544, 554], "better": [368, 371, 373, 374, 375, 376, 377, 381, 382, 387, 388, 389, 392, 409, 426, 427, 450, 451, 454, 463, 468, 471, 472, 479, 499], "between": [19, 20, 26, 67, 87, 88, 90, 93, 104, 109, 118, 125, 126, 128, 136, 137, 148, 154, 156, 157, 158, 160, 170, 184, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 199, 200, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 277, 294, 327, 358, 359, 366, 368, 369, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 392, 393, 395, 396, 406, 416, 419, 422, 433, 437, 444, 446, 451, 453, 456, 459, 462, 463, 468, 470, 471, 472, 473, 476, 479, 480, 489, 499, 501, 508, 509, 512, 521, 522, 562, 565, 567], "bewar": [266, 439, 461], "bexcub": 191, "bexpcub": [186, 187, 188, 190, 199, 200, 471], "beyond": [191, 382, 392, 395, 415, 470, 491], "bfg": 468, "bgstat": 425, "bi": [426, 429], "bia": [95, 144, 145, 149, 173, 427, 433, 470, 476, 507], "bias": [444, 564], "bias_energi": 144, "bias_perc": 173, "bibliographi": 562, "biederbeck": [396, 434], "big": [375, 378, 385, 397, 429, 479, 564, 566], "bigger": 188, "biggest": 387, "billion": 368, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 101, 104, 107, 108, 109, 111, 116, 118, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 140, 144, 145, 147, 149, 155, 157, 159, 160, 167, 169, 170, 171, 173, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 273, 282, 288, 294, 361, 363, 366, 374, 379, 380, 381, 382, 384, 387, 388, 392, 399, 400, 410, 411, 413, 414, 416, 418, 419, 421, 424, 425, 426, 427, 428, 433, 434, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 499, 501, 503, 507, 510, 511, 561, 562, 563, 564, 566], "bin_cent": 463, "bin_edg": 463, "bin_volum": [191, 195, 198, 516], "bin_width": [189, 192, 197, 463], "binari": [198, 200, 376, 382, 385, 394, 398, 419], "binary_dil": [200, 472], "binary_erod": [200, 472], "binary_eros": [200, 419], "binary_structur": 198, "bind": 371, "binder": [376, 397, 427, 430, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "binlik": 123, "binned_likelihood": 124, "binneddataaxi": [410, 426], "binnedtimeseri": [123, 383], "bins_axi": 200, "binsiz": [16, 443, 447, 448, 450, 460, 487, 488], "binsize_irf": [16, 443, 447, 448, 450, 460, 487], "binsz": [101, 104, 108, 109, 110, 114, 146, 155, 157, 167, 170, 171, 175, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 384, 442, 452, 453, 454, 455, 458, 463, 465, 467, 469, 470, 471, 472, 474, 479, 480, 488, 510, 512, 513, 515, 516, 519, 521, 522, 523, 524], "binsz_irf": [101, 104, 108, 109, 112, 467, 470, 503], "binsz_irf_default": [101, 104, 108, 109, 470], "binsz_wc": [195, 196], "bintabl": [186, 187, 188, 190, 199, 200], "bintablehdu": [83, 86, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 191, 192, 198, 199, 200, 454, 471, 499], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 136, 369, 371, 375, 376, 382, 386, 387, 395, 463, 471, 516], "bitpix": 471, "bkg": [16, 82, 87, 88, 101, 105, 106, 108, 109, 141, 142, 143, 173, 180, 226, 390, 414, 416, 421, 437, 442, 443, 447, 448, 450, 451, 454, 455, 458, 463, 467, 469, 470, 473, 478, 480, 481, 487, 488, 499, 506, 562, 564, 565, 566], "bkg_": [101, 108], "bkg_2d": [87, 141], "bkg_3d": [82, 87, 142, 478, 481], "bkg_err": 463, "bkg_maker": [390, 439, 442, 444, 452, 461, 512], "bkg_model": [380, 390, 396, 450, 454, 455, 458, 473, 488, 523], "bkg_ob": 105, "bkg_sy": 130, "bkg_syst_fract": [130, 437], "bkg_syst_fraction_sensit": 120, "bkgfile": 105, "black": [108, 109, 357, 358, 365, 386, 428, 430, 437, 463, 465, 470, 475, 512], "blackground": 437, "blanch": [427, 428], "blanklin": [232, 404, 501, 516], "blazar": [293, 438], "blind": [430, 503], "bll": 489, "blob": 407, "block": [369, 371, 374, 381, 388, 398, 407, 427], "block_reduc": 428, "blue": [100, 101, 104, 108, 109, 358, 438, 442, 448, 450, 453, 475, 512], "blur": 33, "board": [377, 388], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 368, "boller": 459, "boni": [419, 422], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 120, 121, 122, 123, 124, 128, 129, 131, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 174, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 294, 297, 306, 309, 310, 327, 335, 337, 339, 365, 368, 382, 452, 466, 470, 471], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 121, 124, 125, 128, 129, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 205, 218, 240, 255, 384, 416, 450, 466, 471, 472, 473], "boost": 454, "bootstrap": [87, 90], "border": 90, "bose": 410, "bot": 374, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 82, 83, 86, 87, 88, 90, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 184, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200, 208, 210, 368, 373, 374, 379, 380, 381, 382, 383, 388, 393, 397, 409, 413, 415, 416, 419, 422, 443, 444, 454, 458, 467, 471, 472, 473, 475, 476, 500, 501, 503, 515, 516, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 565], "bother": 447, "bottom": [388, 390, 438, 454, 460, 462, 466], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 192, 195, 197, 205, 212, 213, 216, 217, 218, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 292, 377, 471, 476], "boundari": [192, 198, 267, 396, 424, 468, 474, 515], "boundary_mask": [198, 472], "boundary_typ": 192, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 368, 469], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 101, 104, 125, 126, 195, 198, 200, 329, 330, 377, 382, 386, 392, 426, 472, 474, 516], "bpl": [212, 391, 474], "bpwl_norm": 391, "bracket": [144, 205, 431, 433], "brake": 51, "branch": [368, 371, 375, 382, 393, 398, 407], "branchnam": 368, "bratio": 491, "break": [212, 256, 374, 382, 384, 393, 413, 414, 415, 530, 544], "brent": 446, "brentq": [19, 20, 26, 123, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 278], "breviti": [450, 503], "brief": 567, "briefli": [480, 481], "bright": [68, 125, 255, 270, 448, 460, 461, 472, 474, 497, 512], "brighter": 454, "brightest": 466, "brigitta": [385, 409, 411, 413, 415, 424, 425, 426, 427, 428, 429, 430], "bring": 373, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 187, 188, 190, 193, 196, 199, 200, 255, 309, 455, 469, 471, 515], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [212, 256, 394, 436, 517, 549], "brokenpowerlaw": 391, "brokenpowerlawspectralmodel": [250, 256, 391, 416, 474, 530], "brown": [132, 459], "brown2013": 132, "brows": [87, 90, 369, 404, 489], "browser": [87, 90, 371, 398, 404, 424, 427, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "bruno": [394, 411, 413, 416, 419, 422, 426, 427, 428, 430, 431, 432, 433, 434], "br\u00fcgge": [427, 428], "bsd": 394, "bst": [87, 90], "buchner": 419, "budget": 503, "buffer": 346, "bug": [368, 371, 374, 375, 393, 394, 397, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 431, 432], "bugfix": [375, 377, 393, 426, 427], "build": [16, 84, 103, 122, 186, 220, 368, 374, 375, 376, 381, 382, 384, 388, 392, 393, 394, 395, 397, 415, 421, 430, 446, 450, 463, 470, 472, 500, 503, 563], "build_doc": [333, 369, 371, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 535, 538, 551], "built": [10, 174, 220, 336, 352, 367, 368, 369, 379, 380, 382, 384, 385, 387, 395, 398, 405, 428, 433, 466, 473, 479, 483, 499], "builtin": 489, "bullet": 373, "bump": [382, 426], "bunch": [102, 107, 369, 563], "bundl": [100, 101, 104, 108, 109, 377, 380, 398, 420, 428, 452, 467, 470, 499, 516, 561, 562], "bunit": [354, 428, 471], "bureaucrat": 373, "burkert": [17, 491], "burst": 459, "butterfli": [427, 468, 489], "button": [430, 471], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 103, 122], "byte": [16, 84, 87, 90, 103, 122, 315, 346, 368], "bytearrai": [16, 84, 103, 122, 315], "bytestr": [87, 90], "b\u00fchler": 407, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 90, 193, 203, 222, 259, 282, 288, 297, 336, 367, 368, 385, 400, 401, 403, 420, 427, 442, 463, 465, 468, 476, 479, 491, 515, 534, 545, 563, 564, 566], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 100, "c_": 203, "c_0": [185, 186, 195, 198], "c_i": [185, 186, 195, 198], "c_n": [185, 186, 195, 198], "cach": [87, 88, 90, 99, 101, 104, 108, 109, 265, 305, 306, 377, 378, 380, 387, 390, 398, 412, 416, 419, 434], "cahil": 421, "cal_gen_92_002": [144, 192], "cal_gen_92_002_summari": 144, "calcul": [13, 15, 19, 20, 26, 95, 104, 109, 132, 133, 134, 173, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 267, 268, 284, 286, 287, 294, 296, 319, 350, 358, 359, 378, 381, 409, 415, 419, 420, 421, 427, 432, 434, 437, 459, 463, 465, 476, 487, 488, 491, 503, 562, 566], "caldb": [82, 142, 144, 146, 147, 148, 157, 192, 421, 437, 445, 454, 455, 458, 462, 469, 478], "calendar": [393, 397], "calib_vers": [479, 489], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 100, 101, 103, 104, 108, 109, 122, 132, 133, 134, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 169, 185, 186, 195, 198, 205, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 309, 321, 340, 346, 354, 357, 365, 368, 369, 371, 373, 374, 377, 380, 381, 382, 383, 384, 386, 388, 390, 392, 394, 396, 398, 400, 404, 415, 419, 433, 442, 443, 452, 466, 467, 468, 470, 471, 474, 479, 481, 487, 488, 489, 499, 503, 512, 513, 514, 515, 516, 563, 564, 565, 566], "callabl": [16, 45, 84, 103, 122, 273], "callback": [163, 563], "caller": [368, 379], "camera": [462, 469, 470], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 82, 83, 84, 87, 90, 92, 101, 103, 104, 107, 108, 109, 112, 116, 121, 122, 123, 128, 129, 131, 136, 142, 147, 155, 157, 160, 164, 170, 173, 185, 186, 187, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200, 202, 205, 209, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 278, 280, 285, 297, 309, 310, 315, 318, 327, 344, 346, 361, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 411, 413, 415, 416, 419, 421, 422, 426, 427, 428, 429, 430, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 488, 489, 491, 493, 494, 499, 500, 501, 503, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 537, 539, 548, 558, 560, 561, 562, 563, 564, 565, 566], "candel": 220, "candid": [393, 421, 466], "candl": [271, 562], "cannot": [16, 67, 84, 87, 90, 94, 103, 111, 121, 122, 123, 202, 288, 336, 365, 371, 381, 382, 433, 469, 473, 474, 501, 516], "cap": [51, 54], "capabl": [378, 479, 491], "capsiz": 476, "captur": [368, 384], "car": [101, 104, 108, 109, 167, 198, 199, 200, 218, 240, 382, 411, 452, 469, 470, 471, 488, 489], "card": [83, 86, 88, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200, 471], "care": [121, 123, 297, 368, 377, 384, 393, 439, 444, 450, 471, 563], "carefulli": [394, 454, 455, 476], "carina": [33, 38], "carlo": [386, 508], "carri": [383, 391, 393, 395, 419, 440, 488], "carr\u00e9": 198, "cartesian": [41, 46, 188, 199, 200, 300, 302, 432, 489, 515], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 83, 87, 90, 100, 144, 163, 175, 186, 188, 194, 195, 198, 200, 205, 208, 210, 230, 241, 263, 265, 267, 278, 288, 310, 327, 363, 368, 369, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 408, 409, 412, 415, 421, 422, 427, 433, 434, 437, 439, 442, 443, 444, 445, 447, 448, 450, 454, 455, 458, 459, 460, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 481, 483, 487, 489, 498, 501, 502, 503, 513, 516, 520, 521, 522, 525, 526, 530, 539, 546, 561, 563, 565], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [101, 104, 108, 109, 167, 283, 288, 368, 380, 419, 445, 447, 450, 458, 462, 467, 470, 473, 476, 487, 488, 499, 562], "cash1979": [562, 565], "cashcountsstatist": [404, 434, 563, 565], "cast": 90, "cat": [66, 67, 79, 376, 398, 426, 427, 440, 466, 474, 498, 562, 563], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 120, 124, 382, 388, 407, 411, 413, 415, 419, 420, 421, 424, 425, 426, 427, 428, 430, 434, 436, 438, 440, 446, 451, 467, 474, 477, 479, 483, 493, 527, 561, 562], "catalog_3fgl": 440, "catalog_3fhl": [440, 466], "catalog_3fhl_bright": 466, "catalog_4fgl": 466, "catalog_4fgl_roi": 466, "catalog_gammacat": [440, 466], "catalog_hgp": 466, "catalog_registri": [440, 466, 472], "catalogimageestim": 428, "catalogu": [78, 419, 426], "catch_warn": 503, "categori": [368, 379, 392, 419, 472, 474, 517], "caus": [375, 382, 428, 431, 503], "cautious": 453, "caveat": [205, 293, 434, 521], "cax": 469, "cb98": 48, "cbar": 356, "cbar_kw": 362, "cbarlabel": 362, "cc": [377, 382, 384, 387, 389, 391, 394, 396], "ccube": [186, 187, 188, 190, 191, 192, 198, 199, 200, 471], "cd": [368, 369, 371, 384, 400, 401, 402], "cdelt": [198, 200], "cdelt1": 471, "cdelt2": 471, "cdf": [319, 381, 454, 468], "cdot": [51, 52, 53, 54, 101, 108, 245, 259, 391, 474, 499, 520, 525, 526, 530, 533, 534, 541, 542, 544, 545, 546, 547, 552, 553, 554, 556, 564], "celesti": [471, 515, 520, 524, 567], "celfix": 527, "cell": [376, 404, 430, 451, 463, 471, 478, 479, 489], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 90, 95, 101, 104, 108, 109, 121, 123, 125, 126, 127, 131, 144, 145, 146, 147, 148, 149, 152, 156, 157, 158, 160, 167, 170, 171, 173, 174, 175, 177, 178, 180, 181, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 299, 303, 329, 368, 369, 382, 384, 391, 392, 409, 410, 419, 421, 434, 437, 439, 442, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 461, 462, 463, 465, 469, 470, 471, 472, 473, 474, 478, 479, 488, 489, 505, 506, 507, 508, 509, 510, 512, 513, 515, 516, 520, 521, 524], "center_coord": [185, 186, 191, 195, 198], "center_pix": [185, 186, 195, 198], "center_ski": 516, "center_skydir": [185, 186, 195, 198, 470, 471, 479, 480, 510, 512, 513], "centr": [465, 472, 491], "central": [380, 389, 440, 489], "cern": 491, "certain": [50, 83, 87, 90, 205, 285, 367, 382, 384, 386, 392, 437, 465, 470, 471, 479, 498, 516], "certainli": 371, "certif": 394, "certifi": 394, "cfa": [205, 468], "cff": 397, "cg": 495, "ch": 53, "chain": [163, 381, 384, 413, 470, 503, 513], "chainer": 386, "chakraborti": [425, 426], "challeng": [375, 377, 381, 426, 448, 450, 452, 478], "chanc": 373, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 103, 121, 122, 123, 186, 195, 198, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 343, 353, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 392, 393, 394, 397, 398, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 425, 426, 427, 428, 429, 431, 435, 444, 445, 446, 452, 454, 455, 459, 460, 467, 468, 472, 474, 476, 478, 487, 499, 503, 510, 512, 516, 527, 535, 538, 563], "changelog": [368, 397, 420, 428], "channel": [19, 20, 26, 367, 370, 371, 385, 427, 455, 465, 471, 481, 491], "channel0": 491, "channel1": 491, "channel_registri": [19, 20, 26], "chapter": 465, "charact": [87, 90, 368, 473], "character": [287, 392, 454], "characterist": [21, 25, 27, 51, 52, 53, 54, 132, 285, 379, 433, 459, 562], "charg": [394, 539], "chatti": [368, 452], "cheat": 403, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 90, 101, 104, 105, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 209, 211, 218, 240, 255, 293, 342, 344, 371, 384, 390, 394, 397, 398, 400, 401, 402, 405, 414, 419, 427, 440, 458, 469, 483, 491, 503, 507, 516, 560, 563, 564], "check_limit": [208, 209, 210, 211], "check_random_st": 368, "check_tutorials_setup": [437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "checker": [425, 428], "checklist": 398, "checkout": [368, 371, 410, 450, 454, 474], "checksum": [83, 86, 88, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200, 206, 218, 240, 335, 337, 434, 451, 479], "chen": 428, "cherenkov": [147, 381, 400, 405, 439, 442, 448, 460, 470, 478, 480, 512, 513, 562], "cherri": [368, 375, 382, 393], "chi": [284, 383, 564, 565, 566], "chi2": [100, 138, 380, 410, 442, 453, 462, 468, 499, 565], "chi2assym": 413, "child": 378, "children": [450, 458, 471, 487, 488], "chime": 371, "chisq": 284, "chisquar": 284, "chmod": 563, "choic": [381, 385, 387, 394, 442, 443, 445, 447, 468, 480, 487, 504, 560, 563], "choos": [45, 185, 186, 189, 191, 192, 195, 198, 268, 311, 368, 380, 382, 384, 388, 400, 419, 440, 442, 446, 450, 452, 462, 467, 468, 470, 471, 473, 474, 475, 479, 488, 503, 563], "chose": [454, 479, 480, 565, 567], "chosen": [26, 144, 157, 160, 186, 187, 188, 196, 199, 200, 218, 227, 240, 368, 371, 383, 384, 387, 443, 461, 470, 471, 475, 476, 480, 487, 501, 511, 512, 516], "christoph": [373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 407, 408, 409, 410, 411, 412, 413, 414, 420, 423, 424, 425, 426, 427, 428, 429], "chrome": [87, 90], "chromei": 421, "chunk": [146, 157, 160], "chunk_siz": [146, 157, 160], "ci": [368, 371, 375, 394, 398, 413, 419, 421, 424, 430], "circl": [83, 175, 365, 369, 382, 421, 442, 452, 462, 465, 470, 472, 475, 478, 488, 489, 500, 510, 512, 513, 516], "circle_area": 369, "circleannulusskyregion": [252, 253, 512], "circledast": 499, "circlepixelregion": 382, "circleskyregion": [101, 104, 108, 109, 169, 170, 174, 198, 219, 369, 382, 437, 439, 442, 444, 445, 448, 450, 452, 454, 455, 461, 465, 467, 470, 472, 473, 488, 510, 512, 513, 516], "circular": [90, 101, 104, 174, 186, 188, 198, 379, 387, 389, 439, 444, 467, 475, 512, 516], "circumv": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "cirelli": [26, 491], "citat": 397, "cite": [371, 394], "cl": [16, 84, 101, 103, 108, 122, 395], "clabel": 468, "clang": 404, "clarif": 373, "clarifi": [392, 433], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 279, 281, 305, 306, 309, 317, 319, 342, 355, 371, 374, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 396, 400, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 440, 442, 443, 444, 445, 446, 447, 448, 452, 454, 455, 458, 460, 463, 466, 467, 468, 469, 470, 471, 474, 476, 478, 479, 480, 487, 489, 494, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 511, 513, 514, 515, 516, 517, 539, 548, 560, 561, 562, 563, 568], "class1": 466, "class2": 466, "classic": [377, 386, 400, 409, 439, 442, 448, 452, 467, 470, 501, 503, 512, 513, 562, 565], "classifi": 480, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 99, 100, 101, 103, 104, 108, 109, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 395], "classproperti": 419, "classvar": [16, 84, 103, 122], "claudio": [432, 434], "claus": [368, 394], "clean": [368, 369, 371, 376, 377, 382, 384, 386, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 426, 427, 428, 429], "cleaner": 430, "cleanup": [375, 387, 398, 407, 412, 413, 418, 419, 420, 424, 425, 427], "clear": [91, 99, 194, 240, 368, 373, 375, 379, 382, 383, 387, 388, 389, 427, 453, 567], "clearer": 412, "clearli": [132, 368, 373, 374, 382, 385, 393], "cli": [11, 384, 429, 561], "click": [367, 384, 385, 404, 412, 427, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 563], "clip": [19, 20, 26, 185, 186, 189, 191, 192, 195, 197, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 267, 268, 309, 412, 413, 446], "clockwis": [219, 227, 230, 520], "clone": [371, 401, 428], "close": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 267, 343, 344, 345, 377, 382, 397, 422, 433, 434, 468, 548], "closer": 489, "closest": [116, 120, 124, 128, 131, 186, 187, 188, 190, 196, 199, 200, 472, 501], "cloud": [398, 483], "cluster": [6, 95, 295, 296, 381, 433, 434, 436, 477, 483, 500, 503], "clutter": [450, 503], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 100, 123, 129, 131, 212, 216, 222, 224, 228, 235, 238, 245, 247, 255, 256, 259, 260, 261, 270, 353, 379, 391, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 458, 462, 463, 465, 466, 468, 474, 476, 478, 479, 487, 489, 496, 497, 501, 503, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562], "cm2": [51, 54, 67, 106, 123, 137, 147, 200, 271, 353, 437, 438, 440, 443, 445, 446, 450, 451, 452, 454, 455, 458, 460, 461, 462, 463, 465, 466, 467, 471, 473, 474, 476, 479, 487, 488, 489, 501, 516, 532, 535, 538, 543, 548], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 465], "cm5": 465, "cmap": [101, 104, 108, 109, 358, 359, 444, 450, 465, 471, 473, 479, 480, 487, 488, 512], "cmb": 539, "co": [53, 193, 393, 394, 437, 520, 521, 522], "coadd": [187, 188, 190, 196, 199, 200], "coars": 467, "coarser": [192, 197, 467], "codaci": 398, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 90, 144, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 363, 371, 372, 373, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 401, 404, 407, 410, 411, 413, 414, 415, 416, 419, 421, 424, 425, 426, 427, 428, 430, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 503, 510, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 563], "codebas": [369, 385, 407, 426, 428], "codemeta": 421, "codespel": 419, "codestyl": 371, "coeffici": [126, 233, 237, 529], "coerce_numbers_to_str": 103, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 459, "col": [87, 90, 419], "col0": [87, 90], "col1": [87, 90], "col2": [87, 90], "col_b": [87, 90], "col_c": [87, 90], "col_d": [87, 90], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 362, "collabor": [358, 359, 373, 375, 377, 381, 421, 453, 479, 562], "colleagu": [371, 563], "collect": [194, 240, 368, 370, 395, 398, 426, 427, 443, 467, 473, 491, 500, 504, 508, 562, 567], "collis": 50, "colnam": [87, 90, 187, 188, 190, 196, 199, 200, 479, 489], "color": [100, 108, 109, 141, 142, 200, 357, 358, 359, 362, 365, 369, 437, 438, 440, 442, 443, 444, 445, 446, 448, 450, 452, 453, 456, 460, 463, 465, 468, 470, 473, 475, 476, 503, 512, 516, 520, 521, 539], "colorbar": [123, 141, 142, 144, 147, 148, 149, 154, 155, 156, 158, 200, 356, 362, 468, 471], "colorblind": 503, "colorblind10": 503, "colormap": [357, 358, 359, 407, 420, 489], "colormap_hess": [389, 568], "colormap_milagro": 568, "colour": 430, "column": [41, 43, 44, 46, 47, 56, 83, 87, 90, 102, 107, 121, 123, 126, 136, 141, 142, 144, 168, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 266, 287, 295, 338, 339, 340, 341, 361, 362, 365, 366, 368, 381, 383, 392, 430, 433, 434, 437, 454, 455, 463, 466, 471, 474, 478, 500, 503], "column_nam": 469, "column_prefix": 192, "columnclass": [87, 90], "columnspac": 365, "com": [132, 138, 293, 324, 325, 336, 371, 388, 397, 398, 401], "combin": [98, 100, 101, 104, 108, 109, 139, 173, 181, 187, 188, 190, 195, 196, 199, 200, 213, 255, 368, 374, 378, 379, 380, 381, 382, 383, 388, 391, 400, 412, 427, 433, 440, 445, 450, 451, 458, 462, 467, 468, 469, 470, 471, 472, 474, 480, 488, 489, 491, 493, 503, 510, 515, 531, 561, 562], "combined_ev": 500, "combining_and_defin": [437, 445, 447, 450, 452, 458, 462, 478], "come": [69, 371, 374, 375, 376, 377, 378, 382, 383, 384, 385, 387, 388, 393, 395, 397, 398, 415, 416, 419, 428, 429, 433, 442, 450, 458, 474, 478, 487, 563], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 466], "command": [6, 13, 93, 100, 123, 148, 154, 156, 158, 367, 369, 371, 376, 377, 379, 384, 385, 398, 399, 400, 401, 402, 403, 409, 413, 424, 427, 428, 430, 454, 502, 561], "commensur": 200, "comment": [123, 368, 369, 373, 377, 381, 382, 384, 385, 387, 389, 391, 393, 394], "commit": [368, 371, 376, 382, 393, 394, 406, 407, 430], "committe": [373, 375, 393, 394], "commod": 394, "common": [94, 367, 368, 369, 371, 373, 374, 382, 384, 388, 389, 391, 392, 394, 401, 403, 404, 419, 421, 443, 444, 456, 466, 469, 472, 474, 487, 488, 491, 498, 501, 502, 516, 521, 563], "common_irf_head": 469, "commonli": [29, 83, 382, 386, 428, 456, 491, 560, 561, 563, 565, 568], "commun": [384, 390, 394, 397, 399, 405, 481], "comp": 466, "compact": [16, 84, 87, 90, 103, 122], "compar": [87, 90, 124, 125, 128, 129, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 277, 368, 382, 385, 388, 416, 432, 433, 437, 438, 439, 442, 446, 450, 453, 456, 458, 461, 466, 468, 470, 476, 479, 487, 498, 562, 564], "comparison": [86, 87, 90, 99, 128, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 327, 424, 493], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 187, 188, 190, 199, 200, 226, 373, 375, 379, 382, 391, 393, 395, 396, 404, 407, 409, 411, 428, 434, 471, 515], "compil": [371, 420], "complain": 371, "complaint": 386, "complement": 388, "complementari": [100, 442], "complet": [13, 16, 84, 103, 122, 327, 368, 374, 378, 379, 380, 381, 382, 385, 386, 388, 392, 393, 394, 401, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 424, 425, 426, 427, 428, 429, 450, 455, 468, 475, 483, 503, 508], "complex": [368, 369, 374, 378, 382, 383, 384, 390, 392, 404, 439, 442, 452, 455, 459, 462, 467, 471, 472, 474, 475, 479, 512], "complianc": [394, 430], "compliant": [187, 188, 190, 199, 200, 434, 562], "complic": [382, 516], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 101, 102, 104, 107, 108, 109, 128, 132, 159, 161, 195, 218, 240, 241, 255, 270, 379, 380, 381, 384, 390, 391, 409, 413, 415, 419, 427, 428, 438, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 458, 460, 461, 462, 466, 467, 473, 474, 478, 479, 487, 488, 491, 499, 501, 503, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562], "component_1": 379, "component_2": 379, "component_class": 466, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 374, 394], "composit": [57, 70, 80, 308, 394, 426], "compound": [195, 202, 213, 328, 332, 382, 391, 436, 438, 456, 517, 549], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 421], "compoundpixelregion": 332, "compoundskymodel": 379, "compoundskyregion": [202, 328, 332], "compoundsourcemodel": 379, "compoundspectralmodel": [250, 391, 433, 438, 474, 479, 529, 531, 535, 538, 540, 543, 548], "compress": 376, "compris": 480, "compromis": [368, 373, 381, 476], "compton": [241, 415, 539], "compulsori": 474, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 93, 95, 99, 100, 101, 103, 104, 108, 109, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 173, 174, 176, 179, 180, 181, 182, 184, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 201, 205, 212, 213, 216, 218, 220, 222, 223, 224, 228, 232, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 270, 271, 277, 278, 279, 281, 284, 285, 286, 287, 292, 293, 296, 300, 301, 304, 368, 377, 378, 379, 380, 381, 382, 383, 386, 388, 389, 390, 391, 392, 396, 398, 400, 401, 405, 407, 409, 410, 411, 412, 415, 416, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 439, 444, 446, 450, 451, 455, 456, 459, 460, 461, 463, 465, 467, 470, 473, 474, 475, 476, 479, 480, 481, 487, 489, 491, 499, 501, 503, 508, 512, 539, 561, 562, 563, 564, 565, 566, 567], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 205, 381, 382, 499], "compute_chisq": 426, "compute_differential_jfactor": 23, "compute_errn": [279, 281, 430, 565], "compute_errp": [279, 281, 565], "compute_flux_doubl": 132, "compute_fpp": 133, "compute_fvar": [134, 286], "compute_jfactor": [23, 465], "compute_lightcurve_doublingtim": 459, "compute_lightcurve_fpp": 459, "compute_lightcurve_fvar": 459, "compute_lima_map": 415, "compute_npr": 381, "compute_upper_limit": [279, 281], "computedfieldinfo": [16, 84, 103, 122], "con": [368, 384], "concaten": [83, 86, 91, 189, 192, 380, 384, 390, 433, 471], "concentr": 329, "concept": [16, 84, 103, 122, 388, 389, 395, 405, 465, 471, 504], "conception": [381, 390], "concern": [371, 373, 382, 384, 385, 387, 389, 391, 394, 419, 429, 480, 565], "conclud": 377, "concret": [16, 84, 103, 122, 385, 388], "conda": [367, 371, 375, 376, 385, 388, 393, 397, 398, 400, 401, 402, 403, 404, 409, 411, 427, 428, 563], "condit": [52, 53, 140, 192, 209, 211, 218, 240, 392, 396, 416, 437, 442, 445, 455, 466, 472, 473, 475, 480, 499, 508], "conduct": [430, 462], "cone": [90, 382, 443, 475, 487, 488, 503], "conesearch": 384, "conf": [87, 90, 368, 369, 398, 410, 425], "conf_1d": 460, "conf_3d": 460, "conf_max": [208, 210], "conf_min": [208, 210], "confid": [120, 205, 208, 210, 279, 281, 379, 386, 410, 415, 429, 562, 565], "confidence_opt": 205, "config": [15, 16, 84, 103, 122, 367, 369, 374, 376, 377, 384, 385, 388, 395, 400, 402, 412, 413, 414, 419, 427, 443, 450, 487, 560], "config_dict": 487, "config_joint": 450, "config_paramet": [116, 118, 119, 120, 124, 125, 127, 128, 129, 130, 131], "config_stack": 450, "config_str": 16, "configdict": [16, 84, 103, 122], "configpars": 425, "configur": [11, 15, 16, 46, 84, 87, 90, 100, 103, 108, 109, 116, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 317, 368, 369, 371, 377, 379, 383, 384, 388, 389, 395, 398, 404, 412, 414, 415, 419, 421, 430, 433, 434, 442, 444, 452, 454, 455, 478, 483, 502, 508, 562, 563], "confirm": 371, "conflict": [87, 90, 368, 371, 394], "confluenc": 481, "conform": [16, 84, 103, 122, 471], "confus": [368, 369, 374, 387], "connect": [378, 442, 456, 458, 472, 488, 560], "consant": [187, 188, 190, 196, 199, 200], "consciou": 373, "consecut": [170, 327, 368, 393], "consensu": [373, 394], "consent": 368, "consequ": [394, 455, 516], "conserv": [499, 524], "consid": [19, 20, 59, 95, 167, 174, 177, 178, 180, 181, 188, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 277, 364, 373, 374, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 394, 396, 439, 442, 444, 450, 454, 455, 459, 469, 472, 500, 508, 566], "consider": [384, 409, 419, 427, 450], "consist": [74, 90, 94, 121, 123, 145, 146, 157, 160, 187, 188, 190, 199, 200, 227, 230, 368, 378, 379, 381, 382, 383, 388, 395, 412, 413, 414, 415, 416, 423, 427, 428, 430, 432, 433, 434, 443, 444, 445, 446, 453, 458, 462, 468, 470, 471, 474, 476, 487, 537, 539, 564], "consol": [368, 563], "consortium": [395, 478], "const": [214, 215, 216, 217, 391, 455, 474, 532, 550], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 391, "constant": [50, 51, 52, 53, 101, 108, 116, 147, 187, 188, 190, 196, 198, 199, 200, 214, 215, 216, 217, 219, 231, 233, 326, 381, 382, 387, 427, 436, 460, 479, 496, 499, 517, 528, 549, 559, 562, 566], "constant_model": 550, "constantmodel": 429, "constantnormspectralmodel": 391, "constantspatialmodel": [249, 391, 474, 479, 519], "constantspectralmodel": [250, 391, 455, 474, 532], "constanttemporalmodel": [262, 391, 412, 474, 550], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 467, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 438, 447, 451, 470, 476, 510], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 503], "construct": [16, 84, 103, 122, 192, 234, 235, 334, 516, 562], "constructor": [185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 433, 488, 514], "consult": 403, "consum": [468, 503], "contact": [370, 375, 377, 394, 403, 405, 408, 409, 410, 424, 427], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 94, 95, 99, 100, 101, 103, 104, 107, 108, 109, 111, 121, 122, 123, 131, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 169, 172, 174, 179, 182, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 285, 295, 296, 361, 363, 365, 366, 368, 371, 372, 374, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 394, 397, 398, 405, 409, 413, 414, 415, 416, 418, 419, 421, 422, 425, 426, 427, 428, 429, 433, 434, 437, 440, 442, 443, 444, 447, 450, 451, 454, 455, 458, 460, 461, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 491, 492, 494, 499, 500, 501, 503, 507, 511, 512, 515, 516, 517, 560, 562, 564, 565, 566], "containment_correct": [16, 101, 104, 174, 437, 442, 443, 444, 447, 448, 450, 452, 460, 461, 463, 467, 470, 487], "containment_fract": 95, "containment_radiu": [148, 154, 156, 157, 158, 160, 437, 467, 469, 472], "containment_radius_map": [157, 160], "contains_pix": [185, 186, 195, 198], "contains_wcs_pix": 195, "contamin": [67, 448, 466, 472, 512], "content": [84, 103, 122, 123, 187, 188, 190, 196, 199, 200, 335, 368, 371, 373, 377, 383, 388, 395, 398, 413, 422, 427, 439, 471, 472, 478, 480, 500, 503, 514, 515], "content_typ": [16, 84, 103, 122], "context": [16, 84, 87, 90, 103, 122, 209, 211, 218, 240, 317, 346, 368, 383, 394, 398, 434, 471, 493], "contigu": [192, 197, 419], "continu": [192, 375, 377, 378, 381, 382, 384, 385, 387, 388, 393, 404, 407, 408, 411, 419, 424, 425, 426, 428, 442, 455, 472, 515, 562], "continuous_upd": [450, 458, 471, 487, 488], "contour": [202, 205, 360, 377, 429], "contour_": 468, "contour_alpha_amplitud": 468, "contour_alpha_beta": 468, "contour_beta_amplitud": 468, "contourf": 200, "contract": 394, "contrari": [369, 376], "contrast": [388, 562], "contrera": 429, "contribut": [99, 113, 115, 218, 226, 240, 255, 364, 368, 370, 377, 382, 390, 392, 398, 405, 408, 419, 421, 423, 470, 504, 539, 560, 563, 564], "contributes_to_stat": 99, "contributor": [368, 371, 388, 398, 406, 417, 418], "control": [83, 87, 90, 101, 104, 108, 109, 368, 381, 399, 401, 437, 465, 471, 476, 503, 565], "controversi": [368, 373, 374, 388], "conveni": [13, 121, 367, 368, 371, 378, 382, 390, 392, 399, 409, 411, 416, 419, 421, 426, 452, 465, 466, 467, 471, 472, 473, 474, 478, 480, 489, 498, 502, 561], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 186, 187, 188, 190, 198, 199, 200, 390, 392, 411, 412, 415, 416, 430, 467, 470, 471, 474, 499, 501, 508, 515, 565], "converg": [396, 410, 431, 442, 444, 450, 468, 499, 503, 510, 520], "convers": [84, 87, 90, 103, 121, 122, 123, 373, 392, 395, 400, 402, 419, 432, 433, 434, 437, 516], "conversion_typ": [479, 489], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 90, 98, 100, 101, 104, 106, 108, 109, 121, 123, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 206, 207, 208, 209, 210, 211, 218, 232, 240, 277, 294, 297, 298, 302, 315, 331, 349, 351, 352, 369, 374, 382, 383, 392, 395, 398, 420, 432, 433, 434, 437, 448, 453, 461, 462, 467, 468, 472, 473, 478, 489, 501, 507, 512, 515, 565, 567], "convert_bytestring_to_unicod": [87, 90], "convert_unicode_to_bytestr": [87, 90], "convinc": 489, "convolut": [116, 120, 126, 131, 155, 188, 200, 367, 380, 386, 407, 414, 416, 425, 427, 428, 434, 448, 471, 499, 516], "convolution_method": 188, "convolv": [104, 110, 114, 131, 155, 188, 200, 379, 407, 416, 419, 428, 445, 446, 448, 471, 509, 539], "convolve_ful": 188, "convolve_wc": 188, "cookiecutt": 384, "coolwarm": [450, 479, 480, 488], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 242, 285, 379, 412, 455, 471, 472, 512, 515, 516, 523], "coord_to_idx": [185, 186, 189, 191, 192, 195, 197, 198, 471], "coord_to_pix": [185, 186, 189, 191, 192, 195, 197, 198, 471], "coordiant": 469, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 93, 94, 95, 101, 102, 104, 107, 108, 109, 121, 123, 125, 126, 127, 132, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 170, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 218, 219, 227, 230, 232, 240, 242, 244, 252, 253, 255, 267, 285, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 319, 325, 329, 330, 344, 369, 373, 374, 375, 377, 381, 382, 387, 388, 391, 393, 394, 407, 409, 412, 414, 425, 427, 428, 430, 437, 439, 442, 444, 445, 448, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 488, 489, 499, 507, 512, 514, 515, 520, 521, 524, 561, 562, 567], "coordsi": 414, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 98, 99, 100, 101, 103, 104, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 145, 146, 149, 152, 157, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 340, 368, 373, 376, 378, 382, 384, 390, 397, 398, 404, 419, 421, 428, 429, 430, 433, 438, 439, 442, 444, 445, 450, 452, 458, 461, 462, 466, 468, 470, 474, 476, 479, 503, 512, 516, 527, 563], "copy_data": [87, 90, 218, 226, 240, 255, 263, 265, 267], "copy_indic": [87, 90], "copy_ob": [82, 503], "copy_on_getitem": [87, 90], "copyright": 404, "core": [16, 53, 84, 103, 122, 153, 367, 368, 375, 381, 382, 389, 393, 394, 405, 408, 425, 429, 433, 437, 444, 445, 447, 450, 452, 454, 456, 458, 462, 473, 478, 479, 491, 501, 563], "corner": [382, 385, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "corr_coord": [157, 160], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 101, 102, 104, 146, 157, 160, 174, 179, 180, 193, 226, 242, 243, 267, 368, 380, 381, 393, 394, 395, 397, 411, 414, 416, 417, 418, 419, 422, 425, 426, 428, 430, 431, 432, 433, 434, 437, 438, 442, 443, 444, 445, 454, 458, 460, 466, 467, 468, 470, 472, 473, 474, 476, 480, 487, 489, 500, 501, 510, 523, 535, 538, 540, 543, 548], "correctli": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 369, 371, 394, 395, 409, 411, 416, 421, 422, 431, 469, 470, 471, 472, 473, 476, 515, 521], "correl": [19, 20, 26, 120, 126, 203, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 268, 386, 391, 392, 419, 429, 453, 456, 468, 472, 474, 476, 487, 501, 560], "correlate_off": 120, "correlation_radiu": [16, 120, 136, 137, 443, 447, 448, 450, 463, 480, 487, 501], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 84, 87, 89, 90, 99, 101, 103, 104, 108, 109, 121, 122, 123, 124, 125, 126, 128, 129, 131, 144, 145, 146, 152, 155, 157, 159, 160, 161, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 212, 213, 216, 220, 222, 223, 224, 227, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 295, 361, 378, 379, 380, 381, 388, 389, 392, 394, 396, 413, 416, 439, 440, 442, 443, 444, 450, 454, 455, 460, 466, 468, 470, 471, 474, 475, 476, 478, 479, 480, 487, 489, 499, 500, 501, 503, 515, 516, 526, 529, 561, 562, 567], "cosimo": [416, 419, 421, 427, 428, 430, 433], "cosmic": [52, 220, 270, 386, 478], "cost": 562, "costom": 476, "costomprior": 476, "costum": 476, "coto": 427, "could": [16, 84, 103, 122, 369, 371, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 398, 439, 442, 450, 452, 466, 478, 479, 487, 502], "count": [16, 83, 91, 99, 101, 104, 105, 106, 107, 108, 109, 112, 116, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 135, 162, 164, 167, 168, 169, 174, 176, 180, 184, 187, 188, 190, 191, 192, 196, 199, 200, 209, 211, 218, 240, 279, 281, 282, 283, 288, 289, 292, 294, 319, 353, 355, 364, 366, 374, 376, 379, 380, 381, 383, 384, 388, 392, 410, 411, 414, 416, 419, 421, 422, 428, 429, 433, 434, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 456, 458, 460, 461, 462, 463, 467, 468, 470, 471, 472, 476, 480, 485, 487, 488, 489, 501, 503, 507, 510, 511, 512, 513, 516, 562, 563, 564, 566], "count_bkg": 463, "count_statist": 565, "counter": [219, 227, 230, 520], "counts_3d": 471, "counts_imag": [456, 467], "counts_min": 140, "counts_off": [101, 104, 105, 108, 109, 162, 168, 169, 172, 366, 380, 421, 432, 433, 438, 443, 444, 445, 448, 452, 463, 467, 499, 565], "counts_on": 410, "counts_rat": 467, "countspredictor": 379, "countsspectrum": [380, 383, 410, 411, 413, 415, 424], "countsstatist": [279, 281, 392, 415, 416, 419, 430], "coupl": [376, 382, 387, 398, 416, 428, 471], "cours": [368, 371, 375, 378, 385, 404, 443, 450, 467, 471, 479, 487, 563, 566], "cousin": [410, 416, 424, 426, 562], "cousins2007": [562, 565], "coutinho": [416, 419], "cov": [246, 247, 398], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [203, 361, 429], "covar_list": 203, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 124, 125, 128, 129, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 361, 386, 396, 415, 421, 429, 430, 433, 443, 487, 565], "covariance_data": [218, 226, 240, 255, 265], "covariance_opt": 205, "covariance_result": 206, "covariance_typ": 396, "covariancegaussianprior": 396, "covariancemixin": [213, 218, 255], "covarianceresult": [100, 205, 206, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488], "cover": [266, 368, 370, 382, 383, 384, 392, 439, 460, 461, 467, 471, 483, 489, 504], "coverag": [377, 383, 398, 407, 411, 419, 425, 428, 461, 468], "coveral": [398, 407], "cpu": [124, 125, 128, 131, 317, 318, 381], "cpython": 373, "crab": [67, 83, 108, 109, 129, 140, 237, 271, 277, 376, 380, 388, 407, 413, 425, 427, 442, 443, 444, 451, 452, 460, 466, 467, 468, 472, 476, 479, 480, 481, 487, 488, 489, 501, 512, 516, 562], "crab_10gev_100tev_dataset": 451, "crab_3fhl": 489, "crab_3fhl_spec": 489, "crab_events_pass4": 480, "crab_fp": 443, "crab_fp_tabl": 443, "crab_hess_ecpl": 271, "crab_hess_fp": [121, 123, 139], "crab_magic_lp": 444, "crab_model": 468, "crab_posit": 512, "crab_spec": 451, "crab_spectrum": 468, "crabnebula": 460, "crabspectrum": 411, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 114, 116, 121, 122, 123, 124, 125, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 169, 170, 171, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 277, 297, 307, 328, 332, 346, 355, 357, 362, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 411, 412, 413, 416, 419, 421, 427, 428, 430, 431, 432, 433, 434, 437, 438, 440, 443, 444, 445, 450, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 465, 466, 468, 470, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 489, 491, 498, 499, 500, 503, 507, 510, 512, 513, 514, 515, 519, 521, 522, 523, 524, 529, 539, 548, 560, 561, 563, 568], "create_crab_spectral_model": [442, 444, 451], "create_fermi_isotropic_diffuse_model": [473, 479], "create_map_dataset_from_observ": [92, 107], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 125, 198, 377, 378, 382, 391, 394, 413, 419, 459, 474, 481], "creator": [103, 122, 371, 395, 443, 474, 487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "creatormedadata": 395, "creatormetadata": [84, 103, 122, 395], "credit": 404, "crimson": 444, "criteria": [15, 90, 421, 470, 475, 483], "criterion": [90, 131, 295, 437, 503], "critic": 476, "criticis": 359, "crop": [86, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200], "crop_width": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200], "cross": [19, 374, 388, 491], "crowd": 466, "crpix": 198, "crpix1": 471, "crpix2": 471, "crucial": [395, 454, 455, 467], "cruft": 398, "crux": [33, 38], "crval1": 471, "crval2": 471, "cryptic": 379, "csh": 563, "csobsselect": 378, "css": [87, 90, 398], "cstat": [380, 413], "csv": 123, "ct": [353, 428, 468], "cta": [82, 83, 89, 101, 104, 108, 109, 113, 115, 116, 120, 136, 137, 142, 146, 147, 148, 157, 167, 220, 270, 356, 361, 363, 368, 372, 375, 376, 377, 381, 384, 387, 388, 397, 400, 405, 408, 409, 419, 425, 426, 427, 428, 436, 437, 443, 445, 447, 450, 452, 454, 455, 458, 462, 463, 467, 469, 473, 475, 480, 481, 482, 483, 487, 491, 500, 501, 503, 505, 508, 561, 562, 567], "cta_data_analysi": [388, 436, 452, 457], "cta_dataset": 473, "cta_north": 96, "cta_sensist": 388, "cta_sensit": [436, 437, 441], "cta_simul": 408, "cta_south": [96, 437, 445, 454, 455, 458, 462], "cta_util": 428, "ctadata": 478, "ctao": [388, 394, 478, 503], "ctapip": [371, 375, 377, 384, 385, 387, 388, 389], "ctaspectrumobserv": 428, "ctobssim": [82, 381], "ctool": [378, 381, 384, 388, 537], "cts_sigma": 468, "ctselect": 378, "ctype1": 471, "ctype2": 471, "cube": [46, 101, 104, 131, 162, 180, 187, 188, 190, 196, 199, 200, 236, 255, 368, 379, 380, 381, 387, 388, 389, 391, 400, 407, 411, 412, 415, 420, 423, 424, 425, 426, 427, 428, 446, 447, 452, 456, 479, 489, 499, 508, 510, 515, 516, 562], "cubic": 471, "cumbersom": [378, 386], "cumsum": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200], "cumul": [99, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 319, 381, 442, 454, 473, 503], "cunit1": 471, "cunit2": 471, "curat": [398, 408], "curl": [67, 385, 399, 400, 402, 478], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 104, 108, 109, 123, 124, 128, 150, 173, 185, 186, 187, 188, 190, 196, 197, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 346, 362, 368, 369, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 402, 411, 429, 443, 465, 469, 470, 471, 473, 478, 480, 481, 487, 488, 492, 499, 500, 501, 516, 560, 562, 563], "curv": [15, 19, 20, 26, 73, 77, 83, 128, 132, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 287, 360, 372, 379, 381, 384, 388, 392, 400, 409, 413, 415, 416, 420, 423, 424, 426, 428, 430, 433, 434, 436, 437, 459, 464, 483, 499, 500, 501, 502, 511, 512, 515, 517, 559, 561], "curve_fit": 361, "cuspi": 491, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 103, 122, 127, 377, 378, 379, 384, 386, 391, 395, 399, 413, 414, 416, 428, 437, 445, 447, 450, 452, 458, 462, 467, 469, 471, 478, 503, 548], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 474, "customis": [388, 469], "cut": [90, 120, 159, 173, 174, 378, 427, 433, 436, 437, 441, 445, 463, 467, 470, 471, 475, 478, 483, 488, 489, 499, 500, 511, 512, 515, 560], "cutoff": [222, 223, 224, 259, 260, 261, 277, 413, 433, 436, 445, 450, 517, 549], "cutout": [101, 104, 108, 109, 113, 115, 145, 146, 152, 157, 160, 163, 186, 188, 196, 198, 200, 265, 374, 380, 409, 414, 419, 425, 428, 447, 448, 450, 452, 456, 467, 470, 479, 488, 489, 499], "cutout2d": [101, 104, 145, 146, 152, 157, 160, 163, 198, 200, 265, 374], "cutout_and_mask_region": [200, 433], "cutout_info": 413, "cutout_mod": 163, "cutout_slic": 198, "cutout_width": 163, "cval": [187, 188, 190, 196, 199, 200], "cwd": 376, "cwt": [388, 413, 425, 428], "cx": 468, "cxc": [205, 388, 468], "cy": 468, "cyan": 365, "cycl": [365, 371, 372, 373, 385, 387, 401, 426, 430], "cycler": [365, 437], "cython": [371, 410, 420], "d": [19, 20, 23, 87, 89, 90, 191, 194, 197, 232, 237, 248, 266, 271, 336, 371, 386, 388, 421, 430, 440, 454, 455, 462, 471, 474, 475, 508, 515, 520, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563, 566], "dai": [87, 90, 121, 123, 197, 225, 229, 231, 248, 254, 371, 382, 388, 397, 398, 471, 556, 563], "daniel": [429, 432, 434], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 388, 396, 428, 433, 434, 436, 477, 483, 492, 515, 561], "dark_matter_spectra": 26, "darkbit": 491, "darkblu": 476, "darkgreen": 476, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 250, 369, 388, 428, 465, 492], "darkmatterannihilationspectralmodel": [20, 250, 430, 465, 474], "darkmatterdecayspectralmodel": [250, 434, 465, 474], "darkorang": [442, 443], "darksusi": 491, "darwin": 404, "dash": [463, 465, 476], "dashboard": 398, "dat": [26, 87, 90, 218, 240, 443, 487, 491], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 173, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 282, 287, 288, 290, 291, 294, 295, 296, 305, 306, 309, 327, 335, 338, 339, 347, 356, 357, 358, 359, 361, 362, 367, 369, 372, 375, 378, 379, 380, 381, 382, 384, 387, 388, 389, 390, 391, 392, 394, 396, 397, 400, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 440, 445, 446, 447, 448, 452, 454, 455, 458, 462, 465, 466, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 485, 490, 491, 498, 499, 501, 503, 505, 506, 507, 508, 509, 510, 512, 513, 515, 516, 522, 523, 535, 538, 540, 542, 543, 548, 560, 561, 562, 565, 566, 567], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [185, 186, 195, 198], "data_path": 480, "data_reduct": 384, "data_shap": [100, 101, 104, 108, 109, 185, 186, 195, 198, 467, 516], "data_shape_ax": [186, 195, 198], "data_shape_imag": 198, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 95, 167, 295, 296, 384, 404, 444, 452, 454, 461, 463, 470, 475, 478, 480, 481, 485, 488, 500, 510, 512, 513], "data_storag": 500, "data_summari": 425, "dataaxi": 410, "databas": [374, 503], "dataclass": 368, "datafram": [87, 90], "dataset": [6, 15, 16, 19, 20, 26, 63, 93, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 138, 140, 145, 146, 152, 157, 160, 162, 163, 164, 167, 168, 169, 172, 173, 174, 189, 194, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 317, 361, 364, 365, 371, 372, 374, 376, 381, 383, 384, 385, 387, 388, 392, 396, 397, 398, 400, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440, 442, 445, 446, 452, 453, 454, 456, 458, 463, 465, 466, 471, 474, 475, 477, 478, 479, 481, 483, 485, 489, 500, 501, 503, 508, 510, 511, 512, 513, 515, 523, 527, 529, 557, 558, 560, 561, 562, 563, 564, 565], "dataset1": [476, 499], "dataset1_prior": 476, "dataset2": [476, 499], "dataset2_prior": 476, "dataset_1": 501, "dataset_2": 501, "dataset_3fgl": 440, "dataset_3fhl": 440, "dataset_cta": 467, "dataset_empti": [439, 442, 444, 445, 452, 461, 467, 470, 480, 512], "dataset_energy_depend": 453, "dataset_fak": 445, "dataset_fp": 462, "dataset_gammacat": 440, "dataset_hawc": 451, "dataset_hess": [451, 468], "dataset_imag": [452, 467], "dataset_kwarg": [92, 107], "dataset_lc": 462, "dataset_mak": [442, 444, 452, 461, 470, 512], "dataset_nam": [107, 111, 128, 218, 226, 240, 390, 396, 450, 454, 455, 458, 467, 473, 488, 523], "dataset_on_off": [162, 168, 169, 172, 437, 442, 444, 445, 448, 452, 461, 470, 512, 513], "dataset_on_off1": 437, "dataset_onoff": 380, "dataset_simul": 444, "dataset_stack": [442, 450], "datasetmodel": [207, 240, 255, 390, 416, 454, 455, 458], "datasetread": 105, "datasets1": 365, "datasets2": 365, "datasets3": 365, "datasets_fil": [16, 443, 447, 448, 450, 487], "datasets_hess": 451, "datasets_in_phase_bin_3": 392, "datasets_mak": 470, "datasets_nam": [19, 20, 26, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 415, 451, 473, 487, 523], "datasets_read": [473, 479], "datasets_sl": 467, "datasetsconfig": 16, "datasetsmak": [165, 421, 433, 470, 475, 503], "datasetsmetadata": 395, "datasetwrit": 106, "datastor": [16, 89, 95, 167, 295, 296, 374, 378, 383, 400, 404, 410, 421, 422, 424, 425, 427, 433, 434, 439, 442, 443, 444, 447, 448, 450, 452, 454, 458, 461, 463, 470, 475, 480, 481, 485, 487, 503, 510, 512, 513, 563], "datastorecheck": 428, "datastoreindex": 378, "datastoreinmemori": 378, "datastoremak": [410, 421], "datastoremetadata": 395, "datastoreobserv": [168, 374, 378, 414, 427], "datastorexml": 378, "datasum": [83, 86, 88, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 144, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200], "datat": [87, 90], "date": [87, 90, 103, 122, 349, 385, 393, 394, 395, 397, 405, 427, 443, 446, 474, 481, 487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 567], "datefmt": [16, 443, 447, 448, 450, 487, 563], "dateref": 446, "datetim": [103, 122, 395], "datetime64": [87, 90], "datfix": 446, "daughter": 395, "david": [378, 383, 408, 428, 429], "dc": [450, 478], "dc1": [377, 388, 429, 454, 463, 469, 473, 478], "dc2": 377, "ddof": 459, "de": [19, 20, 26, 67, 99, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 294, 394, 416, 419, 422, 465, 481, 562], "deabsorb": 438, "deactiv": 399, "dead": [83, 86, 88, 327, 378], "dead_tim": [83, 88, 327], "deadc": 378, "deadlin": [377, 381], "deadtim": [88, 180, 445, 454, 458, 478], "deadtime_fract": 88, "deal": [86, 368, 374, 383, 384, 445, 454, 461, 483, 503], "debanjan": 410, "debian": [385, 401, 423], "debug": [11, 368, 374, 379, 384, 430, 442, 471, 503, 563], "dec": [67, 83, 85, 87, 88, 90, 93, 136, 137, 170, 368, 369, 373, 377, 379, 381, 384, 385, 388, 406, 432, 437, 442, 444, 446, 448, 452, 455, 460, 461, 463, 466, 470, 472, 478, 479, 480, 481, 488, 489, 491, 503, 507, 512, 567], "dec_pnt": 481, "dec_tru": 381, "decad": [17, 18, 21, 22, 24, 25, 27, 111, 192, 273, 434, 454], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 225, 231, 248, 391, 454, 459, 462, 474, 491, 553], "decemb": 406, "decid": [368, 374, 377, 378, 379, 380, 382, 383, 387, 390, 391, 392, 397, 443, 475, 487, 567], "decim": [87, 90, 293], "decis": [368, 369], "declar": [15, 87, 90, 255, 347, 348, 371, 375, 376, 379, 384, 385, 391, 398, 415, 502], "decor": [347, 348, 368, 395, 563], "decorrel": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "decoupl": 69, "dedic": [371, 382, 383, 392, 394, 395, 398, 414, 415, 416, 434, 442, 443, 444, 450, 463, 468, 487, 488, 500], "deduc": [392, 434], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 98, 99, 100, 101, 103, 104, 108, 109, 121, 122, 123, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 268, 269, 450], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 263, 265, 267], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 280, 347, 348, 368, 369, 379, 380, 381, 382, 391, 392, 395, 396, 442, 450, 468, 474, 476, 485, 512, 563, 565], "def_unit": [437, 445, 447, 450, 452, 458, 462, 478], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 286, 287, 288, 293, 294, 295, 297, 308, 309, 310, 315, 317, 318, 324, 325, 326, 327, 329, 330, 335, 337, 339, 345, 350, 351, 355, 357, 358, 359, 361, 362, 364, 365, 368, 374, 380, 384, 385, 391, 394, 398, 404, 410, 412, 413, 414, 416, 419, 421, 427, 428, 430, 431, 432, 433, 434, 442, 443, 444, 446, 448, 450, 454, 455, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 479, 487, 488, 489, 499, 501, 503, 510, 513, 514, 515, 516, 520, 521, 522, 529, 535, 538, 539, 563, 567], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 90], "default_css_nb": [87, 90], "default_epoch": 351, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 426], "default_nam": [87, 90], "default_notebook_table_class": [87, 90], "default_obs_t": 82, "default_paramet": [19, 20, 26, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 396], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [141, 142, 147, 149, 154, 159, 469], "defer": [104, 109], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 94, 100, 101, 102, 103, 104, 107, 108, 109, 113, 115, 120, 121, 122, 123, 124, 125, 127, 128, 131, 144, 145, 146, 148, 152, 155, 156, 157, 158, 160, 163, 164, 168, 173, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 280, 282, 288, 289, 309, 319, 324, 325, 326, 327, 330, 358, 359, 368, 369, 371, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 389, 390, 392, 393, 394, 395, 396, 399, 400, 401, 402, 409, 410, 413, 416, 419, 422, 426, 427, 432, 433, 434, 438, 443, 445, 446, 447, 448, 450, 451, 453, 456, 458, 459, 462, 463, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 487, 489, 499, 500, 501, 503, 505, 508, 512, 513, 515, 520, 522, 524, 525, 526, 529, 530, 533, 534, 536, 537, 539, 541, 542, 544, 545, 546, 547, 548, 558, 560, 561, 562, 563, 564, 565, 566], "definit": [83, 84, 86, 88, 99, 101, 103, 104, 108, 109, 122, 164, 195, 280, 294, 308, 368, 377, 378, 382, 389, 390, 391, 392, 395, 411, 415, 416, 432, 434, 442, 444, 447, 456, 461, 469, 470, 487, 499, 501, 508, 509, 514, 516, 520, 521, 565], "deform": 516, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 90, 93, 95, 101, 104, 108, 109, 111, 112, 113, 115, 116, 120, 125, 126, 131, 136, 137, 146, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 170, 171, 173, 175, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 218, 219, 227, 230, 240, 244, 252, 253, 255, 295, 296, 329, 363, 368, 369, 379, 382, 384, 391, 392, 395, 404, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 487, 488, 489, 500, 501, 503, 505, 507, 510, 512, 513, 514, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527], "deg2": 481, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 111, 112, 118, 121, 123, 138, 186, 187, 188, 190, 193, 198, 199, 200, 218, 240, 244, 255, 266, 434, 437, 439, 443, 448, 453, 461, 466, 470, 471, 472, 478, 487, 501, 515, 516, 565, 566], "deil": [373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 407, 408, 409, 410, 411, 412, 413, 414, 420, 423, 424, 425, 426, 427, 428, 429], "deiml": 427, "dej2000": [466, 489], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 379], "delai": [389, 393], "deleg": 384, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 368, 379, 398, 399, 400, 402, 434, 473], "delete_interv": 86, "delimit": 123, "deliv": 384, "delta": [19, 20, 23, 87, 90, 120, 121, 126, 129, 131, 149, 197, 246, 247, 278, 293, 433, 438, 468, 476, 501, 508, 509, 521, 522, 524, 565], "delta_t": [118, 278, 453], "demonstr": [384, 409, 412, 413, 414, 415, 416, 421, 433, 434, 459, 460, 471, 473, 483, 515], "denot": [101, 108, 392, 499], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 100, 123, 149, 200, 323, 326, 361, 381, 448, 450, 465, 466, 476, 491, 493, 497, 507, 508, 509, 562], "dep": 433, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 99, 101, 102, 107, 108, 118, 121, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 174, 185, 186, 195, 198, 200, 218, 232, 240, 255, 297, 348, 368, 370, 371, 372, 374, 379, 380, 381, 382, 383, 386, 387, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 412, 413, 416, 423, 425, 428, 429, 431, 433, 434, 436, 437, 441, 445, 447, 448, 457, 461, 466, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 483, 499, 500, 503, 507, 508, 511, 512, 515, 529, 560], "deploy": 394, "deposit": 394, "deprec": [16, 83, 84, 85, 88, 103, 122, 124, 125, 128, 208, 210, 410, 419, 432, 433, 434, 527], "deprecated_argument_funct": 368, "deprecated_argument_function_kwarg": 368, "deprecated_attribut": 368, "deprecated_funct": 368, "deprecated_renamed_argu": 368, "deprecatedparseprotocol": [16, 84, 103, 122], "deprecation_polici": 393, "depriv": 510, "depth": [16, 84, 103, 122, 336, 400, 405, 438, 459, 529], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 99, 120, 124, 128, 131, 266, 368, 380, 381, 386, 389, 392, 446, 478, 480, 501, 515, 564, 565], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 94, 123, 124, 126, 131, 156, 196, 205, 268, 289, 369, 371, 373, 374, 377, 378, 380, 381, 382, 384, 385, 387, 388, 391, 392, 393, 394, 405, 411, 419, 427, 428, 443, 446, 454, 455, 459, 468, 474, 476, 478, 480, 481, 487, 499, 503, 507, 516, 517, 562, 563, 564, 565], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 90, 125, 205, 369, 373, 374, 382, 388, 393, 394, 405, 430, 434, 450, 458, 466, 468, 471, 478, 480, 487, 488, 503], "description_width": [450, 458, 471, 487, 488], "descriptionstyl": [450, 458, 471, 487, 488], "descriptor": [87, 88, 90, 101, 104, 108, 109, 265, 306, 369, 415], "desi": 481, "design": [373, 374, 377, 378, 381, 382, 384, 388, 390, 392, 393, 407, 427, 434], "desir": [16, 84, 87, 90, 103, 122, 155, 185, 186, 195, 198, 343, 344, 345, 471, 489, 516], "desktop": 405, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 99, 101, 104, 109, 123, 124, 145, 146, 152, 157, 160, 163, 186, 198, 200, 205, 208, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 265, 266, 267, 368, 369, 371, 373, 376, 377, 378, 381, 382, 383, 387, 388, 389, 393, 394, 397, 399, 403, 405, 406, 413, 417, 418, 436, 437, 438, 442, 444, 445, 446, 447, 452, 453, 454, 457, 458, 462, 467, 468, 470, 471, 472, 473, 474, 476, 478, 480, 481, 483, 488, 489, 499, 500, 502, 508, 512, 513, 515, 560, 561, 562, 563, 567], "detect": [59, 136, 137, 277, 358, 359, 369, 384, 387, 388, 390, 407, 413, 414, 415, 425, 427, 428, 434, 436, 449, 466, 478, 480, 483, 499, 515, 562, 565], "detect_t": 388, "detector": [83, 88, 102, 107, 149, 472, 480, 508, 562], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 111, 130, 148, 154, 156, 158, 170, 171, 173, 175, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 297, 319, 379, 383, 386, 394, 421, 433, 434, 437, 444, 447, 448, 453, 460, 470, 472, 493, 561], "determinist": 368, "deti": [83, 102, 107, 381, 478], "detx": [83, 102, 107, 381, 478], "dev": [11, 16, 82, 84, 103, 122, 368, 370, 371, 384, 394, 397, 398, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 529, 557, 558], "dev562": [103, 122, 405, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "develop": [369, 373, 374, 376, 377, 378, 379, 381, 382, 384, 385, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 401, 405, 407, 420, 427, 428, 429, 478], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 124, 188, 200, 205, 284, 468, 476], "devoid": [442, 506], "devop": 394, "devot": 483, "dex": 297, "df": [87, 90, 118, 138, 453, 468, 565], "diagnosi": 377, "diagnost": 384, "diagon": [144, 145, 146, 386, 396, 479], "diagram": 567, "dialog": [400, 402], "diamet": [186, 187, 188, 439], "diamond": 475, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 116, 118, 121, 122, 123, 124, 125, 126, 128, 129, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 172, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 277, 278, 279, 280, 281, 285, 295, 309, 317, 318, 335, 336, 337, 339, 349, 350, 351, 352, 355, 356, 357, 361, 362, 363, 364, 365, 368, 383, 385, 389, 392, 395, 412, 416, 419, 427, 443, 450, 460, 461, 466, 468, 471, 475, 487, 488, 515, 520, 529], "dict_kei": [438, 529], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 118, 121, 122, 123, 124, 125, 128, 129, 131, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 172, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 279, 280, 281, 285, 307, 335, 336, 337, 339, 349, 352, 362, 385, 387, 392, 395, 396, 442, 444, 450, 468, 469, 475, 476, 558], "dictionnari": 361, "did": [375, 382, 387, 388, 389, 391, 394, 410, 437, 445, 447, 450, 452, 458, 462, 468, 476, 478], "didn": [83, 88, 375, 378, 382, 385, 491], "diff": [100, 101, 104, 108, 109, 368, 371, 376, 380, 450, 458, 488], "diff_flux": 465, "diff_flux_point": [100, 467], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 90, 93, 99, 118, 121, 123, 124, 125, 128, 129, 131, 136, 141, 142, 143, 144, 147, 149, 151, 154, 159, 169, 187, 188, 190, 193, 194, 195, 196, 198, 199, 200, 277, 278, 279, 281, 327, 331, 343, 344, 359, 368, 369, 371, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 398, 400, 402, 411, 414, 416, 426, 429, 430, 431, 433, 437, 442, 443, 444, 447, 450, 453, 454, 455, 456, 459, 460, 462, 466, 467, 468, 470, 472, 473, 474, 475, 476, 479, 480, 483, 487, 489, 491, 499, 501, 503, 508, 515, 516, 521, 522, 561, 563, 564, 565], "different": 376, "differenti": [23, 79, 121, 123, 130, 187, 188, 190, 192, 196, 199, 200, 241, 255, 270, 271, 324, 374, 379, 386, 392, 426, 471, 474, 479, 489, 501, 562], "differential_flux": 123, "difficult": [379, 382, 398], "diffus": [68, 187, 188, 190, 196, 199, 200, 272, 368, 384, 387, 428, 429, 450, 454, 466, 471, 473, 474, 478, 560], "diffuse_cub": 474, "diffuse_galactic_fermi": 473, "diffuse_iem": [473, 479], "diffuse_iso": [473, 479], "diffuse_model": 272, "difrsp0": [479, 489], "difrsp1": [479, 489], "difrsp2": [479, 489], "difrsp3": [479, 489], "difrsp4": [479, 489], "digit": 368, "digzmlwv": 470, "dilat": [200, 419], "dim": [154, 326, 424, 425, 452, 562], "dimens": [46, 53, 101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 169, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 263, 264, 267, 297, 309, 361, 384, 416, 427, 429, 433, 468, 469, 471, 474, 483, 499, 515, 516, 521], "dimension": [31, 32, 37, 68, 87, 90, 185, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 227, 230, 273, 310, 323, 374, 382, 396, 400, 425, 446, 468, 469, 471, 474, 489, 507, 509, 515, 516, 561, 562], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 149, 260, 261, 296, 456, 474], "dimitri": [419, 421], "dipol": [51, 54], "dirac": 19, "direct": [90, 103, 159, 177, 178, 181, 183, 192, 219, 227, 230, 301, 304, 369, 374, 380, 382, 387, 389, 392, 395, 419, 436, 441, 445, 470, 483, 499, 500, 508, 509, 511, 512, 515, 520, 560, 561, 562], "directional_offset_bi": [437, 445], "directli": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 87, 88, 90, 135, 159, 174, 187, 188, 190, 196, 199, 200, 263, 265, 267, 368, 370, 371, 373, 375, 376, 379, 380, 381, 382, 386, 388, 395, 400, 402, 403, 407, 409, 410, 411, 413, 427, 434, 440, 442, 443, 445, 450, 451, 452, 455, 456, 458, 459, 461, 462, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478, 479, 487, 488, 489, 491, 499, 503, 508, 512, 515, 539, 565], "directori": [11, 82, 87, 368, 384, 443, 453, 481, 487, 489, 500, 503, 563], "dirk": [410, 424, 426], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 419], "disable_unicode_literals_warn": 368, "disadvantag": 563, "disagr": 373, "disambigu": 373, "disc": [447, 448, 450, 455], "discard": [395, 466], "discard_on_copi": [87, 90], "discarded_ind": 466, "discarded_spati": 466, "discarded_t": 466, "disccus": 377, "discourag": 368, "discov": 563, "discrep": 442, "discret": [90, 293, 381, 468, 515], "discuss": [13, 59, 268, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 405, 427, 476, 481, 491, 492, 567], "disjoint": 382, "disk": [82, 109, 146, 149, 188, 198, 200, 219, 230, 232, 346, 367, 368, 378, 379, 380, 384, 391, 392, 436, 437, 442, 450, 451, 471, 472, 473, 474, 514, 517, 522, 526, 528], "disk_inc": 382, "diskspatialmodel": [72, 249, 391, 412, 433, 473, 474, 520], "dismiss": 99, "disp": [507, 508], "dispatch": 379, "dispers": [82, 88, 101, 102, 104, 106, 107, 108, 109, 110, 112, 114, 144, 145, 146, 149, 167, 173, 174, 177, 178, 181, 368, 374, 379, 380, 381, 413, 415, 425, 426, 427, 429, 437, 439, 442, 443, 450, 454, 470, 480, 481, 487, 488, 499, 508, 511, 562], "displac": 301, "displai": [11, 15, 82, 87, 90, 116, 128, 131, 205, 285, 318, 361, 365, 368, 369, 398, 419, 422, 433, 434, 437, 439, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 456, 458, 460, 462, 463, 466, 467, 468, 470, 471, 473, 474, 478, 479, 480, 481, 488, 503, 563], "display_length": [87, 90], "disrupt": [408, 409], "dissolv": 412, "dist": [320, 398], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 125, 136, 137, 195, 241, 267, 293, 300, 326, 382, 425, 432, 444, 446, 456, 465, 466, 468, 497, 512, 539], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 465], "distance_max": [46, 47, 326, 466], "distance_min": [47, 326, 466], "distance_refer": 466, "distinct": [383, 384, 389, 480, 566], "distinguish": [279, 281, 392, 395, 437, 471], "distort": [382, 411], "distrib": [100, 442], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 100, 107, 138, 149, 184, 224, 235, 241, 279, 281, 319, 320, 324, 361, 364, 366, 367, 368, 372, 373, 376, 381, 386, 387, 390, 393, 394, 398, 401, 412, 421, 427, 433, 434, 437, 442, 444, 445, 448, 450, 454, 456, 458, 460, 468, 473, 476, 478, 489, 491, 503, 507, 508, 510, 516, 524, 539, 564, 565], "divers": 392, "divid": [186, 192, 197, 389, 392, 454, 475, 480, 481], "djangoproject": 388, "djuvsland": 434, "dl3": [6, 16, 82, 83, 86, 88, 90, 95, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 173, 191, 192, 295, 296, 369, 374, 376, 377, 379, 388, 395, 400, 404, 410, 413, 415, 421, 430, 434, 439, 442, 443, 444, 447, 448, 450, 460, 461, 470, 472, 475, 485, 487, 488, 499, 503, 505, 506, 507, 509, 510, 512, 513, 561, 562], "dl4": [98, 100, 101, 104, 108, 109, 116, 120, 124, 128, 131, 152, 173, 374, 395, 400, 415, 462, 467, 468, 503, 561, 562], "dl5": [116, 120, 124, 128, 131, 395, 434, 462, 468, 561, 562], "dl6": [116, 120, 124, 128, 131, 561, 562], "dm": [19, 20, 26, 397, 415, 430, 465, 474], "dm_exampl": 491, "dmfitfunct": 491, "dmpipe": 491, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 465], "dmsky": 491, "dn": [224, 235, 465], "dnde": [19, 20, 26, 67, 121, 122, 123, 130, 132, 133, 134, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 392, 419, 440, 442, 443, 452, 456, 466, 467, 474, 479, 487, 489, 501], "dnde_cu": 271, "dnde_err": [121, 123, 501], "dnde_errn": [67, 121, 123, 466], "dnde_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "dnde_errp": [67, 121, 123, 466], "dnde_ref": [121, 123, 392], "dnde_ul": [67, 121, 123, 466, 489], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 94, 99, 103, 122, 144, 155, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 321, 361, 369, 371, 373, 374, 375, 378, 382, 383, 384, 385, 386, 387, 388, 391, 392, 395, 397, 398, 400, 402, 413, 438, 440, 442, 443, 445, 446, 447, 448, 450, 452, 453, 454, 458, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 478, 479, 487, 488, 489, 499, 503, 510, 515, 560, 563, 566, 567], "do_someth": 368, "doc": [11, 13, 16, 83, 84, 87, 90, 103, 122, 144, 186, 192, 195, 198, 205, 218, 240, 297, 333, 368, 369, 371, 373, 376, 382, 384, 385, 387, 388, 397, 404, 405, 407, 413, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 491, 516, 527, 529, 535, 538, 551, 557, 558, 562, 563, 567], "docker": [385, 398], "dockerfil": [376, 397, 398], "docstr": [368, 388, 394, 419, 420, 421, 423, 426, 432, 433, 434, 474], "doctest": [155, 356, 369], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 305, 309, 319, 342, 355, 368, 370, 372, 373, 375, 376, 378, 382, 384, 385, 387, 389, 391, 393, 394, 398, 399, 404, 405, 406, 413, 415, 416, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 471, 473, 478, 480, 481, 503, 514, 515, 516, 563], "doe": [16, 84, 87, 90, 103, 122, 124, 128, 147, 157, 160, 194, 232, 266, 277, 368, 369, 375, 376, 378, 380, 382, 383, 385, 387, 388, 391, 392, 394, 395, 410, 419, 430, 437, 438, 442, 445, 447, 450, 452, 453, 466, 468, 469, 470, 471, 472, 480, 491, 503, 512, 563], "doesn": [69, 368, 369, 373, 375, 376, 382, 385, 386, 388, 478, 479, 563], "dof": 565, "doi": [138, 394], "domain": [187, 188, 190, 196, 199, 200, 368, 382, 459], "domenico": 425, "dominguez": [220, 221, 391, 438, 529], "dominquez": 220, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 144, 367, 368, 371, 373, 375, 376, 385, 395, 398, 439, 442, 447, 452, 460, 472, 474, 491, 561, 563, 566, 567], "donath": [377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 121, 124, 361, 368, 369, 371, 373, 374, 375, 379, 381, 382, 383, 384, 386, 387, 388, 391, 392, 394, 400, 404, 428, 433, 439, 445, 450, 451, 455, 456, 458, 462, 463, 467, 470, 471, 474, 475, 499, 503, 511, 512, 516, 548, 565, 567], "dos2unix": 368, "dot": [50, 51, 54, 108, 109, 187, 188, 190, 196, 199, 200, 433], "doubl": [27, 120, 132, 285, 394, 426, 434], "doubling_dict": 285, "down": [50, 51, 54, 131, 373, 375, 378, 382, 387, 411, 467, 479, 566], "downgrad": [186, 367], "download": [67, 93, 100, 123, 371, 376, 384, 385, 388, 395, 397, 399, 400, 402, 404, 408, 409, 411, 412, 419, 428, 429, 430, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563], "downsampl": [101, 104, 108, 109, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 410, 416, 425, 467], "downsampled_energi": 467, "downsampling_factor": [131, 452], "downward": [279, 281], "dozen": 368, "dpp": 394, "dr": [17, 18, 21, 22, 24, 25, 27, 522], "dr1": [16, 65, 82, 83, 86, 88, 90, 95, 149, 167, 261, 295, 296, 369, 376, 388, 404, 436, 439, 442, 443, 448, 450, 461, 470, 475, 485, 487, 488, 500, 503, 505, 506, 507, 509, 510, 512, 513, 517, 549], "dr2": [65, 261, 419, 436, 517, 549], "dr3": [65, 260, 436, 474, 517, 549], "dr4": [65, 434], "draft": [368, 372, 373, 396, 428], "drag": 371, "draw": [33, 188, 319, 381, 476], "drawback": [383, 387], "drawn": [319, 381], "drift": [85, 93, 94, 430], "drive": 384, "driven": [11, 15, 374, 384, 386, 388, 427, 483, 502], "drop": [52, 53, 101, 104, 108, 109, 121, 123, 128, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 219, 226, 265, 353, 372, 373, 384, 385, 390, 409, 412, 413, 416, 419, 426, 429, 454, 471, 499], "ds9": [83, 186, 195, 198, 202, 218, 240, 368, 369, 382, 411, 472, 474, 516], "ds9parser": 382, "dss": 378, "dt": [87, 90], "dtime_t": 459, "dtype": [33, 38, 87, 90, 110, 114, 142, 144, 147, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 218, 240, 297, 368, 396, 444, 447, 456, 466, 467, 469, 470, 471, 478, 479, 489, 501], "duck": [16, 84, 103, 122], "due": [59, 87, 90, 368, 396, 422, 436, 441, 442, 471, 476, 478, 483, 499, 501, 539, 560, 563], "dummi": [108, 109, 382, 447, 503], "dump": [16, 84, 103, 122, 384], "dumps_kwarg": [16, 84, 103, 122], "duplic": [87, 90, 99, 145, 368, 369, 371, 374, 388, 389, 392, 416, 419], "durat": [83, 86, 88, 93, 445, 454, 458, 461, 478, 500, 503], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 94, 101, 103, 104, 108, 109, 122, 164, 277, 369, 376, 380, 384, 387, 388, 390, 393, 394, 395, 396, 397, 398, 413, 416, 433, 434, 443, 444, 454, 460, 461, 467, 470, 472, 476, 488, 499, 500, 562, 566], "dust": 220, "duti": 394, "dwarf": 491, "dx": [33, 301], "dy": [33, 301], "dynam": [365, 500], "dz": 301, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 94, 103, 112, 122, 123, 136, 144, 145, 146, 147, 149, 180, 186, 187, 188, 190, 192, 194, 196, 198, 199, 200, 205, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 279, 281, 285, 297, 299, 303, 329, 336, 346, 357, 358, 363, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 407, 408, 409, 413, 419, 420, 421, 425, 427, 428, 429, 433, 436, 438, 439, 440, 442, 443, 444, 445, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 485, 487, 488, 489, 491, 498, 499, 500, 501, 503, 507, 508, 513, 514, 515, 520, 521, 522, 529, 530, 532, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547, 557, 560, 562, 563, 564, 565, 566, 567, 568], "e2dnd": [19, 20, 26, 121, 122, 123, 130, 132, 133, 134, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 392, 419, 426, 437, 438, 440, 442, 443, 444, 451, 466, 489, 501, 503, 539], "e2dnde_err": [121, 123], "e2dnde_errn": [121, 123, 466], "e2dnde_errp": [121, 123, 466], "e2dnde_ref": [121, 123], "e2dnde_ul": [121, 123, 466], "e501": [19, 20, 124, 144, 180, 191, 192, 198, 220, 272, 365], "e_": [19, 20, 26, 50, 52, 53, 144, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 499, 505, 507, 508, 509, 530, 534, 542, 544, 545], "e_0": [222, 223, 224, 234, 235, 246, 247, 256, 259, 260, 261, 533, 534, 537, 539, 541, 544, 545, 546, 547], "e_b": 391, "e_cut": [67, 466], "e_cutoff": 539, "e_d": [246, 247], "e_edg": 416, "e_max": [67, 123, 392, 437, 442, 443, 444, 455, 460, 466, 467, 468, 471, 476, 489, 501], "e_min": [67, 123, 392, 437, 442, 443, 444, 455, 460, 466, 467, 468, 471, 476, 479, 489, 501], "e_peak": [224, 235], "e_reco": [110, 114, 144, 149, 463, 562], "e_ref": [67, 123, 392, 437, 442, 443, 460, 466, 487, 489, 501], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 440, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 452, "e_sn": [43, 44, 52], "e_tru": [110, 114, 149, 463, 479, 562], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 90, 91, 99, 101, 104, 107, 108, 109, 113, 115, 116, 118, 120, 121, 123, 124, 128, 130, 131, 132, 133, 134, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 168, 169, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 295, 333, 357, 366, 368, 371, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 392, 394, 398, 399, 406, 413, 416, 427, 430, 433, 439, 445, 446, 448, 450, 451, 452, 454, 455, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 480, 481, 488, 492, 498, 499, 500, 503, 507, 508, 509, 515, 516, 523, 539, 540, 562, 563, 566, 567], "eager": 384, "earli": [382, 387, 388, 478], "earlier": [375, 394], "earth": [41, 88, 270, 479], "earth_azimuth_angl": [479, 489], "earthloc": [83, 85, 88, 93, 96, 307, 395], "easi": [368, 369, 374, 379, 382, 383, 384, 387, 388, 392, 395, 413, 419, 427, 471, 472, 479, 500, 560, 561, 563, 567], "easier": [368, 374, 379, 387, 392, 427, 430, 478], "easiest": 401, "easili": [87, 90, 123, 374, 379, 380, 384, 395, 400, 401, 460, 461, 468, 469, 471, 479, 489, 563], "ebel": 446, "ebl": [220, 221, 268, 386, 391, 413, 416, 426, 433, 436, 441, 474, 483, 499, 501, 517, 549, 560], "ebl_data_builtin": [438, 529], "ebl_dominguez11": [221, 529], "ebl_franceschini": [221, 268], "ebl_franceschini_2017": 221, "ebl_saldana": 221, "eblabsorbtionnormspectralmodel": 391, "eblabsorptionnormspectralmodel": [250, 391, 416, 438, 474, 529], "ebltabl": 438, "ebound": [144, 192, 516], "ebreak": [212, 256, 530, 544], "ec": [463, 474, 516], "eccentr": [219, 227, 230, 520, 521, 522], "echo": 563, "eco": 394, "ecosystem": 395, "ecpl": [67, 80, 222, 223, 224, 277, 391, 425, 440, 466, 474], "ecpl_norm": 535, "ecsv": [59, 63, 380], "ecut": [222, 259, 534, 545], "edelson": [286, 459], "edelson2002": 286, "edg": [101, 104, 108, 109, 116, 118, 120, 124, 127, 128, 131, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 158, 159, 167, 168, 173, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 219, 361, 382, 392, 410, 416, 419, 437, 438, 442, 451, 452, 453, 454, 455, 459, 469, 470, 471, 472, 479, 480, 487, 510, 520], "edge_max": 520, "edge_min": 520, "edge_width": [219, 473, 520], "edgecolor": [365, 442, 444, 446, 452, 453, 456, 463, 465, 512, 520, 521, 522], "edges_max": [189, 191, 192, 197, 471], "edges_min": [189, 191, 192, 197, 471], "edisp": [16, 82, 87, 88, 95, 101, 104, 105, 108, 109, 110, 114, 144, 145, 146, 149, 153, 167, 173, 174, 177, 178, 255, 295, 296, 369, 378, 379, 380, 381, 384, 414, 416, 419, 425, 426, 427, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 458, 461, 462, 467, 470, 475, 478, 479, 480, 481, 487, 499, 507, 508, 562], "edisp2d": [146, 149, 369], "edisp3d": 469, "edisp_": 499, "edisp_2d": [82, 87, 149, 478, 481], "edisp_3d": 469, "edisp_ev": 469, "edisp_kernel": [144, 467, 507], "edisp_kernel_map": [145, 480], "edisp_map": [102, 107, 145, 146, 469, 507], "edisp_new": 469, "edispersionmap": 499, "edispkernel": [104, 110, 114, 145, 149, 177, 414, 507], "edispkernelmap": [101, 104, 105, 108, 109, 112, 146, 152, 153, 157, 160, 167, 174, 177, 415, 416, 446, 470, 479, 503, 507], "edispmap": [101, 102, 104, 107, 108, 109, 145, 152, 153, 157, 160, 167, 174, 177, 178, 380, 381, 389, 409, 412, 413, 414, 416, 419, 469, 507], "edit": [369, 371, 373, 375, 376, 377, 384, 388, 397, 398, 401, 487, 563], "editor": [369, 394, 443, 487, 563], "editori": 394, "edm": 468, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 186, 195, 198, 205, 218, 237, 240, 270, 271, 280, 287, 388, 468, 516], "eemin": 539, "eff": [147, 505, 508, 521, 522], "eff_area": 469, "effarea": 469, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 90, 104, 106, 146, 147, 173, 174, 179, 181, 182, 195, 218, 240, 358, 359, 368, 373, 378, 379, 381, 382, 392, 423, 425, 442, 454, 456, 459, 460, 476, 480, 481, 483, 487, 508, 516, 521, 522, 562], "effective_area": [153, 381, 478], "effective_livetim": 470, "effective_times_src": 470, "effectivearea3d": 469, "effectiveareat": [380, 407, 419, 423], "effectiveareatable2d": [88, 146, 153, 159, 181, 374, 423, 469, 478, 505], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 104, 109, 373, 379, 380, 381, 382, 383, 390, 440, 475, 508, 513, 565], "effort": [375, 377, 384, 385, 387, 388, 391, 410, 499], "eflux": [19, 20, 26, 121, 122, 123, 132, 133, 134, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 392, 419, 456, 474, 501], "eflux_err": [121, 123, 392], "eflux_errn": [121, 123], "eflux_errp": [121, 123], "eflux_ref": [121, 123], "eflux_ul": [121, 123], "eg": [368, 438, 450, 458, 462, 467, 469, 473, 474], "egal": 478, "egg": 401, "einasto": [21, 491], "either": [67, 82, 87, 88, 90, 94, 109, 121, 123, 149, 164, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 232, 280, 297, 327, 357, 369, 371, 373, 375, 382, 384, 387, 390, 394, 400, 419, 433, 443, 450, 456, 462, 467, 468, 474, 476, 487, 499, 501, 503, 514, 516, 560, 563], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "ejq9u0ti": 470, "el": [26, 465], "elabor": [394, 446], "elaps": [83, 377, 562], "electron": [50, 270, 478, 539], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 91, 99, 101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 361, 386, 433, 466, 471, 515], "elementtre": 478, "elev": 383, "elif": [368, 382, 395], "elli": [407, 420], "ellips": [219, 382, 516, 520], "ellipseannulusskyregion": [512, 516], "ellipseskyregion": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 439, 474, 512], "ellipsoid": 468, "ellipt": [516, 522], "elong": [409, 412, 413, 520, 521], "elpas": 433, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 121, 123, 131, 194, 368, 371, 382, 385, 392, 395, 396, 398, 400, 402, 475, 563, 565], "elsewher": [113, 115], "email": [369, 371, 394, 398], "emax": [128, 245, 271, 447, 453, 542], "emax_fit": 463, "embryon": 384, "emce": [377, 385, 409, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "emerg": 378, "emeri": 428, "emin": [128, 245, 271, 447, 453, 542], "emin_fit": 463, "emiss": [52, 68, 132, 374, 379, 383, 442, 448, 450, 451, 454, 473, 478, 479, 499, 513, 539, 560], "emit": [82, 208, 209, 210, 211, 354, 368, 409, 427, 438, 508], "emitt": 442, "emmanoulopoulo": 293, "emmanoulopoulos2010": 293, "emphasi": 468, "empir": 40, "emploi": 444, "empti": [91, 99, 101, 104, 108, 109, 136, 167, 187, 188, 190, 194, 196, 199, 200, 205, 240, 354, 376, 378, 410, 422, 450, 454, 455, 458, 462, 470, 471, 480, 492, 499, 512, 513, 516], "empty_dataset": 437, "empty_i": 462, "empty_map": [101, 104, 108, 109, 453, 470, 512], "emsembl": 92, "en": [34, 83, 87, 88, 90, 124, 180, 195, 205, 268, 297, 371, 388, 437, 445, 447, 450, 452, 458, 462, 468, 469, 472, 478, 500, 514, 516], "enabl": [377, 380, 401, 410, 419, 428, 437, 445, 447, 450, 452, 458, 462, 478, 510], "encapsul": [198, 392, 514], "enclos": [200, 369, 439, 444, 468, 472], "enclosur": [82, 151, 444, 469], "encod": [16, 84, 87, 90, 103, 122], "encompass": [186, 514, 516], "encount": [161, 400, 401, 402, 403, 444, 454, 462, 481, 551, 563], "encourag": [368, 373, 394, 397, 427], "end": [52, 53, 86, 87, 90, 91, 93, 99, 101, 108, 121, 123, 131, 192, 232, 240, 373, 375, 377, 379, 380, 382, 383, 384, 385, 387, 388, 391, 420, 430, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 565], "end_po": [125, 330, 456], "endswith": 368, "energet": 454, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 95, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 123, 124, 125, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 167, 169, 173, 174, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 363, 364, 368, 374, 377, 379, 380, 381, 382, 383, 384, 386, 387, 390, 392, 396, 400, 404, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 438, 439, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 454, 456, 457, 458, 460, 461, 462, 463, 466, 467, 470, 471, 480, 481, 483, 487, 488, 489, 498, 499, 500, 503, 508, 510, 511, 512, 514, 515, 516, 523, 529, 535, 538, 540, 543, 548, 558, 560, 561, 562, 564], "energy_axes_are_align": 99, "energy_axi": [19, 20, 26, 101, 104, 108, 109, 110, 111, 114, 121, 123, 144, 145, 146, 149, 157, 159, 160, 167, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 392, 437, 439, 442, 444, 445, 446, 448, 452, 454, 455, 461, 462, 467, 469, 470, 471, 474, 479, 480, 488, 507, 510, 512, 513, 515, 516], "energy_axis_new": 467, "energy_axis_tru": [101, 104, 108, 109, 110, 111, 112, 114, 144, 145, 146, 147, 149, 154, 155, 157, 167, 369, 413, 437, 439, 442, 444, 445, 446, 448, 452, 454, 455, 458, 461, 462, 463, 467, 469, 470, 479, 480, 488, 507, 510, 512, 513], "energy_bin": 384, "energy_bin_per_decade_max": 111, "energy_bound": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 382, 419, 438, 440, 442, 444, 450, 451, 463, 465, 466, 468, 474, 479, 488, 489, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548], "energy_cent": 265, "energy_column": 392, "energy_depend": 453, "energy_dependent_estim": [436, 453, 457], "energy_edg": [16, 116, 118, 120, 124, 125, 128, 131, 136, 137, 140, 192, 317, 392, 438, 442, 443, 446, 447, 448, 450, 451, 452, 453, 456, 460, 461, 462, 463, 480, 487, 488, 501], "energy_estim": 480, "energy_flux": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 474, 489], "energy_flux_err": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "energy_flux_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "energy_index": 154, "energy_integr": 51, "energy_logspac": 387, "energy_mask": [185, 186, 195, 198, 415, 444, 450, 463, 467, 468, 472, 476], "energy_max": [19, 20, 26, 83, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 144, 185, 186, 192, 195, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 265, 268, 273, 382, 384, 450, 455, 463, 465, 467, 470, 474, 489], "energy_min": [19, 20, 26, 52, 53, 83, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 144, 185, 186, 192, 195, 198, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 265, 268, 273, 382, 384, 450, 455, 463, 465, 467, 470, 474, 489], "energy_nam": [157, 160], "energy_nod": [391, 474], "energy_pow": [19, 20, 26, 123, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 275, 442, 450, 463, 468, 488, 489], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 99, 101, 104, 108, 109, 419, 467, 472, 546, 547], "energy_range_fit": [101, 104, 108, 109, 467], "energy_range_saf": [101, 104, 108, 109, 467], "energy_range_tot": [101, 104, 108, 109, 472], "energy_reco": [368, 458], "energy_ref": [121, 123], "energy_resolut": 427, "energy_saf": 384, "energy_tru": [16, 95, 101, 104, 108, 109, 110, 114, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 167, 174, 177, 185, 186, 192, 195, 198, 295, 296, 368, 369, 381, 433, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 458, 460, 461, 462, 463, 467, 469, 470, 471, 472, 474, 475, 478, 479, 480, 487, 488, 507, 508, 510, 512, 513, 515, 516], "energy_true_axi": 144, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 411, "energydependentmorphologi": 453, "energydependentmorphologyestim": [434, 453], "energydependentmultigausspsf": [153, 407, 469, 478, 509], "energydependenttablepsf": [374, 389, 408, 419], "energydispers": [144, 145, 146, 149, 380, 414, 424, 427, 428], "energydispersion2d": [88, 144, 146, 153, 159, 177, 178, 369, 374, 419, 421, 426, 469, 478, 507], "energydispersion3d": 469, "energyoffsetarrai": 424, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 371, 395], "engin": [87, 90], "english": 503, "enhanc": [373, 377, 404], "enlarg": 513, "enough": [381, 383, 384, 442, 445, 448, 458, 460, 472, 510], "enrico": 384, "enrico_config": 384, "enrico_xml": 384, "enriqu": [376, 384, 388, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 427, 428, 429], "ensembl": 92, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 173, 193, 277, 368, 374, 379, 380, 391, 395, 401, 421, 437, 442, 461, 472, 510, 515, 524], "enter": [209, 211, 218, 240, 404], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 101, 103, 104, 108, 109, 122, 174, 439, 450, 453, 459], "entri": [43, 44, 87, 90, 93, 118, 121, 124, 125, 128, 129, 205, 206, 218, 240, 277, 336, 368, 380, 388, 392, 395, 397, 400, 402, 419, 430, 439, 443, 466, 468, 471, 474, 475, 503, 504, 516], "entry_point": 420, "enum": [94, 150, 312, 313], "enumer": [442, 454, 466, 473, 476], "env": [371, 385, 397, 399, 400, 402, 403, 428, 563], "envelop": [381, 468, 488], "environ": [11, 82, 334, 367, 368, 371, 375, 376, 380, 385, 388, 397, 398, 400, 401, 402, 403, 404, 408, 409, 411, 427, 428, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 563], "envis": 377, "envvar": 11, "eosc": 394, "episod": 132, "epoch": 351, "epsilon": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "epsilon_": [101, 108, 499], "epsilon_k": [101, 108, 499], "epsmch": 468, "eq": 100, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 391, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 116, 120, 124, 128, 131, 144, 192, 368, 378, 381, 429, 442, 460, 461, 472, 476, 499, 515, 566], "equat": [27, 260, 261, 286, 525, 526, 530, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547, 565, 566], "equatori": [94, 150, 186, 187, 188, 190, 193, 195, 198, 199, 200, 469], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 121, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 361, 369, 380, 381, 382, 391, 392, 433, 434, 442, 466, 470, 471, 472, 474, 478, 487, 499, 501, 503, 514, 515, 516, 563, 564, 565], "er": [26, 465], "era": 220, "ereco": [144, 469], "erf": [228, 520], "erg": [52, 53, 67, 437, 442, 466, 489, 496, 503], "erlangen": 387, "erod": 200, "eros": [198, 200], "err": 468, "errat": 368, "errn": [120, 124, 128, 129, 131, 205, 430, 565], "errn_2sigma": 565, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 100, 101, 103, 104, 108, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 163, 189, 192, 197, 208, 210, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 279, 281, 285, 286, 287, 293, 346, 368, 369, 382, 383, 384, 386, 391, 392, 395, 396, 409, 413, 415, 417, 419, 420, 422, 426, 427, 430, 432, 433, 434, 438, 439, 440, 442, 443, 445, 447, 450, 451, 452, 453, 455, 458, 459, 460, 462, 463, 466, 474, 475, 476, 478, 487, 488, 489, 491, 499, 501, 503, 521, 539, 548, 560, 563], "error_callback": 163, "errorbar": [83, 100, 101, 104, 108, 109, 192, 196, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 437, 476], "errp": [120, 124, 128, 129, 131, 205, 430, 565], "errp_2sigma": 565, "escap": [368, 394], "especi": [87, 90, 132, 371, 375, 378, 382, 388, 389, 398, 419, 425, 439, 452, 461, 466, 471, 476, 478, 479], "essenti": [378, 380, 383, 413, 414, 415, 456, 471], "establish": [368, 381], "estim": [6, 19, 20, 26, 50, 72, 100, 104, 109, 111, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 162, 168, 169, 170, 176, 185, 186, 195, 198, 200, 205, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 277, 284, 287, 291, 317, 361, 372, 374, 377, 381, 382, 383, 384, 387, 390, 396, 400, 409, 410, 413, 414, 415, 416, 419, 420, 421, 425, 426, 427, 428, 430, 433, 434, 436, 437, 438, 442, 444, 448, 450, 451, 452, 455, 457, 461, 462, 463, 464, 467, 468, 472, 476, 480, 483, 487, 488, 499, 503, 513, 515, 560, 561, 562, 564, 566], "estimate_best_fit": [124, 125, 128, 129], "estimate_count": [124, 125, 128, 129], "estimate_energy_depend": 118, "estimate_errn_errp": [124, 125, 128, 129], "estimate_excess_map": 120, "estimate_exposure_reco_energi": 120, "estimate_fit_input_map": 131, "estimate_flux_default": 131, "estimate_flux_map": 131, "estimate_flux_point": [124, 125, 128], "estimate_kernel": [120, 131], "estimate_map": 116, "estimate_mask_default": [120, 131], "estimate_min_e2dnd": 130, "estimate_min_excess": 130, "estimate_npr": [124, 125, 128, 129], "estimate_npred_excess": [124, 125, 128], "estimate_pad_width": 131, "estimate_scan": [124, 125, 128, 129], "estimate_t": [124, 125, 128, 129], "estimate_time_bin_flux": 128, "estimate_ul": [124, 125, 128, 129], "estimator_result": [138, 463], "et": [26, 33, 59, 100, 132, 147, 220, 286, 287, 293, 378, 446, 453, 459, 491, 562], "eta": [230, 231, 252, 522, 526, 553], "eta_": 50, "eta_b": 50, "eta_rang": [522, 526], "etc": [104, 109, 121, 368, 373, 374, 378, 379, 380, 383, 384, 388, 389, 392, 394, 395, 416, 443, 445, 450, 458, 460, 462, 463, 467, 471, 474, 476, 479, 487, 499, 512, 562], "etru": 469, "eu": 388, "euclidean": 295, "europ": 394, "ev": [469, 503, 539], "ev2": 469, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 90, 101, 104, 107, 108, 109, 124, 128, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 174, 180, 195, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 310, 368, 373, 377, 383, 386, 387, 390, 391, 392, 396, 408, 409, 410, 412, 415, 419, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 454, 455, 463, 469, 474, 476, 478, 479, 499, 521, 522, 529, 562, 565], "evaluate_contain": [148, 156, 158, 421], "evaluate_direct": [148, 156, 158], "evaluate_energy_flux": [246, 247], "evaluate_error": [19, 20, 26, 123, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 386], "evaluate_geom": [214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267, 434, 474, 522], "evaluate_integr": [245, 246, 247], "evaluate_paramet": [148, 156, 158], "evaluation_bin_size_min": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "evaluation_radiu": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 379, 380, 391, 474], "evaluation_region": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 198, 209, 211, 368, 371, 373, 375, 376, 382, 385, 386, 394, 395, 411, 460, 463, 468, 470, 471, 472, 473, 474, 487, 499, 501, 525, 526, 563], "event": [82, 83, 84, 85, 86, 87, 88, 89, 92, 102, 103, 107, 112, 120, 130, 146, 157, 160, 161, 168, 176, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 327, 368, 369, 372, 374, 378, 380, 382, 383, 384, 395, 400, 404, 411, 412, 413, 415, 419, 420, 421, 426, 427, 428, 429, 430, 433, 434, 436, 439, 442, 443, 444, 448, 450, 451, 457, 462, 470, 480, 483, 485, 487, 488, 499, 503, 511, 512, 513, 561, 562, 565], "event_3fhl": 489, "event_class": [84, 479, 489], "event_det_coord": [102, 107], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [381, 478, 479, 489, 500], "event_list": [83, 368, 369, 381], "event_list_meta": [102, 107, 414], "event_sampl": [436, 454, 457], "event_sampling_nrg_depend_model": [436, 455, 457], "event_typ": [103, 479, 489], "eventlist": [84, 88, 102, 107, 176, 187, 188, 190, 196, 199, 200, 368, 369, 374, 381, 382, 383, 395, 404, 409, 416, 421, 423, 424, 425, 427, 428, 454, 455, 463, 471, 478, 479, 489, 503, 512], "eventlistbas": 89, "eventlistdataset": 428, "eventlistlat": 500, "eventlistmetadata": [83, 395], "events2": 83, "events_": 454, "events_0001": 454, "events_1": 500, "events_2": 500, "events_3fhl": 489, "events_bkg": 381, "events_gc_3fhl": 489, "events_list": 381, "events_new": 503, "events_path": [82, 454], "events_src": 381, "events_tot": 381, "events_vela": 463, "eventu": [368, 373, 384, 387, 388, 404, 474], "ever": 566, "everi": [186, 188, 200, 267, 368, 371, 376, 377, 378, 380, 384, 393, 395, 398, 439, 442, 471, 488, 563], "everyon": 373, "everyth": [368, 386, 387, 503], "everywher": [368, 382, 387, 388, 408], "evid": [132, 466], "evolut": [50, 52, 53, 220, 374, 388, 436, 457, 483, 496, 497, 499, 500, 508, 511, 515, 517], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 220, 385, 388, 395, 455, 469], "evt_sampl": 454, "ex": [11, 471, 473, 474], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 386, 471, 479], "exactli": [116, 120, 124, 128, 131, 192, 363, 442, 444, 461, 463, 472, 476, 479, 499, 516], "exagger": 359, "examin": [394, 507], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 90, 93, 95, 98, 100, 101, 104, 108, 109, 110, 113, 114, 115, 116, 118, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 142, 144, 146, 147, 148, 149, 155, 157, 160, 167, 170, 172, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 209, 211, 232, 238, 268, 271, 277, 280, 295, 296, 317, 321, 327, 336, 347, 348, 353, 356, 358, 359, 361, 363, 365, 368, 369, 371, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 391, 394, 395, 396, 400, 401, 402, 404, 408, 410, 413, 416, 419, 420, 421, 424, 426, 427, 428, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 503, 505, 506, 507, 509, 514, 516, 517, 518, 528, 549, 557, 558, 559, 563, 565, 567, 568], "example_cub": 471, "example_cube_fgst": 471, "exce": 111, "except": [67, 69, 80, 87, 90, 101, 104, 108, 109, 163, 187, 188, 190, 196, 199, 200, 297, 365, 368, 379, 383, 387, 469, 473, 516], "excerpt": 481, "excess": [15, 67, 72, 101, 104, 108, 109, 117, 120, 121, 123, 124, 125, 128, 130, 133, 134, 138, 167, 279, 281, 286, 287, 366, 380, 383, 415, 416, 422, 427, 434, 437, 438, 442, 443, 445, 446, 447, 450, 452, 456, 458, 462, 463, 466, 467, 470, 472, 473, 480, 487, 488, 501, 503], "excess_estim": 480, "excess_estimator_integr": 480, "excess_integr": 480, "excess_map": [16, 443, 447, 448, 450, 487], "excess_map_estim": 463, "excess_matching_signific": [418, 428], "excess_min": 140, "excess_r": 467, "excessestim": 392, "excessmapconfig": 16, "excessmapestim": [117, 136, 137, 138, 392, 415, 416, 417, 419, 422, 432, 434, 448, 450, 463, 472, 480, 501], "excesspointsestim": 392, "excessprofileestim": [392, 416], "exchang": 382, "exclud": [16, 84, 100, 101, 103, 104, 108, 109, 122, 127, 168, 170, 209, 211, 218, 240, 374, 431, 470, 472, 512, 513], "exclude_default": [16, 84, 103, 122], "exclude_non": [16, 84, 103, 122], "exclude_unset": [16, 84, 103, 122], "exclus": [16, 83, 162, 164, 169, 170, 171, 172, 175, 186, 198, 374, 382, 384, 415, 417, 439, 447, 450, 470, 510, 512], "exclusion_mask": [162, 164, 169, 170, 171, 172, 175, 442, 448, 452, 470, 472, 488, 510, 512, 513], "exclusion_mask_2d": 470, "exclusion_mask_crab": [443, 487], "exclusion_radiu": 472, "exclusion_region": 442, "exclusionmask": 425, "execut": [11, 120, 124, 128, 129, 131, 368, 369, 371, 373, 375, 376, 377, 383, 384, 388, 398, 399, 400, 401, 402, 403, 404, 413, 421, 427, 436, 441, 449, 457, 464, 470, 471, 477, 479, 482, 483, 484, 486, 489, 490, 518, 528, 549, 559, 561], "exercis": [371, 384, 388, 394], "exhibit": 453, "exist": [11, 15, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 90, 98, 99, 100, 101, 104, 106, 108, 109, 121, 123, 145, 146, 152, 157, 160, 172, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 206, 218, 232, 240, 263, 264, 265, 267, 352, 368, 371, 373, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 391, 392, 394, 395, 400, 401, 404, 405, 408, 412, 413, 427, 428, 430, 433, 446, 448, 467, 471, 472, 474, 475, 479, 500, 515, 516, 564], "exist_ok": [442, 443, 450, 451, 454, 487, 488], "exit": [11, 15, 87, 90, 209, 211, 218, 240, 409, 527, 563], "exot": 385, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 147, 225, 228, 235, 246, 247, 259, 369, 391, 462, 474, 521, 522, 529, 533, 534, 535, 536, 545, 546, 547, 551, 552, 553, 566], "expand": [128, 334, 378, 419], "expand_map": 128, "expans": [50, 52, 53], "expcutoffpowerlaw": 535, "expcutoffpowerlaw3fglspectralmodel": [250, 391, 440, 474, 534], "expcutoffpowerlawnormspectralmodel": [224, 250, 434, 474, 535], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 212, 213, 216, 220, 222, 223, 228, 234, 235, 237, 241, 243, 245, 246, 247, 250, 251, 256, 258, 259, 260, 261, 264, 268, 391, 440, 442, 450, 474, 533, 535, 539], "expdecai": [225, 436, 517, 559], "expdecay_model": [454, 551], "expdecaytemporalmodel": [262, 391, 415, 419, 454, 462, 474, 551], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 107, 109, 121, 172, 177, 178, 183, 198, 279, 280, 281, 282, 284, 288, 294, 327, 368, 373, 381, 383, 384, 385, 388, 393, 395, 437, 439, 444, 445, 446, 448, 454, 455, 459, 460, 465, 468, 471, 472, 476, 479, 481, 499, 501, 564, 565, 566], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 442, 455], "experi": [371, 373, 377, 379, 383, 396, 398, 427, 491, 562, 567], "experienc": [377, 403], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 563], "expert": 388, "expertis": 385, "expfactor": [260, 261, 546, 547], "expir": 381, "explain": [87, 90, 368, 371, 373, 382, 385, 387, 388, 394, 398, 400, 402, 413, 419, 437, 442, 444, 465, 468, 472, 474, 503, 561, 563], "explan": [116, 120, 124, 128, 131, 373, 405, 459, 567], "explicit": [87, 90, 186, 188, 368, 384, 386, 392, 515, 567], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 297, 378, 390, 399, 409, 455, 473, 501, 515, 567], "explor": [187, 188, 190, 196, 199, 200, 376, 384, 404, 436, 442, 447, 450, 453, 456, 457, 459, 460, 461, 466, 467, 473, 480, 481, 487, 489, 499, 500, 501, 503, 511, 512, 515, 560], "explos": 52, "expomap": 381, "expon": [391, 474], "exponenti": [28, 30, 36, 39, 40, 222, 223, 224, 225, 259, 260, 261, 369, 379, 413, 436, 450, 454, 462, 517, 549], "exponentialcutoffpowerlaw": 539, "export": [84, 87, 90, 101, 103, 104, 121, 122, 123, 371, 392, 395, 400, 402, 413, 423, 430, 431, 434, 443, 474, 480, 481, 487], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 382, 383, 384, 387, 388, 432, 434, 471, 483, 501, 502, 561], "exposur": [16, 83, 88, 101, 104, 105, 107, 108, 109, 120, 131, 135, 145, 146, 152, 155, 157, 160, 162, 167, 174, 177, 178, 179, 181, 182, 183, 255, 289, 292, 294, 374, 377, 378, 379, 380, 381, 392, 411, 416, 424, 426, 427, 428, 430, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 458, 461, 462, 467, 470, 471, 472, 480, 487, 488, 499, 508, 511, 516, 565], "exposure_geom": 146, "exposure_hdu": [145, 146, 152, 157, 160], "exposure_hdu_band": [145, 146, 152, 157, 160], "exposure_hpx": 479, "exposure_map": [145, 146, 152, 157, 160, 177, 178, 183, 469], "exposure_max": 467, "exposure_min": 467, "exposure_tim": 381, "express": [120, 132, 279, 281, 379, 391, 392, 434, 448, 468, 469, 474, 476, 499, 515, 522, 564, 565, 566], "exptest": 425, "extend": [15, 19, 20, 26, 69, 72, 87, 90, 91, 99, 162, 189, 192, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 280, 375, 379, 380, 381, 382, 388, 390, 391, 392, 395, 400, 412, 414, 419, 436, 441, 442, 446, 455, 460, 466, 471, 472, 473, 474, 479, 483, 499, 500, 511, 512, 560], "extended_archive_v18": 527, "extended_source_spectral_analysi": [436, 439, 441], "extens": [41, 83, 144, 187, 188, 190, 192, 199, 200, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 257, 263, 267, 370, 373, 374, 375, 376, 377, 379, 381, 383, 384, 385, 386, 387, 388, 398, 422, 453, 454, 455, 474, 563], "extent": [198, 218, 240, 382, 446, 474], "extern": [112, 369, 394, 420, 424, 425, 428, 478, 503], "extnam": 469, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 100, 103, 122, 185, 186, 191, 195, 196, 198, 204, 205, 207, 263, 264, 295, 367, 369, 375, 376, 382, 384, 385, 388, 394, 395, 424, 427, 428, 438, 471, 472, 503, 516], "extra_term": 294, "extract": [16, 84, 99, 101, 103, 104, 108, 109, 121, 122, 123, 128, 145, 146, 152, 157, 160, 163, 168, 169, 174, 176, 184, 187, 188, 189, 190, 192, 197, 198, 199, 200, 265, 368, 378, 383, 392, 394, 395, 421, 422, 433, 434, 437, 439, 442, 443, 444, 445, 450, 451, 454, 455, 456, 458, 467, 471, 487, 499, 507, 512], "extragalact": [220, 438, 478], "extrapol": [100, 141, 142, 143, 167, 187, 188, 190, 196, 199, 200, 220, 268, 309, 310, 419, 424, 426, 427, 469, 471, 478, 479, 515], "extras_requir": 385, "extrem": [368, 395, 471, 522], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 131, 140, 194, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 296, 297, 324, 368, 371, 385, 390, 391, 396, 399, 400, 402, 421, 430, 437, 439, 442, 443, 445, 451, 452, 453, 454, 455, 461, 462, 463, 465, 466, 468, 470, 472, 474, 475, 476, 479, 480, 485, 487, 488, 489, 497, 512, 529, 539, 550, 551, 552, 553, 554, 555, 556, 563, 564, 565], "f0": [266, 557], "f06": 48, "f06b": [49, 493], "f06p": 49, "f1": [266, 557], "f2": [266, 557], "f4": [142, 147, 444, 467, 469, 471, 478, 479], "f8": [469, 479], "f_": [285, 287, 296, 499], "f_0": [245, 542], "f_dead": [83, 88], "f_i": 285, "f_max": 459, "f_max_err": 459, "f_mean": 459, "f_mean_err": 459, "f_min": 459, "f_min_err": 459, "f_pp": 286, "f_var": 286, "fabio": [381, 386, 409, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 426, 428, 430, 432, 433, 434], "face": [373, 376], "facecolor": [365, 438, 442, 444, 452, 453, 456, 463, 465, 520, 521, 522], "facil": 393, "fact": [19, 20, 96, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 394, 439, 516], "facto": 394, "factor": [19, 20, 23, 101, 102, 104, 107, 108, 109, 116, 121, 145, 146, 148, 152, 154, 155, 156, 157, 158, 160, 167, 174, 180, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 203, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 266, 267, 269, 280, 368, 381, 383, 415, 437, 445, 447, 450, 452, 456, 458, 462, 467, 470, 474, 478, 499, 516, 529], "factor1": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267], "factor_max": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267], "factor_min": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267], "factori": [187, 188, 199, 200, 382, 387, 391, 514, 516], "factoris": [255, 391, 474, 560], "fail": [16, 84, 103, 122, 205, 369, 371, 382, 397, 398, 422, 451, 479], "failur": [430, 433], "faint": 564, "fair": 394, "fair4r": 394, "fake": [101, 104, 108, 109, 380, 381, 411, 444, 445, 458, 462, 476], "fall": [132, 170, 197, 218, 240, 368, 375, 377, 378, 385, 428, 429, 459], "fallback": 368, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 120, 121, 122, 123, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 174, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 310, 327, 335, 337, 365, 368, 382, 384, 391, 396, 427, 428, 434, 437, 438, 439, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 487, 488, 489, 500, 510, 512, 513, 527, 539, 548], "falsifi": 476, "famili": 394, "familiar": [385, 386, 471, 472, 489], "fanci": [368, 463], "far": [376, 381, 383, 385, 389, 392, 395, 404, 419, 454, 491], "fashion": [383, 388], "fast": [368, 382, 386, 468], "faster": [87, 90, 187, 188, 190, 196, 199, 200, 346, 434, 446], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 493, "favour": [373, 381, 396, 476], "favourit": 452, "fc": [474, 516], "fcluster": [295, 475], "fcluster_kwarg": [295, 475], "fcn": 468, "fdx": 368, "fe": 270, "feasibl": [382, 387, 445, 458, 467], "featur": [6, 13, 87, 90, 95, 116, 136, 295, 296, 358, 359, 368, 371, 375, 377, 378, 379, 380, 382, 384, 385, 390, 391, 392, 394, 395, 396, 401, 406, 409, 410, 411, 412, 413, 415, 416, 419, 423, 426, 427, 428, 429, 459, 471, 472, 474, 475, 491, 501, 539], "feature_irf": 475, "features_irf": [95, 295, 296, 475], "feb": [374, 375, 385, 389, 404, 406], "februari": 406, "fed": 444, "feedback": [371, 373, 377, 382, 384, 385, 388, 389, 391, 397, 427, 469, 503], "feedstock": [397, 398], "feel": [378, 563], "feijen": [432, 433, 434], "feldman": [410, 416, 424, 426, 562], "feldman1998": [562, 565], "fellowship": 394, "felt": 368, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 78, 83, 86, 124, 125, 127, 131, 187, 188, 190, 196, 197, 199, 200, 220, 270, 272, 277, 375, 376, 377, 378, 380, 381, 384, 385, 388, 398, 400, 405, 407, 408, 411, 413, 416, 420, 423, 424, 425, 426, 427, 428, 436, 438, 440, 446, 454, 456, 466, 471, 472, 473, 474, 482, 483, 489, 491, 499, 500, 503, 508, 515, 527, 537, 542, 560, 567], "fermi_3fhl": [83, 187, 188, 190, 196, 199, 200, 473, 479, 489], "fermi_3fhl_events_select": [83, 479], "fermi_3fhl_exposure_cube_hpx": 479, "fermi_3fhl_psf_gc": 479, "fermi_bkg_model": 473, "fermi_ct": 127, "fermi_dataset": [277, 473, 479], "fermi_lat": [388, 428, 436, 479, 482], "fermi_model": 479, "fermi_prof": 125, "fermi_ts_imag": 369, "fermilat": 438, "fermipi": [375, 377, 380, 384, 388, 392, 425, 427, 479, 491], "fermitool": 384, "fetch": [15, 368, 376, 407, 420, 487, 563], "few": [82, 83, 87, 88, 90, 367, 368, 369, 371, 373, 374, 375, 376, 378, 380, 382, 386, 388, 393, 397, 398, 404, 418, 429, 431, 434, 439, 443, 448, 450, 452, 466, 468, 471, 478, 487, 488, 512, 516, 568], "fewer": [382, 388], "ff": 394, "fft": 200, "fftconvolv": 200, "fgl": [197, 472], "fgst": [186, 187, 188, 190, 191, 192, 198, 199, 200, 471], "fhit": 480, "fidalgo": [378, 383, 408, 428, 429], "fiduci": 471, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 103, 122, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 164, 226, 241, 299, 303, 355, 368, 382, 394, 395, 404, 409, 414, 421, 428, 442, 444, 448, 450, 452, 454, 469, 470, 472, 478, 479, 503, 505, 506, 507, 508, 509, 510, 512, 539, 562], "fieldinfo": [16, 84, 103, 122], "fig": [200, 356, 437, 439, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 456, 460, 462, 463, 465, 468, 472, 476, 512, 513, 522, 526, 529, 561], "figsiz": [88, 101, 104, 108, 109, 126, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 187, 188, 190, 196, 199, 200, 356, 439, 442, 445, 446, 448, 450, 451, 452, 453, 459, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 481, 512, 522, 526, 529], "figur": [88, 101, 104, 108, 109, 126, 141, 142, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 160, 187, 188, 190, 196, 199, 200, 346, 355, 356, 362, 368, 369, 373, 388, 398, 438, 442, 446, 450, 452, 453, 454, 456, 459, 460, 461, 465, 467, 468, 470, 471, 473, 474, 479, 480, 481, 563], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 90, 92, 93, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 168, 173, 187, 188, 190, 194, 196, 199, 200, 206, 218, 220, 232, 240, 263, 264, 265, 266, 267, 268, 305, 335, 337, 367, 368, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 387, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 402, 404, 412, 413, 419, 421, 423, 425, 426, 427, 428, 430, 431, 433, 434, 436, 437, 441, 444, 445, 449, 450, 452, 454, 455, 457, 458, 462, 464, 466, 467, 470, 471, 472, 473, 474, 477, 480, 481, 482, 483, 484, 486, 489, 490, 491, 502, 503, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567], "file_dir": 305, "file_model": 454, "file_nam": 305, "filemod": [16, 443, 447, 448, 450, 487, 563], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 90, 93, 99, 100, 101, 104, 105, 106, 108, 109, 121, 123, 125, 127, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 187, 188, 190, 194, 196, 199, 200, 218, 220, 232, 240, 263, 264, 265, 266, 267, 268, 272, 274, 276, 277, 305, 335, 337, 347, 368, 369, 373, 416, 442, 443, 447, 448, 450, 451, 455, 456, 466, 467, 471, 472, 473, 474, 478, 479, 487, 488, 489, 500, 503, 505, 506, 507, 509, 527, 529, 557, 558, 563], "filename_1": 500, "filename_2": 500, "filename_arf": 106, "filename_bkg": 106, "filename_model": [99, 121, 277, 473, 479], "filename_rmf": 106, "fill": [16, 84, 85, 87, 90, 101, 103, 104, 107, 108, 109, 122, 144, 155, 186, 187, 188, 190, 196, 198, 199, 200, 268, 368, 376, 377, 381, 384, 388, 394, 397, 398, 413, 420, 427, 430, 439, 454, 455, 466, 469, 470, 472, 479, 488, 515], "fill_between": [19, 20, 26, 126, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 463], "fill_by_coord": [155, 187, 188, 190, 196, 199, 200, 471, 479, 515], "fill_by_idx": [187, 188, 190, 196, 199, 200, 515], "fill_by_pix": [187, 188, 190, 196, 199, 200, 515], "fill_ev": [187, 188, 190, 196, 199, 200, 422, 433, 444, 471, 479, 485], "fill_nan": 188, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 263, 264, 267, 268, 368, 469, 471, 479], "filled_t": [87, 90], "filter": [88, 89, 374, 378, 380, 382, 383, 428, 429, 432, 472, 475, 483, 488, 489], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [121, 123], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [462, 463], "final": [128, 368, 369, 375, 376, 378, 381, 382, 384, 385, 387, 389, 391, 393, 394, 398, 400, 402, 413, 414, 415, 437, 438, 439, 440, 442, 450, 452, 454, 455, 460, 461, 463, 465, 467, 468, 470, 472, 475, 479, 483, 487, 488, 489, 499, 500, 501], "finalis": 372, "find": [19, 20, 26, 131, 136, 137, 144, 170, 171, 175, 202, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 289, 368, 373, 379, 381, 387, 397, 398, 399, 419, 421, 427, 428, 433, 434, 440, 442, 446, 466, 467, 471, 474, 478, 481, 489, 563, 565, 566], "find_peak": [137, 428, 446, 452], "find_peaks_in_flux_map": 446, "find_root": 419, "finder": [136, 170, 171, 419, 428, 446], "fine": [278, 310, 381, 448, 467, 479, 516, 563], "finer": [454, 467, 516], "fingertip": 367, "finish": [371, 375, 377, 397, 425, 427], "finit": [99, 101, 104, 108, 109, 145, 146, 152, 157, 173, 188, 196, 200, 265, 386], "fink": [220, 221, 438, 529], "fir": 539, "firefox": [87, 90], "first": [57, 87, 90, 91, 93, 99, 101, 108, 121, 123, 125, 136, 144, 161, 170, 187, 188, 189, 192, 196, 197, 218, 240, 271, 330, 357, 368, 369, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 392, 393, 394, 398, 399, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 426, 428, 429, 430, 431, 433, 437, 439, 440, 442, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 483, 487, 488, 489, 500, 512, 515, 563], "firstli": [453, 454], "firstnam": [87, 90], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 78, 82, 83, 84, 85, 86, 87, 88, 90, 93, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 164, 167, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 204, 206, 207, 208, 210, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 265, 266, 267, 268, 277, 278, 279, 281, 282, 283, 288, 290, 294, 305, 306, 307, 350, 351, 354, 356, 361, 363, 367, 368, 369, 374, 378, 379, 380, 381, 384, 386, 387, 388, 389, 390, 391, 392, 395, 396, 400, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 424, 426, 427, 428, 429, 431, 433, 434, 436, 437, 441, 445, 446, 448, 449, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 466, 467, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 483, 485, 489, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 515, 520, 527, 529, 539, 557, 558, 561, 562, 567], "fit2": 473, "fit_covari": [443, 487], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [439, 442, 450, 451], "fit_prior": 476, "fit_rang": [16, 443, 447, 448, 450, 487], "fit_result": [205, 277, 443, 487], "fit_results_nul": 277, "fit_scipi": 468, "fit_sherpa": 468, "fit_stat_scan": 383, "fit_statist": 368, "fit_statistics_cython": 398, "fitconfig": 16, "fitmc": 386, "fitresult": [205, 421, 433, 468, 488], "fitsfixedwarn": [446, 527], "fitspectrum": 423, "fitstepresult": [204, 207], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 426, 427, 440], "five": 489, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 93, 94, 105, 106, 139, 157, 159, 174, 205, 242, 243, 248, 267, 371, 373, 374, 375, 379, 380, 383, 385, 390, 392, 393, 394, 397, 398, 400, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 437, 444, 445, 447, 448, 450, 451, 454, 458, 461, 462, 468, 469, 470, 473, 474, 475, 487, 513, 515, 523, 540], "fixed_altaz": 85, "fixed_bin": 139, "fixed_icr": [85, 157, 437, 445, 454, 455, 458, 462], "fixed_offset": [95, 173, 419], "fixed_r_in": 162, "fixed_width": 162, "fixedpointinginfo": [88, 157, 180, 433, 434, 437, 445, 454, 455, 458, 462], "fk5": [516, 527], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 90, 102, 107, 121, 123, 124, 125, 128, 129, 185, 186, 187, 188, 190, 192, 193, 195, 196, 198, 199, 200, 204, 205, 206, 207, 439, 450, 454, 466, 474], "flake8": 371, "flare": [132, 285, 400, 413, 414, 436, 459, 460, 462, 464, 483, 499, 500, 501, 511, 512], "flask": 427, "flat": [123, 132, 149, 159, 185, 186, 191, 193, 195, 198, 201, 202, 242, 379, 392], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 185, 186, 193, 195, 198, 459], "fledg": 396, "flexibl": [82, 321, 368, 373, 377, 378, 379, 382, 384, 388, 389, 395, 471, 503, 560], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 95, 101, 104, 108, 109, 112, 116, 120, 122, 123, 124, 126, 128, 129, 130, 131, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 162, 164, 173, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 201, 202, 205, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 277, 278, 279, 280, 281, 284, 289, 297, 308, 315, 324, 326, 357, 358, 359, 470, 476, 478, 479, 563, 567], "float32": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 447, 452, 471], "float64": [87, 90, 110, 114, 144, 147, 368, 396, 469, 471, 501], "float64float64float64": 452, "float64float64float64float64float64float64float64float32bool": 440, "float64float64float64float64float64float64float64float64": 452, "float_a": [87, 90], "flow": [395, 561, 562], "fluctuat": [279, 281, 392, 445, 458, 476, 565], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 99, 100, 101, 104, 108, 109, 116, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 208, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 275, 284, 285, 286, 287, 293, 372, 380, 381, 383, 384, 386, 388, 389, 391, 400, 407, 410, 412, 413, 415, 419, 421, 425, 426, 427, 429, 434, 436, 441, 444, 446, 450, 452, 454, 455, 457, 459, 460, 461, 462, 463, 467, 471, 474, 479, 483, 497, 498, 499, 508, 515, 517, 524, 539, 560, 561, 565], "flux_err": [19, 20, 26, 121, 123, 131, 137, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 286, 287, 293, 446, 459, 460], "flux_errn": [121, 123, 466], "flux_errp": [121, 123, 466], "flux_int_cu": 271, "flux_map": [121, 123, 392, 465], "flux_metadata_fits_kei": 122, "flux_per_omega": 474, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 97, 100, 121, 123, 124, 380, 437, 440, 442, 443, 447, 448, 450, 452, 463, 466, 467, 487, 488, 489], "flux_point_dataset": 380, "flux_points_at_tim": 392, "flux_points_ctb_37b": 123, "flux_points_dataset": [442, 452, 463], "flux_points_dataset_no_ul": 442, "flux_points_fermi": 451, "flux_points_hawc": 451, "flux_points_hess": 451, "flux_points_intrins": 438, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 442, "flux_points_ob": 438, "flux_points_recomput": 123, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 100, "flux_profil": [436, 456, 457], "flux_profile_estim": 456, "flux_profile_fermi": 456, "flux_quant": [132, 133, 134, 459], "flux_ref": [121, 123, 392], "flux_sensit": [121, 123], "flux_ul": [121, 123, 131, 466], "fluxestim": [121, 123, 124, 389, 415, 417, 418, 419, 421, 434], "fluxmap": [120, 122, 123, 131, 137, 419, 434, 446, 501], "fluxmapestim": 392, "fluxmapsmetadata": 395, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 100, 121, 122, 124, 125, 128, 132, 133, 134, 139, 380, 383, 392, 395, 419, 426, 427, 433, 434, 437, 440, 451, 456, 459, 460, 466, 467, 489, 498, 499, 501, 503], "fluxpointdataset": [413, 442], "fluxpointestim": [383, 410, 416, 429], "fluxpointfit": 380, "fluxpointfitt": 428, "fluxpointprofil": 429, "fluxpointsconfig": 16, "fluxpointsdataset": [97, 98, 101, 104, 389, 392, 395, 409, 413, 434, 440, 442, 451, 452, 462, 463, 499], "fluxpointsdatasetmetadata": 395, "fluxpointsestim": [117, 125, 128, 317, 389, 390, 392, 400, 410, 415, 416, 419, 433, 434, 438, 442, 451, 452, 463, 487, 488], "fluxpointsetim": 392, "fluxpointsmetadata": 395, "fluxprofileestim": [117, 419, 432, 434, 456], "fly": 378, "fmt": [468, 476], "focu": [378, 388, 413, 426, 444, 563], "focus": [378, 394], "fold": [107, 392, 440, 451, 499, 501], "folder": [11, 82, 93, 100, 105, 109, 123, 333, 368, 369, 373, 376, 397, 399, 404, 409, 419, 422, 443, 450, 454, 478, 487, 488, 561, 563], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 101, 103, 105, 106, 108, 109, 121, 122, 123, 126, 131, 136, 138, 186, 187, 188, 190, 194, 199, 200, 205, 255, 271, 277, 358, 359, 361, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 411, 412, 413, 415, 416, 419, 421, 422, 428, 429, 433, 434, 437, 438, 439, 440, 442, 443, 445, 446, 447, 450, 451, 454, 455, 460, 461, 462, 463, 465, 466, 468, 470, 471, 472, 473, 474, 478, 483, 487, 489, 491, 493, 494, 499, 501, 503, 505, 507, 508, 512, 514, 515, 516, 517, 525, 526, 530, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547, 548, 561, 564, 565, 566, 568], "font": [187, 188, 190, 196, 199, 200, 369, 471], "fontsiz": [365, 463, 468], "foo": [87, 90], "footprint": [187, 188, 190, 196, 198, 199, 200, 523], "footprint_rectangle_sky_region": 198, "forbid": [16, 84, 103, 122], "forbidden": 473, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 155, 198, 200, 297, 373, 383, 409], "forecom": [368, 393], "foremost": 563, "forens": 384, "foreseen": [378, 393], "forev": 409, "forg": [367, 385, 397, 398, 400, 401, 404, 427, 478], "forget": [443, 453, 487], "forgot": 368, "forgotten": 368, "fork": 371, "form": [16, 84, 87, 90, 101, 103, 122, 157, 160, 195, 309, 368, 374, 378, 383, 391, 393, 395, 405, 427, 472, 476, 500, 508, 521, 531, 561], "formal": [373, 396, 446], "format": [16, 83, 84, 85, 86, 87, 88, 90, 93, 101, 103, 104, 106, 108, 109, 121, 122, 123, 124, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 180, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 202, 218, 226, 232, 240, 255, 265, 268, 305, 327, 349, 350, 357, 367, 369, 376, 377, 378, 379, 380, 382, 384, 392, 394, 395, 398, 407, 419, 421, 424, 428, 430, 431, 433, 434, 438, 440, 442, 443, 444, 446, 447, 448, 450, 452, 454, 455, 456, 459, 460, 462, 466, 469, 471, 472, 474, 478, 479, 480, 481, 487, 489, 491, 497, 499, 500, 501, 502, 505, 506, 507, 508, 509, 516, 557, 558, 562, 563, 564], "format_plot_xaxi": [189, 192, 197, 469], "format_plot_yaxi": [192, 469], "formatt": [357, 471], "formatwarn": 368, "former": [394, 410, 415, 439, 473, 561, 564], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 156, 246, 247, 294, 437, 564], "forum": 397, "forward": [19, 20, 26, 83, 87, 90, 101, 104, 108, 109, 125, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 169, 191, 195, 196, 197, 205, 212, 213, 216, 217, 220, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 272, 295, 357, 362, 369, 375, 378, 392, 440, 451, 499, 501, 516], "forwardref": [16, 84, 103, 122], "found": [19, 20, 26, 82, 86, 87, 90, 132, 170, 175, 194, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 371, 372, 376, 383, 393, 394, 413, 416, 417, 418, 422, 448, 454, 459, 474, 476, 481, 500, 501, 512, 513], "four": [371, 379, 392, 460, 478, 479, 507, 509, 515, 562], "fov": [120, 141, 142, 164, 165, 179, 180, 182, 184, 226, 368, 374, 382, 424, 427, 428, 447, 469, 472, 473, 478, 488, 511, 562], "fov_": 368, "fov_align": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 469], "fov_background": [447, 487], "fov_bkg_mak": [470, 510], "fov_lat": [142, 469, 478, 508], "fov_lat_axi": 469, "fov_lon": [142, 469, 478, 508], "fov_lon_axi": 469, "fov_theta": 368, "fovalign": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 469], "fovbackground": [396, 415], "fovbackgroundmak": [165, 414, 419, 470, 487, 488], "fovbackgroundmodel": [15, 101, 107, 108, 111, 164, 236, 396, 416, 433, 434, 450, 451, 454, 455, 458, 467, 473, 487, 488, 510, 523], "fp": [121, 123, 139, 392, 487, 501, 503], "fp_dataset": [442, 467], "fp_dnde": 392, "fp_energy_flux": 392, "fpe": [317, 390, 392, 438, 442, 452, 463, 488], "fpe_no_ul": 442, "fpp": 286, "fpp_err": [286, 459], "fpp_tabl": 459, "fr": [394, 478], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 104, 109, 144, 147, 203, 224, 228, 245, 247, 259, 285, 287, 296, 391, 499, 507, 508, 520, 521, 522, 525, 526, 530, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547, 551, 552, 553, 555, 565, 566], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 120, 130, 134, 148, 154, 156, 157, 158, 160, 195, 201, 202, 212, 213, 216, 219, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 286, 287, 378, 383, 426, 434, 437, 445, 454, 458, 467, 469, 472, 478, 479, 480], "frame": [16, 83, 85, 90, 93, 94, 95, 101, 104, 108, 109, 110, 114, 125, 136, 157, 167, 170, 180, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267, 295, 296, 331, 344, 368, 369, 377, 379, 382, 392, 409, 410, 412, 413, 414, 439, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 467, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 487, 488, 489, 507, 512, 514, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527], "framework": [379, 381, 382, 384, 386, 387, 391, 409, 410, 416, 428, 463, 474, 493, 503], "franceschini": [220, 221, 268, 433, 438, 529], "franceschini17": [221, 438, 529], "franceschni": 529, "frd_ab": 221, "free": [50, 52, 53, 101, 104, 108, 109, 124, 128, 129, 167, 205, 209, 211, 242, 243, 277, 373, 383, 409, 438, 443, 445, 447, 448, 450, 452, 453, 458, 460, 462, 467, 468, 470, 473, 474, 476, 479, 483, 487, 488, 491, 501, 510, 523, 539, 540, 563, 565, 566], "free_paramet": [209, 211, 277, 468, 473], "freedom": [118, 121, 123, 138, 394, 434, 453, 501, 565, 566], "freez": [19, 20, 26, 87, 90, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 383, 394, 409, 419, 434, 447, 458, 468, 474, 539], "freeze_al": [209, 211], "frenk": 491, "frequenc": [266, 280, 495], "frequent": [192, 368, 377, 386, 394, 459, 461, 462, 472, 503, 504, 563], "frequentist": 386, "fridai": 377, "friendli": [373, 395, 430, 443, 487, 503], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 173, 174, 176, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 277, 278, 279, 280, 281, 284, 287, 295, 296, 297, 307, 315, 317, 319, 320, 324, 327, 328, 332, 336, 347, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567], "from_align": [198, 419], "from_attribut": [16, 84, 103, 122], "from_bound": [147, 149, 157, 186, 192, 198, 392, 451, 454, 455, 467, 469, 470, 471, 481, 515, 516], "from_covariance_matrix": 396, "from_default": 191, "from_diagonal_respons": [110, 114, 144, 145, 146, 446, 479], "from_dict": [19, 20, 26, 100, 101, 104, 108, 109, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 412, 419, 476], "from_dir": [82, 89, 95, 167, 295, 296, 404, 439, 442, 444, 452, 461, 463, 470, 475, 478, 481, 485, 488, 500, 503, 510, 512, 513], "from_edg": [146, 187, 188, 190, 192, 196, 199, 200, 445, 458, 462, 469, 479, 480], "from_edisp_kernel": 145, "from_energy_bound": [101, 104, 108, 109, 110, 114, 144, 146, 147, 155, 157, 167, 185, 186, 191, 192, 195, 198, 200, 369, 437, 439, 442, 444, 451, 452, 454, 455, 461, 463, 467, 469, 470, 474, 479, 480, 488, 507, 510, 512, 513, 516], "from_energy_edg": [144, 192, 363, 467, 469], "from_events_fil": [82, 454, 478], "from_factor_matrix": 203, "from_fil": [82, 500], "from_fits_head": 85, "from_gauss": [144, 145, 149, 155, 157, 160, 507], "from_gaussian": 416, "from_geom": [101, 104, 108, 109, 145, 146, 155, 157, 160, 187, 188, 190, 194, 196, 199, 200, 413, 432, 467, 471, 472, 516, 522], "from_gti": 197, "from_gti_bound": 197, "from_hdu": [186, 188, 200], "from_hdulist": [101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 471], "from_head": [84, 103, 122, 186, 198, 395], "from_irf": 159, "from_log10": [234, 235, 537], "from_map": [121, 123], "from_map_dataset": [104, 109], "from_nam": [448, 452], "from_nod": 192, "from_orm": [16, 84, 103, 122], "from_panda": [87, 90], "from_paramet": [19, 20, 26, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "from_parametr": [147, 505], "from_posit": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 455], "from_refer": 391, "from_region": [195, 219, 433, 512], "from_region_map": 268, "from_spatial_model": 155, "from_spectrum_dataset": [109, 437, 445], "from_stack": [83, 86, 91, 121, 123, 187, 188, 189, 190, 192, 196, 199, 200, 203, 209, 211, 433, 434, 500], "from_tabl": [123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 189, 191, 192, 196, 197, 232, 430, 437], "from_table_hdu": [86, 191, 192], "from_time_bound": 197, "from_time_edg": [197, 459], "from_time_interv": 86, "from_wcs_til": 188, "from_yaml": [16, 218, 240, 379, 443], "fromnumer": 444, "front": [377, 397, 426], "frozen": [19, 20, 26, 100, 124, 128, 164, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 383, 391, 396, 411, 434, 438, 439, 440, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 458, 461, 462, 466, 467, 468, 472, 473, 474, 479, 487, 488, 489, 501, 510, 539, 548], "fr\u00f6se": 434, "ftol": 468, "ftool": 383, "fulfil": [395, 471], "full": [82, 124, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 188, 206, 218, 240, 305, 364, 367, 368, 373, 377, 378, 381, 383, 384, 388, 394, 396, 399, 406, 409, 419, 421, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 503, 514, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561], "full_enclosur": [180, 469], "full_output": [19, 20, 26, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "fulli": [128, 185, 186, 195, 198, 266, 377, 378, 385, 389, 394, 398, 401, 411, 413, 421, 439, 459, 474, 478, 480, 481, 491], "fun": [368, 371], "func": [17, 18, 21, 22, 24, 25, 27, 187, 188, 190, 196, 199, 200, 273, 318, 322, 323, 361, 448, 450], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 90, 99, 100, 101, 102, 104, 107, 108, 109, 116, 121, 128, 131, 132, 133, 134, 137, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 187, 188, 190, 192, 196, 199, 200, 205, 206, 207, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 254, 255, 256, 258, 259, 260, 261, 264, 268, 273, 279, 280, 281, 289, 293, 310, 318, 319, 321, 322, 326, 327, 336, 353, 356, 357, 361, 363, 365, 367, 371, 374, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 391, 392, 393, 395, 396, 400, 404, 405, 407, 409, 410, 411, 412, 413, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 437, 438, 442, 443, 444, 445, 446, 450, 452, 453, 454, 455, 456, 467, 468, 469, 470, 471, 472, 473, 474, 476, 481, 483, 487, 488, 489, 491, 492, 493, 498, 499, 500, 502, 503, 512, 514, 516, 521, 522, 524, 551, 560, 561, 562, 563, 564, 566, 568], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [381, 390, 395], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 116, 120, 124, 125, 128, 131, 193, 321, 368, 371, 372, 374, 377, 378, 381, 382, 385, 387, 388, 389, 390, 391, 414, 415, 416, 419, 421, 448, 454, 465, 466, 467, 471, 488, 489, 492, 493, 508, 563], "furthermor": 478, "futur": [102, 107, 124, 125, 128, 208, 210, 368, 373, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 427, 450, 454, 471, 479, 492, 501, 560], "fvar": [134, 287, 383, 426], "fvar_err": [287, 459], "fvar_tabl": 459, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 90, 94, 112, 136, 186, 187, 188, 190, 192, 196, 198, 199, 200, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 297, 336, 357, 363, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 395, 397, 398, 400, 401, 402, 419, 421, 425, 427, 428, 429, 430, 433, 439, 440, 442, 443, 445, 452, 454, 456, 465, 466, 467, 468, 471, 472, 473, 474, 478, 479, 483, 489, 491, 495, 498, 499, 500, 501, 503, 508, 513, 514, 515, 522, 560, 562, 563, 565, 567, 568], "g0": [450, 479], "g28": 67, "g320": 466, "g_1": 147, "g_2": 147, "g_3": 147, "ga": 456, "gabriel": 428, "gadf": [83, 84, 85, 86, 88, 94, 101, 103, 104, 108, 109, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 378, 381, 392, 395, 419, 421, 430, 433, 469, 471, 487, 499, 503, 516, 562], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 373, 385, 427], "gal_diffus": 384, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 90, 101, 104, 108, 109, 110, 114, 124, 125, 127, 157, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 219, 227, 230, 244, 252, 253, 304, 331, 368, 369, 379, 382, 388, 407, 409, 426, 438, 439, 442, 445, 446, 447, 450, 452, 453, 454, 456, 458, 462, 465, 466, 467, 471, 472, 473, 474, 478, 489, 491, 494, 498, 513, 514, 515, 516, 520, 521, 522, 523, 524, 525, 526, 562, 568], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 220, 286, 287, 407, 439], "galelli": [432, 434], "gallant": 427, "galleri": [398, 414, 416, 419, 430, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 504, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "gallery_jupyt": 517, "gallery_python": 517, "galprop": [186, 187, 188, 190, 199, 200], "galprop2": [186, 187, 188, 190, 199, 200], "gambit": 491, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 120, 124, 130, 156, 180, 187, 188, 190, 199, 200, 220, 222, 223, 224, 245, 246, 247, 268, 271, 324, 368, 374, 376, 379, 380, 381, 382, 392, 397, 398, 400, 404, 405, 410, 424, 425, 426, 427, 428, 437, 438, 440, 442, 443, 444, 448, 451, 452, 453, 454, 456, 466, 469, 471, 472, 475, 478, 480, 481, 487, 489, 491, 493, 494, 498, 499, 500, 503, 506, 508, 510, 512, 513, 522, 529, 533, 534, 541, 542, 560, 561, 562, 563, 564, 565, 568], "gamma1": [212, 530, 544], "gamma2": [212, 530, 544], "gamma_1": [256, 259, 260, 261, 391, 545, 546, 547], "gamma_2": [256, 259, 260, 261, 391, 545, 546, 547], "gamma_min": [130, 437], "gamma_min_sensit": 120, "gammacat": [55, 66, 426, 440], "gammalib": [368, 381], "gammamc_dif": 491, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 390, 391, 392, 396, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 482, 483, 485, 487, 488, 489, 492, 493, 495, 496, 497, 503, 504, 505, 506, 507, 509, 513, 514, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 568], "gammapy_analysis_config": 384, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 90, 93, 95, 100, 101, 104, 108, 109, 113, 115, 116, 120, 121, 123, 125, 127, 129, 131, 136, 137, 139, 140, 142, 146, 147, 148, 149, 157, 167, 187, 188, 190, 196, 199, 200, 221, 232, 268, 277, 295, 296, 347, 356, 361, 363, 368, 369, 371, 384, 400, 402, 404, 408, 409, 410, 419, 428, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 500, 501, 503, 505, 506, 507, 509, 510, 512, 513, 527, 557, 558], "gammapy_extra": 408, "gammapybaseconfig": 16, "gammapydeprecationwarn": [368, 535, 538], "gammmapi": [378, 385], "garcia": 428, "gather": [382, 388, 397], "gauss": [42, 51, 54, 101, 104, 126, 127, 148, 188, 200, 227, 228, 229, 230, 391, 425, 463, 471, 474, 489, 520, 521], "gauss_elong": 474, "gauss_temp": 474, "gaussian": [67, 68, 80, 81, 100, 116, 126, 144, 145, 149, 155, 157, 160, 188, 200, 227, 228, 229, 230, 231, 286, 287, 379, 387, 391, 396, 412, 416, 436, 438, 440, 442, 452, 454, 458, 459, 462, 466, 468, 469, 474, 476, 478, 489, 507, 509, 517, 528, 549, 559], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 116, "gaussian_compon": [67, 466], "gaussian_filt": [126, 200], "gaussian_model": 552, "gaussian_sigma": 468, "gaussianband2d": 427, "gaussianprior": [396, 438, 476], "gaussianspatialmodel": [80, 81, 113, 115, 249, 391, 412, 452, 453, 458, 474, 521], "gaussianspectralmodel": [250, 391, 474, 536], "gaussiantemporalmod": 419, "gaussiantemporalmodel": [262, 391, 415, 474, 552], "gb": [376, 378, 478, 480], "gc": [86, 101, 104, 108, 109, 113, 115, 116, 120, 125, 127, 131, 136, 137, 356, 361, 363, 371, 446, 447, 450, 452, 454, 456, 465, 467, 471, 473, 474, 478, 479, 489, 491, 500, 501], "gc_3fhl": 489, "gc_3fhl_cutout": 489, "gc_3fhl_smooth": 489, "gc_imag": 456, "gc_po": 479, "gc_sep": 473, "gca": 438, "gcc": 404, "geminga": 59, "gen_gaussian_model": 553, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 101, 102, 103, 104, 107, 108, 109, 122, 146, 157, 160, 187, 188, 190, 191, 192, 196, 199, 200, 205, 217, 225, 229, 230, 231, 232, 233, 248, 254, 263, 264, 266, 268, 269, 280, 319, 321, 324, 325, 326, 327, 333, 369, 371, 377, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 398, 401, 404, 410, 414, 415, 416, 419, 421, 426, 430, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 499, 503, 508, 514, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 554, 555, 556, 557, 558, 559, 563, 565, 566], "generalconfig": 16, "generalis": [123, 387, 413, 469], "generalized_gaussian_model": 553, "generalizedgaussianspatialmodel": [249, 416, 474, 522], "generalizedgaussiantemporalmodel": [262, 421, 474, 553], "generalrandom": 411, "generatejsonschema": [16, 84, 103, 122], "gengauss": [231, 474, 522], "geodeticloc": 93, "geolat": 439, "geom": [16, 23, 83, 101, 104, 108, 109, 110, 112, 114, 120, 121, 123, 125, 131, 145, 146, 155, 157, 160, 167, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 214, 215, 218, 219, 226, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 267, 379, 381, 383, 416, 419, 428, 434, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 479, 480, 487, 488, 489, 501, 510, 512, 513, 514, 515, 516, 519, 521, 522, 523, 524], "geom_24_energy_bin": 516, "geom_6_energy_bin": 516, "geom_edisp": [101, 104, 108, 109, 467], "geom_energi": 516, "geom_exposur": [101, 104, 108, 109, 432, 467], "geom_imag": [448, 452, 516], "geom_irf": 381, "geom_psf": [101, 104, 108, 109, 467], "geom_tru": 413, "geomconfig": 16, "geometri": [23, 83, 99, 101, 104, 108, 109, 112, 121, 123, 145, 146, 152, 155, 157, 160, 164, 167, 169, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 267, 364, 374, 380, 383, 384, 413, 419, 430, 442, 443, 444, 445, 447, 448, 450, 454, 455, 458, 467, 470, 479, 480, 499, 501, 503, 511, 515, 561, 562], "geomspac": [123, 396], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 93, 95, 99, 101, 103, 105, 106, 108, 116, 120, 122, 124, 125, 128, 129, 131, 136, 139, 144, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 203, 209, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 305, 321, 368, 369, 373, 374, 375, 376, 377, 378, 382, 383, 385, 392, 394, 395, 396, 398, 399, 401, 402, 404, 405, 408, 410, 425, 426, 427, 428, 437, 443, 445, 446, 450, 451, 452, 458, 461, 466, 467, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 483, 487, 488, 489, 491, 499, 503, 516, 562, 566], "get_altaz": [85, 93, 433], "get_bia": 144, "get_bias_energi": 144, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [187, 188, 190, 196, 199, 200, 470, 471, 479, 480, 515], "get_by_idx": [187, 188, 190, 196, 199, 200, 471, 515], "get_by_pix": [187, 188, 190, 196, 199, 200, 515], "get_cl": [440, 466, 472], "get_coord": [185, 186, 191, 195, 198, 412, 419, 428, 455, 471, 472, 512, 516], "get_dataset": [15, 443, 447, 448, 450, 460, 487, 503], "get_devel_vers": 371, "get_edges_fixed_bin": 139, "get_edges_min_t": 139, "get_edisp_kernel": [145, 146, 414, 419, 467, 479, 507], "get_events_meta_data": 381, "get_excess_map": [15, 487], "get_filenam": [105, 106], "get_flux_point": [15, 121, 123, 392, 414, 443, 487], "get_group_by_idx": 392, "get_hdu": 305, "get_icr": [85, 93, 433], "get_idx": [185, 186, 195, 198, 516], "get_image_by_coord": [187, 188, 190, 196, 199, 200, 471], "get_image_by_idx": [187, 188, 190, 196, 199, 200], "get_image_by_pix": [187, 188, 190, 196, 199, 200], "get_index_list": 186, "get_irfs_featur": [295, 296, 433, 475], "get_kernel": 116, "get_light_curv": 15, "get_mean": 144, "get_observ": [15, 82, 95, 295, 296, 410, 421, 439, 442, 443, 444, 447, 448, 450, 452, 454, 460, 461, 463, 470, 475, 480, 481, 485, 487, 488, 503, 510, 512, 513], "get_ogip_meta": 106, "get_pix": 198, "get_pointing_altaz": [88, 475], "get_pointing_icr": [88, 433, 452, 470, 488], "get_psf_kernel": [155, 157, 160, 434, 479], "get_random_st": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 324, 325, 326, 327, 368], "get_rebinned_axi": 461, "get_resolut": 144, "get_respons": 426, "get_scal": 116, "get_scale_model": [124, 125, 128], "get_spectrum": [187, 188, 190, 196, 199, 200], "get_subcovari": 203, "get_transform": [446, 452, 520, 521], "get_valid_path": 105, "get_wcs_coord_and_weight": 195, "getattr": 396, "getitem": 426, "getlogg": [368, 448, 452, 460, 461, 462, 485], "getter": 369, "getting_start": 388, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 125, 131, 187, 188, 190, 192, 196, 199, 200, 440, 444, 446, 450, 451, 456, 458, 462, 463, 465, 466, 470, 471, 472, 473, 478, 479, 480, 489, 516, 539, 561, 562], "gev2": [19, 465], "gevgevgev1": 440, "gf500b44e3": [103, 122, 405, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "gh": [368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398], "git": [86, 255, 368, 369, 371, 373, 375, 376, 394, 401, 430], "github": [369, 371, 372, 373, 374, 376, 377, 386, 388, 394, 397, 398, 401, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 424, 425, 426, 427, 428, 429], "giuliani": 381, "giunti": [409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 430, 433], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 100, 135, 285, 286, 368, 373, 377, 378, 382, 383, 384, 385, 388, 389, 394, 398, 409, 411, 413, 421, 434, 442, 443, 446, 453, 455, 459, 461, 466, 468, 469, 470, 471, 474, 478, 479, 487, 503, 508, 563, 564, 566, 567], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 169, 170, 173, 175, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 279, 281, 287, 295, 297, 300, 301, 308, 315, 319, 322, 323, 331, 355, 356, 361, 365, 368, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 391, 392, 394, 396, 408, 413, 419, 427, 428, 433, 437, 438, 439, 440, 443, 446, 454, 455, 456, 458, 460, 461, 462, 465, 466, 467, 469, 470, 471, 472, 474, 478, 479, 487, 489, 499, 500, 501, 503, 507, 508, 512, 513, 515, 516, 522, 526, 529, 560, 562, 563, 564, 565], "glast": 479, "glat": [41, 67, 68, 83, 368, 442, 466, 471, 479], "glat_err": 466, "glat_pnt": [452, 478], "glimps": [480, 483], "gll_iem_v06_cutout": [187, 188, 190, 196, 199, 200], "gll_iem_v06_gc": [454, 471, 473, 474, 479], "gll_psc_v16": 61, "gll_psc_v20": 466, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 369, 467], "global": [16, 33, 42, 45, 46, 47, 99, 101, 102, 104, 107, 108, 109, 146, 157, 160, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 205, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 368, 372, 374, 416, 433, 442, 452, 453, 463, 473, 476, 501, 561], "global_dataset": 470, "global_to_loc": 186, "glon": [41, 67, 68, 83, 368, 442, 466, 471, 479], "glon_pnt": [452, 478], "glossari": [388, 430, 499, 516], "glue": 503, "glueviz": 385, "gmodelspatialradialprofiledmburkert": 491, "gmodelspatialradialprofiledmeinasto": 491, "gmodelspatialradialprofiledmzhao": 491, "go": [50, 87, 90, 371, 378, 388, 393, 430, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 491, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563], "goal": [373, 382, 396, 468], "goe": [41, 52, 358, 368, 387, 398, 456], "gogia": 426, "good": [82, 83, 86, 100, 123, 290, 294, 368, 373, 375, 376, 377, 378, 379, 382, 384, 385, 386, 388, 438, 442, 444, 445, 448, 458, 459, 461, 462, 465, 467, 468, 470, 472, 474, 479, 480, 483, 525, 526, 562, 567], "googl": [87, 90, 388, 397], "got": 478, "gov": [58, 60, 61, 62, 64, 65, 144, 192, 388, 397, 542], "gp": [82, 83, 89, 369, 378, 384, 447, 450, 452, 463, 478, 480], "gpl3": 368, "gps_baseline_110380": [82, 83, 478], "gradient": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "grai": [359, 512, 539], "grand": 368, "grant": [371, 394], "granular": 459, "grayify_colormap": 387, "grb": [459, 462], "great": [373, 382, 387, 425, 483], "greater": [164, 361], "green": [100, 108, 109, 427, 453, 475, 476], "grei": 463, "grep": 403, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 127, 148, 156, 158, 187, 188, 190, 192, 196, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 273, 361, 368, 379, 384, 411, 413, 468, 515, 516, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556], "gridsearch": [205, 468], "gridspec": 355, "gridspec_kw": [446, 452, 460, 462, 529], "ground": [94, 383, 478, 564], "group": [86, 87, 90, 91, 124, 125, 128, 129, 131, 145, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 295, 374, 383, 387, 388, 389, 392, 397, 400, 410, 413, 415, 419, 425, 428, 460, 462, 483, 501, 503, 517, 563], "group_1": 475, "group_2": 475, "group_bi": [87, 90, 392], "group_by_axi": 392, "group_by_label": [91, 475], "group_high_zenith": 475, "group_low_zenith": 475, "group_siz": [139, 461], "group_tabl": [86, 192, 197], "grouped_observ": 475, "grow": [376, 387, 427], "grown": 388, "gr\u00e9aux": 433, "gsfc": [58, 60, 61, 62, 64, 65, 144, 192, 388, 542], "gt": 469, "gtexpcube2": 479, "gti": [82, 83, 87, 88, 89, 99, 100, 101, 104, 108, 109, 121, 123, 125, 128, 161, 197, 255, 374, 377, 378, 381, 382, 383, 392, 411, 413, 414, 416, 429, 433, 434, 454, 461, 462, 467, 470, 478, 480, 481, 499, 503, 562], "gti_1": 500, "gti_2": 500, "gti_t0": 462, "gtimetadata": 395, "gtmktime": [378, 479], "gtobsim": 381, "gtol": 468, "gtpsf": [145, 146, 152, 157, 160, 192, 446, 479], "gtselect": [378, 479], "guarante": [376, 391, 393], "guess": [123, 186, 188, 434], "guid": [371, 384, 386, 400, 401, 402, 405, 428, 483, 503, 518, 528, 549, 559], "guidelin": [368, 372, 405, 427], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 90, 93, 101, 104, 108, 109, 113, 115, 116, 120, 125, 127, 131, 136, 137, 149, 221, 268, 356, 361, 363, 369, 390, 428, 438, 442, 443, 446, 453, 454, 455, 456, 466, 467, 469, 471, 473, 474, 478, 479, 480, 485, 487, 488, 489, 500, 501, 503, 505, 506, 507, 509, 529], "h": [26, 67, 82, 86, 87, 90, 94, 126, 146, 187, 188, 190, 196, 199, 200, 280, 358, 388, 391, 400, 404, 405, 413, 428, 436, 437, 438, 439, 442, 443, 445, 451, 453, 460, 461, 462, 465, 469, 470, 471, 474, 478, 479, 480, 482, 483, 485, 487, 488, 498, 500, 503, 516, 551, 552, 562, 563], "h0": 453, "h05": [45, 49], "h1": 453, "h_0": [453, 565], "h_1": [453, 565], "h_i": 126, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 90, 100, 101, 104, 108, 109, 120, 121, 123, 159, 181, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 361, 363, 365, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 415, 416, 419, 421, 422, 428, 429, 430, 432, 433, 434, 438, 439, 442, 443, 444, 448, 453, 455, 460, 461, 463, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 480, 481, 487, 488, 499, 500, 503, 508, 512, 513, 515, 516, 520, 521, 548, 560, 563, 565], "habilit": 294, "hack": 424, "had": [368, 374, 376, 394, 416, 422, 426, 427], "hadron": [270, 374, 379, 448, 467, 478, 499, 512], "hajlaoui": [416, 419], "hal": 394, "half": [157, 160, 192, 198, 267], "halo": 491, "halv": [132, 285, 434], "halving_coord": 459, "halving_err": 459, "hand": [169, 368, 371, 376, 379, 388, 394, 396, 431, 468, 483, 503], "handbook": [388, 483], "handi": 450, "handl": [3, 16, 84, 103, 121, 122, 123, 194, 288, 367, 369, 372, 380, 381, 382, 384, 389, 391, 392, 395, 397, 400, 402, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 442, 444, 450, 451, 452, 454, 467, 469, 471, 473, 474, 479, 480, 483, 488, 489, 499, 500, 503, 562], "handler_map": 365, "hanna": 434, "hap": 384, "happen": [82, 371, 373, 375, 376, 382, 386, 398, 443, 473, 483, 487, 488, 499, 503, 565], "happi": [371, 375, 388, 408, 409, 428], "hard": [368, 369, 391, 396, 414, 476], "harder": [375, 563], "hardli": 395, "harri": [423, 424], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 205, 237, 270, 271, 280, 287, 388, 468], "has_any_t": [121, 123], "has_energy_axi": [185, 186, 195, 198], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 90], "has_masked_valu": [87, 90], "has_mixin_column": [87, 90], "has_offset_axi": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159], "has_stat_profil": [121, 123], "has_success": [121, 123], "has_ul": [121, 123], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 368, "hasn": [373, 567], "hatch": 463, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 94, 99, 103, 106, 110, 114, 121, 122, 123, 124, 128, 136, 137, 144, 145, 146, 155, 157, 160, 167, 169, 181, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 321, 327, 365, 367, 368, 369, 370, 371, 373, 374, 375, 377, 379, 381, 382, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 413, 416, 419, 421, 422, 425, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 461, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 483, 487, 488, 489, 491, 499, 500, 501, 503, 510, 514, 515, 516, 526, 537, 560, 563, 566, 567], "haven": 404, "hawc": [55, 59, 63, 72, 76, 96, 405, 413, 419, 427, 430, 431, 433, 436, 482, 483, 498, 499, 500, 511, 515, 562], "hawc19_flux_point": [123, 451, 503], "hawc_crab": [123, 451, 503], "hd": 67, "hdr": 395, "hdr_dict": 395, "hdu": [67, 82, 83, 85, 86, 87, 88, 93, 101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 305, 354, 369, 378, 407, 422, 424, 427, 430, 431, 454, 469, 471, 478, 480, 481, 499, 500, 503, 505, 506, 507, 509, 516, 558], "hdu1": 144, "hdu2": 144, "hdu_al": 454, "hdu_band": [121, 123, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200], "hdu_class": [82, 87, 305, 478, 480, 481], "hdu_class_uniqu": 87, "hdu_evt": 454, "hdu_filenam": 480, "hdu_gti": 454, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [145, 146, 148, 152, 156, 157, 158, 160, 187, 188, 199, 200], "hdu_loc": 87, "hdu_nam": 305, "hdu_ob": 82, "hdu_out": [187, 188], "hdu_region": [195, 196], "hdu_tabl": [82, 480], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 478, 480, 481], "hdu_type_uniqu": 87, "hduclas2": 469, "hduclas3": 469, "hduclas4": 469, "hduclasn": 469, "hduindext": [82, 305, 480], "hdulist": [101, 104, 106, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 454, 471, 499], "hduloc": [87, 101], "he": [270, 378, 383], "hea": 383, "header": [82, 83, 84, 85, 86, 87, 88, 90, 93, 99, 100, 101, 103, 104, 105, 106, 108, 109, 121, 122, 123, 144, 145, 146, 152, 157, 160, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 267, 307, 350, 351, 354, 373, 378, 381, 395, 413, 421, 423, 428, 430, 433, 444, 454, 455, 471, 478, 567], "healpi": [186, 367, 375, 377, 385, 399, 400, 402, 411, 419, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 514], "healpix": [13, 186, 187, 188, 190, 196, 199, 200, 367, 375, 377, 382, 419, 427, 471, 479, 515], "healpix_to_imag": 420, "heapsort": [87, 90], "heart": 565, "heasarc": [144, 192], "heatmap": [357, 362], "heavi": [428, 429], "heavier": 450, "heavili": 419, "hegra": [96, 271], "heidelberg": 368, "heidt": 459, "height": [16, 29, 87, 90, 93, 125, 330, 443, 447, 448, 450, 456, 460, 463, 465, 471, 472, 474, 487, 512, 516], "heighten": 459, "helen": 425, "hello": [404, 452], "help": [11, 87, 90, 282, 288, 368, 371, 373, 375, 382, 383, 384, 388, 394, 397, 398, 399, 404, 408, 409, 410, 427, 428, 430, 466, 470, 471, 473, 479, 481, 489, 503, 563], "helper": [13, 305, 310, 375, 377, 382, 383, 384, 387, 398, 404, 410, 411, 412, 413, 419, 421, 424, 426, 427, 433, 434, 456, 466, 472, 473, 512, 561, 568], "henc": [87, 90, 384, 447, 448, 501, 516, 565], "her": 397, "here": [13, 82, 83, 87, 90, 101, 108, 123, 138, 142, 147, 156, 205, 279, 281, 284, 356, 367, 368, 369, 370, 371, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 398, 400, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 475, 476, 478, 479, 480, 483, 487, 488, 489, 493, 499, 503, 508, 510, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563, 564, 565, 567, 568], "hereaft": 454, "herebi": 476, "heritag": 394, "herm": [274, 276, 434], "hess": [16, 55, 67, 82, 83, 86, 88, 90, 95, 96, 100, 108, 109, 124, 129, 139, 140, 147, 149, 167, 173, 277, 295, 296, 369, 376, 377, 382, 384, 388, 397, 400, 404, 407, 409, 412, 423, 424, 427, 428, 436, 439, 440, 442, 443, 444, 448, 450, 452, 453, 461, 463, 465, 466, 467, 468, 470, 475, 476, 479, 481, 482, 485, 487, 488, 491, 500, 501, 503, 505, 506, 507, 509, 510, 512, 513], "hess2": [147, 505], "hess_dl3_dr1_obs_id_020136": [88, 149, 369, 505, 506, 507, 509], "hess_dl3_dr1_obs_id_023523": [83, 86, 500], "hess_dl3_dr1_obs_id_023526": 500, "hess_ecpl": [271, 442], "hess_pl": 271, "hessian": 501, "heterogen": [395, 440, 451], "hfm": 67, "hgp": [67, 80, 81, 120, 388, 413, 425, 427, 428, 498], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 466], "hi": [368, 426], "hi_bnd": 192, "hi_threshold": 144, "hidden": 379, "hide": [13, 373, 390], "hierarch": [13, 295, 336, 377, 379, 395, 434, 503, 515], "hierarchi": [295, 379, 412], "hierarchical_clust": [433, 475], "high": [6, 15, 58, 62, 63, 83, 144, 192, 320, 368, 372, 373, 374, 381, 382, 383, 388, 395, 411, 412, 413, 414, 415, 419, 427, 428, 436, 437, 440, 443, 446, 447, 450, 456, 458, 460, 465, 466, 467, 470, 472, 478, 479, 480, 481, 483, 488, 489, 490, 498, 501, 508, 515, 561, 562, 563, 564], "high_zenith": 475, "higher": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 231, 371, 374, 379, 384, 387, 389, 401, 440, 455, 459, 469, 471, 510, 516], "highest": [136, 173, 459, 470, 478, 489], "highli": 474, "highlight": 563, "him": 397, "hint": [395, 446, 501], "hire": [148, 388, 493, 495, 496, 497, 499, 500, 505, 506, 507, 509, 512, 516, 565, 568], "hist": [83, 108, 109, 196, 200, 361, 445, 476], "histogram": [83, 108, 109, 192, 196, 200, 361, 433, 463, 516, 562], "histori": [382, 394, 430], "hli": [381, 414, 415, 419, 430, 436, 441, 483, 502, 562], "hli_spectrum_analysi": 443, "hline": 520, "hoc": 382, "hold": [69, 82, 89, 91, 95, 99, 155, 226, 297, 377, 378, 380, 383, 563, 565], "home": [16, 333, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 529, 535, 538, 551, 557, 558], "homebrew": 385, "homework": 410, "homogen": [87, 90, 416], "honk": 373, "hood": [443, 483, 487], "hook": [371, 430], "hope": 373, "hopefulli": 375, "horizont": [85, 94, 150, 338, 469, 567], "host": 368, "hour": [67, 93, 371, 384, 398, 437, 466, 470, 471, 503], "hover": 369, "how": [16, 19, 20, 82, 83, 84, 85, 98, 103, 122, 123, 125, 127, 167, 188, 198, 200, 321, 327, 370, 373, 376, 380, 382, 384, 385, 387, 390, 391, 394, 395, 398, 399, 400, 404, 405, 408, 409, 410, 413, 414, 421, 423, 426, 427, 428, 433, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 467, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 489, 491, 493, 499, 501, 504, 508, 512, 514, 515, 529, 561, 563, 564, 565, 567, 568], "howev": [87, 90, 100, 120, 286, 367, 368, 369, 371, 375, 378, 381, 382, 386, 394, 396, 401, 439, 448, 456, 463, 465, 466, 467, 468, 476, 480, 481, 483, 499, 503, 515, 516, 521, 537, 563], "howto": [388, 430, 431], "hpx": [186, 187, 188, 190, 199, 200, 382, 419, 471, 479], "hpx2wc": [187, 188], "hpx_map": [187, 188], "hpx_pixel": 382, "hpx_reg": 186, "hpxgeom": [121, 185, 187, 188, 414, 419, 430, 479, 514], "hpxmap": [188, 190, 514], "hpxndmap": [263, 419, 514], "hpxsparsemap": 413, "hpxtowcsmap": [187, 188], "hr": [454, 455, 458, 462], "hspace": 465, "hspec": [423, 424, 425], "hst": 220, "hstack": [87, 90, 381], "html": [26, 83, 87, 90, 124, 144, 180, 186, 192, 195, 198, 205, 218, 240, 268, 297, 324, 325, 368, 369, 371, 376, 388, 393, 394, 398, 406, 427, 437, 445, 447, 450, 452, 458, 462, 468, 469, 478, 500, 506, 514, 516, 542], "htmlcov": 398, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 100, 103, 116, 122, 124, 132, 138, 144, 147, 173, 180, 186, 192, 195, 198, 205, 218, 237, 240, 246, 247, 260, 261, 268, 270, 271, 280, 286, 287, 293, 297, 324, 325, 336, 371, 385, 388, 393, 394, 397, 398, 399, 400, 401, 402, 406, 410, 427, 437, 442, 445, 447, 450, 451, 452, 458, 462, 465, 466, 468, 469, 470, 478, 481, 500, 514, 516, 542, 546, 547, 563], "hubert": 428, "hue": 359, "huestart": 359, "huge": [398, 521], "hugovk": 409, "human": [349, 379, 398, 421, 443, 487], "hundr": 480, "hypercub": [471, 515, 516], "hypothes": [277, 433, 503, 565], "hypothesi": [121, 123, 124, 125, 128, 129, 277, 279, 281, 440, 446, 453, 501, 503, 562, 565], "hz": [327, 489], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 297, 299, 303, 305, 308, 309, 310, 315, 317, 318, 321, 324, 325, 326, 327, 329, 330, 335, 337, 339, 343, 345, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 488, 489, 491, 492, 493, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568], "i0": [87, 90], "i1": [87, 90], "i4": 456, "i8": [471, 489], "i_0": [187, 188, 190, 196, 199, 200], "i_hpx": [187, 188, 190, 196, 199, 200], "i_lat": [187, 188, 190, 196, 199, 200], "i_lon": [187, 188, 190, 196, 199, 200], "i_n": [187, 188, 190, 196, 199, 200], "i_scan": 476, "iact": [82, 83, 85, 93, 167, 170, 174, 374, 377, 378, 379, 380, 382, 384, 388, 405, 410, 424, 426, 428, 440, 446, 448, 470, 471, 473, 478, 479, 481, 500, 505, 506, 507, 509, 560, 562], "iactbasicimageestim": [374, 427], "iau": [52, 407, 411], "iau2015": 52, "ic": 539, "icon": 561, "icr": [83, 85, 88, 90, 93, 94, 95, 101, 104, 108, 109, 136, 157, 167, 170, 186, 187, 188, 190, 193, 195, 198, 199, 200, 214, 215, 219, 227, 230, 244, 252, 253, 295, 296, 331, 368, 369, 392, 412, 442, 443, 444, 445, 446, 448, 451, 452, 454, 455, 458, 460, 461, 462, 463, 466, 467, 469, 470, 471, 472, 474, 475, 478, 479, 480, 481, 487, 488, 500, 503, 507, 512, 516, 520, 521, 522, 524, 525, 526], "icrc": 423, "id": [67, 80, 82, 83, 87, 88, 90, 91, 111, 381, 384, 404, 443, 445, 454, 456, 458, 463, 466, 474, 478, 479, 480, 481, 487, 500], "id_obs_vela": 463, "idea": [373, 376, 383, 387, 388, 389, 443, 469, 475, 479, 487], "ideal": [370, 371, 378, 382, 383, 392, 396, 397, 440, 479], "idempot": [16, 84, 103, 122], "ident": [343, 371, 383, 430, 442, 444], "identif": [67, 374, 466], "identifi": [67, 88, 102, 107, 186, 255, 368, 378, 379, 381, 384, 393, 394, 398, 414, 446, 454, 459, 466, 467, 474, 478, 480, 502], "identified_object": 466, "idx": [83, 87, 90, 91, 99, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 240, 445, 454, 462, 466, 468, 471, 515], "idx1": 468, "idx2": 468, "idx_glob": 186, "idx_loc": 186, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 438, 473, 474, 499, 562], "iem": [473, 479], "iem_minus_iem": 471, "iem_plus_iem": 471, "iem_times_two": 471, "ignacio": 429, "ignasi": 423, "ignor": [11, 16, 84, 87, 90, 100, 103, 122, 151, 161, 190, 208, 210, 226, 297, 309, 369, 421, 442, 456, 462, 463, 467, 472, 487, 503, 563], "ii": [203, 425], "ij": 203, "ilist": 186, "illustr": [108, 109, 369, 378, 380, 381, 382, 384, 387, 444, 446, 451, 456, 467, 470, 471, 473, 474, 479, 493, 499, 512, 513, 520, 521, 529, 561], "illustrate_colormap": 387, "iloc": [87, 90], "im": [357, 468], "imag": [101, 104, 108, 109, 116, 126, 127, 136, 146, 147, 148, 154, 156, 157, 158, 160, 162, 172, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 267, 289, 292, 333, 354, 356, 357, 358, 359, 363, 368, 376, 377, 379, 384, 385, 388, 389, 398, 400, 405, 407, 408, 409, 412, 413, 414, 420, 424, 425, 426, 427, 428, 436, 447, 448, 450, 456, 457, 470, 472, 474, 478, 488, 489, 499, 500, 501, 508, 511, 512, 513, 514, 515, 516, 560, 561, 562, 568], "image_analysi": [388, 408], "image_err": 127, "image_fitting_with_sherpa": [388, 429], "image_pip": 427, "image_profil": 426, "imagehdu": [187, 188, 199, 200], "imagenorm": [358, 359], "imageprofil": 127, "images_t": 452, "imagin": 563, "img": [356, 471], "iminuit": [205, 367, 385, 394, 419, 421, 428, 432, 433, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 560], "immut": 218, "impact": [375, 381, 385, 480], "imperfect": 470, "implement": [19, 20, 101, 104, 108, 109, 138, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 280, 286, 368, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 395, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 426, 427, 429, 430, 433, 434, 439, 447, 459, 461, 465, 466, 470, 471, 472, 491, 499, 501, 503, 508, 509, 510, 548, 560, 561, 562, 563, 564, 567], "implent": 368, "impli": [231, 368, 387, 499, 562], "implic": 390, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 508], "implicitli": 470, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 100, 101, 103, 104, 108, 109, 110, 113, 114, 115, 116, 120, 121, 122, 123, 125, 127, 129, 131, 136, 137, 139, 140, 142, 144, 146, 147, 148, 149, 155, 157, 167, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 209, 211, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 238, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 277, 280, 286, 287, 295, 296, 317, 327, 336, 347, 348, 353, 356, 358, 359, 361, 363, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 415, 425, 427, 432, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 492, 493, 495, 496, 497, 499, 500, 501, 503, 505, 506, 507, 509, 510, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 563, 564, 565, 567], "importantli": [392, 428, 439, 563], "importerror": [87, 90], "impos": [432, 437, 512], "improv": [107, 277, 370, 372, 373, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 393, 398, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 471, 478, 503, 513, 520], "imshow": [101, 104, 155, 188, 200, 356, 362, 426, 471, 489], "in2p3": [394, 478], "in_memori": [88, 503], "in_memory_gener": 91, "in_safe_data_rang": [101, 104, 108, 109], "inaccur": 368, "incex": [16, 84, 103, 122], "incid": [374, 562], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 103, 122, 128, 155, 161, 163, 164, 170, 171, 175, 185, 186, 195, 198, 241, 305, 367, 368, 374, 376, 379, 380, 381, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 409, 411, 416, 427, 432, 433, 434, 437, 451, 453, 454, 456, 462, 465, 466, 468, 470, 472, 473, 474, 478, 480, 491, 493, 499, 501, 502, 513, 515, 560, 564, 567], "include_irf": [83, 88, 500], "include_ssc": 241, "inclus": [83, 195, 382], "incompat": [368, 393, 421], "incomplet": [368, 398, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "inconsist": [416, 422, 432, 433], "inconveni": [387, 428], "incorpor": [384, 388, 396, 562], "incorrect": [83, 368, 395, 403, 412, 430, 431, 470, 476], "incorrectli": [430, 472], "increas": [136, 162, 192, 197, 219, 227, 230, 368, 377, 395, 461, 470, 499, 520], "increment": [19, 20, 26, 116, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 382, 471, 515], "ind": [186, 198, 218, 240], "inde": [454, 521], "indefinit": 375, "indent": [16, 84, 103, 122], "independ": [67, 124, 128, 138, 294, 308, 368, 374, 378, 379, 380, 381, 382, 383, 386, 389, 390, 391, 392, 394, 400, 409, 419, 437, 443, 460, 466, 471, 472, 473, 474, 480, 487, 488, 498, 503, 508, 562, 566], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 90, 91, 99, 100, 101, 104, 108, 109, 120, 121, 123, 124, 125, 129, 130, 131, 135, 144, 145, 146, 152, 155, 157, 160, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 209, 211, 212, 213, 216, 218, 220, 222, 223, 224, 228, 234, 235, 237, 238, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 280, 305, 319, 324, 371, 374, 377, 378, 379, 380, 383, 384, 391, 392, 393, 397, 400, 410, 424, 426, 427, 433, 434, 438, 439, 440, 442, 443, 445, 446, 447, 450, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 469, 473, 474, 478, 479, 480, 481, 487, 488, 489, 501, 514, 515, 516, 519, 520, 521, 522, 524, 525, 526, 527, 529, 531, 533, 534, 535, 540, 541, 542, 550, 551, 552, 553, 554, 555, 556, 557, 558], "index1": [212, 256, 530, 544], "index2": [212, 256, 530, 544], "index_1": [259, 260, 261, 545, 546, 547], "index_2": [259, 260, 261, 545, 546, 547], "index_arrai": [87, 90], "index_column": [87, 90], "index_data": 191, "index_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "index_mod": [87, 90], "index_scan": 476, "indexerror": [91, 99, 240], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 99, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 368, 430, 445, 455, 459, 470, 471, 475, 476, 480, 481, 503, 515, 516, 562], "indico": 377, "indirect": [465, 491], "individu": [87, 90, 107, 118, 126, 364, 374, 380, 381, 383, 388, 391, 392, 396, 439, 442, 445, 453, 456, 461, 466, 467, 468, 470, 473, 474, 489, 499, 503, 508, 562], "indiviud": 390, "indxschm": [187, 188, 199, 200], "ineffici": [87, 90, 371], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 230, 396, 476], "infer": [121, 123, 185, 186, 187, 188, 190, 198, 199, 200, 220, 369, 487, 515], "inferno": 471, "infil": 368, "infin": 476, "influenc": 476, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 148, 154, 156, 158, 279, 281, 305, 369, 383, 384, 388, 397, 403, 413, 414, 416, 423, 424, 427, 443, 447, 448, 450, 454, 461, 465, 466, 467, 471, 479, 480, 481, 483, 485, 487, 563], "info_dict": [101, 104, 108, 109, 279, 281, 361, 416, 434, 467], "info_t": [99, 439, 442, 443, 445, 450, 462, 467, 473, 503], "infodict": 361, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 93, 98, 99, 100, 101, 103, 104, 108, 109, 121, 122, 123, 144, 148, 154, 156, 158, 159, 162, 167, 168, 174, 193, 205, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 256, 259, 260, 261, 263, 264, 267, 268, 282, 288, 305, 321, 350, 351, 368, 372, 373, 378, 380, 381, 382, 383, 384, 391, 392, 395, 396, 398, 403, 404, 405, 413, 415, 416, 419, 421, 427, 433, 434, 438, 440, 443, 444, 451, 454, 455, 458, 459, 467, 468, 470, 471, 474, 478, 479, 480, 481, 487, 488, 489, 498, 499, 500, 501, 503, 516, 562, 563, 566], "infrar": 220, "infrastructur": [398, 419, 430, 433], "ingredi": [392, 465], "inherit": [87, 90, 280, 368, 378, 380, 383, 392, 395, 396, 414, 419, 426, 467, 469, 514, 515], "init": [19, 20, 26, 87, 90, 120, 125, 131, 164, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 309, 321, 380, 416, 431, 433, 434, 456, 466, 467, 489], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 103, 121, 122, 123, 131, 188, 191, 192, 218, 240, 242, 243, 297, 373, 378, 379, 380, 384, 421, 437, 445, 448, 450, 451, 453, 454, 455, 458, 463, 466, 467, 471, 474, 487, 488, 489, 498, 500, 548, 562], "initialis": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 368, 390, 476], "inject": [445, 458], "inlin": [373, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 471, 472, 473, 474, 478, 479, 481, 487, 488, 489], "inner": [44, 52, 53, 125, 162, 172, 253, 448, 489, 526], "inner_height": [512, 516], "inner_width": [512, 516], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 101, 103, 104, 107, 116, 118, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 137, 140, 145, 146, 148, 155, 156, 157, 158, 159, 160, 162, 164, 168, 170, 172, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 209, 211, 218, 232, 240, 266, 267, 268, 280, 297, 308, 318, 321, 338, 340, 361, 363, 374, 376, 378, 379, 380, 381, 382, 383, 384, 389, 404, 414, 419, 422, 429, 433, 445, 454, 455, 463, 471, 476, 501, 515, 516, 564], "input_map": [110, 114], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 433, "insensit": 194, "insert": [87, 90, 91, 99, 240, 394, 414, 566], "insert_row": [87, 90], "inset": 420, "insid": [50, 83, 101, 108, 113, 115, 144, 170, 186, 187, 188, 190, 195, 198, 199, 200, 218, 240, 255, 357, 361, 368, 369, 382, 384, 392, 419, 437, 442, 445, 447, 450, 452, 458, 462, 467, 470, 472, 473, 474, 478, 480, 500, 510, 512, 513, 516], "inside_geom": 472, "insight": 403, "inspect": [380, 384, 404, 442, 444, 450, 454, 455, 468, 471, 473, 478, 479], "inspir": [368, 392], "instal": [87, 90, 367, 368, 371, 375, 376, 377, 385, 397, 398, 399, 402, 404, 405, 408, 409, 419, 423, 426, 427, 428, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 483, 487, 488, 489, 503, 563], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 103, 118, 122, 123, 124, 126, 128, 129, 159, 161, 169, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 315, 321, 355, 357, 358, 359, 362, 364, 368, 374, 379, 380, 383, 384, 390, 392, 395, 419, 440, 442, 445, 456, 466, 468, 470, 472, 473, 474, 489, 493, 503, 515, 516, 539], "instanti": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 187, 188, 190, 192, 199, 200, 379, 384, 439, 443, 466, 467, 471, 474, 476, 487], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 101, 103, 104, 108, 109, 112, 122, 174, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 368, 369, 371, 373, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 399, 400, 402, 409, 412, 415, 416, 429, 433, 438, 444, 450, 454, 458, 460, 462, 463, 466, 467, 469, 470, 471, 474, 476, 500, 507, 508, 515, 516, 563], "instruct": [368, 377, 385, 397, 399, 400, 408, 419, 423, 427, 454, 478], "instrument": [6, 83, 94, 107, 147, 151, 152, 226, 368, 378, 379, 380, 381, 383, 388, 392, 400, 404, 413, 416, 428, 429, 430, 436, 439, 440, 442, 443, 446, 450, 457, 463, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 481, 483, 487, 488, 499, 500, 501, 505, 507, 509, 560, 561, 562], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 92, 93, 101, 102, 103, 104, 107, 108, 109, 111, 116, 118, 122, 123, 124, 125, 128, 129, 131, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 167, 170, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 273, 275, 277, 279, 280, 281, 285, 286, 287, 293, 297, 308, 309, 315, 319, 321, 324, 325, 326, 327, 329, 330, 355, 361, 368, 382, 426, 448, 468, 493], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 508, 520], "int_flux": 465, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 90, 91, 92, 99, 101, 104, 108, 109, 121, 123, 124, 125, 128, 131, 136, 137, 145, 146, 152, 157, 160, 163, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 209, 211, 218, 240, 297, 315, 321, 368, 374, 382, 448, 515], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 100, 101, 104, 108, 109, 121, 123, 126, 128, 135, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 162, 187, 188, 190, 192, 196, 199, 200, 201, 202, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 308, 367, 375, 377, 379, 381, 382, 383, 385, 386, 388, 392, 394, 407, 409, 410, 414, 415, 419, 424, 425, 426, 427, 428, 429, 430, 433, 442, 444, 445, 447, 462, 465, 466, 467, 471, 472, 474, 489, 491, 499, 501, 507, 522, 542], "integral_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 386, 416], "integral_flux_imag": 420, "integrate_geom": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267, 419, 432, 434], "integrate_log_log": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159], "integrate_spectrum": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 410, 416], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 90, 297, 378, 396, 469], "intens": [187, 188, 190, 196, 199, 200, 205, 231, 378, 471, 499], "intent": 373, "interact": [19, 20, 87, 90, 157, 160, 187, 188, 190, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 367, 368, 369, 377, 378, 379, 380, 384, 388, 391, 404, 413, 438, 450, 458, 468, 471, 473, 474, 483, 487, 488, 512, 515, 539, 563], "interchang": 515, "interest": [113, 115, 124, 128, 205, 277, 373, 381, 382, 386, 388, 398, 440, 450, 454, 456, 466, 467, 468, 470, 472, 475, 478, 479, 489, 500, 501, 539, 562, 565, 566], "interfac": [6, 11, 15, 19, 20, 87, 90, 203, 205, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 372, 373, 374, 378, 380, 381, 383, 385, 386, 387, 388, 409, 412, 414, 415, 416, 419, 423, 426, 427, 433, 436, 438, 443, 446, 447, 450, 458, 460, 468, 474, 478, 483, 488, 489, 490, 503, 514, 539, 560, 561, 562, 563], "intermedi": [198, 377, 384, 394, 404, 439, 461], "intern": [15, 19, 20, 26, 87, 90, 121, 123, 132, 133, 134, 164, 170, 195, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 273, 297, 309, 368, 380, 382, 384, 387, 392, 419, 421, 430, 433, 437, 443, 450, 459, 460, 467, 469, 471, 478, 481, 487, 499, 503, 558], "interp": [19, 20, 149, 187, 188, 190, 192, 196, 197, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 310, 363, 391, 396, 432, 434, 445, 451, 455, 458, 462, 469, 470, 471, 474, 479, 480, 481, 515, 516, 539, 540], "interp1": 471, "interp1d": 310, "interp2": 471, "interp_by_coord": [187, 188, 190, 196, 199, 200, 267, 430, 471], "interp_by_pix": [187, 188, 190, 196, 199, 200, 263, 264, 471], "interp_kwarg": [68, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 220, 263, 264, 267, 268, 368, 469, 479], "interp_map": [187, 188, 190, 196, 199, 200], "interp_missing_data": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159], "interp_param": 368, "interp_scal": [100, 278, 310], "interp_to_geom": [187, 188, 190, 196, 199, 200, 416, 432, 471, 479, 503], "interp_weight": 186, "interpol": [6, 26, 93, 100, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 167, 186, 187, 188, 190, 192, 196, 197, 199, 200, 220, 232, 242, 243, 263, 264, 266, 267, 268, 278, 309, 310, 311, 367, 379, 380, 381, 409, 414, 419, 421, 424, 427, 429, 430, 431, 432, 433, 434, 442, 455, 469, 470, 474, 479, 480, 503, 511, 515, 548], "interpolatedunivariatesplin": 266, "interpret": [90, 101, 104, 126, 136, 137, 188, 192, 198, 199, 200, 315, 386, 396, 471, 501, 516], "intersect": [89, 170, 171, 175, 195, 382, 461], "interspers": 373, "interstellar": [45, 454], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 90, 91, 99, 100, 102, 107, 123, 128, 168, 192, 197, 205, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 377, 378, 382, 383, 386, 392, 400, 413, 415, 416, 419, 428, 429, 434, 460, 462, 468, 471, 480, 488, 500, 515, 562, 565], "interval_edg": 197, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 241, 287, 379, 383], "intrinsic_model": 438, "intro_map": 428, "introduc": [19, 20, 187, 188, 190, 192, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 368, 375, 376, 378, 380, 381, 382, 383, 385, 388, 390, 393, 396, 410, 412, 413, 415, 416, 419, 421, 422, 426, 427, 428, 430, 433, 434, 453, 459, 470, 474, 516, 521, 563, 566], "introduct": [371, 389, 390, 391, 409, 413, 414, 415, 416, 440, 443, 474, 480, 481, 487, 488, 492], "introductori": 459, "introspect": 297, "intuit": [389, 566], "invalid": [354, 368, 382, 395, 396, 419, 454, 481], "invalid_pixel": 472, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 212, 213, 216, 220, 222, 223, 224, 228, 231, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 279, 280, 281, 319, 326, 381, 454, 472, 474, 476, 539], "inverse_al": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "inverse_cdf": 454, "inversecdf": 381, "inversecdfsampl": [381, 411], "inversecompton": [241, 539], "invert": [90, 186, 198, 489], "invest": 371, "investig": 453, "involv": [87, 90, 101, 104, 108, 109, 368, 373, 382, 384, 386, 390, 446, 563], "io": [13, 83, 86, 87, 90, 124, 180, 190, 195, 205, 268, 371, 377, 388, 398, 410, 413, 425, 429, 433, 454, 468, 469, 471, 478, 500, 503, 514, 516], "iop": [100, 286], "iopscienc": [100, 286], "ipix": 186, "ipynb": [376, 388, 410, 413, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "ipynb_to_galleri": 368, "ipython": [87, 90, 367, 368, 384, 385, 399, 403, 411, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 483, 487, 488, 489, 502, 563], "ipython3": 401, "ipywidget": 471, "irap": 388, "irf": [6, 82, 88, 95, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 174, 176, 177, 178, 180, 182, 183, 186, 195, 198, 255, 296, 368, 369, 374, 378, 379, 380, 381, 384, 387, 388, 389, 390, 396, 400, 408, 410, 413, 415, 416, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 454, 455, 458, 460, 462, 470, 472, 475, 476, 477, 479, 480, 481, 483, 487, 488, 499, 500, 503, 505, 506, 507, 509, 510, 515, 560, 561, 562], "irf_dict": 161, "irf_dl3_hdu_specif": 469, "irf_fil": [88, 142, 146, 147, 148, 157, 437, 445, 458, 462, 469, 478], "irf_filenam": [454, 455, 469, 478], "irf_map": [145, 146, 152, 157, 160], "irf_path": 454, "irfmap": [145, 146, 157, 160, 400, 416, 503], "irfmetadata": 395, "irfmodel": 379, "irfs1": 478, "irfs2": 478, "irfs_path": 82, "irfstack": [416, 425], "irregular": [186, 198, 515], "irrespect": [381, 450, 471, 515], "is_align": [186, 192, 197, 198], "is_all_point_sky_region": 195, "is_all_same_energy_shap": 99, "is_all_same_shap": 99, "is_all_same_typ": 99, "is_allclos": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200], "is_allski": [185, 186, 195, 198], "is_bkg": 106, "is_contigu": [197, 471], "is_convertible_to_flux_sed_typ": [121, 123], "is_energy_axi": 192, "is_energy_depend": [214, 215, 217, 219, 225, 227, 229, 230, 231, 232, 233, 242, 244, 248, 252, 253, 254, 257, 263, 266, 267, 269, 432, 474], "is_fixed_rad_max": 159, "is_flat": [185, 186, 191, 195, 198], "is_hpx": [186, 195, 198], "is_imag": [185, 186, 195, 198], "is_mask": [187, 188, 190, 196, 199, 200], "is_norm": [19, 20, 100, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 396, 421, 434, 438, 439, 442, 443, 444, 445, 447, 450, 451, 458, 462, 466, 468, 474, 488, 489, 539, 548], "is_norm_spectral_model": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 419, 474], "is_nul": 471, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 419], "is_region": [186, 195, 198], "is_regular": [186, 195, 198], "is_ul": [67, 121, 123, 419, 434, 466, 489], "is_unidimension": 191, "isf": [468, 565], "isinst": [368, 379, 382, 391, 395, 396], "ism": [52, 53, 539], "isn": [371, 375, 382, 384, 387, 398, 452, 563], "isnan": [471, 472], "iso": [88, 123, 197, 202, 433, 462, 473, 479, 515, 557], "iso_p8r2_source_v6_v06": [473, 479], "isol": [382, 399, 472], "isot": [349, 567], "isotherm": [22, 491], "isotrop": [47, 215, 272, 473], "issu": [19, 20, 26, 87, 90, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 368, 369, 371, 376, 377, 379, 380, 382, 385, 388, 393, 394, 395, 396, 397, 400, 401, 402, 409, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 452, 472, 478, 499, 503, 563, 564], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 91, 99, 194, 240, 388, 395], "iter": [87, 90, 91, 99, 121, 123, 187, 188, 190, 191, 192, 194, 196, 197, 199, 200, 240, 371, 374, 376, 384, 420, 446, 462], "iter_by_axi": [121, 123, 187, 188, 190, 196, 199, 200], "iter_by_axis_data": 196, "iter_by_coord": 411, "iter_by_edg": [192, 197], "iter_by_imag": [187, 188, 190, 196, 199, 200, 428], "iter_by_image_data": [187, 188, 190, 196, 199, 200, 471], "iter_by_image_index": [187, 188, 190, 196, 199, 200], "iter_by_pix": 411, "iter_with_reshap": 191, "itercol": [87, 90], "iterrow": [87, 90], "itertool": 468, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 101, 104, 108, 109, 121, 123, 163, 164, 173, 186, 192, 194, 212, 213, 216, 219, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 277, 368, 371, 374, 377, 378, 380, 383, 384, 385, 387, 392, 394, 395, 398, 401, 419, 433, 434, 439, 443, 444, 447, 454, 455, 459, 460, 461, 466, 468, 470, 471, 472, 473, 474, 476, 487, 489, 492, 508, 510, 512, 514, 515, 516, 562, 565], "itself": [87, 90, 367, 368, 383, 394, 439, 460, 461, 463, 476, 563], "ivoa": 434, "j": [19, 20, 23, 101, 108, 126, 138, 280, 369, 371, 499], "j0001": [466, 489], "j0002": [466, 489], "j0003": [466, 489], "j0006": 466, "j0007": 489, "j0008": [466, 489], "j0009": 489, "j0010": 466, "j0013": 466, "j0021": 466, "j0022": 466, "j0025": 466, "j0031": 466, "j0349": 466, "j0521": 442, "j0534": [466, 489], "j0633": 489, "j0835": [440, 489], "j0851": 466, "j1036": 466, "j1104": [466, 489], "j1506": 440, "j1507": 440, "j1513": 466, "j1514": 466, "j1555": 489, "j1653": 466, "j1713": 439, "j1731": 473, "j1732": 473, "j1741": 473, "j1744": 473, "j1745": 473, "j1746": 473, "j1747": 473, "j1748": 473, "j1753": 473, "j1800": 473, "j1801": 473, "j1802": 473, "j1809": 473, "j1811": 473, "j1824": 466, "j1825": 453, "j1843": 67, "j1844": 67, "j2028": 466, "j2158": 466, "j2347": 489, "j2350": 489, "j2351": 489, "j2352": 489, "j2356": 489, "j2357": [466, 489], "j2358": [466, 489], "j2359": [466, 489], "j_": 23, "jackson": [87, 90], "jacob": [409, 428], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 415], "jalel": [416, 419], "jan": [373, 374, 377, 380, 385, 389, 406], "jana": 434, "januari": [375, 377, 393], "jargon": 400, "jason": 409, "javascript": [87, 90], "jax": 386, "jbernet": 434, "jean": [427, 428], "jeffrei": 476, "jeltema": 491, "jep": 373, "jet": 359, "jfact": 465, "jfact_decai": 465, "jfact_map": 465, "jfactor": [19, 20, 433], "jfactori": 465, "jj": 203, "jjghwob": 470, "jk": [101, 108, 499], "jkl": 499, "jl": 499, "jo": [87, 90], "job": [92, 124, 125, 128, 131, 163, 421], "johann": [412, 419, 423, 424, 425, 426, 427, 428], "john": [87, 90], "join": [370, 379, 380, 478], "joint": [99, 108, 109, 118, 129, 138, 140, 277, 376, 377, 380, 384, 388, 390, 400, 409, 410, 412, 413, 428, 429, 436, 439, 440, 442, 443, 444, 446, 453, 457, 462, 467, 468, 470, 474, 475, 476, 479, 483, 487, 501, 503, 560, 561, 562], "joint_fit": 463, "joint_result": 463, "jointli": [475, 480], "jonathan": [423, 424], "jose": [419, 421, 427], "joshi": 419, "jos\u00e9": [376, 384, 388, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 427, 428, 429], "journal": 394, "jouvin": [409, 411, 412, 413, 416, 424, 425, 426, 427, 428], "jqueri": [87, 90], "jskwarg": [87, 90], "json": [16, 84, 103, 122, 397, 421, 423, 427], "json_data": [16, 84, 103, 122], "json_encod": 16, "json_schema": [16, 84, 103, 122], "jsonschema": [385, 412, 413], "jsviewer": [87, 90, 452], "juan": 434, "jul": [374, 383, 385, 387, 405, 406], "juli": [374, 377, 382, 384, 385, 387, 391, 393, 395, 461], "julia": 434, "julian": 567, "julien": [425, 426, 427], "jun": [382, 384, 385, 390, 391], "june": [382, 386, 406], "junior": [66, 388], "jupyt": [367, 375, 384, 385, 388, 399, 400, 402, 403, 405, 410, 425, 426, 427, 429, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563], "jupyterlab": [367, 385, 388, 404, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "jupytext": 388, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 147, 343, 368, 369, 370, 371, 373, 376, 378, 382, 384, 385, 386, 388, 397, 398, 399, 401, 427, 429, 438, 442, 443, 445, 450, 452, 454, 459, 460, 461, 463, 467, 471, 479, 480, 487, 489, 500, 516, 563], "juypter": 384, "jyear": [87, 90], "k": [19, 33, 52, 53, 101, 108, 194, 216, 266, 321, 440, 442, 444, 466, 468, 471, 473, 479, 499, 516, 520, 532, 539, 550], "kai": [427, 428], "kaori": 411, "kaspi": [31, 39, 45], "katrin": [396, 432, 433, 434], "kb": 376, "keep": [13, 87, 90, 99, 121, 155, 187, 188, 190, 196, 199, 200, 205, 368, 369, 371, 373, 374, 375, 376, 382, 385, 386, 387, 388, 391, 392, 417, 427, 447, 448, 453, 458, 468, 473, 479], "keep_byteord": [87, 90], "keep_column": [87, 90], "keep_mc_id": [102, 107], "keepdim": [155, 157, 160, 187, 188, 190, 196, 199, 200, 408, 413, 470], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 101, 103, 104, 108, 109, 116, 122, 131, 138, 194, 205, 337, 354, 376, 378, 385, 390, 392, 395, 405, 428, 438, 467, 474, 529], "kept": [89, 101, 104, 108, 109, 121, 123, 124, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 368, 374, 388, 392, 438, 501], "kernel": [101, 104, 108, 109, 116, 120, 126, 127, 131, 144, 145, 146, 155, 157, 160, 162, 167, 172, 174, 177, 188, 198, 200, 374, 395, 414, 415, 420, 425, 429, 430, 446, 448, 463, 470, 471, 472, 479, 489, 499, 503, 507], "kernel_width": [131, 446, 452], "kernelbackgroundestim": 415, "kernelbackgroundmapestim": 389, "kev": [106, 131, 192, 446, 467, 516], "keyboard": 404, "keyerror": [90, 194, 392], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 94, 100, 101, 103, 104, 108, 109, 122, 123, 125, 126, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 205, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 278, 280, 309, 317, 318, 337, 349, 351, 352, 355, 356, 357, 361, 362, 363, 364, 365, 395, 415, 419, 422, 430, 431, 444, 454, 455, 467, 471, 480, 501, 516, 527], "kg": 52, "khelifi": [411, 413, 416, 419, 422, 426, 427, 428, 430, 431], "kh\u00e9lifi": [394, 430, 432, 433, 434], "kind": [87, 90, 268, 343, 379, 380, 381, 386, 387, 391, 394, 428], "kinet": 44, "king": [156, 412, 423, 424, 425, 426, 427, 428, 469, 509], "kirsti": [432, 433, 434], "kl": 499, "klepser": 423, "km": [32, 37], "km2": 478, "km2a": [57, 70], "know": [369, 371, 373, 377, 382, 384, 385, 392, 398, 410, 427, 428, 429, 452, 455, 465, 469, 470, 471, 478, 480, 481, 563], "knowledg": [396, 404, 440, 445, 451, 453, 456, 458, 460, 468, 470, 471, 473, 476], "known": [279, 281, 297, 381, 442, 446, 448, 453, 460, 470, 471, 472, 489, 503, 513, 563, 564, 565], "koenig": 280, "konig": 280, "konrad": 434, "kornecki": 434, "kovalev": 459, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 241, 297, 300, 465, 466, 497, 539], "kurt": 434, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 90, 100, 101, 104, 108, 109, 123, 124, 125, 126, 128, 139, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 169, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 278, 309, 320, 343, 355, 356, 357, 360, 362, 363, 364, 365, 368, 379, 395, 396, 432, 440, 454, 463, 470, 481, 551], "kwargs_ax": [361, 448, 450], "kwargs_background": [108, 109], "kwargs_colorbar": [141, 142, 144, 147, 148, 149, 154, 156, 158, 200, 356], "kwargs_count": [108, 109], "kwargs_excess": [108, 109], "kwargs_extens": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 453], "kwargs_fit": [108, 109, 361], "kwargs_fp": 100, "kwargs_hist": [361, 448, 450], "kwargs_list": 194, "kwargs_model": 100, "kwargs_npred_sign": [108, 109], "kwargs_point": [195, 218, 240, 444], "kwargs_posit": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 453], "kwargs_residu": [100, 108, 109], "kwargs_saf": [108, 109], "kwargs_spati": [101, 104, 108, 109, 450, 488], "kwargs_spectr": [101, 104, 108, 109, 450, 488], "kwargs_spectrum": [100, 108, 109], "l": [23, 26, 51, 54, 100, 101, 108, 109, 167, 365, 369, 382, 391, 394, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 458, 462, 463, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 487, 488, 489, 499, 503, 516, 539, 562, 564, 565, 566], "l06": [48, 493], "l_": [52, 53], "l_0": [51, 496, 520, 521], "l_snr": 44, "la": 425, "lab": [394, 404, 427], "label": [91, 189, 192, 197, 218, 240, 295, 356, 357, 362, 365, 368, 369, 372, 377, 381, 382, 397, 398, 419, 421, 430, 431, 433, 437, 438, 440, 442, 444, 448, 450, 451, 455, 456, 459, 460, 461, 463, 465, 468, 471, 474, 475, 476, 489, 496, 497, 505, 529, 535, 538, 539, 543], "label_axi": [189, 471], "label_axis2": 471, "labelcolor": 437, "labelmapaxi": [419, 433], "lack": [194, 383, 463], "lafferti": [407, 562], "lafferty1994": 562, "lai": 472, "lambda": [16, 67, 223, 224, 280, 361, 466, 468, 478, 533, 565], "lambda_": [223, 224, 277, 440, 442, 450, 533, 535], "lancast": 138, "land": 398, "langl": 19, "languag": [375, 387], "laplac": [230, 522], "lar": [384, 408, 409, 410, 426, 427, 428, 431, 433], "larg": [67, 87, 90, 187, 188, 190, 196, 199, 200, 263, 265, 267, 368, 371, 373, 374, 382, 388, 389, 409, 419, 428, 429, 434, 437, 442, 448, 461, 466, 472, 478, 479, 480, 489, 499, 501, 503, 504, 510, 516, 522, 560, 563, 568], "large_scale_compon": [67, 466], "larger": [27, 130, 277, 286, 369, 376, 387, 433, 437, 439, 442, 467, 470, 471, 472, 476, 500, 516, 522, 564, 565], "largest": [101, 104, 108, 109, 200, 368], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 93, 99, 187, 188, 189, 190, 192, 196, 199, 200, 240, 327, 365, 375, 378, 380, 390, 394, 397, 398, 400, 402, 408, 409, 459, 510, 512], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 78, 83, 86, 90, 93, 95, 101, 104, 108, 110, 114, 120, 124, 125, 127, 131, 145, 146, 152, 157, 160, 163, 187, 188, 190, 193, 196, 198, 199, 200, 214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 272, 277, 299, 300, 303, 325, 368, 369, 376, 377, 378, 379, 380, 381, 387, 388, 391, 398, 400, 405, 408, 413, 426, 427, 428, 436, 440, 443, 446, 447, 448, 450, 452, 456, 460, 461, 466, 467, 469, 470, 471, 472, 473, 474, 475, 482, 483, 487, 488, 489, 491, 498, 499, 500, 501, 503, 508, 515, 516, 520, 521, 522, 523, 524, 525, 526, 560, 567], "lat_0": [219, 227, 230, 244, 252, 253, 267, 383, 391, 447, 450, 451, 453, 454, 455, 458, 460, 466, 467, 473, 474, 479, 487, 488, 520, 521, 522, 524, 525, 526, 527], "lat_0_err": 453, "lat_pnt": [299, 303], "lat_rang": 325, "lat_t": [299, 303], "later": [368, 373, 374, 375, 379, 380, 381, 384, 385, 386, 387, 388, 389, 407, 409, 419, 420, 422, 423, 429, 438, 442, 444, 450, 451, 467, 470, 471, 474, 479, 489, 499], "latest": [124, 180, 268, 297, 371, 375, 388, 393, 394, 401, 430, 437, 445, 447, 450, 451, 452, 458, 462, 468, 478, 500, 516], "latex": [368, 369], "latex_inlin": 433, "latitud": [93, 185, 186, 187, 188, 193, 195, 198, 199, 200, 325, 355, 412, 456, 471, 474, 508, 515, 523], "latpol": 471, "latter": [174, 205, 379, 381, 383, 389, 392, 395, 413, 444, 445, 454, 455, 458, 472, 473, 510, 512, 562, 564], "launch": [427, 563], "laura": [416, 419, 421, 422, 428, 430, 432, 433, 434], "law": [27, 100, 120, 121, 123, 125, 130, 135, 155, 157, 160, 212, 222, 223, 224, 245, 246, 247, 248, 256, 259, 260, 261, 270, 280, 324, 381, 407, 413, 427, 436, 438, 445, 447, 450, 454, 456, 458, 461, 462, 463, 473, 474, 476, 503, 517, 529, 549, 555], "law2": 542, "layer": [87, 90, 380, 387], "layout": [419, 450, 458, 471, 487, 488], "lazi": [88, 99, 101, 104, 108, 109, 265, 306, 427, 503], "lazili": 101, "lazyfitsdata": 415, "lc": [86, 128, 197, 381, 383], "lc_1d": [121, 123, 139, 459, 460, 461, 462], "lc_3d": 460, "lc_estim": 383, "lc_maker_1d": [460, 461, 462], "lc_maker_3d": 460, "lc_new": 461, "lea": 416, "lead": [120, 368, 377, 382, 387, 389, 391, 393, 394, 412, 476, 478, 480, 491, 563], "leak": [444, 512], "leakag": [280, 460], "leakage_protect": 280, "learn": [142, 147, 368, 385, 388, 397, 400, 402, 404, 428, 440, 442, 446, 452, 453, 454, 456, 459, 466, 467, 468, 471, 474, 476, 478, 483, 489, 563], "least": [43, 44, 368, 371, 373, 377, 454, 459, 515], "leav": [373, 380, 382, 383, 385, 388, 397, 399, 473], "lefaucheur": [425, 426, 427], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 90, 101, 108, 121, 123, 128, 131, 145, 147, 187, 188, 190, 196, 199, 200, 224, 228, 247, 259, 282, 288, 368, 376, 378, 382, 384, 387, 391, 404, 446, 452, 460, 462, 473, 501, 510, 513, 521, 522, 529, 530, 533, 534, 536, 537, 539, 541, 544, 545, 546, 547, 551, 552, 553, 555, 564, 565, 566], "legaci": [368, 427, 428], "legacy_altaz": 85, "legal": [87, 90], "legend": [365, 437, 438, 440, 442, 444, 450, 451, 455, 459, 460, 461, 463, 465, 468, 474, 475, 476, 479, 496, 497, 505, 529, 535, 538, 539, 543], "legend_kwarg": 365, "lemi\u00e8r": 427, "len": [83, 277, 365, 446, 453, 454, 455, 459, 461, 463, 466, 468, 470, 473, 489, 503], "lenain": [427, 428], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 90, 93, 163, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 280, 309, 361, 394, 440, 442, 445, 452, 456, 466, 468, 471, 479, 489, 520], "lengthi": 471, "lennarz": [410, 424, 426], "leq": [520, 525, 526], "less": [77, 186, 188, 192, 232, 266, 288, 368, 373, 375, 386, 398, 427, 468, 474, 475, 476], "let": [67, 271, 368, 371, 373, 377, 382, 385, 400, 403, 427, 428, 429, 440, 443, 444, 445, 446, 450, 451, 452, 453, 454, 456, 462, 463, 466, 467, 468, 471, 472, 474, 476, 479, 487, 489, 563], "level": [6, 11, 15, 16, 83, 84, 103, 120, 122, 205, 279, 281, 368, 369, 371, 372, 373, 379, 381, 383, 387, 388, 389, 392, 395, 400, 404, 411, 412, 413, 414, 415, 419, 427, 434, 436, 439, 440, 442, 443, 446, 447, 448, 450, 452, 454, 458, 459, 460, 461, 462, 463, 465, 468, 473, 475, 478, 479, 480, 481, 483, 485, 489, 490, 499, 500, 501, 508, 510, 511, 515, 560, 561, 562, 563, 567], "levelnam": 368, "levmar": [205, 468], "lf": 398, "lgpl": 368, "lgtm": 398, "lhaaso": [55, 57], "li": [116, 120, 170, 374, 437, 446, 448, 454, 562, 565], "lib": [333, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 535, 538, 551], "librari": [87, 90, 368, 373, 374, 378, 388, 394, 405, 439, 442, 454, 474, 478, 488, 491, 500, 503, 561, 563], "licenc": 394, "licens": [394, 404], "lie": [185, 186, 192, 195, 198], "life": [375, 468], "lifetim": [20, 434], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 128, 132, 220, 232, 287, 372, 379, 381, 384, 388, 392, 400, 413, 415, 416, 423, 426, 428, 433, 434, 436, 438, 459, 464, 483, 499, 500, 501, 502, 511, 512, 515, 517, 559, 561], "light_curv": [16, 232, 388, 428, 436, 443, 447, 448, 450, 460, 464, 487, 558], "light_curve_flar": [436, 461, 464], "light_curve_model": 558, "light_curve_simul": [436, 462, 464], "lightcrv_pksb1222": [232, 558], "lightcurv": [71, 73, 74, 75, 77, 78, 117, 123, 128, 132, 133, 134, 139, 196, 197, 232, 284, 285, 287, 377, 379, 384, 387, 389, 392, 400, 411, 413, 414, 415, 419, 425, 426, 427, 428, 430, 431, 433, 434, 436, 460, 461, 464, 483, 498, 503, 558], "lightcurve_at_energi": 392, "lightcurveconfig": 16, "lightcurveestim": [117, 383, 384, 389, 392, 400, 411, 413, 415, 416, 419, 427, 428, 433, 460, 461, 462, 503], "lightcurvetablemodel": [379, 381], "lightcurvetempl": 379, "lightcurvetemplatemodel": [432, 433], "lightcurvetemplatetemporalmodel": [262, 391, 430, 433, 455, 474, 558], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 90, 136, 137, 151, 159, 187, 188, 190, 194, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 297, 317, 327, 367, 368, 369, 371, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 399, 400, 404, 410, 419, 421, 422, 426, 427, 429, 430, 432, 433, 437, 438, 440, 442, 443, 444, 445, 448, 455, 456, 459, 463, 465, 467, 468, 469, 471, 475, 476, 478, 479, 483, 487, 489, 491, 492, 499, 503, 508, 516, 526, 561, 563, 564, 565, 566], "likelhood": 380, "likelihood": [99, 100, 101, 104, 109, 120, 121, 122, 123, 125, 131, 278, 294, 368, 374, 377, 380, 381, 384, 386, 388, 389, 390, 392, 400, 407, 409, 410, 413, 420, 423, 426, 428, 429, 434, 440, 442, 443, 444, 446, 452, 456, 460, 461, 463, 467, 468, 470, 476, 479, 487, 488, 491, 499, 501, 503, 539, 561, 562, 564, 565], "likelihood_profil": [379, 409], "likelihood_typ": 414, "likewis": [188, 200], "lima": 116, "lima1983": [501, 562, 565], "lima_map": 448, "limamapestim": [389, 415], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 90, 100, 111, 120, 121, 122, 123, 124, 125, 128, 129, 131, 144, 159, 162, 192, 209, 211, 245, 278, 279, 281, 317, 318, 355, 374, 376, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 391, 392, 396, 409, 415, 419, 426, 427, 428, 429, 434, 437, 442, 450, 453, 456, 460, 467, 468, 471, 472, 475, 479, 487, 499, 501, 503, 512, 521, 539, 548, 561, 562, 566], "lin": [19, 20, 192, 196, 197, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 278, 309, 310, 311, 396, 455, 469, 471, 481, 516, 539], "line": [6, 13, 46, 82, 83, 87, 90, 100, 101, 104, 108, 109, 148, 154, 156, 158, 195, 196, 218, 240, 329, 330, 365, 367, 369, 371, 374, 377, 379, 382, 384, 385, 392, 398, 399, 400, 402, 404, 413, 424, 427, 450, 468, 470, 474, 491, 503, 516, 561], "line2d": [195, 218, 240], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 141, 142, 143, 144, 147, 149, 151, 154, 159, 187, 188, 190, 196, 197, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 263, 264, 266, 267, 268, 309, 368, 430, 436, 450, 455, 456, 458, 471, 474, 479, 487, 488, 517, 559], "linear_model": 554, "linearli": [197, 200, 471, 499], "linearsegmentedcolormap": [358, 359], "linearstretch": [358, 359], "lineartemporalmodel": [262, 474, 554], "lineno": 368, "liner": [266, 382], "linestyl": [437, 463, 465, 476, 497, 516, 520, 521], "linewidth": [365, 369], "linhoff": [431, 432, 433, 434], "link": [67, 69, 80, 100, 218, 220, 240, 277, 371, 373, 376, 377, 380, 388, 394, 398, 404, 405, 416, 419, 421, 425, 426, 427, 438, 439, 442, 443, 444, 445, 447, 450, 451, 458, 462, 466, 468, 474, 478, 488, 489, 503, 548, 560], "linkag": 295, "linkage_kwarg": 295, "linkcheck": 369, "linspac": [83, 146, 187, 188, 190, 196, 199, 200, 454, 456, 463, 468, 469, 471, 476, 515, 520], "linux": [375, 385, 398, 401, 428, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 563], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 95, 99, 100, 101, 102, 103, 104, 107, 108, 109, 116, 118, 120, 121, 123, 124, 125, 128, 129, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 167, 168, 170, 171, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 318, 328, 329, 330, 332, 357, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 442, 445, 446, 451, 455, 456, 458, 459, 460, 462, 467, 469, 470, 475, 476, 478, 479, 480, 481, 483, 488, 499, 503, 506, 515, 516, 560, 561, 562, 563], "list_format": [87, 90], "listen": 503, "listenv": 371, "listinfo": 397, "liter": [16, 84, 103, 122, 315, 368], "literatur": [491, 493, 562], "littl": [87, 90, 387, 389, 395, 471, 479, 508, 512, 563], "live": [83, 86, 88, 368, 373, 376, 378, 389, 429, 432], "livetim": [67, 88, 89, 104, 105, 109, 157, 179, 181, 182, 374, 437, 439, 442, 443, 445, 452, 454, 455, 458, 462, 466, 467, 469, 471, 479, 480, 489, 499, 503], "livetime_fract": 89, "ljouvin": 374, "ll": [121, 123, 131, 371, 373, 385, 401, 437, 438, 439, 442, 444, 447, 448, 452, 459, 460, 461, 462, 463, 563, 565], "llvm": 404, "ln": [53, 468, 546], "lo": [23, 426], "lo_bnd": 192, "lo_threshold": 144, "load": [66, 67, 82, 83, 86, 87, 90, 99, 100, 101, 104, 108, 125, 127, 161, 167, 185, 186, 187, 188, 198, 305, 368, 422, 425, 427, 433, 443, 445, 447, 448, 454, 455, 458, 459, 462, 463, 472, 478, 479, 480, 481, 487, 489, 500, 503], "load_cta_irf": [429, 433], "load_irf_dict_from_fil": [157, 433, 437, 445, 454, 455, 458, 462, 478], "loc": [87, 90, 200, 361, 463, 496, 497, 505, 529, 535, 538, 539, 543], "loc_indic": [87, 90], "local": [17, 18, 21, 22, 24, 25, 27, 87, 90, 136, 137, 172, 185, 186, 195, 196, 198, 368, 369, 371, 376, 382, 397, 398, 401, 405, 409, 419, 443, 446, 447, 448, 453, 454, 465, 470, 483, 487, 503], "local_dataset": 470, "local_dens": [17, 18, 21, 22, 24, 25, 27, 465], "local_to_glob": 186, "localfold": 11, "localis": 305, "localn": [16, 84, 103, 122], "locat": [47, 82, 83, 85, 87, 88, 93, 132, 145, 146, 152, 157, 160, 198, 326, 376, 382, 386, 389, 394, 395, 400, 402, 433, 437, 445, 454, 455, 458, 462, 466, 480, 481, 500, 516, 563], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 101, 103, 121, 122, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 192, 196, 200, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 273, 282, 288, 308, 309, 311, 354, 363, 380, 384, 406, 423, 430, 434, 436, 438, 443, 445, 446, 447, 448, 450, 451, 452, 455, 458, 460, 461, 462, 465, 467, 468, 469, 470, 471, 474, 476, 479, 480, 485, 487, 488, 503, 505, 515, 516, 517, 540, 548, 549, 555, 562, 563, 564, 565, 566], "log10": 463, "log_": [234, 235, 474, 537], "log_2": 285, "log_en": 474, "log_level": 11, "log_parabola": 440, "log_parabola_norm": 391, "logarithm": [34, 471, 476, 537], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 426, "loggaussian": 379, "logger": [335, 337, 368, 452], "logic": [16, 84, 86, 103, 122, 173, 392, 471, 472], "logical_and": [187, 188, 190, 196, 199, 200], "logical_or": [187, 188, 190, 196, 199, 200, 470], "loglog": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 308, 437, 465, 495, 496, 497], "lognorm": 465, "logo": 398, "logparabola": [379, 538], "logparabolanormspectralmodel": [235, 250, 391, 416, 474, 538], "logparabolaspectralmodel": [234, 250, 391, 438, 440, 442, 444, 451, 466, 468, 474, 531, 537, 538], "logscal": 413, "logspac": [146, 187, 188, 190, 196, 199, 200, 445, 458, 462, 463, 465, 471, 495, 496, 497, 516], "logspir": [33, 38], "lomb": [383, 427], "lon": [16, 47, 90, 93, 95, 101, 104, 108, 110, 114, 120, 125, 127, 131, 145, 146, 152, 157, 160, 163, 187, 188, 190, 193, 196, 198, 199, 200, 214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 257, 263, 265, 267, 299, 300, 303, 325, 368, 369, 379, 382, 387, 391, 412, 443, 447, 448, 450, 452, 456, 460, 461, 466, 467, 469, 470, 471, 474, 475, 479, 487, 488, 489, 501, 515, 516, 520, 521, 522, 523, 524, 525, 526], "lon_0": [219, 227, 230, 244, 252, 253, 267, 383, 391, 447, 450, 451, 453, 454, 455, 458, 460, 466, 467, 473, 474, 479, 487, 488, 520, 521, 522, 524, 525, 526, 527], "lon_0_err": 453, "lon_pnt": [299, 303], "lon_rang": 325, "lon_t": [299, 303], "long": [368, 371, 373, 375, 382, 384, 387, 388, 390, 393, 395, 421, 430, 438, 466, 483, 515], "longer": [286, 368, 374, 375, 382, 383, 385, 388, 401, 419, 422, 427, 428, 430, 433, 439, 445, 460], "longest": 191, "longitud": [68, 93, 185, 186, 187, 188, 193, 195, 198, 199, 200, 325, 355, 382, 456, 471, 474, 508, 515, 523], "lonpol": 471, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 101, 104, 108, 109, 123, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 327, 368, 370, 371, 373, 380, 382, 383, 385, 387, 388, 391, 404, 427, 439, 442, 443, 445, 446, 447, 448, 450, 452, 454, 456, 458, 460, 462, 463, 467, 469, 471, 474, 478, 479, 481, 483, 487, 489, 491, 500, 503, 563], "look_up": 425, "lookup": 193, "loop": [87, 90, 318, 381, 433, 442, 466, 471, 480, 487, 503], "lopez": [220, 427, 433, 529], "lopez21": [221, 438, 529], "lopez_2021": 221, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 368, "loss": [52, 562], "lost": [99, 101, 108, 503, 516], "lot": [82, 368, 371, 373, 374, 375, 376, 379, 381, 382, 384, 388, 398, 408, 410, 411, 419, 427, 428, 443, 452, 479, 487, 488, 513], "low": [87, 90, 144, 192, 320, 368, 369, 372, 377, 397, 425, 427, 436, 439, 442, 446, 452, 454, 467, 472, 473, 478, 479, 483, 487, 490, 499, 500, 501, 510, 511, 515, 560, 564], "low_zenith": 475, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 121, 123, 144, 173, 192, 194, 197, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 368, 382, 387, 388, 395, 456, 470, 488], "lower_error": 123, "lowest": [387, 459], "lp": [234, 235, 391, 440, 466, 474, 531], "lp_norm": 538, "lss": 442, "lst": [375, 478], "lt": [368, 394, 421, 430, 525, 526], "ltcube": [186, 187, 188, 190, 199, 200, 471], "lts_author": 394, "luca": [409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 430, 433], "lui": 429, "luigi": 424, "luminos": [41, 46, 51, 52, 53, 54, 241], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 497], "lvtm": 462, "lw": [442, 444, 446, 452, 463, 468, 516, 520, 522], "ly": [419, 473], "lyne": 37, "l\u00e9a": [409, 411, 412, 413, 416, 424, 425, 426, 427, 428], "l\u00f3pez": 427, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 90, 93, 96, 110, 114, 128, 185, 186, 187, 188, 190, 196, 198, 199, 200, 280, 294, 368, 369, 371, 382, 399, 400, 401, 402, 438, 455, 465, 468, 469, 471, 474, 485, 508, 512, 514, 515, 516, 527, 563, 566], "m1": [400, 402], "m2": [101, 147, 167, 438, 443, 445, 447, 448, 450, 452, 458, 467, 469, 470, 478, 487, 488], "m_": [20, 50, 52, 53], "m_3fhl_gc": 471, "m_4d": 471, "m_allski": 471, "m_b": 564, "m_cube": 471, "m_ejecta": [52, 496], "m_gc": 471, "m_hpx": 471, "m_i": 564, "m_iem_10gev": 471, "m_iem_cutout": 471, "m_iem_gc": 471, "m_iem_interp": 471, "m_sub": 471, "m_sun": 496, "m_wc": [187, 188, 190, 196, 199, 200, 471], "ma": [87, 90, 116, 120, 437, 446, 448, 562, 565], "mac": [87, 90, 368, 375, 398, 426, 563], "machin": [371, 375, 376, 381, 385, 398, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 450], "maco": [385, 428], "macport": [385, 426, 428], "made": [167, 174, 195, 198, 209, 211, 218, 240, 297, 329, 330, 368, 371, 373, 384, 387, 389, 392, 393, 394, 419, 430, 431, 442, 446, 450, 451, 470, 478, 516, 527, 562], "madrid": 378, "magenta": [365, 453, 475], "magic": [96, 400, 405, 421, 427, 430, 444, 479, 562], "magic_ecpl": 271, "magic_lp": [271, 444], "magnet": [42, 50, 51, 54, 539], "magnetic_field": [50, 51, 54], "magnitud": [309, 454], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 93, 100, 103, 122, 123, 124, 125, 128, 208, 210, 368, 369, 371, 376, 377, 381, 382, 384, 385, 393, 394, 398, 399, 401, 406, 407, 438, 447, 448, 454, 478, 502, 515, 522, 539, 560, 563, 567], "mail": [369, 371, 373, 375, 382, 384, 387, 389, 391, 394, 397, 403, 408, 409, 489, 563], "mailman": 397, "mailmap": [419, 430], "main": [90, 101, 108, 368, 371, 373, 374, 376, 380, 383, 384, 385, 388, 392, 394, 398, 409, 415, 419, 422, 427, 433, 443, 453, 454, 456, 458, 466, 469, 471, 472, 473, 485, 487, 488, 498, 500, 504, 563], "mainli": [368, 378, 379, 382, 389, 471], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 368, 370, 385, 387, 388, 389, 393, 398, 428, 470], "mainten": [368, 375, 394, 398, 410, 432], "major": [195, 219, 227, 230, 368, 372, 373, 377, 385, 393, 421, 427, 428, 520, 521, 522], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 94, 100, 103, 122, 162, 163, 167, 168, 169, 170, 172, 173, 174, 177, 178, 183, 184, 186, 187, 188, 191, 192, 195, 197, 198, 199, 200, 266, 327, 329, 330, 339, 367, 369, 370, 373, 374, 375, 378, 380, 382, 384, 385, 386, 387, 388, 389, 392, 394, 395, 398, 404, 407, 408, 410, 413, 414, 419, 421, 424, 425, 426, 427, 430, 432, 438, 439, 442, 444, 445, 448, 450, 454, 458, 460, 468, 469, 470, 471, 474, 478, 479, 480, 485, 489, 500, 503, 563, 564], "make_background": [167, 174], "make_background_fit": 164, "make_background_scal": 164, "make_base_catalog_galact": [427, 493], "make_concentric_annulus_sky_region": 456, "make_contour": 468, "make_count": [167, 168, 169, 174], "make_counts_off": [168, 169], "make_cub": 162, "make_dataset": 163, "make_default_fov_background_model": 164, "make_edisp": [167, 174], "make_edisp_kernel": [167, 174], "make_edisp_kernel_map": 469, "make_edisp_map": 146, "make_effective_livetime_map": 470, "make_exclusion_mask": 164, "make_exposur": [167, 174], "make_exposure_irf": [167, 174], "make_imag": 428, "make_lupton_rgb": 363, "make_map_background_irf": 422, "make_map_count": 374, "make_map_cutout": 374, "make_map_exposure_reco_energi": 374, "make_map_exposure_true_energi": [146, 374, 469], "make_map_fov_background": 374, "make_map_hadron_accept": 374, "make_map_ring_background": 374, "make_map_xxx": 374, "make_maps_off": 172, "make_mask_bkg_invalid": 173, "make_mask_energy_aeff_default": 173, "make_mask_energy_aeff_max": 173, "make_mask_energy_bkg_peak": 173, "make_mask_energy_edisp_bia": 173, "make_mask_offset_max": 173, "make_mean_edisp": 429, "make_mean_psf": 429, "make_meta_t": [167, 174], "make_model": 387, "make_more_random_stuff": 368, "make_observation_time_map": 470, "make_orthogonal_rectangle_sky_region": [125, 456], "make_path": [123, 451, 467], "make_pixel_region": 382, "make_psf": [157, 167, 174, 429], "make_psf_map": 469, "make_quant": 339, "make_random_stuff": 368, "make_region": 382, "make_sky_coord": 382, "make_some_random_stuff": 368, "make_theta_squared_t": [419, 481], "makefil": [398, 423], "maker": [6, 146, 157, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 374, 381, 383, 394, 413, 415, 416, 421, 430, 433, 434, 436, 437, 442, 444, 445, 448, 452, 454, 455, 458, 462, 463, 467, 469, 472, 477, 480, 481, 483, 499, 500, 513, 515, 562], "maker_fov": 488, "maker_safe_mask": [452, 458, 488], "mamba": [371, 399, 400, 421], "manag": [87, 90, 209, 211, 218, 240, 317, 346, 367, 368, 371, 376, 384, 385, 387, 390, 394, 395, 397, 419, 424, 426, 430, 434, 471, 473, 563], "manconi": 411, "mandatori": [173, 371, 381, 394, 455, 474], "mandatory_keyword": 469, "mani": [87, 90, 309, 368, 369, 371, 373, 375, 377, 380, 382, 383, 384, 385, 388, 389, 394, 398, 404, 410, 411, 416, 419, 425, 426, 427, 428, 429, 432, 433, 439, 442, 445, 453, 458, 459, 471, 481, 483, 491, 499, 501, 513, 516, 560, 561, 562, 563, 567], "manifest": 378, "manipul": [87, 90, 392, 395, 421, 476, 515], "manner": [432, 433], "manpow": [373, 385], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 375, 380, 390, 397, 454, 503, 511, 563, 564], "manuel": [420, 423, 424], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 131, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 215, 218, 219, 226, 227, 230, 232, 240, 242, 244, 252, 253, 255, 257, 263, 264, 265, 267, 268, 275, 280, 319, 355, 356, 361, 363, 365, 367, 368, 369, 371, 375, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 395, 400, 404, 408, 409, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 433, 434, 436, 437, 439, 442, 443, 444, 445, 449, 450, 453, 454, 455, 456, 457, 459, 460, 461, 462, 466, 467, 470, 474, 477, 478, 479, 480, 481, 483, 484, 487, 488, 491, 498, 499, 500, 502, 503, 507, 508, 509, 510, 511, 512, 513, 519, 521, 522, 523, 524, 527, 558, 560, 561, 562], "map_": [201, 202, 356, 363], "map_4d": 471, "map_analysi": 387, "map_cent": 267, "map_coord": [83, 146, 157, 160], "map_dataset": [380, 463], "map_dataset_empti": 463, "map_dataset_mak": 463, "map_dataset_on_off": 463, "map_edisp": [110, 114], "map_in": [187, 188, 190, 196, 199, 200], "map_out": [104, 109, 145, 146, 152, 157, 160, 187, 188, 190, 196, 199, 200], "map_select": [16, 443, 447, 448, 450, 487], "map_typ": [187, 188, 190, 196, 199, 200, 471, 515], "mapax": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 416, 419, 421, 471], "mapaxi": [19, 20, 26, 101, 104, 108, 109, 110, 111, 112, 114, 121, 123, 125, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 167, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 363, 369, 383, 392, 410, 411, 413, 416, 419, 429, 433, 437, 439, 442, 444, 445, 451, 452, 454, 455, 458, 461, 462, 463, 467, 469, 470, 471, 474, 479, 480, 481, 488, 507, 510, 512, 513, 515, 516], "mapcoord": [83, 146, 157, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 242, 427, 428, 471, 516, 523], "mapdataset": [97, 98, 102, 104, 107, 108, 109, 111, 112, 113, 115, 116, 120, 125, 128, 131, 135, 136, 137, 138, 162, 163, 164, 167, 168, 172, 173, 226, 361, 364, 381, 383, 389, 390, 409, 410, 411, 412, 413, 414, 415, 416, 419, 433, 434, 446, 447, 451, 452, 453, 455, 456, 458, 460, 462, 463, 468, 470, 472, 473, 479, 487, 488, 501, 503, 510, 513, 562, 564, 565], "mapdataseteventsampl": [92, 107, 413, 414, 415, 422, 433, 454, 455], "mapdatasetmak": [157, 165, 174, 381, 413, 416, 419, 422, 430, 452, 454, 455, 458, 463, 469, 470, 480, 487, 488, 503, 510, 513], "mapdatasetmetadata": [101, 104, 395], "mapdatasetoff": 421, "mapdatasetonoff": [97, 101, 108, 109, 116, 120, 135, 162, 168, 172, 413, 414, 416, 419, 432, 433, 448, 463, 470, 499, 513, 564], "mapdatasetsampl": 381, "mapevalu": [379, 380, 412, 413, 416, 419, 430, 431, 432, 434], "mapeventsampl": [411, 412], "mapfit": [379, 380, 409, 428, 429], "mapgeom": [374, 429, 430], "mapmak": [167, 384, 409, 413, 428], "mapmakerob": [412, 413], "mappabl": 392, "mappanelplott": [389, 568], "mapper": 305, "mappingintstrani": [16, 84, 103, 122], "maps_off": 172, "mar": [385, 406, 431], "march": [375, 377, 406, 408, 429], "marcocirelli": 26, "margin": [100, 104, 109, 113, 115, 186, 188, 198, 200, 218, 240, 255, 379, 472, 520, 562, 564], "marion": [409, 428], "mark": [90, 368, 379, 397], "marker": [100, 101, 104, 108, 109, 437, 439, 442, 444, 446, 452, 459, 460, 461, 462, 489], "markerfacecolor": [101, 104, 108, 109], "markers": [100, 101, 104, 108, 109, 476], "mask": [83, 87, 90, 98, 100, 101, 104, 108, 109, 120, 124, 125, 127, 128, 129, 131, 145, 146, 152, 157, 160, 162, 164, 169, 170, 171, 172, 173, 175, 185, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 209, 211, 218, 240, 255, 380, 396, 413, 415, 416, 417, 419, 422, 428, 430, 431, 432, 433, 436, 437, 439, 450, 452, 470, 473, 477, 480, 483, 499, 510, 512, 515, 562], "mask_1": 475, "mask_2": 475, "mask_bright": 466, "mask_contains_region": 200, "mask_data": 472, "mask_energi": [467, 472], "mask_fit": [100, 101, 104, 108, 109, 113, 115, 380, 413, 430, 444, 450, 463, 467, 468, 472, 476, 499], "mask_fit_imag": [101, 104, 108, 109], "mask_imag": [101, 104, 108, 109], "mask_map": [186, 198, 436, 472, 477], "mask_map_catalog": 472, "mask_nearest_posit": [187, 188, 190, 196, 199, 200], "mask_off": 463, "mask_roi": 466, "mask_saf": [100, 101, 104, 105, 108, 109, 173, 380, 413, 467, 470, 472, 499], "mask_safe_edisp": [101, 104, 108, 109], "mask_safe_imag": [101, 104, 108, 109, 145, 146, 152, 157, 160], "mask_safe_psf": [101, 104, 108, 109], "mask_spac": 467, "mask_valid": 100, "masked_ev": 83, "maskedarrai": [87, 90], "maskedcolumn": [87, 90], "mass": [19, 20, 26, 52, 381, 415, 434, 465, 491, 524], "massdm": [19, 20, 465], "master": [374, 375, 382, 397, 398, 407], "match": [87, 90, 107, 111, 185, 186, 188, 191, 192, 193, 195, 198, 200, 202, 279, 281, 368, 376, 427, 429, 434, 442, 445, 462, 479, 498, 515], "match_by_nam": 193, "math": [227, 367], "mathcal": [468, 499], "mathemat": [474, 476], "mathieu": [419, 422], "mathrm": [19, 20, 23, 101, 108, 147, 465, 468, 499, 564, 566], "mathworld": [324, 325], "matplotlib": [19, 20, 26, 66, 67, 83, 127, 141, 144, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 187, 188, 190, 196, 199, 200, 203, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 346, 356, 357, 358, 361, 362, 363, 365, 367, 368, 369, 382, 385, 394, 401, 404, 411, 419, 421, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 495, 496, 497, 503, 505, 506, 507, 509, 512, 520, 522, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 567], "matric": 203, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 110, 114, 144, 145, 146, 149, 203, 204, 205, 209, 218, 240, 279, 281, 361, 385, 386, 396, 429, 430, 433, 468, 469, 499, 501, 507], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 382, 388, 396, 428, 433, 434, 436, 470, 477, 479, 483, 492, 515, 561, 563], "matthew": [375, 425, 427, 428], "matthia": [427, 428], "mattox": 446, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 90, 101, 111, 124, 126, 128, 157, 159, 160, 163, 167, 169, 173, 200, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 325, 376, 384, 391, 396, 404, 415, 416, 417, 419, 421, 433, 438, 439, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 456, 458, 459, 460, 461, 463, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 479, 480, 487, 488, 491, 510, 512, 513, 520, 539, 542, 548, 565], "max_ag": [45, 493], "max_column": [87, 90], "max_energi": 459, "max_lin": [87, 90], "max_offset": 384, "max_percentil": 83, "max_radiu": [155, 157, 160, 198, 479], "max_region_numb": [170, 512], "max_width": [87, 90], "maxcal": 205, "maxclust": 295, "maxfev": 468, "maxim": [45, 82, 90, 111, 173, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 431, 432, 433, 434, 512], "maxima": [136, 209, 211], "maximilian": [419, 421, 422, 431, 432, 433, 434], "maximum": [19, 20, 45, 46, 47, 83, 87, 90, 99, 121, 123, 124, 126, 128, 157, 160, 162, 170, 173, 179, 182, 186, 192, 197, 198, 208, 210, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 279, 281, 324, 326, 329, 365, 371, 374, 382, 421, 440, 446, 459, 470, 471, 476, 480, 488, 493, 501, 512, 539, 561, 562, 565], "maxmimum": 476, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 376, 378, 379, 390], "mb": [185, 186, 195, 198, 376, 400, 402, 436, 441, 449, 457, 464, 477, 478, 479, 481, 482, 484, 486, 490, 518, 528, 549, 559], "mbox": [101, 108], "mc": 386, "mc_id": [83, 378, 381, 421, 454, 478], "mcerp": 386, "mckee": [53, 434], "mcmc": [386, 388, 409, 414, 416, 539], "mcmc_sampl": [388, 411], "md": [371, 388, 394], "mdm": [26, 465], "mean": [42, 68, 87, 90, 95, 100, 101, 125, 127, 144, 145, 146, 149, 152, 157, 160, 228, 232, 266, 284, 296, 315, 368, 369, 371, 373, 375, 381, 382, 384, 385, 391, 396, 401, 404, 416, 425, 442, 445, 455, 459, 468, 470, 474, 475, 476, 479, 480, 489, 521, 536, 563, 564], "meaning": 474, "meant": [374, 433, 437, 445, 447, 450, 452, 458, 462, 478], "measur": [27, 67, 100, 104, 109, 127, 192, 271, 279, 281, 284, 285, 286, 287, 290, 291, 293, 294, 374, 382, 387, 392, 398, 407, 412, 420, 426, 428, 438, 439, 442, 444, 445, 448, 451, 453, 456, 458, 459, 460, 461, 466, 479, 488, 489, 501, 508, 510, 513, 561, 562, 565, 566], "mechan": [376, 386, 392, 395], "media": 394, "median": [83, 157, 160, 404, 463, 475, 479], "median_zenith": 475, "medium": [45, 52, 368, 377], "meeseeksdev": 368, "meeseeksmachin": 368, "meet": [218, 240, 297, 374, 376, 388, 393, 398], "megabyt": [185, 186, 195, 198], "mem": [436, 441, 449, 457, 464, 477, 482, 484, 486, 490, 518, 528, 549, 559], "member": [83, 369, 373, 382, 394, 395, 427, 433, 478, 481], "memo": [144, 192], "memori": [87, 88, 90, 91, 99, 101, 102, 104, 107, 108, 109, 185, 186, 195, 198, 263, 265, 267, 346, 368, 378, 380, 381, 384, 390, 392, 413, 419, 434, 445, 458, 503, 562], "memoryobserv": 88, "mender": [432, 433, 434], "mention": [59, 139, 368, 369, 371, 375, 376, 380, 382, 385, 387, 388, 393, 394, 397, 398, 469, 473, 474, 491, 562], "mentor": [371, 388], "mere": 378, "merg": [67, 86, 87, 90, 189, 192, 218, 240, 336, 368, 371, 372, 373, 374, 381, 382, 383, 387, 388, 393, 394, 397, 398, 408, 409, 410, 411, 412, 413, 414, 415, 416, 424, 425, 426, 427, 428, 429], "merge_equ": 86, "mergesort": [87, 90], "mess": 369, "messag": [100, 204, 206, 207, 371, 382, 384, 391, 417, 432, 439, 440, 442, 443, 444, 450, 451, 452, 462, 463, 468, 479, 487, 488, 503, 563], "met": [86, 349, 433, 461, 562], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 90, 93, 99, 101, 102, 104, 106, 107, 108, 109, 121, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 174, 187, 188, 190, 196, 199, 200, 263, 264, 267, 268, 307, 349, 350, 351, 352, 378, 381, 382, 383, 392, 395, 415, 416, 427, 431, 433, 434, 454, 463, 471, 475, 478, 480, 500, 501, 558], "meta_t": [99, 100, 101, 104, 108, 109, 167, 174, 392, 395, 416, 439, 445, 470, 499], "metaattribut": [87, 90], "metadata": [16, 83, 84, 85, 87, 88, 90, 103, 105, 121, 122, 123, 141, 142, 143, 147, 148, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200, 350, 372, 374, 385, 434, 443, 454, 474, 487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "metadata_fits_export_kei": [84, 103, 122], "metadatabas": 395, "metadatabasemodel": 395, "metapackag": 385, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 287, 295, 305, 309, 313, 317, 318, 319, 342, 355, 357, 367, 368, 371, 374, 377, 378, 379, 382, 383, 384, 386, 387, 388, 390, 392, 394, 395, 400, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 437, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 458, 461, 463, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 498, 500, 502, 503, 507, 510, 512, 513, 514, 516, 537, 551, 560, 561, 562, 563, 565], "method_kwarg": [317, 318], "methoda": 411, "metric": 295, "mev": [74, 83, 141, 142, 143, 147, 437, 438, 445, 447, 450, 452, 458, 462, 463, 466, 469, 471, 474, 478, 479, 489, 548], "meval": 522, "mexico": 480, "meyer": [237, 271, 451, 562], "meyer2010": 562, "mgtime": 383, "michael": [432, 434], "mid": [422, 433, 478], "middl": [357, 384], "midli": 442, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 175, 192, 205, 368, 373, 379, 380, 382, 385, 387, 392, 394, 395, 400, 402, 409, 442, 461, 463, 467, 470, 472, 479, 480, 483, 489, 491, 499, 503, 510, 516, 563, 565], "migra": [101, 104, 108, 109, 146, 149, 178, 384, 454, 455, 469, 508], "migra_axi": [101, 104, 108, 109, 112, 146, 149, 454, 455, 469, 470], "migrad": [100, 205, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488], "migrad_opt": [205, 468], "migrat": [101, 104, 108, 109, 112, 149, 377, 412, 419, 428, 454, 470, 507, 508], "milagro": [96, 359], "mileston": [377, 397], "milki": [33, 38, 407, 493], "miller": [87, 90], "million": [368, 395], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 90, 101, 124, 126, 128, 139, 167, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 285, 325, 383, 384, 391, 396, 404, 419, 427, 438, 443, 445, 447, 448, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 467, 468, 469, 470, 471, 474, 475, 476, 479, 487, 488, 491, 512, 539, 542, 548], "min_count": 164, "min_dist": [136, 137, 170, 446, 452, 512], "min_distance_input": [170, 512], "min_energi": 459, "min_npred_background": 164, "min_signific": 383, "min_significance_lc": 383, "minaya": 429, "mind": [371, 388, 458, 468], "mini": 388, "miniconda": 399, "minim": [19, 20, 26, 111, 130, 187, 188, 190, 195, 196, 199, 200, 201, 205, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 277, 380, 383, 391, 395, 421, 431, 433, 437, 454, 467, 468, 476, 488, 503, 512, 513, 516, 561, 566], "minima": [209, 211, 476], "minimis": [462, 475], "minimum": [19, 20, 26, 47, 83, 99, 120, 121, 123, 124, 126, 128, 130, 132, 136, 137, 139, 140, 162, 164, 170, 192, 195, 197, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 273, 278, 282, 285, 297, 324, 326, 329, 363, 385, 421, 427, 442, 446, 454, 468, 471, 476, 479, 501, 503, 512, 539, 566], "mino": [205, 468], "minor": [368, 373, 388, 391, 393, 418, 431, 521, 522], "minos_contour": [411, 429], "minu": [149, 463], "minuit": [100, 118, 205, 206, 207, 379, 386, 413, 428, 429, 433, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488], "minuit_opt": 468, "minut": [388, 398, 427, 442, 446, 448, 450, 452, 453, 454, 456, 458, 461, 462, 465, 467, 468, 470, 476, 487], "mireia": 430, "mirror": 184, "misc": [407, 420, 424, 425, 426], "miss": [82, 87, 90, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 368, 371, 376, 377, 378, 379, 382, 388, 389, 392, 417, 419, 421, 427, 432, 471], "mission": [83, 433, 562], "mistak": [373, 393], "mix": [367, 368, 384, 467, 471], "mixin": [87, 90], "mjd": [86, 93, 123, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 350, 352, 369, 432, 433, 446, 454, 455, 459, 460, 461, 462, 471, 474, 500, 551, 552, 553, 554, 555, 556, 557, 558, 567], "mjdref": [446, 471], "mjdreff": [93, 349, 352, 455], "mjdrefi": [93, 349, 352, 455], "mkdir": [384, 442, 443, 450, 451, 454, 487, 488], "mkn": [489, 562], "mkn_421_3fhl": 489, "mncontour": 205, "mnra": [132, 293], "mnt": 430, "mock": 453, "mock_dl4": 453, "mode": [16, 84, 85, 87, 90, 93, 101, 103, 104, 108, 122, 126, 145, 146, 152, 157, 160, 163, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 265, 395, 414, 427, 430, 434, 462], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 92, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 138, 141, 147, 148, 155, 156, 157, 158, 160, 164, 167, 180, 187, 188, 190, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 289, 292, 294, 364, 367, 368, 369, 372, 373, 374, 380, 381, 383, 384, 386, 388, 389, 392, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 445, 446, 448, 453, 456, 458, 463, 469, 470, 471, 472, 477, 479, 480, 483, 491, 492, 498, 499, 501, 503, 504, 508, 510, 511, 515, 518, 528, 549, 559, 561, 562, 565, 566], "model1": [213, 529, 531, 535, 538, 540, 543], "model2": [213, 438, 462, 529, 531, 535, 538, 540, 543], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 443], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [474, 531], "model_best": 438, "model_best_joint": 442, "model_best_stack": 442, "model_bkg": 467, "model_computed_field": [16, 84, 103, 122], "model_config": [16, 84, 103, 122, 447, 487], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 103, 122], "model_copi": [16, 84, 103, 122, 474], "model_dump": [16, 84, 103, 122], "model_dump_json": [16, 84, 103, 122], "model_extra": [16, 84, 103, 122], "model_field": [16, 84, 103, 122], "model_fields_set": [16, 84, 103, 122], "model_fit": 462, "model_joint": 450, "model_json_schema": [16, 84, 103, 122], "model_manag": [436, 473, 477], "model_nam": [101, 104, 108, 109, 218, 240, 364, 467], "model_parametrized_nam": [16, 84, 103, 122], "model_plot": 453, "model_post_init": [16, 84, 103, 122], "model_prior": 476, "model_read": 476, "model_rebuild": [16, 84, 103, 122], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [445, 458, 462], "model_spectrum": 474, "model_str": 443, "model_typ": [218, 226, 238, 240, 255, 265, 277, 391, 473], "model_valid": [16, 84, 103, 122], "model_validate_json": [16, 84, 103, 122], "model_validate_str": [16, 84, 103, 122], "model_weak": 476, "model_weak_prior": 476, "model_without_nam": 474, "modelbas": [226, 255, 257, 258, 265, 269, 396], "modeldm": [19, 20], "modelevalu": 379, "modeling_2d": [436, 447, 449], "modelmetadata": 395, "modelmodel_dump": [16, 84, 103, 122], "modelmodel_dump_json": [16, 84, 103, 122], "models_3fhl": 473, "models_4fgl_roi": 466, "models_as_dict": [16, 84, 103, 122], "models_diffus": 454, "models_fil": [16, 443, 447, 448, 450, 487], "models_fit": 458, "models_gc": 473, "models_gp": 478, "models_joint": 450, "models_or": 473, "models_read": 474, "models_select": 473, "models_stack": 450, "models_yaml": 474, "modelsmetadata": 395, "modern": [87, 90, 386], "modernis": [385, 413], "modest": [368, 521], "modif": [16, 84, 87, 90, 103, 122, 368, 371, 390, 397, 430], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 90, 92, 101, 108, 123, 124, 125, 128, 131, 163, 205, 317, 340, 365, 378, 380, 384, 390, 394, 395, 414, 416, 417, 419, 421, 429, 432, 433, 438, 443, 455, 470, 472, 476, 480, 487, 501, 503, 516, 567], "modul": [6, 254, 368, 369, 373, 377, 384, 389, 407, 409, 415, 427, 462, 466, 470, 473, 491, 492, 493, 494, 539, 556, 567], "modular": 374, "mohanti": 100, "mohrmann": [384, 408, 409, 410, 426, 427, 428, 431, 433, 562], "mohrmann2019": 562, "moment": [15, 51, 54, 86, 94, 255, 344, 374, 382, 384, 385, 388, 393, 394, 469, 471, 508], "moncar": [205, 468], "monitor": [381, 478, 503], "monkei": 368, "mono": 376, "monoton": 192, "mont": [386, 508], "montecarlo": [102, 107, 205], "month": [78, 371, 377, 382, 385, 387, 388, 393, 397, 401, 407, 408, 409, 410, 411, 420, 423, 424, 425, 426, 427, 428, 429], "monthli": [377, 395, 400, 429], "moor": 24, "morcuend": [429, 432, 434], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 90, 98, 99, 100, 101, 104, 108, 109, 136, 144, 187, 188, 190, 199, 200, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 256, 259, 260, 261, 267, 268, 282, 288, 305, 343, 368, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 413, 414, 415, 416, 419, 426, 428, 429, 433, 438, 439, 442, 444, 446, 448, 450, 454, 455, 459, 462, 465, 467, 468, 470, 471, 472, 473, 474, 475, 476, 480, 481, 483, 489, 499, 500, 501, 503, 512, 513, 515, 516, 521, 560, 561, 563, 565, 567], "moreov": [384, 466, 470, 499], "morpholog": [118, 381, 436, 457, 483, 499, 515], "morphologi": [50, 52, 118, 379, 381, 391, 407, 424, 426, 439, 447, 453, 454, 455, 458, 466, 470, 517], "mosaic": 374, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 94, 116, 123, 367, 368, 369, 371, 373, 374, 375, 376, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 400, 401, 419, 426, 427, 429, 430, 433, 434, 447, 448, 456, 460, 462, 466, 468, 469, 470, 471, 472, 478, 479, 483, 489, 491, 501, 502, 503, 508, 510, 516, 560, 562, 563, 566], "mostli": [56, 69, 297, 368, 369, 374, 375, 376, 377, 382, 384, 387, 388, 389, 392, 393, 395, 397, 398, 419, 427, 466, 470, 481, 489, 565, 567], "motion": [45, 301], "motiv": [173, 373, 375, 376, 382, 385, 387, 397, 474, 503], "move": [277, 373, 374, 375, 376, 379, 382, 387, 388, 389, 392, 397, 403, 409, 410, 412, 413, 414, 415, 419, 420, 424, 425, 427, 428, 429, 430, 445], "move_axi": 433, "movement": 394, "mpatch": 456, "mpg": 67, "mpi": 67, "mpl": 368, "mpl_check_plot": 368, "mpl_kwarg": [442, 452, 456], "mpl_normal": [358, 359], "mpl_plot_check": 368, "mpl_style": 427, "msg": [437, 445, 447, 450, 452, 458, 462, 478], "msh": [448, 466, 470], "msh15": 481, "mst": 478, "mu": [26, 279, 281, 282, 361, 396, 438, 465, 476, 507, 508, 565], "mu_": [282, 288, 564, 565, 566], "mu_background": 563, "mu_bkg": [104, 109, 279, 291, 294, 404, 563, 565], "mu_off": 565, "mu_on": [282, 288, 565], "mu_sig": [281, 291, 294, 564, 565], "mu_x": 565, "much": [188, 368, 374, 379, 382, 384, 387, 388, 412, 419, 445, 450, 456, 463, 476, 479, 489, 522], "mul": [26, 438, 465, 474, 529, 535, 538, 540, 543, 548], "multi": [87, 90, 186, 198, 377, 382, 396, 413, 416, 420, 427, 436, 440, 446, 457, 467, 468, 469, 474, 475, 479, 483, 499, 501, 503, 515, 560, 561, 562], "multidimension": [374, 384, 396, 434, 483, 508, 561], "multinorm": 386, "multipl": [19, 20, 26, 82, 87, 90, 91, 100, 107, 111, 113, 115, 131, 136, 161, 187, 188, 190, 196, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 368, 369, 374, 377, 380, 381, 382, 384, 386, 389, 390, 392, 396, 400, 409, 416, 417, 419, 427, 433, 434, 444, 450, 466, 467, 470, 471, 472, 474, 479, 501, 515, 539, 548, 560, 561, 562, 563, 568], "multipli": [19, 20, 26, 123, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 232, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 275, 280, 289, 292, 297, 438, 463, 465, 474, 529, 565], "multiprocess": [13, 92, 124, 125, 128, 131, 163, 312, 317, 318, 413, 433, 434], "multithread": 13, "multivari": 386, "multivariategaussianprior": 396, "multiwavelength": 220, "muon": [88, 475], "muoneff": [88, 475], "mur": [26, 465], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 90, 100, 101, 104, 105, 109, 110, 114, 123, 128, 131, 136, 137, 144, 155, 163, 167, 169, 174, 181, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 286, 287, 297, 315, 363, 368, 373, 379, 380, 383, 392, 393, 394, 395, 437, 442, 447, 467, 470, 472, 473, 474, 478, 479, 488, 489, 503, 515, 562], "mutablemap": 194, "mutablesequ": [91, 99, 240], "mutipl": 400, "mutltipl": 371, "my": [368, 390, 391, 399, 454, 455, 467, 474], "my_custom_model": 474, "my_flux_map": 392, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 390, "mybind": [398, 427], "myconfig": [11, 563], "mycustomgaussianmodel": [391, 474], "mycustomprior": 476, "mycustomspectralmodel": [250, 474], "n": [19, 20, 51, 82, 87, 90, 121, 123, 185, 186, 187, 188, 190, 192, 193, 196, 198, 199, 200, 208, 210, 270, 277, 368, 371, 382, 385, 399, 401, 425, 458, 461, 465, 466, 468, 471, 473, 476, 478, 479, 480, 481, 486, 508, 515, 516, 518, 521, 522, 562, 564, 566], "n_": [101, 108, 282, 288, 499, 564, 565, 566], "n_0": [228, 536], "n_bad": 479, "n_bin": 467, "n_bkg": [279, 281, 565], "n_dof": [121, 123, 501], "n_event": [187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 381], "n_event_bunch": [102, 107], "n_events_bkg": 381, "n_fit_bin": [450, 462, 467, 473], "n_free_paramet": 277, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 496, 497], "n_job": [16, 92, 124, 125, 128, 131, 163, 317, 433, 443, 447, 448, 450, 456, 470, 487], "n_jobs_default": [92, 124, 125, 128, 131, 163], "n_model": [72, 76], "n_ob": [445, 454, 462], "n_observ": 563, "n_off": [104, 109, 281, 290, 291, 294, 564, 565], "n_off_posit": 444, "n_off_region": [175, 444], "n_on": [279, 281, 282, 288, 290, 291, 294, 404, 563, 564, 565], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 396, 557], "n_scale": 116, "n_sig": [279, 281, 463, 565], "n_sig_matching_signific": [279, 281], "n_sigma": [71, 74, 75, 78, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 277, 279, 281, 437, 456, 466, 467, 487, 489, 501], "n_sigma_sensit": [120, 121, 122, 123], "n_sigma_ul": [71, 74, 75, 78, 120, 121, 122, 123, 124, 125, 128, 129, 131, 456, 460, 466, 467, 487, 489, 501], "n_sourc": [45, 493], "n_spatial_ax": 191, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 90, "n_time_bin": 461, "nachiketa": [425, 426], "naima": [241, 367, 385, 386, 387, 388, 391, 410, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 503, 517, 548, 549], "naimamodel": [410, 413, 415], "naimaspectralmodel": [250, 391, 419, 474, 503, 539], "nakashima": 411, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 93, 95, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 121, 122, 123, 124, 125, 128, 129, 132, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 167, 168, 177, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 295, 296, 318, 347, 348, 363, 369, 371, 374, 377, 378, 380, 381, 382, 383, 386, 387, 390, 391, 392, 394, 395, 396, 397, 409, 410, 411, 412, 413, 414, 415, 416, 419, 428, 430, 431, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 491, 501, 503, 507, 510, 512, 513, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 565], "name1": 468, "name2": 468, "name_err": [124, 125, 128, 129], "name_scan": [124, 125, 128, 129], "name_substr": [218, 240, 473], "name_ul": [124, 125, 128, 129], "namedtupl": 368, "nameerror": 368, "namespac": [6, 16, 84, 103, 122, 368, 387, 389, 412, 415, 425, 474, 492, 567], "namibia": 481, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 90, 101, 121, 123, 167, 185, 186, 187, 188, 190, 196, 199, 200, 208, 210, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 368, 391, 396, 438, 442, 443, 444, 447, 448, 450, 451, 456, 458, 460, 466, 467, 469, 470, 471, 472, 473, 474, 487, 488, 489, 539, 548], "nan_to_num": [99, 101, 104, 108, 109, 145, 146, 152, 157, 160, 188, 196, 200, 265], "nansum": [187, 188, 190, 199, 200], "nasa": [58, 60, 61, 62, 64, 65, 144, 192, 388, 397, 542], "nativ": [87, 90, 193, 380, 385, 419, 471], "natur": [87, 90, 368, 374, 391, 394, 474, 537], "nauroi": [294, 562], "naurois2012": 562, "navarro": 491, "navi": 438, "navig": [427, 429], "naxi": 471, "naxis1": 471, "naxis2": 471, "naxis3": 471, "naxis4": 471, "nbin": [16, 110, 114, 125, 147, 149, 155, 157, 189, 192, 197, 200, 329, 330, 384, 437, 442, 443, 444, 447, 448, 450, 451, 452, 454, 455, 456, 460, 461, 463, 467, 469, 470, 471, 474, 479, 480, 481, 487, 507, 510, 512, 513, 516], "nbin_per_decad": 192, "nbstripout": 376, "ncol": [141, 142, 187, 188, 190, 196, 199, 200, 361, 365, 439, 442, 446, 448, 450, 452, 463, 467, 468, 471, 472, 512, 529], "ncp": 459, "nd": [187, 188, 190, 196, 199, 200, 263, 264, 389, 471, 516], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 90, 91, 100, 116, 124, 128, 141, 142, 143, 144, 145, 148, 149, 151, 154, 155, 156, 157, 158, 160, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 208, 209, 210, 211, 218, 242, 243, 268, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 292, 293, 294, 297, 308, 309, 310, 319, 324, 326, 357, 361, 362, 368, 467, 471, 489, 515, 516], "nddata": [410, 413], "nddataarrai": [411, 425, 426], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 273], "ndim": [101, 108, 110, 114, 142, 144, 147, 186, 193, 198, 444, 447, 452, 456, 467, 469, 470, 471, 478, 479, 489, 501, 516], "ndimag": [200, 382], "ndmin": 297, "ne": 380, "nearest": [26, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 187, 188, 190, 192, 196, 199, 200, 309, 421, 428, 430, 471, 501, 503, 515], "nearli": [368, 419, 439], "nebula": [50, 271, 277, 413, 442, 443, 444, 448, 451, 452, 453, 460, 468, 472, 474, 476, 479, 480, 481, 487, 488, 489, 494, 516, 562], "necess": [392, 476], "necessari": [16, 84, 100, 103, 122, 371, 378, 383, 394, 421, 439, 442, 444, 445, 448, 454, 455, 458, 461, 462, 470, 471, 473, 474, 488, 499, 500, 503], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 383, 447], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 93, 100, 103, 104, 120, 122, 123, 145, 146, 157, 159, 160, 195, 270, 271, 297, 367, 368, 369, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 398, 399, 404, 408, 409, 410, 427, 429, 434, 438, 439, 443, 445, 446, 447, 448, 452, 454, 455, 459, 461, 462, 468, 469, 471, 472, 473, 474, 475, 478, 480, 487, 489, 499, 512, 514, 515, 563, 567], "need_upd": 419, "neg": [19, 20, 26, 87, 90, 121, 123, 124, 125, 128, 129, 131, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 267, 268, 279, 281, 369, 416, 434, 476, 501, 565, 566], "neglect": [126, 173, 437, 470, 501, 566], "neighbor": [148, 156, 158, 421, 428], "neighbour": [309, 524], "neither": [95, 173, 385, 393], "neldermead": 205, "nep": [373, 393], "neraest": 188, "nest": [15, 186, 187, 188, 241, 277, 297, 336, 433, 479, 514, 565], "nested_model": 241, "net": [26, 87, 90, 442], "neutrino": 52, "neutron": 36, "never": [365, 367, 368, 371, 374, 378, 382, 390, 480], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 100, 101, 103, 104, 108, 109, 121, 122, 123, 124, 128, 139, 141, 142, 143, 144, 147, 149, 151, 154, 159, 170, 171, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 218, 240, 255, 265, 297, 321, 346, 353, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 420, 423, 450, 459, 466, 467, 471, 473, 474, 500, 501, 503, 548, 562], "new_attribut": 368, "new_axi": 139, "new_dataset_nam": [218, 240], "new_datasets_nam": [19, 20, 26, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "new_flux_map": 392, "new_funct": 368, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 548, "new_nam": [87, 90, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200], "new_ob": [88, 503], "new_observ": 91, "newaxi": 515, "newer": [385, 398, 409, 428], "newli": [413, 414, 415], "next": [87, 90, 101, 368, 369, 373, 384, 388, 389, 393, 396, 397, 425, 426, 437, 450, 453, 454, 456, 458, 466, 467, 470, 471, 474, 475, 476, 479], "nfcn": 468, "nfev": [100, 205, 206, 207, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488], "nfw": [25, 27, 491], "nfwprofil": 465, "ni": 368, "nice": [368, 373, 379, 385, 387, 395, 411, 419, 446, 450, 466, 563], "nicer": [368, 404, 468, 489], "nieto": [416, 419, 421, 422, 430, 432, 433, 434], "nieva": 430, "night": [383, 461], "nightli": [400, 460], "nightwise_lc": 460, "nigro": [416, 419, 421, 427, 428, 430, 433], "niter": [121, 123, 131, 446], "nmcid": 422, "nn": 480, "noah": [396, 434], "node": [19, 20, 26, 157, 160, 189, 192, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 242, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 410, 468, 469, 471, 478, 479, 523, 540], "node_typ": [189, 192, 197, 454, 455, 469, 479], "noeth": [416, 417], "nois": [280, 286, 386, 562], "noisi": 478, "non": [16, 84, 87, 90, 99, 101, 103, 104, 108, 109, 113, 115, 121, 122, 123, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 169, 173, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 265, 297, 358, 359, 361, 363, 374, 379, 382, 386, 388, 389, 395, 409, 413, 414, 415, 419, 427, 430, 431, 433, 434, 439, 479, 483, 499, 503, 514, 515, 539, 562], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 279, 280, 281, 294, 295, 297, 300, 305, 309, 317, 318, 319, 321, 324, 325, 326, 327, 335, 337, 343, 351, 355, 356, 357, 361, 362, 363, 364, 365, 368, 380, 382, 385, 392, 395, 396, 421, 432, 433, 438, 439, 440, 442, 443, 445, 446, 450, 451, 452, 454, 455, 456, 458, 461, 462, 463, 465, 466, 467, 470, 471, 473, 474, 476, 479, 487, 491, 499, 515, 520, 521, 522, 563], "nonetyp": [84, 103, 122], "nonposit": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "nonposx": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 419], "nonstopmod": 369, "nonzero": 39, "nooverlaperror": 432, "noqa": [19, 20, 124, 144, 180, 191, 192, 198, 220, 272, 365], "nor": [95, 173, 378, 389, 393, 397], "norm": [19, 20, 26, 120, 121, 123, 124, 125, 128, 131, 137, 138, 164, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 361, 379, 390, 392, 396, 413, 414, 416, 419, 434, 436, 442, 447, 448, 450, 451, 453, 454, 455, 456, 458, 461, 462, 463, 465, 466, 467, 468, 479, 487, 488, 489, 491, 501, 510, 517, 522, 528, 529, 536, 548, 549, 557, 565], "norm_0": [523, 540], "norm_1": [523, 540], "norm_2": [523, 540], "norm_3": [523, 540], "norm_4": 540, "norm_5": 540, "norm_err": [120, 121, 123, 125, 131, 137, 392, 456, 467, 501], "norm_errn": [121, 123, 466, 489, 501], "norm_errp": [121, 123, 466, 489, 501], "norm_max": [124, 125, 128], "norm_min": [124, 125, 128], "norm_n_valu": [124, 125, 128], "norm_only_chang": 431, "norm_paramet": [208, 209, 210, 211], "norm_prior": 396, "norm_scan": [121, 392, 442, 443, 501], "norm_sensit": [121, 123], "norm_ul": [121, 123, 392, 456, 466, 467, 489, 501], "norm_valu": [124, 125, 128], "norma": [33, 38], "normal": [42, 100, 101, 104, 108, 109, 124, 125, 126, 128, 135, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 164, 187, 188, 190, 196, 197, 199, 200, 226, 242, 243, 246, 265, 267, 270, 297, 358, 359, 368, 369, 373, 374, 378, 379, 382, 386, 392, 408, 412, 421, 438, 448, 454, 460, 461, 463, 470, 471, 472, 473, 474, 479, 488, 489, 515, 520, 521, 522, 525, 526, 527, 548, 562, 564, 565], "normalis": [67, 80, 128, 141, 142, 143, 144, 147, 149, 151, 154, 155, 159, 164, 184, 187, 188, 190, 196, 199, 200, 242, 243, 255, 366, 443, 447, 448, 462, 472, 473, 474, 479, 487], "normed_templ": 474, "normspectralmodel": [218, 240, 391, 416, 432, 434, 474, 510], "north": [219, 227, 230, 520], "notat": [416, 505, 507, 513, 566], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 93, 100, 101, 102, 103, 107, 116, 122, 123, 128, 131, 144, 149, 157, 159, 169, 180, 198, 202, 205, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 286, 287, 297, 318, 343, 359, 365, 367, 370, 371, 373, 376, 381, 382, 385, 388, 392, 393, 394, 396, 397, 398, 401, 407, 409, 429, 431, 433, 437, 438, 439, 443, 444, 446, 447, 450, 453, 455, 459, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 499, 501, 503, 510, 515, 516, 525, 526, 537, 565, 566, 567], "notebook": [87, 90, 333, 371, 372, 377, 378, 382, 383, 384, 385, 386, 388, 398, 400, 401, 402, 405, 408, 409, 410, 411, 413, 414, 415, 417, 419, 421, 425, 426, 427, 428, 429, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 502, 503, 504, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563], "noth": [321, 385, 476], "notic": [374, 468, 483], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [375, 380, 385, 386, 388, 392, 406, 430], "novemb": [377, 406, 416, 417, 418, 419], "now": [16, 82, 84, 88, 98, 103, 121, 122, 123, 197, 241, 368, 371, 373, 374, 375, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 392, 394, 395, 396, 403, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 458, 460, 461, 462, 463, 467, 468, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 500, 501, 512, 550, 554, 555, 556, 563, 565, 566, 567], "np": [83, 87, 90, 110, 114, 116, 123, 146, 187, 188, 190, 196, 199, 200, 270, 368, 369, 379, 380, 383, 391, 392, 396, 430, 437, 442, 445, 446, 448, 450, 452, 454, 456, 458, 459, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 474, 475, 476, 480, 495, 496, 497, 501, 503, 510, 515, 516, 520, 521, 523, 548, 556], "npanel": 355, "npix": [186, 195, 198, 199, 200, 442, 452, 469, 479, 512, 516, 519, 523], "npix_max": 186, "npoint": [280, 468], "npred": [101, 104, 108, 109, 120, 121, 123, 124, 125, 128, 129, 131, 265, 283, 379, 380, 381, 390, 392, 407, 409, 416, 419, 425, 427, 454, 456, 466, 467, 476, 479, 499, 501, 565], "npred_background": [101, 104, 108, 109, 121, 123, 416, 444, 445, 456, 467, 501, 565], "npred_background_min": 140, "npred_excess": [120, 121, 123, 125, 131, 138, 448, 456, 463, 501], "npred_excess_err": [121, 123], "npred_excess_errn": [121, 123], "npred_excess_errp": [121, 123], "npred_excess_ref": [121, 123], "npred_excess_ul": [121, 123], "npred_min": 140, "npred_off": [104, 109, 565], "npred_sig": [101, 104, 108, 109, 380], "npred_sign": [101, 104, 108, 109, 364, 419, 433, 467, 565], "npred_signal_min": 140, "npred_sourc": 467, "nrow": [439, 442, 468, 529], "nside": [186, 187, 188, 430, 479, 514], "nside2resol": 188, "nside_til": [186, 188], "nsou": 446, "nstep": 383, "nu": [19, 26], "nu_e": [26, 465], "nu_mu": [26, 465], "nu_tau": [26, 465], "nuisanc": [442, 468, 562, 566], "null": [121, 123, 124, 125, 128, 129, 277, 279, 281, 443, 447, 448, 450, 453, 474, 487, 501, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 565], "null_valu": [129, 277, 456], "nullabl": [87, 90], "num": 83, "numba": 385, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 90, 91, 92, 93, 99, 101, 102, 104, 107, 108, 109, 111, 116, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 163, 164, 167, 170, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 273, 277, 279, 280, 281, 293, 297, 315, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 330, 355, 361, 372, 373, 374, 377, 379, 380, 381, 382, 383, 387, 389, 392, 394, 395, 397, 404, 409, 419, 421, 422, 423, 428, 429, 430, 433, 434, 437, 438, 439, 442, 443, 444, 445, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 470, 471, 472, 474, 475, 478, 479, 480, 481, 487, 488, 489, 493, 499, 501, 503, 510, 512, 515, 516, 562, 563, 564, 565, 566], "number_of_column": [87, 90], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 90, 123, 192, 208, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 297, 367, 368, 381, 386, 401, 419, 437, 445, 447, 450, 452, 458, 462, 471, 478], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 91, 100, 110, 114, 116, 123, 124, 128, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 158, 159, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 202, 203, 208, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 266, 267, 279, 281, 297, 321, 326, 362, 367, 368, 369, 371, 375, 379, 381, 385, 386, 387, 394, 396, 404, 405, 412, 413, 416, 424, 425, 426, 428, 430, 431, 432, 434, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 488, 489, 495, 496, 497, 501, 503, 515, 516, 520, 521, 523, 548, 556], "numpoint": [205, 468], "numpy121": 371, "nupeak_ob": 489, "nutshel": 567, "n\u00f6the": [419, 421, 422], "o": [67, 82, 87, 90, 100, 194, 368, 377, 382, 385, 389, 392, 399, 400, 402, 411, 419, 422, 425, 426, 427, 433, 437, 439, 442, 446, 452, 459, 460, 461, 462, 471, 475, 476, 478, 503, 562, 563], "o2": 503, "ob": [40, 82, 83, 88, 89, 90, 91, 95, 157, 167, 295, 296, 380, 381, 384, 385, 390, 404, 422, 423, 432, 437, 439, 442, 445, 446, 452, 454, 458, 461, 462, 463, 470, 475, 478, 479, 480, 481, 485, 488, 500, 503, 508, 510, 512, 513], "obei": 515, "obj": [16, 84, 103, 122, 444], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 99, 100, 101, 102, 103, 104, 108, 109, 121, 122, 123, 126, 127, 128, 132, 133, 134, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 171, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 279, 281, 297, 301, 305, 306, 309, 317, 319, 321, 327, 330, 342, 343, 344, 345, 350, 355, 361, 363, 364, 365, 374, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 394, 395, 400, 404, 410, 411, 413, 414, 415, 416, 419, 421, 426, 427, 428, 430, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 451, 453, 456, 458, 459, 460, 461, 462, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 481, 487, 488, 489, 493, 498, 499, 500, 501, 509, 512, 514, 515, 516, 560, 562, 563, 567], "obs_": 442, "obs_clust": [91, 475], "obs_col": 452, "obs_con": [16, 443, 447, 448, 450, 487], "obs_copi": 88, "obs_fil": [16, 443, 447, 448, 450, 487], "obs_filenam": 480, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 90, 95, 140, 295, 296, 378, 380, 390, 395, 404, 439, 442, 443, 444, 445, 447, 448, 450, 451, 452, 454, 455, 460, 461, 462, 468, 470, 475, 478, 480, 481, 485, 487, 488, 512], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [88, 103, 395], "obs_list": [427, 429], "obs_list_vela": 463, "obs_mod": 94, "obs_model": 438, "obs_muoneff": 475, "obs_po": [41, 300], "obs_tabl": [82, 90, 95, 295, 296, 421, 452, 454, 461, 470, 475, 478, 480, 481, 485, 488, 512], "obs_table_filenam": 82, "obs_tim": [16, 443, 447, 448, 450, 487], "obs_time_src": 470, "obs_zenith": 475, "obscor": 434, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 100, 101, 102, 103, 104, 107, 108, 109, 111, 157, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 182, 183, 184, 217, 220, 225, 229, 231, 232, 233, 248, 254, 266, 269, 282, 288, 294, 296, 305, 326, 372, 374, 380, 381, 382, 383, 384, 388, 390, 392, 395, 400, 409, 413, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 439, 444, 445, 447, 448, 450, 451, 458, 459, 462, 463, 468, 476, 477, 478, 480, 481, 483, 485, 491, 499, 500, 503, 506, 508, 510, 512, 513, 539, 562, 563, 564, 565], "observation_clust": [436, 475, 477], "observation_dead_time_fract": [83, 88], "observation_list": 91, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 428, "observationcta": 378, "observationeventsampl": 434, "observationfilt": [88, 378, 383, 408, 429], "observationlist": [378, 429], "observationmetadata": 395, "observations_list": 91, "observationsconfig": 16, "observationseventsampl": 434, "observationssummari": 413, "observationstat": [408, 413], "observationt": [82, 381, 382, 430, 475, 480, 488], "observationtablecheck": 428, "observationtablesummari": 425, "observatori": [57, 59, 63, 82, 83, 85, 88, 93, 381, 395, 397, 400, 420, 478, 480, 481, 498, 503], "observatory_earth_loc": [83, 88], "observatory_loc": [395, 421, 437, 445, 454, 455, 458, 462], "obsinfometadata": 103, "obstim": [85, 93, 180, 567], "obtain": [85, 101, 104, 107, 121, 123, 132, 285, 378, 383, 385, 386, 392, 429, 442, 443, 444, 448, 454, 455, 459, 461, 468, 471, 472, 476, 487, 489, 499, 503, 507, 508, 562, 564, 565], "obviou": [380, 387, 388, 389, 395], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 491], "occur": [187, 188, 190, 199, 200, 327, 368, 388, 389, 393, 479], "occurr": [91, 99, 191, 209, 211, 218, 240], "oct": [376, 378, 379, 383, 385, 388, 394], "octob": 377, "odd": [198, 200], "odd_npix": [198, 200], "odot": [28, 35, 39, 40, 52], "off": [101, 104, 106, 108, 109, 120, 162, 168, 169, 172, 175, 184, 281, 294, 365, 366, 371, 374, 380, 382, 383, 384, 413, 419, 421, 423, 433, 437, 438, 439, 443, 444, 448, 452, 460, 461, 463, 467, 468, 470, 476, 499, 512, 513, 562, 564, 565, 566], "off_2": [104, 109], "off_ev": 463, "off_patch": 463, "off_phas": [168, 463], "off_phase_rang": 463, "offdatabackgroundmak": 424, "offer": [121, 371, 379, 394, 395, 400, 401, 428, 444, 468, 470, 474, 503], "offici": [394, 504, 563], "offlin": [87, 90], "offset": [83, 95, 111, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 163, 167, 173, 174, 179, 182, 187, 188, 190, 192, 196, 199, 200, 368, 374, 382, 404, 413, 423, 425, 427, 432, 433, 434, 437, 444, 445, 447, 450, 451, 452, 458, 463, 469, 470, 475, 478, 481, 488, 500, 508, 510, 513], "offset2": 83, "offset_axi": [147, 149, 154, 159], "offset_band": 83, "offset_from_median": 83, "offset_index": 154, "offset_max": [16, 83, 163, 173, 179, 182, 443, 447, 448, 450, 452, 458, 463, 470, 487, 488, 510, 513], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 271, 358, 359, 368, 373, 382, 383, 384, 386, 426, 437, 439, 443, 447, 448, 451, 452, 458, 467, 468, 470, 472, 487, 488, 499, 562], "ogip": [94, 105, 106, 109, 144, 189, 191, 192, 195, 196, 197, 380, 383, 426, 438, 442, 451, 499, 507, 516], "ogip_column": 196, "ogipdatasetread": 109, "ogipdatasetwrit": [109, 432, 434], "ok": [368, 382, 468], "old": [191, 353, 368, 373, 376, 380, 384, 385, 410, 411, 426, 427, 428, 459], "old_attribut": 368, "older": [375, 385, 401, 426, 466], "oldest": 388, "olga": [424, 425], "olivera": [416, 419, 421, 422, 430, 432, 433, 434], "omega": [19, 20, 23, 254, 270, 520, 556], "omit": [131, 369, 450, 478, 563], "omp": 388, "on_circl": 512, "on_ellipse_annulu": 512, "on_ev": 463, "on_patch": 463, "on_phas": [168, 463], "on_phase_rang": 463, "on_posit": 184, "on_radii": 437, "on_radiu": [452, 463], "on_rectangl": 512, "on_region": [16, 101, 104, 170, 437, 439, 442, 443, 444, 445, 447, 448, 450, 452, 454, 455, 460, 461, 463, 467, 487, 512], "on_region_radiu": [437, 442, 445, 454, 455, 461], "onc": [87, 90, 101, 198, 368, 371, 373, 378, 379, 382, 383, 384, 388, 389, 390, 392, 393, 397, 398, 399, 444, 461, 463, 470, 473, 480, 483, 500, 503, 563], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 94, 98, 101, 103, 104, 107, 108, 109, 111, 116, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 169, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 273, 277, 279, 280, 281, 305, 310, 326, 339, 355, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 427, 430, 431, 433, 437, 439, 442, 443, 444, 447, 450, 454, 459, 460, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 487, 488, 489, 498, 499, 500, 501, 503, 508, 510, 512, 515, 516, 522, 560, 561, 563, 564, 565, 566, 567], "ones": [87, 90, 116, 120, 124, 128, 131, 144, 191, 372, 376, 380, 382, 385, 388, 396, 401, 404, 459, 462, 469, 471, 491, 510, 562, 563], "ones_lik": [463, 510], "ongo": [371, 374, 375, 398], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 99, 100, 101, 102, 103, 104, 107, 108, 109, 120, 122, 123, 124, 128, 131, 138, 145, 146, 150, 152, 157, 160, 163, 169, 174, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 208, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 279, 281, 297, 317, 343, 365, 368, 369, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 401, 409, 411, 415, 419, 421, 422, 427, 431, 433, 434, 439, 440, 442, 443, 444, 447, 448, 450, 451, 453, 454, 455, 456, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 488, 491, 499, 501, 503, 507, 510, 513, 516, 558, 562, 563, 564, 565], "onlin": [87, 90, 369, 373, 376, 388, 404], "onlinelibrari": 138, "onoff": [422, 499], "onserv": 92, "ontim": [180, 378, 454, 467], "onto": [187, 188, 190, 196, 198, 199, 200, 355, 374, 488, 499, 503, 515, 561], "oo": 394, "op": 384, "opac": 220, "open": [66, 87, 90, 369, 371, 373, 379, 382, 385, 387, 388, 392, 393, 394, 397, 399, 400, 402, 404, 405, 426, 443, 451, 471, 478, 480, 481, 487, 498, 562, 563], "openastronomi": 427, "oper": [87, 90, 186, 198, 213, 368, 374, 379, 382, 414, 416, 419, 428, 429, 433, 438, 467, 473, 474, 515, 516, 529, 531, 535, 538, 540, 543, 548], "opinion": [373, 563], "oppos": [459, 539, 563], "opposit": [187, 188], "opt": [88, 89, 466, 529, 539], "opt_method": 468, "optic": [220, 382, 438, 529], "optim": [19, 20, 26, 100, 129, 131, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 361, 367, 368, 377, 380, 381, 390, 392, 439, 440, 442, 443, 444, 445, 446, 450, 451, 452, 459, 463, 468, 476, 479, 487, 488], "optimis": [19, 20, 205, 206, 207, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 382, 384, 386, 428, 501, 560], "optimize_opt": [205, 450, 458, 468, 488], "optimize_result": [205, 206, 433], "optimizeresult": [100, 205, 206, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488], "optin": 394, "optinon": [108, 109], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 285, 286, 287, 293, 294, 295, 297, 308, 318, 321, 324, 325, 326, 327, 329, 330, 337, 339, 350, 351, 355, 356, 357, 362, 363, 364, 365, 368, 371, 373, 374, 376, 377, 379, 380, 382, 384, 386, 388, 391, 395, 398, 399, 400, 401, 402, 408, 409, 410, 413, 415, 416, 419, 421, 425, 427, 428, 429, 430, 432, 433, 434, 450, 458, 460, 462, 466, 467, 470, 471, 472, 474, 475, 478, 479, 487, 488, 499, 501, 503, 515, 516, 558, 563], "option_context": [87, 90], "optionali": 523, "optout": 394, "optpars": 373, "oral": 394, "orang": [369, 442, 450, 456, 460, 463, 465, 476, 512], "orchestr": [374, 378, 380, 384, 443, 487, 488], "orcid": 394, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 90, 93, 99, 100, 101, 104, 123, 141, 142, 145, 146, 152, 157, 160, 163, 167, 174, 177, 178, 183, 185, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 265, 277, 297, 365, 369, 374, 379, 380, 382, 383, 384, 385, 392, 393, 394, 396, 409, 410, 411, 412, 413, 414, 415, 416, 419, 442, 443, 444, 446, 450, 451, 454, 463, 466, 468, 469, 470, 471, 474, 480, 487, 488, 489, 514, 515, 516, 563, 566], "ordereddict": [374, 385, 412], "ordinari": 489, "org": [11, 34, 63, 64, 65, 83, 87, 88, 90, 100, 173, 205, 246, 247, 260, 261, 286, 297, 371, 376, 385, 388, 393, 394, 397, 399, 400, 402, 406, 425, 427, 437, 445, 447, 450, 451, 452, 458, 462, 465, 466, 468, 470, 478, 546, 547, 563], "organ": [372, 388, 393, 394, 419, 480, 481, 500, 515], "organis": [375, 384, 387, 394, 427], "orient": [142, 150, 151, 368, 379], "origin": [41, 87, 90, 101, 103, 108, 122, 188, 200, 263, 265, 267, 378, 382, 394, 395, 425, 443, 459, 461, 471, 474, 479, 487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 566, 567], "origini": [121, 123], "orthogon": 330, "oscar": [427, 428], "osx": 415, "ot": 397, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 101, 103, 104, 108, 109, 121, 122, 124, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 169, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 209, 211, 265, 278, 297, 310, 338, 357, 362, 367, 371, 373, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 399, 427, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 499, 500, 501, 503, 508, 510, 512, 516, 531, 560, 561, 563, 567], "other_id": 439, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 101, 103, 104, 108, 109, 122, 155, 194, 198, 200, 202, 208, 209, 210, 211, 218, 240, 297, 361, 381, 391, 394, 473, 474, 479, 530], "ou8exssw": 470, "oup": [132, 293], "our": [368, 371, 377, 382, 384, 385, 387, 390, 391, 392, 394, 409, 410, 426, 437, 439, 442, 443, 444, 447, 448, 450, 451, 452, 455, 461, 462, 463, 471, 472, 476, 480, 487, 488, 563], "ourself": 489, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 91, 93, 99, 100, 123, 187, 188, 190, 196, 199, 200, 240, 252, 253, 367, 368, 369, 371, 373, 376, 378, 380, 382, 384, 386, 387, 388, 393, 397, 404, 405, 407, 413, 427, 440, 444, 447, 448, 471, 472, 478, 479, 487, 489, 491, 492, 512, 525, 526, 560, 563, 567], "out_fold": 384, "outcom": [373, 382], "outdat": [385, 388], "outdir": [16, 82, 92, 443, 447, 448, 450, 487], "outer": [43, 44, 52, 53, 125, 162, 252, 526], "outer_height": [512, 516], "outer_width": [512, 516], "outfil": 368, "outflow": 197, "outlin": [101, 104, 108, 109, 214, 215, 219, 227, 230, 244, 252, 253, 267, 371, 373, 376, 377, 378, 379, 382, 388, 391], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 92, 103, 122, 136, 137, 144, 149, 187, 188, 190, 196, 199, 200, 206, 218, 232, 240, 280, 326, 369, 376, 378, 381, 384, 385, 389, 392, 395, 408, 423, 429, 432, 433, 450, 454, 455, 458, 462, 470, 471, 487, 488, 501, 503, 563, 564], "output_map": [187, 188, 190, 196, 199, 200], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 90, 101, 108, 113, 115, 144, 164, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 208, 210, 220, 268, 310, 356, 368, 382, 383, 384, 419, 448, 468, 470, 471, 472, 503, 510, 522, 548, 562], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 90, 91, 94, 100, 101, 104, 108, 109, 124, 131, 132, 144, 145, 155, 157, 160, 167, 174, 177, 178, 180, 181, 187, 188, 190, 191, 192, 196, 198, 199, 200, 218, 240, 270, 279, 281, 285, 308, 309, 322, 359, 368, 369, 373, 376, 377, 378, 381, 382, 383, 388, 391, 395, 399, 401, 419, 439, 442, 450, 453, 454, 462, 466, 467, 470, 471, 474, 476, 488, 489, 501, 507, 564, 565], "overal": [376, 382, 442], "overcom": 472, "overestim": [501, 565], "overflow": [197, 444, 462, 551], "overkil": 462, "overlai": 443, "overlaid": [101, 104, 108, 109, 442, 443], "overlap": [86, 90, 113, 115, 128, 175, 192, 197, 365, 383, 442], "overlap_ok": 86, "overlin": [101, 108, 499], "overload": 419, "overplot": [466, 498], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 336, 379, 442, 444, 452, 456], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 122, 195, 365], "oversampl": [102, 107, 155, 157, 160, 167, 174, 180, 186, 187, 188, 190, 195, 196, 199, 200, 215, 219, 227, 230, 231, 232, 242, 252, 253, 255, 257, 263, 267, 269, 273, 410, 470], "oversample_energy_factor": [102, 107, 455], "oversampling_factor": [188, 198, 214, 215, 219, 227, 230, 231, 232, 242, 244, 252, 253, 255, 257, 263, 267, 269], "overview": [6, 371, 398, 413, 414, 416, 419, 436, 463, 471, 474, 483, 489, 490, 503, 504, 517, 564], "overwrit": [11, 15, 16, 19, 20, 26, 82, 83, 88, 92, 99, 100, 101, 104, 106, 108, 109, 121, 123, 145, 146, 152, 157, 160, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 206, 208, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 263, 264, 265, 266, 267, 317, 392, 428, 430, 442, 443, 450, 451, 454, 455, 456, 469, 471, 472, 473, 474, 478, 479, 485, 487, 488, 499, 503, 516, 527, 563], "overwrite_templ": [206, 218, 240], "overwritten": [157, 160, 309], "owen": [407, 420], "own": [87, 90, 98, 121, 123, 194, 196, 371, 374, 384, 390, 394, 419, 437, 454, 474, 479, 488, 503, 515, 516], "p": [38, 51, 54, 87, 90, 108, 109, 127, 284, 294, 368, 419, 443, 453, 465, 468, 487, 503, 508, 509, 565], "p0_birth": 43, "p90": 48, "p_": [505, 507, 508, 509], "p_0": [51, 187, 190, 196, 199, 200, 495], "p_dot": [51, 54], "p_i": [187, 190, 196, 199, 200], "p_lat": [187, 190, 196, 199, 200], "p_lon": [187, 190, 196, 199, 200], "p_mean": 42, "p_n": [187, 190, 196, 199, 200], "p_stdv": 42, "p_valu": [279, 281, 468, 563, 565], "pace": [376, 377], "packag": [6, 11, 136, 297, 333, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 382, 385, 386, 388, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 412, 413, 415, 416, 419, 422, 423, 424, 425, 426, 427, 428, 430, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 499, 502, 503, 504, 511, 516, 527, 535, 537, 538, 551, 563, 567], "pacman": 424, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 90, 101, 104, 108, 109, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 167, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 356, 416, 419], "pad_width": [101, 108, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200], "pad_with": [187, 188, 190, 196, 199, 200], "page": [6, 87, 90, 205, 282, 288, 294, 369, 371, 373, 380, 382, 385, 388, 394, 397, 398, 400, 401, 405, 413, 414, 419, 422, 423, 426, 427, 428, 429, 468, 471, 481, 483, 501, 503, 514, 516, 564, 567], "pain": [368, 371, 375], "pair": [16, 84, 101, 103, 104, 108, 109, 121, 122, 123, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 384, 438], "panda": [87, 90, 367, 385, 428, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "panel": [88, 100, 101, 104, 108, 109, 355, 422, 454, 468], "panel_fov": 355, "panni": 419, "papadopoulo": [419, 421], "paper": [57, 59, 63, 72, 74, 124, 173, 388, 394, 428, 459, 461, 466, 470, 480, 491], "papermil": 384, "par": [379, 391, 396, 438, 468, 476, 478], "par_000_amplitud": 468, "par_001_alpha": 468, "par_002_beta": 468, "par_00x_": 379, "par_1": [205, 468], "par_2": [205, 468], "par_alpha": 468, "par_beta": 468, "par_box": 90, "par_nam": [218, 226, 240, 255, 265], "par_to_v": 478, "par_typ": [218, 226, 240, 255, 265], "parabol": [278, 310, 468], "parabola": [234, 235, 436, 451, 468, 517, 549], "paragraph": 373, "parallel": [6, 92, 124, 125, 128, 131, 163, 312, 313, 314, 315, 316, 317, 318, 371, 385, 398, 421, 433, 434, 467], "parallel_backend": [92, 124, 125, 128, 131, 163, 317, 456], "parallelbackendenum": 312, "parallelmixin": [92, 124, 131, 163], "param": [16, 84, 103, 122, 220, 268, 361, 384, 414], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 299, 301, 303, 304, 306, 308, 309, 310, 311, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 369, 377, 380, 381, 383, 384, 386, 387, 390, 392, 394, 405, 408, 409, 410, 411, 412, 413, 415, 416, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 469, 470, 475, 476, 478, 479, 488, 489, 491, 499, 501, 502, 503, 510, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566], "parameter": 474, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 205, "parameterestim": [117, 415, 434], "parameteris": [505, 507], "parameters_list": [209, 211], "parameters_nam": [218, 240], "parameters_stat_sum": 396, "parameters_unique_nam": [19, 20, 26, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 468], "parametr": [16, 27, 84, 100, 103, 122, 147, 148, 153, 156, 158, 234, 235, 252, 380, 384, 391, 409, 416, 419, 444, 446, 474, 478, 525, 526, 537], "parametricpsf": [148, 156, 419, 421], "parametris": [156, 391, 413, 507, 509, 520, 521, 522, 523, 530, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558], "parent": [16, 84, 103, 116, 120, 122, 124, 128, 131, 198, 368, 378, 395, 461, 501, 539], "parenthes": [379, 385, 431, 433], "parfiv": [385, 412], "parnam": 476, "pars": [16, 84, 85, 103, 122, 186, 195, 369, 382, 437, 445, 447, 450, 452, 458, 462, 472, 478, 563], "parse_arg": 563, "parse_fil": [16, 84, 103, 122], "parse_obj": [16, 84, 103, 122], "parse_raw": [16, 84, 103, 122], "parseabl": 297, "parser": 563, "part": [100, 368, 371, 374, 377, 379, 381, 382, 383, 384, 386, 387, 388, 393, 394, 409, 413, 414, 415, 423, 428, 433, 434, 437, 439, 442, 450, 458, 466, 467, 471, 472, 488, 489, 503, 508, 512], "parti": 373, "partial": [90, 101, 104, 145, 146, 152, 157, 160, 163, 186, 198, 200, 265, 382, 386, 414, 428, 514], "partial_overlap": 90, "particip": [373, 377, 388], "particl": [19, 26, 241, 270, 415, 491, 539], "particle_distribut": [241, 539], "particular": [87, 90, 368, 374, 381, 383, 390, 392, 393, 395, 416, 419, 430, 431, 439, 442, 443, 444, 445, 447, 451, 454, 459, 461, 462, 468, 470, 473, 478, 480, 481, 487, 488, 500, 503, 510, 512, 516, 565], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [371, 377, 378, 382, 388, 389], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 92, 100, 101, 103, 104, 107, 108, 109, 122, 123, 126, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 172, 180, 185, 186, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 278, 280, 297, 309, 317, 318, 319, 324, 325, 326, 327, 355, 356, 361, 363, 364, 368, 371, 378, 380, 381, 382, 383, 395, 415, 419, 421, 433, 434, 439, 440, 442, 443, 450, 451, 455, 459, 460, 461, 466, 467, 468, 469, 470, 471, 472, 474, 475, 478, 487, 488, 489, 503, 514, 515, 516, 520, 521, 563, 567], "pass4": 480, "passkwarg": 444, "past": [368, 373, 376, 384, 385, 388, 389, 391, 394, 396, 404, 425, 427, 428, 471, 563], "patch": [365, 368, 375, 394, 422, 431, 442, 444, 452, 456, 463], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 92, 99, 103, 105, 106, 109, 122, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 187, 188, 190, 195, 196, 199, 200, 206, 218, 232, 240, 266, 305, 333, 334, 335, 337, 368, 371, 403, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 501, 557, 558, 563], "path_effect": [195, 218, 240], "path_to_notebook": 368, "path_to_script": 368, "patheffect": [195, 218, 240], "pathlib": [82, 83, 86, 87, 90, 144, 196, 206, 218, 240, 334, 442, 443, 450, 451, 454, 455, 478, 487, 488], "pathpatch": 456, "pattern": [368, 374, 382], "paula": 434, "paulakx": 434, "paz": [420, 423, 424], "pbar": 503, "pc": [46, 47, 50, 52, 496, 497], "pcolormesh": [83, 123, 141, 142, 144, 147, 148, 149, 154, 156, 158, 159, 426, 432, 468, 469], "pd": [87, 90], "pdf": [100, 144, 148, 173, 246, 247, 260, 261, 319, 361, 369, 451, 454, 465, 470, 493, 495, 496, 497, 499, 500, 505, 506, 507, 509, 512, 516, 546, 547, 565, 568], "pdf_in_safe_rang": 144, "pdf_matrix": 144, "pdf_threshold": [144, 145, 149], "pdflatex": 369, "peak": [68, 126, 136, 137, 144, 173, 224, 229, 231, 235, 421, 427, 434, 446, 459, 466, 470, 526], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 368, "peek": [83, 88, 101, 104, 108, 109, 126, 127, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 368, 380, 404, 416, 422, 426, 430, 439, 444, 450, 454, 455, 463, 467, 469, 478, 480, 481, 500, 503, 505, 506, 507, 509], "pend": 297, "peopl": [373, 375, 388, 394, 397, 398, 465, 491, 503, 563], "pep": 373, "pep8": 371, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 98, 100, 101, 104, 108, 109, 111, 120, 121, 123, 124, 125, 128, 129, 136, 138, 139, 140, 157, 160, 192, 225, 232, 233, 273, 282, 288, 294, 368, 374, 380, 381, 384, 392, 394, 395, 407, 415, 419, 421, 434, 437, 445, 454, 458, 460, 462, 465, 470, 471, 475, 476, 480, 481, 499, 503, 506, 510, 562, 564], "per_decad": [192, 442, 444, 454, 455, 463, 467, 479, 507, 513], "percent": 130, "percentag": [144, 173, 470], "percentil": 83, "perfect": 144, "perfectli": [521, 563], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 93, 99, 103, 107, 122, 164, 172, 186, 198, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 279, 281, 335, 361, 368, 369, 374, 377, 378, 379, 383, 384, 392, 395, 398, 400, 409, 416, 419, 421, 424, 428, 431, 433, 434, 437, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 455, 458, 460, 461, 462, 467, 468, 470, 471, 472, 473, 475, 480, 483, 487, 499, 503, 511, 512, 515, 521, 539, 561, 562, 563, 564], "perhap": 516, "period": [42, 51, 54, 192, 266, 375, 394, 427, 475, 495], "period_dot": 51, "periodogram": [280, 383, 428], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394], "perseu": [33, 38], "person": [368, 371, 373, 375, 376, 377, 381, 386, 389], "perspect": [87, 90], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 427, "pf": 26, "pformat": [87, 90], "pformat_al": [87, 90], "pg": 489, "ph": 353, "pha": [105, 106, 109, 196, 380, 425, 428, 442, 451], "pha_": 467, "pha_meta": 105, "pha_ob": [105, 140, 451, 468], "pha_obs23523": [108, 109, 129, 277, 476, 501], "pha_obs23592": 501, "phacountsspectrum": 411, "phacountsspectrumlist": 410, "phase": [50, 52, 53, 89, 165, 168, 266, 373, 378, 379, 382, 383, 385, 387, 392, 404, 409, 428, 430, 433, 436, 474, 492, 503, 517, 559], "phase_axi": 392, "phase_bkg_mak": 463, "phase_column_nam": [168, 463], "phase_curve_model": 557, "phase_filt": 89, "phase_max": 463, "phase_min": 463, "phase_model": 557, "phasebackgroundestim": 413, "phasebackgroundmak": [165, 413, 433, 463], "phasecurv": [266, 427, 557], "phasecurve_lsi_dc": 557, "phasecurvemodel": 391, "phasecurvetablemodel": [379, 381], "phasecurvetempl": 379, "phasogram": [266, 557], "phi": [19, 20, 26, 193, 212, 213, 216, 219, 220, 222, 223, 224, 227, 230, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 301, 391, 458, 468, 473, 474, 479, 489, 508, 520, 521, 522, 524, 525, 526, 530, 532, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547], "phi_0": [212, 214, 215, 219, 222, 223, 224, 227, 230, 234, 235, 242, 244, 246, 247, 252, 253, 256, 257, 259, 260, 261, 263, 267, 391, 468, 530, 533, 534, 537, 541, 544, 545, 546, 547], "phi_ref": [266, 557], "philipp": [427, 428], "phone": 388, "photon": [44, 220, 241, 353, 383, 438, 445, 454, 458, 472, 474, 489, 508, 539, 562], "photutil": [136, 368, 382, 428], "php": 63, "physic": [124, 125, 128, 131, 317, 318, 367, 392, 396, 410, 443, 451, 471, 474, 476, 478, 487, 501, 503, 539, 562, 565, 566], "pi": [19, 20, 30, 31, 32, 37, 54, 228, 270, 391, 474, 497, 520, 521, 522, 525, 526, 536, 556], "pick": [368, 375, 382, 393, 409, 489], "pictur": 369, "pie": 503, "piec": [368, 374, 382, 387, 396], "piecewis": [242, 243, 436, 474, 517, 528, 549], "piecewisebrokenpowerlawnormspectralmodel": 391, "piecewisebrokenpowerlawnormspectramodel": 391, "piecewisenormsectralmodel": 416, "piecewisenormspatialmodel": [249, 433, 474, 523], "piecewisenormspectralmodel": [250, 396, 416, 419, 432, 434, 474, 510, 540], "pig": [13, 368, 370, 371, 408, 409, 411, 412, 413, 415, 416, 427, 429, 430, 434], "pii": 138, "pillar": 384, "pin": 428, "pink": [108, 109], "pint": [463, 503], "pintor": [381, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 430, 432, 433, 434], "pip": [367, 371, 375, 385, 399, 400, 402, 409, 428, 478, 563], "pipe": [424, 425, 426], "pipelin": [381, 383, 415], "piron": 562, "piron2001": 562, "pivot": [19, 20, 26, 67, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 434, 466], "pivot_energi": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "pix": [185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 515], "pix_reg": 465, "pix_reg_rec": 465, "pix_to_coord": [185, 186, 189, 191, 192, 195, 197, 198, 434], "pix_to_idx": [185, 186, 189, 191, 192, 195, 197, 198], "pixcoord": 382, "pixel": [13, 83, 101, 104, 108, 109, 111, 112, 116, 126, 136, 137, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 158, 159, 170, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 379, 407, 411, 425, 428, 446, 448, 454, 456, 467, 470, 471, 479, 489, 499, 501, 513, 514, 515, 524], "pixel_area": 198, "pixel_scal": [116, 186, 198], "pixelregion": [382, 512], "pixilis": 471, "pixreg": 522, "pixregion": 200, "pk": [132, 414, 438, 459, 461, 462, 466, 475, 489, 529], "pks2155": [438, 461], "pks2155_hess_lc": [121, 123, 139, 459], "pl": [67, 80, 120, 125, 131, 164, 238, 245, 246, 247, 391, 440, 456, 466, 467, 474, 489], "pl_model": 555, "pl_spectrum": 476, "place": [83, 86, 87, 90, 91, 99, 101, 104, 108, 109, 136, 141, 142, 143, 144, 145, 146, 147, 151, 152, 157, 159, 160, 170, 175, 187, 188, 190, 196, 199, 200, 240, 265, 293, 341, 368, 369, 375, 376, 379, 380, 381, 382, 384, 387, 388, 389, 390, 393, 398, 412, 414, 442, 460, 471, 472, 474, 489, 499, 500, 503, 561, 567], "placehold": 373, "plai": [388, 452], "plain": [385, 471], "plan": [372, 373, 377, 378, 382, 384, 385, 388, 393, 397, 408, 425, 427, 428, 429, 560], "planar": [267, 379], "plane": [29, 67, 68, 124, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 388, 465, 466, 471, 478, 498, 513, 516, 521, 562, 568], "plate": [198, 471], "platform": [385, 394, 419], "plausibl": [395, 453], "pleas": [102, 107, 369, 371, 373, 375, 377, 403, 408, 409, 410, 419, 427, 429, 440, 442, 443, 444, 445, 447, 450, 454, 455, 459, 461, 462, 467, 487, 492, 503], "pleasant": 371, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 100, 101, 104, 108, 109, 123, 126, 127, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 187, 188, 189, 190, 192, 195, 196, 197, 199, 200, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 271, 275, 346, 355, 356, 360, 361, 362, 363, 364, 365, 366, 367, 369, 382, 383, 384, 386, 387, 389, 392, 404, 407, 410, 413, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 437, 439, 440, 444, 447, 448, 450, 451, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 472, 474, 475, 476, 478, 479, 480, 481, 487, 489, 493, 495, 496, 497, 499, 503, 505, 506, 507, 509, 512, 557, 558, 565, 567], "plot_absorb": [436, 529, 549], "plot_at_energi": [141, 142, 478], "plot_bia": [144, 149], "plot_broken_powerlaw": [436, 530, 549], "plot_compound": [436, 531, 549], "plot_const": [436, 519, 528], "plot_constant_spectr": [436, 532, 549], "plot_constant_tempor": [436, 550, 559], "plot_containment_radiu": [148, 154, 156, 158], "plot_containment_radius_vs_energi": [148, 154, 156, 157, 158, 160, 478, 479], "plot_contour_lin": 468, "plot_correl": [203, 468], "plot_count": [108, 109], "plot_dat": 567, "plot_disk": [436, 520, 528], "plot_distribut": [448, 450], "plot_energi": [83, 455], "plot_energy_depend": [141, 147, 478, 505], "plot_energy_offset": 83, "plot_err": 126, "plot_error": [19, 20, 26, 66, 67, 100, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 386, 438, 440, 442, 444, 450, 451, 453, 466, 468, 488], "plot_excess": [108, 109, 422], "plot_exp_cutoff_powerlaw": [436, 533, 549], "plot_exp_cutoff_powerlaw_3fgl": [436, 534, 549], "plot_exp_cutoff_powerlaw_norm_spectr": [436, 535, 549], "plot_expdecay_tempor": [436, 551, 559], "plot_extension_error": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267], "plot_fit": [100, 108, 109, 439, 442, 443, 444, 452, 463, 487], "plot_gauss": [436, 521, 528], "plot_gauss_spectr": [436, 536, 549], "plot_gaussian_tempor": [436, 552, 559], "plot_gen_gauss": [436, 522, 528], "plot_generalized_gaussian_tempor": [436, 553, 559], "plot_grid": [155, 187, 188, 190, 196, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 392, 421, 432, 450, 467, 469, 470, 471, 472, 474, 480], "plot_heatmap": 203, "plot_hist": [196, 516], "plot_imag": 83, "plot_interact": [187, 188, 190, 196, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 421, 428, 450, 458, 471, 487, 488], "plot_kernel": 155, "plot_kwarg": [442, 444, 452], "plot_linear_tempor": [436, 554, 559], "plot_logparabola": [436, 537, 549], "plot_logparabola_norm_spectr": [436, 538, 549], "plot_map_rgb": 433, "plot_mask": [108, 109, 188, 196, 200, 439, 442, 443, 512], "plot_matrix": [144, 467, 479], "plot_migr": 149, "plot_naima": [436, 539, 549], "plot_npred_sign": [433, 450, 452, 488], "plot_offset2_distribut": 83, "plot_offset_depend": [141, 147], "plot_panel": 355, "plot_phasogram": 266, "plot_piecewise_norm_spati": [436, 523, 528], "plot_piecewise_norm_spectr": [436, 540, 549], "plot_point": [436, 524, 528], "plot_posit": [218, 240, 473], "plot_position_error": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267], "plot_powerlaw": [436, 541, 549], "plot_powerlaw2": [436, 542, 549], "plot_powerlaw_norm_spectr": [436, 543, 549], "plot_powerlaw_tempor": [436, 555, 559], "plot_profil": 126, "plot_psf_vs_rad": [148, 154, 156, 157, 158, 160, 479], "plot_rad_max_vs_energi": [159, 444], "plot_region": [195, 196, 218, 240, 365, 444, 456, 473, 512, 516], "plot_residu": [100, 101, 104, 108, 109, 417, 419, 450, 488], "plot_residuals_spati": [101, 104, 108, 109, 450, 458, 488], "plot_residuals_spectr": [101, 104, 108, 109], "plot_rgb": 433, "plot_shel": [436, 525, 528], "plot_shell2": [436, 526, 528], "plot_sine_tempor": [436, 556, 559], "plot_smooth_broken_powerlaw": [436, 544, 549], "plot_spati": 419, "plot_spectrum": [100, 141, 450, 462, 467], "plot_spectrum_datasets_off_region": [416, 432, 433, 442, 444, 452, 512], "plot_stat": 442, "plot_super_exp_cutoff_powerlaw_3fgl": [436, 545, 549], "plot_super_exp_cutoff_powerlaw_4fgl": [436, 546, 549], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [436, 547, 549], "plot_templ": [436, 527, 528], "plot_template_phase_tempor": [436, 557, 559], "plot_template_spectr": [436, 548, 549], "plot_template_tempor": [436, 558, 559], "plot_theta_squared_t": [480, 481], "plot_tim": 83, "plot_ts_profil": [123, 442, 443, 456, 460], "plotmixin": [108, 109], "plotter": 355, "plsuperexpcutoff3fgl": 426, "plsuperexpcutoff4fgl": 411, "plt": [19, 20, 26, 66, 67, 127, 141, 147, 148, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 356, 365, 368, 369, 404, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 495, 496, 497, 503, 505, 506, 507, 509, 512, 520, 522, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 219, 388, 394, 474], "pmf": 381, "png": [148, 376, 404, 493, 495, 496, 497, 499, 500, 505, 506, 507, 509, 512, 516, 565, 568], "po": [146, 198, 512], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 93, 94, 95, 98, 99, 100, 101, 103, 104, 108, 109, 117, 121, 123, 124, 125, 128, 129, 130, 131, 133, 139, 146, 148, 151, 157, 159, 160, 170, 171, 173, 174, 175, 177, 178, 180, 181, 183, 184, 187, 188, 190, 195, 196, 199, 200, 205, 218, 240, 244, 255, 273, 277, 280, 286, 299, 303, 309, 315, 325, 360, 368, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 407, 410, 412, 413, 419, 421, 422, 424, 425, 426, 427, 429, 432, 433, 434, 436, 439, 441, 444, 445, 446, 450, 455, 456, 458, 460, 462, 463, 467, 468, 469, 470, 471, 474, 475, 479, 481, 483, 491, 492, 498, 499, 500, 503, 508, 511, 512, 515, 517, 521, 522, 528, 539, 560, 561, 562], "point_sourc": 379, "pointer": 376, "pointing_altaz": [395, 433], "pointing_galact": 90, "pointing_info": [85, 93, 437], "pointing_posit": [157, 445, 455, 458], "pointing_radec": [83, 90, 433, 478], "pointing_t": 93, "pointing_zen": 433, "pointinginfo": [85, 425], "pointinginfometadata": 103, "pointingmetadata": 395, "pointingmod": 85, "pointlik": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 427, 512], "points_scal": 309, "pointskyregion": [169, 174, 195, 244, 422, 444, 455], "pointsourc": [379, 491], "pointspatialmodel": [19, 20, 72, 80, 131, 249, 391, 392, 412, 432, 446, 447, 450, 451, 454, 455, 460, 466, 467, 473, 474, 479, 487, 488, 524], "pointspreadfunct": 469, "poisson": [104, 109, 279, 281, 282, 288, 290, 291, 294, 327, 380, 381, 410, 415, 440, 445, 448, 458, 562, 563, 565], "poissonian": [459, 463, 562], "poissonlikelihoodfitt": 424, "polar": [51, 54, 298, 368], "pole": [51, 382, 471], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188], "polici": 372, "pollut": 383, "polygon": [188, 202, 382], "polygonis": 382, "polygonpixelregion": 382, "polygonskyregion": [202, 382], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 237, 471], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [313, 317, 318], "pool_kwarg": [317, 318], "poolmethodenum": 313, "poon": 425, "poorli": [470, 510], "pop": [91, 99, 194, 240], "popitem": 194, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 369, 388, 426, 492, 494, 539, 561], "popular": 563, "port": 426, "pos_ob": 452, "pos_on": 184, "pos_target": [452, 463], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 93, 94, 95, 101, 102, 103, 104, 107, 121, 122, 123, 124, 125, 128, 129, 131, 145, 146, 152, 155, 157, 160, 170, 173, 175, 184, 186, 187, 188, 190, 195, 196, 197, 198, 199, 200, 201, 208, 209, 210, 211, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 277, 279, 281, 295, 296, 299, 300, 303, 304, 356, 368, 375, 379, 381, 382, 391, 392, 393, 394, 409, 411, 416, 419, 421, 434, 437, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 481, 489, 499, 500, 501, 503, 508, 509, 512, 513, 514, 516, 520, 521, 522, 524, 539, 565], "position_angl": 445, "position_error": [214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 413], "position_lonlat": [214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "position_off": 184, "positv": 430, "posixpath": [16, 333], "possibl": [33, 82, 87, 90, 150, 368, 369, 371, 375, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 392, 395, 398, 400, 410, 411, 419, 426, 428, 433, 438, 442, 446, 447, 448, 453, 456, 467, 468, 469, 470, 471, 479, 488, 489, 501, 503, 510, 515, 516, 539, 563, 564], "possibli": [87, 90, 121, 374, 378, 379, 381, 382, 386, 387, 388, 389, 395, 397, 419, 510], "post": [52, 377, 395], "poster": [371, 394, 398, 423], "posterior": [386, 476], "posteriori": 476, "postfix": 368, "potenti": [118, 376, 384, 453, 503], "potentiel": 394, "power": [19, 20, 26, 27, 100, 120, 121, 123, 125, 130, 135, 155, 157, 160, 186, 208, 210, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 256, 258, 259, 260, 261, 264, 268, 270, 275, 280, 324, 379, 381, 407, 413, 425, 427, 436, 438, 445, 447, 450, 454, 456, 458, 461, 462, 463, 473, 474, 476, 503, 517, 529, 549, 555], "power_spectrum": 280, "power_spectrum_param": 280, "powerlaw": [173, 246, 248, 280, 379, 380, 384, 425, 427, 436, 439, 447, 455, 456, 466, 474, 476, 488, 517, 543, 559], "powerlaw2spectralmodel": [238, 246, 247, 250, 391, 440, 447, 474, 489, 542], "powerlaw_with_paramet": 280, "powerlawnormspectralmodel": [67, 226, 245, 247, 250, 265, 390, 391, 396, 416, 434, 450, 451, 454, 455, 458, 467, 473, 474, 479, 487, 510, 523, 543, 548], "powerlawspectr": 131, "powerlawspectralmodel": [70, 72, 76, 80, 100, 108, 109, 113, 115, 123, 129, 131, 209, 211, 245, 246, 250, 271, 391, 392, 396, 438, 439, 440, 443, 445, 446, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 473, 474, 476, 478, 479, 487, 488, 489, 501, 519, 520, 521, 522, 524, 525, 526, 527, 529, 531, 540, 541, 543, 550, 551, 552, 553, 554, 555, 556, 557, 558], "powerlawspectramodel": 396, "powerlawtemporalmodel": [262, 474, 555], "pppc4dmid": 26, "pprint": [87, 90, 564], "pprint_al": [87, 90], "pprint_exclude_nam": [87, 90], "pprint_include_nam": [87, 90], "pr": [368, 378, 380, 382, 391, 392, 394, 396, 397, 413, 414], "practic": [381, 385, 389, 392, 393, 394, 395, 442, 467, 472, 474, 488, 499, 503, 512, 562], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 100, 103, 107, 122, 123, 297, 368, 371, 377, 388, 394, 395, 399, 400, 416, 428, 430, 443, 447, 448, 451, 453, 456, 459, 466, 468, 473, 476, 499, 505], "preced": [315, 382, 384, 394, 474], "precis": [131, 148, 154, 156, 158, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 368, 386, 393, 394, 455], "precision_factor": [157, 160, 187, 188, 190, 196, 199, 200], "precomput": [26, 100, 123, 467, 473], "pred": 499, "predefin": [421, 456, 460, 461, 487], "predic": 379, "predict": [100, 101, 104, 107, 108, 109, 120, 121, 123, 124, 125, 128, 129, 135, 164, 167, 173, 180, 244, 255, 283, 319, 364, 374, 379, 380, 381, 416, 433, 434, 438, 443, 445, 447, 448, 450, 452, 454, 456, 458, 467, 470, 476, 487, 488, 501, 503, 507, 510, 529, 562, 565], "prefer": [87, 90, 343, 368, 373, 375, 379, 387, 388, 394, 399, 400, 404, 456, 462, 471, 472, 476, 483, 563, 565], "prefix": [192, 379], "preliminari": [377, 388, 396, 424, 426, 434, 446, 469, 479], "prepar": [82, 167, 378, 379, 397, 443, 451, 468, 470, 474, 479, 487, 511, 560], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 90], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 446, 459, 471, 539, 562], "present": [15, 70, 82, 83, 85, 90, 91, 99, 105, 109, 121, 123, 161, 189, 194, 218, 226, 240, 297, 368, 369, 371, 381, 384, 388, 392, 395, 398, 419, 439, 444, 447, 448, 459, 460, 461, 465, 469, 470, 471, 473, 499, 501, 504, 516, 563, 565], "preserv": [87, 90, 104, 187, 188, 190, 192, 196, 199, 200, 385, 467, 472], "preserve_count": [187, 188, 190, 196, 199, 200, 471], "press": 478, "pretti": [382, 388, 398, 404], "prevent": [188, 220, 297, 419, 450, 510], "preview": [371, 481], "previou": [74, 87, 90, 368, 371, 382, 388, 389, 393, 397, 410, 416, 434, 444, 453, 454, 471, 474, 475, 476, 489, 498], "previous": [277, 385, 415, 427, 428, 437, 442, 450, 451, 466, 470, 472], "primari": [26, 87, 90, 187, 188, 190, 191, 199, 200, 373, 394, 415, 430, 471], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 191, "primary_band": 471, "primary_hdu": 454, "primaryflux": [19, 20, 465, 491], "primaryhdu": [454, 471], "prime": 23, "primer": 386, "princip": 453, "principl": [394, 396, 442, 513], "print": [11, 67, 82, 83, 85, 86, 87, 88, 90, 93, 95, 100, 101, 108, 110, 114, 120, 123, 125, 131, 136, 137, 142, 144, 147, 148, 154, 156, 158, 167, 170, 209, 211, 218, 232, 240, 271, 295, 296, 305, 336, 368, 369, 379, 380, 383, 392, 395, 403, 404, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 487, 488, 489, 501, 503, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563, 564, 565, 567], "print0": 368, "print_level": [450, 458, 468, 488], "print_stack": 368, "printout": [368, 426, 427, 467], "prior": [19, 20, 98, 100, 101, 108, 208, 209, 210, 211, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 372, 377, 400, 402, 434, 436, 438, 439, 442, 443, 444, 445, 447, 450, 451, 456, 458, 462, 466, 468, 474, 477, 483, 488, 489, 515, 548, 560], "prior_registri": 476, "prior_stat_sum": [208, 209, 210, 211, 396, 476], "priorfitstatist": 396, "priori": [392, 448, 472], "prioriti": [365, 377, 379, 380, 382, 394, 397], "priormodel": 396, "priorparamet": [396, 476], "privat": [368, 371, 377, 391, 427, 480, 481], "pro": [368, 384], "probabl": [13, 100, 149, 368, 371, 374, 375, 376, 378, 381, 382, 386, 388, 390, 396, 398, 442, 445, 458, 468, 471, 474, 476, 479, 507, 508, 509, 562, 563, 565, 566], "probe": [286, 474], "problem": [19, 20, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 293, 346, 376, 378, 382, 389, 396, 403, 431, 468], "problemat": [387, 392, 395, 461, 503], "proce": [371, 398, 400, 402, 430, 438, 439, 442, 443, 454, 458, 461, 472, 473, 479, 487, 488], "procedur": [381, 393, 398, 438, 446, 450], "proceed": [388, 394, 480], "process": [11, 83, 92, 124, 125, 128, 131, 163, 188, 200, 316, 317, 318, 327, 368, 369, 371, 373, 374, 376, 377, 378, 380, 381, 383, 384, 390, 393, 394, 395, 401, 405, 411, 416, 419, 421, 427, 434, 439, 442, 452, 454, 455, 466, 467, 470, 480, 485, 488, 493, 500, 502, 503, 561, 562, 563], "process_lots_of_data": 368, "processor": 388, "prod": 408, "prod3": 388, "prod3b": 478, "prod5": [454, 455], "produc": [15, 101, 104, 108, 109, 112, 121, 274, 276, 368, 369, 374, 383, 384, 392, 393, 395, 398, 413, 438, 439, 442, 444, 446, 451, 452, 453, 454, 458, 461, 463, 465, 468, 470, 476, 478, 488, 503, 506, 508, 562, 563], "product": [107, 187, 188, 190, 193, 196, 199, 200, 266, 374, 383, 384, 394, 395, 404, 419, 433, 434, 438, 440, 446, 455, 463, 467, 468, 470, 479, 481, 501, 508, 562], "prof_mak": 125, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 100, 117, 121, 123, 124, 125, 126, 127, 128, 129, 148, 154, 156, 157, 158, 160, 184, 188, 196, 205, 229, 231, 278, 294, 310, 329, 330, 380, 382, 386, 387, 394, 400, 402, 407, 409, 416, 419, 424, 426, 428, 429, 434, 436, 442, 443, 452, 457, 460, 462, 468, 476, 483, 491, 499, 501, 503, 515, 520, 562, 565], "profile_err": 126, "profile_high": 456, "profile_new": 456, "profuma": 491, "program": [368, 384], "programmat": 450, "progress": [15, 82, 116, 128, 131, 205, 318, 374, 377, 384, 385, 398, 419, 426, 427, 428, 434, 503], "progress_download": 503, "prohibit": 503, "proj": [101, 104, 108, 109, 167, 186, 187, 188, 198, 199, 200, 442, 470, 471, 479, 488, 512], "project": [101, 108, 125, 164, 170, 186, 187, 188, 190, 195, 196, 198, 199, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 304, 330, 368, 369, 370, 371, 373, 375, 382, 384, 385, 388, 394, 411, 419, 427, 433, 443, 446, 448, 452, 456, 463, 469, 471, 472, 473, 478, 479, 485, 487, 488, 489, 491, 512, 515, 516, 525, 526, 561, 563], "projected_distance_axi": 125, "prompt": 563, "pronounc": 503, "pronunci": 503, "prop_cycl": 365, "propag": [19, 20, 26, 53, 126, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 285, 379, 386, 413, 433, 468], "proper": [45, 99, 383, 394, 432, 433, 444, 450, 503], "properli": [131, 180, 373, 383, 394, 431, 432, 442, 443, 468, 487, 499, 564], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 95, 121, 164, 198, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 287, 365, 368, 369, 379, 381, 391, 392, 395, 396, 416, 419, 421, 426, 427, 429, 432, 433, 442, 444, 452, 454, 456, 466, 472, 474, 475, 489, 500, 516, 562], "propos": [370, 372, 373, 374, 375, 377, 385, 393, 394, 396, 409, 412, 413, 415, 416, 427, 433], "proto": [16, 84, 103, 122], "proton": [270, 539], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 373, 379, 381, 384, 385, 386, 388, 424, 426, 427, 434, 492], "proven": 384, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 100, 101, 103, 104, 108, 109, 112, 122, 128, 131, 144, 145, 163, 177, 178, 183, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 267, 280, 294, 297, 361, 368, 369, 378, 379, 381, 383, 384, 385, 388, 389, 392, 394, 395, 396, 397, 398, 399, 403, 405, 409, 412, 413, 414, 416, 419, 421, 430, 433, 437, 442, 444, 445, 446, 455, 458, 459, 466, 467, 468, 470, 471, 472, 474, 475, 479, 480, 481, 483, 488, 489, 491, 493, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 513, 514, 515, 516, 517, 524, 527, 539, 548, 560, 561, 562, 563, 565, 568], "proxi": 378, "prune": 371, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 371, "psf": [16, 82, 87, 88, 95, 101, 102, 104, 107, 108, 109, 111, 112, 146, 148, 153, 154, 155, 156, 157, 158, 160, 167, 174, 183, 198, 218, 240, 255, 295, 296, 368, 374, 378, 379, 380, 381, 384, 407, 409, 413, 414, 415, 416, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 433, 437, 439, 442, 443, 444, 446, 447, 448, 450, 452, 454, 455, 458, 460, 467, 470, 472, 475, 478, 480, 481, 487, 488, 499, 501, 503, 508, 511, 516, 562], "psf3d": [88, 148, 153, 156, 158, 183, 409, 427, 509], "psf68": 437, "psf_": 499, "psf_3gauss": [87, 148, 478, 509], "psf_assym": 469, "psf_kernel": [157, 479], "psf_kernel_map": [155, 479], "psf_king": [87, 156, 509], "psf_map": [102, 107, 157, 160], "psf_map_reco": [160, 480], "psf_mean": 479, "psf_new": 469, "psf_out": [157, 160], "psf_r95": 472, "psf_tabl": [82, 87, 154, 469, 481], "psf_theta": 368, "psf_valu": [148, 156, 158], "psfkernel": [104, 157, 160, 188, 200, 380, 389, 428, 509], "psfking": [153, 421, 509], "psfmap": [101, 102, 104, 107, 108, 109, 145, 146, 152, 153, 155, 160, 167, 174, 183, 380, 381, 389, 409, 412, 413, 415, 416, 428, 434, 446, 467, 479, 503, 509], "psfnd": 469, "psr": [463, 466, 489], "public": [6, 358, 359, 371, 373, 382, 387, 390, 393, 398, 423, 439, 451, 460, 461, 561, 568], "publicli": [478, 480, 481], "publish": [11, 385, 398, 442, 479], "pull": [369, 372, 373, 376, 377, 378, 379, 380, 381, 382, 388, 393, 394, 398, 406], "puls": 231, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 83, 378, 388, 409, 411, 430, 433, 436, 448, 453, 464, 474, 483, 493, 494, 499, 500, 501, 503, 511, 515, 560], "pulsar_analysi": [388, 436, 463, 464], "pulsat": 254, "pulse_stat": 463, "punch": [432, 434], "pure": [368, 385, 387, 388, 512], "purpl": 516, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 321, 343, 372, 374, 380, 383, 387, 391, 393, 394, 427, 446, 467, 473, 474, 507], "push": [368, 371, 397, 430], "put": [368, 369, 371, 373, 375, 376, 379, 388, 397, 398, 404, 410, 445, 454, 472, 479, 563], "pwbpl": 391, "pwd": [371, 400, 402], "pwl": [19, 20, 26, 123, 209, 211, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 271, 379, 391, 396, 438, 440, 454, 474, 476, 501, 519, 520, 521, 522, 524, 525, 526, 527, 529, 531], "pwl2": 474, "pwl_decai": 454, "pwl_norm": [391, 474, 543], "pwn": [43, 466, 489, 496], "pwne": 453, "py": [16, 84, 103, 122, 368, 369, 375, 382, 385, 387, 389, 397, 398, 404, 409, 411, 412, 420, 425, 429, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 503, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 563], "py310": 371, "py35": 426, "pycharm": 410, "pydant": [16, 84, 103, 122, 367, 413, 432, 434], "pydantic_cor": [16, 84, 103, 122], "pydanticserializationerror": [16, 84, 103, 122], "pydanticundefin": [16, 84, 103, 122], "pydata": 421, "pyfact": [407, 425], "pyflak": 421, "pyirf": 434, "pyjok": 367, "pymc": 386, "pymotw": 563, "pypi": [385, 395, 397, 398, 400, 401], "pyplot": [19, 20, 26, 66, 67, 83, 127, 148, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 356, 361, 404, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 495, 496, 497, 503, 505, 506, 507, 509, 512, 520, 522, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556], "pyproject": 416, "pyregion": 382, "pytest": [368, 369, 371, 398, 427], "python": [11, 16, 84, 103, 122, 136, 297, 337, 367, 371, 372, 373, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 394, 395, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 411, 412, 419, 421, 424, 425, 426, 427, 428, 429, 430, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 502, 503, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 563], "python3": [333, 401, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 535, 538, 551], "python_execut": [437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "python_vers": [437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "pytorch": 386, "pyx": [371, 398], "pyyaml": [367, 385, 408, 412], "q": [26, 83, 87, 90, 363, 465], "qehork_n": 450, "qsh9xy6i": 470, "qtabl": [87, 90, 383], "quadrat": [471, 481, 489, 566], "qualiti": [196, 388, 427, 428, 433, 475, 488, 503, 561, 568], "quantifi": [434, 453, 459, 476], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 90, 93, 95, 99, 101, 102, 104, 105, 107, 108, 109, 111, 112, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 171, 172, 173, 175, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 273, 279, 280, 281, 284, 285, 286, 287, 293, 296, 297, 299, 301, 303, 304, 309, 327, 329, 330, 339, 343, 368, 369, 374, 377, 379, 382, 383, 384, 386, 391, 392, 395, 396, 410, 412, 416, 419, 420, 428, 429, 430, 437, 446, 454, 455, 456, 459, 466, 467, 469, 470, 471, 472, 474, 478, 480, 481, 489, 495, 496, 497, 499, 503, 516, 542, 551, 553, 562, 565, 567], "quantity_support": [469, 520], "quasar": 132, "quentin": [386, 390, 391, 411, 412, 413, 414, 415, 416, 419, 421, 422, 430, 431, 432, 433, 434], "queri": [384, 424, 466], "question": [336, 371, 373, 375, 376, 377, 379, 380, 381, 382, 385, 387, 392, 403, 408, 409, 427, 428, 429, 452, 489, 503, 504, 563], "questionnair": [375, 427], "quetin": 413, "quick": [83, 88, 101, 104, 108, 109, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 368, 371, 388, 398, 446, 447, 450, 452, 454, 462, 467, 469, 473, 478, 480, 481, 483, 489, 491, 500], "quickest": 369, "quickli": [368, 369, 371, 373, 384, 385, 388, 394, 398, 400, 426, 442, 450, 459, 480, 507, 563], "quicklook": 83, "quickplot": 188, "quicksort": [87, 90], "quickstart": 405, "quiescent": 529, "quit": [87, 90, 368, 396, 454], "quival": 379, "quot": [74, 271, 368, 369, 465], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 90, 149, 184, 197, 298, 368, 369, 393, 398, 443, 451, 455, 468, 470, 487, 493, 508, 512, 520, 521, 522, 526, 529], "r68": [83, 111, 148, 157, 160], "r70": [67, 466], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 252, 253, 465, 522, 525, 526], "r_0": [30, 33, 38, 48, 219, 230, 252, 473, 520, 522, 526], "r_1": [39, 48], "r_eval": 230, "r_exp": [36, 48], "r_in": [44, 162, 172, 252, 448, 513], "r_m": 522, "r_out": 44, "r_out_max": 162, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 90, 93, 136, 137, 170, 368, 369, 381, 384, 437, 442, 444, 446, 448, 452, 455, 460, 461, 463, 466, 470, 472, 478, 479, 480, 481, 488, 489, 491, 503, 507, 567], "ra_pnt": 481, "ra_tru": [368, 381], "rad": [33, 83, 88, 101, 104, 108, 109, 111, 112, 148, 154, 156, 157, 158, 159, 160, 170, 183, 254, 384, 421, 433, 444, 467, 469, 470, 479, 508, 509, 512, 556], "rad_axi": [101, 104, 108, 109, 112, 154, 157, 160, 467, 469, 470, 503], "rad_di": [45, 493], "rad_index": 154, "rad_max": [82, 83, 87, 88, 153, 159, 176, 421, 430, 432, 433, 444], "rad_max_2d": [87, 159, 169, 174, 176, 444], "radec": [83, 93, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 368, 369, 469, 471, 489], "radecsi": 527, "radesysa": 527, "radi": [241, 539], "radial": [28, 30, 35, 36, 39, 40, 45, 127, 184, 188, 323, 368, 379, 387, 392, 409, 424, 426, 434, 454, 456, 470, 478, 491, 493, 509, 512], "radian": [17, 18, 21, 22, 24, 25, 27, 193, 214, 215, 219, 227, 230, 242, 244, 252, 253, 255, 257, 263, 267], "radiat": [220, 503, 525, 526, 539], "radiative_model": [241, 539], "radii": [27, 465, 479, 521], "radio": [132, 382, 471], "radiobutton": [450, 458, 471, 487, 488], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 90, 95, 101, 104, 108, 109, 120, 125, 126, 148, 154, 156, 157, 158, 160, 162, 170, 172, 188, 198, 200, 201, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 295, 296, 329, 369, 382, 384, 391, 392, 409, 418, 419, 423, 433, 437, 439, 442, 443, 445, 446, 447, 448, 450, 452, 454, 455, 460, 461, 463, 465, 467, 469, 470, 472, 473, 474, 475, 478, 487, 488, 489, 496, 497, 510, 512, 513, 516, 520, 521, 522, 525, 526], "radius_inn": [52, 53], "radius_max": [329, 456], "radius_min": 329, "radius_reverse_shock": [50, 53, 496], "radmax": [421, 422, 433, 434], "radmax2d": [83, 88, 153, 176, 419, 444], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 92, 120, 124, 125, 128, 130, 131, 132, 163, 220, 270, 271, 286, 287, 317, 318, 374, 379, 380, 382, 386, 397, 398, 400, 404, 405, 410, 426, 428, 433, 434, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 491, 493, 494, 498, 499, 500, 503, 506, 508, 510, 512, 513, 529, 560, 561, 562, 563, 564, 565, 568], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 99, 103, 122, 189, 194, 218, 220, 240, 263, 264, 265, 267, 297, 346, 368, 382, 391, 392, 395, 396, 413, 430, 433, 434, 455], "raise_error": [16, 84, 103, 122], "raj2000": [466, 489], "ran": 478, "random": [6, 33, 42, 45, 46, 47, 87, 90, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 320, 321, 322, 323, 324, 325, 326, 327, 371, 380, 381, 384, 411, 423, 427, 454, 474, 503, 564, 565, 567], "random_se": 380, "random_st": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 320, 321, 324, 325, 326, 327, 368, 381, 445, 454, 455], "randomli": [46, 368], "randomnumb": 324, "randomst": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 368], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 90, 91, 99, 100, 101, 104, 108, 109, 124, 144, 157, 159, 160, 173, 185, 186, 189, 191, 192, 195, 196, 198, 208, 210, 212, 213, 216, 217, 219, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 273, 310, 322, 324, 325, 326, 361, 368, 374, 380, 381, 383, 392, 410, 415, 416, 419, 427, 428, 430, 439, 442, 444, 445, 447, 450, 451, 453, 455, 459, 461, 462, 463, 466, 467, 468, 469, 471, 472, 474, 475, 476, 479, 480, 487, 488, 489, 499, 501, 503, 522, 532, 561, 565], "rangl": 19, "rapid": [132, 286, 374, 377, 392, 393], "rare": [367, 368, 387, 471], "raster": [94, 188], "rate": [44, 45, 83, 88, 141, 142, 173, 180, 280, 327, 381, 404, 428, 442, 444, 463, 470, 478, 479, 481, 493, 506, 562], "rather": [116, 120, 124, 128, 131, 373, 386, 389, 427, 430, 432, 434, 439, 468, 471, 489, 499, 521, 565], "ratio": [104, 109, 162, 186, 187, 188, 281, 294, 392, 437, 463, 478, 513, 562, 564, 565, 566, 568], "ravel": [186, 454], "raw": [121, 173, 489], "rc": [187, 188, 190, 196, 199, 200, 365, 471], "rc1": 397, "rc_context": [187, 188, 190, 196, 199, 200, 471], "rc_param": [187, 188, 190, 196, 199, 200, 471], "rcparam": 365, "rcqaww0g": 474, "rdbu": 487, "rdbu_r": [101, 104, 108, 109], "re": [87, 90, 95, 123, 124, 129, 164, 187, 188, 190, 196, 199, 200, 205, 295, 296, 361, 368, 369, 371, 373, 375, 376, 382, 383, 384, 386, 389, 390, 391, 392, 400, 402, 403, 407, 419, 421, 428, 440, 442, 443, 448, 450, 451, 452, 462, 468, 469, 473, 475, 479, 487, 489, 501, 503, 524, 563], "reach": [53, 130, 201, 373, 378, 381, 474], "reactiv": 430, "read": [15, 16, 83, 85, 86, 87, 88, 90, 93, 99, 100, 101, 104, 105, 108, 109, 113, 115, 116, 120, 121, 123, 125, 127, 129, 131, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 169, 187, 188, 190, 194, 195, 196, 199, 200, 218, 220, 232, 240, 266, 267, 268, 272, 274, 276, 277, 335, 354, 356, 361, 363, 368, 369, 371, 373, 378, 379, 380, 381, 384, 388, 390, 392, 394, 395, 396, 400, 402, 413, 416, 419, 427, 428, 430, 433, 434, 438, 442, 443, 444, 448, 450, 453, 454, 459, 467, 468, 469, 474, 476, 478, 479, 480, 483, 487, 489, 500, 501, 503, 505, 506, 507, 509, 527, 557, 558, 563, 566], "read_arf": 105, "read_bkg": 105, "read_builtin": [220, 438, 529], "read_covari": [218, 240], "read_dataset": 15, "read_lazi": 421, "read_model": 15, "read_pha": 105, "read_rmf": 105, "read_xspec_model": 268, "readabl": [349, 379, 421, 443, 487], "reader": [395, 437, 445, 447, 450, 452, 455, 458, 462, 478], "readi": [378, 395, 403, 562], "readili": 388, "readm": [371, 394], "readthedoc": [13, 124, 180, 195, 205, 268, 371, 388, 410, 425, 468, 469, 478, 500, 514, 516], "real": [51, 368, 371, 398, 445, 446, 448, 455, 468, 472, 499], "realis": [368, 373, 382, 394], "realist": 396, "realiti": 438, "realiz": [374, 562], "realli": [368, 375, 382, 385, 445, 458, 468], "rearrang": 388, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 373, 374, 375, 376, 379, 380, 381, 383, 385, 387, 389, 394, 427, 438, 454, 468, 476, 480, 499, 563], "reassign": [19, 20, 26, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269], "rebas": [368, 382], "rebin": [123, 139, 383, 421, 434, 459, 461, 467], "rebuild": [16, 84, 103, 122, 451], "recarrai": [87, 90, 148, 158], "receiv": [386, 388, 389, 391, 393], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 378, 382, 383, 384, 385, 388, 401, 408, 422, 428, 451, 478, 480], "recip": [370, 384, 405, 419, 463, 504, 565], "reco": [101, 104, 108, 109, 144, 177, 368, 374, 383, 392, 429, 430, 437, 467, 470, 480, 562], "reco_exposur": 120, "reco_psf": [101, 104, 108, 109, 112, 470, 480], "recogn": [437, 445, 447, 450, 452, 454, 458, 462, 478], "recognis": [379, 563], "recognit": 394, "recommend": [91, 99, 100, 174, 218, 240, 278, 309, 310, 367, 368, 369, 371, 375, 377, 385, 394, 398, 399, 401, 404, 411, 428, 442, 443, 444, 453, 467, 468, 470, 474, 479, 487, 503, 510, 515, 516, 563, 564, 567], "recomput": [123, 392], "recompute_ul": 123, "recon_vers": [479, 489], "reconstruct": [83, 101, 102, 104, 107, 108, 109, 111, 112, 120, 130, 131, 135, 144, 145, 146, 149, 159, 160, 173, 180, 368, 374, 379, 381, 416, 431, 437, 439, 442, 445, 447, 448, 450, 454, 458, 462, 467, 470, 472, 476, 480, 499, 501, 507, 508, 509, 516, 562], "recopsfmap": [153, 430, 433], "record": [83, 88, 368, 373, 374, 394], "recov": 384, "rectangl": [215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 330, 382, 456, 512], "rectangleskyregion": [198, 214, 215, 267, 329, 330, 382, 439, 465, 472, 512, 516], "rectangular": [456, 512, 516], "recurr": 383, "recurs": [336, 395], "red": [100, 280, 286, 358, 437, 438, 442, 445, 448, 450, 453, 465, 475, 476, 520, 521], "redesign": 377, "redistribut": 507, "redo": 463, "redshift": [19, 20, 220, 391, 489, 529], "redshift_scan": 438, "reduc": [6, 11, 15, 99, 101, 104, 108, 109, 155, 157, 160, 165, 175, 187, 188, 190, 192, 196, 199, 200, 374, 375, 377, 379, 380, 384, 387, 389, 394, 395, 400, 407, 412, 419, 428, 434, 436, 438, 439, 440, 443, 444, 445, 450, 451, 454, 458, 460, 461, 462, 472, 475, 477, 480, 483, 499, 503, 508, 513, 515, 516, 521, 522, 560, 561, 562, 563], "reduce_data": 384, "reduce_over_ax": [187, 188, 190, 196, 199, 200, 447, 470, 480], "reduct": [6, 11, 163, 374, 380, 381, 384, 388, 389, 390, 395, 400, 413, 415, 433, 436, 448, 452, 453, 456, 463, 467, 469, 472, 473, 475, 477, 483, 499, 500, 503, 510, 512, 513, 515, 561, 562], "ref": [83, 93, 101, 108, 120, 125, 131, 186, 195, 198, 218, 240, 392, 452, 456, 466, 467, 469, 471, 479, 489, 516, 551, 552, 553, 554, 555, 556, 562, 563], "ref_templ": [16, 84, 103, 122], "refactor": [368, 380, 382, 383, 384, 391, 409, 410, 411, 413, 414, 415, 416, 419, 421, 423, 425, 427], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 83, 84, 85, 86, 87, 88, 90, 93, 100, 101, 103, 104, 105, 108, 109, 111, 112, 121, 122, 123, 124, 126, 131, 132, 149, 163, 164, 167, 170, 171, 174, 175, 176, 179, 180, 182, 197, 198, 199, 200, 205, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 271, 280, 282, 286, 287, 288, 293, 294, 324, 325, 349, 350, 351, 352, 368, 369, 374, 376, 379, 380, 382, 384, 386, 391, 392, 393, 394, 395, 398, 405, 419, 426, 427, 438, 439, 440, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 466, 467, 468, 470, 471, 473, 474, 476, 478, 479, 480, 487, 488, 489, 492, 499, 501, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 533, 534, 535, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 565, 567], "referenc": [368, 562], "reference_flux": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "reference_map": 471, "reference_model": [121, 123, 437, 438, 451], "reference_model_default": [121, 123], "reference_spectral_model": [121, 123], "reference_tim": [86, 88, 101, 104, 108, 109, 191, 197, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 432, 433, 455, 459, 462, 470, 471, 558], "reflect": [165, 169, 170, 171, 175, 184, 377, 382, 384, 387, 389, 400, 412, 419, 421, 424, 425, 428, 438, 439, 442, 443, 444, 452, 461, 472, 511, 562], "reflected_bkg_mak": 470, "reflectedbgestim": 384, "reflectedregion": 438, "reflectedregionsbackgroundmak": [165, 170, 413, 439, 442, 444, 452, 461, 470], "reflectedregionsfind": [169, 175, 411, 512], "refpix": [198, 199, 200], "refresh": [87, 90], "refus": 368, "reg": [101, 104, 108, 109, 472, 474], "reg_dataset": 467, "regard": [392, 395, 442], "regardless": [87, 90], "regeard": [431, 432, 433, 434], "regi": [374, 379, 380, 384], "region": [6, 27, 83, 90, 99, 101, 104, 106, 108, 109, 113, 115, 125, 127, 130, 132, 145, 146, 152, 157, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 184, 186, 187, 188, 190, 195, 196, 198, 199, 200, 202, 205, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 268, 270, 281, 294, 328, 329, 330, 331, 332, 364, 365, 367, 369, 372, 374, 375, 383, 384, 385, 387, 390, 392, 400, 411, 412, 413, 415, 419, 421, 422, 424, 425, 427, 428, 430, 432, 433, 438, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 471, 474, 476, 478, 479, 480, 481, 487, 488, 489, 498, 499, 500, 501, 503, 510, 511, 513, 514, 515, 520, 521, 539, 561, 562, 564, 565, 566], "region_coord": 195, "region_ev": 463, "region_find": [169, 444], "region_io": 195, "region_map": [196, 200, 516], "region_map_1": 516, "region_map_2": 516, "region_mask": [83, 186, 198, 382, 442, 448, 452, 467, 470, 472, 488, 510, 512, 513], "region_nd_map": 196, "region_new": 331, "region_pix": 474, "region_weight": 198, "regionfind": [170, 171, 175], "regiongeom": [101, 104, 108, 109, 121, 125, 167, 174, 176, 177, 178, 180, 181, 196, 215, 219, 227, 230, 242, 252, 253, 255, 257, 263, 267, 382, 383, 390, 400, 415, 416, 419, 437, 439, 442, 444, 445, 452, 456, 461, 462, 463, 466, 467, 470, 479, 489, 499, 512, 515], "regionndmap": [26, 105, 108, 109, 130, 168, 169, 174, 176, 187, 188, 190, 195, 199, 200, 215, 219, 227, 230, 232, 242, 252, 253, 257, 263, 264, 267, 365, 382, 400, 415, 416, 419, 422, 430, 433, 455, 479, 499, 558], "regions_ds9": 472, "regionsfind": [169, 170, 175, 421], "regist": 474, "registri": [55, 97, 117, 153, 165, 236, 238, 249, 250, 262, 389, 396, 412, 415, 416, 419, 428, 466, 474], "regress": 371, "regul": 394, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 186, 194, 198, 377, 396, 421, 433, 458, 471, 472], "regulargridinterpol": [268, 309, 368], "regularis": 396, "regularli": [396, 481], "reichardt": 423, "reimplement": 379, "rej_sampl": 381, "reject": [372, 373, 381], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 90, 104, 105, 109, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 197, 198, 199, 200, 252, 271, 285, 327, 383, 394, 419, 459, 462, 480, 526, 565], "rel_reduction_of_f_": 468, "relat": [11, 13, 67, 83, 85, 203, 286, 374, 376, 379, 381, 382, 385, 387, 388, 389, 394, 398, 415, 416, 428, 434, 454, 467, 474, 478, 493, 560, 565], "relative_variability_amplitud": 459, "relative_variability_error": 459, "relative_variability_signific": 459, "relativist": 539, "releas": [11, 51, 65, 94, 370, 372, 373, 375, 376, 382, 385, 386, 395, 399, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 439, 442, 443, 451, 460, 461, 478, 480, 481, 487, 488, 491, 503, 505, 506, 507, 509], "relev": [121, 279, 281, 351, 368, 374, 383, 388, 392, 397, 442, 443, 446, 460, 461, 462, 473, 475, 478, 480, 481, 487, 488, 499, 500, 567], "reli": [121, 368, 373, 374, 378, 379, 383, 387, 392, 393, 411, 416, 419, 430, 440, 450, 472, 491, 565], "reliabl": [371, 401, 448, 468, 472, 564], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 99, 373, 374, 375, 376, 381, 385, 394, 409, 428, 444, 473, 509], "remark": 444, "rememb": [368, 382, 468, 483, 563], "remi": [390, 391, 411, 412, 413, 414, 415, 416, 419, 430, 431, 432, 433, 434], "remind": [394, 452, 567], "remnant": [28, 52, 439, 453, 474, 494], "remot": 371, "remov": [13, 87, 90, 91, 95, 99, 124, 125, 128, 157, 160, 172, 185, 186, 191, 194, 195, 198, 200, 208, 210, 240, 296, 371, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 399, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 442, 448, 463, 467, 472, 475, 478, 492, 503, 512], "remove_column": [87, 90], "remove_indic": [87, 90], "remove_row": [87, 90], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 123, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 371, 378, 379, 387, 388, 391, 407, 410, 412, 413, 414, 415, 419, 429, 430, 433, 563], "rename_ax": [185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 430], "rename_column": [87, 90, 123], "rename_dupl": [87, 90], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 346, 368, 376, 427], "renorm": [448, 510], "renormalis": 172, "reoptim": [124, 128, 129, 205, 409, 438, 456, 460, 468, 476, 487], "reorder_ax": [187, 188, 190, 196, 199, 200, 433], "reorgan": 419, "reorganis": 388, "repeat": [369, 450, 480], "repl": 368, "replac": [15, 16, 84, 87, 90, 99, 101, 103, 104, 108, 109, 122, 145, 146, 152, 157, 185, 186, 188, 191, 195, 196, 198, 200, 265, 277, 368, 378, 379, 382, 386, 389, 395, 401, 410, 411, 413, 415, 416, 433, 434, 454, 463], "replace_axi": [185, 186, 195, 198], "replace_column": [87, 90], "repo": [369, 376, 397, 398, 407, 420], "report": [87, 371, 384, 397, 398, 407, 421, 422, 427], "repositori": [87, 90, 368, 371, 373, 376, 378, 394, 397, 419, 428, 454, 481], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 101, 103, 104, 108, 109, 122, 186, 188, 190, 192, 193, 195, 197, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 266, 267, 297, 305, 315, 368, 379, 380, 381, 382, 386, 389, 390, 391, 392, 409, 433, 438, 455, 456, 466, 468, 470, 471, 472, 474, 479, 489, 498, 499, 501, 505, 506, 507, 509, 515, 560, 561, 562, 567], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 103, 122, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 368, 382, 395, 409, 411, 433, 440, 466, 471, 474, 515], "reprocess": 374, "reproduc": [93, 100, 123, 369, 384, 385, 386, 388, 394, 395, 399, 401, 428, 470, 491], "reproject": [173, 187, 188, 190, 196, 199, 200, 364, 368, 374, 382, 385, 392, 413, 420, 428, 430, 434, 471, 472], "reproject_by_imag": [187, 188, 190, 196, 199, 200, 434], "reproject_to_geom": [187, 188, 190, 196, 199, 200, 430], "request": [85, 121, 123, 369, 372, 373, 375, 376, 377, 378, 379, 380, 382, 388, 392, 393, 394, 396, 398, 406, 454, 472, 491, 501], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 94, 101, 103, 104, 108, 109, 110, 114, 122, 123, 126, 131, 141, 142, 148, 156, 164, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 297, 343, 347, 348, 366, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 390, 391, 392, 393, 394, 396, 397, 399, 401, 407, 412, 413, 414, 415, 420, 421, 423, 424, 425, 426, 429, 430, 431, 438, 439, 444, 448, 451, 459, 461, 462, 463, 467, 469, 471, 472, 474, 478, 488, 501, 503, 516], "require_ev": 82, "required_ax": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 469], "required_hdu": 422, "required_irf": [16, 82, 443, 444, 447, 448, 450, 487], "required_nam": [189, 191, 192, 197], "required_paramet": [148, 156, 158], "rerun": 383, "resampl": [101, 104, 108, 109, 123, 139, 140, 145, 185, 186, 187, 188, 189, 190, 191, 195, 196, 198, 199, 200, 363, 419, 421, 459, 503], "resample_axi": [123, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 363, 416, 459, 461], "resample_energy_axi": [101, 104, 108, 109, 145, 416, 421, 467], "resample_energy_edg": [442, 503], "resampled_energy_edg": 140, "resampled_map": [187, 188, 190, 196, 199, 200], "rescal": 470, "research": [384, 394], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 226, 265, 369, 416], "reset_data_cach": [101, 104, 108, 109], "reset_to_default": 226, "reshap": [187, 188, 190, 196, 199, 200, 437, 455, 469, 471], "resid": [390, 474], "residu": [72, 100, 101, 104, 108, 109, 164, 379, 380, 384, 411, 416, 422, 429, 448, 467, 468, 479, 499, 512, 562], "resolut": [52, 144, 145, 149, 186, 198, 377, 379, 381, 382, 427, 433, 466, 479], "resolv": [16, 84, 103, 122, 369, 371, 378, 382, 383, 390, 391, 403, 409, 428], "resort": 447, "resourc": [427, 483], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 103, 105, 122, 123, 132, 186, 188, 198, 200, 278, 378, 383, 394, 396, 416, 446, 448, 462, 471, 472, 480, 501, 516, 566], "respond": 394, "respons": [6, 107, 144, 145, 146, 149, 151, 152, 170, 368, 374, 375, 377, 379, 380, 381, 383, 384, 392, 394, 400, 426, 427, 428, 429, 439, 442, 443, 444, 445, 458, 462, 469, 470, 473, 478, 481, 483, 487, 488, 499, 500, 505, 507, 509, 561, 562], "rest": [26, 371, 385, 387, 466, 498], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 473], "restore_statu": [209, 211, 218, 240, 476], "restore_valu": [209, 211, 218, 240], "restrict": [87, 90, 382, 450, 467, 472], "restructur": [369, 383, 384, 385, 387, 389, 395, 398, 413, 419, 420, 421, 422, 424, 433], "result": [16, 46, 74, 84, 86, 87, 90, 91, 100, 101, 103, 104, 108, 109, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 136, 138, 149, 155, 157, 160, 173, 177, 178, 183, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 204, 205, 206, 207, 218, 240, 267, 277, 280, 297, 361, 367, 368, 369, 371, 373, 375, 377, 378, 379, 380, 381, 384, 386, 387, 390, 394, 396, 401, 404, 411, 419, 421, 422, 427, 429, 433, 434, 438, 440, 442, 444, 445, 450, 452, 454, 455, 458, 459, 461, 462, 463, 466, 467, 468, 471, 472, 475, 476, 479, 480, 481, 487, 488, 491, 498, 501, 516, 551, 562, 564, 565], "result1": 438, "result2": 473, "result_ecpl": 440, "result_joint": [439, 442, 450], "result_list": 361, "result_log_parabola": 440, "result_minuit": 468, "result_pwl": 440, "result_scipi": 468, "result_stack": 442, "results_joint": 451, "results_prior": 476, "results_simplex": 468, "results_t": 453, "retain": [466, 516], "retriev": [87, 90, 392, 394, 439, 440, 442, 471, 474, 475, 480, 488, 500, 515, 516], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 299, 301, 303, 304, 308, 310, 315, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 338, 339, 340, 349, 350, 351, 352, 353, 356, 358, 359, 361, 363, 364, 374, 378, 379, 380, 381, 382, 383, 391, 392, 395, 396, 412, 413, 416, 419, 422, 428, 430, 442, 444, 452, 456, 461, 462, 466, 467, 468, 470, 471, 472, 474, 476, 489, 493, 515, 516, 548, 565], "return_delta": 327, "return_diff": 327, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [384, 416, 434], "reval": 522, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 90, 91, 99, 191, 240, 471, 496], "review": [371, 376, 377, 378, 381, 382, 384, 385, 387, 388, 389, 391, 392, 394, 396, 429, 430, 515], "revis": 388, "revisit": 220, "rework": 414, "rewrit": [374, 377, 384, 414, 424, 425, 427, 428, 429, 563], "rewritten": [426, 429], "rf": 465, "rgb": [363, 365, 433, 437, 442], "rglob": [82, 454, 478], "rhe": 176, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [368, 384], "rid": 374, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 90, 101, 108, 121, 123, 131, 147, 224, 228, 247, 259, 282, 288, 356, 368, 382, 391, 394, 446, 452, 454, 460, 462, 478, 520, 521, 522, 529, 530, 533, 534, 536, 537, 541, 544, 545, 546, 547, 551, 552, 553, 555, 563, 564, 565, 566], "rightarrow": [526, 566], "rigid": 373, "ring": [104, 120, 162, 165, 172, 186, 187, 188, 374, 377, 384, 387, 400, 409, 413, 415, 425, 426, 427, 428, 436, 449, 453, 472, 483, 499, 502, 511, 514, 515, 562], "ring2dkernel": [162, 172], "ring_background": [436, 448, 449], "ring_bkg_mak": 513, "ring_mak": 448, "ringbackgroundestim": [374, 427], "ringbackgroundmak": [162, 165, 413, 448, 470, 513], "rise": [132, 231, 459, 553], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 371, 394], "rlzwtjsy": 450, "rm": [144, 145, 149, 391, 444, 468, 505, 507, 508, 509, 522, 551, 552, 553, 554, 555, 556], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [105, 106, 109, 144, 145, 146, 425, 442], "rmf_ob": 105, "rmffile": 105, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 280, 319, 321, 324, 325, 326, 327, 368], "roadmap": [372, 375, 384, 393, 408, 429], "roberta": [427, 428], "robust": [368, 428], "roi": [67, 384, 466, 481, 562], "roi_max": 384, "role": [427, 470], "rolf": 407, "rolk": 562, "rolke2005": [562, 565], "roll": 479, "room": 378, "root": [19, 20, 26, 121, 122, 131, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 289, 292, 368, 386, 419, 446, 491, 501, 563, 565], "rosillo": 430, "rotang": 455, "rotat": [51, 54, 170, 171, 175, 180, 219, 227, 230, 455, 512, 520, 521], "rough": [72, 384], "roughli": [116, 371, 376, 382, 384, 387, 388, 426, 448], "round": [87, 90, 187, 188, 190, 192, 196, 199, 200, 442, 515], "round_to_edg": [185, 186, 195, 198], "round_trip": [16, 84, 103, 122], "routin": 407, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 90, 136, 144, 305, 339, 362, 383, 392, 395, 430, 433, 442, 445, 455, 456, 466, 468, 471, 478, 480, 481, 489, 498], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 466], "row_label": 362, "row_specifi": [83, 87, 90], "royalblu": 463, "rpovid": 383, "rspec": [67, 466], "rst": [371, 373, 388, 394, 397, 398, 414, 419], "rtd": 428, "rtol": [131, 343, 368], "rtol_ax": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 195, 196, 198, 199, 200], "rtol_wc": 198, "ruben": 427, "rub\u00e9n": 427, "ruiz": [376, 384, 388, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 427, 428, 429], "rule": [87, 90, 255, 273, 308, 394, 471, 515], "run": [16, 82, 83, 84, 88, 92, 100, 102, 103, 107, 116, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 136, 137, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 195, 198, 205, 317, 318, 342, 361, 367, 368, 369, 375, 376, 378, 381, 383, 384, 385, 388, 390, 392, 396, 397, 398, 399, 404, 410, 411, 414, 415, 426, 428, 429, 433, 437, 438, 439, 440, 445, 446, 447, 448, 450, 451, 452, 454, 458, 459, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 488, 489, 499, 500, 501, 503, 508, 510, 512, 513, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "run_fit": [15, 443, 447, 487], "run_id": [479, 489], "run_multiprocess": 503, "runner": [16, 333, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 529, 535, 538, 551, 557, 558], "runtim": [377, 395], "runtimewarn": [444, 454, 481, 551], "rvwyj5xf": 474, "rx": 439, "rxj": 439, "rxj1713_2016_250gev": 527, "r\u00e9gi": [374, 377, 378, 382, 383, 385, 387, 389, 390, 391, 392, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "r\u00e9my": [386, 419, 421, 422, 430], "s0167947313003204": 138, "s180": 286, "s2": 266, "s3": 266, "s_0": 503, "s_1": 503, "safari": [87, 90], "safe": [98, 100, 101, 104, 108, 109, 145, 146, 152, 157, 160, 165, 173, 368, 380, 382, 394, 413, 415, 416, 430, 431, 432, 433, 439, 442, 467, 472, 488, 499, 561], "safe_mask": [16, 101, 108, 443, 447, 448, 450, 487], "safe_mask_mak": [163, 439, 463, 470, 510, 512, 513], "safe_mask_mask": [442, 444, 452, 461, 470], "safemask": 480, "safemask_mak": 480, "safemaskconfig": 16, "safemaskmak": [163, 165, 389, 413, 414, 419, 421, 422, 434, 439, 442, 444, 452, 458, 461, 463, 470, 472, 480, 487, 488, 510, 511, 512, 513], "safeti": 394, "sagittariu": [33, 38], "saha": 427, "sai": [74, 373, 387, 563], "said": [368, 373, 375, 480, 481, 563], "sake": [454, 468], "saldana": [220, 221, 433, 438, 529], "saldana21": 529, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 90, 94, 99, 101, 104, 105, 108, 109, 120, 136, 137, 148, 149, 155, 156, 157, 158, 160, 161, 163, 184, 185, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 271, 280, 286, 361, 368, 371, 376, 378, 380, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 400, 401, 411, 412, 416, 419, 433, 440, 443, 444, 445, 450, 451, 454, 458, 460, 463, 466, 467, 471, 472, 473, 474, 475, 476, 479, 480, 483, 487, 499, 500, 501, 507, 515, 516, 563], "sampl": [47, 92, 102, 107, 131, 146, 148, 154, 156, 157, 158, 160, 187, 188, 190, 196, 198, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 278, 280, 310, 319, 324, 325, 326, 327, 372, 380, 382, 383, 386, 388, 400, 407, 409, 411, 412, 415, 421, 428, 430, 433, 434, 436, 444, 457, 459, 467, 468, 483, 499, 500, 503, 508, 511, 515], "sample_axi": 319, "sample_background": [102, 107, 413], "sample_coord": [146, 157, 160, 187, 188, 190, 196, 199, 200, 413, 415, 430], "sample_edisp": [102, 107], "sample_powerlaw": 387, "sample_psf": [102, 107], "sample_sourc": [102, 107], "sample_spher": [423, 567], "sample_tim": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 419, 430], "sampler": [102, 319, 377, 381, 415, 419, 454], "sampler_kwarg": 92, "saniti": 427, "satisfi": [140, 164, 186, 187, 188, 297, 473, 503], "save": [15, 19, 20, 26, 83, 99, 131, 202, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 368, 376, 384, 392, 396, 438, 450, 451, 454, 468, 472, 473, 480, 500], "savefig": [346, 404], "savez": 202, "saw": 405, "sbpl": [256, 391, 474], "sc": [87, 90], "scalar": [87, 90, 155, 186, 187, 188, 190, 196, 199, 200, 297, 387, 421, 432, 434, 471, 515], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 95, 99, 103, 104, 109, 116, 122, 124, 125, 128, 148, 164, 192, 196, 197, 198, 200, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 267, 268, 275, 278, 296, 309, 310, 311, 327, 349, 350, 351, 361, 369, 377, 382, 383, 386, 391, 414, 419, 420, 428, 431, 432, 433, 443, 446, 455, 456, 459, 460, 461, 462, 465, 466, 469, 470, 471, 474, 475, 476, 478, 487, 489, 491, 529, 550, 551, 552, 553, 554, 555, 556, 557, 558], "scale10": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 396, 539], "scale_method": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 396, 539], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 465], "scaled_featur": 296, "scaled_features_irf": [295, 296, 475], "scaledregulargridinterpol": [68, 220, 414, 429], "scalespectralmodel": [124, 125, 128, 250, 391, 474], "scan": [19, 20, 94, 121, 123, 124, 125, 128, 129, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 383, 392, 419, 456, 461, 476, 501, 503], "scan_max": [19, 20, 124, 128, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 438, 461, 468], "scan_min": [19, 20, 124, 128, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 438, 468], "scan_n_sigma": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 468], "scan_n_valu": [19, 20, 124, 128, 129, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 438, 468, 476], "scan_prior": 476, "scan_valu": [19, 20, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 456, 468], "scargl": [383, 427, 459], "scatter": [218, 240, 389, 446, 452, 520, 521], "scenario": [87, 90, 373, 380, 390, 400, 471, 474, 492, 564], "scengin": [87, 90], "schedul": 377, "schema": [15, 16, 84, 103, 122, 384, 387], "schema_gener": [16, 84, 103, 122], "schema_json": [16, 84, 103, 122], "scheme": [16, 84, 100, 103, 105, 106, 122, 186, 187, 188, 197, 232, 368, 374, 378, 380, 383, 390, 391, 392, 393, 395, 412, 419, 430, 434, 455, 469, 471, 474, 503, 508, 514, 515, 517], "school": 394, "scienc": [138, 187, 188, 190, 199, 200, 375, 377, 381, 384, 385, 388, 394, 405, 427, 428, 445, 451, 462, 471, 474, 475, 478, 479, 483, 491, 503, 537, 562, 563], "sciencedirect": 138, "scientif": [369, 375, 391, 394, 401], "scikit": [136, 368, 382, 385, 388, 428, 472], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 200, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 295, 309, 348, 361, 367, 368, 371, 377, 382, 385, 386, 388, 394, 405, 409, 410, 411, 412, 424, 425, 426, 429, 431, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 560, 565], "scipy_mvn": 203, "scipy_opt": 468, "scitool": 542, "scope": [381, 382, 383, 384, 387, 395, 492], "scratch": [147, 368, 378, 382, 398, 450, 472], "screen": [87, 90, 471, 489], "script": [6, 87, 90, 123, 333, 334, 335, 336, 337, 369, 374, 375, 377, 379, 382, 384, 387, 388, 394, 397, 398, 408, 409, 410, 411, 419, 420, 424, 427, 428, 429, 430, 434, 436, 442, 446, 448, 450, 451, 452, 453, 454, 456, 458, 461, 462, 465, 466, 467, 468, 470, 476, 479, 484, 487, 502, 503, 563], "scriptabl": 395, "scutum": [33, 38], "sdist": 398, "seaborn": 503, "search": [87, 90, 279, 281, 333, 368, 369, 404, 427, 428, 443, 446, 452, 453, 465, 466, 475, 487, 488, 489, 491, 503, 563], "season": 388, "sebastian": 419, "sec": [54, 83, 93, 99, 128, 327], "second": [42, 58, 83, 86, 87, 88, 90, 144, 266, 327, 330, 345, 349, 352, 357, 369, 376, 378, 380, 382, 386, 392, 394, 398, 413, 432, 442, 443, 446, 448, 450, 452, 453, 454, 455, 456, 458, 461, 462, 465, 467, 468, 470, 471, 476, 478, 483, 487, 498, 564, 567], "secpl": [259, 260, 261, 391, 474], "section": [19, 87, 90, 280, 282, 288, 368, 369, 371, 373, 382, 384, 385, 387, 391, 394, 398, 416, 429, 445, 450, 454, 455, 458, 462, 466, 468, 472, 473, 474, 489, 491, 492, 503, 516, 561, 563, 567], "secur": 472, "sed": [117, 120, 121, 122, 123, 125, 131, 196, 220, 367, 384, 386, 392, 400, 407, 426, 440, 456, 466, 467, 487, 489, 501], "sed_fit": [436, 440, 441], "sed_fitting_gammacat_fermi": 388, "sed_typ": [19, 20, 26, 121, 122, 123, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 419, 437, 438, 440, 442, 443, 444, 451, 452, 456, 460, 462, 466, 489, 501, 503, 539], "sed_type_init": [71, 74, 75, 78, 121, 122, 123], "sed_type_plot_default": [121, 123], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 497], "sedov_taylor_end": [52, 53, 497], "seds_20230803": 64, "sedtypeenum": 122, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 90, 94, 98, 99, 100, 101, 104, 108, 109, 116, 118, 120, 123, 124, 125, 128, 130, 131, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 163, 170, 172, 180, 185, 186, 188, 190, 192, 193, 195, 198, 200, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 272, 282, 288, 290, 291, 294, 297, 305, 321, 336, 358, 359, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 388, 389, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 427, 428, 429, 430, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 483, 487, 488, 489, 491, 499, 500, 503, 513, 514, 516, 542, 546, 547, 560, 562, 563, 564, 565, 567], "seed": [33, 42, 45, 46, 47, 101, 102, 104, 107, 108, 109, 146, 157, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 241, 248, 254, 266, 269, 280, 319, 320, 321, 324, 325, 326, 327, 368, 427, 454, 539], "seed_photon_field": [241, 539], "seem": [368, 375, 376, 379, 385, 389, 491], "seen": [368, 382, 389, 439, 446, 451, 461, 471, 474, 479], "select": [16, 82, 83, 86, 87, 88, 89, 90, 91, 95, 99, 101, 104, 108, 109, 167, 174, 187, 188, 189, 190, 192, 197, 199, 200, 209, 211, 218, 240, 255, 265, 277, 364, 365, 378, 380, 381, 382, 383, 384, 388, 390, 392, 395, 400, 402, 408, 411, 419, 423, 437, 442, 444, 445, 447, 448, 450, 451, 453, 454, 455, 458, 462, 463, 467, 468, 470, 471, 472, 475, 478, 480, 481, 483, 489, 501, 503, 507, 508, 512, 561, 563], "select_energi": [83, 500], "select_from_geom": [218, 240], "select_map_mask": 409, "select_mask": [83, 218, 240, 419, 473], "select_nested_model": 433, "select_obs_id": [90, 452], "select_observ": [90, 95, 384, 461, 475, 488, 503], "select_offset": [83, 454, 481, 500], "select_paramet": [83, 89, 463, 500], "select_phas": 378, "select_rad_max": 83, "select_rang": 90, "select_region": [83, 89, 218, 240, 382, 411, 419, 454, 455, 463, 473, 489, 500], "select_row_subset": 83, "select_sky_box": 382, "select_sky_circl": [90, 382], "select_tim": [83, 86, 88, 91, 99, 378, 392, 413, 455, 461, 500], "select_time_rang": 90, "selected_energi": 500, "selected_ev": 83, "selected_id": 500, "selected_obs_t": [90, 475, 488], "selected_offset": 500, "selected_region": 500, "selected_tim": 500, "selection_al": [116, 131], "selection_mask": [218, 240, 473], "selection_opt": [16, 116, 118, 119, 120, 124, 125, 127, 128, 129, 130, 131, 419, 438, 442, 443, 447, 448, 450, 451, 452, 456, 460, 461, 462, 463, 472, 480, 487], "selection_vari": 90, "selectionconfig": 16, "selectionslid": [450, 458, 471, 487, 488], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 103, 121, 122, 123, 195, 196, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 255, 256, 258, 259, 260, 261, 264, 268, 368, 369, 379, 380, 382, 385, 391, 392, 395, 396, 415, 471, 474], "semant": [382, 393], "semi": 219, "semiaxi": [219, 227, 230, 520, 521, 522], "semilogi": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 437, 455], "semimajor": 466, "semiminor": 466, "semver": 393, "send": 397, "sens": [368, 375, 378, 382, 384, 387, 388, 389, 448], "sensibl": 475, "sensit": [117, 120, 121, 122, 123, 130, 271, 381, 388, 414, 416, 426, 427, 433, 434, 436, 441, 458, 478, 483, 491, 499, 508, 511, 515], "sensitivity_estim": 437, "sensitivity_t": 437, "sensitivityestim": [117, 408, 414, 437], "sent": 373, "sentenc": [373, 388, 394], "sep": [195, 377, 385, 391, 406, 474], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 90, 186, 195, 198, 293, 357, 368, 369, 374, 375, 376, 377, 380, 381, 382, 383, 384, 387, 388, 389, 390, 415, 419, 425, 427, 428, 432, 433, 445, 448, 450, 452, 458, 462, 466, 473, 474, 475, 492, 500, 508, 509, 520, 521, 525, 526, 539, 562], "septemb": [377, 385, 387, 388, 393], "sequenc": [87, 90, 91, 99, 101, 108, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 209, 218, 240, 297, 398], "sequenti": [374, 442, 488], "seri": [87, 90, 123, 280, 285, 327, 377, 382, 383, 419, 459], "serial": [16, 84, 87, 90, 98, 99, 100, 101, 103, 104, 108, 109, 122, 374, 379, 383, 384, 389, 392, 412, 415, 419, 421, 428, 430, 431, 432, 433, 434, 471, 474, 476, 491], "serialis": [20, 101, 104, 108, 109, 212, 213, 216, 218, 220, 222, 223, 224, 226, 228, 232, 234, 235, 237, 239, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 380, 382, 384, 387, 389, 390, 391, 411, 413, 415, 419, 424, 427, 429, 430, 432, 433, 434, 476, 487, 503, 516, 558], "serializ": [16, 84, 103, 122], "serialize_as_ani": [16, 84, 103, 122], "serialize_method": [87, 90], "serializiaton": 380, "serilis": [26, 214, 215, 217, 219, 225, 227, 229, 230, 231, 233, 242, 244, 248, 252, 253, 254, 255, 257, 264, 267, 269], "sersic": 391, "sersic2d": 391, "sersicspatialmodel": 391, "serv": [87, 90, 368, 373, 380, 384, 392, 398, 421, 465, 507], "server": [390, 400, 402, 483], "servic": 427, "session": [384, 394, 502], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 138, 144, 146, 157, 160, 163, 164, 167, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 266, 267, 268, 277, 317, 319, 368, 369, 374, 377, 378, 380, 381, 383, 384, 385, 386, 388, 392, 393, 394, 395, 396, 398, 400, 402, 415, 421, 423, 425, 427, 430, 433, 434, 437, 438, 439, 442, 444, 445, 446, 447, 450, 452, 453, 454, 455, 456, 460, 461, 463, 466, 467, 468, 470, 472, 474, 475, 476, 478, 480, 481, 483, 488, 491, 499, 500, 503, 512, 514, 515, 516, 539, 560, 563, 566, 567], "set_by_coord": [187, 188, 190, 196, 199, 200, 471, 515], "set_by_idx": [187, 188, 190, 196, 199, 200, 471, 515], "set_by_pix": [187, 188, 190, 196, 199, 200, 515], "set_log": 16, "set_model": [15, 390, 443, 447, 460, 487], "set_models_paramet": 390, "set_parameter_factor": [209, 211], "set_parameters_bound": [218, 240], "set_prior": [240, 396], "set_prop_cycl": 437, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 203, "set_titl": [438, 439, 442, 446, 448, 452, 463, 465, 468, 469, 470, 473, 512, 522, 526, 529], "set_unit": [440, 503], "set_xlabel": [437, 438, 439, 442, 445, 463, 468, 475, 476], "set_xlim": [440, 442, 443, 451, 463, 505, 529], "set_xscal": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "set_xtick": [522, 526], "set_ylabel": [437, 438, 439, 442, 456, 463, 465, 468, 475, 529], "set_ylim": [437, 440, 442, 443, 444, 460, 463, 505, 529], "set_yscal": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 456, 465, 505], "set_ytick": [522, 526], "setdefault": 194, "seterr": 368, "setlevel": 452, "setter": [369, 396, 413, 419, 467], "settl": [394, 567], "setup": [13, 370, 371, 372, 375, 380, 381, 385, 388, 396, 425, 429, 483, 563], "setuptool": [420, 563], "sever": [87, 90, 169, 373, 374, 375, 382, 383, 384, 387, 392, 395, 413, 414, 415, 419, 422, 431, 432, 433, 445, 451, 466, 478, 479, 480, 503, 563, 565], "seyfert": 286, "sf": [293, 565], "sgr": 489, "shade": [188, 196, 200, 468, 561], "shall": 371, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 100, 101, 104, 108, 109, 110, 114, 120, 121, 125, 126, 131, 135, 136, 137, 142, 144, 147, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 203, 230, 278, 297, 310, 326, 379, 382, 386, 417, 432, 440, 442, 444, 447, 452, 455, 456, 459, 461, 466, 467, 469, 470, 471, 472, 474, 478, 479, 489, 501, 515, 516, 517, 522, 526], "shape_ax": [186, 198], "share": [187, 188, 190, 194, 196, 199, 200, 368, 373, 380, 383, 387, 390, 401, 419, 421, 433, 450, 451, 472, 473, 503, 563], "sharp": [231, 358, 359, 520], "she": [378, 383], "shear": 382, "sheet": [403, 503], "shell": [52, 53, 80, 252, 253, 379, 384, 391, 400, 402, 436, 474, 517, 526, 528, 563], "shell2": [252, 436, 474, 517, 528], "shell2d": 52, "shell2spatialmodel": [249, 253, 474, 526], "shellspatialmodel": [80, 249, 252, 391, 419, 474, 525], "sherpa": [106, 109, 144, 191, 192, 195, 196, 205, 282, 288, 367, 368, 377, 385, 386, 388, 389, 399, 400, 402, 409, 423, 424, 425, 426, 428, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 516, 537, 564], "sherpa_opt": 468, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 267, 404], "shim": 375, "shini": 353, "ship": [375, 376, 385, 408, 426, 445, 458, 463, 474, 503], "shock": [50, 52, 53, 496], "short": [368, 369, 372, 373, 377, 382, 385, 388, 391, 394, 416, 459, 461, 479, 503, 504, 562, 565, 568], "short_observ": 461, "shortcut": [82, 404, 421], "shorten": 419, "shorter": [286, 368, 369, 382, 388, 393, 416, 445, 461, 474, 563], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 101, 103, 104, 107, 108, 109, 111, 113, 115, 121, 122, 123, 124, 128, 132, 133, 134, 139, 145, 146, 149, 155, 157, 160, 172, 177, 178, 183, 185, 186, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 297, 343, 357, 358, 359, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 393, 394, 395, 397, 398, 400, 402, 403, 404, 409, 411, 433, 444, 450, 453, 454, 455, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 480, 499, 501, 503, 508, 510, 515, 563, 564, 566, 567], "shoulder": 270, "shouldn": [83, 368, 371], "show": [11, 82, 87, 90, 125, 126, 127, 148, 167, 232, 365, 368, 369, 371, 380, 382, 383, 387, 388, 396, 398, 408, 409, 413, 421, 426, 427, 428, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 483, 487, 488, 489, 495, 496, 497, 503, 505, 506, 507, 509, 510, 512, 514, 520, 529, 561, 563, 565, 568], "show_dtyp": [87, 90], "show_in_brows": [87, 90, 452], "show_in_notebook": [87, 90], "show_nam": [87, 90], "show_progress_bar": 503, "show_row_index": [87, 90], "show_unit": [87, 90], "showcas": 476, "shower": [423, 478, 508], "shown": [19, 20, 26, 83, 155, 195, 196, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 363, 368, 375, 385, 386, 387, 395, 396, 398, 413, 415, 439, 442, 450, 452, 453, 454, 455, 459, 462, 463, 470, 473, 474, 475, 476, 478, 488, 500], "showwarn": 368, "si": [83, 186, 195, 198, 218, 240, 270, 516], "side": [198, 200, 279, 281, 368, 382], "sider": 567, "sidereal_tim": 369, "siejkowski": 428, "sig": [361, 564, 565, 566], "sight": 491, "sigma": [19, 20, 30, 32, 48, 49, 120, 121, 122, 123, 124, 128, 129, 131, 136, 137, 144, 145, 149, 155, 156, 157, 160, 203, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 277, 279, 281, 287, 391, 396, 438, 452, 453, 458, 459, 460, 468, 472, 474, 476, 487, 501, 507, 521, 536, 552, 565], "sigma1": 31, "sigma2": 31, "sigma_": [203, 521], "sigma_1": [31, 49, 148, 469], "sigma_10tev": [391, 474], "sigma_1tev": [391, 474], "sigma_2": [31, 49, 148, 469], "sigma_3": [148, 469], "sigma_err": 453, "sigma_gauss": 230, "sigma_laplac": 230, "sigma_m": 521, "sigma_nod": 474, "sigma_to_t": 565, "sigmav": 491, "sign": [208, 210, 279, 281, 371, 394, 415, 430, 501, 565], "signal": [83, 101, 104, 107, 108, 109, 172, 200, 254, 279, 281, 294, 392, 437, 442, 443, 448, 451, 460, 472, 487, 491, 506, 510, 512, 562, 564, 565, 566], "signif_avg": 489, "signific": [77, 116, 120, 121, 122, 123, 130, 131, 138, 139, 277, 279, 281, 285, 358, 359, 366, 373, 374, 375, 376, 383, 384, 388, 389, 392, 394, 415, 416, 424, 427, 428, 433, 434, 436, 437, 442, 443, 449, 450, 451, 452, 453, 459, 460, 463, 466, 468, 480, 483, 487, 489, 499, 501, 503, 508, 515, 561, 562, 563], "significance_lima": 415, "significance_map": [448, 450], "significance_map_off": 448, "significance_mask": 472, "significance_mask_inv": 472, "significancemapestim": 415, "significantli": [419, 438, 454, 478, 562], "signoff": 371, "silent": 430, "silicon": [400, 402], "silvia": 411, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 359, 368, 371, 380, 381, 382, 383, 384, 387, 388, 389, 392, 419, 433, 444, 459, 471, 475, 476, 489, 499, 507, 563], "similarli": [374, 376, 392, 395, 419, 466, 468, 469, 471, 472, 474, 516], "simlat": 280, "simon": [432, 433, 434], "simpifi": 377, "simpl": [50, 52, 136, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 270, 368, 369, 380, 381, 382, 383, 384, 387, 392, 395, 396, 409, 419, 423, 427, 428, 433, 437, 439, 440, 442, 443, 444, 445, 447, 450, 459, 463, 468, 471, 472, 475, 481, 487, 488, 489, 493, 503, 561, 562, 563], "simple_norm": 200, "simple_rebin_lc": 383, "simplefilt": 503, "simpler": [175, 376, 381, 382, 390], "simplest": [437, 442, 459], "simplex": [205, 468], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 90, 164, 205, 209, 211, 368, 382, 383, 392, 401, 430, 433, 437, 438, 439, 452, 467, 472, 473, 474, 489, 516, 563, 565], "simplic": [451, 454, 461, 468, 474, 476, 479], "simplif": [379, 391, 430], "simplifi": [131, 194, 375, 377, 379, 386, 392, 409, 412, 413, 414, 416, 419, 423, 430, 438, 440, 446, 508, 566], "simu": [458, 462, 476], "simul": [45, 82, 83, 88, 92, 101, 104, 107, 108, 109, 111, 146, 157, 160, 280, 327, 378, 381, 384, 388, 395, 396, 400, 407, 411, 413, 415, 421, 424, 426, 427, 428, 433, 434, 436, 441, 447, 450, 452, 457, 463, 464, 473, 476, 478, 483, 493, 499, 501, 508, 511, 560, 561], "simulate_3d": [388, 428, 436, 457, 458], "simulate_dataset": [409, 413, 414], "simulate_observ": 92, "simulated_d": 444, "simulated_data": 92, "simulated_model": 444, "simultan": [396, 462, 467, 474, 476, 499], "sin": [520, 521, 522, 556], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 83, 87, 88, 90, 124, 125, 128, 188, 198, 208, 210, 343, 368, 369, 374, 378, 382, 384, 385, 386, 387, 388, 392, 394, 395, 396, 398, 419, 429, 430, 431, 432, 433, 434, 438, 444, 448, 450, 462, 467, 473, 474, 476, 478, 480, 535, 538, 564, 567], "sine": [254, 379, 436, 517, 559], "sine_model": 556, "sinetemporalmodel": [262, 474, 556], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 90, 92, 94, 120, 124, 125, 128, 131, 145, 146, 157, 159, 160, 163, 167, 169, 174, 177, 178, 183, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 218, 240, 368, 374, 375, 378, 380, 381, 382, 383, 384, 385, 389, 390, 395, 396, 400, 407, 409, 414, 415, 427, 433, 434, 437, 442, 444, 446, 447, 448, 460, 462, 466, 467, 470, 471, 473, 476, 480, 481, 487, 489, 499, 501, 513, 515, 516, 560, 562], "singleobscubemak": 374, "singleobsimagemak": 374, "singleton": 321, "sinha": [380, 383, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 427, 428, 429, 430, 431, 432, 433, 434], "sink": 385, "sinu": [254, 474], "sinusoid": [254, 556], "sipocz": [385, 409, 411, 413, 415, 424, 425, 426, 427, 428, 429], "sip\u0151cz": 430, "sit": 371, "site": [333, 398, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 535, 538, 551, 563], "situat": [382, 383, 385, 508], "six": [387, 393], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 90, 101, 102, 104, 107, 108, 109, 111, 112, 113, 115, 126, 131, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 162, 163, 169, 170, 171, 174, 175, 176, 184, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 212, 213, 215, 216, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 319, 320, 324, 325, 326, 327, 356, 368, 376, 379, 381, 382, 400, 402, 432, 434, 437, 444, 448, 450, 454, 461, 463, 466, 470, 471, 472, 474, 478, 479, 480, 481, 489, 499, 514, 520, 521, 567], "skeleton": 384, "sketch": 384, "skill": [371, 404], "skimag": 428, "skip": [82, 155, 356, 369, 371, 380, 382, 388, 426, 473], "skip_miss": [82, 427], "sklearn": 368, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 95, 101, 104, 107, 108, 109, 116, 136, 145, 146, 157, 160, 180, 186, 187, 188, 190, 195, 196, 198, 199, 200, 218, 240, 255, 267, 270, 272, 299, 303, 304, 328, 330, 332, 355, 367, 368, 369, 381, 387, 400, 409, 411, 425, 426, 428, 438, 442, 443, 445, 446, 448, 458, 462, 463, 466, 471, 474, 478, 479, 483, 485, 487, 488, 489, 491, 498, 499, 500, 503, 508, 509, 512, 514, 516, 520, 521, 525, 526, 527, 561, 562], "sky_circl": [90, 95, 461, 475, 488], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 113, 115, 383, 438, 460, 461, 466, 473, 474, 488, 531], "sky_model_pntpwl": 454, "sky_reg": 465, "sky_reg_rec": 465, "sky_region": 89, "skycood": 379, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 90, 93, 95, 101, 104, 108, 109, 121, 123, 125, 127, 145, 146, 152, 157, 160, 170, 171, 173, 175, 177, 178, 180, 181, 183, 184, 186, 187, 188, 190, 193, 195, 196, 198, 199, 200, 201, 214, 215, 218, 219, 227, 230, 240, 242, 244, 252, 253, 255, 257, 263, 265, 267, 295, 296, 329, 330, 344, 364, 369, 379, 382, 392, 395, 437, 439, 442, 444, 445, 448, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 488, 489, 503, 507, 512, 514, 516, 524], "skycoord_from_t": 382, "skycoord_to_pixel_scale_angl": 382, "skycoordconfig": 16, "skycub": [374, 387, 425, 426, 427, 428], "skydiffusecub": [379, 391, 410, 415, 416, 428], "skydiffusemap": [379, 410], "skydir": [16, 83, 101, 104, 108, 109, 110, 114, 146, 157, 167, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 442, 443, 444, 447, 448, 450, 452, 453, 454, 455, 458, 460, 463, 465, 467, 469, 470, 471, 472, 474, 479, 480, 487, 488, 510, 512, 513, 514, 516, 521, 522, 523, 524], "skydirfunct": 491, "skydisk": 410, "skydiskelong": 379, "skyellips": [409, 410, 411, 412], "skygaussian": 409, "skygaussianelong": 379, "skyimag": [374, 387, 425, 426, 427, 428], "skyimagelist": 425, "skymap": [187, 188, 190, 196, 199, 200, 382, 424, 425, 455], "skymap_band": [455, 558], "skymap_region": 455, "skymask": 426, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 100, 101, 104, 108, 109, 113, 115, 121, 123, 129, 131, 164, 218, 236, 240, 272, 277, 379, 380, 381, 383, 389, 391, 392, 409, 413, 414, 415, 419, 428, 434, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 458, 460, 461, 462, 463, 466, 467, 468, 473, 476, 479, 487, 488, 498, 499, 501, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560], "skypointsourc": 412, "skyregion": [99, 101, 104, 108, 109, 125, 145, 146, 152, 157, 160, 170, 171, 175, 190, 195, 196, 200, 218, 240, 328, 331, 382, 439, 454, 456, 472, 474, 507, 512, 516], "skyspatialmodel": [379, 428], "slack": [370, 371, 375, 391, 397, 403, 408, 409, 563], "slew": 94, "slice": [83, 87, 90, 99, 101, 104, 108, 109, 118, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 265, 267, 289, 374, 416, 453, 456, 467, 478, 515], "slice_by_coord": [121, 123, 434], "slice_by_energi": [99, 101, 104, 108, 109, 121, 123, 265, 416, 467], "slice_by_idx": [101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 416, 428, 430, 456, 471, 479], "slice_by_tim": [121, 123], "sliced_ax": 191, "sliced_geom": [185, 186, 195, 198], "slide": [377, 446, 466], "slider": 471, "sliderstyl": [450, 458, 471, 487, 488], "slightli": [116, 192], "slope": [27, 410], "slow": [87, 90, 205, 375, 384, 443, 468, 487, 488], "slower": [87, 90, 188, 368, 376, 386], "slowest": 398, "small": [359, 368, 374, 376, 382, 384, 385, 388, 390, 395, 398, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 460, 461, 471, 476, 478, 479, 480, 481, 521, 525, 526, 562, 563], "smaller": [27, 146, 157, 160, 175, 186, 187, 188, 190, 196, 199, 200, 361, 371, 409, 428, 454, 459, 461, 468, 471, 476, 521], "smallest": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 268, 446], "smooth": [101, 104, 108, 109, 116, 126, 127, 136, 188, 200, 219, 256, 360, 363, 419, 424, 425, 426, 428, 429, 436, 448, 450, 452, 456, 458, 463, 467, 470, 471, 473, 479, 487, 488, 489, 517, 520, 549], "smooth_kernel": [101, 104], "smooth_radiu": [101, 104], "smoothbrokenpowerlawspectralmodel": [212, 250, 391, 414, 415, 474, 544], "sn": [45, 50, 52, 53], "sn_rate": [45, 493], "snippet": [369, 388, 503], "snr": [44, 50, 53, 67, 479, 496, 497], "snr_model": 497, "snrcat": [423, 466], "snrtruelovemcke": [50, 496, 497], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 90, 94, 100, 104, 109, 120, 124, 126, 128, 129, 131, 140, 184, 187, 188, 190, 192, 196, 199, 200, 205, 208, 210, 230, 267, 277, 343, 351, 358, 359, 368, 369, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 399, 400, 402, 404, 409, 411, 419, 429, 431, 432, 439, 442, 444, 446, 447, 452, 453, 454, 458, 460, 465, 466, 468, 471, 472, 474, 476, 478, 479, 480, 483, 488, 503, 510, 512, 516, 522, 526, 563, 564, 565, 566], "social": 394, "soft": 286, "softwar": [187, 188, 190, 199, 200, 382, 383, 385, 394, 395, 398, 471], "solar": 52, "sole": [378, 394], "solid": [185, 186, 195, 198, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267, 270, 384, 407, 409, 410, 411, 428, 448, 470, 471, 478, 506, 512, 562], "solid_angl": [185, 186, 195, 198, 471, 516], "solut": [19, 20, 26, 52, 144, 212, 213, 216, 220, 222, 223, 224, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 266, 268, 369, 371, 373, 375, 376, 381, 382, 384, 385, 386, 388, 390, 392, 396, 401, 499, 501, 503, 566], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 371, 376, 378, 379, 380, 381, 421, 503], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 82, 84, 87, 90, 103, 122, 173, 194, 297, 305, 371, 373, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 398, 400, 401, 402, 403, 404, 405, 407, 409, 411, 419, 420, 422, 424, 426, 427, 428, 433, 437, 439, 440, 442, 444, 446, 447, 448, 451, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 473, 474, 476, 478, 479, 488, 489, 491, 492, 499, 500, 503, 508, 513, 515, 562, 563, 564, 565, 567], "some_class": 368, "some_map": 155, "some_map_convolv": 155, "somehow": [376, 382, 387, 491], "someon": [371, 373, 388], "someth": [87, 90, 368, 369, 370, 371, 373, 376, 382, 385, 386, 388, 398, 400, 402, 445, 466, 516, 563], "sometim": [19, 20, 83, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 346, 368, 371, 375, 382, 388, 398, 400, 468, 562, 567], "somewhat": [385, 478], "somewher": [371, 385, 398], "soon": [371, 382, 398], "sort": [82, 83, 87, 90, 100, 136, 337, 368, 385, 410, 489], "sort_kei": 337, "sortedarrai": [87, 90], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 373, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 398, 400, 405, 407, 409, 413, 414, 419, 420, 425, 426, 427, 428, 433, 434, 436, 438, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 479, 480, 481, 483, 485, 487, 488, 491, 492, 497, 499, 500, 501, 503, 508, 511, 512, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565], "source1": 474, "source2": 474, "source_1": [379, 384], "source_2": 379, "source_42": 384, "source_fermi_3fgl": 440, "source_fermi_3fhl": 440, "source_gammacat": 440, "source_irf_model": 379, "source_librari": 478, "source_model": 542, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 466, 489], "source_name_alia": 56, "source_name_kei": 56, "source_po": [448, 452, 470], "source_population_model": [388, 413], "source_posit": [437, 453, 475], "sourcebackground": 379, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 382, 419, 466, 472, 489, 498], "sourcecatalog1lhaaso": [55, 70, 466], "sourcecatalog2fhl": [55, 71, 466, 498], "sourcecatalog2hwc": [55, 72, 466, 498], "sourcecatalog2pc": [55, 466], "sourcecatalog3fgl": [55, 74, 440, 466, 498], "sourcecatalog3fhl": [55, 75, 440, 466, 473, 489], "sourcecatalog3hwc": [55, 76, 466, 498], "sourcecatalog3pc": [55, 466], "sourcecatalog4fgl": [55, 78, 421, 438, 466, 498], "sourcecataloggammacat": [55, 79, 440, 466], "sourcecataloghgp": [55, 80, 81, 466, 498], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 466, 498], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 408, 466], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 379, "sources_flux_map": 446, "sourcetempl": 379, "south": [454, 455], "south_z20_50h": [82, 142, 146, 147, 148, 157, 437, 445, 458, 462, 469, 478], "south_z40_50h": 478, "southern": 478, "space": [87, 90, 101, 104, 108, 109, 197, 200, 263, 264, 280, 308, 326, 367, 368, 378, 384, 390, 463, 467, 468, 471, 515, 539, 548], "span": 475, "spars": [186, 187, 188, 190, 195, 198, 199, 200, 410, 419, 427, 455, 471], "sparsif": 392, "sparsifi": [187, 188, 190, 199, 200], "spatail": 131, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 101, 104, 108, 109, 111, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 169, 185, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 209, 211, 214, 215, 218, 219, 226, 227, 230, 240, 242, 244, 249, 252, 253, 255, 257, 263, 265, 267, 277, 361, 363, 368, 374, 377, 380, 381, 382, 384, 386, 387, 392, 400, 408, 409, 411, 412, 413, 414, 416, 419, 427, 428, 430, 433, 434, 436, 438, 440, 443, 445, 447, 450, 451, 453, 454, 455, 456, 458, 462, 463, 466, 467, 470, 473, 477, 479, 483, 487, 491, 492, 499, 501, 503, 504, 514, 515, 528, 560, 561, 562], "spatial_bin_s": 111, "spatial_bin_size_min": 111, "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 115, 131, 219, 226, 255, 265, 277, 383, 413, 438, 446, 450, 452, 453, 454, 455, 458, 460, 461, 466, 467, 473, 474, 479, 488, 519, 520, 521, 522, 523, 524, 525, 526, 527], "spatial_model_point": 454, "spatial_model_registri": 474, "spatial_par": 391, "spatial_typ": 391, "spatial_width": 111, "spatial_width_max": 111, "spatialbackground": 379, "spatialcircleconfig": 16, "spatialconst": 379, "spatialgaussian": 379, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 214, 215, 219, 226, 227, 230, 242, 244, 252, 253, 255, 263, 265, 267, 379, 391, 413, 428, 432, 466, 474, 488, 491, 498, 517, 560], "spatialtempl": 379, "spatiamodel": 155, "speak": 468, "spec": [80, 109, 368, 382, 424, 450, 455, 466, 478, 488], "spec_model_tru": 463, "special": [87, 90, 230, 368, 378, 380, 382, 383, 391, 394, 395, 408, 447, 454, 466, 467, 473, 474], "specialis": [382, 388], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 85, 86, 87, 90, 93, 101, 104, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 163, 177, 178, 183, 187, 188, 189, 190, 192, 196, 197, 198, 199, 200, 205, 232, 265, 277, 357, 367, 368, 369, 371, 373, 378, 380, 382, 383, 384, 385, 386, 387, 389, 392, 393, 394, 395, 398, 400, 401, 413, 416, 419, 421, 430, 431, 433, 438, 439, 442, 444, 445, 448, 450, 451, 456, 458, 462, 463, 467, 468, 469, 471, 472, 475, 476, 481, 483, 489, 499, 500, 501, 503, 505, 506, 507, 509, 514, 515, 516, 567], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 95, 100, 101, 103, 104, 108, 109, 116, 118, 121, 122, 123, 124, 126, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 173, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 218, 232, 240, 277, 297, 299, 303, 308, 355, 378, 385, 390, 393, 401, 412, 415, 419, 438, 444, 447, 450, 453, 454, 456, 458, 467, 468, 469, 470, 471, 473, 474, 478, 488, 499, 501, 514], "spectra": [26, 108, 109, 124, 129, 140, 250, 270, 277, 374, 377, 379, 381, 383, 387, 391, 407, 411, 424, 428, 438, 439, 444, 445, 451, 455, 460, 462, 463, 467, 468, 470, 474, 476, 491, 499, 501, 503, 562], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 100, 101, 104, 108, 109, 116, 120, 121, 123, 124, 125, 128, 130, 131, 135, 155, 157, 160, 164, 209, 211, 212, 213, 216, 218, 220, 222, 223, 224, 226, 228, 232, 234, 235, 237, 238, 240, 241, 243, 245, 246, 247, 250, 251, 255, 256, 258, 259, 260, 261, 264, 265, 266, 268, 270, 271, 286, 324, 374, 377, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 392, 400, 408, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 441, 445, 447, 450, 453, 454, 455, 456, 458, 460, 461, 462, 463, 466, 467, 468, 470, 472, 473, 476, 477, 478, 479, 487, 488, 491, 492, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564], "spectral_analysi": [436, 441, 442], "spectral_analysis_hli": [436, 441, 443], "spectral_analysis_rad_max": [436, 441, 444], "spectral_cub": 420, "spectral_index": [19, 20, 26, 52, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268], "spectral_index_error": [19, 20, 26, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 433], "spectral_irf_model": 379, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 100, 108, 109, 113, 115, 120, 129, 131, 135, 164, 218, 226, 238, 240, 255, 265, 277, 383, 386, 390, 391, 392, 396, 416, 438, 439, 440, 442, 444, 445, 446, 450, 451, 452, 453, 454, 455, 458, 460, 461, 462, 463, 466, 467, 468, 473, 474, 476, 479, 488, 489, 501, 510, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "spectral_model1": 462, "spectral_model2": 462, "spectral_model_pwl": 454, "spectral_model_registri": 474, "spectral_par": 391, "spectral_point": 384, "spectral_typ": 391, "spectralbackground": 379, "spectralbackgroundmodel": 380, "spectralcompoundmodel": 379, "spectralconst": 379, "spectralevalu": 379, "spectralexponentialcutoffpowerlaw3fgl": 387, "spectralgaussian": [379, 411], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 100, 116, 120, 121, 123, 125, 130, 135, 155, 157, 160, 164, 212, 213, 216, 218, 220, 222, 223, 224, 226, 228, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 255, 256, 259, 260, 261, 264, 265, 268, 270, 379, 380, 383, 386, 392, 416, 419, 426, 433, 466, 474, 488, 489, 498, 517, 560], "spectralregion": 382, "spectraltempl": 379, "spectrum": [19, 20, 26, 72, 76, 97, 99, 100, 101, 104, 105, 108, 109, 116, 121, 123, 125, 128, 130, 132, 155, 157, 160, 165, 169, 173, 174, 187, 188, 190, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 271, 280, 286, 365, 374, 379, 380, 383, 384, 387, 388, 389, 400, 410, 411, 412, 413, 415, 419, 421, 424, 425, 426, 427, 428, 430, 432, 436, 437, 439, 440, 441, 443, 450, 451, 454, 455, 456, 462, 465, 466, 467, 472, 474, 478, 479, 483, 487, 489, 491, 499, 503, 508, 511, 516, 530, 533, 534, 536, 537, 541, 542, 544, 545, 546, 547, 560, 563], "spectrum_analysi": 442, "spectrum_dataset": [140, 380, 463, 467], "spectrum_dataset_1": 380, "spectrum_dataset_2": 380, "spectrum_dataset_empti": [463, 470], "spectrum_dataset_mak": [463, 470], "spectrum_dataset_on_off": 463, "spectrum_fitting_with_sherpa": 388, "spectrum_mak": 437, "spectrum_simul": [388, 436, 441, 445], "spectrumanalysisiact": [384, 412, 426], "spectrumdataset": [97, 98, 99, 101, 104, 109, 128, 130, 140, 168, 169, 173, 174, 226, 389, 410, 411, 412, 413, 414, 415, 416, 419, 422, 437, 439, 442, 444, 445, 452, 461, 462, 463, 468, 470, 476, 499, 512, 564], "spectrumdatasetmak": [165, 413, 419, 437, 439, 442, 444, 445, 452, 461, 462, 463, 470, 512], "spectrumdatasetonoff": [97, 104, 105, 106, 108, 129, 130, 140, 168, 169, 277, 365, 383, 410, 411, 412, 414, 415, 431, 432, 433, 437, 438, 439, 442, 443, 445, 451, 452, 460, 463, 467, 468, 470, 476, 501, 564], "spectrumdatasetonoffstack": 412, "spectrumdatasetsonoff": 380, "spectrumenergygroup": 427, "spectrumevalu": 415, "spectrumextract": [383, 410, 413, 426], "spectrumfit": [410, 426, 427, 428], "spectrumobserv": [380, 410, 426], "spectrumobservationlist": [410, 425], "spectrumobservationstack": 425, "spectrumonoffdataset": 383, "spectrumresult": 410, "spectrumsimul": [411, 425, 428], "spectrumstack": 427, "spectrumstat": 411, "specutil": 382, "speed": [131, 297, 371, 401, 411, 413, 421, 427, 428, 468], "spell": [373, 503], "spend": [381, 388], "spent": [375, 470], "sphere": [47, 325, 407, 409, 515, 520, 521, 524], "spherepointpick": 325, "spheric": [47, 368, 409, 515, 561], "sphericalcircleskyregion": [387, 463, 489], "sphinx": [371, 375, 388, 398, 410, 414, 421, 427, 428, 430, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "sphinx_gallery_conf": 398, "sphinx_gallery_thumbnail_numb": [369, 438, 442, 444, 446, 448, 453, 456, 469, 529], "spill": 470, "spin": [50, 51, 54, 411, 495], "spir": [409, 428], "spiral": [33, 34, 38, 45, 423], "spiralarm": [33, 38, 45, 427, 493], "spiralarm_index": [33, 34, 38], "spirit": 394, "split": [19, 20, 87, 90, 91, 113, 115, 121, 123, 187, 188, 190, 196, 199, 200, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 374, 376, 378, 380, 382, 383, 387, 389, 391, 400, 416, 434, 461, 474, 492, 568], "split_by_axi": [187, 188, 190, 196, 199, 200], "split_template_model": [113, 115], "sporad": 395, "spot": 368, "spread": [82, 88, 148, 157, 160, 368, 390, 416, 437, 446, 469, 508, 562], "spring": [378, 429], "sprint": [376, 377, 381, 384, 385, 386, 387, 389], "spuriou": 136, "sqrt": [19, 20, 30, 31, 32, 67, 100, 101, 104, 108, 109, 116, 121, 123, 126, 131, 187, 188, 190, 192, 196, 199, 200, 203, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 278, 287, 309, 310, 311, 380, 439, 442, 446, 450, 456, 458, 459, 463, 466, 468, 470, 471, 473, 479, 487, 488, 489, 501, 521, 522, 525, 526, 536, 565], "sqrt_space": [387, 413], "sqrt_t": [116, 120, 121, 123, 131, 136, 140, 279, 281, 361, 392, 404, 416, 439, 442, 443, 446, 448, 450, 452, 463, 466, 467, 472, 480, 487, 489, 501, 563, 565], "sqrt_ts_min": [140, 442], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 120, 121, 122, 123, 125, 131, 456, 460, 466, 467, 487, 489], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 101, 104, 121, 122, 144, 145, 146, 152, 157, 160, 163, 184, 198, 200, 265, 284, 383, 386, 416, 472, 476, 491, 501, 515, 563, 564, 565, 566], "squash": [146, 185, 186, 189, 191, 192, 195, 197, 198, 433, 437, 448, 467, 471], "squeez": [437, 469], "sr": [141, 142, 143, 154, 185, 186, 195, 198, 215, 267, 270, 437, 445, 447, 450, 452, 458, 462, 466, 467, 469, 471, 474, 478, 479, 508, 519, 527], "src": [381, 438, 453, 499], "src_above_bkg": 453, "src_event": [454, 455], "src_posit": [454, 455], "srcmap": [186, 187, 188, 190, 199, 200, 471], "ssc": [58, 60, 61, 62, 64, 65, 241, 388, 542], "ssc_model": 241, "st": [53, 468, 479], "stabil": [19, 20, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 393, 458], "stabl": [11, 87, 90, 195, 205, 297, 375, 376, 377, 384, 385, 388, 393, 397, 398, 399, 401, 413, 414, 415, 421, 426, 428, 430, 468, 500], "stack": [16, 83, 86, 91, 99, 100, 101, 103, 104, 108, 109, 120, 121, 123, 145, 146, 152, 157, 160, 163, 187, 188, 189, 190, 195, 196, 199, 200, 203, 209, 211, 265, 338, 368, 380, 383, 384, 390, 395, 409, 412, 413, 416, 419, 424, 425, 430, 431, 433, 438, 439, 443, 447, 451, 452, 460, 463, 467, 468, 470, 475, 476, 487, 488, 500, 501, 510, 513, 562], "stack_dataset": [163, 463, 470], "stack_reduc": [99, 140, 412, 439, 442, 444, 450, 451, 452, 463, 467, 468, 501], "stacked_dataset": [452, 453], "stacked_fit": 442, "stacked_on_off": 448, "stackedobscubemak": 374, "stackedobsimagemak": 374, "stackoverflow": 336, "stage": [371, 384, 448, 450, 462, 467, 499, 562], "stai": 380, "stand": 373, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 90, 95, 188, 200, 205, 271, 296, 350, 351, 368, 369, 371, 373, 377, 379, 380, 381, 384, 386, 392, 394, 395, 404, 411, 412, 428, 434, 437, 438, 443, 445, 448, 451, 453, 455, 458, 461, 462, 465, 468, 471, 474, 475, 476, 478, 481, 483, 487, 499, 502, 507, 515, 561, 562, 563], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [95, 295, 475], "standardis": [340, 341, 353, 427], "standardise_unit": [340, 354], "standpoint": 368, "stapel": 434, "star": [36, 40, 220], "starmap": [313, 317, 318], "start": [16, 53, 83, 86, 88, 89, 90, 91, 93, 99, 128, 136, 197, 217, 218, 225, 229, 231, 232, 233, 240, 248, 254, 266, 269, 368, 369, 371, 373, 375, 376, 377, 378, 381, 382, 384, 385, 393, 394, 396, 397, 398, 402, 403, 404, 405, 407, 412, 421, 424, 425, 426, 427, 428, 433, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 466, 471, 474, 478, 479, 483, 487, 489, 490, 503, 507, 561], "start_po": [125, 330, 456], "startswith": 368, "stat": [6, 99, 100, 104, 109, 121, 123, 124, 125, 128, 129, 131, 205, 206, 208, 210, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 361, 368, 380, 388, 396, 398, 404, 411, 413, 414, 415, 416, 419, 425, 428, 429, 430, 434, 439, 440, 442, 443, 444, 448, 450, 451, 452, 453, 456, 459, 463, 468, 476, 479, 487, 488, 501, 563, 564, 565], "stat_arrai": [98, 100, 101, 104, 108, 109, 396], "stat_contour": 205, "stat_kwarg": 100, "stat_max": [279, 281], "stat_nul": [121, 123, 124, 125, 128, 129, 131, 279, 281, 434, 446, 456, 501], "stat_per_bin": 380, "stat_profil": [205, 438, 468, 476, 503], "stat_scan": [100, 121, 123, 124, 125, 128, 129, 205, 278, 438, 442, 443, 468, 476, 501], "stat_sum": [98, 99, 100, 101, 104, 108, 109, 396, 432, 433, 450, 462, 467, 473, 503], "stat_surfac": [205, 416, 503], "stat_typ": [100, 101, 104, 108, 109, 414, 442, 450, 462, 467, 473], "state": [16, 45, 47, 197, 205, 368, 374, 378, 380, 384, 388, 390, 392, 438, 443, 487, 508, 529], "stateless": 395, "statement": [368, 371, 375, 432, 434, 492], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 106, 107, 116, 120, 121, 123, 124, 125, 128, 129, 131, 148, 156, 167, 173, 174, 186, 187, 188, 190, 196, 197, 199, 200, 212, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 245, 246, 247, 248, 252, 253, 254, 256, 259, 260, 261, 266, 268, 269, 365, 376, 379, 398, 410, 427], "staticmethod": [379, 391, 396, 474, 476], "statist": [6, 19, 20, 26, 79, 98, 99, 100, 101, 104, 108, 109, 120, 121, 123, 124, 125, 128, 129, 131, 137, 140, 167, 205, 207, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 251, 256, 258, 259, 260, 261, 264, 268, 277, 278, 279, 281, 282, 283, 288, 294, 380, 383, 386, 387, 388, 390, 396, 410, 414, 415, 416, 419, 421, 433, 434, 437, 438, 443, 445, 446, 447, 448, 450, 452, 456, 458, 459, 460, 462, 463, 467, 468, 470, 476, 487, 488, 499, 501, 503, 510, 513, 561, 562], "statu": [19, 20, 26, 121, 123, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 368, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 429, 434, 473, 474], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 296, 445, 459, 479], "stddev": 68, "stderr": 368, "stdout": [305, 368], "steadi": 438, "steep": 445, "stefan": [423, 434], "step": [19, 20, 26, 120, 124, 128, 129, 131, 205, 206, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 368, 371, 374, 375, 378, 379, 380, 382, 383, 384, 386, 389, 393, 396, 397, 398, 404, 421, 428, 429, 433, 437, 442, 444, 447, 450, 452, 453, 454, 455, 461, 462, 467, 468, 470, 474, 476, 487, 488, 489, 503, 511, 516], "stepprior": 396, "stepsiz": 162, "steradian": 195, "stewart": [131, 289, 446, 562], "stewart2009": [131, 562, 565], "stick": [371, 391, 409, 428, 468, 562], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 376, 378, 381, 382, 385, 387, 388, 389, 392, 393, 395, 397, 398, 426, 427, 428, 474, 476, 489, 501, 525, 526, 563], "stipul": 394, "stone": [368, 388], "stop": [16, 52, 83, 86, 88, 89, 90, 91, 99, 128, 131, 197, 217, 218, 225, 229, 231, 232, 233, 240, 248, 254, 266, 269, 378, 404, 433, 443, 447, 448, 450, 461, 463, 468, 479, 487], "storag": [82, 503], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 90, 121, 122, 123, 126, 128, 155, 168, 169, 187, 188, 190, 196, 199, 200, 205, 206, 208, 210, 218, 240, 351, 368, 371, 374, 376, 377, 378, 380, 381, 384, 386, 390, 392, 394, 395, 398, 416, 419, 420, 439, 444, 445, 454, 455, 459, 463, 467, 468, 469, 470, 471, 472, 475, 478, 479, 480, 481, 489, 499, 500, 503, 508, 509, 510, 515, 516, 539, 560, 561, 563, 567], "store_per_ob": 384, "store_trac": [205, 468], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 118, 120, 121, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 167, 168, 173, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 297, 309, 318, 333, 334, 350, 351, 353, 357, 361, 362, 364, 382, 395, 442, 444, 470, 474, 480], "str3": [87, 90], "straight": [369, 400, 503], "straightforward": [398, 566], "strang": 368, "strategi": [368, 375, 382, 433, 468, 566], "stream": 368, "streil": [396, 432, 433, 434], "strength": [51, 54, 396, 539], "stretch": [187, 188, 190, 196, 199, 200, 358, 359, 363, 446, 450, 456, 458, 470, 471, 473, 479, 487, 488, 489], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 101, 103, 104, 122, 145, 146, 152, 157, 160, 163, 198, 200, 265], "strict_bound": 192, "strictli": [16, 84, 103, 122, 192], "strike": 499, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 92, 103, 121, 122, 123, 124, 125, 128, 131, 148, 154, 156, 158, 163, 186, 187, 188, 190, 192, 193, 195, 196, 198, 199, 200, 206, 208, 210, 218, 240, 297, 315, 357, 368, 381, 382, 385, 387, 394, 395, 407, 411, 419, 421, 443, 466, 472, 474, 487, 515, 516], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 381, 388, 442, 476], "stronger": 476, "strongli": [286, 383, 385, 394, 419, 447, 468, 476], "structur": [87, 90, 198, 293, 372, 373, 374, 377, 379, 381, 384, 388, 391, 394, 395, 406, 412, 413, 415, 419, 422, 434, 436, 456, 467, 470, 471, 472, 474, 483, 490, 491, 498, 500, 504, 515, 516, 563], "stuck": 563, "student": 371, "studi": [46, 270, 293, 381, 384, 392, 401, 428, 439, 440, 451, 452, 453, 456, 458, 461, 462, 468, 471, 474, 478, 493, 503, 512, 564], "stuff": [369, 398, 503], "stuff1": 368, "stuff2": 368, "style": [87, 90, 100, 187, 188, 190, 196, 199, 200, 365, 371, 377, 394, 423, 425, 450, 458, 469, 471, 487, 488, 503, 516], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 113, 115, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 187, 188, 189, 190, 192, 196, 197, 199, 200, 203, 368, 371, 375, 377, 378, 382, 387, 388, 389, 390, 395, 398, 407, 409, 413, 415, 416, 424, 426, 427, 452, 454, 470, 472, 474, 480, 481, 499, 502, 503, 511, 561, 563, 567], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 122, 297, 382, 425, 428, 474, 476], "subcompon": [67, 80], "subfold": [376, 419], "submit": [373, 394], "submodul": [376, 409, 410, 415, 471, 489, 501], "subok": 297, "subpackag": [389, 395, 412, 419, 423], "subplot": [66, 67, 187, 188, 190, 196, 199, 200, 437, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 456, 460, 462, 463, 465, 468, 469, 471, 472, 473, 475, 476, 503, 505, 512, 522, 526, 529], "subplot_kw": [446, 448, 452, 463, 472, 512], "subplots_adjust": 465, "subsect": [388, 471], "subsequ": [285, 377], "subset": [82, 83, 87, 90, 124, 128, 241, 395, 423, 424, 452, 463, 473, 478, 480, 502, 561], "subspac": 382, "substanti": [87, 90], "substitut": 564, "substr": [218, 240], "subtract": 444, "succed": 397, "succeed": 121, "success": [16, 84, 100, 103, 121, 122, 123, 124, 125, 128, 129, 131, 204, 205, 206, 207, 396, 419, 439, 440, 442, 443, 444, 446, 450, 451, 452, 456, 460, 463, 468, 473, 479, 487, 488, 527], "successfulli": [100, 439, 440, 442, 443, 444, 450, 451, 452, 462, 463, 468, 479, 487, 488], "sudo": 401, "suffer": [385, 463], "suffic": 462, "suffici": [371, 374, 381, 394, 433], "suffix": [100, 121, 369, 379, 391, 397, 474, 515, 517], "suggest": [371, 373, 375, 378, 382, 388, 390, 392, 396, 446, 454, 455, 503, 563], "suit": [188, 368, 516], "suitabl": 188, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 101, 104, 108, 109, 123, 124, 125, 127, 128, 129, 131, 138, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 187, 188, 190, 196, 199, 200, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 270, 279, 281, 283, 364, 368, 378, 379, 381, 390, 392, 396, 410, 434, 450, 454, 463, 465, 467, 476, 479, 487, 488, 489, 499, 509, 562, 564], "sum_": 499, "sum_band": [187, 188], "sum_i": 126, "sum_j": 499, "sum_k": 499, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [187, 188, 190, 196, 199, 200, 356, 428, 448, 450, 456, 463, 467, 470, 472, 473, 479, 488], "sum_over_energy_group": [120, 124, 131, 452, 456], "summar": [377, 491], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 281, 305, 309, 319, 342, 355, 369, 371, 388, 406, 439, 443, 461, 462, 467, 478, 487, 503], "summaris": [368, 373, 375, 388], "summat": [279, 281, 374], "summer": 376, "sun": 41, "sunpi": [385, 388, 389], "super": [186, 188, 259, 260, 261, 436, 454, 481, 517, 549, 551], "superexpcutoffpowerlaw3fglspectralmodel": [250, 391, 474, 545], "superexpcutoffpowerlaw4fgldr3spectralmodel": [250, 474, 546], "superexpcutoffpowerlaw4fglspectralmodel": [250, 391, 474, 547], "superfici": 491, "superflu": [378, 463], "supernova": [28, 52, 439, 453, 474, 493, 494], "superpixel": 186, "supersed": [186, 187, 188, 198, 199, 200], "supervisor": 384, "suppli": [19, 20, 26, 87, 90, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 438, 462], "support": [83, 85, 86, 87, 88, 89, 90, 91, 94, 99, 101, 104, 108, 109, 112, 123, 139, 150, 155, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 205, 218, 240, 367, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 401, 405, 408, 409, 411, 412, 413, 414, 415, 416, 419, 421, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 443, 445, 447, 450, 452, 458, 462, 465, 466, 467, 471, 476, 478, 479, 480, 481, 487, 502, 508, 515, 516, 558, 560, 561, 563], "suppos": [232, 266, 373, 380, 562, 564], "suppress": [144, 145, 149, 503], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 371, 373, 384, 397, 442, 460, 471, 503, 563], "surfac": [28, 30, 35, 36, 39, 40, 45, 205, 255, 270, 323, 387, 416, 468, 474, 493], "surface_brightness_err": 466, "surprisingli": 382, "surround": [52, 315, 368], "survei": [63, 67, 124, 220, 375, 378, 388, 404, 436, 478, 483, 484, 493, 498, 503, 562], "survey_map": [436, 484, 485], "suspect": 565, "suss": [377, 394], "svg": 368, "swap": 186, "swept": 52, "swh": 394, "swhid": 394, "switch": [277, 368, 375, 378, 421, 425], "switcher": 397, "sy": [368, 403], "syllabl": 503, "symbol": 472, "symmetr": [101, 104, 108, 109, 120, 129, 131, 175, 184, 188, 227, 368, 379, 409, 421, 424, 440, 462, 470, 476, 478, 491, 501, 509, 520, 521, 565], "symmetri": [188, 409], "sync": 428, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 394, "synchrotron": [241, 415, 539], "syntact": [87, 90], "syntax": [16, 87, 90, 369, 384, 387, 413, 430, 563], "synthesi": [493, 494], "synthet": 407, "system": [11, 83, 87, 90, 142, 150, 151, 186, 187, 188, 190, 193, 195, 198, 199, 200, 218, 240, 368, 374, 379, 381, 385, 388, 389, 393, 394, 396, 401, 409, 427, 433, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 514, 515, 561, 563, 567], "systemat": [379, 392, 394, 395, 416, 442, 460, 470, 501, 562, 564], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 103, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 129, 131, 138, 139, 144, 184, 197, 218, 232, 240, 277, 279, 280, 281, 295, 340, 344, 367, 368, 369, 371, 373, 375, 376, 378, 380, 382, 384, 385, 386, 387, 388, 391, 392, 393, 395, 398, 399, 400, 402, 404, 416, 420, 423, 424, 425, 428, 433, 437, 438, 439, 442, 447, 450, 452, 453, 456, 458, 459, 460, 463, 465, 466, 468, 470, 471, 472, 474, 475, 476, 478, 479, 491, 495, 496, 497, 499, 501, 503, 512, 550, 551, 552, 553, 554, 555, 556, 561, 562, 563, 566, 567], "t0": [225, 248, 454, 461, 462, 551, 555], "t1": [87, 90], "t2": [87, 90], "t_": [52, 53, 285, 508, 551, 552, 553, 554, 555, 556, 564], "t_0": 555, "t_b": 564, "t_decai": [231, 553], "t_delta": [102, 107, 197, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269], "t_i": 285, "t_j": 499, "t_live": [83, 88], "t_max": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 381, 392], "t_min": [217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 381, 392], "t_observ": [83, 88], "t_r": 232, "t_ref": [225, 229, 231, 232, 233, 248, 254, 266, 432, 433, 454, 455, 462, 474, 551, 552, 553, 554, 555, 556, 557, 558], "t_rise": [231, 553], "t_start": [86, 500], "t_stop": [52, 86, 500], "ta": 280, "ta2": 280, "ta3": 280, "tab": [144, 373, 450, 456, 460, 476, 512], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "table_arrai": [87, 90], "table_associ": 67, "table_bkg_src": 453, "table_class": [87, 90], "table_compon": [67, 466], "table_filenam": 26, "table_from_row_data": 433, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 466], "table_model": [268, 391], "table_oth": 338, "tableau": 503, "tableclass": [87, 90], "tablegroup": [87, 90], "tableid": [87, 90], "tableiloc": [87, 90], "tableindic": [87, 90], "tableloc": [87, 90], "tablelocindic": [87, 90], "tablemodel": [379, 429], "tablepsf": [389, 407, 409], "tablepsfcheck": 425, "tabul": 491, "tabular": [474, 548], "tackl": 377, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 187, 188, 190, 196, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 393, 396, 397, 416, 430, 469, 474, 476, 522, 526], "tail": [478, 563], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 101, 104, 108, 109, 120, 142, 162, 164, 196, 198, 205, 218, 240, 255, 343, 366, 368, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 392, 398, 414, 415, 416, 419, 421, 429, 430, 432, 433, 434, 437, 439, 442, 444, 445, 454, 455, 456, 462, 463, 468, 470, 471, 472, 474, 475, 476, 478, 488, 489, 500, 503, 516, 532, 564, 565, 566], "taken": [15, 27, 87, 90, 101, 104, 108, 109, 121, 123, 147, 155, 174, 180, 182, 196, 197, 200, 205, 288, 369, 373, 377, 381, 432, 438, 442, 450, 451, 463, 469, 472, 473, 478, 489, 499, 501, 512, 513, 565], "talk": [371, 373, 375, 385, 394], "tan": [188, 195, 382, 411, 442, 471, 479, 512], "tandem": 491, "tangent": [170, 215, 219, 227, 230, 242, 252, 253, 257, 263, 267], "tangenti": [186, 516], "tar": [398, 478], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 101, 104, 108, 109, 112, 116, 120, 122, 131, 145, 146, 157, 160, 177, 178, 182, 183, 187, 188, 190, 192, 196, 199, 200, 374, 375, 381, 394, 397, 425, 439, 444, 452, 461, 470, 472, 488], "target_nam": 512, "target_posit": [170, 439, 442, 444, 452, 460, 461, 488], "target_radec": 88, "targetmetadata": 122, "task": [318, 388, 392, 394, 395, 397, 398, 429, 443, 446, 470, 471, 479, 483, 487, 503, 511, 561, 563, 567], "task_nam": 318, "tast": 563, "tau": [26, 51, 54, 396, 465, 529], "tau_0": 51, "taul": [26, 465], "taur": [26, 465], "taylor": [52, 53], "tb00058": 138, "tbl": [87, 90], "tctypn": 454, "tcunin": 454, "tdelta_precis": 293, "team": [373, 377, 385, 388, 390, 394, 406, 427], "technic": [370, 371, 373, 381, 388, 390, 392, 394, 398, 447, 503], "techniqu": [374, 383, 384, 386, 439, 442, 450, 453, 470, 472, 510, 513, 561], "tediou": 466, "tel": [87, 90], "telescop": [82, 83, 85, 90, 94, 103, 147, 381, 382, 395, 400, 404, 405, 454, 460, 463, 475, 478, 479, 481], "tell": 444, "temp": [423, 455], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 103, 104, 109, 113, 115, 122, 164, 172, 186, 187, 188, 190, 191, 192, 198, 199, 200, 206, 218, 232, 240, 263, 264, 265, 266, 267, 268, 274, 276, 289, 292, 373, 379, 380, 384, 391, 416, 430, 433, 434, 436, 445, 446, 448, 455, 471, 472, 473, 474, 491, 512, 515, 517, 528, 535, 538, 543, 549, 557], "template_diffus": [473, 479], "template_model": 454, "templatelightcurvetemporalmodel": 430, "templatend": [263, 264, 474], "templatendspatialmodel": [249, 474], "templatendspectralmodel": [26, 250, 421, 432, 474], "templatenpredmodel": [236, 419], "templatephasecurvetemporalmodel": [262, 430, 474, 557], "templatespatialmodel": [67, 249, 390, 391, 416, 430, 431, 433, 434, 454, 473, 474, 479, 527], "templatespectralmodel": [218, 240, 250, 272, 391, 474, 479, 499, 535, 538, 543, 548], "templatetemporalmodel": 430, "tempo2": [463, 503], "tempor": [209, 211, 217, 218, 225, 229, 231, 232, 233, 240, 248, 254, 255, 262, 266, 269, 285, 379, 381, 391, 392, 412, 414, 415, 416, 421, 430, 432, 433, 434, 436, 438, 440, 443, 445, 450, 451, 452, 454, 457, 458, 459, 466, 467, 473, 479, 483, 487, 499, 500, 503, 504, 508, 511, 515, 559, 560, 562], "temporal_model": [255, 381, 454, 455, 462, 474, 550, 551, 552, 553, 554, 555, 556, 557, 558], "temporal_model1": 462, "temporal_model2": 462, "temporal_model_map": 455, "temporal_model_registri": 474, "temporal_typ": 391, "temporalbackground": 379, "temporalmodel": [217, 225, 229, 231, 232, 233, 248, 254, 255, 266, 379, 392, 415, 430, 432, 433, 517], "temporari": 483, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 379], "ten": [374, 388], "tend": [368, 522], "tension": 459, "tensorflow": [386, 388], "tent": 397, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 233, 290, 294, 371, 373, 375, 377, 378, 382, 385, 388, 393, 395, 417, 421, 430, 438, 446, 468, 469, 563, 565, 566], "termin": [87, 90, 100, 384, 399, 400, 401, 402, 403, 439, 440, 442, 443, 444, 450, 451, 452, 463, 468, 479, 487, 488, 563], "terrestri": 567, "terrier": [374, 377, 378, 379, 380, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "test": [6, 93, 100, 113, 115, 118, 120, 121, 123, 124, 125, 128, 129, 131, 137, 155, 157, 160, 187, 188, 190, 196, 199, 200, 232, 277, 278, 279, 281, 284, 327, 342, 343, 344, 345, 346, 347, 348, 369, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 393, 396, 397, 398, 408, 410, 411, 413, 415, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 433, 439, 445, 446, 455, 458, 460, 461, 462, 467, 469, 501, 503, 507, 513, 557, 558, 562, 565], "test2": 462, "test_aeff3d": 469, "test_edisp": 469, "test_events_with_gti": 500, "test_gti": 500, "test_person_txt": 368, "test_plot": 368, "test_psf": 469, "test_someth": 368, "test_using_data_fil": 347, "test_using_scipi": 348, "testcod": 369, "testoutput": 369, "testpar": 396, "teststatisticnest": 433, "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 95, 100, 101, 104, 108, 109, 110, 114, 116, 121, 123, 124, 136, 137, 141, 142, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 167, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 255, 256, 258, 259, 260, 261, 264, 268, 270, 271, 295, 296, 317, 363, 369, 379, 391, 392, 395, 396, 404, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 497, 500, 501, 507, 508, 510, 512, 513, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561], "tevcat": [420, 466], "tevcat_nam": 71, "tevpi": 407, "tevtevtev1": 452, "tex": 369, "texliv": 369, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 104, 109, 121, 123, 131, 252, 253, 296, 357, 369, 376, 384, 394, 398, 443, 463, 469, 478, 487, 489, 520, 521, 522, 525, 526, 530, 546, 553, 563, 565], "textcolor": 357, "textkw": 357, "th": 192, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 90, 130, 148, 149, 156, 158, 164, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 277, 286, 346, 361, 368, 371, 373, 374, 375, 378, 381, 382, 383, 386, 387, 392, 394, 395, 398, 427, 430, 431, 432, 434, 437, 439, 450, 451, 454, 459, 460, 461, 468, 470, 472, 475, 476, 499, 516, 521, 522, 563, 565], "thank": [392, 413, 414, 419, 421, 470, 503], "thaw": 473, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 94, 103, 107, 111, 122, 128, 132, 161, 266, 285, 317, 368, 369, 371, 373, 374, 375, 376, 377, 379, 382, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 398, 405, 416, 419, 421, 433, 434, 439, 440, 444, 465, 467, 468, 472, 473, 474, 475, 476, 478, 481, 491, 500, 501, 503, 508, 515, 516, 561, 562, 563, 564, 565, 567], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 99, 103, 122, 209, 211, 218, 240, 297, 368, 369, 371, 373, 375, 376, 382, 384, 387, 394, 395, 397, 398, 404, 411, 427, 439, 440, 442, 445, 447, 450, 451, 453, 455, 460, 466, 467, 468, 471, 472, 474, 476, 478, 480, 483, 488, 500, 503, 512, 563, 565], "theme": [421, 428], "themselv": [87, 90, 384, 470, 472, 510], "theorem": [277, 501, 565], "theoret": 476, "therefor": [104, 374, 378, 381, 382, 383, 387, 389, 391, 401, 419, 439, 460, 463, 468, 471, 472, 475, 476, 489, 501, 565, 566], "thereof": 379, "thermal": [19, 539, 562], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 148, 154, 156, 158, 162, 170, 184, 193, 298, 301, 368, 416, 444, 479, 489, 520, 521, 525, 526], "theta2": [174, 184, 366, 427], "theta2_axi": 481, "theta2_max": 366, "theta2_min": 366, "theta2_t": 481, "theta_0": [33, 38], "theta_squared_axi": [184, 481], "thew": 466, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 99, 101, 102, 103, 104, 107, 108, 109, 112, 116, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 169, 170, 171, 173, 175, 177, 178, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 277, 279, 281, 287, 297, 305, 315, 318, 321, 326, 327, 343, 346, 353, 355, 357, 358, 359, 363, 365, 367, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 491, 492, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567], "thick": 365, "thin": [56, 309], "thing": [368, 371, 373, 376, 382, 383, 384, 385, 388, 392, 398, 407, 426, 444, 447, 462, 463, 472, 479], "think": [373, 385, 386, 388], "third": [62, 63, 87, 90, 369, 419, 466, 468, 471, 483, 489, 498], "thoma": [394, 427], "thorough": [471, 491], "those": [15, 83, 173, 187, 188, 190, 196, 199, 200, 205, 209, 211, 218, 240, 305, 357, 368, 371, 373, 375, 377, 382, 384, 387, 388, 389, 390, 391, 393, 398, 399, 400, 402, 403, 413, 416, 460, 468, 471, 472, 473, 475, 483, 489, 501, 503, 512, 567], "though": [15, 371, 376, 382, 383, 384, 386, 388, 443, 474, 487], "thought": [373, 382], "three": [87, 90, 155, 280, 368, 377, 380, 382, 394, 452, 454, 459, 460, 471, 476, 483, 508, 515, 562], "threshold": [67, 101, 108, 116, 121, 122, 123, 131, 136, 137, 144, 145, 149, 162, 173, 197, 277, 357, 358, 359, 382, 409, 415, 416, 437, 442, 444, 446, 452, 456, 460, 466, 467, 468, 470, 472, 478, 487, 499, 501], "threshold_alpha": 162, "through": [41, 87, 90, 296, 297, 365, 371, 373, 381, 382, 388, 392, 393, 401, 405, 419, 430, 438, 455, 459, 468, 470, 471, 472, 473, 479, 480, 503, 508, 515, 562, 565], "throughout": [13, 375, 377, 378, 382, 384, 426, 466], "throught": 456, "thrown": 474, "thu": [368, 375, 382, 385, 386, 388, 423, 437, 438, 447, 448, 452, 454, 560, 566], "thumbnail": 419, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 188, 377, 462], "tibaldo": 424, "tick": [432, 433], "tick_param": 437, "ticker": 357, "tight_layout": [468, 476, 522, 526], "tightli": 387, "tikonov": 396, "tild": [186, 198], "tile": [186, 188], "tilt": [246, 265, 379, 390, 391, 396, 408, 414, 447, 450, 451, 454, 455, 458, 467, 474, 479, 487, 488, 510, 516, 523, 543, 548], "tilt_prior": 396, "tim": 434, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 99, 100, 101, 102, 103, 104, 107, 108, 109, 121, 122, 123, 128, 131, 132, 139, 163, 169, 180, 182, 187, 188, 189, 190, 191, 196, 197, 199, 200, 205, 208, 210, 217, 220, 225, 229, 231, 232, 233, 248, 254, 255, 266, 269, 280, 285, 293, 327, 345, 349, 350, 351, 352, 368, 369, 371, 373, 374, 375, 376, 378, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 397, 398, 400, 404, 408, 409, 412, 413, 414, 416, 419, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 438, 442, 444, 445, 446, 448, 450, 452, 453, 455, 456, 458, 460, 463, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 487, 488, 489, 495, 496, 497, 499, 500, 501, 503, 508, 511, 516, 521, 522, 529, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 566], "time_axi": [187, 188, 190, 191, 196, 199, 200, 280, 455, 471, 516], "time_bin": 383, "time_bin_end": 383, "time_bin_s": 383, "time_bin_start": 383, "time_bound": 197, "time_box": 90, "time_column": 392, "time_delta": [86, 197, 349, 352], "time_edg": [197, 459, 471], "time_filt": 89, "time_format": [123, 197, 433, 462], "time_interv": [16, 83, 86, 88, 91, 128, 443, 447, 448, 450, 455, 460, 461, 487], "time_map_axi": [197, 471], "time_map_axis_contigu": 471, "time_max": [99, 121, 123, 197, 382, 383, 384, 455, 460, 466, 471], "time_mid": [197, 459], "time_min": [99, 121, 123, 197, 382, 383, 384, 455, 460, 466, 471], "time_rang": [90, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 455, 550, 551, 552, 553, 554, 555, 556, 557, 558], "time_ref": [83, 85, 86, 90, 93, 191], "time_ref_default": 86, "time_ref_from_dict": 567, "time_relative_to_ref": 567, "time_seri": 280, "time_start": [85, 86, 90, 383], "time_step": 383, "time_stop": [85, 86, 90, 383], "time_sum": [86, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269], "timedelta": [87, 90, 93, 197, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 327, 349, 352, 567], "timedelta64": [87, 90], "timelin": [373, 375, 427], "timemapaxi": [123, 139, 189, 191, 419, 434, 459, 461, 462], "timerangeconfig": 16, "timeref": 454, "timescal": [132, 225, 286, 393, 459], "timeseri": 383, "timesi": [93, 431, 433, 454], "timestamp": 368, "timeunit": 454, "timmer": 280, "timmer1995": 280, "tini": [452, 478], "tip": 503, "titl": [373, 456, 465], "tiusk9vj": 470, "tiziani": 425, "tke": 479, "tm": [87, 90], "tmax": 383, "tmid": [88, 433, 452, 470, 475, 488], "tmin": 383, "to_2d": [142, 481], "to_3d": [141, 432, 434], "to_bands_hdu": [185, 186, 195, 198], "to_binsz": [186, 195, 198, 419], "to_binsz_wc": 195, "to_contigu": [197, 471], "to_counts_hdulist": 106, "to_cub": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 416, 448, 516], "to_dict": [19, 20, 26, 98, 100, 101, 104, 108, 109, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 395, 476], "to_edisp_kernel": [149, 507], "to_edisp_kernel_map": [146, 419, 507], "to_energy_dependent_table_psf": 427, "to_even_npix": 198, "to_fits_head": 85, "to_fram": 193, "to_gti": [197, 434], "to_hdu": [187, 188, 199, 200], "to_hdulist": [101, 104, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 187, 188, 194, 195, 196, 199, 200, 471], "to_head": [84, 103, 122, 186, 189, 191, 192, 197, 198, 395], "to_html": 368, "to_imag": [101, 104, 108, 109, 144, 145, 155, 157, 160, 185, 186, 195, 198, 390, 413, 414, 437, 448, 452, 467, 479, 513, 516], "to_json": [16, 84, 103, 122], "to_map": [121, 123], "to_map_dataset": [104, 109], "to_mask": [101, 104, 108, 109, 465], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 419, 466], "to_node_typ": 192, "to_nsid": [186, 188], "to_odd_npix": 198, "to_panda": [87, 90], "to_parameters_t": [218, 240, 438, 439, 442, 443, 444, 447, 450, 468, 488], "to_pixel": [382, 442, 452, 465, 470, 474, 512, 520, 521, 522], "to_polygon": 382, "to_psf3d": [148, 156, 158], "to_python": [16, 84, 103, 122], "to_region": [214, 215, 218, 219, 227, 230, 240, 244, 252, 253, 267, 382, 413, 474, 520, 521, 522], "to_region_map_dataset": [101, 104, 108, 109, 467], "to_region_nd_map": [145, 146, 152, 157, 160, 188, 196, 200, 416, 419, 479], "to_region_nd_map_histogram": [200, 433], "to_sed_typ": 392, "to_sherpa": [413, 427, 428], "to_spectrum": 419, "to_spectrum_dataset": [99, 101, 104, 108, 109, 390, 412, 414, 463, 467, 476], "to_st": 433, "to_str": [433, 437], "to_swap": [186, 187, 188], "to_tabl": [100, 123, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 191, 192, 196, 209, 211, 232, 419, 438, 440, 442, 443, 452, 456, 458, 460, 462, 466, 474, 489, 501], "to_table_hdu": [83, 86, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 191, 192, 471], "to_table_psf": 425, "to_template_sky_model": [218, 240], "to_template_spectral_model": [218, 240, 391], "to_unit": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 187, 188, 190, 196, 199, 200], "to_wc": [187, 188], "to_wcs_geom": [186, 195, 516], "to_wcs_til": [186, 188], "to_yaml": [16, 84, 103, 122, 206, 218, 240, 379, 395, 474, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "tob": 443, "todai": 394, "todo": [13, 79, 87, 90, 98, 155, 268, 369, 392, 410, 478, 493, 494, 567], "tof": 154, "togeth": [99, 101, 104, 108, 109, 124, 128, 218, 240, 365, 368, 381, 385, 388, 399, 411, 438, 448, 450, 451, 456, 461, 467, 468, 470, 473, 474, 475, 476, 481, 488, 499, 500, 563], "tol": 468, "toler": [86, 99, 128, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 345, 468], "tolist": 468, "tomato": 438, "toml": 416, "ton": [286, 478], "too": [368, 373, 374, 418, 419, 432, 433, 434, 468, 472], "took": 393, "tool": [6, 13, 187, 188, 190, 199, 200, 367, 371, 375, 377, 379, 381, 384, 385, 388, 394, 405, 413, 424, 427, 428, 453, 456, 462, 467, 468, 471, 475, 478, 479, 491, 503, 537, 561, 562], "toolbox": [384, 424], "top": [108, 109, 355, 364, 368, 373, 384, 388, 390, 401, 427, 444, 446, 452, 456, 459, 460, 462, 466, 470, 489, 503, 516, 561, 563, 567], "top_five_ts_3fhl": 489, "tophat2dkernel": 120, "topic": [373, 377, 388, 396, 489], "total": [51, 67, 98, 100, 101, 104, 108, 109, 124, 125, 128, 129, 135, 167, 182, 186, 206, 217, 225, 229, 231, 232, 233, 248, 254, 266, 269, 294, 376, 392, 396, 400, 402, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 476, 477, 479, 482, 484, 486, 487, 488, 489, 490, 493, 499, 503, 508, 518, 528, 539, 549, 559, 562], "total_jfact": 465, "total_jfact_decai": 465, "total_model": 379, "total_obstim": 470, "total_stat": [206, 207, 438, 468, 564], "touch": [86, 408], "tour": 483, "toward": [315, 375, 382, 388, 429], "tox": [333, 369, 371, 430, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 527, 535, 538, 551], "tqdm": 503, "trace": [205, 206, 207, 416, 468], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368], "track": [85, 93, 368, 377, 383, 394, 421, 473], "tracker": [371, 382], "tradition": [474, 564], "train": 393, "traitlet": [384, 395], "traittyp": 395, "transfer": 395, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 93, 155, 189, 191, 192, 197, 198, 218, 240, 299, 303, 326, 331, 368, 382, 384, 392, 396, 407, 409, 425, 428, 446, 452, 470, 476, 515, 520, 521, 567], "transit": [27, 358, 359, 375, 408, 409, 427, 480], "transit_map": 480, "transit_numb": 480, "transitsmap_crab": 480, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 501], "transpar": 383, "transport": 471, "transpos": 428, "trapezoid": [141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 273, 308], "trapz": 308, "trapz_loglog": 414, "trash": 410, "travi": [413, 415, 419], "treat": [94, 400, 432, 433, 442, 454, 566], "treatment": [419, 442, 450, 562], "trend": 454, "tri": [376, 382], "tributor": 394, "tricki": 382, "trigger": [346, 368, 397, 480], "trim": [101, 104, 145, 146, 152, 157, 160, 163, 198, 200, 265], "tripl": 148, "trivial": 375, "troubl": 563, "troubleshoot": [400, 401, 402], "trough": 459, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 120, 121, 122, 123, 124, 128, 129, 131, 135, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 167, 173, 174, 177, 178, 180, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 294, 297, 305, 306, 309, 327, 337, 339, 356, 361, 365, 368, 374, 381, 382, 383, 384, 391, 392, 395, 410, 414, 415, 426, 428, 429, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 479, 480, 485, 487, 488, 489, 493, 499, 501, 503, 508, 513, 515, 516, 519, 520, 521, 524, 525, 527, 548, 562, 565, 567], "truelov": 53, "truncat": [131, 315, 419], "truncation_valu": [282, 288], "trust": [16, 84, 103, 122], "trustworthi": 396, "truth": 476, "try": [16, 84, 103, 122, 187, 188, 190, 196, 199, 200, 368, 369, 378, 382, 388, 397, 398, 404, 409, 440, 442, 444, 454, 455, 460, 466, 468, 471, 489, 563], "ts2": 280, "ts3": 280, "ts_image_estim": 452, "ts_scan": [121, 123], "ts_threshold": [139, 277], "ts_threshold_ul": [463, 501], "ts_to_sigma": [453, 565], "tsimageestim": 427, "tsmap_est": 361, "tsmapestim": [117, 138, 361, 389, 392, 414, 415, 417, 419, 433, 446, 452, 503], "tstart": [88, 90, 381, 383, 445, 454, 458, 461, 462, 478], "tstop": [88, 381, 383, 445, 454, 458, 461, 478], "tt": [86, 93, 350, 351, 394, 455, 461, 567], "tth_sec3": 192, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 100, 101, 103, 104, 108, 109, 122, 126, 131, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 163, 168, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 265, 268, 279, 281, 284, 309, 319, 326, 368, 471, 515], "turn": [83, 88, 369, 371, 382, 478, 560], "tutori": [82, 98, 118, 128, 130, 172, 368, 371, 372, 377, 380, 381, 382, 383, 384, 385, 386, 389, 398, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 503, 504, 506, 515, 560, 563], "tutorials_jupyt": [397, 483], "tutorials_python": 483, "tweak": [384, 419, 471], "twice": [120, 515, 566], "twinx": 437, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 86, 87, 89, 90, 100, 101, 104, 108, 109, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 163, 168, 170, 186, 187, 188, 189, 190, 192, 195, 196, 198, 199, 200, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 327, 336, 357, 362, 365, 367, 368, 369, 371, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 392, 393, 394, 396, 397, 398, 400, 421, 427, 429, 433, 443, 444, 450, 451, 453, 456, 462, 466, 467, 468, 469, 471, 472, 474, 475, 476, 478, 480, 487, 488, 493, 499, 500, 501, 503, 512, 515, 516, 531, 565, 566], "tx9u1e05": 474, "txt": [123, 393, 395, 473, 479], "tyler": 421, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 95, 98, 99, 100, 101, 103, 112, 120, 121, 122, 123, 125, 131, 161, 167, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 297, 327, 374, 377, 378, 379, 380, 382, 383, 384, 387, 391, 392, 394, 396, 398, 399, 404, 412, 419, 425, 426, 427, 433, 438, 439, 440, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 487, 488, 489, 491, 501, 503, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563], "typeerror": [16, 84, 103, 122, 297, 382, 392, 396], "typic": [121, 374, 377, 379, 386, 390, 391, 392, 393, 395, 400, 401, 439, 444, 448, 456, 458, 460, 461, 466, 467, 469, 472, 474, 475, 491, 498, 499, 500, 508, 512, 561, 562], "typing_extens": [16, 84, 103, 122], "typo": [368, 405, 431, 432], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 90, 95, 101, 104, 108, 109, 113, 115, 116, 121, 123, 125, 127, 131, 136, 137, 144, 146, 155, 185, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 212, 213, 216, 220, 222, 223, 224, 228, 232, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 271, 280, 295, 296, 297, 317, 363, 368, 371, 375, 376, 377, 383, 384, 385, 386, 391, 392, 395, 396, 408, 409, 410, 427, 428, 429, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 493, 500, 501, 503, 505, 510, 512, 513, 516, 520, 522, 523, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557], "u03c3": 453, "u18": [33, 38], "uc": [87, 90], "ufunc": [187, 188, 190, 196, 199, 200, 444], "uhpfr7": 438, "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 116, 124, 147, 237, 270, 271, 280, 287], "ul": [67, 120, 121, 123, 124, 125, 128, 129, 131, 278, 451, 456, 462, 466], "ultim": 368, "un": [380, 394, 416, 473], "unambigu": 474, "unbehaun": 434, "unbin": [380, 381, 428], "unboundlocalerror": 368, "uncertaint": 386, "uncertainti": [52, 101, 104, 108, 109, 279, 281, 372, 385, 426, 440, 442, 463, 468, 476, 488, 561, 562, 564], "unchang": [101, 104, 108, 109, 113, 115, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 427], "unclear": [368, 378, 379, 385, 395], "uncom": [384, 478], "undefin": 566, "under": [72, 90, 138, 368, 372, 377, 385, 394, 428, 429, 438, 443, 483, 487, 499, 565, 566], "underestim": 501, "underflow": 197, "underli": [87, 90, 195, 381, 440, 466, 471, 476, 489, 491, 500, 503, 512, 515], "underscor": 368, "understand": [384, 405, 413, 414, 439, 442, 443, 444, 447, 454, 455, 459, 461, 462, 471, 472, 473, 478, 487, 488, 491, 563], "undertak": 388, "unexpect": 480, "unfold": 562, "unfreez": [19, 20, 26, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 539], "unfreeze_al": [209, 211, 473], "unfrozen": 510, "unheard": 563, "uni": 396, "uni_prior_stat_sum": 476, "unicod": [87, 90, 368], "unid": 67, "unidimension": 191, "unif": 413, "unifi": [87, 90, 372, 377, 382, 408, 411, 413, 414, 415, 416, 419, 428, 429, 562], "uniform": [155, 205, 326, 368, 377, 379, 380, 390, 392, 396, 410, 411, 415, 419, 439, 471, 476, 561], "uniform_filt": [126, 200], "uniformli": [381, 501], "uniformprior": [396, 476], "uninstal": 367, "union": [84, 86, 89, 101, 103, 104, 122, 195, 332, 382, 383, 394, 395, 411, 499], "uniqu": [87, 90, 99, 144, 186, 187, 188, 189, 190, 196, 198, 199, 200, 209, 211, 218, 226, 240, 255, 265, 361, 378, 379, 380, 381, 391, 394, 414, 443, 467, 474, 480, 516, 560], "unique_id": 474, "unique_paramet": [209, 211], "uniquifi": [87, 90], "unit": [6, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 90, 95, 100, 101, 104, 106, 108, 109, 110, 113, 114, 115, 116, 121, 123, 125, 127, 131, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 167, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 208, 210, 212, 213, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 280, 295, 296, 297, 327, 339, 340, 341, 343, 352, 353, 354, 357, 358, 359, 363, 369, 377, 379, 382, 384, 386, 391, 392, 396, 408, 409, 411, 419, 421, 427, 428, 430, 431, 432, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 493, 495, 496, 497, 500, 501, 503, 505, 507, 508, 510, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562], "unit_string_format": [433, 437], "unitbas": 297, "uniti": [126, 189, 267, 431, 522], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 226, 265], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [437, 445, 447, 450, 452, 458, 462, 478], "univers": [187, 188, 190, 196, 199, 200, 562], "univsers": 20, "unknown": [100, 281, 446, 468, 562, 564, 565], "unless": [92, 94, 124, 125, 128, 131, 163, 297, 367, 374, 393, 395, 469], "unlik": [87, 90, 277, 375, 386], "unmaintain": 409, "unmask": [87, 90], "unnam": [87, 90, 193], "unnecessari": [419, 430, 450], "unneed": 433, "unphys": 566, "unrealist": 368, "unrel": 567, "unreli": 478, "unsaf": 368, "unstabl": [368, 478], "unsupport": 385, "untar": 478, "until": [368, 371, 375, 382, 393, 426], "unus": [384, 411, 413], "unusu": 373, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 100, 125, 127, 131, 148, 154, 156, 158, 195, 297, 368, 369, 372, 373, 375, 376, 377, 380, 382, 384, 385, 386, 388, 390, 394, 396, 398, 399, 400, 402, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 423, 425, 426, 427, 428, 429, 442, 443, 450, 453, 454, 476, 478, 479, 516, 563], "upcast": 297, "upcom": [376, 377], "updat": [15, 16, 84, 87, 90, 102, 103, 107, 122, 194, 208, 210, 218, 240, 267, 277, 317, 336, 368, 371, 373, 374, 375, 376, 377, 380, 385, 390, 392, 394, 395, 397, 398, 400, 401, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 425, 426, 427, 428, 430, 433, 434, 471, 474, 514, 515, 567], "update_config": 15, "update_forward_ref": [16, 84, 103, 122], "update_from_dict": [208, 210], "update_link_label": [218, 240], "update_parameters_from_t": [218, 240], "upgrad": [186, 367, 393, 401], "upload": [385, 397, 478], "upon": [101, 104, 108, 109, 377, 447, 473, 478, 499], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 100, 120, 121, 122, 123, 124, 125, 128, 129, 131, 144, 192, 197, 205, 212, 213, 216, 217, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 278, 279, 281, 395, 404, 415, 419, 426, 427, 428, 434, 442, 456, 460, 467, 470, 487, 499, 501], "upper_error": 123, "upsampl": [157, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 410, 430], "upsample_geom": 157, "upstream": [368, 371], "upward": [279, 281], "url": 376, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 278, 280, 282, 293, 295, 297, 305, 308, 309, 310, 317, 318, 321, 326, 327, 333, 336, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 367, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 455, 456, 458, 459, 461, 462, 463, 465, 466, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 489, 492, 493, 503, 505, 506, 507, 509, 513, 514, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 567, 568], "usabl": 368, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 103, 118, 122, 128, 130, 172, 185, 186, 195, 198, 321, 374, 378, 379, 381, 383, 387, 392, 412, 433, 434, 466, 470, 472, 473, 563], "use_cach": 241, "use_center_as_plot_label": 192, "use_enum_valu": [16, 84, 103, 122], "use_evaluation_region": [218, 240], "use_fft": 200, "use_local_fil": [87, 90], "use_nullable_int": [87, 90], "use_region_cent": [167, 174, 177, 178, 180, 181, 419, 439], "useless": 478, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 88, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 368, 369, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 405, 412, 419, 420, 426, 427, 428, 430, 443, 453, 454, 455, 467, 469, 471, 472, 473, 474, 475, 483, 487, 500, 501, 502, 503, 508, 512, 515, 518, 524, 528, 549, 559, 560, 563], "userdataset": 380, "usernam": 371, "userwarn": [442, 444, 451, 452, 456, 479], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 563, "usual": [29, 82, 83, 121, 136, 141, 142, 143, 155, 196, 305, 368, 369, 371, 373, 374, 375, 376, 382, 383, 388, 394, 398, 433, 437, 438, 439, 440, 442, 444, 445, 447, 448, 452, 454, 455, 458, 459, 460, 461, 462, 465, 467, 472, 475, 480, 488, 491, 499, 503, 505, 506, 507, 509, 512, 516, 521, 560, 562, 563, 564], "ut1": 567, "utc": [86, 88, 103, 122, 349, 454, 460, 461, 471, 474, 550, 551, 552, 553, 554, 555, 556, 557, 558, 567], "utf": [87, 90], "utf8": [16, 84, 103, 122], "util": [6, 95, 103, 110, 113, 114, 115, 122, 123, 125, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 176, 177, 178, 179, 180, 181, 182, 183, 184, 276, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 368, 377, 379, 380, 381, 382, 392, 407, 410, 411, 412, 413, 420, 421, 424, 425, 426, 427, 428, 429, 433, 434, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 491, 492, 503, 562], "utilis": [83, 137, 369, 437, 442, 446, 453, 459, 471, 475, 488, 500, 503, 510], "v": [26, 31, 32, 37, 87, 90, 148, 154, 156, 157, 158, 160, 169, 176, 194, 266, 277, 301, 371, 376, 383, 384, 395, 396, 397, 398, 421, 437, 460, 465, 475, 487], "v0": [94, 375, 376, 379, 380, 382, 385, 387, 388, 393, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 428, 429, 430, 454, 455, 469, 473], "v1": [13, 16, 83, 84, 88, 103, 122, 368, 375, 377, 379, 384, 385, 386, 387, 393, 394, 397, 400, 402, 413, 414, 415, 421, 426, 430, 431, 432, 433, 434, 535, 538], "v2": [394, 395, 419, 427, 434, 478], "v3": 411, "v_0": [37, 49], "v_glat": 304, "v_glon": 304, "va": 520, "vagu": 373, "vain": 371, "val": [87, 90, 187, 188, 190, 196, 199, 200, 209, 211, 471, 515], "valfmt": 357, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 103, 105, 121, 122, 125, 138, 159, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 297, 315, 367, 368, 377, 381, 384, 385, 394, 413, 421, 430, 439, 442, 468, 470, 471, 474, 479, 501, 503, 508, 562], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "validate_al": 395, "validate_assign": [16, 84, 103, 122, 395], "validate_default": [16, 84, 103, 122], "validate_loc": 395, "validate_zenith_angl": 395, "validationerror": [16, 84, 103, 122, 395], "valle": 38, "valleespir": 493, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 94, 98, 99, 100, 101, 103, 104, 108, 109, 111, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 163, 167, 173, 174, 176, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 278, 279, 281, 282, 284, 285, 286, 297, 301, 309, 310, 324, 327, 336, 339, 354, 357, 358, 359, 369, 371, 374, 379, 380, 382, 384, 386, 388, 391, 392, 395, 410, 413, 419, 430, 433, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 478, 479, 480, 481, 487, 488, 489, 491, 495, 496, 497, 501, 503, 507, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 563, 564, 565, 566], "value_rang": 90, "value_scan": 278, "valueerror": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 87, 90, 91, 99, 103, 122, 218, 240, 368, 382, 395], "values_equ": [87, 90], "values_err": 463, "values_scal": [141, 142, 143, 196, 200, 232, 263, 267, 268, 309, 431, 433, 455, 469], "vanilla": [87, 90], "var": [287, 400, 402], "vari": [68, 102, 107, 128, 155, 205, 309, 336, 380, 382, 383, 393, 413, 416, 436, 438, 447, 452, 453, 455, 464, 470, 474, 476, 479, 483, 499, 501, 508, 511, 560], "variability_amplitud": 459, "variability_amplitude_100": 459, "variability_amplitude_error": 459, "variability_amplitude_signific": 459, "variability_estim": [436, 459, 464], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 103, 122, 132, 200, 279, 281, 284, 285, 286, 287, 293, 308, 334, 368, 369, 371, 381, 383, 384, 398, 400, 402, 408, 409, 425, 426, 427, 433, 434, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 483, 487, 488, 489, 508, 563, 564, 565], "varianc": [95, 133, 134, 286, 287, 296, 383, 434, 475, 510], "variant": 398, "variat": [132, 233, 286, 374, 384, 437, 459, 469, 470, 513, 565], "varieti": [379, 561], "variou": [118, 124, 125, 128, 129, 131, 137, 368, 374, 378, 380, 383, 392, 395, 398, 400, 419, 420, 434, 438, 440, 443, 446, 451, 453, 460, 468, 487, 499, 503, 561, 567], "vast": [385, 421], "vaughan": [287, 459], "vaughan2003": 287, "ve": [368, 369, 371, 563], "vector": [185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 471, 507, 515], "vega": 428, "vel": 463, "vel_di": [45, 493], "vela": [66, 407, 440, 463, 489], "veloc": [31, 32, 37, 45, 49, 301, 304], "ver": 471, "verbos": [11, 82, 369, 391, 563, 565], "veri": [63, 87, 90, 136, 205, 358, 367, 368, 369, 370, 373, 374, 379, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 395, 398, 429, 437, 438, 445, 459, 466, 468, 471, 476, 479, 489, 499, 503, 516, 525, 526, 560, 562, 563, 564], "verif": [99, 218, 240, 335, 451, 479], "verifi": [209, 211, 230, 277, 368, 381, 466, 503], "verifywarn": 503, "verita": [96, 400, 405, 479], "versa": 186, "version": [11, 78, 83, 85, 87, 88, 90, 123, 124, 125, 128, 175, 208, 210, 367, 369, 371, 372, 375, 376, 377, 378, 382, 385, 388, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 412, 413, 418, 420, 421, 423, 426, 427, 428, 430, 431, 433, 434, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 501, 563], "versu": [141, 147, 277, 279, 281, 478, 497], "vert": 247, "vertex": 382, "vhe": [439, 491], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 90, 102, 107, 188, 193, 203, 367, 369, 371, 376, 380, 382, 383, 384, 385, 386, 387, 389, 391, 394, 395, 396, 397, 398, 400, 401, 408, 416, 424, 426, 427, 428, 432, 433, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 485, 487, 488, 489, 503, 507, 512, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 563, 567], "viabil": 395, "vice": 186, "victor": 423, "view": [83, 87, 90, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 156, 158, 159, 164, 187, 188, 190, 194, 196, 199, 200, 226, 299, 303, 355, 368, 382, 409, 414, 419, 421, 428, 429, 442, 444, 448, 450, 454, 467, 469, 470, 472, 478, 479, 503, 505, 506, 507, 508, 509, 510, 512, 562], "vika": 419, "vin\u00edciu": 426, "viridi": [444, 465], "virtual": [371, 398, 400, 401, 402, 563], "visibl": [87, 90, 358, 359, 376, 419, 437, 454, 480, 488, 489, 562], "vision": 373, "visit": 455, "visual": [6, 188, 200, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 382, 414, 415, 433, 434, 442, 444, 448, 450, 452, 455, 468, 469, 475, 480, 481, 488, 489, 503, 512, 517, 520, 561], "visualis": [365, 380, 382, 389, 415, 430, 444, 446, 469, 474, 476, 478, 503], "vline": [497, 520, 521], "vmax": [101, 104, 108, 109, 358, 359, 447, 450, 452, 458, 467, 471, 472, 479, 480, 487, 488, 512], "vmin": [101, 104, 108, 109, 358, 359, 446, 450, 458, 467, 471, 472, 479, 480, 487, 488, 512], "volum": [27, 191, 195, 198], "vorokh": [424, 425], "voruganti": [426, 427], "vstack": [83, 86, 381], "vuillaum": [394, 427], "vx": [301, 304, 393], "vy": [301, 304], "vz": [301, 304], "w": [26, 31, 49, 86, 184, 197, 294, 369, 393, 446, 448, 456, 465, 470, 474, 476, 503, 512, 564, 566], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 92, 93, 101, 103, 116, 122, 124, 125, 128, 131, 163, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 361, 368, 371, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 408, 411, 412, 413, 414, 415, 416, 423, 427, 428, 429, 430, 431, 432, 433, 438, 440, 442, 448, 450, 452, 470, 476, 478, 479, 480, 481, 489, 563], "wagner": 459, "wai": [33, 38, 83, 87, 90, 192, 280, 321, 327, 367, 368, 369, 371, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 388, 389, 392, 394, 400, 401, 402, 404, 407, 411, 427, 428, 440, 442, 444, 447, 450, 459, 466, 467, 468, 470, 471, 472, 473, 475, 478, 479, 480, 481, 483, 493, 500, 502, 503, 507, 516, 561, 563, 565], "wait": [368, 397, 398], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 103, 106, 122, 144, 170, 195, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 368, 370, 371, 373, 374, 375, 378, 382, 383, 384, 386, 387, 388, 398, 399, 400, 401, 402, 404, 405, 408, 428, 439, 442, 443, 444, 445, 447, 454, 455, 458, 460, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 487, 488, 489, 507, 560, 563, 564, 565, 566, 567], "ward": 295, "warn": [11, 16, 26, 82, 84, 87, 90, 103, 122, 188, 208, 209, 210, 211, 263, 264, 265, 267, 354, 393, 398, 410, 427, 432, 433, 434, 437, 445, 446, 447, 450, 451, 452, 454, 455, 458, 462, 463, 478, 479, 503, 527, 535, 538, 563], "warn_miss": 87, "warn_with_traceback": 368, "wasn": [375, 428], "watch": [479, 567], "water": [400, 480], "watson": 409, "wavelength": 387, "wavelet": [407, 425], "wc": [13, 16, 83, 101, 104, 108, 125, 162, 170, 171, 175, 186, 187, 188, 190, 195, 196, 198, 199, 200, 215, 218, 219, 227, 230, 240, 242, 252, 253, 257, 263, 267, 330, 363, 368, 374, 382, 387, 409, 410, 411, 413, 419, 427, 428, 432, 434, 442, 443, 446, 447, 448, 450, 452, 456, 460, 463, 465, 467, 469, 470, 472, 473, 474, 479, 487, 488, 489, 512, 515, 520, 521, 522, 527], "wcda": [57, 70], "wcs_geom": [195, 218, 240, 471, 516], "wcs_geom_3d": 471, "wcs_geom_cel": 471, "wcs_map": [199, 200, 361], "wcs_tile": [186, 188], "wcsax": [101, 104, 108, 109, 188, 195, 196, 200, 218, 240, 363, 365, 450, 471, 489, 519, 523, 524, 525], "wcsconfig": 16, "wcsgeom": [23, 83, 101, 104, 108, 109, 110, 112, 114, 120, 121, 131, 146, 155, 157, 167, 180, 181, 185, 186, 195, 199, 200, 214, 215, 219, 227, 230, 242, 244, 252, 253, 257, 263, 267, 369, 374, 382, 409, 412, 413, 414, 419, 432, 434, 442, 447, 452, 454, 455, 456, 458, 463, 465, 467, 469, 470, 471, 472, 474, 479, 480, 481, 488, 489, 499, 501, 510, 512, 513, 516, 519, 521, 522, 523, 524], "wcslib": 368, "wcsmap": [187, 188, 190, 200, 430], "wcsndmap": [101, 104, 110, 114, 116, 131, 136, 155, 157, 160, 162, 164, 169, 170, 171, 172, 175, 180, 181, 186, 187, 188, 190, 196, 198, 199, 201, 202, 218, 240, 255, 263, 355, 361, 363, 374, 412, 413, 414, 416, 419, 421, 428, 430, 433, 434, 446, 447, 456, 465, 467, 470, 471, 479, 489, 499, 501, 509, 512], "wcsprm": 527, "wcsshape": 471, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 90, 94, 100, 169, 195, 198, 208, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 271, 343, 368, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 404, 407, 408, 409, 410, 415, 419, 421, 426, 427, 428, 429, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 485, 487, 488, 489, 500, 507, 508, 510, 512, 515, 526, 529, 539, 560, 563, 564, 565, 566, 567], "weak": [387, 476], "weaker": 277, "weakli": 472, "web": [87, 90, 376, 394, 397, 398, 404, 405, 419, 427, 466], "webpag": [370, 376, 388, 394, 397, 427, 430], "wedg": 382, "week": [371, 376, 386, 388, 393, 397], "weekli": [374, 377, 381, 382, 460], "wegen": [427, 428], "weigh": [157, 160, 476], "weight": [67, 145, 146, 152, 155, 157, 160, 186, 187, 188, 190, 195, 196, 198, 199, 200, 265, 396, 429, 433, 453, 476, 499, 515], "weighted_chi2_paramet": 453, "weighted_kernel": 155, "welcom": [373, 382, 479], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 90, 104, 109, 113, 115, 120, 121, 129, 186, 190, 192, 196, 198, 208, 212, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 358, 359, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 404, 405, 408, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 427, 428, 429, 433, 434, 438, 439, 445, 448, 453, 455, 460, 462, 467, 468, 469, 470, 471, 472, 474, 478, 479, 483, 487, 488, 489, 499, 500, 501, 512, 515, 516, 560, 561, 563, 565], "went": 408, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 103, 122, 132, 285, 368, 373, 374, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 391, 393, 396, 398, 408, 411, 412, 413, 414, 415, 416, 419, 422, 427, 428, 431, 451, 463, 472, 476, 478, 566], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 271, 327, 369, 374, 382, 385, 387, 388, 395, 398, 406, 456, 465, 466, 468, 478, 479, 483, 488, 491, 499, 516, 548, 563, 564, 567], "whatev": [382, 384, 385, 563], "whatsnew": 397, "wheel": 385, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 120, 121, 122, 123, 135, 145, 146, 152, 157, 159, 160, 170, 173, 187, 188, 190, 192, 194, 196, 199, 200, 205, 206, 212, 213, 216, 218, 220, 222, 223, 224, 228, 232, 234, 235, 237, 240, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 267, 268, 309, 367, 368, 369, 371, 373, 374, 375, 378, 380, 382, 383, 385, 388, 393, 394, 395, 396, 401, 413, 421, 422, 427, 429, 432, 433, 434, 438, 444, 448, 452, 455, 456, 460, 461, 463, 466, 468, 470, 471, 474, 475, 478, 479, 499, 501, 503, 508, 510, 514, 515, 562, 564, 565, 566, 567], "whenev": [87, 90], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 103, 121, 122, 123, 126, 131, 144, 145, 146, 152, 157, 160, 162, 173, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 282, 285, 288, 289, 297, 333, 369, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 395, 396, 398, 400, 402, 404, 410, 422, 428, 437, 442, 447, 454, 455, 466, 470, 471, 472, 474, 476, 478, 479, 480, 489, 491, 499, 500, 503, 508, 515, 520, 521, 522, 525, 526, 529, 562, 563, 564, 565, 566, 567], "wherea": [374, 382, 385, 563], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 99, 101, 103, 104, 106, 108, 109, 121, 122, 123, 124, 131, 141, 142, 143, 144, 147, 148, 149, 151, 154, 156, 158, 159, 173, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 205, 208, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 297, 306, 335, 337, 365, 373, 375, 382, 385, 387, 388, 395, 433, 445, 458, 470, 471, 489, 515, 564, 565], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 103, 104, 106, 108, 109, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 141, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 167, 168, 173, 174, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 205, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 230, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 271, 277, 279, 280, 281, 285, 286, 287, 293, 295, 309, 319, 329, 330, 346, 355, 357, 362, 364, 367, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 403, 405, 409, 410, 411, 413, 414, 415, 416, 419, 422, 428, 430, 433, 437, 438, 439, 442, 445, 446, 447, 448, 450, 453, 454, 455, 456, 459, 460, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 487, 488, 489, 493, 494, 499, 500, 501, 503, 505, 506, 507, 509, 510, 512, 514, 515, 516, 517, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "whichev": [186, 187, 188], "while": [87, 90, 104, 187, 188, 190, 192, 196, 199, 200, 368, 371, 373, 374, 375, 377, 380, 381, 383, 387, 389, 390, 392, 393, 394, 397, 398, 400, 437, 442, 444, 447, 455, 462, 463, 467, 469, 470, 471, 473, 474, 499, 501, 503, 514, 516, 563], "whilst": [369, 475, 483], "whippl": 96, "whirlwind": 483, "white": [286, 357, 358, 452, 463, 468, 473, 491, 516], "whitespac": 315, "who": [394, 465, 491], "whole": [94, 116, 164, 167, 174, 177, 178, 180, 181, 186, 187, 188, 190, 199, 200, 241, 270, 279, 281, 368, 374, 380, 383, 394, 439, 442, 450, 455, 460, 463, 467, 474, 479, 481, 560], "whose": [394, 398, 455, 509, 521], "why": [368, 369, 373, 375, 382, 468, 516], "wide": [375, 394, 395, 409, 428, 440, 451, 562], "wider": [461, 472, 510], "widget": [187, 188, 190, 196, 199, 200, 450, 458, 471, 487, 488], "width": [16, 27, 68, 83, 87, 90, 101, 104, 108, 109, 110, 111, 113, 114, 115, 116, 126, 131, 144, 145, 146, 149, 152, 155, 157, 160, 162, 167, 172, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 215, 218, 219, 227, 229, 230, 240, 242, 252, 253, 255, 257, 263, 265, 267, 358, 359, 384, 391, 429, 443, 444, 447, 448, 450, 452, 453, 454, 455, 456, 458, 460, 463, 465, 466, 467, 469, 470, 471, 472, 474, 479, 480, 487, 488, 489, 510, 512, 513, 514, 515, 516, 520, 521, 522, 524, 525, 526], "width_err": 466, "width_error": 68, "width_min": 195, "width_pix": [186, 187, 188], "widthconfig": 16, "wigf_1kk": 438, "wiki": [34, 83, 88, 419, 478], "wikipedia": [34, 83, 88, 326, 382, 386], "wilei": 138, "wilk": [277, 501, 565], "willing": 371, "wind": [50, 448, 453, 474, 494], "window": [111, 367, 368, 375, 385, 398, 399, 400, 402, 408, 424, 428, 446, 466, 562, 563, 565], "wise": [19, 20, 26, 87, 90, 136, 137, 188, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 396, 421, 448, 450, 499], "wish": [195, 371, 386, 453, 468], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [378, 379, 380, 383, 390, 392], "withdrawn": [372, 373, 378, 379, 380, 383, 390, 392], "within": [124, 127, 136, 186, 200, 217, 218, 219, 225, 229, 230, 231, 232, 233, 240, 248, 252, 254, 255, 266, 269, 367, 368, 369, 373, 377, 382, 384, 385, 386, 387, 388, 391, 393, 394, 396, 398, 399, 400, 402, 422, 425, 427, 431, 433, 443, 444, 450, 453, 460, 461, 462, 466, 469, 470, 471, 474, 475, 479, 483, 489, 499, 502, 503, 562], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 147, 185, 186, 191, 195, 198, 365, 368, 371, 373, 376, 378, 382, 383, 384, 385, 387, 392, 398, 409, 410, 414, 443, 446, 450, 451, 465, 470, 471, 472, 487, 503, 514, 515, 516, 558, 563, 565], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 465], "wo": 463, "wobbl": [94, 462, 478], "wobbleregionfind": 421, "wobbleregionsfind": 444, "wolfram": [324, 325], "women": 424, "won": [87, 90, 116, 120, 124, 128, 131, 340, 393, 450, 471, 478, 566], "wong": 411, "wood": [375, 425, 427, 428], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 503], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 90, 99, 123, 197, 333, 367, 368, 369, 371, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 393, 394, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 420, 423, 424, 425, 426, 427, 428, 429, 430, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489, 499, 503, 513, 515, 527, 529, 535, 538, 551, 557, 558, 563], "workaround": 385, "workflow": [371, 376, 377, 384, 389, 393, 398, 413, 443, 448, 483, 487, 488, 504], "workshop": 377, "workspac": 371, "world": [83, 198, 218, 240, 368, 374, 452, 489, 515], "worst": 371, "worth": [368, 491], "would": [16, 84, 87, 90, 94, 103, 122, 187, 188, 190, 196, 199, 200, 368, 371, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 410, 419, 440, 442, 445, 446, 458, 468, 471, 472, 474, 476, 479, 516], "wouldn": 382, "wp": [397, 478], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 192, 251, 305, 382, 412], "wrap_at": 379, "wrap_coord": 192, "wrapper": [56, 241, 251, 309, 382, 383, 410, 413, 491, 503], "write": [11, 15, 16, 26, 82, 83, 86, 87, 88, 90, 99, 100, 101, 104, 106, 108, 109, 121, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 187, 188, 190, 194, 196, 199, 200, 206, 218, 232, 240, 263, 264, 265, 266, 267, 337, 346, 369, 371, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 394, 395, 396, 398, 404, 407, 413, 416, 421, 423, 426, 427, 428, 429, 434, 437, 442, 450, 451, 454, 456, 469, 473, 474, 478, 479, 485, 487, 488, 503, 508, 564, 566], "write_arf": 106, "write_bkg": 106, "write_covari": [15, 99, 218, 240], "write_dataset": 15, "write_ds9": 474, "write_model": 15, "write_pha": 106, "write_rmf": 106, "writeabl": 396, "writer": [87, 90, 388, 395], "writeto": [86, 141, 142, 143, 147, 148, 149, 151, 154, 156, 158, 159, 454], "written": [83, 88, 99, 100, 101, 104, 106, 108, 109, 121, 123, 145, 146, 152, 157, 160, 187, 188, 190, 194, 196, 199, 200, 202, 368, 369, 371, 373, 377, 378, 388, 394, 396, 431, 437, 455, 473, 476, 491, 499, 500, 503, 516, 562, 567], "wrong": [368, 417, 431, 432, 433], "wrote": 394, "wrt": [83, 157, 160, 368, 386, 462, 558], "wstat": [104, 109, 290, 291, 380, 407, 425, 426, 438, 442, 443, 445, 448, 452, 463, 467, 476, 499, 562], "wstatcountsstatist": [463, 565], "wt": [26, 465], "wun": 411, "www": [26, 67, 87, 90, 138, 388, 478], "wyatt": [407, 562], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 90, 101, 108, 126, 136, 137, 138, 142, 192, 196, 197, 205, 208, 210, 212, 215, 216, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 259, 260, 261, 266, 267, 280, 286, 287, 289, 300, 301, 302, 304, 308, 310, 315, 324, 357, 360, 361, 368, 369, 373, 375, 376, 377, 382, 393, 397, 440, 445, 446, 452, 455, 459, 463, 466, 468, 469, 471, 476, 479, 489, 497, 503, 520, 521, 563, 565], "x27": 469, "x86_64": [437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "x_": 126, "x_0": [187, 188, 190, 196, 199, 200], "x_1": 309, "x_2": 309, "x_3": 309, "x_bkg": 463, "x_edg": 127, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [187, 188, 190, 196, 199, 200], "x_j": 126, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [126, 322, 324, 456], "x_min": [126, 322, 324, 456], "x_n": [187, 188, 190, 196, 199, 200], "x_r_0": 230, "x_ref": [126, 456], "x_sigma": 227, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [205, 468], "xarg": 368, "xaxi": 503, "xerr": [437, 476], "xf": 478, "xfail": 368, "xlabel": [369, 433, 448, 462, 468, 476, 479, 495, 496, 497, 520, 557], "xlim": [355, 450, 476, 479, 497], "xmax": [17, 18, 21, 22, 24, 25, 27, 196, 396], "xmin": [17, 18, 21, 22, 24, 25, 27, 196, 396], "xml": [377, 378, 379, 412, 426, 428, 478, 491], "xmltodict": [420, 478], "xref": 126, "xspec": [220, 268, 294, 426, 438, 564], "xunit": [444, 529], "xviii": 388, "xx": [379, 394], "xxx": [87, 90, 373, 394], "xxx_by_coord": 471, "xxxx": 503, "xy": [442, 452, 456, 520], "xy_posit": [33, 34, 38], "xytext": 520, "xyz": 397, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 90, 136, 137, 142, 192, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 300, 301, 302, 304, 308, 310, 360, 368, 382, 393, 433, 437, 446, 452, 455, 468, 476, 497, 503], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [205, 468], "yaml": [11, 15, 16, 20, 26, 84, 98, 99, 100, 101, 103, 104, 108, 109, 121, 122, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 277, 335, 337, 367, 376, 377, 379, 380, 381, 384, 385, 390, 395, 396, 398, 399, 411, 412, 413, 416, 421, 430, 434, 437, 439, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 488, 489, 502, 560, 561, 562, 563], "yaml_str": [218, 240, 443], "yaxi": [440, 503], "ye": 398, "year": [45, 61, 65, 78, 368, 373, 375, 376, 378, 385, 388, 389, 393, 395, 398, 425, 427, 428, 451, 453, 466, 478, 495, 496, 497, 498], "yearli": [401, 426], "yellow": 358, "yerr": 463, "yet": [89, 367, 368, 371, 373, 375, 382, 385, 388, 389, 435, 440, 443, 487, 567], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 91, 187, 188, 190, 196, 199, 200, 333, 375, 381, 382, 387, 389, 391, 396, 472, 564, 565, 566], "yk04": [45, 48], "yk04b": 48, "ylabel": [369, 462, 468, 476, 479, 495, 496, 497, 520, 557], "ylim": [355, 438, 448, 476, 479, 495, 497, 536, 545, 546, 547], "ymax": [520, 521], "ymin": [520, 521], "yml": [371, 385, 397, 398, 399, 400, 402, 427], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 93, 100, 103, 106, 122, 123, 136, 142, 144, 147, 170, 187, 188, 190, 196, 199, 200, 205, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 270, 277, 367, 368, 369, 370, 371, 373, 375, 378, 382, 385, 386, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 419, 427, 428, 429, 438, 439, 440, 442, 443, 444, 445, 447, 448, 450, 452, 454, 455, 458, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 483, 487, 488, 489, 499, 500, 503, 506, 510, 514, 537, 560, 563, 564, 565, 566, 567], "your": [16, 19, 20, 26, 84, 98, 103, 122, 212, 213, 216, 220, 222, 223, 224, 228, 234, 235, 237, 241, 243, 245, 246, 247, 251, 256, 258, 259, 260, 261, 264, 268, 367, 368, 369, 371, 373, 375, 398, 399, 400, 401, 402, 404, 405, 408, 409, 410, 413, 414, 419, 428, 429, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 489, 498, 503, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 565], "yourself": [563, 564], "yr": [45, 52, 53, 493, 495, 496, 497], "yscale": [448, 555], "yt": 368, "yu": 411, "yunit": [442, 444, 465, 466, 479, 540], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 427, "yy": 394, "yyyi": 394, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 90, 300, 301, 304, 393, 394, 465, 493, 529], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 423, "zanin": [427, 428], "zd": 83, "zen": 475, "zen_pnt": 475, "zenith": [437, 451, 475, 478, 479, 480, 508], "zenith_angl": [83, 395, 479, 489], "zenodo": [394, 421], "zero": [52, 53, 67, 87, 90, 99, 101, 104, 108, 109, 131, 136, 144, 145, 146, 149, 152, 157, 173, 187, 188, 190, 196, 199, 200, 244, 265, 267, 268, 309, 315, 327, 368, 412, 415, 430, 466, 470, 471, 476, 566], "zhao": [27, 434], "zhen": 138, "zip": [383, 396, 397, 442, 461, 465, 468, 473, 483, 497, 517, 522, 526, 539], "zkrvdsah": 445, "zl": [26, 465], "zone": 463, "zsh": 369, "zt": [26, 465], "z\u00e9": 426, "\u00e0": 425, "\u0261\u00e6m\u0259pa\u026a": 503, "\u03b3": [132, 491, 562], "\u03c3": 453}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 443, 455, 481, 487], "0": [377, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "1": [373, 377, 396, 406, 407, 414, 415, 417, 422, 430, 431, 432, 433, 434, 435, 476], "10": [382, 406, 408], "10th": 430, "11": [383, 406, 409], "12": [384, 406, 410], "12th": 421, "13": [385, 406, 411, 420, 423], "13th": 433, "14": [386, 406, 412], "14th": 431, "15": [406, 413], "16": [387, 406, 414], "16th": 422, "17": [406, 415], "18": [388, 406, 416, 417, 418], "19": [389, 406, 419], "19th": 418, "1d": [443, 445, 451, 460, 461, 483], "1dc": 478, "2": [374, 375, 396, 406, 418, 420, 432, 434, 476, 542], "20": [390, 406, 421, 422, 424], "2014": 407, "2015": [420, 423], "2016": [424, 425], "2017": 426, "2018": [427, 428, 429], "2019": [408, 409, 410, 411, 412, 413], "2020": [414, 415, 416, 417, 418], "2021": 419, "2022": [421, 422, 430], "2023": [431, 432, 433], "2024": 434, "21": 391, "22": [392, 425], "22nd": 419, "23": [393, 428], "24": 394, "25": [395, 407], "26": [396, 411], "28": [408, 426, 427], "29": [409, 429], "29th": 434, "2d": [447, 483], "3": [375, 396, 406, 413, 423, 435], "30": [410, 412], "32": 368, "3955": 396, "3d": [450, 451, 458, 460, 483], "3fgl": [534, 545], "3fhl": 451, "4": [376, 406, 424], "4122": 396, "4fgl": [546, 547], "4th": 416, "5": [377, 406, 425], "6": [378, 406, 426], "64": 368, "6th": [417, 432], "7": [375, 379, 406, 427], "8": [380, 406, 428], "9": [381, 406, 429], "A": 442, "As": 509, "In": 369, "ON": [439, 444, 451], "On": 445, "The": [374, 398, 451, 453, 468, 476, 500, 512], "To": [368, 369, 388, 503], "about": 476, "abov": 453, "absolute_tim": 349, "absorpt": [391, 438, 529], "abstract": [373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "accept": 371, "access": [467, 471, 480, 500], "accessor": 515, "account": 438, "action": [368, 388], "ad": 471, "adapt": 446, "adaptiveringbackgroundmak": 162, "add": [379, 473], "add_colorbar": 356, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [391, 396, 509, 561], "aeff_2d": 505, "against": 444, "aim": 473, "alia": 391, "all": 461, "along": 395, "altern": [376, 379, 381, 382, 383, 384, 385, 386, 388, 389, 392, 395], "amplitud": [396, 476], "an": [368, 437, 454, 455, 467, 472], "anaconda": 401, "analysi": [0, 11, 15, 374, 377, 437, 439, 442, 443, 444, 445, 450, 451, 452, 460, 463, 483, 487, 499, 502, 561], "analysisconfig": 16, "angl": [505, 506, 507, 509], "angular": 516, "annihil": 465, "annotate_heatmap": 357, "api": [6, 368, 369, 390, 392, 395, 396, 430, 433, 434, 483, 488], "apply_edisp": [110, 114], "approach": [383, 439, 440, 443, 445, 446, 447, 448, 451, 454, 455, 456, 458, 459, 460, 461, 462, 468, 472, 473, 475, 487, 488], "apr": [415, 420, 424, 426], "arbitrari": 395, "area": [469, 478, 505], "argument": [368, 382], "arm": 493, "asmoothmapestim": 116, "assert": 368, "assert_quantity_allclos": 343, "assert_skycoord_allclos": 344, "assert_time_allclos": 345, "assess": [450, 468], "assign": [461, 473], "astro": [1, 491, 494], "astronomi": 383, "astrophys": [1, 492, 493, 494], "astropi": [368, 393], "asymmetr": 469, "attribut": [368, 369, 379], "aug": [407, 423], "author": 394, "authorship": 394, "avail": 466, "ax": [471, 516], "axi": [368, 508], "backend_default": 312, "background": [379, 383, 387, 390, 396, 448, 453, 454, 470, 473, 478, 479, 487, 506, 510, 511, 512, 513, 564], "background2d": 141, "background3d": 142, "backgroundirf": 143, "backgroundirfmodel": 379, "backgroundmodel": 379, "backport": 368, "base": [392, 395, 514], "basic": [452, 471], "bayesian": 459, "between": 390, "bin": [383, 437, 453, 516], "binder": 398, "bit": 368, "bkg_2d": 506, "bkg_3d": 506, "block": 459, "boundari": 472, "branch": 397, "break": 368, "broken": [369, 530, 544], "brokenpowerlawspectralmodel": 212, "bsd": 368, "bug": [421, 430, 433, 434], "bugfix": 397, "build": [369, 371, 398, 460, 461], "built": 560, "bundl": 368, "burkertprofil": 17, "butterfli": 488, "call": 379, "candid": [397, 446], "caplog": 368, "cartesian": 298, "case": [374, 378, 396, 566], "casebattacharya1998": 28, "cash": [282, 564, 565], "cash_sum_cython": 283, "cashcountsstatist": 279, "catalog": [2, 466, 472, 473, 489, 498], "catalog_registri": 55, "caveat": 564, "cell": 368, "certif": 371, "cff": 394, "chain": [442, 444], "chang": [368, 389, 430, 433, 434], "changelog": 388, "character": 459, "check": [11, 368, 369, 403, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "checker": 342, "chi": 453, "choos": 369, "citat": 394, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 368, 369, 378, 379, 392, 395, 488, 509, 565], "clean": 387, "cli": 563, "click": 368, "clobber": 368, "clumpi": 491, "cluster": [13, 475], "code": [368, 369, 374, 377, 398], "codemeta": 394, "collect": 394, "colormap": 568, "colormap_hess": 358, "colormap_milagro": 359, "combin": [473, 500], "command": [11, 368, 563], "compar": [444, 460], "compound": [474, 531], "compound_region_to_region": 328, "compoundspectralmodel": 213, "comput": [436, 437, 441, 442, 443, 448, 449, 452, 457, 464, 468, 477, 482, 484, 486, 488, 490, 518, 528, 549, 559], "compute_chisq": 284, "compute_flux_doubl": 285, "compute_fpp": 286, "compute_fvar": 287, "compute_lightcurve_doublingtim": 132, "compute_lightcurve_fpp": 133, "compute_lightcurve_fvar": 134, "conda": 399, "confer": 394, "confid": 468, "config": [11, 447, 448, 563], "configur": [443, 450, 456, 460, 487, 561], "constant": [519, 532, 550], "constantfluxspatialmodel": 214, "constantspatialmodel": 215, "constantspectralmodel": 216, "constanttemporalmodel": 217, "contain": 395, "containment_radiu": 201, "containment_region": 202, "content": [467, 516], "context": [439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 453, 454, 456, 458, 459, 460, 461, 462, 472, 475, 476, 487, 488], "contigu": 471, "continu": 398, "contour": 468, "contribut": [371, 394, 473], "contributor": [394, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "conveni": 380, "convent": 368, "convers": 368, "convert": 368, "coordin": [13, 368, 379, 506, 516], "correl": 448, "count": [473, 479, 499, 565], "covari": [203, 468], "covarianceresult": 204, "creat": [439, 442, 447, 448, 455, 467, 469, 471, 472, 488, 516], "create_cosmic_ray_spectral_model": 270, "create_crab_spectral_model": 271, "create_fermi_isotropic_diffuse_model": 272, "create_map_dataset_from_observ": 111, "create_map_dataset_geom": 112, "creation": [439, 443, 461], "cstat": 288, "cta": [378, 478], "cube": [374, 471, 483], "cumul": 439, "current": 393, "curv": [383, 460, 461, 462, 557, 558], "custom": [474, 476, 560], "cut": [440, 444], "cutoff": [533, 534, 535, 545, 546, 547], "cutout": 471, "cycl": 393, "cython": [393, 398], "d_sun_to_galactic_cent": 297, "dark": [465, 491], "darkmatt": [1, 491], "darkmatterannihilationspectralmodel": [19, 491], "darkmatterdecayspectralmodel": 20, "data": [3, 8, 368, 374, 376, 377, 383, 395, 398, 438, 439, 442, 443, 444, 450, 451, 453, 456, 460, 461, 463, 467, 470, 471, 480, 483, 487, 488, 489, 500, 511, 563, 564], "dataflow": 395, "dataset": [4, 11, 98, 99, 368, 377, 380, 389, 390, 395, 437, 439, 443, 444, 447, 448, 450, 451, 455, 460, 461, 462, 467, 468, 470, 472, 473, 476, 480, 487, 488, 499, 502], "dataset_registri": 97, "datasetmodel": 218, "datasetsmak": 163, "datastor": [82, 478, 488, 500], "dco": [371, 394], "deal": 369, "dec": 413, "decai": 465, "decemb": 432, "decis": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "default": 379, "defin": [437, 439, 442, 444, 452, 454, 455, 460, 461, 472, 488, 516], "definit": [394, 460, 511], "depend": [367, 385, 391, 421, 444, 453, 455, 474], "deprec": [368, 393], "deriv": 566, "detail": [375, 450], "detect": [389, 446, 452, 508], "detector": 506, "develop": [368, 370, 371, 375], "diagram": 378, "differ": [451, 471, 567], "diffus": 479, "dilat": 472, "direct": 444, "discuss": 383, "disk": [443, 455, 487, 488, 520], "diskspatialmodel": 219, "dispers": [469, 478, 479, 507], "dissolv": 387, "distribut": [385, 481, 493], "dl3": [3, 451, 481, 500, 508, 511], "dl4": [469, 499, 501, 511, 515, 560], "dl5": [501, 560], "dl6": 501, "dmprofil": 18, "do": 368, "doc": 398, "docstr": 369, "document": [369, 371, 377, 388, 434], "doubl": 459, "download": [11, 398], "downsampl": 516, "dr1": [481, 547], "dr2": 547, "dr3": 546, "draw": 320, "driven": 563, "drop": 375, "due": 438, "durat": 470, "e": 481, "each": 453, "earli": 371, "earth_location_from_dict": 307, "ebl": [438, 529], "ebl_data_builtin": 221, "eblabsorptionnormspectralmodel": 220, "edg": 501, "edisp": 469, "edisp_2d": 507, "edispkernel": 144, "edispkernelmap": [145, 508], "edispmap": 146, "effect": [469, 470, 478, 505], "effectiveareatable2d": 147, "einastoprofil": 21, "elaps": 567, "empti": 467, "encourag": 476, "end": 368, "energi": [391, 437, 444, 453, 455, 469, 472, 474, 478, 479, 501, 505, 506, 507, 509], "energydependentmorphologyestim": 118, "energydependentmultigausspsf": 148, "energydispersion2d": 149, "environ": 399, "eros": 472, "error": [468, 565], "estim": [5, 119, 386, 389, 392, 395, 443, 446, 453, 456, 459, 460, 470, 501, 511, 512, 565], "estimate_exposure_reco_energi": 135, "estimator_registri": 117, "evalu": [379, 380, 381], "event": [377, 381, 454, 455, 463, 471, 478, 479, 481, 489, 500, 508], "eventlist": [83, 500], "eventlistmetadata": 84, "evolut": 455, "exampl": [398, 476, 491, 498, 499, 500, 501, 502, 508, 510, 511, 512, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 560, 564], "excess": [392, 439, 448, 459, 565], "excessmapestim": 120, "exclus": [442, 443, 448, 472, 487], "execut": 563, "exemplari": 396, "exercis": [437, 440, 442, 445, 450, 452, 454, 455, 462, 478, 479, 480, 481, 489], "exist": 374, "expcutoffpowerlaw3fglspectralmodel": 222, "expcutoffpowerlawnormspectralmodel": 223, "expcutoffpowerlawspectralmodel": 224, "expdecai": 551, "expdecaytemporalmodel": 225, "expect": 508, "explor": [439, 443, 452, 483], "exponenti": [29, 440, 533, 534, 535, 545, 546, 547], "expos": 379, "exposur": [469, 479], "extend": [439, 454], "extens": [369, 438], "extern": 368, "extra": 398, "extract": [448, 460, 461, 462], "extrapol": 368, "f_cash_root_cython": 289, "factor": 465, "factori": 471, "factoris": 508, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 396, "featur": [14, 393, 397, 430, 433, 434], "feb": [414, 427], "februari": 434, "fermi": [451, 479], "fermist": 491, "file": [369, 394, 443, 447, 448, 451, 478, 487, 500, 516], "fill": [471, 516], "filter": 461, "final": [373, 397, 443, 566], "find_peak": 136, "find_peaks_in_flux_map": 137, "finder": 512, "first": [397, 443], "fit": [10, 13, 205, 377, 383, 438, 439, 440, 442, 443, 444, 447, 450, 451, 452, 458, 462, 468, 472, 476, 479, 487, 488, 516, 560, 564, 565, 566], "fitresult": 206, "fix": [368, 421, 430, 433, 434], "fixedpointinginfo": 85, "fixtur": 368, "flare": 461, "float": 368, "flux": [392, 396, 437, 438, 440, 442, 443, 451, 456, 465, 466, 487, 488, 489, 501], "fluxestim": 392, "fluxmap": [121, 392], "fluxmetadata": 122, "fluxpoint": 123, "fluxpointscollect": 392, "fluxpointsdataset": [100, 380, 467], "fluxpointsestim": [124, 501], "fluxprofileestim": 125, "fold": 379, "folder": 398, "follow": 389, "format": [368, 567], "formula": 566, "forward": 379, "found": 563, "fov": [470, 510], "fov_to_ski": 299, "fovalign": 150, "fovbackgroundmak": [164, 510], "fovbackgroundmodel": 226, "fraction": 459, "freez": [393, 397, 473], "from": [368, 461, 471, 472, 473, 516], "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 368, 369, 478, 505, 506, 507, 508, 509, 565, 567], "further": [383, 438, 564], "galact": [300, 479], "galactocentr": 493, "galleri": [368, 369, 517], "gamlik": 491, "gamma": [383, 465], "gammalib": 491, "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 368, 371, 374, 377, 385, 387, 388, 389, 393, 394, 395, 397, 398, 404, 405, 469, 478, 479, 480, 481, 491, 494, 498, 499, 500, 501, 502, 508, 510, 511, 512, 515, 560, 561, 567], "gaussian": [521, 522, 536, 552, 553], "gaussianspatialmodel": 227, "gaussianspectralmodel": 228, "gaussiantemporalmodel": 229, "gener": [368, 374, 378, 383, 394, 395, 501, 522, 553], "generalist": 392, "generalizedgaussianspatialmodel": 230, "generalizedgaussiantemporalmodel": 231, "geom": 185, "geometri": [439, 452, 460, 461, 471, 472, 487, 488, 514, 516], "get": [371, 388, 400, 438, 447, 448, 471, 492, 493, 494, 500, 515], "get_combined_significance_map": 138, "get_images_path": 333, "get_irfs_featur": 95, "get_random_st": 321, "get_rebinned_axi": 139, "get_wstat_gof_term": 290, "get_wstat_mu_bkg": 291, "github": 368, "given": 473, "global": 390, "glossari": 562, "good": 566, "gpl": 368, "group": 475, "gti": [86, 500], "guid": [370, 504], "guidelin": [369, 373, 374, 388], "h": 481, "halv": 459, "handl": [368, 377, 378, 379, 390, 394, 470, 567], "have": [376, 378, 383, 384, 392], "hawc": [451, 480], "hduindext": 87, "hduloc": 305, "healpix": 514, "help": 403, "helper": 380, "hess": 451, "hgp": 466, "hierarch": 475, "hierarchi": 395, "hierarchical_clust": 295, "high": [0, 5, 377, 384, 487, 502], "hli": 443, "how": [368, 369, 371, 388, 397, 471, 503], "hpxgeom": 186, "hpxmap": 187, "hpxndmap": [188, 515], "hstack_column": 338, "i": [368, 371, 373, 456], "idea": 378, "imag": [369, 374, 382, 387, 446, 452, 471, 483], "imageprofil": 126, "imageprofileestim": 127, "implement": [378, 379, 388, 394, 396, 474, 476], "import": [368, 458], "improv": [379, 391, 421, 430, 433, 434], "inbuilt": 469, "includ": [369, 476], "index": [471, 476, 500], "info": [11, 368], "inform": [394, 466, 476, 507], "input": [368, 395, 446], "inspect": 488, "instal": [388, 400, 401, 403], "instrument": [7, 451, 508], "integr": [13, 398, 437], "integrate_spectrum": 273, "interact": 390, "interest": 453, "interfac": [0, 377, 379, 384, 487, 502, 515], "interpol": [13, 368, 471], "interpolate_profil": 310, "interpolation_scal": 311, "interv": 461, "intrins": 438, "introduc": [379, 387, 389, 391, 392, 456], "introduct": [379, 382, 383, 385, 386, 388, 392, 394, 395, 437, 442, 444, 452, 463, 465, 466, 467, 470, 471, 478, 479, 483, 489, 491, 493, 494, 564], "inversecdfsampl": 319, "ipython": 404, "irf": [7, 151, 377, 395, 437, 467, 469, 478, 508], "irf_registri": 153, "irfmap": 152, "isothermalprofil": 22, "isotrop": 479, "issu": 403, "iter": 471, "j": 465, "jan": 408, "jfactori": 23, "joint": [450, 451, 499], "json": 394, "jul": 411, "june": [422, 433], "jupyt": [368, 404], "kernel": 469, "labelmapaxi": [189, 471], "lat": [451, 479], "law": [440, 530, 533, 534, 535, 541, 542, 543, 544, 545, 546, 547], "lazi": 380, "lazyfitsdata": 306, "lc": 460, "let": 455, "level": [0, 5, 374, 377, 384, 487, 488, 502], "li": 463, "licens": 368, "light": [383, 460, 461, 462, 558], "lightcurv": [383, 454, 459, 462, 466], "lightcurveestim": [128, 501], "lightcurvetemplatetemporalmodel": 232, "like": 454, "likelihood": 566, "limit": 378, "line": [11, 368, 563], "linear": 554, "lineartemporalmodel": 233, "link": 369, "list": [379, 380, 381, 382, 383, 384, 385, 454, 461, 466, 471, 472, 473, 474, 489, 500], "literatur": 444, "livetim": 470, "load": [380, 437, 438, 440, 442, 444, 466, 473], "load_irf_dict_from_fil": [161, 508], "locat": 368, "log": [11, 368, 440, 537, 538], "logparabolanormspectralmodel": 234, "logparabolaspectralmodel": 235, "logspir": 34, "long": 394, "loop": [439, 470, 488], "lorimer2006": 35, "low": [374, 488], "lt": 393, "ma": 463, "mai": [410, 421], "maintain": [375, 394], "mainten": 377, "major": 397, "make": [368, 371, 397, 452, 455, 463, 488], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 329, "make_counts_rad_max": 176, "make_edisp_kernel_map": 177, "make_edisp_map": 178, "make_effective_livetime_map": 179, "make_map_background_irf": 180, "make_map_exposure_true_energi": 181, "make_observation_time_map": 182, "make_orthogonal_rectangle_sky_region": 330, "make_path": 334, "make_psf_map": 183, "make_theta_squared_t": 184, "maker": [8, 166, 389, 395, 439, 461, 470, 487, 488, 510, 511, 512], "maker_registri": 165, "mamba": 401, "manag": [377, 401], "manual": [472, 475], "map": [9, 190, 194, 374, 377, 378, 446, 447, 448, 451, 452, 458, 463, 465, 469, 471, 472, 473, 485, 489, 501, 514, 515, 516], "mapax": 191, "mapaxi": 192, "mapcoord": [193, 515], "mapdataset": [101, 380, 450, 454, 467, 480, 499], "mapdataseteventsampl": [102, 381], "mapdatasetmak": [167, 511], "mapdatasetmetadata": 103, "mapdatasetonoff": [104, 380], "mappanelplott": 355, "mar": 409, "march": 431, "mask": [382, 442, 443, 448, 467, 472, 487], "materi": 394, "matter": [465, 491], "measur": 564, "meet": 377, "messag": 368, "met": 567, "metadata": [394, 395], "method": [369, 380, 381, 396, 459, 471, 501, 515], "method_default": 313, "method_kwargs_default": 314, "meyercrabspectralmodel": 237, "miniconda": 401, "minor": 389, "mission": 567, "model": [10, 238, 240, 377, 379, 387, 390, 391, 395, 396, 438, 439, 442, 443, 444, 447, 450, 451, 452, 454, 455, 460, 461, 462, 465, 466, 467, 468, 473, 474, 476, 478, 487, 488, 489, 493, 494, 495, 496, 497, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 564], "model_registri": 236, "modelbas": 239, "modif": 472, "modifi": [368, 471, 474], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 453, "morphologi": 474, "motion_since_birth": 301, "motiv": 396, "mpl_plot_check": 346, "multi": 451, "multipl": [454, 473, 476, 499], "multiprocessing_manag": 317, "n_jobs_default": 315, "naima": 539, "naimaspectralmodel": 241, "name": [368, 379, 508], "nebula": 496, "new": [368, 379, 383, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 461], "next": [440, 442, 443, 446, 452, 460, 478, 480, 481, 487, 489], "nfwprofil": 25, "night": 460, "non": [368, 471, 516], "norm": [391, 474, 523, 535, 538, 540, 543], "norm_bounds_cython": 292, "normal": [322, 487], "notat": 565, "note": [368, 406, 442, 564], "notebook": [11, 368, 376, 404], "nov": [416, 417, 418, 419, 425, 429], "novemb": 430, "now": 383, "nuisanc": 396, "number": [368, 393, 508], "numpi": 393, "o": 456, "object": [368, 369, 378, 390, 447, 448, 454, 455, 466, 475], "observ": [3, 88, 91, 377, 378, 438, 442, 443, 452, 454, 455, 460, 461, 470, 475, 487, 488], "observationeventsampl": 107, "observationfilt": 89, "observationseventssampl": 92, "observationt": 90, "observatory_loc": 96, "obtain": [437, 453, 462, 475], "off": [440, 442, 445, 451], "offset": [505, 506, 507, 509], "ogipdatasetread": 105, "ogipdatasetwrit": 106, "old": 398, "onto": 471, "open": 463, "oper": [471, 472], "optimizeresult": 207, "option": [367, 385, 468], "org": 398, "organ": [374, 383], "origin": [368, 371], "other": [368, 369, 378, 398, 401, 491], "outlin": 396, "outlook": [380, 381, 382, 384, 385, 387, 388, 389, 392], "output": 368, "over": 463, "overview": [388, 400, 453, 478, 510, 512, 513], "overwrit": 368, "own": 563, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 387, 389, 398, 401, 421, 483, 491, 492, 561], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 568, "paper": 377, "parabola": [440, 537, 538], "parallel": [13, 380], "paramet": [208, 209, 379, 391, 396, 443, 453, 468, 473, 474, 487], "parameterestim": 129, "parametr": 379, "parametricpsf": 158, "pdf": 323, "perform": [381, 439, 478, 488], "person": 394, "perspect": 375, "phase": [463, 557], "phasebackgroundmak": 168, "phasogram": 463, "piecewis": [523, 540], "piecewisenormspatialmodel": 242, "piecewisenormspectralmodel": 243, "pig": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "pip": 401, "pixel": [368, 382, 472], "plan": 375, "plot": [14, 368, 438, 442, 443, 446, 452, 453, 456, 471, 473, 488, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 568], "plot_contour_lin": 360, "plot_distribut": 361, "plot_heatmap": 362, "plot_map_rgb": 363, "plot_npred_sign": 364, "plot_spectrum_datasets_off_region": 365, "plot_theta_squared_t": 366, "png": 369, "point": [396, 437, 438, 440, 442, 443, 451, 452, 454, 459, 466, 478, 487, 488, 489, 501, 509, 524], "pointinginfo": 93, "pointingmod": 94, "pointspatialmodel": 244, "poisson": 564, "polar": 302, "polici": 394, "pool_kwargs_default": 316, "popul": [1, 493], "posit": [396, 476, 507], "possibl": 394, "post": 397, "power": [440, 530, 533, 534, 535, 541, 542, 543, 544, 545, 546, 547], "powerlaw": [440, 555], "powerlaw2spectralmodel": 245, "powerlawnormspectralmodel": 246, "powerlawspectralmodel": 247, "powerlawtemporalmodel": 248, "precis": 381, "predict": 499, "prepar": [383, 393, 437, 439, 455, 488], "prerequisit": [439, 440, 442, 443, 444, 445, 447, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 468, 472, 473, 476, 487, 488], "pretti": 466, "primaryflux": 26, "print": 466, "prior": [396, 476], "priorparamet": [210, 211], "produc": 480, "product": [465, 469], "profil": [438, 456, 465, 566], "project": [377, 398], "propag": 395, "propos": [376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 395, 439, 440, 443, 445, 446, 447, 448, 451, 454, 455, 456, 458, 459, 460, 461, 462, 468, 472, 473, 475, 487, 488], "psf": [469, 479, 509], "psf3d": 154, "psf_tabl": 509, "psfkernel": 155, "psfking": 156, "psfmap": [157, 469, 508], "public": 394, "pull": [368, 371, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "pulsar": [51, 463, 495, 496], "purpos": 373, "pwn": 50, "pydant": 395, "python": [368, 369, 375, 393, 404], "qualiti": [377, 398, 442, 444, 450, 468], "quantiti": [475, 501], "radial": 506, "radial_distribut": 48, "radmax2d": 159, "rai": [383, 465], "random": [13, 368], "rang": [470, 511], "read": [446, 451, 455, 456, 471, 472, 473, 516], "read_hermes_cub": [274, 276], "read_yaml": 335, "recommend": [400, 402], "reconstruct": 506, "recopsfmap": 160, "recursive_merge_dict": 336, "redshift": 438, "reduc": [4, 447, 448, 467, 487, 488], "reduct": [8, 377, 383, 439, 442, 443, 444, 450, 460, 461, 470, 480, 487, 488, 511, 563], "refer": [6, 388, 562, 563, 564], "reflect": [470, 512], "reflectedregionsbackgroundmak": [169, 512], "reflectedregionsfind": 170, "region": [13, 379, 382, 437, 439, 442, 444, 470, 472, 473, 512, 516], "region_to_fram": 331, "regiongeom": [195, 516], "regionndmap": [196, 515, 516], "regions_to_compound_region": 332, "regionsfind": 171, "relat": 516, "releas": [368, 377, 393, 394, 397, 398, 406], "remark": 373, "remnant": 497, "remov": [368, 473], "renam": 368, "repositori": 398, "repr": 368, "represent": [391, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "request": [368, 371, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "requir": [367, 368, 385, 395], "requires_data": 347, "requires_depend": 348, "resampl": 467, "resample_energy_edg": 140, "residu": [442, 444, 450, 488], "resolv": [389, 463], "respons": [7, 508], "restructur": 388, "result": [383, 392, 437, 439, 443, 446, 453, 456, 460, 566], "return": [368, 369], "review": 373, "ring": [448, 470, 513], "ringbackgroundmak": 172, "rmf": 507, "road": 378, "roadmap": 377, "rotat": 382, "rst": 369, "run": [11, 371, 442, 443, 444, 453, 455, 456, 460, 487, 563], "run_multiprocess": 318, "safe": [470, 511], "safemaskmak": 173, "sampl": [381, 454, 455], "sample_powerlaw": 324, "sample_spher": 325, "sample_sphere_dist": 326, "sample_tim": 327, "sampler": 455, "save": [443, 487, 488], "scale": 567, "scale_plot_flux": 275, "scaledregulargridinterpol": 309, "scalespectralmodel": 251, "scenario": 378, "schedul": 393, "scheme": [379, 394], "script": [11, 13, 368, 404, 483, 485], "section": 388, "select": [439, 443, 452, 460, 461, 466, 473, 487, 488, 500], "select_nested_model": 277, "sensit": 437, "sensitivityestim": 130, "sep": [412, 428], "serial": [380, 395, 451], "serialis": [396, 443, 456, 469, 473, 474, 479, 499], "seril": 379, "set": [371, 443, 471, 487], "setup": [376, 398, 400, 402, 403, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 487, 488, 489], "sever": 368, "share": 474, "shell": 525, "shell2": 526, "shell2spatialmodel": 252, "shellspatialmodel": 253, "shorter": 391, "should": 368, "show": [452, 453, 475], "signal": 453, "signific": [439, 446, 448, 472, 565], "simplepulsar": 54, "simplifi": 391, "simul": [377, 380, 444, 445, 454, 455, 458, 462], "sine": 556, "sinetemporalmodel": 254, "singl": [369, 445], "size": 516, "skip": 368, "sky": [9, 379, 382, 452, 454, 472, 507, 515], "sky_to_fov": 303, "skycoord": 515, "skymodel": [255, 474], "slice": 471, "small": 371, "smooth": [446, 544], "smoothbrokenpowerlawspectralmodel": 256, "snr": 52, "snrtruelovemcke": 53, "solut": 395, "some": [368, 378, 472], "sourc": [1, 2, 437, 439, 442, 446, 452, 453, 454, 455, 462, 466, 472, 476, 478, 489, 493, 494, 495, 496, 498], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": [62, 498], "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": [66, 498], "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 379, "sourcemodel": 379, "spatial": [379, 391, 452, 465, 471, 474, 493, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527], "spatial_model_registri": 249, "spatialirfmodel": 379, "spatialmodel": 257, "special": 566, "specif": [379, 388, 466], "spectra": 465, "spectral": [391, 396, 438, 439, 440, 442, 443, 444, 451, 452, 465, 474, 483, 489, 517, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548], "spectral_model_registri": 250, "spectralirfmodel": 379, "spectralmodel": 258, "spectrum": [438, 442, 444, 445, 452, 463, 470, 488], "spectrumdataset": [108, 380, 467], "spectrumdatasetmak": [174, 511], "spectrumdatasetonoff": [109, 380, 499], "sphinx": [368, 369], "spiral": 493, "split_dataset": [113, 115], "spread": [478, 509], "squar": [453, 481], "stack": [442, 448, 450, 499], "standard_scal": 296, "standardise_unit": 353, "start": [388, 400, 492, 493, 494, 500, 515], "stat": [12, 438], "stat_contour": 468, "stat_profile_ul_scipi": 278, "stat_surfac": 468, "statist": [12, 442, 472, 564, 565], "statu": [373, 378, 387, 393], "step": [443, 478, 480, 481, 561], "store": [383, 443, 507], "str": 368, "structur": [387, 389, 421, 489, 561], "structure_funct": 293, "studi": 383, "style": 374, "sub": [471, 492], "subclass": 396, "subpackag": 374, "subset": 466, "suggest": 394, "summari": [407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 450, 479], "super": [545, 546, 547], "superexpcutoffpowerlaw3fglspectralmodel": 259, "superexpcutoffpowerlaw4fgldr3spectralmodel": 260, "superexpcutoffpowerlaw4fglspectralmodel": 261, "supernova": 497, "support": [368, 375, 393, 394, 396, 469, 499], "survei": [485, 568], "symmetr": 506, "systemat": 396, "t": [446, 565], "tabl": [13, 453, 466, 500], "table_row_to_dict": 339, "table_standardise_units_copi": 340, "table_standardise_units_inplac": 341, "tag": 391, "target": 442, "task": [379, 380, 381, 382, 383, 384, 385], "templat": [454, 527, 548], "templatendspatialmodel": 263, "templatendspectralmodel": 264, "templatenpredmodel": 265, "templatephasecurvetemporalmodel": 266, "templatespatialmodel": 267, "templatespectralmodel": 268, "tempor": [455, 462, 474, 517, 550, 551, 552, 553, 554, 555, 556, 557, 558], "temporal_model_registri": 262, "temporalmodel": 269, "term": 394, "terminologi": 378, "test": [13, 368, 371, 453, 463], "text": 368, "theta": 481, "thi": 371, "thumbnail": 369, "time": [13, 377, 383, 436, 441, 449, 454, 457, 459, 461, 462, 464, 477, 482, 483, 484, 486, 490, 518, 528, 549, 559, 567], "time_ref_from_dict": 350, "time_ref_to_dict": 351, "time_relative_to_ref": 352, "timemapaxi": [197, 471], "timmerkonig_lightcurve_simul": 280, "tool": [11, 368, 563], "tooltip": 369, "touch": 371, "trapz_loglog": 308, "troubleshoot": [403, 563], "true": [505, 507, 509], "tsmapestim": 131, "tutori": [369, 376, 388, 400, 453, 478, 483], "two": 473, "type": [368, 395, 499], "uncertainti": 386, "underli": 516, "unfold": 396, "unfreez": 473, "unif": 392, "unifi": [379, 392], "unit": [13, 368], "unit_from_fits_image_hdu": 354, "unix": 368, "unreleas": 435, "up": [371, 387, 389], "upsampl": 516, "us": [368, 378, 396, 401, 404, 443, 453, 454, 460, 467, 468, 469, 471, 487, 488, 491, 494, 498, 499, 500, 501, 502, 508, 510, 511, 512, 515, 534, 545, 546, 547, 560], "user": [375, 504], "util": [4, 5, 8, 10, 13, 387, 561, 565, 567], "valid": 395, "valleespir": 38, "valu": [368, 396, 453, 471, 476], "vari": 462, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 454, 459], "varianc": 459, "variou": 475, "veloc": 493, "velocity_distribut": 49, "velocity_glon_glat": 304, "venv": 399, "version": [368, 393, 397, 406, 458], "virtual": 399, "visual": [14, 389, 471, 516, 568], "volum": 516, "warn": 368, "wc": [471, 516], "wcsgeom": 198, "wcsmap": 199, "wcsndmap": [200, 515], "we": [376, 383, 384, 392, 480], "webpag": 398, "what": [368, 371, 373, 376, 378, 383, 384, 392, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 440, 442, 443, 446, 452, 460, 487, 489], "where": 368, "which": 368, "wind": 496, "wise": 460, "without": 476, "wobbleregionsfind": 175, "work": 500, "workflow": 561, "write": [368, 373, 443, 455, 471, 472, 500, 516, 563], "write_yaml": 337, "wstat": [294, 564, 565, 566], "wstatcountsstatist": 281, "yaml": [391, 443, 487, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558], "your": [403, 443, 563], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})