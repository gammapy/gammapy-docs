Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[405, "aug-25-2014"]], "0.10 (Jan 28, 2019)": [[406, "jan-28-2019"]], "0.11 (Mar 29, 2019)": [[407, "mar-29-2019"]], "0.12 (May 30, 2019)": [[408, "may-30-2019"]], "0.13 (Jul 26, 2019)": [[409, "jul-26-2019"]], "0.14 (Sep 30, 2019)": [[410, "sep-30-2019"]], "0.15 (Dec 3, 2019)": [[411, "dec-3-2019"]], "0.16 (Feb 1, 2020)": [[412, "feb-1-2020"]], "0.17 (Apr 1, 2020)": [[413, "apr-1-2020"]], "0.18 (Nov 4th, 2020)": [[414, "nov-4th-2020"]], "0.18.1 (Nov 6th, 2020)": [[415, "nov-6th-2020"]], "0.18.2 (Nov 19th, 2020)": [[416, "nov-19th-2020"]], "0.19 (Nov 22nd, 2021)": [[417, "nov-22nd-2021"]], "0.2 (Apr 13, 2015)": [[418, "apr-13-2015"]], "0.20 (May 12th, 2022)": [[419, "may-12th-2022"]], "0.20.1 (June 16th, 2022)": [[420, "june-16th-2022"]], "0.3 (Aug 13, 2015)": [[421, "aug-13-2015"]], "0.4 (Apr 20, 2016)": [[422, "apr-20-2016"]], "0.5 (Nov 22, 2016)": [[423, "nov-22-2016"]], "0.6 (Apr 28, 2017)": [[424, "apr-28-2017"]], "0.7 (Feb 28, 2018)": [[425, "feb-28-2018"]], "0.8 (Sep 23, 2018)": [[426, "sep-23-2018"]], "0.9 (Nov 29, 2018)": [[427, "nov-29-2018"]], "1.0 (November 10th, 2022)": [[428, "november-10th-2022"]], "1.0.1 (March 14th, 2023)": [[429, "march-14th-2023"]], "1.0.2 (December 6th, 2023)": [[430, "december-6th-2023"]], "1.1 (June 13th 2023)": [[431, "june-13th-2023"]], "1.2 (February 29th 2024)": [[432, "february-29th-2024"]], "1.3 (unreleased)": [[433, "unreleased"]], "1D Spectral": [[480, "d-spectral"]], "1D spectrum simulation": [[442, "d-spectrum-simulation"]], "2D Image": [[480, "d-image"]], "2D map fitting": [[444, "d-map-fitting"]], "3D Cube": [[480, "d-cube"]], "3D detailed analysis": [[447, "d-detailed-analysis"]], "3D map simulation": [[455, "d-map-simulation"]], "API Links": [[367, "api-links"]], "API changes": [[428, "api-changes"], [431, "api-changes"], [432, "api-changes"]], "API reference": [[6, "api-reference"]], "ASmoothMapEstimator": [[114, "asmoothmapestimator"]], "Abstract": [[371, "abstract"], [372, "abstract"], [373, "abstract"], [374, "abstract"], [375, "abstract"], [376, "abstract"], [378, "abstract"], [379, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[369, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[468, "accessing-data"]], "Accessing contents of a dataset": [[464, "accessing-contents-of-a-dataset"]], "Accessor methods": [[512, "accessor-methods"]], "Adaptive smoothing": [[443, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[160, "adaptiveringbackgroundmaker"]], "Add a model on multiple datasets": [[470, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[377, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[468, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[468, "adding-non-contiguous-axes"]], "Additional Models": [[389, "additional-models"]], "Additional PSF classes": [[506, "additional-psf-classes"]], "Additional utilities": [[558, "additional-utilities"]], "Aim": [[470, "aim"]], "Alternative": [[390, "alternative"]], "Alternatives": [[374, "alternatives"], [377, "alternatives"], [380, "alternatives"], [382, "alternatives"], [383, "alternatives"], [384, "alternatives"], [386, "alternatives"], [387, "alternatives"], [393, "alternatives"]], "Alternatives / Outlook": [[379, "alternatives-outlook"]], "Analysis": [[15, "analysis"]], "Analysis configuration": [[440, "analysis-configuration"], [447, "analysis-configuration"], [457, "analysis-configuration"], [484, "analysis-configuration"]], "Analysis steps": [[558, "analysis-steps"]], "Analysis workflow": [[558, "analysis-workflow"]], "AnalysisConfig": [[16, "analysisconfig"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[506, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[366, "assert-convention"]], "Assign to model to all datasets": [[458, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[470, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[491, "astrophysical-source-models"]], "Astrophysical source population models": [[490, "astrophysical-source-population-models"]], "Astrophysics": [[489, "astrophysics"]], "Authorship policy": [[392, "authorship-policy"]], "BACKEND_DEFAULT": [[310, "backend-default"]], "BSD or GPL license?": [[366, "bsd-or-gpl-license"]], "Background": [[475, "background"], [503, "background"]], "Background / What we have now": [[381, "background-what-we-have-now"]], "Background Model Handling": [[388, "background-model-handling"]], "Background estimation": [[467, "background-estimation"], [508, "background-estimation"]], "Background2D": [[139, "background2d"]], "Background3D": [[140, "background3d"]], "BackgroundIRF": [[141, "backgroundirf"]], "BackgroundIRFModel": [[377, "backgroundirfmodel"]], "BackgroundModel": [[377, "backgroundmodel"]], "Basic image exploration and fitting": [[449, "basic-image-exploration-and-fitting"]], "Basic operators": [[468, "basic-operators"]], "Bayesian blocks": [[456, "bayesian-blocks"]], "Bin volume and angular size": [[513, "bin-volume-and-angular-size"]], "Boundary mask": [[469, "boundary-mask"]], "Broken power law spectral model": [[527, "broken-power-law-spectral-model"]], "BrokenPowerLawSpectralModel": [[210, "brokenpowerlawspectralmodel"]], "Bug fixes and improvements": [[419, "bug-fixes-and-improvements"], [428, "bug-fixes-and-improvements"], [431, "bug-fixes-and-improvements"], [432, "bug-fixes-and-improvements"]], "Build": [[396, "build"]], "Building 1D datasets from the new observations": [[458, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[457, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[457, "building-the-3d-analysis-configuration"]], "Built-in models": [[557, "built-in-models"]], "Bundled gammapy.extern code": [[366, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, "burkertprofile"]], "CATALOG_REGISTRY": [[55, "catalog-registry"]], "CITATION.cff": [[392, "citation-cff"]], "CLUMPY": [[488, "clumpy"]], "CTA 1DC": [[475, "cta-1dc"]], "CTA performance files": [[475, "cta-performance-files"]], "CTA with Gammapy": [[475, "cta-with-gammapy"]], "Caplog fixture": [[366, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[394, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[394, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[394, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, "casebattacharya1998"]], "Cash : Poisson data with background model": [[561, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[562, "cash-counts-statistic"]], "CashCountsStatistic": [[277, "cashcountsstatistic"]], "Catalog table": [[463, "catalog-table"]], "Caveat": [[561, "caveat"]], "Changelog": [[386, "changelog"]], "Check Python code": [[367, "check-python-code"]], "Check broken links": [[367, "check-broken-links"]], "Check setup": [[435, "check-setup"], [436, "check-setup"], [439, "check-setup"], [440, "check-setup"], [441, "check-setup"], [442, "check-setup"], [443, "check-setup"], [444, "check-setup"], [445, "check-setup"], [447, "check-setup"], [448, "check-setup"], [449, "check-setup"], [450, "check-setup"], [451, "check-setup"], [452, "check-setup"], [453, "check-setup"], [457, "check-setup"], [458, "check-setup"], [459, "check-setup"], [460, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [467, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [473, "check-setup"], [475, "check-setup"], [476, "check-setup"], [477, "check-setup"], [478, "check-setup"], [484, "check-setup"], [485, "check-setup"], [486, "check-setup"]], "Check the dataset we produced": [[477, "check-the-dataset-we-produced"]], "Check your setup": [[401, "check-your-setup"]], "Checker": [[340, "checker"]], "Choose a thumbnail and tooltip for the tutorial gallery": [[367, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[392, "citation-scheme"]], "Class attributes": [[367, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[385, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[366, "clobber-or-overwrite"]], "Code in RST files": [[367, "code-in-rst-files"]], "Code in docstrings in Python files": [[367, "code-in-docstrings-in-python-files"]], "Code quality": [[396, "code-quality"]], "Collection of the personal information of authors": [[392, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[565, "colormaps"]], "Combining event lists and GTIs": [[497, "combining-event-lists-and-gtis"]], "Combining two Models": [[470, "combining-two-models"]], "Command line tools": [[560, "command-line-tools"]], "Command line tools using click": [[366, "command-line-tools-using-click"]], "Command not found": [[560, "command-not-found"]], "Compare against the literature": [[441, "compare-against-the-literature"]], "Compare results": [[457, "compare-results"]], "Compound Spectral Model": [[471, "compound-spectral-model"]], "Compound spectral model": [[528, "compound-spectral-model"]], "CompoundSpectralModel": [[211, "compoundspectralmodel"]], "Computation times": [[434, "computation-times"], [438, "computation-times"], [446, "computation-times"], [454, "computation-times"], [461, "computation-times"], [474, "computation-times"], [479, "computation-times"], [481, "computation-times"], [483, "computation-times"], [487, "computation-times"], [515, "computation-times"], [525, "computation-times"], [546, "computation-times"], [556, "computation-times"]], "Compute Flux Points": [[439, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[445, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[449, "compute-images"]], "Compute sensitivity": [[435, "compute-sensitivity"]], "Computing contours using stat_contour": [[465, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[465, "computing-contours-using-stat-surface"]], "Computing flux points": [[485, "computing-flux-points"]], "Conda Environments": [[397, "conda-environments"]], "Confidence contours": [[465, "confidence-contours"]], "Configurable analysis": [[558, "configurable-analysis"]], "Configuration": [[453, "configuration"]], "Configuration for stacked and joint analysis": [[447, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[440, "configuration-of-the-analysis"]], "Constant spatial model": [[516, "constant-spatial-model"]], "Constant spectral model": [[529, "constant-spectral-model"]], "Constant temporal model": [[547, "constant-temporal-model"]], "ConstantFluxSpatialModel": [[212, "constantfluxspatialmodel"]], "ConstantSpatialModel": [[213, "constantspatialmodel"]], "ConstantSpectralModel": [[214, "constantspectralmodel"]], "ConstantTemporalModel": [[215, "constanttemporalmodel"]], "Context": [[436, "context"], [437, "context"], [439, "context"], [440, "context"], [441, "context"], [442, "context"], [443, "context"], [444, "context"], [445, "context"], [448, "context"], [450, "context"], [451, "context"], [453, "context"], [455, "context"], [456, "context"], [457, "context"], [458, "context"], [459, "context"], [469, "context"], [472, "context"], [473, "context"], [484, "context"], [485, "context"]], "Continuous integration": [[396, "continuous-integration"]], "Contribution in conferences": [[392, "contribution-in-conferences"]], "Contributors": [[405, "contributors"], [406, "contributors"], [407, "contributors"], [408, "contributors"], [409, "contributors"], [410, "contributors"], [411, "contributors"], [412, "contributors"], [413, "contributors"], [414, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[366, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[366, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[513, "coordinates-defined-by-the-regiongeom"]], "Counts": [[476, "counts"]], "Counts and fit statistics": [[562, "counts-and-fit-statistics"]], "Counts statistics classes": [[562, "counts-statistics-classes"]], "Covariance": [[201, "covariance"]], "Covariance and parameters errors": [[465, "covariance-and-parameters-errors"]], "CovarianceResult": [[202, "covarianceresult"]], "Create DL4 product - PSFMap": [[466, "create-dl4-product-psfmap"]], "Create a mask in energy": [[469, "create-a-mask-in-energy"]], "Create a stacked dataset": [[445, "create-a-stacked-dataset"]], "Create edisp kernel map": [[466, "create-edisp-kernel-map"]], "Create exclusion mask": [[439, "create-exclusion-mask"], [445, "create-exclusion-mask"]], "Create exposure map": [[466, "create-exposure-map"]], "Create the energy-dependent temporal model": [[452, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[485, "create-the-maker-classes-to-be-used"]], "Create the makers": [[436, "create-the-makers"]], "Create the mask from a catalog of sources": [[469, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[469, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[469, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[469, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[452, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[468, "creating-wcs-maps"]], "Creating a RegionGeom": [[513, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[513, "creating-a-regionndmap"]], "Creating a mask for fitting": [[469, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[469, "creating-a-mask-manually"]], "Creating an empty dataset": [[464, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[469, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[468, "creating-from-a-map-geometry"]], "Creating the config file": [[444, "creating-the-config-file"], [445, "creating-the-config-file"]], "Creation of the Flux points": [[440, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[458, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[458, "creation-of-the-datasets"]], "Creation of the model": [[440, "creation-of-the-model"]], "Cube plotting": [[468, "cube-plotting"]], "Cumulative excess and significance": [[436, "cumulative-excess-and-significance"]], "Current status": [[391, "current-status"]], "Custom models": [[557, "custom-models"]], "Cutouts": [[468, "cutouts"]], "Cython": [[396, "cython"]], "DATASET_REGISTRY": [[95, "dataset-registry"]], "DCO implementation": [[392, "dco-implementation"]], "DL3 DR1": [[478, "dl3-dr1"]], "DMProfile": [[18, "dmprofile"]], "D_SUN_TO_GALACTIC_CENTER": [[295, "d-sun-to-galactic-center"]], "Dark matter": [[488, "dark-matter"]], "Dark matter spatial and spectral models": [[462, "dark-matter-spatial-and-spectral-models"]], "DarkMatterAnnihilationSpectralModel": [[19, "darkmatterannihilationspectralmodel"]], "DarkMatterDecaySpectralModel": [[20, "darkmatterdecayspectralmodel"]], "Data Fitting": [[381, "data-fitting"]], "Data access and selection (DL3)": [[497, "data-access-and-selection-dl3"]], "Data analysis": [[480, "data-analysis"]], "Data analysis subpackages in gammapy": [[372, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[375, "data-and-observation-handling"]], "Data and models files": [[448, "data-and-models-files"]], "Data exploration": [[480, "data-exploration"]], "Data reduction": [[381, "data-reduction"], [447, "data-reduction"], [447, "id1"], [484, "data-reduction"], [485, "data-reduction"]], "Data reduction (DL3 to DL4)": [[508, "data-reduction-dl3-to-dl4"]], "Data reduction into a MapDataset": [[477, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[467, "data-reduction-loop"]], "Data structures": [[486, "data-structures"]], "DataStore": [[80, "datastore"]], "Dataset": [[96, "dataset"], [378, "dataset"], [467, "dataset"]], "Dataset helper / convenience methods": [[378, "dataset-helper-convenience-methods"]], "Dataset serialization": [[378, "dataset-serialization"]], "Dataset simulations": [[441, "dataset-simulations"]], "DatasetModels": [[216, "datasetmodels"]], "Datasets": [[97, "datasets"], [375, "datasets"], [378, "datasets"], [393, "datasets"], [464, "datasets"]], "Datasets (DL4)": [[496, "datasets-dl4"]], "Datasets - Reduced data, IRFs, models": [[464, "datasets-reduced-data-irfs-models"]], "Datasets serialization": [[448, "datasets-serialization"]], "DatasetsMaker": [[161, "datasetsmaker"]], "Datastore": [[475, "datastore"]], "Dealing with links": [[367, "dealing-with-links"]], "Decision": [[371, "decision"], [372, "decision"], [373, "decision"], [374, "decision"], [375, "decision"], [376, "decision"], [377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"]], "Define Target Region": [[439, "define-target-region"]], "Define an Observation": [[451, "define-an-observation"]], "Define an observation and make a dataset": [[452, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[435, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[449, "define-map-geometry"]], "Define the MapDataset": [[451, "define-the-mapdataset"]], "Define the Model": [[458, "define-the-model"]], "Define the ON region": [[441, "define-the-on-region"]], "Define the Sky model: a point-like source": [[451, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[436, "define-the-geometries"]], "Define the geometry": [[469, "define-the-geometry"]], "Define the model": [[485, "define-the-model"]], "Define the model to be used": [[457, "define-the-model-to-be-used"], [457, "id3"]], "Define the simulation source model": [[452, "define-the-simulation-source-model"]], "Define time intervals": [[458, "define-time-intervals"]], "Defining the datastore and selecting observations": [[485, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[458, "defining-the-geometry"]], "Definition of a Contributor": [[392, "definition-of-a-contributor"]], "Definition of the Maintainer": [[392, "definition-of-the-maintainer"]], "Definition of the data selection": [[457, "definition-of-the-data-selection"], [457, "id1"]], "Definition of the dataset geometry": [[457, "definition-of-the-dataset-geometry"], [457, "id2"]], "Dependencies": [[365, "dependencies"], [383, "dependencies"]], "Deprecating a function or a class": [[366, "deprecating-a-function-or-a-class"]], "Deprecation": [[391, "deprecation"]], "Derivation of the WStat formula": [[563, "derivation-of-the-wstat-formula"]], "Detailed plan": [[373, "detailed-plan"]], "Developer How To": [[366, "developer-how-to"]], "Developer guide": [[368, "developer-guide"]], "Discussion / Alternatives": [[381, "discussion-alternatives"]], "Disk spatial model": [[517, "disk-spatial-model"]], "DiskSpatialModel": [[217, "diskspatialmodel"]], "Dissolve gammapy.background": [[385, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[385, "dissolve-gammapy-image"]], "Distributions": [[383, "distributions"], [383, "id1"]], "Documentation": [[375, "documentation"], [432, "documentation"]], "Documentation How To": [[367, "documentation-how-to"]], "Documentation building": [[367, "documentation-building"]], "Documentation guidelines": [[367, "documentation-guidelines"]], "Download": [[396, "download"]], "EBL absorption spectral model": [[526, "ebl-absorption-spectral-model"]], "EBLAbsorptionNormSpectralModel": [[218, "eblabsorptionnormspectralmodel"]], "EBL_DATA_BUILTIN": [[219, "ebl-data-builtin"]], "EDispKernel": [[142, "edispkernel"]], "EDispKernelMap": [[143, "edispkernelmap"]], "EDispMap": [[144, "edispmap"]], "ESTIMATOR_REGISTRY": [[115, "estimator-registry"]], "Effective Area": [[466, "effective-area"]], "Effective area": [[475, "effective-area"], [502, "effective-area"]], "EffectiveAreaTable2D": [[145, "effectiveareatable2d"]], "EinastoProfile": [[21, "einastoprofile"]], "Energy Dependent Spatial Models": [[389, "energy-dependent-spatial-models"]], "Energy Dispersion": [[466, "energy-dispersion"], [476, "energy-dispersion"], [504, "energy-dispersion"]], "Energy dispersion": [[475, "energy-dispersion"]], "Energy edges": [[498, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[116, "energydependentmorphologyestimator"]], "EnergyDependentMultiGaussPSF": [[146, "energydependentmultigausspsf"]], "EnergyDispersion2D": [[147, "energydispersion2d"]], "Estimating TS": [[562, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[456, "estimation-of-time-variability-in-a-lightcurve"]], "Estimator": [[117, "estimator"]], "Estimators": [[393, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[498, "estimators-dl4-to-dl5-and-dl6"]], "Event Simulation": [[375, "event-simulation"]], "Event lists": [[486, "event-lists"]], "Event sampling": [[451, "event-sampling"]], "EventList": [[81, "eventlist"]], "EventListMetaData": [[82, "eventlistmetadata"]], "Events": [[475, "events"], [476, "events"]], "Example": [[561, "example"], [561, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[473, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[473, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[516, "example-plot"], [517, "example-plot"], [518, "example-plot"], [519, "example-plot"], [520, "example-plot"], [521, "example-plot"], [522, "example-plot"], [523, "example-plot"], [524, "example-plot"], [526, "example-plot"], [527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[499, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[488, "examples-using-gammapy-astro-darkmatter-darkmatterannihilationspectralmodel"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[495, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[495, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[497, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[497, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[496, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[496, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[498, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[498, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[505, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[505, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[505, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[507, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[508, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[509, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[508, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[512, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[512, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[512, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[557, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[562, "excess-and-significance"], [562, "id2"]], "Excess errors": [[562, "excess-errors"], [562, "id4"]], "Excess estimators": [[390, "excess-estimators"]], "ExcessMapEstimator": [[118, "excessmapestimator"]], "Exclusion masks": [[469, "exclusion-masks"]], "Execution": [[560, "execution"]], "Exemplary additional prior subclasses:": [[394, "exemplary-additional-prior-subclasses"]], "Exercises": [[435, "exercises"], [437, "exercises"], [439, "exercises"], [442, "exercises"], [447, "exercises"], [449, "exercises"], [451, "exercises"], [452, "exercises"], [459, "exercises"], [475, "exercises"], [476, "exercises"], [477, "exercises"], [478, "exercises"], [486, "exercises"], [486, "id1"], [486, "id2"], [486, "id3"]], "Existing code": [[372, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[220, "expcutoffpowerlaw3fglspectralmodel"]], "ExpCutoffPowerLawNormSpectralModel": [[221, "expcutoffpowerlawnormspectralmodel"]], "ExpCutoffPowerLawSpectralModel": [[222, "expcutoffpowerlawspectralmodel"]], "ExpDecay temporal model": [[548, "expdecay-temporal-model"]], "ExpDecayTemporalModel": [[223, "expdecaytemporalmodel"]], "Expected number of detected events": [[505, "expected-number-of-detected-events"]], "Exploration of the fit results": [[440, "exploration-of-the-fit-results"]], "Explore the fit results": [[436, "explore-the-fit-results"]], "Explore the results": [[436, "explore-the-results"]], "Exponential": [[29, "exponential"]], "Exponential Cut-Off Powerlaw Fit": [[437, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[532, "exponential-cutoff-power-law-norm-spectral-model"]], "Exponential cutoff power law spectral model": [[530, "exponential-cutoff-power-law-spectral-model"]], "Exponential cutoff power law spectral model used for 3FGL": [[531, "exponential-cutoff-power-law-spectral-model-used-for-3fgl"]], "Expose model parameters as attributes": [[377, "expose-model-parameters-as-attributes"]], "Exposure": [[476, "exposure"]], "Extended source using a template": [[451, "extended-source-using-a-template"]], "Extract the light curve": [[458, "extract-the-light-curve"]], "Extract the lightcurve": [[459, "extract-the-lightcurve"]], "Extracting the light curve": [[457, "extracting-the-light-curve"]], "Extracting the ring background": [[445, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[505, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, "faucherkaspi2006"]], "FaucherKaspi2006VelocityBimodal": [[31, "faucherkaspi2006velocitybimodal"]], "FaucherKaspi2006VelocityMaxwellian": [[32, "faucherkaspi2006velocitymaxwellian"]], "FaucherSpiral": [[33, "faucherspiral"]], "Feature Freeze and Branching": [[395, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[448, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[476, "fermi-lat-with-gammapy"]], "FermiST": [[488, "fermist"]], "Files": [[475, "files"]], "Filling a RegionNDMap": [[513, "filling-a-regionndmap"]], "Filling maps from event lists": [[468, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[468, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[458, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[371, "final-remarks"]], "Final result": [[563, "final-result"]], "Fit": [[203, "fit"], [455, "fit"], [476, "fit"]], "Fit quality and model residuals": [[439, "fit-quality-and-model-residuals"], [441, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[465, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[447, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[447, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[439, "fit-spectrum"], [441, "fit-spectrum"]], "Fit statistics": [[561, "fit-statistics"]], "Fit the datasets": [[459, "fit-the-datasets"]], "Fit the model": [[485, "fit-the-model"]], "FitResult": [[204, "fitresult"]], "Fitting": [[375, "fitting"], [465, "fitting"]], "Fitting Multiple Datasets with and without the Prior": [[473, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[473, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[465, "fitting-options"]], "Fitting temporal models": [[459, "fitting-temporal-models"]], "Fitting the obtained light curve": [[459, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[366, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[83, "fixedpointinginfo"]], "Float data type: 32 bit or 64 bit?": [[366, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[453, "flux-profile-estimation"]], "Flux maps": [[498, "flux-maps"]], "Flux maps for annihilation": [[462, "flux-maps-for-annihilation"]], "Flux maps for decay": [[462, "flux-maps-for-decay"]], "Flux point fitting": [[437, "flux-point-fitting"]], "Flux points": [[463, "flux-points"], [484, "flux-points"], [498, "flux-points"]], "Flux quantities": [[498, "flux-quantities"]], "FluxMaps": [[119, "fluxmaps"]], "FluxMetaData": [[120, "fluxmetadata"]], "FluxPoints": [[121, "fluxpoints"]], "FluxPointsDataset": [[98, "fluxpointsdataset"], [378, "fluxpointsdataset"], [464, "fluxpointsdataset"]], "FluxPointsEstimator": [[122, "fluxpointsestimator"]], "FluxProfileEstimator": [[123, "fluxprofileestimator"]], "FoV background": [[467, "fov-background"], [507, "fov-background"]], "FoVAlignment": [[148, "fovalignment"]], "FoVBackgroundMaker": [[162, "fovbackgroundmaker"]], "FoVBackgroundModel": [[224, "fovbackgroundmodel"]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[456, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[470, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[367, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[366, "functions-returning-several-values"]], "Further references": [[561, "further-references"]], "GTI": [[84, "gti"]], "Galactic diffuse background": [[476, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[490, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[462, "gamma-ray-spectra-at-production"]], "GammaLib": [[488, "gammalib"]], "Gammapy": [[403, "gammapy"]], "Gammapy Binder": [[396, "id1"]], "Gammapy analysis workflow and package structure": [[558, "gammapy-analysis-workflow-and-package-structure"]], "Gammapy overview": [[386, "gammapy-overview"]], "Gammapy repository": [[396, "gammapy-repository"]], "Gammapy webpages": [[396, "gammapy-webpages"]], "Gaussian spatial model": [[518, "gaussian-spatial-model"]], "Gaussian spectral model": [[533, "gaussian-spectral-model"]], "Gaussian temporal model": [[549, "gaussian-temporal-model"]], "GaussianSpatialModel": [[225, "gaussianspatialmodel"]], "GaussianSpectralModel": [[226, "gaussianspectralmodel"]], "GaussianTemporalModel": [[227, "gaussiantemporalmodel"]], "General Gammapy publications": [[392, "general-gammapy-publications"]], "General code style guidelines": [[372, "general-code-style-guidelines"]], "General conventions": [[366, "general-conventions"]], "General idea and class diagram": [[376, "general-idea-and-class-diagram"]], "General method": [[498, "general-method"]], "General organization of the new approach": [[381, "general-organization-of-the-new-approach"]], "Generalist estimators": [[390, "generalist-estimators"]], "Generalized Gaussian temporal model": [[550, "generalized-gaussian-temporal-model"]], "Generalized gaussian spatial model": [[519, "generalized-gaussian-spatial-model"]], "GeneralizedGaussianSpatialModel": [[228, "generalizedgaussianspatialmodel"]], "GeneralizedGaussianTemporalModel": [[229, "generalizedgaussiantemporalmodel"]], "Generating log messages": [[366, "generating-log-messages"]], "Geom": [[183, "geom"]], "Get in touch early": [[369, "get-in-touch-early"]], "Get set up": [[369, "get-set-up"]], "Getting started": [[386, "getting-started"], [398, "getting-started"], [489, "getting-started"], [490, "getting-started"], [491, "getting-started"]], "Getting started section restructuring": [[386, "getting-started-section-restructuring"]], "Getting started with data": [[497, "getting-started-with-data"]], "Getting started with maps": [[512, "getting-started-with-maps"]], "Getting the reduced dataset": [[444, "getting-the-reduced-dataset"], [445, "getting-the-reduced-dataset"]], "Global Model Handling": [[388, "global-model-handling"]], "Glossary": [[559, "glossary"]], "Glossary and references": [[559, "glossary-and-references"]], "Goodness of fit": [[563, "goodness-of-fit"]], "Guidelines and specific actions": [[386, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[478, "h-e-s-s-with-gammapy"]], "HAWC data access and reduction": [[477, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[477, "hawc-with-gammapy"]], "HAWC: 1D dataset for flux point fitting": [[448, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[85, "hduindextable"]], "HDULocation": [[303, "hdulocation"]], "HEALPix geometry": [[511, "healpix-geometry"]], "HEALPix-based maps": [[511, "healpix-based-maps"]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[448, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[392, "handling-of-conference-material"]], "Help!?": [[401, "help"]], "Hierarchical clustering of observations": [[472, "hierarchical-clustering-of-observations"]], "Hierarchy": [[393, "hierarchy"]], "High Level Analysis Interface": [[499, "high-level-analysis-interface"]], "High level interface": [[375, "high-level-interface"], [484, "high-level-interface"]], "How To": [[386, "how-to"], [500, "how-to"]], "How to contribute to Gammapy": [[369, "how-to-contribute-to-gammapy"]], "How to get data values": [[468, "how-to-get-data-values"]], "How to handle API breaking changes?": [[366, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[395, "how-to-make-a-gammapy-release"]], "How to make a pull request": [[366, "how-to-make-a-pull-request"]], "How to set data values": [[468, "how-to-set-data-values"]], "How to use logging": [[366, "how-to-use-logging"]], "How to use random numbers": [[366, "how-to-use-random-numbers"]], "How to write code": [[366, "how-to-write-code"]], "How to write tests": [[366, "how-to-write-tests"]], "HpxGeom": [[184, "hpxgeom"]], "HpxMap": [[185, "hpxmap"]], "HpxNDMap": [[186, "hpxndmap"]], "IPython": [[402, "id3"]], "IRF": [[149, "irf"], [393, "irf"]], "IRF axis naming": [[505, "irf-axis-naming"]], "IRFMap": [[150, "irfmap"]], "IRF_REGISTRY": [[151, "irf-registry"]], "IRFs": [[375, "irfs"], [475, "irfs"]], "Image Plotting": [[468, "image-plotting"]], "ImageProfile": [[124, "imageprofile"]], "ImageProfileEstimator": [[125, "imageprofileestimator"]], "Images and masks": [[380, "images-and-masks"]], "Implement default parameters": [[377, "implement-default-parameters"]], "Implement evaluation region specifications": [[377, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[377, "implement-sky-coordinate-handling"]], "Implementation": [[386, "implementation"], [394, "implementation"]], "Implementation Outline": [[394, "implementation-outline"]], "Implementation road map": [[376, "implementation-road-map"]], "Implementing a custom model": [[471, "implementing-a-custom-model"]], "Implementing a custom prior": [[473, "implementing-a-custom-prior"]], "Imports and versions": [[455, "imports-and-versions"]], "Improve SourceModels class": [[377, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[377, "improve-and-implement-model-serilization"]], "Improve spatial models": [[377, "improve-spatial-models"]], "In the RST files": [[367, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[466, "inbuilt-gammapy-irfs"]], "Include png files as images": [[367, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[468, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[485, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[485, "inspecting-residuals"]], "Install issues": [[401, "install-issues"]], "Installation": [[386, "installation"], [398, "installation"], [399, "installation"]], "Instrument Response Functions (DL3)": [[505, "instrument-response-functions-dl3"]], "Interaction Between Models and Dataset Objects": [[388, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[512, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[468, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[366, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[389, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[390, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[390, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[390, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[387, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[387, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[387, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[385, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[387, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[377, "introduce-naming-scheme-for-models"]], "Introduction": [[377, "introduction"], [380, "introduction"], [381, "introduction"], [383, "introduction"], [384, "introduction"], [386, "introduction"], [390, "introduction"], [392, "introduction"], [393, "introduction"], [435, "introduction"], [439, "introduction"], [441, "introduction"], [449, "introduction"], [460, "introduction"], [462, "introduction"], [463, "introduction"], [464, "introduction"], [467, "introduction"], [468, "introduction"], [475, "introduction"], [476, "introduction"], [480, "introduction"], [486, "introduction"], [488, "introduction"], [490, "introduction"], [491, "introduction"], [561, "introduction"]], "Introduction of background models": [[377, "introduction-of-background-models"]], "Introduction of model name attributes": [[377, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[377, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[317, "inversecdfsampler"]], "IsothermalProfile": [[22, "isothermalprofile"]], "Isotropic diffuse background": [[476, "isotropic-diffuse-background"]], "Iterating by image": [[468, "iterating-by-image"]], "J Factors": [[462, "j-factors"]], "JFactory": [[23, "jfactory"]], "Joint Analysis": [[496, "joint-analysis"]], "Joint analysis": [[447, "joint-analysis"], [448, "joint-analysis"]], "Jupyter notebooks": [[402, "jupyter-notebooks"]], "LabelMapAxis": [[187, "labelmapaxis"], [468, "labelmapaxis"]], "Lazy loading of Datasets": [[378, "lazy-loading-of-datasets"]], "LazyFitsData": [[304, "lazyfitsdata"]], "Let\u2019s simulate the model": [[452, "let-s-simulate-the-model"]], "Light Curve Fitting": [[381, "light-curve-fitting"]], "Light Curve estimation by observation": [[457, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[555, "light-curve-temporal-model"]], "Light curves": [[457, "light-curves"]], "Light curves for flares": [[458, "light-curves-for-flares"]], "LightCurveEstimator": [[126, "lightcurveestimator"]], "LightCurveTemplateTemporalModel": [[230, "lightcurvetemplatetemporalmodel"]], "Lightcurve": [[381, "lightcurve"]], "Lightcurves": [[463, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[381, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[376, "limitations"]], "Linear temporal model": [[551, "linear-temporal-model"]], "LinearTemporalModel": [[231, "lineartemporalmodel"]], "Links to other tutorials": [[367, "links-to-other-tutorials"]], "List available catalogs": [[463, "list-available-catalogs"]], "Load Data": [[439, "load-data"]], "Load IRFs and prepare dataset": [[435, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[463, "load-catalogs"]], "Load data": [[441, "load-data"]], "Load spectral points": [[437, "load-spectral-points"]], "Loading models from a catalog": [[470, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[366, "locate-origin-of-warnings"]], "Log parabola spectral model": [[534, "log-parabola-spectral-model"]], "Log parabola spectral norm model": [[535, "log-parabola-spectral-norm-model"]], "Log-Parabola Fit": [[437, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[232, "logparabolanormspectralmodel"]], "LogParabolaSpectralModel": [[233, "logparabolaspectralmodel"]], "LogSpiral": [[34, "logspiral"]], "Long Term Support releases": [[392, "long-term-support-releases"]], "Lorimer2006": [[35, "lorimer2006"]], "Low level API": [[485, "low-level-api"]], "Low level map and cube analysis": [[372, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[163, "maker-registry"]], "METHOD_DEFAULT": [[311, "method-default"]], "METHOD_KWARGS_DEFAULT": [[312, "method-kwargs-default"]], "MODEL_REGISTRY": [[234, "model-registry"]], "Maintainer and developer perspective": [[373, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[375, "maintenance-and-code-quality"]], "Make a Bugfix release": [[395, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[460, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[449, "make-sky-images"]], "Make small pull requests": [[369, "make-small-pull-requests"]], "Maker": [[164, "maker"]], "Makers": [[393, "makers"]], "Makers - Data reduction": [[467, "makers-data-reduction"]], "Making a butterfly plot": [[485, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[366, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[366, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[366, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[472, "manual-grouping-of-observations"]], "Map": [[188, "map"]], "Map Analysis / Data Reduction": [[375, "map-analysis-data-reduction"]], "MapAxes": [[189, "mapaxes"]], "MapAxis": [[190, "mapaxis"]], "MapCoord": [[191, "mapcoord"], [512, "mapcoord"]], "MapDataset": [[99, "mapdataset"], [378, "mapdataset"], [464, "mapdataset"]], "MapDatasetEventSampler": [[100, "mapdataseteventsampler"], [379, "mapdataseteventsampler"]], "MapDatasetMaker": [[165, "mapdatasetmaker"]], "MapDatasetMetaData": [[101, "mapdatasetmetadata"]], "MapDatasetOnOff": [[102, "mapdatasetonoff"], [378, "mapdatasetonoff"]], "MapPanelPlotter": [[353, "mappanelplotter"]], "Maps": [[192, "maps"], [375, "maps"], [468, "maps"], [486, "maps"]], "Maps operations": [[468, "maps-operations"]], "Mask dilation and erosion": [[469, "mask-dilation-and-erosion"]], "Mask maps": [[469, "mask-maps"]], "Mask modifications": [[469, "mask-modifications"]], "Mask some sky regions": [[469, "mask-some-sky-regions"]], "Masks for fitting": [[469, "masks-for-fitting"]], "Masks operations": [[469, "masks-operations"]], "Meetings": [[375, "meetings"]], "Metadata API": [[393, "metadata-api"]], "Metadata files": [[392, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[393, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[456, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[235, "meyercrabspectralmodel"]], "Minor changes": [[387, "minor-changes"]], "Mission elapsed times (MET)": [[564, "mission-elapsed-times-met"]], "Model": [[236, "model"]], "Model and dataset": [[465, "model-and-dataset"], [473, "model-and-dataset"]], "Model fit": [[449, "model-fit"]], "Model fitting": [[440, "model-fitting"], [484, "model-fitting"]], "Model gallery": [[514, "model-gallery"]], "Model lists and serialisation": [[471, "model-lists-and-serialisation"]], "ModelBase": [[237, "modelbase"]], "Modeling": [[375, "modeling"], [393, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[557, "modeling-and-fitting-dl4-to-dl5"]], "Modeling and fitting": [[447, "modeling-and-fitting"]], "Modelling": [[444, "modelling"], [470, "modelling"]], "Models": [[238, "models"], [471, "models"]], "Models with energy dependent morphology": [[471, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[471, "models-with-shared-parameter"]], "Modifying Data": [[468, "modifying-data"]], "Modifying model parameters": [[471, "modifying-model-parameters"]], "MooreProfile": [[24, "mooreprofile"]], "Morphological energy dependence estimation": [[450, "morphological-energy-dependence-estimation"]], "Motivation": [[394, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[448, "multi-instrument-joint-3d-and-1d-analysis"]], "NFWProfile": [[25, "nfwprofile"]], "N_JOBS_DEFAULT": [[313, "n-jobs-default"]], "Naima spectral model": [[536, "naima-spectral-model"]], "NaimaSpectralModel": [[239, "naimaspectralmodel"]], "New features": [[428, "new-features"], [431, "new-features"], [432, "new-features"]], "Next steps": [[475, "next-steps"], [477, "next-steps"], [478, "next-steps"]], "Night-wise LC estimation": [[457, "night-wise-lc-estimation"]], "Norm Spectral Models": [[471, "norm-spectral-models"]], "Notations": [[562, "notations"]], "Notes": [[561, "notes"]], "OGIPDatasetReader": [[103, "ogipdatasetreader"]], "OGIPDatasetWriter": [[104, "ogipdatasetwriter"]], "Object text repr, str and info": [[366, "object-text-repr-str-and-info"]], "Objective": [[444, "objective"], [445, "objective"], [451, "objective"], [452, "objective"], [472, "objective"]], "Objectives": [[376, "objectives"]], "Observation": [[86, "observation"]], "Observation duration and effective livetime": [[467, "observation-duration-and-effective-livetime"]], "Observation selection": [[440, "observation-selection"], [484, "observation-selection"]], "ObservationEventSampler": [[105, "observationeventsampler"]], "ObservationFilter": [[87, "observationfilter"]], "ObservationTable": [[88, "observationtable"]], "Observational clustering": [[472, "observational-clustering"]], "Observations": [[89, "observations"]], "ObservationsEventsSampler": [[90, "observationseventssampler"]], "Obtain the data to use": [[450, "obtain-the-data-to-use"]], "Obtain the observations": [[472, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[435, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[396, "old-example-data"]], "On-Off analysis": [[442, "on-off-analysis"]], "Opening the data": [[460, "opening-the-data"]], "OptimizeResult": [[205, "optimizeresult"]], "Optional dependencies": [[365, "optional-dependencies"], [383, "optional-dependencies"]], "Other folders": [[396, "other-folders"]], "Other packages": [[488, "other-packages"]], "Other repositories": [[396, "other-repositories"]], "Others": [[366, "others"], [396, "others"]], "Outlook": [[378, "outlook"], [380, "outlook"], [382, "outlook"], [383, "outlook"], [385, "outlook"], [386, "outlook"], [387, "outlook"], [390, "outlook"]], "Output in Jupyter notebook cells": [[366, "output-in-jupyter-notebook-cells"]], "Overview": [[507, "overview"], [509, "overview"], [510, "overview"]], "PIG 1 - PIG purpose and guidelines": [[371, "pig-1-pig-purpose-and-guidelines"]], "PIG 10 - Regions": [[380, "pig-10-regions"]], "PIG 11 - Light curves": [[381, "pig-11-light-curves"]], "PIG 12 - High level interface": [[382, "pig-12-high-level-interface"]], "PIG 13 - Gammapy dependencies and distribution": [[383, "pig-13-gammapy-dependencies-and-distribution"]], "PIG 14 - Uncertainty estimation": [[384, "pig-14-uncertainty-estimation"]], "PIG 16 - Gammapy package structure": [[385, "pig-16-gammapy-package-structure"]], "PIG 18 - Documentation": [[386, "pig-18-documentation"]], "PIG 19 - Gammapy package structure follow up": [[387, "pig-19-gammapy-package-structure-follow-up"]], "PIG 2 - Organization of low level analysis code": [[372, "pig-2-organization-of-low-level-analysis-code"]], "PIG 20 - Global Model API": [[388, "pig-20-global-model-api"]], "PIG 21 - Models improvements": [[389, "pig-21-models-improvements"]], "PIG 22 - Unified flux estimators API": [[390, "pig-22-unified-flux-estimators-api"]], "PIG 23 - Gammapy release cycle and version numbering": [[391, "pig-23-gammapy-release-cycle-and-version-numbering"]], "PIG 24 - Authorship policy": [[392, "pig-24-authorship-policy"]], "PIG 25 - Metadata container for Gammapy": [[393, "pig-25-metadata-container-for-gammapy"]], "PIG 26 - Model Priors API": [[394, "pig-26-model-priors-api"]], "PIG 3 - Plan for dropping Python 2.7 support": [[373, "pig-3-plan-for-dropping-python-2-7-support"]], "PIG 4 - Setup for tutorial notebooks and data": [[374, "pig-4-setup-for-tutorial-notebooks-and-data"]], "PIG 5 - Gammapy 1.0 roadmap": [[375, "pig-5-gammapy-1-0-roadmap"]], "PIG 6 - CTA observation handling": [[376, "pig-6-cta-observation-handling"]], "PIG 7 - Models": [[377, "pig-7-models"]], "PIG 8 - Datasets": [[378, "pig-8-datasets"]], "PIG 9 - Event sampling": [[379, "pig-9-event-sampling"]], "PIG review": [[371, "pig-review"]], "PIG status": [[371, "pig-status"]], "PIGs": [[370, "pigs"]], "POOL_KWARGS_DEFAULT": [[314, "pool-kwargs-default"]], "PSF": [[466, "psf"], [476, "psf"]], "PSF3D": [[152, "psf3d"]], "PSFKernel": [[153, "psfkernel"]], "PSFKing": [[154, "psfking"]], "PSFMap": [[155, "psfmap"]], "PWN": [[50, "pwn"]], "Package / API": [[480, "package-api"]], "Package and docs": [[396, "package-and-docs"]], "Package structure and dependencies": [[419, "package-structure-and-dependencies"]], "Paczynski1990": [[36, "paczynski1990"]], "Paczynski1990Velocity": [[37, "paczynski1990velocity"]], "Papers": [[375, "papers"]], "Parallel evaluation of datasets": [[378, "parallel-evaluation-of-datasets"]], "Parameter": [[206, "parameter"]], "ParameterEstimator": [[127, "parameterestimator"]], "Parameters": [[207, "parameters"]], "ParametricPSF": [[156, "parametricpsf"]], "Perform spectral model fitting": [[436, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[485, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[436, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[379, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[554, "phase-curve-temporal-model"]], "Phase-resolved map": [[460, "phase-resolved-map"]], "Phase-resolved spectrum": [[460, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[166, "phasebackgroundmaker"]], "Phasogram": [[460, "phasogram"]], "Piecewise  norm spectral model": [[537, "piecewise-norm-spectral-model"]], "Piecewise norm spatial model": [[520, "piecewise-norm-spatial-model"]], "PiecewiseNormSpatialModel": [[240, "piecewisenormspatialmodel"]], "PiecewiseNormSpectralModel": [[241, "piecewisenormspectralmodel"]], "Pixel coordinate convention": [[366, "pixel-coordinate-convention"]], "Plot": [[449, "plot"]], "Plot off regions": [[439, "plot-off-regions"]], "Plot resulting images": [[443, "plot-resulting-images"]], "Plot the fitted spectrum": [[485, "plot-the-fitted-spectrum"]], "Plotting Results": [[453, "plotting-results"]], "Plotting a RegionGeom": [[513, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[470, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[440, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[513, "plotting-the-map-content"]], "Plotting the results": [[450, "plotting-the-results"]], "Plotting the underlying region": [[513, "plotting-the-underlying-region"]], "Point Spread Function": [[506, "point-spread-function"]], "Point source sensitivity": [[435, "point-source-sensitivity"]], "Point spatial model": [[521, "point-spatial-model"]], "Point spread function": [[475, "point-spread-function"]], "PointSpatialModel": [[242, "pointspatialmodel"]], "PointingInfo": [[91, "pointinginfo"]], "PointingMode": [[92, "pointingmode"]], "Possible implementations": [[392, "possible-implementations"]], "Post release": [[395, "post-release"]], "Power Law Fit": [[437, "power-law-fit"]], "Power law 2 spectral model": [[539, "power-law-2-spectral-model"]], "Power law norm spectral model": [[540, "power-law-norm-spectral-model"]], "Power law spectral model": [[538, "power-law-spectral-model"]], "PowerLaw temporal model": [[552, "powerlaw-temporal-model"]], "PowerLaw2SpectralModel": [[243, "powerlaw2spectralmodel"]], "PowerLawNormSpectralModel": [[244, "powerlawnormspectralmodel"]], "PowerLawSpectralModel": [[245, "powerlawspectralmodel"]], "PowerLawTemporalModel": [[246, "powerlawtemporalmodel"]], "Predicted counts": [[496, "predicted-counts"]], "Prepare and run the event sampler": [[452, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[436, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[485, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[436, "prerequisites"], [437, "prerequisites"], [439, "prerequisites"], [440, "prerequisites"], [441, "prerequisites"], [442, "prerequisites"], [444, "prerequisites"], [448, "prerequisites"], [450, "prerequisites"], [451, "prerequisites"], [452, "prerequisites"], [453, "prerequisites"], [455, "prerequisites"], [456, "prerequisites"], [457, "prerequisites"], [458, "prerequisites"], [459, "prerequisites"], [465, "prerequisites"], [469, "prerequisites"], [470, "prerequisites"], [473, "prerequisites"], [484, "prerequisites"], [485, "prerequisites"]], "Pretty-print source information": [[463, "pretty-print-source-information"]], "PrimaryFlux": [[26, "primaryflux"]], "PriorParameter": [[208, "priorparameter"]], "PriorParameters": [[209, "priorparameters"]], "Priors": [[473, "priors"]], "Profile Estimation": [[453, "profile-estimation"]], "Profile Likelihood": [[563, "profile-likelihood"]], "Profiles": [[462, "profiles"]], "Project Management": [[375, "project-management"]], "Project setup": [[396, "project-setup"]], "Projects": [[375, "projects"]], "Proposal": [[374, "proposal"], [376, "proposal"], [377, "proposal"], [378, "proposal"], [379, "proposal"], [380, "proposal"], [381, "proposal"], [382, "proposal"], [384, "proposal"], [385, "proposal"], [386, "proposal"], [387, "proposal"], [388, "proposal"], [389, "proposal"]], "Proposal of API for flux estimate results": [[390, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[453, "proposed-approach"]], "Proposed approach": [[436, "proposed-approach"], [437, "proposed-approach"], [440, "proposed-approach"], [442, "proposed-approach"], [443, "proposed-approach"], [444, "proposed-approach"], [445, "proposed-approach"], [448, "proposed-approach"], [451, "proposed-approach"], [452, "proposed-approach"], [455, "proposed-approach"], [456, "proposed-approach"], [457, "proposed-approach"], [458, "proposed-approach"], [459, "proposed-approach"], [465, "proposed-approach"], [469, "proposed-approach"], [470, "proposed-approach"], [472, "proposed-approach"], [484, "proposed-approach"], [485, "proposed-approach"]], "Proposed class diagram": [[376, "proposed-class-diagram"]], "Proposed metadata classes": [[393, "proposed-metadata-classes"]], "Proposed solution": [[393, "proposed-solution"]], "Pull Requests": [[419, "pull-requests"], [420, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"]], "Pull requests": [[405, "pull-requests"], [406, "pull-requests"], [407, "pull-requests"], [408, "pull-requests"], [409, "pull-requests"], [410, "pull-requests"], [411, "pull-requests"], [412, "pull-requests"], [413, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"]], "Pulsar": [[51, "pulsar"]], "Pulsar Source Models": [[492, "pulsar-source-models"]], "Pulsar Wind Nebula Source Models": [[493, "pulsar-wind-nebula-source-models"]], "Pulsar analysis": [[460, "pulsar-analysis"]], "Python": [[402, "id2"]], "Python scripts": [[402, "python-scripts"]], "Python version support": [[366, "python-version-support"]], "RadMax2D": [[157, "radmax2d"]], "Read and Introduce Data": [[453, "read-and-introduce-data"]], "Read in input images": [[443, "read-in-input-images"]], "Read the datasets": [[470, "read-the-datasets"]], "Read the energy-dependent model": [[452, "read-the-energy-dependent-model"]], "Reading Maps": [[468, "reading-maps"]], "Reading and Writing": [[468, "reading-and-writing"]], "Reading and writing masks": [[469, "reading-and-writing-masks"]], "Reading different datasets": [[448, "reading-different-datasets"]], "RecoPSFMap": [[158, "recopsfmap"]], "Recommended Setup": [[398, "recommended-setup"], [400, "recommended-setup"]], "Reference": [[386, "reference"], [560, "reference"]], "References": [[559, "publications"]], "Reflected regions background": [[467, "reflected-regions-background"], [509, "reflected-regions-background"]], "ReflectedRegionsBackgroundMaker": [[167, "reflectedregionsbackgroundmaker"]], "ReflectedRegionsFinder": [[168, "reflectedregionsfinder"]], "Region arguments": [[380, "region-arguments"]], "RegionGeom": [[193, "regiongeom"], [513, "regiongeom"]], "RegionGeom and RegionNDMap": [[513, "regiongeom-and-regionndmap"]], "RegionGeom and coordinates": [[513, "regiongeom-and-coordinates"]], "RegionNDMap": [[194, "regionndmap"], [513, "regionndmap"]], "RegionsFinder": [[169, "regionsfinder"]], "Relation to WCS geometries": [[513, "relation-to-wcs-geometries"]], "Release notes": [[366, "release-notes"], [404, "release-notes"]], "Release preparation, feature freeze": [[391, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[391, "release-scheduling-and-lts"]], "Releases": [[375, "releases"], [392, "releases"], [396, "releases"]], "Releasing the final version of the major release": [[395, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[395, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[470, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[366, "removing-an-attribute"]], "Renaming an argument": [[366, "renaming-an-argument"]], "Required dependencies": [[365, "required-dependencies"], [383, "required-dependencies"]], "Requirements": [[393, "requirements"]], "Resampling datasets": [[464, "resampling-datasets"]], "Resolve gammapy.detect": [[387, "resolve-gammapy-detect"]], "Results": [[435, "results"]], "Results exploration": [[440, "results-exploration"]], "Ring background": [[467, "ring-background"], [510, "ring-background"]], "Ring background map": [[445, "ring-background-map"]], "RingBackgroundMaker": [[170, "ringbackgroundmaker"]], "Rotated regions": [[380, "rotated-regions"]], "Run Estimation": [[453, "run-estimation"]], "Run Estimator": [[450, "run-estimator"]], "Run data reduction chain": [[439, "run-data-reduction-chain"], [441, "run-data-reduction-chain"]], "Run the 1D data reduction": [[457, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[457, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[560, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[369, "running-tests-building-documentation"]], "Running the Data Reduction": [[440, "running-the-data-reduction"]], "Running the analysis": [[484, "running-the-analysis"]], "Running the estimation": [[440, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[440, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[440, "running-the-fit"]], "Running the light curve extraction in 1D": [[457, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, "snr"]], "SNRTrueloveMcKee": [[53, "snrtruelovemckee"]], "SPATIAL_MODEL_REGISTRY": [[247, "spatial-model-registry"]], "SPECTRAL_MODEL_REGISTRY": [[248, "spectral-model-registry"]], "Safe data range definition": [[508, "safe-data-range-definition"]], "Safe data range handling": [[467, "safe-data-range-handling"]], "SafeMaskMaker": [[171, "safemaskmaker"]], "Sample a source with energy-dependent temporal evolution": [[452, "sample-a-source-with-energy-dependent-temporal-evolution"]], "Sampling methods": [[379, "sampling-methods"]], "Sampling the source and background events": [[451, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[440, "save-dataset-to-disk"], [484, "save-dataset-to-disk"], [485, "save-dataset-to-disk"]], "ScaleSpectralModel": [[249, "scalespectralmodel"]], "ScaledRegularGridInterpolator": [[307, "scaledregulargridinterpolator"]], "Scripts": [[480, "scripts"]], "Select a catalog subset": [[463, "select-a-catalog-subset"]], "Select a source": [[463, "select-a-source"]], "Select observations": [[449, "select-observations"]], "Select the ON region": [[436, "select-the-on-region"]], "Select the data": [[436, "select-the-data"], [458, "select-the-data"]], "Selecting models contributing to a given region": [[470, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[470, "selecting-models-from-a-list"]], "SensitivityEstimator": [[128, "sensitivityestimator"]], "Serialisation": [[394, "serialisation"], [466, "serialisation"], [466, "id1"], [466, "id2"], [476, "serialisation"]], "Serialisation and I/O": [[453, "serialisation-and-i-o"]], "Serialisation of datasets": [[496, "serialisation-of-datasets"]], "Serialisation of the fit result": [[440, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[440, "serialisation-of-the-results"]], "Serialising models": [[470, "serialising-models"]], "Serialization": [[393, "serialization"]], "Setting fitting parameters": [[440, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[484, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[484, "setting-the-background-normalization-maker"]], "Setting the data to use": [[484, "setting-the-data-to-use"]], "Setting the exclusion mask": [[440, "setting-the-exclusion-mask"], [484, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[484, "setting-the-reduced-datasets-geometry"]], "Setup": [[435, "setup"], [436, "setup"], [437, "setup"], [439, "setup"], [440, "setup"], [441, "setup"], [442, "setup"], [443, "setup"], [444, "setup"], [445, "setup"], [449, "setup"], [450, "setup"], [451, "setup"], [452, "setup"], [453, "setup"], [456, "setup"], [457, "setup"], [458, "setup"], [459, "setup"], [462, "setup"], [464, "setup"], [467, "setup"], [468, "setup"], [469, "setup"], [470, "setup"], [471, "setup"], [475, "setup"], [476, "setup"], [484, "setup"], [485, "setup"], [486, "setup"]], "Shell spatial model": [[522, "shell-spatial-model"]], "Shell2 spatial model": [[523, "shell2-spatial-model"]], "Shell2SpatialModel": [[250, "shell2spatialmodel"]], "ShellSpatialModel": [[251, "shellspatialmodel"]], "Show images": [[449, "show-images"]], "Show the results tables": [[450, "show-the-results-tables"]], "Show various observation quantities": [[472, "show-various-observation-quantities"]], "SimplePulsar": [[54, "simplepulsar"]], "Simplify YAML Parameter Representation": [[389, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[389, "simplify-yaml-representation"]], "Simulate multiple event lists": [[451, "simulate-multiple-event-lists"]], "Simulating a light curve": [[459, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[459, "simulating-and-fitting-a-time-varying-source"]], "Simulation": [[455, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[378, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[442, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[553, "sine-temporal-model"]], "SineTemporalModel": [[252, "sinetemporalmodel"]], "Skip unit tests for some Astropy versions": [[366, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[380, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[512, "sky-maps-dl4"]], "SkyModel": [[253, "skymodel"], [471, "skymodel"]], "Smooth broken power law spectral model": [[541, "smooth-broken-power-law-spectral-model"]], "SmoothBrokenPowerLawSpectralModel": [[254, "smoothbrokenpowerlawspectralmodel"]], "Some terminology": [[376, "some-terminology"]], "Source Detection": [[449, "source-detection"]], "Source candidates": [[443, "source-candidates"]], "Source catalogs": [[463, "source-catalogs"], [486, "source-catalogs"], [495, "source-catalogs"]], "Source detection and significance maps": [[443, "source-detection-and-significance-maps"]], "Source information": [[463, "source-information"]], "Source models": [[463, "source-models"], [475, "source-models"]], "Source object": [[463, "source-object"]], "Source statistic": [[439, "source-statistic"]], "SourceCatalog": [[56, "sourcecatalog"]], "SourceCatalog1LHAASO": [[57, "sourcecatalog1lhaaso"]], "SourceCatalog2FHL": [[58, "sourcecatalog2fhl"]], "SourceCatalog2HWC": [[59, "sourcecatalog2hwc"]], "SourceCatalog3FGL": [[60, "sourcecatalog3fgl"]], "SourceCatalog3FHL": [[61, "sourcecatalog3fhl"]], "SourceCatalog3HWC": [[62, "sourcecatalog3hwc"]], "SourceCatalog3PC": [[63, "sourcecatalog3pc"]], "SourceCatalog4FGL": [[64, "sourcecatalog4fgl"]], "SourceCatalogGammaCat": [[65, "sourcecataloggammacat"]], "SourceCatalogHGPS": [[66, "sourcecataloghgps"]], "SourceCatalogLargeScaleHGPS": [[67, "sourcecataloglargescalehgps"]], "SourceCatalogObject": [[68, "sourcecatalogobject"]], "SourceCatalogObject1LHAASO": [[69, "sourcecatalogobject1lhaaso"]], "SourceCatalogObject2FHL": [[70, "sourcecatalogobject2fhl"]], "SourceCatalogObject2HWC": [[71, "sourcecatalogobject2hwc"]], "SourceCatalogObject3FGL": [[72, "sourcecatalogobject3fgl"]], "SourceCatalogObject3FHL": [[73, "sourcecatalogobject3fhl"]], "SourceCatalogObject3HWC": [[74, "sourcecatalogobject3hwc"]], "SourceCatalogObject3PC": [[75, "sourcecatalogobject3pc"]], "SourceCatalogObject4FGL": [[76, "sourcecatalogobject4fgl"]], "SourceCatalogObjectGammaCat": [[77, "sourcecatalogobjectgammacat"]], "SourceCatalogObjectHGPS": [[78, "sourcecatalogobjecthgps"]], "SourceCatalogObjectHGPSComponent": [[79, "sourcecatalogobjecthgpscomponent"]], "SourceIRFModel": [[377, "sourceirfmodel"]], "Spatial analysis": [[449, "spatial-analysis"]], "Spatial models": [[471, "spatial-models"], [514, "spatial-models"]], "SpatialIRFModel": [[377, "spatialirfmodel"]], "SpatialModel": [[255, "spatialmodel"]], "Special cases": [[563, "special-cases"]], "Specificities of the HGPS catalog": [[463, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[389, "spectral-absorption-model"]], "Spectral Norm Models": [[389, "spectral-norm-models"]], "Spectral analysis": [[439, "spectral-analysis"]], "Spectral analysis of extended sources": [[436, "spectral-analysis-of-extended-sources"]], "Spectral analysis with energy-dependent directional cuts": [[441, "spectral-analysis-with-energy-dependent-directional-cuts"]], "Spectral analysis with the HLI": [[440, "spectral-analysis-with-the-hli"]], "Spectral models": [[471, "spectral-models"], [514, "spectral-models"]], "Spectral models and flux points": [[486, "spectral-models-and-flux-points"]], "Spectral points": [[449, "spectral-points"]], "SpectralIRFModel": [[377, "spectralirfmodel"]], "SpectralModel": [[256, "spectralmodel"]], "Spectrum": [[449, "spectrum"]], "Spectrum dataset": [[467, "spectrum-dataset"]], "SpectrumDataset": [[106, "spectrumdataset"], [378, "spectrumdataset"], [464, "spectrumdataset"]], "SpectrumDatasetMaker": [[172, "spectrumdatasetmaker"]], "SpectrumDatasetOnOff": [[107, "spectrumdatasetonoff"], [378, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[367, "sphinx-gallery-extension"]], "Spiral arm models": [[490, "spiral-arm-models"]], "Stack observations": [[439, "stack-observations"]], "Stacked analysis": [[447, "stacked-analysis"]], "Stacking Multiple Datasets": [[496, "stacking-multiple-datasets"]], "Statistical utility functions": [[562, "statistical-utility-functions"]], "Status": [[376, "status"], [385, "status"]], "Storing the energy dispersion information as a function of sky position": [[504, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[381, "storing-the-results-and-further-studies"]], "Sub-packages": [[489, "sub-packages"]], "Suggestions": [[392, "suggestions"]], "Summary": [[405, "summary"], [406, "summary"], [407, "summary"], [408, "summary"], [409, "summary"], [410, "summary"], [411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [447, "summary"], [476, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[544, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr1-and-dr2"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[543, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr3"]], "Super exponential cutoff power law model used for 3FGL": [[542, "super-exponential-cutoff-power-law-model-used-for-3fgl"]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[257, "superexpcutoffpowerlaw3fglspectralmodel"]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[258, "superexpcutoffpowerlaw4fgldr3spectralmodel"]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[259, "superexpcutoffpowerlaw4fglspectralmodel"]], "Supernova Remnant Models": [[494, "supernova-remnant-models"]], "Support for Asymmetric IRFs": [[466, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[391, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[482, "survey-map-script"]], "Survey panel plots": [[565, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[260, "temporal-model-registry"]], "TS map estimation": [[443, "ts-map-estimation"]], "TSMapEstimator": [[129, "tsmapestimator"]], "Task List": [[378, "task-list"]], "Task list": [[377, "task-list"], [379, "task-list"], [380, "task-list"], [381, "task-list"], [382, "task-list"], [383, "task-list"]], "Template spatial model": [[524, "template-spatial-model"]], "Template spectral model": [[545, "template-spectral-model"]], "TemplateNDSpatialModel": [[261, "templatendspatialmodel"]], "TemplateNDSpectralModel": [[262, "templatendspectralmodel"]], "TemplateNPredModel": [[263, "templatenpredmodel"]], "TemplatePhaseCurveTemporalModel": [[264, "templatephasecurvetemporalmodel"]], "TemplateSpatialModel": [[265, "templatespatialmodel"]], "TemplateSpectralModel": [[266, "templatespectralmodel"]], "Temporal models": [[471, "temporal-models"], [514, "temporal-models"]], "TemporalModel": [[267, "temporalmodel"]], "Testing of plotting functions": [[366, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[372, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[450, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[396, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[396, "the-gammapy-extra-repository"]], "The index tables": [[497, "the-index-tables"]], "The reflected region finder": [[509, "the-reflected-region-finder"]], "The results for testing energy dependence": [[450, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[450, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[448, "the-setup"], [465, "the-setup"], [473, "the-setup"]], "Theta squared event distribution": [[478, "theta-squared-event-distribution"]], "Time": [[480, "time"]], "Time bin preparation": [[381, "time-bin-preparation"]], "Time bins": [[381, "time-bins"]], "Time differences": [[564, "time-differences"]], "Time format and scale": [[564, "time-format-and-scale"]], "Time handling in Gammapy": [[564, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[451, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[195, "timemapaxis"], [468, "timemapaxis"]], "Timing Analysis": [[375, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[278, "timmerkonig-lightcurve-simulator"]], "Troubleshooting": [[401, "troubleshooting"], [560, "troubleshooting"]], "Tutorial overview": [[450, "tutorial-overview"], [475, "tutorial-overview"]], "Tutorials": [[386, "tutorials"], [480, "tutorials"]], "Tutorials Overview": [[398, "tutorials-overview"]], "Type validation": [[393, "type-validation"]], "Types of supported datasets": [[496, "types-of-supported-datasets"]], "Unification of flux estimators?": [[390, "unification-of-flux-estimators"]], "Unify calling interface for models": [[377, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[513, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[394, "use-cases"]], "Use cases / scenarios": [[376, "use-cases-scenarios"]], "User guide": [[501, "user-guide"]], "User perspective": [[373, "user-perspective"]], "Using Anaconda / Miniconda": [[399, "using-anaconda-miniconda"]], "Using Factory Methods": [[468, "using-factory-methods"]], "Using Gammapy": [[402, "using-gammapy"]], "Using Gammapy IRFs": [[466, "using-gammapy-irfs"]], "Using Mamba": [[399, "using-mamba"]], "Using YAML configuration files": [[484, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[440, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[440, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[491, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[495, "using-gammapy-catalog"]], "Using gammapy.data": [[497, "using-gammapy-data"]], "Using gammapy.datasets": [[496, "using-gammapy-datasets"], [499, "using-gammapy-datasets"]], "Using gammapy.estimators": [[498, "using-gammapy-estimators"]], "Using gammapy.irf": [[505, "using-gammapy-irf"]], "Using gammapy.makers": [[508, "using-gammapy-makers"]], "Using gammapy.maps": [[512, "using-gammapy-maps"]], "Using gammapy.modeling": [[557, "using-gammapy-modeling"]], "Using masks": [[464, "using-masks"]], "Using other package managers": [[399, "using-other-package-managers"]], "Using pip": [[399, "using-pip"]], "Using regions": [[509, "using-regions"]], "Using the reflected background estimator": [[509, "using-the-reflected-background-estimator"]], "Utility functions": [[564, "utility-functions"]], "ValleeSpiral": [[38, "valleespiral"]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[490, "velocity-distributions"]], "Venv Environments": [[397, "venv-environments"]], "Version 0.1": [[404, "version-0-1"]], "Version 0.10": [[404, "version-0-10"]], "Version 0.11": [[404, "version-0-11"]], "Version 0.12": [[404, "version-0-12"]], "Version 0.13": [[404, "version-0-13"]], "Version 0.14": [[404, "version-0-14"]], "Version 0.15": [[404, "version-0-15"]], "Version 0.16": [[404, "version-0-16"]], "Version 0.17": [[404, "version-0-17"]], "Version 0.18": [[404, "version-0-18"]], "Version 0.19": [[404, "version-0-19"]], "Version 0.2": [[404, "version-0-2"]], "Version 0.20": [[404, "version-0-20"]], "Version 0.20.1": [[404, "version-0-20-1"]], "Version 0.3": [[404, "version-0-3"]], "Version 0.4": [[404, "version-0-4"]], "Version 0.5": [[404, "version-0-5"]], "Version 0.6": [[404, "version-0-6"]], "Version 0.7": [[404, "version-0-7"]], "Version 0.8": [[404, "version-0-8"]], "Version 0.9": [[404, "version-0-9"]], "Version 1.0": [[404, "version-1-0"]], "Version 1.0.1": [[404, "version-1-0-1"]], "Version 1.0.2": [[404, "version-1-0-2"]], "Version 1.1": [[404, "version-1-1"]], "Version 1.2": [[404, "version-1-2"]], "Version numbering": [[391, "version-numbering"]], "Virtual Environments": [[397, "virtual-environments"]], "Visualing a RegionNDMap": [[513, "visualing-a-regionndmap"]], "Visualization": [[565, "visualization"]], "Visualizing and Plotting": [[468, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[561, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[562, "wstat-counts-statistic"]], "WStatCountsStatistic": [[279, "wstatcountsstatistic"]], "WcsGeom": [[196, "wcsgeom"]], "WcsMap": [[197, "wcsmap"]], "WcsNDMap": [[198, "wcsndmap"]], "What checks and conversions should I do for inputs?": [[366, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[371, "what-is-a-pig"]], "What is this?": [[369, "what-is-this"]], "What next?": [[437, "what-next"], [439, "what-next"], [443, "what-next"], [449, "what-next"], [457, "what-next"], [486, "what-next"]], "What others have": [[376, "what-others-have"]], "What we have": [[374, "what-we-have"], [382, "what-we-have"], [390, "what-we-have"]], "What\u2019s new?": [[406, "what-s-new"], [407, "what-s-new"], [408, "what-s-new"], [409, "what-s-new"], [410, "what-s-new"], [411, "what-s-new"], [412, "what-s-new"], [413, "what-s-new"], [414, "what-s-new"], [415, "what-s-new"], [416, "what-s-new"], [417, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"]], "What\u2019s next": [[484, "whats-next"]], "What\u2019s next?": [[440, "whats-next"]], "Where should I import from?": [[366, "where-should-i-import-from"]], "WobbleRegionsFinder": [[173, "wobbleregionsfinder"]], "Working with event lists": [[497, "working-with-event-lists"]], "Write your own CLI": [[560, "write-your-own-cli"]], "Writing Maps": [[468, "writing-maps"]], "Writing a PIG": [[371, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[513, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[497, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[516, "yaml-representation"], [517, "yaml-representation"], [518, "yaml-representation"], [519, "yaml-representation"], [520, "yaml-representation"], [521, "yaml-representation"], [522, "yaml-representation"], [523, "yaml-representation"], [524, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"]], "YusifovKucuk2004": [[39, "yusifovkucuk2004"]], "YusifovKucuk2004B": [[40, "yusifovkucuk2004b"]], "ZhaoProfile": [[27, "zhaoprofile"]], "absolute_time": [[347, "absolute-time"]], "add_colorbar": [[354, "add-colorbar"]], "add_observed_parameters": [[41, "add-observed-parameters"]], "add_pulsar_parameters": [[42, "add-pulsar-parameters"]], "add_pwn_parameters": [[43, "add-pwn-parameters"]], "add_snr_parameters": [[44, "add-snr-parameters"]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, "analysis-high-level-interface"]], "annotate_heatmap": [[355, "annotate-heatmap"]], "apply_edisp": [[108, "apply-edisp"], [112, "apply-edisp"]], "arbitrary type input and validation": [[393, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[504, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[503, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[503, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[504, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[502, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[341, "assert-quantity-allclose"]], "assert_skycoord_allclose": [[342, "assert-skycoord-allclose"]], "assert_time_allclose": [[343, "assert-time-allclose"]], "astro - Astrophysics": [[1, "astro-astrophysics"]], "cartesian": [[296, "cartesian"]], "cash": [[280, "cash"]], "cash_sum_cython": [[281, "cash-sum-cython"]], "catalog - Source catalogs": [[2, "catalog-source-catalogs"]], "check": [[11, "gammapy-check"]], "codemeta.json": [[392, "codemeta-json"]], "colormap_hess": [[356, "colormap-hess"]], "colormap_milagro": [[357, "colormap-milagro"]], "compound_region_to_regions": [[326, "compound-region-to-regions"]], "compute_chisq": [[282, "compute-chisq"]], "compute_flux_doubling": [[283, "compute-flux-doubling"]], "compute_fpp": [[284, "compute-fpp"]], "compute_fvar": [[285, "compute-fvar"]], "compute_lightcurve_doublingtime": [[130, "compute-lightcurve-doublingtime"]], "compute_lightcurve_fpp": [[131, "compute-lightcurve-fpp"]], "compute_lightcurve_fvar": [[132, "compute-lightcurve-fvar"]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[199, "containment-radius"]], "containment_region": [[200, "containment-region"]], "create_cosmic_ray_spectral_model": [[268, "create-cosmic-ray-spectral-model"]], "create_crab_spectral_model": [[269, "create-crab-spectral-model"]], "create_fermi_isotropic_diffuse_model": [[270, "create-fermi-isotropic-diffuse-model"]], "create_map_dataset_from_observation": [[109, "create-map-dataset-from-observation"]], "create_map_dataset_geoms": [[110, "create-map-dataset-geoms"]], "cstat": [[286, "cstat"]], "data": [[393, "data"]], "data - DL3 data and observations": [[3, "data-dl3-data-and-observations"]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, "datasets-reduced-datasets"]], "docs.gammapy.org": [[396, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[318, "draw"]], "earth_location_from_dict": [[305, "earth-location-from-dict"]], "estimate_exposure_reco_energy": [[133, "estimate-exposure-reco-energy"]], "estimators - High level estimators": [[5, "estimators-high-level-estimators"]], "f_cash_root_cython": [[287, "f-cash-root-cython"]], "find_peaks": [[134, "find-peaks"]], "find_peaks_in_flux_map": [[135, "find-peaks-in-flux-map"]], "fov_to_sky": [[297, "fov-to-sky"]], "galactic": [[298, "galactic"]], "gamLike": [[488, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[396, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[136, "get-combined-significance-maps"]], "get_images_paths": [[331, "get-images-paths"]], "get_irfs_features": [[93, "get-irfs-features"]], "get_random_state": [[319, "get-random-state"]], "get_rebinned_axis": [[137, "get-rebinned-axis"]], "get_wstat_gof_terms": [[288, "get-wstat-gof-terms"]], "get_wstat_mu_bkg": [[289, "get-wstat-mu-bkg"]], "hierarchical_clustering": [[293, "hierarchical-clustering"]], "hstack_columns": [[336, "hstack-columns"]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[271, "integrate-spectrum"]], "interpolate_profile": [[308, "interpolate-profile"]], "interpolation_scale": [[309, "interpolation-scale"]], "irf - Instrument response functions": [[7, "irf-instrument-response-functions"]], "load_irf_dict_from_file": [[159, "load-irf-dict-from-file"]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, "make-base-catalog-galactic"]], "make_catalog_random_positions_cube": [[46, "make-catalog-random-positions-cube"]], "make_catalog_random_positions_sphere": [[47, "make-catalog-random-positions-sphere"]], "make_concentric_annulus_sky_regions": [[327, "make-concentric-annulus-sky-regions"]], "make_counts_rad_max": [[174, "make-counts-rad-max"]], "make_edisp_kernel_map": [[175, "make-edisp-kernel-map"]], "make_edisp_map": [[176, "make-edisp-map"]], "make_effective_livetime_map": [[177, "make-effective-livetime-map"]], "make_map_background_irf": [[178, "make-map-background-irf"]], "make_map_exposure_true_energy": [[179, "make-map-exposure-true-energy"]], "make_observation_time_map": [[180, "make-observation-time-map"]], "make_orthogonal_rectangle_sky_regions": [[328, "make-orthogonal-rectangle-sky-regions"]], "make_path": [[332, "make-path"]], "make_psf_map": [[181, "make-psf-map"]], "make_theta_squared_table": [[182, "make-theta-squared-table"]], "makers - Data reduction": [[8, "makers-data-reduction"]], "maps - Sky maps": [[9, "maps-sky-maps"]], "modeling - Models and fitting": [[10, "modeling-models-and-fitting"]], "motion_since_birth": [[299, "motion-since-birth"]], "mpl_plot_check": [[344, "mpl-plot-check"]], "multiprocessing_manager": [[315, "multiprocessing-manager"]], "norm_bounds_cython": [[290, "norm-bounds-cython"]], "normalize": [[320, "normalize"]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[94, "observatory-locations"]], "pdf": [[321, "pdf"]], "plot_contour_line": [[358, "plot-contour-line"]], "plot_distribution": [[359, "plot-distribution"]], "plot_heatmap": [[360, "plot-heatmap"]], "plot_map_rgb": [[361, "plot-map-rgb"]], "plot_npred_signal": [[362, "plot-npred-signal"]], "plot_spectrum_datasets_off_regions": [[363, "plot-spectrum-datasets-off-regions"]], "plot_theta_squared_table": [[364, "plot-theta-squared-table"]], "polar": [[300, "polar"]], "pydantic": [[393, "pydantic"]], "radial_distributions": [[48, "radial-distributions"]], "read_hermes_cube": [[272, "read-hermes-cube"], [274, "read-hermes-cube"]], "read_yaml": [[333, "read-yaml"]], "recursive_merge_dicts": [[334, "recursive-merge-dicts"]], "region_to_frame": [[329, "region-to-frame"]], "regions_to_compound_region": [[330, "regions-to-compound-region"]], "requires_data": [[345, "requires-data"]], "requires_dependency": [[346, "requires-dependency"]], "resample_energy_edges": [[138, "resample-energy-edges"]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[316, "run-multiprocessing"]], "sample_powerlaw": [[322, "sample-powerlaw"]], "sample_sphere": [[323, "sample-sphere"]], "sample_sphere_distance": [[324, "sample-sphere-distance"]], "sample_times": [[325, "sample-times"]], "scale_plot_flux": [[273, "scale-plot-flux"]], "scripts - Command line tools": [[11, "scripts-command-line-tools"]], "select_nested_models": [[275, "select-nested-models"]], "sky_to_fov": [[301, "sky-to-fov"]], "split_dataset": [[111, "split-dataset"], [113, "split-dataset"]], "standard_scaler": [[294, "standard-scaler"]], "standardise_unit": [[351, "standardise-unit"]], "stat_profile_ul_scipy": [[276, "stat-profile-ul-scipy"]], "stats - Statistics": [[12, "stats-statistics"]], "structure_function": [[291, "structure-function"]], "table_row_to_dict": [[337, "table-row-to-dict"]], "table_standardise_units_copy": [[338, "table-standardise-units-copy"]], "table_standardise_units_inplace": [[339, "table-standardise-units-inplace"]], "the base class": [[393, "the-base-class"]], "time_ref_from_dict": [[348, "time-ref-from-dict"]], "time_ref_to_dict": [[349, "time-ref-to-dict"]], "time_relative_to_ref": [[350, "time-relative-to-ref"]], "trapz_loglog": [[306, "trapz-loglog"]], "unit_from_fits_image_hdu": [[352, "unit-from-fits-image-hdu"]], "utils - Utilities": [[13, "utils-utilities"]], "velocity_distributions": [[49, "velocity-distributions"]], "velocity_glon_glat": [[302, "velocity-glon-glat"]], "visualization - Plotting features": [[14, "visualization-plotting-features"]], "write_yaml": [[335, "write-yaml"]], "wstat": [[292, "wstat"]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[559, "term-1D-Analysis", true]], "3d analysis": [[559, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[307, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[347, "gammapy.utils.time.absolute_time", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[160, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[354, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[559, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[119, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[121, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[148, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[91, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[355, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[108, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[112, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[191, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[114, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[341, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[342, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[343, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[206, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[208, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[162, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[171, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[165, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[172, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "axes (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[202, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[310, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[139, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[140, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[141, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[559, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[161, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[296, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[559, "term-Cash", true]], "cash() (in module gammapy.stats)": [[280, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[281, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[277, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[80, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[206, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[208, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[340, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[356, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[357, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[326, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[211, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[282, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[277, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[279, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[277, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[279, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[283, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[284, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[285, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[130, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[131, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[132, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[277, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[279, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[114, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[117, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[118, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[125, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[127, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[128, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[129, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[214, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[199, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[200, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[87, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[96, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[114, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[117, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[118, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[125, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[128, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[191, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[237, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[206, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[208, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[80, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[201, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[118, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[201, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[237, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[202, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[84, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[86, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[99, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[102, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[106, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[184, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[185, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[186, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[188, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[191, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[193, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[194, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[196, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[197, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[198, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[236, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[253, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[268, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[269, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[270, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[109, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[110, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[286, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[295, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[153, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[201, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[559, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[96, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[95, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[97, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[161, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[80, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[80, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[80, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[63, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[64, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[65, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[559, "term-DL3", true]], "dl4": [[559, "term-DL4", true]], "dl5": [[559, "term-DL5", true]], "dl6": [[559, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[318, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[92, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[305, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[219, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[559, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[143, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[144, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[142, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[143, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[144, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[145, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[155, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[158, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[147, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[161, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[118, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[118, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[118, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[114, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[118, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[129, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[128, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[128, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[559, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[117, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[115, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[217, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[231, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[251, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[252, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[154, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[154, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[100, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[105, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[87, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[100, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[105, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[81, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[82, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[118, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[126, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[287, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[87, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[87, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[203, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[204, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[83, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[83, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[83, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[119, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[120, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[121, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[98, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[559, "term-FoV", true]], "fov background": [[559, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[297, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[148, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[162, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[237, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[196, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[189, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[142, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[143, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[144, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[98, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[99, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[102, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[106, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[216, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[217, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[231, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[236, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[237, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[238, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[242, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[251, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[252, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[253, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[255, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[256, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[263, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[267, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[207, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[209, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[80, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[143, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[80, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[201, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[80, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[83, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[142, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[143, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[147, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[153, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[155, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[158, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[143, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[144, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[155, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[158, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[185, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[186, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[188, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[192, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[194, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[197, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[198, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[99, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[102, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[106, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[195, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[195, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[184, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[186, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[198, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[99, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[102, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[106, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[119, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[121, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[139, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[140, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[141, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[142, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[143, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[144, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[145, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[147, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[149, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[150, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[156, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[152, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[154, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[155, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[157, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[158, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[183, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[184, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[185, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[186, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[188, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[192, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[193, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[194, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[196, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[197, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[198, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[184, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[196, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[157, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[102, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[119, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[121, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[85, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[88, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[217, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[231, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[237, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[242, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[251, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[252, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[253, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[255, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[256, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[263, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[267, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[145, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[217, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[242, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[251, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[255, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[217, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[193, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[153, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[81, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[84, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[89, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[119, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[121, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[185, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[186, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[187, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[188, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[194, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[197, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[198, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[201, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[207, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[209, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[121, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[139, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[140, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[141, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[142, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[145, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[147, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[149, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[156, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[152, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[154, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[157, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[187, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[189, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[194, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[195, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[84, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[189, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[190, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[195, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[195, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[84, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[186, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[216, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[238, "gammapy.modeling.models.Models.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[237, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[559, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[298, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[66, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[183, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[192, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[83, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[91, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[103, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[104, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[303, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[83, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[91, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[331, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[184, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[93, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[114, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[80, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[319, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[114, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[201, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[103, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[288, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[289, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.groups", false]], "gti": [[559, "term-GTI", true]], "gti (class in gammapy.data)": [[84, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[98, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[85, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[303, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[293, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[559, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[184, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[185, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[186, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[336, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[89, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[124, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[75, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[80, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[303, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[277, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[279, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[271, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[308, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[309, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[317, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[559, "term-IRF", true]], "irf (class in gammapy.irf)": [[149, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[151, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[150, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[183, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[559, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[170, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[160, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[187, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[304, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[87, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[303, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[159, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[165, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[162, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[162, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[327, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[165, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[166, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[166, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[167, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[174, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[160, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[161, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[162, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[165, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[165, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[175, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[176, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[162, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[165, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[165, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[170, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[171, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[171, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[171, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[171, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[171, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[171, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[165, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[328, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[332, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[165, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[172, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[181, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[559, "term-Maker", true]], "maker (class in gammapy.makers)": [[164, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[163, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[188, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[189, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[190, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[191, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[99, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[100, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[165, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[101, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[353, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[192, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[96, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[98, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[143, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[144, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[150, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[155, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[158, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "masked (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[202, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[202, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.message", false]], "met": [[559, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[162, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[202, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[311, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[312, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[83, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[82, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[101, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[120, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[82, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[101, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[120, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[82, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[101, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[120, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[82, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[101, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[120, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[82, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[101, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[120, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[234, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[98, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[299, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[344, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[315, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[90, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[129, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[161, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[313, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[277, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[279, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[68, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[79, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[96, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[98, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[290, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[124, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[153, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[320, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[80, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[80, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[86, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[105, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[87, "gammapy.data.ObservationFilter", false]], "observations (class in gammapy.data)": [[89, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[90, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[88, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[94, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[161, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[103, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[104, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[205, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[90, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[129, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[161, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[206, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[207, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[97, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[237, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[156, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[303, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[321, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[124, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[153, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[166, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[195, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[124, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[353, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[358, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[201, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[359, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[124, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[360, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[153, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[361, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[362, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[353, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[363, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[364, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[92, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[91, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[92, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[300, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[314, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[68, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[79, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[63, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[64, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[65, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[206, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[208, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[208, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[209, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[124, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[124, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.projection", false]], "psf": [[559, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[152, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[153, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[155, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[158, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[153, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[154, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[155, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[148, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[157, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[81, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[83, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[84, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[85, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[86, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[88, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[91, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[97, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[98, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[99, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[102, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[103, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[106, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[119, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[121, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[139, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[140, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[141, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[142, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[143, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[144, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[145, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[147, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[149, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[150, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[156, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[152, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[153, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[154, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[155, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[157, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[158, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[185, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[186, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[188, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[192, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[194, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[197, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[198, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[216, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[238, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[103, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[103, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[272, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[274, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[103, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[103, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[333, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[237, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[559, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[158, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[334, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[559, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[167, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[168, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[329, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[193, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[194, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[330, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[169, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[143, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[144, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[150, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[155, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[158, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[345, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[346, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[559, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[170, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[559, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[68, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[75, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[79, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[63, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[64, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[65, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[66, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[90, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[100, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[105, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[114, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[117, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[118, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[122, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[123, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[125, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[126, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[127, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[128, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[129, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[160, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[161, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[162, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[164, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[165, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[166, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[167, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[168, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[169, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[170, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[171, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[172, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[173, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[340, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[316, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[161, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[171, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[317, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[317, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[100, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[105, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[100, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[105, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[322, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[100, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[105, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[100, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[105, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[323, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[324, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[325, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[273, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[307, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[201, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[275, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[89, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[129, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[114, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[114, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[117, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[118, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[125, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[127, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[128, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[129, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[201, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[189, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[201, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[90, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[75, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[301, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[153, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[124, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[63, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[64, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[65, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[66, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[75, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[79, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[247, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[69, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[70, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[71, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[72, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[73, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[74, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[75, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[76, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[77, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[78, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[248, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[106, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[172, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[107, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[111, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[113, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[559, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[294, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[351, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[96, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[276, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[96, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[203, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[98, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[291, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[202, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[277, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[279, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[337, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[338, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[339, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[63, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[64, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[65, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[66, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[82, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[96, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[98, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[99, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[101, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[102, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[103, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[104, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[106, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[114, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[116, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[117, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[118, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[120, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[122, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[123, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[125, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[126, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[127, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[128, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[129, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[143, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[144, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[150, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[155, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[158, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[160, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[161, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[162, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[164, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[165, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[166, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[167, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[170, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[171, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[172, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[260, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[191, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[81, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[91, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[348, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[349, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[350, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[84, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[231, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[252, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[267, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[195, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[278, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[96, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[202, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.fitresult method)": [[204, "gammapy.modeling.FitResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[237, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[205, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[206, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[208, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[83, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[191, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[153, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[63, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[64, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[65, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[66, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[82, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[101, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[120, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.fitresult method)": [[204, "gammapy.modeling.FitResult.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[204, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[205, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[306, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[559, "term-True-Energy", true]], "ts": [[559, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[277, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[279, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[119, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[121, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[86, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[211, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[214, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[215, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[217, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[224, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[225, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[226, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[227, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[231, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[237, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[239, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[242, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[249, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[250, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[252, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[253, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[255, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[256, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[263, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[267, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[210, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[211, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[212, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[213, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[214, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[215, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[217, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[218, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[220, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[221, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[223, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[224, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[225, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[226, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[227, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[228, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[229, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[231, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[232, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[233, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[235, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[237, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[239, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[240, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[241, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[242, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[243, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[244, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[245, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[246, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[249, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[250, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[251, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[252, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[253, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[254, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[255, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[256, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[257, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[258, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[259, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[266, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[267, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[207, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[209, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[139, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[140, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[141, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[142, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[145, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[147, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[149, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[156, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[152, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[154, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[157, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[185, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[186, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[187, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[188, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[194, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[195, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[197, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[198, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[352, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[206, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[208, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[183, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[184, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[187, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[189, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[193, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[195, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[196, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[190, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[82, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[101, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[120, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[213, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[206, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[207, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[208, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[209, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[85, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[88, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[302, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[216, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[238, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[196, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[197, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[198, "gammapy.maps.WcsNDMap", false]], "width (gammapy.maps.hpxgeom attribute)": [[184, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[193, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[196, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[251, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[67, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[173, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[190, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[85, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[88, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[81, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[84, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[86, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[97, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[98, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[99, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[102, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[106, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[107, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[119, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[121, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[139, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[140, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[141, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[142, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[143, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[144, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[145, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[146, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[147, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[149, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[150, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[156, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[152, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[153, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[154, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[155, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[157, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[158, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[185, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[186, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[188, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[192, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[194, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[197, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[198, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[204, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[230, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[261, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[262, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[263, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[264, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[265, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[216, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[238, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[104, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[335, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[559, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[292, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[279, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[124, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[124, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[124, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog3FGL"], [61, 1, 1, "", "SourceCatalog3FHL"], [62, 1, 1, "", "SourceCatalog3HWC"], [63, 1, 1, "", "SourceCatalog3PC"], [64, 1, 1, "", "SourceCatalog4FGL"], [65, 1, 1, "", "SourceCatalogGammaCat"], [66, 1, 1, "", "SourceCatalogHGPS"], [67, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [68, 1, 1, "", "SourceCatalogObject"], [69, 1, 1, "", "SourceCatalogObject1LHAASO"], [70, 1, 1, "", "SourceCatalogObject2FHL"], [71, 1, 1, "", "SourceCatalogObject2HWC"], [72, 1, 1, "", "SourceCatalogObject3FGL"], [73, 1, 1, "", "SourceCatalogObject3FHL"], [74, 1, 1, "", "SourceCatalogObject3HWC"], [75, 1, 1, "", "SourceCatalogObject3PC"], [76, 1, 1, "", "SourceCatalogObject4FGL"], [77, 1, 1, "", "SourceCatalogObjectGammaCat"], [78, 1, 1, "", "SourceCatalogObjectHGPS"], [79, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[66, 2, 1, "", "description"], [66, 3, 1, "", "gaussian_component"], [66, 2, 1, "", "large_scale_component"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "table_associations"], [66, 2, 1, "", "table_components"], [66, 2, 1, "", "table_identifications"], [66, 2, 1, "", "table_large_scale_component"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[67, 3, 1, "", "evaluate"], [67, 3, 1, "", "peak_brightness"], [67, 3, 1, "", "peak_brightness_error"], [67, 3, 1, "", "peak_latitude"], [67, 3, 1, "", "peak_latitude_error"], [67, 3, 1, "", "width"], [67, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[68, 2, 1, "", "name"], [68, 2, 1, "", "position"], [68, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"], [69, 3, 1, "", "sky_model"], [69, 3, 1, "", "spatial_model"], [69, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[70, 2, 1, "", "asso"], [70, 2, 1, "", "energy_range"], [70, 2, 1, "", "flux_points"], [70, 2, 1, "", "flux_points_meta"], [70, 2, 1, "", "flux_points_table"], [70, 3, 1, "", "info"], [70, 2, 1, "", "is_pointlike"], [70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[71, 3, 1, "", "info"], [71, 2, 1, "", "n_models"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[72, 2, 1, "", "asso"], [72, 2, 1, "", "energy_range"], [72, 2, 1, "", "flux_points"], [72, 2, 1, "", "flux_points_meta"], [72, 2, 1, "", "flux_points_table"], [72, 3, 1, "", "info"], [72, 2, 1, "", "is_pointlike"], [72, 3, 1, "", "lightcurve"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[73, 2, 1, "", "asso"], [73, 2, 1, "", "energy_range"], [73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_meta"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "is_pointlike"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 2, 1, "", "n_models"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "lightcurve"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[76, 2, 1, "", "asso"], [76, 2, 1, "", "flux_points"], [76, 2, 1, "", "flux_points_meta"], [76, 2, 1, "", "flux_points_table"], [76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 3, 1, "", "lightcurve"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[78, 3, 1, "", "components_models"], [78, 2, 1, "", "energy_range"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "spatial_model"]], "gammapy.data": [[80, 1, 1, "", "DataStore"], [81, 1, 1, "", "EventList"], [82, 1, 1, "", "EventListMetaData"], [83, 1, 1, "", "FixedPointingInfo"], [84, 1, 1, "", "GTI"], [85, 1, 1, "", "HDUIndexTable"], [86, 1, 1, "", "Observation"], [87, 1, 1, "", "ObservationFilter"], [88, 1, 1, "", "ObservationTable"], [89, 1, 1, "", "Observations"], [90, 1, 1, "", "ObservationsEventsSampler"], [91, 1, 1, "", "PointingInfo"], [92, 1, 1, "", "PointingMode"], [93, 4, 1, "", "get_irfs_features"], [94, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[80, 2, 1, "", "DEFAULT_HDU_TABLE"], [80, 2, 1, "", "DEFAULT_OBS_TABLE"], [80, 3, 1, "", "check"], [80, 3, 1, "", "copy_obs"], [80, 3, 1, "", "from_dir"], [80, 3, 1, "", "from_events_files"], [80, 3, 1, "", "from_file"], [80, 3, 1, "", "get_observations"], [80, 3, 1, "", "info"], [80, 3, 1, "", "obs"], [80, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[81, 2, 1, "", "altaz"], [81, 2, 1, "", "altaz_frame"], [81, 2, 1, "", "altaz_from_table"], [81, 3, 1, "", "check"], [81, 3, 1, "", "copy"], [81, 2, 1, "", "energy"], [81, 3, 1, "", "from_stack"], [81, 2, 1, "", "galactic"], [81, 2, 1, "", "galactic_median"], [81, 2, 1, "", "is_pointed_observation"], [81, 3, 1, "", "map_coord"], [81, 2, 1, "", "observation_dead_time_fraction"], [81, 2, 1, "", "observation_live_time_duration"], [81, 2, 1, "", "observation_time_duration"], [81, 2, 1, "", "observation_time_start"], [81, 2, 1, "", "observation_time_stop"], [81, 2, 1, "", "observatory_earth_location"], [81, 2, 1, "", "offset"], [81, 2, 1, "", "offset_from_median"], [81, 3, 1, "", "peek"], [81, 3, 1, "", "plot_energy"], [81, 3, 1, "", "plot_energy_offset"], [81, 3, 1, "", "plot_image"], [81, 3, 1, "", "plot_offset2_distribution"], [81, 3, 1, "", "plot_time"], [81, 2, 1, "", "pointing_radec"], [81, 2, 1, "", "radec"], [81, 3, 1, "", "read"], [81, 3, 1, "", "select_energy"], [81, 3, 1, "", "select_mask"], [81, 3, 1, "", "select_offset"], [81, 3, 1, "", "select_parameter"], [81, 3, 1, "", "select_rad_max"], [81, 3, 1, "", "select_region"], [81, 3, 1, "", "select_row_subset"], [81, 3, 1, "", "select_time"], [81, 3, 1, "", "stack"], [81, 2, 1, "", "time"], [81, 2, 1, "", "time_ref"], [81, 3, 1, "", "to_table_hdu"], [81, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[82, 3, 1, "", "construct"], [82, 3, 1, "", "copy"], [82, 3, 1, "", "dict"], [82, 3, 1, "", "from_header"], [82, 3, 1, "", "from_orm"], [82, 3, 1, "", "json"], [82, 2, 1, "", "model_computed_fields"], [82, 2, 1, "", "model_config"], [82, 3, 1, "", "model_construct"], [82, 3, 1, "", "model_copy"], [82, 3, 1, "", "model_dump"], [82, 3, 1, "", "model_dump_json"], [82, 2, 1, "", "model_extra"], [82, 2, 1, "", "model_fields"], [82, 2, 1, "", "model_fields_set"], [82, 3, 1, "", "model_json_schema"], [82, 3, 1, "", "model_parametrized_name"], [82, 3, 1, "", "model_post_init"], [82, 3, 1, "", "model_rebuild"], [82, 3, 1, "", "model_validate"], [82, 3, 1, "", "model_validate_json"], [82, 3, 1, "", "model_validate_strings"], [82, 3, 1, "", "parse_file"], [82, 3, 1, "", "parse_obj"], [82, 3, 1, "", "parse_raw"], [82, 3, 1, "", "schema"], [82, 3, 1, "", "schema_json"], [82, 2, 1, "", "tag"], [82, 3, 1, "", "to_header"], [82, 3, 1, "", "to_yaml"], [82, 3, 1, "", "update_forward_refs"], [82, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[83, 2, 1, "", "fixed_altaz"], [83, 2, 1, "", "fixed_icrs"], [83, 3, 1, "", "from_fits_header"], [83, 3, 1, "", "get_altaz"], [83, 3, 1, "", "get_icrs"], [83, 2, 1, "", "mode"], [83, 3, 1, "", "read"], [83, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[84, 3, 1, "", "copy"], [84, 3, 1, "", "create"], [84, 3, 1, "", "delete_interval"], [84, 3, 1, "", "from_stack"], [84, 3, 1, "", "from_table_hdu"], [84, 3, 1, "", "from_time_intervals"], [84, 3, 1, "", "group_table"], [84, 2, 1, "", "met_start"], [84, 2, 1, "", "met_stop"], [84, 3, 1, "", "read"], [84, 3, 1, "", "select_time"], [84, 3, 1, "", "stack"], [84, 2, 1, "", "time_delta"], [84, 2, 1, "", "time_intervals"], [84, 2, 1, "", "time_ref"], [84, 2, 1, "", "time_start"], [84, 2, 1, "", "time_stop"], [84, 2, 1, "", "time_sum"], [84, 3, 1, "", "to_table_hdu"], [84, 3, 1, "", "union"], [84, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[85, 2, 1, "", "ColumnClass"], [85, 2, 1, "", "VALID_HDU_CLASS"], [85, 2, 1, "", "VALID_HDU_TYPE"], [85, 3, 1, "", "add_column"], [85, 3, 1, "", "add_columns"], [85, 3, 1, "", "add_index"], [85, 3, 1, "", "add_row"], [85, 3, 1, "", "argsort"], [85, 3, 1, "", "as_array"], [85, 2, 1, "", "base_dir"], [85, 2, 1, "", "colnames"], [85, 3, 1, "", "convert_bytestring_to_unicode"], [85, 3, 1, "", "convert_unicode_to_bytestring"], [85, 3, 1, "", "copy"], [85, 2, 1, "", "dtype"], [85, 3, 1, "", "field"], [85, 3, 1, "", "filled"], [85, 3, 1, "", "from_pandas"], [85, 3, 1, "", "group_by"], [85, 2, 1, "", "groups"], [85, 2, 1, "", "has_masked_columns"], [85, 2, 1, "", "has_masked_values"], [85, 2, 1, "", "has_mixin_columns"], [85, 2, 1, "", "hdu_class_unique"], [85, 3, 1, "", "hdu_location"], [85, 2, 1, "", "hdu_type_unique"], [85, 2, 1, "", "iloc"], [85, 3, 1, "", "index_column"], [85, 3, 1, "", "index_mode"], [85, 2, 1, "", "indices"], [85, 2, 1, "", "info"], [85, 3, 1, "", "insert_row"], [85, 3, 1, "", "items"], [85, 3, 1, "", "itercols"], [85, 3, 1, "", "iterrows"], [85, 3, 1, "", "keep_columns"], [85, 3, 1, "", "keys"], [85, 2, 1, "", "loc"], [85, 2, 1, "", "loc_indices"], [85, 3, 1, "", "location_info"], [85, 2, 1, "", "mask"], [85, 2, 1, "", "masked"], [85, 2, 1, "", "meta"], [85, 3, 1, "", "more"], [85, 2, 1, "", "obs_id_unique"], [85, 3, 1, "", "pformat"], [85, 3, 1, "", "pformat_all"], [85, 3, 1, "", "pprint"], [85, 3, 1, "", "pprint_all"], [85, 2, 1, "", "pprint_exclude_names"], [85, 2, 1, "", "pprint_include_names"], [85, 3, 1, "", "read"], [85, 3, 1, "", "remove_column"], [85, 3, 1, "", "remove_columns"], [85, 3, 1, "", "remove_indices"], [85, 3, 1, "", "remove_row"], [85, 3, 1, "", "remove_rows"], [85, 3, 1, "", "rename_column"], [85, 3, 1, "", "rename_columns"], [85, 3, 1, "", "replace_column"], [85, 3, 1, "", "reverse"], [85, 3, 1, "", "round"], [85, 3, 1, "", "row_idx"], [85, 3, 1, "", "show_in_browser"], [85, 3, 1, "", "show_in_notebook"], [85, 3, 1, "", "sort"], [85, 3, 1, "", "summary"], [85, 3, 1, "", "to_pandas"], [85, 3, 1, "", "update"], [85, 3, 1, "", "values"], [85, 3, 1, "", "values_equal"], [85, 2, 1, "", "write"]], "gammapy.data.Observation": [[86, 2, 1, "", "aeff"], [86, 2, 1, "", "available_hdus"], [86, 2, 1, "", "available_irfs"], [86, 2, 1, "", "bkg"], [86, 3, 1, "", "check"], [86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 2, 1, "", "edisp"], [86, 2, 1, "", "events"], [86, 3, 1, "", "get_pointing_altaz"], [86, 3, 1, "", "get_pointing_icrs"], [86, 2, 1, "", "gti"], [86, 2, 1, "", "meta"], [86, 2, 1, "", "muoneff"], [86, 2, 1, "", "obs_info"], [86, 2, 1, "", "observation_dead_time_fraction"], [86, 2, 1, "", "observation_live_time_duration"], [86, 2, 1, "", "observation_time_duration"], [86, 2, 1, "", "observatory_earth_location"], [86, 3, 1, "", "peek"], [86, 2, 1, "", "pointing"], [86, 2, 1, "", "psf"], [86, 2, 1, "", "rad_max"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 2, 1, "", "target_radec"], [86, 2, 1, "", "tmid"], [86, 2, 1, "", "tstart"], [86, 2, 1, "", "tstop"], [86, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[87, 2, 1, "", "EVENT_FILTER_TYPES"], [87, 3, 1, "", "copy"], [87, 3, 1, "", "filter_events"], [87, 3, 1, "", "filter_gti"], [87, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationTable": [[88, 2, 1, "", "ColumnClass"], [88, 3, 1, "", "add_column"], [88, 3, 1, "", "add_columns"], [88, 3, 1, "", "add_index"], [88, 3, 1, "", "add_row"], [88, 3, 1, "", "argsort"], [88, 3, 1, "", "as_array"], [88, 2, 1, "", "colnames"], [88, 3, 1, "", "convert_bytestring_to_unicode"], [88, 3, 1, "", "convert_unicode_to_bytestring"], [88, 3, 1, "", "copy"], [88, 2, 1, "", "dtype"], [88, 3, 1, "", "field"], [88, 3, 1, "", "filled"], [88, 3, 1, "", "from_pandas"], [88, 3, 1, "", "group_by"], [88, 2, 1, "", "groups"], [88, 2, 1, "", "has_masked_columns"], [88, 2, 1, "", "has_masked_values"], [88, 2, 1, "", "has_mixin_columns"], [88, 2, 1, "", "iloc"], [88, 3, 1, "", "index_column"], [88, 3, 1, "", "index_mode"], [88, 2, 1, "", "indices"], [88, 2, 1, "", "info"], [88, 3, 1, "", "insert_row"], [88, 3, 1, "", "items"], [88, 3, 1, "", "itercols"], [88, 3, 1, "", "iterrows"], [88, 3, 1, "", "keep_columns"], [88, 3, 1, "", "keys"], [88, 2, 1, "", "loc"], [88, 2, 1, "", "loc_indices"], [88, 2, 1, "", "mask"], [88, 2, 1, "", "masked"], [88, 2, 1, "", "meta"], [88, 3, 1, "", "more"], [88, 3, 1, "", "pformat"], [88, 3, 1, "", "pformat_all"], [88, 2, 1, "", "pointing_galactic"], [88, 2, 1, "", "pointing_radec"], [88, 3, 1, "", "pprint"], [88, 3, 1, "", "pprint_all"], [88, 2, 1, "", "pprint_exclude_names"], [88, 2, 1, "", "pprint_include_names"], [88, 3, 1, "", "read"], [88, 3, 1, "", "remove_column"], [88, 3, 1, "", "remove_columns"], [88, 3, 1, "", "remove_indices"], [88, 3, 1, "", "remove_row"], [88, 3, 1, "", "remove_rows"], [88, 3, 1, "", "rename_column"], [88, 3, 1, "", "rename_columns"], [88, 3, 1, "", "replace_column"], [88, 3, 1, "", "reverse"], [88, 3, 1, "", "round"], [88, 3, 1, "", "select_obs_id"], [88, 3, 1, "", "select_observations"], [88, 3, 1, "", "select_range"], [88, 3, 1, "", "select_sky_circle"], [88, 3, 1, "", "select_time_range"], [88, 3, 1, "", "show_in_browser"], [88, 3, 1, "", "show_in_notebook"], [88, 3, 1, "", "sort"], [88, 3, 1, "", "summary"], [88, 2, 1, "", "time_ref"], [88, 2, 1, "", "time_start"], [88, 2, 1, "", "time_stop"], [88, 3, 1, "", "to_pandas"], [88, 3, 1, "", "update"], [88, 3, 1, "", "values"], [88, 3, 1, "", "values_equal"], [88, 2, 1, "", "write"]], "gammapy.data.Observations": [[89, 3, 1, "", "append"], [89, 3, 1, "", "clear"], [89, 3, 1, "", "count"], [89, 3, 1, "", "extend"], [89, 3, 1, "", "from_stack"], [89, 3, 1, "", "group_by_label"], [89, 2, 1, "", "ids"], [89, 3, 1, "", "in_memory_generator"], [89, 3, 1, "", "index"], [89, 3, 1, "", "insert"], [89, 3, 1, "", "pop"], [89, 3, 1, "", "remove"], [89, 3, 1, "", "reverse"], [89, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[90, 2, 1, "", "n_jobs"], [90, 2, 1, "", "parallel_backend"], [90, 3, 1, "", "run"], [90, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[91, 2, 1, "", "altaz"], [91, 2, 1, "", "altaz_frame"], [91, 2, 1, "", "altaz_from_table"], [91, 3, 1, "", "altaz_interpolate"], [91, 2, 1, "", "duration"], [91, 3, 1, "", "get_altaz"], [91, 3, 1, "", "get_icrs"], [91, 2, 1, "", "location"], [91, 2, 1, "", "radec"], [91, 3, 1, "", "read"], [91, 2, 1, "", "time"], [91, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[92, 2, 1, "", "DRIFT"], [92, 2, 1, "", "POINTING"]], "gammapy.datasets": [[95, 5, 1, "", "DATASET_REGISTRY"], [96, 1, 1, "", "Dataset"], [97, 1, 1, "", "Datasets"], [98, 1, 1, "", "FluxPointsDataset"], [99, 1, 1, "", "MapDataset"], [100, 1, 1, "", "MapDatasetEventSampler"], [101, 1, 1, "", "MapDatasetMetaData"], [102, 1, 1, "", "MapDatasetOnOff"], [103, 1, 1, "", "OGIPDatasetReader"], [104, 1, 1, "", "OGIPDatasetWriter"], [105, 1, 1, "", "ObservationEventSampler"], [106, 1, 1, "", "SpectrumDataset"], [107, 1, 1, "", "SpectrumDatasetOnOff"], [108, 4, 1, "", "apply_edisp"], [109, 4, 1, "", "create_map_dataset_from_observation"], [110, 4, 1, "", "create_map_dataset_geoms"], [111, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[96, 3, 1, "", "copy"], [96, 2, 1, "", "mask"], [96, 2, 1, "", "name"], [96, 3, 1, "", "stat_array"], [96, 3, 1, "", "stat_sum"], [96, 2, 1, "", "tag"], [96, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[97, 3, 1, "", "append"], [97, 3, 1, "", "clear"], [97, 2, 1, "", "contributes_to_stat"], [97, 3, 1, "", "copy"], [97, 3, 1, "", "count"], [97, 2, 1, "", "energy_axes_are_aligned"], [97, 2, 1, "", "energy_ranges"], [97, 3, 1, "", "extend"], [97, 2, 1, "", "gti"], [97, 3, 1, "", "index"], [97, 3, 1, "", "info_table"], [97, 3, 1, "", "insert"], [97, 2, 1, "", "is_all_same_energy_shape"], [97, 2, 1, "", "is_all_same_shape"], [97, 2, 1, "", "is_all_same_type"], [97, 2, 1, "", "meta_table"], [97, 2, 1, "", "models"], [97, 2, 1, "", "names"], [97, 2, 1, "", "parameters"], [97, 3, 1, "", "pop"], [97, 3, 1, "", "read"], [97, 3, 1, "", "remove"], [97, 3, 1, "", "reverse"], [97, 3, 1, "", "select_time"], [97, 3, 1, "", "slice_by_energy"], [97, 3, 1, "", "stack_reduce"], [97, 3, 1, "", "stat_sum"], [97, 3, 1, "", "to_spectrum_datasets"], [97, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[98, 3, 1, "", "copy"], [98, 3, 1, "", "data_shape"], [98, 3, 1, "", "flux_pred"], [98, 3, 1, "", "from_dict"], [98, 2, 1, "", "gti"], [98, 2, 1, "", "mask"], [98, 2, 1, "", "models"], [98, 2, 1, "", "name"], [98, 3, 1, "", "plot_fit"], [98, 3, 1, "", "plot_residuals"], [98, 3, 1, "", "plot_spectrum"], [98, 3, 1, "", "read"], [98, 3, 1, "", "residuals"], [98, 3, 1, "", "stat_array"], [98, 3, 1, "", "stat_sum"], [98, 2, 1, "", "stat_type"], [98, 2, 1, "", "tag"], [98, 3, 1, "", "to_dict"], [98, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[99, 2, 1, "", "background"], [99, 2, 1, "", "background_model"], [99, 3, 1, "", "copy"], [99, 2, 1, "", "counts"], [99, 3, 1, "", "create"], [99, 3, 1, "", "cutout"], [99, 2, 1, "", "data_shape"], [99, 3, 1, "", "downsample"], [99, 2, 1, "", "edisp"], [99, 2, 1, "", "energy_range"], [99, 2, 1, "", "energy_range_fit"], [99, 2, 1, "", "energy_range_safe"], [99, 2, 1, "", "energy_range_total"], [99, 2, 1, "", "evaluators"], [99, 2, 1, "", "excess"], [99, 2, 1, "", "exposure"], [99, 3, 1, "", "fake"], [99, 3, 1, "", "from_dict"], [99, 3, 1, "", "from_geoms"], [99, 3, 1, "", "from_hdulist"], [99, 2, 1, "", "geoms"], [99, 2, 1, "", "gti"], [99, 3, 1, "", "info_dict"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "mask_fit"], [99, 2, 1, "", "mask_fit_image"], [99, 2, 1, "", "mask_image"], [99, 2, 1, "", "mask_safe"], [99, 2, 1, "", "mask_safe_edisp"], [99, 2, 1, "", "mask_safe_image"], [99, 2, 1, "", "mask_safe_psf"], [99, 2, 1, "", "meta"], [99, 2, 1, "", "meta_table"], [99, 2, 1, "", "models"], [99, 2, 1, "", "name"], [99, 3, 1, "", "npred"], [99, 3, 1, "", "npred_background"], [99, 3, 1, "", "npred_signal"], [99, 3, 1, "", "pad"], [99, 3, 1, "", "peek"], [99, 3, 1, "", "plot_residuals"], [99, 3, 1, "", "plot_residuals_spatial"], [99, 3, 1, "", "plot_residuals_spectral"], [99, 2, 1, "", "psf"], [99, 3, 1, "", "read"], [99, 3, 1, "", "resample_energy_axis"], [99, 3, 1, "", "reset_data_cache"], [99, 3, 1, "", "residuals"], [99, 3, 1, "", "slice_by_energy"], [99, 3, 1, "", "slice_by_idx"], [99, 3, 1, "", "stack"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "stat_type"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"], [99, 3, 1, "", "to_hdulist"], [99, 3, 1, "", "to_image"], [99, 3, 1, "", "to_masked"], [99, 3, 1, "", "to_region_map_dataset"], [99, 3, 1, "", "to_spectrum_dataset"], [99, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[100, 3, 1, "", "event_det_coords"], [100, 3, 1, "", "event_list_meta"], [100, 3, 1, "", "run"], [100, 3, 1, "", "sample_background"], [100, 3, 1, "", "sample_edisp"], [100, 3, 1, "", "sample_psf"], [100, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[101, 3, 1, "", "construct"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "dict"], [101, 3, 1, "", "from_header"], [101, 3, 1, "", "from_orm"], [101, 3, 1, "", "json"], [101, 2, 1, "", "model_computed_fields"], [101, 2, 1, "", "model_config"], [101, 3, 1, "", "model_construct"], [101, 3, 1, "", "model_copy"], [101, 3, 1, "", "model_dump"], [101, 3, 1, "", "model_dump_json"], [101, 2, 1, "", "model_extra"], [101, 2, 1, "", "model_fields"], [101, 2, 1, "", "model_fields_set"], [101, 3, 1, "", "model_json_schema"], [101, 3, 1, "", "model_parametrized_name"], [101, 3, 1, "", "model_post_init"], [101, 3, 1, "", "model_rebuild"], [101, 3, 1, "", "model_validate"], [101, 3, 1, "", "model_validate_json"], [101, 3, 1, "", "model_validate_strings"], [101, 3, 1, "", "parse_file"], [101, 3, 1, "", "parse_obj"], [101, 3, 1, "", "parse_raw"], [101, 3, 1, "", "schema"], [101, 3, 1, "", "schema_json"], [101, 3, 1, "", "stack"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_header"], [101, 3, 1, "", "to_yaml"], [101, 3, 1, "", "update_forward_refs"], [101, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[102, 2, 1, "", "alpha"], [102, 2, 1, "", "background"], [102, 2, 1, "", "background_model"], [102, 3, 1, "", "copy"], [102, 2, 1, "", "counts"], [102, 3, 1, "", "create"], [102, 3, 1, "", "cutout"], [102, 2, 1, "", "data_shape"], [102, 3, 1, "", "downsample"], [102, 2, 1, "", "edisp"], [102, 2, 1, "", "energy_range"], [102, 2, 1, "", "energy_range_fit"], [102, 2, 1, "", "energy_range_safe"], [102, 2, 1, "", "energy_range_total"], [102, 2, 1, "", "evaluators"], [102, 2, 1, "", "excess"], [102, 2, 1, "", "exposure"], [102, 3, 1, "", "fake"], [102, 3, 1, "", "from_dict"], [102, 3, 1, "", "from_geoms"], [102, 3, 1, "", "from_hdulist"], [102, 3, 1, "", "from_map_dataset"], [102, 2, 1, "", "geoms"], [102, 2, 1, "", "gti"], [102, 3, 1, "", "info_dict"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_fit"], [102, 2, 1, "", "mask_fit_image"], [102, 2, 1, "", "mask_image"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_safe_edisp"], [102, 2, 1, "", "mask_safe_image"], [102, 2, 1, "", "mask_safe_psf"], [102, 2, 1, "", "meta"], [102, 2, 1, "", "meta_table"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "npred"], [102, 3, 1, "", "npred_background"], [102, 3, 1, "", "npred_off"], [102, 3, 1, "", "npred_signal"], [102, 3, 1, "", "pad"], [102, 3, 1, "", "peek"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_residuals_spatial"], [102, 3, 1, "", "plot_residuals_spectral"], [102, 2, 1, "", "psf"], [102, 3, 1, "", "read"], [102, 3, 1, "", "resample_energy_axis"], [102, 3, 1, "", "reset_data_cache"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "slice_by_energy"], [102, 3, 1, "", "slice_by_idx"], [102, 3, 1, "", "stack"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "to_hdulist"], [102, 3, 1, "", "to_image"], [102, 3, 1, "", "to_map_dataset"], [102, 3, 1, "", "to_masked"], [102, 3, 1, "", "to_region_map_dataset"], [102, 3, 1, "", "to_spectrum_dataset"], [102, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[103, 3, 1, "", "get_filenames"], [103, 3, 1, "", "get_valid_path"], [103, 3, 1, "", "read"], [103, 3, 1, "", "read_arf"], [103, 3, 1, "", "read_bkg"], [103, 3, 1, "", "read_pha"], [103, 3, 1, "", "read_rmf"], [103, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[104, 3, 1, "", "get_filenames"], [104, 3, 1, "", "get_ogip_meta"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_counts_hdulist"], [104, 3, 1, "", "write"], [104, 3, 1, "", "write_arf"], [104, 3, 1, "", "write_bkg"], [104, 3, 1, "", "write_pha"], [104, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[105, 3, 1, "", "event_det_coords"], [105, 3, 1, "", "event_list_meta"], [105, 3, 1, "", "run"], [105, 3, 1, "", "sample_background"], [105, 3, 1, "", "sample_edisp"], [105, 3, 1, "", "sample_psf"], [105, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_counts"], [106, 3, 1, "", "plot_excess"], [106, 3, 1, "", "plot_fit"], [106, 3, 1, "", "plot_masks"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[107, 2, 1, "", "alpha"], [107, 2, 1, "", "background"], [107, 2, 1, "", "background_model"], [107, 3, 1, "", "copy"], [107, 2, 1, "", "counts"], [107, 3, 1, "", "create"], [107, 3, 1, "", "cutout"], [107, 2, 1, "", "data_shape"], [107, 3, 1, "", "downsample"], [107, 2, 1, "", "edisp"], [107, 2, 1, "", "energy_range"], [107, 2, 1, "", "energy_range_fit"], [107, 2, 1, "", "energy_range_safe"], [107, 2, 1, "", "energy_range_total"], [107, 2, 1, "", "evaluators"], [107, 2, 1, "", "excess"], [107, 2, 1, "", "exposure"], [107, 3, 1, "", "fake"], [107, 3, 1, "", "from_dict"], [107, 3, 1, "", "from_geoms"], [107, 3, 1, "", "from_hdulist"], [107, 3, 1, "", "from_map_dataset"], [107, 3, 1, "", "from_spectrum_dataset"], [107, 2, 1, "", "geoms"], [107, 2, 1, "", "gti"], [107, 3, 1, "", "info_dict"], [107, 2, 1, "", "mask"], [107, 2, 1, "", "mask_fit"], [107, 2, 1, "", "mask_fit_image"], [107, 2, 1, "", "mask_image"], [107, 2, 1, "", "mask_safe"], [107, 2, 1, "", "mask_safe_edisp"], [107, 2, 1, "", "mask_safe_image"], [107, 2, 1, "", "mask_safe_psf"], [107, 2, 1, "", "meta"], [107, 2, 1, "", "meta_table"], [107, 2, 1, "", "models"], [107, 2, 1, "", "name"], [107, 3, 1, "", "npred"], [107, 3, 1, "", "npred_background"], [107, 3, 1, "", "npred_off"], [107, 3, 1, "", "npred_signal"], [107, 3, 1, "", "pad"], [107, 3, 1, "", "peek"], [107, 3, 1, "", "plot_counts"], [107, 3, 1, "", "plot_excess"], [107, 3, 1, "", "plot_fit"], [107, 3, 1, "", "plot_masks"], [107, 3, 1, "", "plot_residuals"], [107, 3, 1, "", "plot_residuals_spatial"], [107, 3, 1, "", "plot_residuals_spectral"], [107, 2, 1, "", "psf"], [107, 3, 1, "", "read"], [107, 3, 1, "", "resample_energy_axis"], [107, 3, 1, "", "reset_data_cache"], [107, 3, 1, "", "residuals"], [107, 3, 1, "", "slice_by_energy"], [107, 3, 1, "", "slice_by_idx"], [107, 3, 1, "", "stack"], [107, 3, 1, "", "stat_array"], [107, 3, 1, "", "stat_sum"], [107, 2, 1, "", "stat_type"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_dict"], [107, 3, 1, "", "to_hdulist"], [107, 3, 1, "", "to_image"], [107, 3, 1, "", "to_map_dataset"], [107, 3, 1, "", "to_masked"], [107, 3, 1, "", "to_region_map_dataset"], [107, 3, 1, "", "to_spectrum_dataset"], [107, 3, 1, "", "write"]], "gammapy.datasets.utils": [[112, 4, 1, "", "apply_edisp"], [113, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[114, 1, 1, "", "ASmoothMapEstimator"], [115, 5, 1, "", "ESTIMATOR_REGISTRY"], [116, 1, 1, "", "EnergyDependentMorphologyEstimator"], [117, 1, 1, "", "Estimator"], [118, 1, 1, "", "ExcessMapEstimator"], [119, 1, 1, "", "FluxMaps"], [120, 1, 1, "", "FluxMetaData"], [121, 1, 1, "", "FluxPoints"], [122, 1, 1, "", "FluxPointsEstimator"], [123, 1, 1, "", "FluxProfileEstimator"], [124, 1, 1, "", "ImageProfile"], [125, 1, 1, "", "ImageProfileEstimator"], [126, 1, 1, "", "LightCurveEstimator"], [127, 1, 1, "", "ParameterEstimator"], [128, 1, 1, "", "SensitivityEstimator"], [129, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[114, 2, 1, "", "config_parameters"], [114, 3, 1, "", "copy"], [114, 3, 1, "", "estimate_maps"], [114, 3, 1, "", "get_kernels"], [114, 3, 1, "", "get_scales"], [114, 3, 1, "", "run"], [114, 3, 1, "", "selection_all"], [114, 2, 1, "", "selection_optional"], [114, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[116, 2, 1, "", "config_parameters"], [116, 3, 1, "", "copy"], [116, 3, 1, "", "estimate_energy_dependence"], [116, 3, 1, "", "run"], [116, 2, 1, "", "selection_optional"], [116, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[117, 2, 1, "", "config_parameters"], [117, 3, 1, "", "copy"], [117, 3, 1, "", "run"], [117, 2, 1, "", "selection_optional"], [117, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[118, 2, 1, "", "config_parameters"], [118, 3, 1, "", "copy"], [118, 2, 1, "", "correlation_radius"], [118, 3, 1, "", "estimate_excess_map"], [118, 3, 1, "", "estimate_exposure_reco_energy"], [118, 3, 1, "", "estimate_kernel"], [118, 3, 1, "", "estimate_mask_default"], [118, 3, 1, "", "run"], [118, 2, 1, "", "selection_optional"], [118, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[119, 3, 1, "", "all_quantities"], [119, 2, 1, "", "available_quantities"], [119, 2, 1, "", "counts"], [119, 2, 1, "", "dnde"], [119, 2, 1, "", "dnde_err"], [119, 2, 1, "", "dnde_errn"], [119, 2, 1, "", "dnde_errp"], [119, 2, 1, "", "dnde_ref"], [119, 2, 1, "", "dnde_ul"], [119, 2, 1, "", "e2dnde"], [119, 2, 1, "", "e2dnde_err"], [119, 2, 1, "", "e2dnde_errn"], [119, 2, 1, "", "e2dnde_errp"], [119, 2, 1, "", "e2dnde_ref"], [119, 2, 1, "", "e2dnde_ul"], [119, 2, 1, "", "eflux"], [119, 2, 1, "", "eflux_err"], [119, 2, 1, "", "eflux_errn"], [119, 2, 1, "", "eflux_errp"], [119, 2, 1, "", "eflux_ref"], [119, 2, 1, "", "eflux_ul"], [119, 2, 1, "", "energy_axis"], [119, 2, 1, "", "energy_max"], [119, 2, 1, "", "energy_min"], [119, 2, 1, "", "energy_ref"], [119, 2, 1, "", "filter_success_nan"], [119, 2, 1, "", "flux"], [119, 2, 1, "", "flux_err"], [119, 2, 1, "", "flux_errn"], [119, 2, 1, "", "flux_errp"], [119, 2, 1, "", "flux_ref"], [119, 2, 1, "", "flux_sensitivity"], [119, 2, 1, "", "flux_ul"], [119, 3, 1, "", "from_hdulist"], [119, 3, 1, "", "from_maps"], [119, 3, 1, "", "from_stack"], [119, 2, 1, "", "geom"], [119, 3, 1, "", "get_flux_points"], [119, 2, 1, "", "has_any_ts"], [119, 2, 1, "", "has_stat_profiles"], [119, 2, 1, "", "has_success"], [119, 2, 1, "", "has_ul"], [119, 2, 1, "", "is_convertible_to_flux_sed_type"], [119, 2, 1, "", "is_ul"], [119, 3, 1, "", "iter_by_axis"], [119, 2, 1, "", "n_dof"], [119, 2, 1, "", "n_sigma"], [119, 2, 1, "", "n_sigma_ul"], [119, 2, 1, "", "niter"], [119, 2, 1, "", "norm"], [119, 2, 1, "", "norm_err"], [119, 2, 1, "", "norm_errn"], [119, 2, 1, "", "norm_errp"], [119, 2, 1, "", "norm_sensitivity"], [119, 2, 1, "", "norm_ul"], [119, 2, 1, "", "npred"], [119, 2, 1, "", "npred_background"], [119, 2, 1, "", "npred_excess"], [119, 2, 1, "", "npred_excess_err"], [119, 2, 1, "", "npred_excess_errn"], [119, 2, 1, "", "npred_excess_errp"], [119, 2, 1, "", "npred_excess_ref"], [119, 2, 1, "", "npred_excess_ul"], [119, 3, 1, "", "read"], [119, 2, 1, "", "reference_model"], [119, 2, 1, "", "reference_model_default"], [119, 2, 1, "", "reference_spectral_model"], [119, 2, 1, "", "sed_type_init"], [119, 2, 1, "", "sed_type_plot_default"], [119, 3, 1, "", "slice_by_coord"], [119, 3, 1, "", "slice_by_energy"], [119, 3, 1, "", "slice_by_idx"], [119, 3, 1, "", "slice_by_time"], [119, 2, 1, "", "sqrt_ts"], [119, 2, 1, "", "sqrt_ts_threshold_ul"], [119, 2, 1, "", "stat"], [119, 2, 1, "", "stat_null"], [119, 2, 1, "", "stat_scan"], [119, 2, 1, "", "success"], [119, 3, 1, "", "to_hdulist"], [119, 3, 1, "", "to_maps"], [119, 2, 1, "", "ts"], [119, 2, 1, "", "ts_scan"], [119, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[120, 3, 1, "", "construct"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "dict"], [120, 3, 1, "", "from_header"], [120, 3, 1, "", "from_orm"], [120, 3, 1, "", "json"], [120, 2, 1, "", "model_computed_fields"], [120, 2, 1, "", "model_config"], [120, 3, 1, "", "model_construct"], [120, 3, 1, "", "model_copy"], [120, 3, 1, "", "model_dump"], [120, 3, 1, "", "model_dump_json"], [120, 2, 1, "", "model_extra"], [120, 2, 1, "", "model_fields"], [120, 2, 1, "", "model_fields_set"], [120, 3, 1, "", "model_json_schema"], [120, 3, 1, "", "model_parametrized_name"], [120, 3, 1, "", "model_post_init"], [120, 3, 1, "", "model_rebuild"], [120, 3, 1, "", "model_validate"], [120, 3, 1, "", "model_validate_json"], [120, 3, 1, "", "model_validate_strings"], [120, 3, 1, "", "parse_file"], [120, 3, 1, "", "parse_obj"], [120, 3, 1, "", "parse_raw"], [120, 3, 1, "", "schema"], [120, 3, 1, "", "schema_json"], [120, 2, 1, "", "tag"], [120, 3, 1, "", "to_header"], [120, 3, 1, "", "to_yaml"], [120, 3, 1, "", "update_forward_refs"], [120, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[121, 3, 1, "", "all_quantities"], [121, 2, 1, "", "available_quantities"], [121, 2, 1, "", "counts"], [121, 2, 1, "", "dnde"], [121, 2, 1, "", "dnde_err"], [121, 2, 1, "", "dnde_errn"], [121, 2, 1, "", "dnde_errp"], [121, 2, 1, "", "dnde_ref"], [121, 2, 1, "", "dnde_ul"], [121, 2, 1, "", "e2dnde"], [121, 2, 1, "", "e2dnde_err"], [121, 2, 1, "", "e2dnde_errn"], [121, 2, 1, "", "e2dnde_errp"], [121, 2, 1, "", "e2dnde_ref"], [121, 2, 1, "", "e2dnde_ul"], [121, 2, 1, "", "eflux"], [121, 2, 1, "", "eflux_err"], [121, 2, 1, "", "eflux_errn"], [121, 2, 1, "", "eflux_errp"], [121, 2, 1, "", "eflux_ref"], [121, 2, 1, "", "eflux_ul"], [121, 2, 1, "", "energy_axis"], [121, 2, 1, "", "energy_max"], [121, 2, 1, "", "energy_min"], [121, 2, 1, "", "energy_ref"], [121, 2, 1, "", "filter_success_nan"], [121, 2, 1, "", "flux"], [121, 2, 1, "", "flux_err"], [121, 2, 1, "", "flux_errn"], [121, 2, 1, "", "flux_errp"], [121, 2, 1, "", "flux_ref"], [121, 2, 1, "", "flux_sensitivity"], [121, 2, 1, "", "flux_ul"], [121, 3, 1, "", "from_hdulist"], [121, 3, 1, "", "from_maps"], [121, 3, 1, "", "from_stack"], [121, 3, 1, "", "from_table"], [121, 2, 1, "", "geom"], [121, 3, 1, "", "get_flux_points"], [121, 2, 1, "", "has_any_ts"], [121, 2, 1, "", "has_stat_profiles"], [121, 2, 1, "", "has_success"], [121, 2, 1, "", "has_ul"], [121, 2, 1, "", "is_convertible_to_flux_sed_type"], [121, 2, 1, "", "is_ul"], [121, 3, 1, "", "iter_by_axis"], [121, 2, 1, "", "n_dof"], [121, 2, 1, "", "n_sigma"], [121, 2, 1, "", "n_sigma_ul"], [121, 2, 1, "", "niter"], [121, 2, 1, "", "norm"], [121, 2, 1, "", "norm_err"], [121, 2, 1, "", "norm_errn"], [121, 2, 1, "", "norm_errp"], [121, 2, 1, "", "norm_sensitivity"], [121, 2, 1, "", "norm_ul"], [121, 2, 1, "", "npred"], [121, 2, 1, "", "npred_background"], [121, 2, 1, "", "npred_excess"], [121, 2, 1, "", "npred_excess_err"], [121, 2, 1, "", "npred_excess_errn"], [121, 2, 1, "", "npred_excess_errp"], [121, 2, 1, "", "npred_excess_ref"], [121, 2, 1, "", "npred_excess_ul"], [121, 3, 1, "", "plot"], [121, 3, 1, "", "plot_ts_profiles"], [121, 3, 1, "", "read"], [121, 3, 1, "", "recompute_ul"], [121, 2, 1, "", "reference_model"], [121, 2, 1, "", "reference_model_default"], [121, 2, 1, "", "reference_spectral_model"], [121, 3, 1, "", "resample_axis"], [121, 2, 1, "", "sed_type_init"], [121, 2, 1, "", "sed_type_plot_default"], [121, 3, 1, "", "slice_by_coord"], [121, 3, 1, "", "slice_by_energy"], [121, 3, 1, "", "slice_by_idx"], [121, 3, 1, "", "slice_by_time"], [121, 2, 1, "", "sqrt_ts"], [121, 2, 1, "", "sqrt_ts_threshold_ul"], [121, 2, 1, "", "stat"], [121, 2, 1, "", "stat_null"], [121, 2, 1, "", "stat_scan"], [121, 2, 1, "", "success"], [121, 3, 1, "", "to_hdulist"], [121, 3, 1, "", "to_maps"], [121, 3, 1, "", "to_table"], [121, 2, 1, "", "ts"], [121, 2, 1, "", "ts_scan"], [121, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "estimate_best_fit"], [122, 3, 1, "", "estimate_counts"], [122, 3, 1, "", "estimate_errn_errp"], [122, 3, 1, "", "estimate_flux_point"], [122, 3, 1, "", "estimate_npred"], [122, 3, 1, "", "estimate_npred_excess"], [122, 3, 1, "", "estimate_scan"], [122, 3, 1, "", "estimate_ts"], [122, 3, 1, "", "estimate_ul"], [122, 3, 1, "", "get_scale_model"], [122, 2, 1, "", "n_jobs"], [122, 2, 1, "", "norm_max"], [122, 2, 1, "", "norm_min"], [122, 2, 1, "", "norm_n_values"], [122, 2, 1, "", "norm_values"], [122, 2, 1, "", "parallel_backend"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "estimate_best_fit"], [123, 3, 1, "", "estimate_counts"], [123, 3, 1, "", "estimate_errn_errp"], [123, 3, 1, "", "estimate_flux_point"], [123, 3, 1, "", "estimate_npred"], [123, 3, 1, "", "estimate_npred_excess"], [123, 3, 1, "", "estimate_scan"], [123, 3, 1, "", "estimate_ts"], [123, 3, 1, "", "estimate_ul"], [123, 3, 1, "", "get_scale_model"], [123, 2, 1, "", "n_jobs"], [123, 2, 1, "", "norm_max"], [123, 2, 1, "", "norm_min"], [123, 2, 1, "", "norm_n_values"], [123, 2, 1, "", "norm_values"], [123, 2, 1, "", "parallel_backend"], [123, 2, 1, "", "projected_distance_axis"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[124, 3, 1, "", "normalize"], [124, 3, 1, "", "peek"], [124, 3, 1, "", "plot"], [124, 3, 1, "", "plot_err"], [124, 2, 1, "", "profile"], [124, 2, 1, "", "profile_err"], [124, 3, 1, "", "smooth"], [124, 2, 1, "", "x_max"], [124, 2, 1, "", "x_min"], [124, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_best_fit"], [126, 3, 1, "", "estimate_counts"], [126, 3, 1, "", "estimate_errn_errp"], [126, 3, 1, "", "estimate_flux_point"], [126, 3, 1, "", "estimate_npred"], [126, 3, 1, "", "estimate_npred_excess"], [126, 3, 1, "", "estimate_scan"], [126, 3, 1, "", "estimate_time_bin_flux"], [126, 3, 1, "", "estimate_ts"], [126, 3, 1, "", "estimate_ul"], [126, 3, 1, "", "expand_map"], [126, 3, 1, "", "get_scale_model"], [126, 2, 1, "", "n_jobs"], [126, 2, 1, "", "norm_max"], [126, 2, 1, "", "norm_min"], [126, 2, 1, "", "norm_n_values"], [126, 2, 1, "", "norm_values"], [126, 2, 1, "", "parallel_backend"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "estimate_best_fit"], [127, 3, 1, "", "estimate_counts"], [127, 3, 1, "", "estimate_errn_errp"], [127, 3, 1, "", "estimate_npred"], [127, 3, 1, "", "estimate_scan"], [127, 3, 1, "", "estimate_ts"], [127, 3, 1, "", "estimate_ul"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_min_e2dnde"], [128, 3, 1, "", "estimate_min_excess"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_fit_input_maps"], [129, 3, 1, "", "estimate_flux_default"], [129, 3, 1, "", "estimate_flux_map"], [129, 3, 1, "", "estimate_kernel"], [129, 3, 1, "", "estimate_mask_default"], [129, 3, 1, "", "estimate_pad_width"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_all"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[130, 4, 1, "", "compute_lightcurve_doublingtime"], [131, 4, 1, "", "compute_lightcurve_fpp"], [132, 4, 1, "", "compute_lightcurve_fvar"], [133, 4, 1, "", "estimate_exposure_reco_energy"], [134, 4, 1, "", "find_peaks"], [135, 4, 1, "", "find_peaks_in_flux_map"], [136, 4, 1, "", "get_combined_significance_maps"], [137, 4, 1, "", "get_rebinned_axis"], [138, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[139, 1, 1, "", "Background2D"], [140, 1, 1, "", "Background3D"], [141, 1, 1, "", "BackgroundIRF"], [142, 1, 1, "", "EDispKernel"], [143, 1, 1, "", "EDispKernelMap"], [144, 1, 1, "", "EDispMap"], [145, 1, 1, "", "EffectiveAreaTable2D"], [146, 1, 1, "", "EnergyDependentMultiGaussPSF"], [147, 1, 1, "", "EnergyDispersion2D"], [148, 1, 1, "", "FoVAlignment"], [149, 1, 1, "", "IRF"], [150, 1, 1, "", "IRFMap"], [151, 5, 1, "", "IRF_REGISTRY"], [152, 1, 1, "", "PSF3D"], [153, 1, 1, "", "PSFKernel"], [154, 1, 1, "", "PSFKing"], [155, 1, 1, "", "PSFMap"], [156, 1, 1, "", "ParametricPSF"], [157, 1, 1, "", "RadMax2D"], [158, 1, 1, "", "RecoPSFMap"], [159, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[139, 2, 1, "", "axes"], [139, 3, 1, "", "cumsum"], [139, 2, 1, "", "data"], [139, 2, 1, "", "default_interp_kwargs"], [139, 2, 1, "", "default_unit"], [139, 3, 1, "", "evaluate"], [139, 2, 1, "", "fov_alignment"], [139, 3, 1, "", "from_hdulist"], [139, 3, 1, "", "from_table"], [139, 2, 1, "", "has_offset_axis"], [139, 3, 1, "", "integral"], [139, 3, 1, "", "integrate_log_log"], [139, 3, 1, "", "interp_missing_data"], [139, 3, 1, "", "is_allclose"], [139, 2, 1, "", "is_pointlike"], [139, 3, 1, "", "normalize"], [139, 3, 1, "", "pad"], [139, 3, 1, "", "peek"], [139, 3, 1, "", "plot"], [139, 3, 1, "", "plot_at_energy"], [139, 3, 1, "", "plot_energy_dependence"], [139, 3, 1, "", "plot_offset_dependence"], [139, 3, 1, "", "plot_spectrum"], [139, 2, 1, "", "quantity"], [139, 3, 1, "", "read"], [139, 2, 1, "", "required_axes"], [139, 3, 1, "", "slice_by_idx"], [139, 2, 1, "", "tag"], [139, 3, 1, "", "to_3d"], [139, 3, 1, "", "to_hdulist"], [139, 3, 1, "", "to_table"], [139, 3, 1, "", "to_table_hdu"], [139, 3, 1, "", "to_unit"], [139, 2, 1, "", "unit"], [139, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[140, 2, 1, "", "axes"], [140, 3, 1, "", "cumsum"], [140, 2, 1, "", "data"], [140, 2, 1, "", "default_interp_kwargs"], [140, 2, 1, "", "default_unit"], [140, 3, 1, "", "evaluate"], [140, 2, 1, "", "fov_alignment"], [140, 3, 1, "", "from_hdulist"], [140, 3, 1, "", "from_table"], [140, 2, 1, "", "has_offset_axis"], [140, 3, 1, "", "integral"], [140, 3, 1, "", "integrate_log_log"], [140, 3, 1, "", "interp_missing_data"], [140, 3, 1, "", "is_allclose"], [140, 2, 1, "", "is_pointlike"], [140, 3, 1, "", "normalize"], [140, 3, 1, "", "pad"], [140, 3, 1, "", "peek"], [140, 3, 1, "", "plot_at_energy"], [140, 2, 1, "", "quantity"], [140, 3, 1, "", "read"], [140, 2, 1, "", "required_axes"], [140, 3, 1, "", "slice_by_idx"], [140, 2, 1, "", "tag"], [140, 3, 1, "", "to_2d"], [140, 3, 1, "", "to_hdulist"], [140, 3, 1, "", "to_table"], [140, 3, 1, "", "to_table_hdu"], [140, 3, 1, "", "to_unit"], [140, 2, 1, "", "unit"], [140, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[141, 2, 1, "", "axes"], [141, 3, 1, "", "cumsum"], [141, 2, 1, "", "data"], [141, 2, 1, "", "default_interp_kwargs"], [141, 3, 1, "", "evaluate"], [141, 2, 1, "", "fov_alignment"], [141, 3, 1, "", "from_hdulist"], [141, 3, 1, "", "from_table"], [141, 2, 1, "", "has_offset_axis"], [141, 3, 1, "", "integral"], [141, 3, 1, "", "integrate_log_log"], [141, 3, 1, "", "interp_missing_data"], [141, 3, 1, "", "is_allclose"], [141, 2, 1, "", "is_pointlike"], [141, 3, 1, "", "normalize"], [141, 3, 1, "", "pad"], [141, 2, 1, "", "quantity"], [141, 3, 1, "", "read"], [141, 2, 1, "", "required_axes"], [141, 3, 1, "", "slice_by_idx"], [141, 2, 1, "", "tag"], [141, 3, 1, "", "to_hdulist"], [141, 3, 1, "", "to_table"], [141, 3, 1, "", "to_table_hdu"], [141, 3, 1, "", "to_unit"], [141, 2, 1, "", "unit"], [141, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[142, 2, 1, "", "axes"], [142, 3, 1, "", "cumsum"], [142, 2, 1, "", "data"], [142, 2, 1, "", "default_interp_kwargs"], [142, 3, 1, "", "evaluate"], [142, 2, 1, "", "fov_alignment"], [142, 3, 1, "", "from_diagonal_response"], [142, 3, 1, "", "from_gauss"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "from_table"], [142, 3, 1, "", "get_bias"], [142, 3, 1, "", "get_bias_energy"], [142, 3, 1, "", "get_mean"], [142, 3, 1, "", "get_resolution"], [142, 2, 1, "", "has_offset_axis"], [142, 3, 1, "", "integral"], [142, 3, 1, "", "integrate_log_log"], [142, 3, 1, "", "interp_missing_data"], [142, 3, 1, "", "is_allclose"], [142, 2, 1, "", "is_pointlike"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "pad"], [142, 3, 1, "", "pdf_in_safe_range"], [142, 2, 1, "", "pdf_matrix"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "plot_bias"], [142, 3, 1, "", "plot_matrix"], [142, 2, 1, "", "quantity"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "slice_by_idx"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_image"], [142, 3, 1, "", "to_table"], [142, 3, 1, "", "to_table_hdu"], [142, 3, 1, "", "to_unit"], [142, 2, 1, "", "unit"], [142, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[143, 3, 1, "", "copy"], [143, 3, 1, "", "cutout"], [143, 3, 1, "", "downsample"], [143, 2, 1, "", "edisp_map"], [143, 3, 1, "", "from_diagonal_response"], [143, 3, 1, "", "from_edisp_kernel"], [143, 3, 1, "", "from_gauss"], [143, 3, 1, "", "from_geom"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "get_edisp_kernel"], [143, 2, 1, "", "mask_safe_image"], [143, 3, 1, "", "peek"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "resample_energy_axis"], [143, 3, 1, "", "slice_by_idx"], [143, 3, 1, "", "stack"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_image"], [143, 3, 1, "", "to_region_nd_map"], [143, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[144, 3, 1, "", "copy"], [144, 3, 1, "", "cutout"], [144, 3, 1, "", "downsample"], [144, 2, 1, "", "edisp_map"], [144, 3, 1, "", "from_diagonal_response"], [144, 3, 1, "", "from_geom"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "get_edisp_kernel"], [144, 2, 1, "", "mask_safe_image"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 3, 1, "", "sample_coord"], [144, 3, 1, "", "slice_by_idx"], [144, 3, 1, "", "stack"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_edisp_kernel_map"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_region_nd_map"], [144, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[145, 2, 1, "", "axes"], [145, 3, 1, "", "cumsum"], [145, 2, 1, "", "data"], [145, 2, 1, "", "default_interp_kwargs"], [145, 2, 1, "", "default_unit"], [145, 3, 1, "", "evaluate"], [145, 2, 1, "", "fov_alignment"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "from_parametrization"], [145, 3, 1, "", "from_table"], [145, 2, 1, "", "has_offset_axis"], [145, 3, 1, "", "integral"], [145, 3, 1, "", "integrate_log_log"], [145, 3, 1, "", "interp_missing_data"], [145, 3, 1, "", "is_allclose"], [145, 2, 1, "", "is_pointlike"], [145, 3, 1, "", "normalize"], [145, 3, 1, "", "pad"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "plot"], [145, 3, 1, "", "plot_energy_dependence"], [145, 3, 1, "", "plot_offset_dependence"], [145, 2, 1, "", "quantity"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "slice_by_idx"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_table"], [145, 3, 1, "", "to_table_hdu"], [145, 3, 1, "", "to_unit"], [145, 2, 1, "", "unit"], [145, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[146, 2, 1, "", "axes"], [146, 3, 1, "", "containment"], [146, 3, 1, "", "containment_radius"], [146, 3, 1, "", "cumsum"], [146, 2, 1, "", "data"], [146, 2, 1, "", "default_interp_kwargs"], [146, 3, 1, "", "evaluate"], [146, 3, 1, "", "evaluate_containment"], [146, 3, 1, "", "evaluate_direct"], [146, 3, 1, "", "evaluate_parameters"], [146, 2, 1, "", "fov_alignment"], [146, 3, 1, "", "from_hdulist"], [146, 3, 1, "", "from_table"], [146, 2, 1, "", "has_offset_axis"], [146, 3, 1, "", "info"], [146, 3, 1, "", "integral"], [146, 3, 1, "", "integrate_log_log"], [146, 3, 1, "", "interp_missing_data"], [146, 3, 1, "", "is_allclose"], [146, 2, 1, "", "is_pointlike"], [146, 3, 1, "", "normalize"], [146, 3, 1, "", "pad"], [146, 3, 1, "", "peek"], [146, 3, 1, "", "plot_containment_radius"], [146, 3, 1, "", "plot_containment_radius_vs_energy"], [146, 3, 1, "", "plot_psf_vs_rad"], [146, 2, 1, "", "quantity"], [146, 3, 1, "", "read"], [146, 2, 1, "", "required_axes"], [146, 2, 1, "", "required_parameters"], [146, 3, 1, "", "slice_by_idx"], [146, 2, 1, "", "tag"], [146, 3, 1, "", "to_hdulist"], [146, 3, 1, "", "to_psf3d"], [146, 3, 1, "", "to_table"], [146, 3, 1, "", "to_table_hdu"], [146, 3, 1, "", "to_unit"], [146, 2, 1, "", "unit"], [146, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 2, 1, "", "default_unit"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_gauss"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "plot_bias"], [147, 3, 1, "", "plot_migration"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_edisp_kernel"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[148, 2, 1, "", "ALTAZ"], [148, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[150, 3, 1, "", "copy"], [150, 3, 1, "", "cutout"], [150, 3, 1, "", "downsample"], [150, 3, 1, "", "from_hdulist"], [150, 2, 1, "", "mask_safe_image"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 3, 1, "", "stack"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_region_nd_map"], [150, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "containment"], [152, 3, 1, "", "containment_radius"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 2, 1, "", "default_unit"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "info"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_containment_radius"], [152, 3, 1, "", "plot_containment_radius_vs_energy"], [152, 3, 1, "", "plot_psf_vs_rad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[153, 2, 1, "", "data"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_spatial_model"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_kernel"], [153, 2, 1, "", "psf_kernel_map"], [153, 3, 1, "", "read"], [153, 3, 1, "", "slice_by_idx"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 3, 1, "", "evaluate_containment"], [154, 3, 1, "", "evaluate_direct"], [154, 3, 1, "", "evaluate_parameters"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 2, 1, "", "required_parameters"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_psf3d"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[155, 3, 1, "", "containment"], [155, 3, 1, "", "containment_radius"], [155, 3, 1, "", "containment_radius_map"], [155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "energy_name"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_psf_kernel"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot_containment_radius_vs_energy"], [155, 3, 1, "", "plot_psf_vs_rad"], [155, 2, 1, "", "psf_map"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "sample_coord"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_image"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 3, 1, "", "evaluate"], [156, 3, 1, "", "evaluate_containment"], [156, 3, 1, "", "evaluate_direct"], [156, 3, 1, "", "evaluate_parameters"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "info"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 2, 1, "", "required_parameters"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_psf3d"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 2, 1, "", "default_unit"], [157, 3, 1, "", "evaluate"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_irf"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_fixed_rad_max"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "plot_rad_max_vs_energy"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "containment_radius_map"], [158, 3, 1, "", "copy"], [158, 3, 1, "", "cutout"], [158, 3, 1, "", "downsample"], [158, 2, 1, "", "energy_name"], [158, 3, 1, "", "from_gauss"], [158, 3, 1, "", "from_geom"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "get_psf_kernel"], [158, 2, 1, "", "mask_safe_image"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "psf_map"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "sample_coord"], [158, 3, 1, "", "slice_by_idx"], [158, 3, 1, "", "stack"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_image"], [158, 3, 1, "", "to_region_nd_map"], [158, 3, 1, "", "write"]], "gammapy.makers": [[160, 1, 1, "", "AdaptiveRingBackgroundMaker"], [161, 1, 1, "", "DatasetsMaker"], [162, 1, 1, "", "FoVBackgroundMaker"], [163, 5, 1, "", "MAKER_REGISTRY"], [164, 1, 1, "", "Maker"], [165, 1, 1, "", "MapDatasetMaker"], [166, 1, 1, "", "PhaseBackgroundMaker"], [167, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [168, 1, 1, "", "ReflectedRegionsFinder"], [169, 1, 1, "", "RegionsFinder"], [170, 1, 1, "", "RingBackgroundMaker"], [171, 1, 1, "", "SafeMaskMaker"], [172, 1, 1, "", "SpectrumDatasetMaker"], [173, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[160, 3, 1, "", "kernels"], [160, 3, 1, "", "make_cubes"], [160, 3, 1, "", "run"], [160, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[161, 3, 1, "", "callback"], [161, 3, 1, "", "error_callback"], [161, 3, 1, "", "make_dataset"], [161, 2, 1, "", "n_jobs"], [161, 2, 1, "", "offset_max"], [161, 2, 1, "", "parallel_backend"], [161, 3, 1, "", "run"], [161, 2, 1, "", "safe_mask_maker"], [161, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[162, 2, 1, "", "available_methods"], [162, 3, 1, "", "make_background_fit"], [162, 3, 1, "", "make_background_scale"], [162, 3, 1, "", "make_default_fov_background_model"], [162, 3, 1, "", "make_exclusion_mask"], [162, 2, 1, "", "method"], [162, 3, 1, "", "run"], [162, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[165, 2, 1, "", "available_selection"], [165, 3, 1, "", "make_background"], [165, 3, 1, "", "make_counts"], [165, 3, 1, "", "make_edisp"], [165, 3, 1, "", "make_edisp_kernel"], [165, 3, 1, "", "make_exposure"], [165, 3, 1, "", "make_exposure_irf"], [165, 3, 1, "", "make_meta_table"], [165, 3, 1, "", "make_psf"], [165, 3, 1, "", "run"], [165, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[166, 3, 1, "", "make_counts"], [166, 3, 1, "", "make_counts_off"], [166, 3, 1, "", "run"], [166, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[167, 3, 1, "", "make_counts_off"], [167, 3, 1, "", "run"], [167, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[168, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[169, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[170, 3, 1, "", "kernel"], [170, 3, 1, "", "make_maps_off"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[171, 2, 1, "", "available_methods"], [171, 3, 1, "", "make_mask_bkg_invalid"], [171, 3, 1, "", "make_mask_energy_aeff_default"], [171, 3, 1, "", "make_mask_energy_aeff_max"], [171, 3, 1, "", "make_mask_energy_bkg_peak"], [171, 3, 1, "", "make_mask_energy_edisp_bias"], [171, 3, 1, "", "make_mask_offset_max"], [171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[172, 2, 1, "", "available_selection"], [172, 3, 1, "", "make_background"], [172, 3, 1, "", "make_counts"], [172, 3, 1, "", "make_edisp"], [172, 3, 1, "", "make_edisp_kernel"], [172, 3, 1, "", "make_exposure"], [172, 3, 1, "", "make_exposure_irf"], [172, 3, 1, "", "make_meta_table"], [172, 3, 1, "", "make_psf"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[173, 3, 1, "", "run"]], "gammapy.makers.utils": [[174, 4, 1, "", "make_counts_rad_max"], [175, 4, 1, "", "make_edisp_kernel_map"], [176, 4, 1, "", "make_edisp_map"], [177, 4, 1, "", "make_effective_livetime_map"], [178, 4, 1, "", "make_map_background_irf"], [179, 4, 1, "", "make_map_exposure_true_energy"], [180, 4, 1, "", "make_observation_time_map"], [181, 4, 1, "", "make_psf_map"], [182, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[183, 1, 1, "", "Geom"], [184, 1, 1, "", "HpxGeom"], [185, 1, 1, "", "HpxMap"], [186, 1, 1, "", "HpxNDMap"], [187, 1, 1, "", "LabelMapAxis"], [188, 1, 1, "", "Map"], [189, 1, 1, "", "MapAxes"], [190, 1, 1, "", "MapAxis"], [191, 1, 1, "", "MapCoord"], [192, 1, 1, "", "Maps"], [193, 1, 1, "", "RegionGeom"], [194, 1, 1, "", "RegionNDMap"], [195, 1, 1, "", "TimeMapAxis"], [196, 1, 1, "", "WcsGeom"], [197, 1, 1, "", "WcsMap"], [198, 1, 1, "", "WcsNDMap"], [199, 4, 1, "", "containment_radius"], [200, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[183, 2, 1, "", "as_energy_true"], [183, 2, 1, "", "center_coord"], [183, 2, 1, "", "center_pix"], [183, 2, 1, "", "center_skydir"], [183, 3, 1, "", "contains"], [183, 3, 1, "", "contains_pix"], [183, 3, 1, "", "coord_to_idx"], [183, 3, 1, "", "coord_to_pix"], [183, 3, 1, "", "copy"], [183, 3, 1, "", "crop"], [183, 3, 1, "", "data_nbytes"], [183, 2, 1, "", "data_shape"], [183, 3, 1, "", "downsample"], [183, 3, 1, "", "drop"], [183, 3, 1, "", "energy_mask"], [183, 3, 1, "", "from_hdulist"], [183, 3, 1, "", "get_coord"], [183, 3, 1, "", "get_idx"], [183, 2, 1, "", "has_energy_axis"], [183, 2, 1, "", "is_allsky"], [183, 2, 1, "", "is_flat"], [183, 2, 1, "", "is_image"], [183, 3, 1, "", "pad"], [183, 3, 1, "", "pix_to_coord"], [183, 3, 1, "", "pix_to_idx"], [183, 3, 1, "", "rename_axes"], [183, 3, 1, "", "replace_axis"], [183, 3, 1, "", "resample_axis"], [183, 3, 1, "", "slice_by_idx"], [183, 3, 1, "", "solid_angle"], [183, 3, 1, "", "squash"], [183, 3, 1, "", "to_bands_hdu"], [183, 3, 1, "", "to_cube"], [183, 3, 1, "", "to_image"], [183, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[184, 2, 1, "", "as_energy_true"], [184, 2, 1, "", "axes"], [184, 2, 1, "", "axes_names"], [184, 2, 1, "", "center_coord"], [184, 2, 1, "", "center_pix"], [184, 2, 1, "", "center_skydir"], [184, 3, 1, "", "contains"], [184, 3, 1, "", "contains_pix"], [184, 3, 1, "", "coord_to_idx"], [184, 3, 1, "", "coord_to_pix"], [184, 3, 1, "", "copy"], [184, 3, 1, "", "create"], [184, 3, 1, "", "crop"], [184, 3, 1, "", "cutout"], [184, 3, 1, "", "data_nbytes"], [184, 2, 1, "", "data_shape"], [184, 2, 1, "", "data_shape_axes"], [184, 3, 1, "", "downsample"], [184, 3, 1, "", "drop"], [184, 3, 1, "", "energy_mask"], [184, 2, 1, "", "frame"], [184, 3, 1, "", "from_hdu"], [184, 3, 1, "", "from_hdulist"], [184, 3, 1, "", "from_header"], [184, 3, 1, "", "get_coord"], [184, 3, 1, "", "get_idx"], [184, 3, 1, "", "get_index_list"], [184, 3, 1, "", "global_to_local"], [184, 2, 1, "", "has_energy_axis"], [184, 3, 1, "", "interp_weights"], [184, 2, 1, "", "ipix"], [184, 3, 1, "", "is_aligned"], [184, 3, 1, "", "is_allclose"], [184, 2, 1, "", "is_allsky"], [184, 2, 1, "", "is_flat"], [184, 2, 1, "", "is_hpx"], [184, 2, 1, "", "is_image"], [184, 2, 1, "", "is_region"], [184, 2, 1, "", "is_regular"], [184, 3, 1, "", "local_to_global"], [184, 2, 1, "", "ndim"], [184, 2, 1, "", "nest"], [184, 2, 1, "", "npix"], [184, 2, 1, "", "npix_max"], [184, 2, 1, "", "nside"], [184, 2, 1, "", "order"], [184, 2, 1, "", "ordering"], [184, 3, 1, "", "pad"], [184, 3, 1, "", "pix_to_coord"], [184, 3, 1, "", "pix_to_idx"], [184, 2, 1, "", "pixel_scales"], [184, 2, 1, "", "projection"], [184, 2, 1, "", "region"], [184, 3, 1, "", "region_mask"], [184, 3, 1, "", "rename_axes"], [184, 3, 1, "", "replace_axis"], [184, 3, 1, "", "resample_axis"], [184, 3, 1, "", "separation"], [184, 2, 1, "", "shape_axes"], [184, 3, 1, "", "slice_by_idx"], [184, 3, 1, "", "solid_angle"], [184, 3, 1, "", "squash"], [184, 3, 1, "", "to_bands_hdu"], [184, 3, 1, "", "to_binsz"], [184, 3, 1, "", "to_cube"], [184, 3, 1, "", "to_header"], [184, 3, 1, "", "to_image"], [184, 3, 1, "", "to_nside"], [184, 3, 1, "", "to_swapped"], [184, 3, 1, "", "to_wcs_geom"], [184, 3, 1, "", "to_wcs_tiles"], [184, 3, 1, "", "upsample"], [184, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[185, 3, 1, "", "coadd"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "create"], [185, 3, 1, "", "crop"], [185, 3, 1, "", "cumsum"], [185, 2, 1, "", "data"], [185, 3, 1, "", "dot"], [185, 3, 1, "", "downsample"], [185, 3, 1, "", "fill_by_coord"], [185, 3, 1, "", "fill_by_idx"], [185, 3, 1, "", "fill_by_pix"], [185, 3, 1, "", "fill_events"], [185, 3, 1, "", "from_geom"], [185, 3, 1, "", "from_hdulist"], [185, 3, 1, "", "from_stack"], [185, 2, 1, "", "geom"], [185, 3, 1, "", "get_by_coord"], [185, 3, 1, "", "get_by_idx"], [185, 3, 1, "", "get_by_pix"], [185, 3, 1, "", "get_image_by_coord"], [185, 3, 1, "", "get_image_by_idx"], [185, 3, 1, "", "get_image_by_pix"], [185, 3, 1, "", "get_spectrum"], [185, 3, 1, "", "integral"], [185, 3, 1, "", "interp_by_coord"], [185, 3, 1, "", "interp_by_pix"], [185, 3, 1, "", "interp_to_geom"], [185, 3, 1, "", "is_allclose"], [185, 2, 1, "", "is_mask"], [185, 3, 1, "", "iter_by_axis"], [185, 3, 1, "", "iter_by_image"], [185, 3, 1, "", "iter_by_image_data"], [185, 3, 1, "", "iter_by_image_index"], [185, 3, 1, "", "mask_nearest_position"], [185, 2, 1, "", "meta"], [185, 3, 1, "", "normalize"], [185, 3, 1, "", "pad"], [185, 3, 1, "", "plot_grid"], [185, 3, 1, "", "plot_interactive"], [185, 2, 1, "", "quantity"], [185, 3, 1, "", "read"], [185, 3, 1, "", "reduce"], [185, 3, 1, "", "reduce_over_axes"], [185, 3, 1, "", "rename_axes"], [185, 3, 1, "", "reorder_axes"], [185, 3, 1, "", "reproject_by_image"], [185, 3, 1, "", "reproject_to_geom"], [185, 3, 1, "", "resample"], [185, 3, 1, "", "resample_axis"], [185, 3, 1, "", "sample_coord"], [185, 3, 1, "", "set_by_coord"], [185, 3, 1, "", "set_by_idx"], [185, 3, 1, "", "set_by_pix"], [185, 3, 1, "", "slice_by_idx"], [185, 3, 1, "", "split_by_axis"], [185, 3, 1, "", "sum_over_axes"], [185, 2, 1, "", "tag"], [185, 3, 1, "", "to_cube"], [185, 3, 1, "", "to_hdu"], [185, 3, 1, "", "to_hdulist"], [185, 3, 1, "", "to_swapped"], [185, 3, 1, "", "to_unit"], [185, 3, 1, "", "to_wcs"], [185, 2, 1, "", "unit"], [185, 3, 1, "", "upsample"], [185, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[186, 3, 1, "", "coadd"], [186, 3, 1, "", "convolve"], [186, 3, 1, "", "convolve_full"], [186, 3, 1, "", "convolve_wcs"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "create"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "cumsum"], [186, 3, 1, "", "cutout"], [186, 2, 1, "", "data"], [186, 3, 1, "", "dot"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "fill_by_coord"], [186, 3, 1, "", "fill_by_idx"], [186, 3, 1, "", "fill_by_pix"], [186, 3, 1, "", "fill_events"], [186, 3, 1, "", "from_geom"], [186, 3, 1, "", "from_hdu"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "from_stack"], [186, 3, 1, "", "from_wcs_tiles"], [186, 2, 1, "", "geom"], [186, 3, 1, "", "get_by_coord"], [186, 3, 1, "", "get_by_idx"], [186, 3, 1, "", "get_by_pix"], [186, 3, 1, "", "get_image_by_coord"], [186, 3, 1, "", "get_image_by_idx"], [186, 3, 1, "", "get_image_by_pix"], [186, 3, 1, "", "get_spectrum"], [186, 3, 1, "", "integral"], [186, 3, 1, "", "interp_by_coord"], [186, 3, 1, "", "interp_by_pix"], [186, 3, 1, "", "interp_to_geom"], [186, 3, 1, "", "is_allclose"], [186, 2, 1, "", "is_mask"], [186, 3, 1, "", "iter_by_axis"], [186, 3, 1, "", "iter_by_image"], [186, 3, 1, "", "iter_by_image_data"], [186, 3, 1, "", "iter_by_image_index"], [186, 3, 1, "", "mask_nearest_position"], [186, 2, 1, "", "meta"], [186, 3, 1, "", "normalize"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "plot"], [186, 3, 1, "", "plot_grid"], [186, 3, 1, "", "plot_interactive"], [186, 3, 1, "", "plot_mask"], [186, 2, 1, "", "quantity"], [186, 3, 1, "", "read"], [186, 3, 1, "", "reduce"], [186, 3, 1, "", "reduce_over_axes"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "reorder_axes"], [186, 3, 1, "", "reproject_by_image"], [186, 3, 1, "", "reproject_to_geom"], [186, 3, 1, "", "resample"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "sample_coord"], [186, 3, 1, "", "set_by_coord"], [186, 3, 1, "", "set_by_idx"], [186, 3, 1, "", "set_by_pix"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "smooth"], [186, 3, 1, "", "split_by_axis"], [186, 3, 1, "", "stack"], [186, 3, 1, "", "sum_over_axes"], [186, 2, 1, "", "tag"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_hdu"], [186, 3, 1, "", "to_hdulist"], [186, 3, 1, "", "to_nside"], [186, 3, 1, "", "to_region_nd_map"], [186, 3, 1, "", "to_swapped"], [186, 3, 1, "", "to_unit"], [186, 3, 1, "", "to_wcs"], [186, 3, 1, "", "to_wcs_tiles"], [186, 2, 1, "", "unit"], [186, 3, 1, "", "upsample"], [186, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[187, 2, 1, "", "as_plot_center"], [187, 2, 1, "", "as_plot_edges"], [187, 2, 1, "", "as_plot_labels"], [187, 2, 1, "", "as_plot_xerr"], [187, 3, 1, "", "assert_name"], [187, 2, 1, "", "bin_width"], [187, 2, 1, "", "center"], [187, 3, 1, "", "concatenate"], [187, 3, 1, "", "coord_to_idx"], [187, 3, 1, "", "coord_to_pix"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "downsample"], [187, 2, 1, "", "edges"], [187, 2, 1, "", "edges_max"], [187, 2, 1, "", "edges_min"], [187, 3, 1, "", "format_plot_xaxis"], [187, 3, 1, "", "from_stack"], [187, 3, 1, "", "from_table"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "name"], [187, 2, 1, "", "nbin"], [187, 2, 1, "", "node_type"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pix_to_coord"], [187, 3, 1, "", "pix_to_idx"], [187, 3, 1, "", "resample"], [187, 3, 1, "", "slice"], [187, 3, 1, "", "squash"], [187, 3, 1, "", "to_header"], [187, 2, 1, "", "unit"], [187, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[188, 3, 1, "", "coadd"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "create"], [188, 3, 1, "", "crop"], [188, 3, 1, "", "cumsum"], [188, 2, 1, "", "data"], [188, 3, 1, "", "dot"], [188, 3, 1, "", "downsample"], [188, 3, 1, "", "fill_by_coord"], [188, 3, 1, "", "fill_by_idx"], [188, 3, 1, "", "fill_by_pix"], [188, 3, 1, "", "fill_events"], [188, 3, 1, "", "from_geom"], [188, 3, 1, "", "from_hdulist"], [188, 3, 1, "", "from_stack"], [188, 2, 1, "", "geom"], [188, 3, 1, "", "get_by_coord"], [188, 3, 1, "", "get_by_idx"], [188, 3, 1, "", "get_by_pix"], [188, 3, 1, "", "get_image_by_coord"], [188, 3, 1, "", "get_image_by_idx"], [188, 3, 1, "", "get_image_by_pix"], [188, 3, 1, "", "get_spectrum"], [188, 3, 1, "", "integral"], [188, 3, 1, "", "interp_by_coord"], [188, 3, 1, "", "interp_by_pix"], [188, 3, 1, "", "interp_to_geom"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_mask"], [188, 3, 1, "", "iter_by_axis"], [188, 3, 1, "", "iter_by_image"], [188, 3, 1, "", "iter_by_image_data"], [188, 3, 1, "", "iter_by_image_index"], [188, 3, 1, "", "mask_nearest_position"], [188, 2, 1, "", "meta"], [188, 3, 1, "", "normalize"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "plot_grid"], [188, 3, 1, "", "plot_interactive"], [188, 2, 1, "", "quantity"], [188, 3, 1, "", "read"], [188, 3, 1, "", "reduce"], [188, 3, 1, "", "reduce_over_axes"], [188, 3, 1, "", "rename_axes"], [188, 3, 1, "", "reorder_axes"], [188, 3, 1, "", "reproject_by_image"], [188, 3, 1, "", "reproject_to_geom"], [188, 3, 1, "", "resample"], [188, 3, 1, "", "resample_axis"], [188, 3, 1, "", "sample_coord"], [188, 3, 1, "", "set_by_coord"], [188, 3, 1, "", "set_by_idx"], [188, 3, 1, "", "set_by_pix"], [188, 3, 1, "", "slice_by_idx"], [188, 3, 1, "", "split_by_axis"], [188, 3, 1, "", "sum_over_axes"], [188, 2, 1, "", "tag"], [188, 3, 1, "", "to_cube"], [188, 3, 1, "", "to_unit"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[189, 3, 1, "", "assert_names"], [189, 3, 1, "", "bin_volume"], [189, 2, 1, "", "center_coord"], [189, 3, 1, "", "coord_to_idx"], [189, 3, 1, "", "coord_to_pix"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "count"], [189, 3, 1, "", "downsample"], [189, 3, 1, "", "drop"], [189, 3, 1, "", "from_default"], [189, 3, 1, "", "from_table"], [189, 3, 1, "", "from_table_hdu"], [189, 3, 1, "", "get_coord"], [189, 3, 1, "", "index"], [189, 3, 1, "", "index_data"], [189, 3, 1, "", "is_allclose"], [189, 2, 1, "", "is_flat"], [189, 2, 1, "", "is_unidimensional"], [189, 2, 1, "", "iter_with_reshape"], [189, 2, 1, "", "names"], [189, 3, 1, "", "pad"], [189, 3, 1, "", "pix_to_coord"], [189, 3, 1, "", "pix_to_idx"], [189, 2, 1, "", "primary_axis"], [189, 3, 1, "", "rename_axes"], [189, 3, 1, "", "replace"], [189, 3, 1, "", "resample"], [189, 2, 1, "", "reverse"], [189, 2, 1, "", "shape"], [189, 3, 1, "", "slice_by_idx"], [189, 3, 1, "", "squash"], [189, 3, 1, "", "to_header"], [189, 3, 1, "", "to_table"], [189, 3, 1, "", "to_table_hdu"], [189, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[190, 2, 1, "", "as_plot_center"], [190, 2, 1, "", "as_plot_edges"], [190, 2, 1, "", "as_plot_labels"], [190, 2, 1, "", "as_plot_scale"], [190, 2, 1, "", "as_plot_xerr"], [190, 3, 1, "", "assert_name"], [190, 2, 1, "", "bin_width"], [190, 2, 1, "", "bounds"], [190, 2, 1, "", "center"], [190, 3, 1, "", "concatenate"], [190, 3, 1, "", "coord_to_idx"], [190, 3, 1, "", "coord_to_pix"], [190, 3, 1, "", "copy"], [190, 3, 1, "", "downsample"], [190, 2, 1, "", "edges"], [190, 2, 1, "", "edges_max"], [190, 2, 1, "", "edges_min"], [190, 3, 1, "", "format_plot_xaxis"], [190, 3, 1, "", "format_plot_yaxis"], [190, 3, 1, "", "from_bounds"], [190, 3, 1, "", "from_edges"], [190, 3, 1, "", "from_energy_bounds"], [190, 3, 1, "", "from_energy_edges"], [190, 3, 1, "", "from_nodes"], [190, 3, 1, "", "from_stack"], [190, 3, 1, "", "from_table"], [190, 3, 1, "", "from_table_hdu"], [190, 3, 1, "", "group_table"], [190, 2, 1, "", "interp"], [190, 3, 1, "", "is_aligned"], [190, 3, 1, "", "is_allclose"], [190, 2, 1, "", "is_energy_axis"], [190, 2, 1, "", "iter_by_edges"], [190, 2, 1, "", "name"], [190, 2, 1, "", "nbin"], [190, 2, 1, "", "nbin_per_decade"], [190, 2, 1, "", "node_type"], [190, 3, 1, "", "pad"], [190, 3, 1, "", "pix_to_coord"], [190, 3, 1, "", "pix_to_idx"], [190, 3, 1, "", "rename"], [190, 3, 1, "", "round"], [190, 3, 1, "", "slice"], [190, 3, 1, "", "squash"], [190, 3, 1, "", "to_header"], [190, 3, 1, "", "to_node_type"], [190, 3, 1, "", "to_table"], [190, 3, 1, "", "to_table_hdu"], [190, 2, 1, "", "unit"], [190, 3, 1, "", "upsample"], [190, 2, 1, "", "use_center_as_plot_labels"], [190, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[191, 3, 1, "", "apply_mask"], [191, 2, 1, "", "axis_names"], [191, 2, 1, "", "broadcasted"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create"], [191, 2, 1, "", "flat"], [191, 2, 1, "", "frame"], [191, 2, 1, "", "lat"], [191, 2, 1, "", "lon"], [191, 2, 1, "", "match_by_name"], [191, 2, 1, "", "ndim"], [191, 2, 1, "", "phi"], [191, 2, 1, "", "shape"], [191, 2, 1, "", "size"], [191, 2, 1, "", "skycoord"], [191, 2, 1, "", "theta"], [191, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[192, 3, 1, "", "clear"], [192, 3, 1, "", "from_geom"], [192, 3, 1, "", "from_hdulist"], [192, 2, 1, "", "geom"], [192, 3, 1, "", "get"], [192, 3, 1, "", "items"], [192, 3, 1, "", "keys"], [192, 3, 1, "", "pop"], [192, 3, 1, "", "popitem"], [192, 3, 1, "", "read"], [192, 3, 1, "", "setdefault"], [192, 3, 1, "", "to_hdulist"], [192, 3, 1, "", "update"], [192, 3, 1, "", "values"], [192, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[193, 2, 1, "", "as_energy_true"], [193, 2, 1, "", "axes"], [193, 2, 1, "", "axes_names"], [193, 3, 1, "", "bin_volume"], [193, 2, 1, "", "binsz_wcs"], [193, 2, 1, "", "center_coord"], [193, 2, 1, "", "center_pix"], [193, 2, 1, "", "center_skydir"], [193, 3, 1, "", "contains"], [193, 3, 1, "", "contains_pix"], [193, 3, 1, "", "contains_wcs_pix"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create"], [193, 3, 1, "", "crop"], [193, 3, 1, "", "data_nbytes"], [193, 2, 1, "", "data_shape"], [193, 2, 1, "", "data_shape_axes"], [193, 3, 1, "", "downsample"], [193, 3, 1, "", "drop"], [193, 3, 1, "", "energy_mask"], [193, 2, 1, "", "frame"], [193, 3, 1, "", "from_hdulist"], [193, 3, 1, "", "from_regions"], [193, 3, 1, "", "get_coord"], [193, 3, 1, "", "get_idx"], [193, 3, 1, "", "get_wcs_coord_and_weights"], [193, 2, 1, "", "has_energy_axis"], [193, 2, 1, "", "is_all_point_sky_regions"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_allsky"], [193, 2, 1, "", "is_flat"], [193, 2, 1, "", "is_hpx"], [193, 2, 1, "", "is_image"], [193, 2, 1, "", "is_region"], [193, 2, 1, "", "is_regular"], [193, 2, 1, "", "npix"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 3, 1, "", "plot_region"], [193, 2, 1, "", "projection"], [193, 2, 1, "", "region"], [193, 3, 1, "", "rename_axes"], [193, 3, 1, "", "replace_axis"], [193, 3, 1, "", "resample_axis"], [193, 3, 1, "", "separation"], [193, 3, 1, "", "slice_by_idx"], [193, 3, 1, "", "solid_angle"], [193, 3, 1, "", "squash"], [193, 3, 1, "", "to_bands_hdu"], [193, 3, 1, "", "to_binsz"], [193, 3, 1, "", "to_binsz_wcs"], [193, 3, 1, "", "to_cube"], [193, 3, 1, "", "to_hdulist"], [193, 3, 1, "", "to_image"], [193, 3, 1, "", "to_wcs_geom"], [193, 3, 1, "", "union"], [193, 3, 1, "", "upsample"], [193, 2, 1, "", "wcs"], [193, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[194, 3, 1, "", "coadd"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cumsum"], [194, 3, 1, "", "cutout"], [194, 2, 1, "", "data"], [194, 3, 1, "", "dot"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "fill_by_coord"], [194, 3, 1, "", "fill_by_idx"], [194, 3, 1, "", "fill_by_pix"], [194, 3, 1, "", "fill_events"], [194, 3, 1, "", "from_geom"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_stack"], [194, 3, 1, "", "from_table"], [194, 2, 1, "", "geom"], [194, 3, 1, "", "get_by_coord"], [194, 3, 1, "", "get_by_idx"], [194, 3, 1, "", "get_by_pix"], [194, 3, 1, "", "get_image_by_coord"], [194, 3, 1, "", "get_image_by_idx"], [194, 3, 1, "", "get_image_by_pix"], [194, 3, 1, "", "get_spectrum"], [194, 3, 1, "", "integral"], [194, 3, 1, "", "interp_by_coord"], [194, 3, 1, "", "interp_by_pix"], [194, 3, 1, "", "interp_to_geom"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_mask"], [194, 3, 1, "", "iter_by_axis"], [194, 3, 1, "", "iter_by_axis_data"], [194, 3, 1, "", "iter_by_image"], [194, 3, 1, "", "iter_by_image_data"], [194, 3, 1, "", "iter_by_image_index"], [194, 3, 1, "", "mask_nearest_position"], [194, 2, 1, "", "meta"], [194, 3, 1, "", "normalize"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "plot"], [194, 3, 1, "", "plot_grid"], [194, 3, 1, "", "plot_hist"], [194, 3, 1, "", "plot_interactive"], [194, 3, 1, "", "plot_mask"], [194, 3, 1, "", "plot_region"], [194, 2, 1, "", "quantity"], [194, 3, 1, "", "read"], [194, 3, 1, "", "reduce"], [194, 3, 1, "", "reduce_over_axes"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "reorder_axes"], [194, 3, 1, "", "reproject_by_image"], [194, 3, 1, "", "reproject_to_geom"], [194, 3, 1, "", "resample"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "sample_coord"], [194, 3, 1, "", "set_by_coord"], [194, 3, 1, "", "set_by_idx"], [194, 3, 1, "", "set_by_pix"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "split_by_axis"], [194, 3, 1, "", "stack"], [194, 3, 1, "", "sum_over_axes"], [194, 2, 1, "", "tag"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_hdulist"], [194, 3, 1, "", "to_region_nd_map"], [194, 3, 1, "", "to_table"], [194, 3, 1, "", "to_unit"], [194, 2, 1, "", "unit"], [194, 3, 1, "", "upsample"], [194, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[195, 2, 1, "", "as_plot_center"], [195, 2, 1, "", "as_plot_edges"], [195, 2, 1, "", "as_plot_labels"], [195, 2, 1, "", "as_plot_xerr"], [195, 3, 1, "", "assert_name"], [195, 2, 1, "", "bin_width"], [195, 2, 1, "", "bounds"], [195, 2, 1, "", "center"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "downsample"], [195, 2, 1, "", "edges"], [195, 2, 1, "", "edges_max"], [195, 2, 1, "", "edges_min"], [195, 3, 1, "", "format_plot_xaxis"], [195, 3, 1, "", "from_gti"], [195, 3, 1, "", "from_gti_bounds"], [195, 3, 1, "", "from_table"], [195, 3, 1, "", "from_time_bounds"], [195, 3, 1, "", "from_time_edges"], [195, 3, 1, "", "group_table"], [195, 2, 1, "", "interp"], [195, 3, 1, "", "is_aligned"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_contiguous"], [195, 2, 1, "", "iter_by_edges"], [195, 2, 1, "", "name"], [195, 2, 1, "", "nbin"], [195, 2, 1, "", "node_type"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 2, 1, "", "reference_time"], [195, 3, 1, "", "slice"], [195, 3, 1, "", "squash"], [195, 2, 1, "", "time_bounds"], [195, 2, 1, "", "time_delta"], [195, 2, 1, "", "time_edges"], [195, 2, 1, "", "time_format"], [195, 2, 1, "", "time_max"], [195, 2, 1, "", "time_mid"], [195, 2, 1, "", "time_min"], [195, 3, 1, "", "to_contiguous"], [195, 3, 1, "", "to_gti"], [195, 3, 1, "", "to_header"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[196, 2, 1, "", "as_energy_true"], [196, 2, 1, "", "axes"], [196, 2, 1, "", "axes_names"], [196, 3, 1, "", "bin_volume"], [196, 3, 1, "", "binary_structure"], [196, 3, 1, "", "boundary_mask"], [196, 2, 1, "", "center_coord"], [196, 2, 1, "", "center_pix"], [196, 2, 1, "", "center_skydir"], [196, 3, 1, "", "contains"], [196, 3, 1, "", "contains_pix"], [196, 3, 1, "", "coord_to_idx"], [196, 3, 1, "", "coord_to_pix"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cutout"], [196, 3, 1, "", "cutout_slices"], [196, 3, 1, "", "data_nbytes"], [196, 2, 1, "", "data_shape"], [196, 2, 1, "", "data_shape_axes"], [196, 2, 1, "", "data_shape_image"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "drop"], [196, 3, 1, "", "energy_mask"], [196, 2, 1, "", "footprint"], [196, 2, 1, "", "footprint_rectangle_sky_region"], [196, 2, 1, "", "frame"], [196, 3, 1, "", "from_aligned"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_header"], [196, 3, 1, "", "get_coord"], [196, 3, 1, "", "get_idx"], [196, 3, 1, "", "get_pix"], [196, 2, 1, "", "has_energy_axis"], [196, 3, 1, "", "is_aligned"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_allsky"], [196, 2, 1, "", "is_flat"], [196, 2, 1, "", "is_hpx"], [196, 2, 1, "", "is_image"], [196, 2, 1, "", "is_region"], [196, 2, 1, "", "is_regular"], [196, 2, 1, "", "ndim"], [196, 2, 1, "", "npix"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "pix_to_coord"], [196, 3, 1, "", "pix_to_idx"], [196, 2, 1, "", "pixel_area"], [196, 2, 1, "", "pixel_scales"], [196, 2, 1, "", "projection"], [196, 3, 1, "", "region_mask"], [196, 3, 1, "", "region_weights"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "replace_axis"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "separation"], [196, 2, 1, "", "shape_axes"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "solid_angle"], [196, 3, 1, "", "squash"], [196, 3, 1, "", "to_bands_hdu"], [196, 3, 1, "", "to_binsz"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_even_npix"], [196, 3, 1, "", "to_header"], [196, 3, 1, "", "to_image"], [196, 3, 1, "", "to_odd_npix"], [196, 3, 1, "", "upsample"], [196, 2, 1, "", "wcs"], [196, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_unit"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[198, 3, 1, "", "binary_dilate"], [198, 3, 1, "", "binary_erode"], [198, 3, 1, "", "coadd"], [198, 3, 1, "", "convolve"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cumsum"], [198, 3, 1, "", "cutout"], [198, 3, 1, "", "cutout_and_mask_region"], [198, 2, 1, "", "data"], [198, 3, 1, "", "dot"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "fill_by_coord"], [198, 3, 1, "", "fill_by_idx"], [198, 3, 1, "", "fill_by_pix"], [198, 3, 1, "", "fill_events"], [198, 3, 1, "", "from_geom"], [198, 3, 1, "", "from_hdu"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_stack"], [198, 2, 1, "", "geom"], [198, 3, 1, "", "get_by_coord"], [198, 3, 1, "", "get_by_idx"], [198, 3, 1, "", "get_by_pix"], [198, 3, 1, "", "get_image_by_coord"], [198, 3, 1, "", "get_image_by_idx"], [198, 3, 1, "", "get_image_by_pix"], [198, 3, 1, "", "get_spectrum"], [198, 3, 1, "", "integral"], [198, 3, 1, "", "interp_by_coord"], [198, 3, 1, "", "interp_by_pix"], [198, 3, 1, "", "interp_to_geom"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_mask"], [198, 3, 1, "", "iter_by_axis"], [198, 3, 1, "", "iter_by_image"], [198, 3, 1, "", "iter_by_image_data"], [198, 3, 1, "", "iter_by_image_index"], [198, 3, 1, "", "mask_contains_region"], [198, 3, 1, "", "mask_nearest_position"], [198, 2, 1, "", "meta"], [198, 3, 1, "", "normalize"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "plot"], [198, 3, 1, "", "plot_grid"], [198, 3, 1, "", "plot_interactive"], [198, 3, 1, "", "plot_mask"], [198, 2, 1, "", "quantity"], [198, 3, 1, "", "read"], [198, 3, 1, "", "reduce"], [198, 3, 1, "", "reduce_over_axes"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "reorder_axes"], [198, 3, 1, "", "reproject_by_image"], [198, 3, 1, "", "reproject_to_geom"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "sample_coord"], [198, 3, 1, "", "set_by_coord"], [198, 3, 1, "", "set_by_idx"], [198, 3, 1, "", "set_by_pix"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "smooth"], [198, 3, 1, "", "split_by_axis"], [198, 3, 1, "", "stack"], [198, 3, 1, "", "sum_over_axes"], [198, 2, 1, "", "tag"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_hdu"], [198, 3, 1, "", "to_hdulist"], [198, 3, 1, "", "to_region_nd_map"], [198, 3, 1, "", "to_region_nd_map_histogram"], [198, 3, 1, "", "to_unit"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 3, 1, "", "write"]], "gammapy.modeling": [[201, 1, 1, "", "Covariance"], [202, 1, 1, "", "CovarianceResult"], [203, 1, 1, "", "Fit"], [204, 1, 1, "", "FitResult"], [205, 1, 1, "", "OptimizeResult"], [206, 1, 1, "", "Parameter"], [207, 1, 1, "", "Parameters"], [208, 1, 1, "", "PriorParameter"], [209, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [275, 4, 1, "", "select_nested_models"], [276, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[201, 2, 1, "", "correlation"], [201, 2, 1, "", "data"], [201, 3, 1, "", "from_factor_matrix"], [201, 3, 1, "", "from_stack"], [201, 3, 1, "", "get_subcovariance"], [201, 3, 1, "", "plot_correlation"], [201, 2, 1, "", "scipy_mvn"], [201, 3, 1, "", "set_subcovariance"], [201, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[202, 2, 1, "", "backend"], [202, 2, 1, "", "matrix"], [202, 2, 1, "", "message"], [202, 2, 1, "", "method"], [202, 2, 1, "", "success"], [202, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[203, 3, 1, "", "confidence"], [203, 3, 1, "", "covariance"], [203, 3, 1, "", "optimize"], [203, 3, 1, "", "run"], [203, 3, 1, "", "stat_contour"], [203, 3, 1, "", "stat_profile"], [203, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[204, 2, 1, "", "backend"], [204, 2, 1, "", "covariance_result"], [204, 2, 1, "", "message"], [204, 2, 1, "", "method"], [204, 2, 1, "", "minuit"], [204, 2, 1, "", "models"], [204, 2, 1, "", "nfev"], [204, 2, 1, "", "optimize_result"], [204, 2, 1, "", "parameters"], [204, 2, 1, "", "success"], [204, 3, 1, "", "to_dict"], [204, 3, 1, "", "to_yaml"], [204, 2, 1, "", "total_stat"], [204, 2, 1, "", "trace"], [204, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[205, 2, 1, "", "backend"], [205, 2, 1, "", "message"], [205, 2, 1, "", "method"], [205, 2, 1, "", "minuit"], [205, 2, 1, "", "models"], [205, 2, 1, "", "nfev"], [205, 2, 1, "", "parameters"], [205, 2, 1, "", "success"], [205, 3, 1, "", "to_dict"], [205, 2, 1, "", "total_stat"], [205, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[206, 3, 1, "", "autoscale"], [206, 3, 1, "", "check_limits"], [206, 2, 1, "", "conf_max"], [206, 2, 1, "", "conf_min"], [206, 3, 1, "", "copy"], [206, 2, 1, "", "error"], [206, 2, 1, "", "factor"], [206, 2, 1, "", "factor_max"], [206, 2, 1, "", "factor_min"], [206, 2, 1, "", "frozen"], [206, 2, 1, "", "is_norm"], [206, 2, 1, "", "max"], [206, 2, 1, "", "min"], [206, 2, 1, "", "name"], [206, 2, 1, "", "norm_parameters"], [206, 2, 1, "", "prior"], [206, 3, 1, "", "prior_stat_sum"], [206, 2, 1, "", "quantity"], [206, 2, 1, "", "scale"], [206, 2, 1, "", "scale_method"], [206, 2, 1, "", "scan_max"], [206, 2, 1, "", "scan_min"], [206, 2, 1, "", "scan_n_sigma"], [206, 2, 1, "", "scan_values"], [206, 3, 1, "", "to_dict"], [206, 2, 1, "", "type"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "update_from_dict"], [206, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[207, 3, 1, "", "autoscale"], [207, 3, 1, "", "check_limits"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "count"], [207, 2, 1, "", "free_parameters"], [207, 3, 1, "", "freeze_all"], [207, 3, 1, "", "from_dict"], [207, 3, 1, "", "from_stack"], [207, 3, 1, "", "index"], [207, 2, 1, "", "max"], [207, 2, 1, "", "min"], [207, 2, 1, "", "names"], [207, 2, 1, "", "norm_parameters"], [207, 2, 1, "", "prior"], [207, 3, 1, "", "prior_stat_sum"], [207, 3, 1, "", "restore_status"], [207, 3, 1, "", "select"], [207, 3, 1, "", "set_parameter_factors"], [207, 3, 1, "", "to_dict"], [207, 3, 1, "", "to_table"], [207, 2, 1, "", "types"], [207, 3, 1, "", "unfreeze_all"], [207, 2, 1, "", "unique_parameters"], [207, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[208, 3, 1, "", "autoscale"], [208, 3, 1, "", "check_limits"], [208, 2, 1, "", "conf_max"], [208, 2, 1, "", "conf_min"], [208, 3, 1, "", "copy"], [208, 2, 1, "", "error"], [208, 2, 1, "", "factor"], [208, 2, 1, "", "factor_max"], [208, 2, 1, "", "factor_min"], [208, 2, 1, "", "frozen"], [208, 2, 1, "", "is_norm"], [208, 2, 1, "", "max"], [208, 2, 1, "", "min"], [208, 2, 1, "", "name"], [208, 2, 1, "", "norm_parameters"], [208, 2, 1, "", "prior"], [208, 3, 1, "", "prior_stat_sum"], [208, 2, 1, "", "quantity"], [208, 2, 1, "", "scale"], [208, 2, 1, "", "scale_method"], [208, 2, 1, "", "scan_max"], [208, 2, 1, "", "scan_min"], [208, 2, 1, "", "scan_n_sigma"], [208, 2, 1, "", "scan_values"], [208, 3, 1, "", "to_dict"], [208, 2, 1, "", "type"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "update_from_dict"], [208, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[209, 3, 1, "", "autoscale"], [209, 3, 1, "", "check_limits"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "count"], [209, 2, 1, "", "free_parameters"], [209, 3, 1, "", "freeze_all"], [209, 3, 1, "", "from_dict"], [209, 3, 1, "", "from_stack"], [209, 3, 1, "", "index"], [209, 2, 1, "", "max"], [209, 2, 1, "", "min"], [209, 2, 1, "", "names"], [209, 2, 1, "", "norm_parameters"], [209, 2, 1, "", "prior"], [209, 3, 1, "", "prior_stat_sum"], [209, 3, 1, "", "restore_status"], [209, 3, 1, "", "select"], [209, 3, 1, "", "set_parameter_factors"], [209, 3, 1, "", "to_dict"], [209, 3, 1, "", "to_table"], [209, 2, 1, "", "types"], [209, 3, 1, "", "unfreeze_all"], [209, 2, 1, "", "unique_parameters"], [209, 2, 1, "", "value"]], "gammapy.modeling.models": [[210, 1, 1, "", "BrokenPowerLawSpectralModel"], [211, 1, 1, "", "CompoundSpectralModel"], [212, 1, 1, "", "ConstantFluxSpatialModel"], [213, 1, 1, "", "ConstantSpatialModel"], [214, 1, 1, "", "ConstantSpectralModel"], [215, 1, 1, "", "ConstantTemporalModel"], [216, 1, 1, "", "DatasetModels"], [217, 1, 1, "", "DiskSpatialModel"], [218, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [219, 5, 1, "", "EBL_DATA_BUILTIN"], [220, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [221, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [222, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [223, 1, 1, "", "ExpDecayTemporalModel"], [224, 1, 1, "", "FoVBackgroundModel"], [225, 1, 1, "", "GaussianSpatialModel"], [226, 1, 1, "", "GaussianSpectralModel"], [227, 1, 1, "", "GaussianTemporalModel"], [228, 1, 1, "", "GeneralizedGaussianSpatialModel"], [229, 1, 1, "", "GeneralizedGaussianTemporalModel"], [230, 1, 1, "", "LightCurveTemplateTemporalModel"], [231, 1, 1, "", "LinearTemporalModel"], [232, 1, 1, "", "LogParabolaNormSpectralModel"], [233, 1, 1, "", "LogParabolaSpectralModel"], [234, 5, 1, "", "MODEL_REGISTRY"], [235, 1, 1, "", "MeyerCrabSpectralModel"], [236, 1, 1, "", "Model"], [237, 1, 1, "", "ModelBase"], [238, 1, 1, "", "Models"], [239, 1, 1, "", "NaimaSpectralModel"], [240, 1, 1, "", "PiecewiseNormSpatialModel"], [241, 1, 1, "", "PiecewiseNormSpectralModel"], [242, 1, 1, "", "PointSpatialModel"], [243, 1, 1, "", "PowerLaw2SpectralModel"], [244, 1, 1, "", "PowerLawNormSpectralModel"], [245, 1, 1, "", "PowerLawSpectralModel"], [246, 1, 1, "", "PowerLawTemporalModel"], [247, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [248, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [249, 1, 1, "", "ScaleSpectralModel"], [250, 1, 1, "", "Shell2SpatialModel"], [251, 1, 1, "", "ShellSpatialModel"], [252, 1, 1, "", "SineTemporalModel"], [253, 1, 1, "", "SkyModel"], [254, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [255, 1, 1, "", "SpatialModel"], [256, 1, 1, "", "SpectralModel"], [257, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [258, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [259, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [260, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [261, 1, 1, "", "TemplateNDSpatialModel"], [262, 1, 1, "", "TemplateNDSpectralModel"], [263, 1, 1, "", "TemplateNPredModel"], [264, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [265, 1, 1, "", "TemplateSpatialModel"], [266, 1, 1, "", "TemplateSpectralModel"], [267, 1, 1, "", "TemporalModel"], [268, 4, 1, "", "create_cosmic_ray_spectral_model"], [269, 4, 1, "", "create_crab_spectral_model"], [270, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [271, 4, 1, "", "integrate_spectrum"], [272, 4, 1, "", "read_hermes_cube"], [273, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[210, 3, 1, "", "__call__"], [210, 2, 1, "", "amplitude"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "covariance"], [210, 2, 1, "", "default_parameters"], [210, 2, 1, "", "ebreak"], [210, 3, 1, "", "energy_flux"], [210, 3, 1, "", "energy_flux_error"], [210, 3, 1, "", "evaluate"], [210, 3, 1, "", "evaluate_error"], [210, 3, 1, "", "freeze"], [210, 3, 1, "", "from_dict"], [210, 3, 1, "", "from_parameters"], [210, 2, 1, "", "frozen"], [210, 2, 1, "", "index1"], [210, 2, 1, "", "index2"], [210, 3, 1, "", "integral"], [210, 3, 1, "", "integral_error"], [210, 3, 1, "", "inverse"], [210, 3, 1, "", "inverse_all"], [210, 2, 1, "", "is_norm_spectral_model"], [210, 2, 1, "", "parameters"], [210, 2, 1, "", "pivot_energy"], [210, 3, 1, "", "plot"], [210, 3, 1, "", "plot_error"], [210, 3, 1, "", "reassign"], [210, 3, 1, "", "reference_fluxes"], [210, 3, 1, "", "spectral_index"], [210, 3, 1, "", "spectral_index_error"], [210, 2, 1, "", "tag"], [210, 3, 1, "", "to_dict"], [210, 2, 1, "", "type"], [210, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[211, 3, 1, "", "__call__"], [211, 3, 1, "", "copy"], [211, 2, 1, "", "covariance"], [211, 2, 1, "", "default_parameters"], [211, 3, 1, "", "energy_flux"], [211, 3, 1, "", "energy_flux_error"], [211, 3, 1, "", "evaluate"], [211, 3, 1, "", "evaluate_error"], [211, 3, 1, "", "freeze"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_parameters"], [211, 2, 1, "", "frozen"], [211, 3, 1, "", "integral"], [211, 3, 1, "", "integral_error"], [211, 3, 1, "", "inverse"], [211, 3, 1, "", "inverse_all"], [211, 2, 1, "", "is_norm_spectral_model"], [211, 2, 1, "", "parameters"], [211, 2, 1, "", "pivot_energy"], [211, 3, 1, "", "plot"], [211, 3, 1, "", "plot_error"], [211, 3, 1, "", "reassign"], [211, 3, 1, "", "reference_fluxes"], [211, 3, 1, "", "spectral_index"], [211, 3, 1, "", "spectral_index_error"], [211, 2, 1, "", "tag"], [211, 3, 1, "", "to_dict"], [211, 2, 1, "", "type"], [211, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[212, 3, 1, "", "__call__"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "covariance"], [212, 2, 1, "", "default_parameters"], [212, 3, 1, "", "evaluate"], [212, 3, 1, "", "evaluate_geom"], [212, 2, 1, "", "evaluation_bin_size_min"], [212, 2, 1, "", "evaluation_radius"], [212, 2, 1, "", "evaluation_region"], [212, 2, 1, "", "frame"], [212, 3, 1, "", "freeze"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_parameters"], [212, 3, 1, "", "from_position"], [212, 2, 1, "", "frozen"], [212, 3, 1, "", "integrate_geom"], [212, 2, 1, "", "is_energy_dependent"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "phi_0"], [212, 3, 1, "", "plot"], [212, 3, 1, "", "plot_error"], [212, 3, 1, "", "plot_grid"], [212, 3, 1, "", "plot_interactive"], [212, 3, 1, "", "plot_position_error"], [212, 2, 1, "", "position"], [212, 2, 1, "", "position_error"], [212, 2, 1, "", "position_lonlat"], [212, 3, 1, "", "reassign"], [212, 2, 1, "", "tag"], [212, 3, 1, "", "to_dict"], [212, 3, 1, "", "to_region"], [212, 2, 1, "", "type"], [212, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[213, 3, 1, "", "__call__"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "evaluate_geom"], [213, 2, 1, "", "evaluation_bin_size_min"], [213, 2, 1, "", "evaluation_radius"], [213, 2, 1, "", "evaluation_region"], [213, 2, 1, "", "frame"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 3, 1, "", "from_position"], [213, 2, 1, "", "frozen"], [213, 3, 1, "", "integrate_geom"], [213, 2, 1, "", "is_energy_dependent"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "phi_0"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "plot_error"], [213, 3, 1, "", "plot_grid"], [213, 3, 1, "", "plot_interactive"], [213, 3, 1, "", "plot_position_error"], [213, 2, 1, "", "position"], [213, 2, 1, "", "position_error"], [213, 2, 1, "", "position_lonlat"], [213, 3, 1, "", "reassign"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "to_dict"], [213, 3, 1, "", "to_region"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"], [213, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[214, 3, 1, "", "__call__"], [214, 2, 1, "", "const"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "covariance"], [214, 2, 1, "", "default_parameters"], [214, 3, 1, "", "energy_flux"], [214, 3, 1, "", "energy_flux_error"], [214, 3, 1, "", "evaluate"], [214, 3, 1, "", "evaluate_error"], [214, 3, 1, "", "freeze"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_parameters"], [214, 2, 1, "", "frozen"], [214, 3, 1, "", "integral"], [214, 3, 1, "", "integral_error"], [214, 3, 1, "", "inverse"], [214, 3, 1, "", "inverse_all"], [214, 2, 1, "", "is_norm_spectral_model"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "pivot_energy"], [214, 3, 1, "", "plot"], [214, 3, 1, "", "plot_error"], [214, 3, 1, "", "reassign"], [214, 3, 1, "", "reference_fluxes"], [214, 3, 1, "", "spectral_index"], [214, 3, 1, "", "spectral_index_error"], [214, 2, 1, "", "tag"], [214, 3, 1, "", "to_dict"], [214, 2, 1, "", "type"], [214, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[215, 3, 1, "", "__call__"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 2, 1, "", "frozen"], [215, 3, 1, "", "integral"], [215, 2, 1, "", "is_energy_dependent"], [215, 2, 1, "", "parameters"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "reference_time"], [215, 3, 1, "", "sample_time"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "time_sum"], [215, 3, 1, "", "to_dict"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[216, 3, 1, "", "copy"], [216, 3, 1, "", "count"], [216, 2, 1, "", "covariance"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_yaml"], [216, 2, 1, "", "frozen"], [216, 3, 1, "", "index"], [216, 2, 1, "", "names"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "parameters_unique_names"], [216, 3, 1, "", "plot_positions"], [216, 3, 1, "", "plot_regions"], [216, 2, 1, "", "positions"], [216, 3, 1, "", "read"], [216, 3, 1, "", "read_covariance"], [216, 3, 1, "", "reassign"], [216, 3, 1, "", "restore_status"], [216, 3, 1, "", "select"], [216, 3, 1, "", "select_from_geom"], [216, 3, 1, "", "select_mask"], [216, 3, 1, "", "select_region"], [216, 3, 1, "", "selection_mask"], [216, 3, 1, "", "set_parameters_bounds"], [216, 3, 1, "", "to_dict"], [216, 3, 1, "", "to_parameters_table"], [216, 3, 1, "", "to_regions"], [216, 3, 1, "", "to_template_sky_model"], [216, 3, 1, "", "to_template_spectral_model"], [216, 3, 1, "", "to_yaml"], [216, 3, 1, "", "unfreeze"], [216, 3, 1, "", "update_link_label"], [216, 3, 1, "", "update_parameters_from_table"], [216, 2, 1, "", "wcs_geom"], [216, 3, 1, "", "write"], [216, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[217, 3, 1, "", "__call__"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 2, 1, "", "e"], [217, 2, 1, "", "edge_width"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "evaluate_geom"], [217, 2, 1, "", "evaluation_bin_size_min"], [217, 2, 1, "", "evaluation_radius"], [217, 2, 1, "", "evaluation_region"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 3, 1, "", "from_position"], [217, 3, 1, "", "from_region"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "integrate_geom"], [217, 2, 1, "", "is_energy_dependent"], [217, 2, 1, "", "lat_0"], [217, 2, 1, "", "lon_0"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "phi"], [217, 2, 1, "", "phi_0"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "plot_error"], [217, 3, 1, "", "plot_grid"], [217, 3, 1, "", "plot_interactive"], [217, 3, 1, "", "plot_position_error"], [217, 2, 1, "", "position"], [217, 2, 1, "", "position_error"], [217, 2, 1, "", "position_lonlat"], [217, 2, 1, "", "r_0"], [217, 3, 1, "", "reassign"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "to_region"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[218, 3, 1, "", "__call__"], [218, 2, 1, "", "alpha_norm"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 3, 1, "", "energy_flux"], [218, 3, 1, "", "energy_flux_error"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "evaluate_error"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "integral"], [218, 3, 1, "", "integral_error"], [218, 3, 1, "", "inverse"], [218, 3, 1, "", "inverse_all"], [218, 2, 1, "", "is_norm_spectral_model"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "pivot_energy"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "plot_error"], [218, 3, 1, "", "read"], [218, 3, 1, "", "read_builtin"], [218, 3, 1, "", "reassign"], [218, 2, 1, "", "redshift"], [218, 3, 1, "", "reference_fluxes"], [218, 3, 1, "", "spectral_index"], [218, 3, 1, "", "spectral_index_error"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[220, 3, 1, "", "__call__"], [220, 2, 1, "", "amplitude"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 2, 1, "", "ecut"], [220, 3, 1, "", "energy_flux"], [220, 3, 1, "", "energy_flux_error"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_error"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 2, 1, "", "frozen"], [220, 2, 1, "", "index"], [220, 3, 1, "", "integral"], [220, 3, 1, "", "integral_error"], [220, 3, 1, "", "inverse"], [220, 3, 1, "", "inverse_all"], [220, 2, 1, "", "is_norm_spectral_model"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "pivot_energy"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "reference"], [220, 3, 1, "", "reference_fluxes"], [220, 3, 1, "", "spectral_index"], [220, 3, 1, "", "spectral_index_error"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "alpha"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 2, 1, "", "index"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "lambda_"], [221, 2, 1, "", "norm"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 2, 1, "", "reference"], [221, 3, 1, "", "reference_fluxes"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "alpha"], [222, 2, 1, "", "amplitude"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 2, 1, "", "e_peak"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 2, 1, "", "index"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "lambda_"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "reference"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integral"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "parameters"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "reference_time"], [223, 3, 1, "", "sample_time"], [223, 2, 1, "", "t0"], [223, 2, 1, "", "t_ref"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "time_sum"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[224, 3, 1, "", "contributes"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_geom"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 2, 1, "", "name"], [224, 2, 1, "", "parameters"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "reset_to_default"], [224, 2, 1, "", "spatial_model"], [224, 2, 1, "", "spectral_model"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 2, 1, "", "e"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_geom"], [225, 2, 1, "", "evaluation_bin_size_min"], [225, 2, 1, "", "evaluation_radius"], [225, 2, 1, "", "evaluation_region"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_position"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integrate_geom"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "lat_0"], [225, 2, 1, "", "lon_0"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "phi"], [225, 2, 1, "", "phi_0"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "plot_grid"], [225, 3, 1, "", "plot_interactive"], [225, 3, 1, "", "plot_position_error"], [225, 2, 1, "", "position"], [225, 2, 1, "", "position_error"], [225, 2, 1, "", "position_lonlat"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "sigma"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_region"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "amplitude"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "energy_flux"], [226, 3, 1, "", "energy_flux_error"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_error"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 3, 1, "", "integral_error"], [226, 3, 1, "", "inverse"], [226, 3, 1, "", "inverse_all"], [226, 2, 1, "", "is_norm_spectral_model"], [226, 2, 1, "", "mean"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "pivot_energy"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "reassign"], [226, 3, 1, "", "reference_fluxes"], [226, 2, 1, "", "sigma"], [226, 3, 1, "", "spectral_index"], [226, 3, 1, "", "spectral_index_error"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "parameters"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference_time"], [227, 3, 1, "", "sample_time"], [227, 2, 1, "", "sigma"], [227, 2, 1, "", "t_ref"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "time_sum"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "e"], [228, 2, 1, "", "eta"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_geom"], [228, 2, 1, "", "evaluation_bin_size_min"], [228, 2, 1, "", "evaluation_radius"], [228, 2, 1, "", "evaluation_region"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 3, 1, "", "from_position"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integrate_geom"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "lat_0"], [228, 2, 1, "", "lon_0"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "phi"], [228, 2, 1, "", "phi_0"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "plot_grid"], [228, 3, 1, "", "plot_interactive"], [228, 3, 1, "", "plot_position_error"], [228, 2, 1, "", "position"], [228, 2, 1, "", "position_error"], [228, 2, 1, "", "position_lonlat"], [228, 2, 1, "", "r_0"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 3, 1, "", "to_region"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[229, 3, 1, "", "__call__"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 2, 1, "", "eta"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "parameters"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference_time"], [229, 3, 1, "", "sample_time"], [229, 2, 1, "", "t_decay"], [229, 2, 1, "", "t_ref"], [229, 2, 1, "", "t_rise"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "time_sum"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 3, 1, "", "from_table"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "parameters"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "read"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference_time"], [230, 3, 1, "", "sample_time"], [230, 2, 1, "", "t_ref"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "time_sum"], [230, 3, 1, "", "to_dict"], [230, 3, 1, "", "to_table"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"], [230, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "alpha"], [231, 2, 1, "", "beta"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "parameters"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference_time"], [231, 3, 1, "", "sample_time"], [231, 2, 1, "", "t_ref"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "time_sum"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[232, 3, 1, "", "__call__"], [232, 2, 1, "", "alpha"], [232, 2, 1, "", "beta"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "energy_flux"], [232, 3, 1, "", "energy_flux_error"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_error"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_log10"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integral"], [232, 3, 1, "", "integral_error"], [232, 3, 1, "", "inverse"], [232, 3, 1, "", "inverse_all"], [232, 2, 1, "", "is_norm_spectral_model"], [232, 2, 1, "", "norm"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "pivot_energy"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference"], [232, 3, 1, "", "reference_fluxes"], [232, 3, 1, "", "spectral_index"], [232, 3, 1, "", "spectral_index_error"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "alpha"], [233, 2, 1, "", "amplitude"], [233, 2, 1, "", "beta"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "e_peak"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_log10"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "coefficients"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "norm"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[236, 3, 1, "", "create"], [236, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 2, 1, "", "parameters"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[238, 3, 1, "", "append"], [238, 3, 1, "", "clear"], [238, 3, 1, "", "copy"], [238, 3, 1, "", "count"], [238, 2, 1, "", "covariance"], [238, 3, 1, "", "extend"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_yaml"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "index"], [238, 3, 1, "", "insert"], [238, 2, 1, "", "names"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "plot_positions"], [238, 3, 1, "", "plot_regions"], [238, 3, 1, "", "pop"], [238, 2, 1, "", "positions"], [238, 3, 1, "", "read"], [238, 3, 1, "", "read_covariance"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "remove"], [238, 3, 1, "", "restore_status"], [238, 3, 1, "", "reverse"], [238, 3, 1, "", "select"], [238, 3, 1, "", "select_from_geom"], [238, 3, 1, "", "select_mask"], [238, 3, 1, "", "select_region"], [238, 3, 1, "", "selection_mask"], [238, 3, 1, "", "set_parameters_bounds"], [238, 3, 1, "", "set_prior"], [238, 3, 1, "", "to_dict"], [238, 3, 1, "", "to_parameters_table"], [238, 3, 1, "", "to_regions"], [238, 3, 1, "", "to_template_sky_model"], [238, 3, 1, "", "to_template_spectral_model"], [238, 3, 1, "", "to_yaml"], [238, 3, 1, "", "unfreeze"], [238, 3, 1, "", "update_link_label"], [238, 3, 1, "", "update_parameters_from_table"], [238, 2, 1, "", "wcs_geom"], [238, 3, 1, "", "write"], [238, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 2, 1, "", "include_ssc"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "particle_distribution"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 3, 1, "", "reference_fluxes"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 2, 1, "", "ssc_model"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "coords"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_geom"], [240, 2, 1, "", "evaluation_bin_size_min"], [240, 2, 1, "", "evaluation_radius"], [240, 2, 1, "", "evaluation_region"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 3, 1, "", "from_position"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integrate_geom"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "norms"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "phi_0"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "plot_grid"], [240, 3, 1, "", "plot_interactive"], [240, 3, 1, "", "plot_position_error"], [240, 2, 1, "", "position"], [240, 2, 1, "", "position_error"], [240, 2, 1, "", "position_lonlat"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 2, 1, "", "energy"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "norms"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "reference_fluxes"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate_geom"], [242, 2, 1, "", "evaluation_bin_size_min"], [242, 2, 1, "", "evaluation_radius"], [242, 2, 1, "", "evaluation_region"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_position"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integrate_geom"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "lat_0"], [242, 2, 1, "", "lon_0"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "phi_0"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "plot_grid"], [242, 3, 1, "", "plot_interactive"], [242, 3, 1, "", "plot_position_error"], [242, 2, 1, "", "position"], [242, 2, 1, "", "position_error"], [242, 2, 1, "", "position_lonlat"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 3, 1, "", "to_region"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "amplitude"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 2, 1, "", "emax"], [243, 2, 1, "", "emin"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "evaluate_integral"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 2, 1, "", "index"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_energy_flux"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "evaluate_integral"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "norm"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 2, 1, "", "tilt"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "amplitude"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_energy_flux"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "evaluate_integral"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 2, 1, "", "index"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[246, 3, 1, "", "__call__"], [246, 2, 1, "", "alpha"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 2, 1, "", "is_energy_dependent"], [246, 2, 1, "", "parameters"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference_time"], [246, 3, 1, "", "sample_time"], [246, 2, 1, "", "t0"], [246, 2, 1, "", "t_ref"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "time_sum"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ScaleSpectralModel": [[249, 3, 1, "", "__call__"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "norm"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[250, 3, 1, "", "__call__"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 2, 1, "", "eta"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "evaluate_geom"], [250, 2, 1, "", "evaluation_bin_size_min"], [250, 2, 1, "", "evaluation_radius"], [250, 2, 1, "", "evaluation_region"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 3, 1, "", "from_position"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integrate_geom"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "lat_0"], [250, 2, 1, "", "lon_0"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "phi_0"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "plot_grid"], [250, 3, 1, "", "plot_interactive"], [250, 3, 1, "", "plot_position_error"], [250, 2, 1, "", "position"], [250, 2, 1, "", "position_error"], [250, 2, 1, "", "position_lonlat"], [250, 2, 1, "", "r_0"], [250, 2, 1, "", "r_in"], [250, 3, 1, "", "reassign"], [250, 2, 1, "", "tag"], [250, 3, 1, "", "to_dict"], [250, 3, 1, "", "to_region"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_geom"], [251, 2, 1, "", "evaluation_bin_size_min"], [251, 2, 1, "", "evaluation_radius"], [251, 2, 1, "", "evaluation_region"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 3, 1, "", "from_position"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integrate_geom"], [251, 2, 1, "", "is_energy_dependent"], [251, 2, 1, "", "lat_0"], [251, 2, 1, "", "lon_0"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "phi_0"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "plot_grid"], [251, 3, 1, "", "plot_interactive"], [251, 3, 1, "", "plot_position_error"], [251, 2, 1, "", "position"], [251, 2, 1, "", "position_error"], [251, 2, 1, "", "position_lonlat"], [251, 2, 1, "", "radius"], [251, 3, 1, "", "reassign"], [251, 2, 1, "", "tag"], [251, 3, 1, "", "to_dict"], [251, 3, 1, "", "to_region"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"], [251, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[252, 3, 1, "", "__call__"], [252, 2, 1, "", "amp"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "integral"], [252, 2, 1, "", "is_energy_dependent"], [252, 2, 1, "", "omega"], [252, 2, 1, "", "parameters"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "reference_time"], [252, 3, 1, "", "sample_time"], [252, 2, 1, "", "t_ref"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "time_sum"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "contributes"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 3, 1, "", "create"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_geom"], [253, 2, 1, "", "evaluation_bin_size_min"], [253, 2, 1, "", "evaluation_radius"], [253, 2, 1, "", "evaluation_region"], [253, 2, 1, "", "frame"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integrate_geom"], [253, 2, 1, "", "name"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "position"], [253, 2, 1, "", "position_lonlat"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "spatial_model"], [253, 2, 1, "", "spectral_model"], [253, 2, 1, "", "tag"], [253, 2, 1, "", "temporal_model"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "amplitude"], [254, 2, 1, "", "beta"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 2, 1, "", "ebreak"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 2, 1, "", "index1"], [254, 2, 1, "", "index2"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[257, 3, 1, "", "__call__"], [257, 2, 1, "", "amplitude"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 2, 1, "", "ecut"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 2, 1, "", "index_1"], [257, 2, 1, "", "index_2"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "reference"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "amplitude"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_error"], [258, 2, 1, "", "expfactor"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "index_1"], [258, 2, 1, "", "index_2"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "reference"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "amplitude"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_error"], [259, 2, 1, "", "expfactor"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "index_1"], [259, 2, 1, "", "index_2"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_geom"], [261, 2, 1, "", "evaluation_bin_size_min"], [261, 2, 1, "", "evaluation_radius"], [261, 2, 1, "", "evaluation_region"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 3, 1, "", "from_position"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integrate_geom"], [261, 2, 1, "", "is_energy_dependent"], [261, 2, 1, "", "map"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "phi_0"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "plot_grid"], [261, 3, 1, "", "plot_interactive"], [261, 3, 1, "", "plot_position_error"], [261, 2, 1, "", "position"], [261, 2, 1, "", "position_error"], [261, 2, 1, "", "position_lonlat"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"], [261, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "energy_flux"], [262, 3, 1, "", "energy_flux_error"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_error"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integral"], [262, 3, 1, "", "integral_error"], [262, 3, 1, "", "inverse"], [262, 3, 1, "", "inverse_all"], [262, 2, 1, "", "is_norm_spectral_model"], [262, 2, 1, "", "map"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "pivot_energy"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_error"], [262, 3, 1, "", "reassign"], [262, 3, 1, "", "reference_fluxes"], [262, 3, 1, "", "spectral_index"], [262, 3, 1, "", "spectral_index_error"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"], [262, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 3, 1, "", "cutout"], [263, 2, 1, "", "default_parameters"], [263, 2, 1, "", "energy_center"], [263, 3, 1, "", "evaluate"], [263, 2, 1, "", "evaluation_radius"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 2, 1, "", "map"], [263, 2, 1, "", "name"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "position"], [263, 3, 1, "", "reassign"], [263, 3, 1, "", "slice_by_energy"], [263, 2, 1, "", "spectral_model"], [263, 3, 1, "", "stack"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"], [263, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "evaluate"], [264, 2, 1, "", "f0"], [264, 2, 1, "", "f1"], [264, 2, 1, "", "f2"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integral"], [264, 2, 1, "", "is_energy_dependent"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "phi_ref"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_phasogram"], [264, 3, 1, "", "read"], [264, 3, 1, "", "reassign"], [264, 2, 1, "", "reference_time"], [264, 3, 1, "", "sample_time"], [264, 2, 1, "", "t_ref"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "time_sum"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"], [264, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_geom"], [265, 2, 1, "", "evaluation_bin_size_min"], [265, 2, 1, "", "evaluation_radius"], [265, 2, 1, "", "evaluation_region"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 3, 1, "", "from_position"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integrate_geom"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "lat_0"], [265, 2, 1, "", "lon_0"], [265, 2, 1, "", "map"], [265, 2, 1, "", "map_center"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "phi_0"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "plot_grid"], [265, 3, 1, "", "plot_interactive"], [265, 3, 1, "", "plot_position_error"], [265, 2, 1, "", "position"], [265, 2, 1, "", "position_error"], [265, 2, 1, "", "position_lonlat"], [265, 3, 1, "", "read"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 3, 1, "", "to_region"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"], [265, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "energy_flux"], [266, 3, 1, "", "energy_flux_error"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_error"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 3, 1, "", "from_region_map"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 3, 1, "", "integral_error"], [266, 3, 1, "", "inverse"], [266, 3, 1, "", "inverse_all"], [266, 2, 1, "", "is_norm_spectral_model"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "pivot_energy"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "read_xspec_model"], [266, 3, 1, "", "reassign"], [266, 3, 1, "", "reference_fluxes"], [266, 3, 1, "", "spectral_index"], [266, 3, 1, "", "spectral_index_error"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integral"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "parameters"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "reference_time"], [267, 3, 1, "", "sample_time"], [267, 3, 1, "", "time_sum"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[274, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[277, 1, 1, "", "CashCountsStatistic"], [278, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [279, 1, 1, "", "WStatCountsStatistic"], [280, 4, 1, "", "cash"], [281, 4, 1, "", "cash_sum_cython"], [282, 4, 1, "", "compute_chisq"], [283, 4, 1, "", "compute_flux_doubling"], [284, 4, 1, "", "compute_fpp"], [285, 4, 1, "", "compute_fvar"], [286, 4, 1, "", "cstat"], [287, 4, 1, "", "f_cash_root_cython"], [288, 4, 1, "", "get_wstat_gof_terms"], [289, 4, 1, "", "get_wstat_mu_bkg"], [290, 4, 1, "", "norm_bounds_cython"], [291, 4, 1, "", "structure_function"], [292, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[277, 3, 1, "", "compute_errn"], [277, 3, 1, "", "compute_errp"], [277, 3, 1, "", "compute_upper_limit"], [277, 2, 1, "", "error"], [277, 3, 1, "", "info_dict"], [277, 2, 1, "", "n_bkg"], [277, 2, 1, "", "n_sig"], [277, 3, 1, "", "n_sig_matching_significance"], [277, 2, 1, "", "p_value"], [277, 2, 1, "", "sqrt_ts"], [277, 2, 1, "", "stat_max"], [277, 2, 1, "", "stat_null"], [277, 3, 1, "", "sum"], [277, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[279, 3, 1, "", "compute_errn"], [279, 3, 1, "", "compute_errp"], [279, 3, 1, "", "compute_upper_limit"], [279, 2, 1, "", "error"], [279, 3, 1, "", "info_dict"], [279, 2, 1, "", "n_bkg"], [279, 2, 1, "", "n_sig"], [279, 3, 1, "", "n_sig_matching_significance"], [279, 2, 1, "", "p_value"], [279, 2, 1, "", "sqrt_ts"], [279, 2, 1, "", "stat_max"], [279, 2, 1, "", "stat_null"], [279, 3, 1, "", "sum"], [279, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[293, 4, 1, "", "hierarchical_clustering"], [294, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[295, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [296, 4, 1, "", "cartesian"], [297, 4, 1, "", "fov_to_sky"], [298, 4, 1, "", "galactic"], [299, 4, 1, "", "motion_since_birth"], [300, 4, 1, "", "polar"], [301, 4, 1, "", "sky_to_fov"], [302, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[303, 1, 1, "", "HDULocation"], [304, 1, 1, "", "LazyFitsData"], [305, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[303, 3, 1, "", "get_hdu"], [303, 3, 1, "", "info"], [303, 3, 1, "", "load"], [303, 3, 1, "", "path"]], "gammapy.utils.integrate": [[306, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[307, 1, 1, "", "ScaledRegularGridInterpolator"], [308, 4, 1, "", "interpolate_profile"], [309, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[307, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[310, 5, 1, "", "BACKEND_DEFAULT"], [311, 5, 1, "", "METHOD_DEFAULT"], [312, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [313, 5, 1, "", "N_JOBS_DEFAULT"], [314, 5, 1, "", "POOL_KWARGS_DEFAULT"], [315, 1, 1, "", "multiprocessing_manager"], [316, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[317, 1, 1, "", "InverseCDFSampler"], [318, 4, 1, "", "draw"], [319, 4, 1, "", "get_random_state"], [320, 4, 1, "", "normalize"], [321, 4, 1, "", "pdf"], [322, 4, 1, "", "sample_powerlaw"], [323, 4, 1, "", "sample_sphere"], [324, 4, 1, "", "sample_sphere_distance"], [325, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[317, 3, 1, "", "sample"], [317, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[326, 4, 1, "", "compound_region_to_regions"], [327, 4, 1, "", "make_concentric_annulus_sky_regions"], [328, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [329, 4, 1, "", "region_to_frame"], [330, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[331, 4, 1, "", "get_images_paths"], [332, 4, 1, "", "make_path"], [333, 4, 1, "", "read_yaml"], [334, 4, 1, "", "recursive_merge_dicts"], [335, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[336, 4, 1, "", "hstack_columns"], [337, 4, 1, "", "table_row_to_dict"], [338, 4, 1, "", "table_standardise_units_copy"], [339, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[340, 1, 1, "", "Checker"], [341, 4, 1, "", "assert_quantity_allclose"], [342, 4, 1, "", "assert_skycoord_allclose"], [343, 4, 1, "", "assert_time_allclose"], [344, 4, 1, "", "mpl_plot_check"], [345, 4, 1, "", "requires_data"], [346, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[340, 3, 1, "", "run"]], "gammapy.utils.time": [[347, 4, 1, "", "absolute_time"], [348, 4, 1, "", "time_ref_from_dict"], [349, 4, 1, "", "time_ref_to_dict"], [350, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[351, 4, 1, "", "standardise_unit"], [352, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[353, 1, 1, "", "MapPanelPlotter"], [354, 4, 1, "", "add_colorbar"], [355, 4, 1, "", "annotate_heatmap"], [356, 4, 1, "", "colormap_hess"], [357, 4, 1, "", "colormap_milagro"], [358, 4, 1, "", "plot_contour_line"], [359, 4, 1, "", "plot_distribution"], [360, 4, 1, "", "plot_heatmap"], [361, 4, 1, "", "plot_map_rgb"], [362, 4, 1, "", "plot_npred_signal"], [363, 4, 1, "", "plot_spectrum_datasets_off_regions"], [364, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[353, 3, 1, "", "plot"], [353, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 66, 80, 81, 82, 84, 85, 88, 89, 92, 97, 98, 99, 100, 101, 102, 105, 106, 107, 120, 121, 126, 129, 134, 135, 139, 140, 141, 145, 165, 192, 198, 210, 214, 215, 220, 222, 223, 226, 227, 229, 230, 231, 233, 236, 238, 239, 243, 245, 246, 252, 253, 254, 257, 258, 259, 264, 267, 268, 269, 275, 285, 303, 351, 355, 356, 363, 366, 367, 369, 371, 376, 377, 378, 380, 382, 383, 384, 385, 386, 389, 392, 395, 396, 398, 399, 401, 402, 403, 404, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 480, 482, 485, 486, 492, 493, 494, 495, 497, 498, 500, 505, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 564], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 66, 70, 73, 81, 83, 85, 86, 87, 88, 91, 93, 99, 100, 102, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 119, 121, 122, 123, 124, 126, 128, 129, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 160, 162, 165, 168, 169, 173, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 206, 208, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 273, 275, 277, 278, 279, 280, 283, 284, 285, 286, 293, 294, 313, 317, 324, 325, 343, 354, 356, 357, 361, 363, 366, 367, 369, 370, 373, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 399, 402, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 492, 494, 498, 502, 504, 507, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 563], "00": [66, 85, 86, 87, 88, 98, 189, 367, 381, 434, 435, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 451, 452, 454, 455, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 479, 481, 483, 484, 485, 486, 487, 515, 525, 545, 546, 556, 564], "000": [66, 85, 86, 88, 121, 381, 437, 439, 440, 442, 447, 448, 449, 451, 452, 455, 458, 459, 463, 464, 468, 470, 471, 476, 483, 484, 486, 515], "0000": 392, "000000": 463, "000000000000002": 468, "00000000000001": 442, "00000000000003": 460, "00000000000004": 463, "0000000000016": 84, "0000000000018": 91, "000000000002": 451, "000000000006": 451, "000000000007": 463, "00000000001": 463, "00000000e": [465, 466], "00000001": 84, "0000000e": 466, "00000143": [367, 564], "0000e": [98, 436, 439, 440, 441, 442, 444, 447, 455, 459, 465, 471, 485, 545], "0001": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 357, 449], "00010298": 464, "000150": 437, "0002": [437, 486], "00020": 437, "0002000": 437, "0003": 449, "00050": 437, "000500": 437, "0006": 437, "00074287037": [91, 452], "000742870370370241": 91, "0008": 463, "0009": 437, "000e": [439, 442, 448, 455, 459, 463, 471, 486, 545], "000true": 437, "001": [50, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 185, 186, 188, 194, 197, 198, 343, 451, 465, 523], "0016288e": 466, "001e": 66, "002018": 476, "0025508e": 466, "0028272e": 466, "0029": 391, "0029490222317034775": 484, "002e": 66, "003": [460, 470, 476], "003026327991562108": 448, "003131946268913696": 484, "0033": 562, "0036925550381217": 442, "00375698": 230, "004": 66, "00422666667": 456, "00449161": 235, "00490": 449, "00490483": 449, "0049409": 475, "005": 463, "00521472221220211": 448, "005914854792576181": 450, "0064830e": 466, "00688029": 230, "007": 463, "0076540e": 466, "008": [463, 561], "008164325487530225": 450, "008898002182656187": 450, "00894": 486, "009": 463, "00931e": 435, "009431203058496632": 450, "00e": [81, 435, 440, 451, 455, 459, 460, 464, 466, 467, 476, 484], "01": [39, 52, 73, 81, 85, 86, 88, 91, 99, 102, 106, 107, 109, 123, 129, 168, 169, 173, 183, 184, 189, 193, 196, 217, 223, 227, 229, 231, 246, 252, 367, 402, 434, 435, 439, 441, 443, 444, 447, 448, 451, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 477, 478, 484, 485, 486, 487, 492, 497, 507, 509, 510, 513, 517, 519, 521, 525, 543, 544, 546, 548, 549, 550, 556, 561, 564], "010": 470, "010e": 66, "011": 470, "011872336272724": 484, "012": 470, "0122385e": 466, "01235137e": 466, "012733796525585": 472, "013": 447, "0139252e": 466, "014": [83, 99, 102, 106, 107, 165, 440, 463, 467, 484, 485, 509], "0143724": 230, "0143764": 475, "01449": 81, "0145": 469, "01450": [457, 485], "0149044e": 466, "015": 463, "01551196351647377": 230, "0164": 449, "01648855015875024": 560, "016600": 539, "01700709977114979": 456, "017442925431194484": 456, "018": 66, "018182745349064267": 448, "0183519e": 466, "01960784313726": 453, "019899368286133": 448, "01e": [165, 402, 435, 463], "01t00": [85, 88, 91, 189, 367, 443, 451, 564], "01t01": 88, "01t02": 88, "02": [16, 66, 81, 91, 99, 102, 106, 107, 108, 112, 153, 160, 165, 183, 184, 185, 186, 188, 190, 193, 194, 195, 196, 197, 198, 402, 434, 435, 437, 439, 440, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 474, 476, 481, 484, 485, 486, 507, 509, 510, 517, 518, 519], "020": [448, 463], "020420144596410953": 472, "020702": 544, "021": [66, 463], "0225e": 463, "02288737": 230, "023": 463, "023473560586078527": 484, "023e": 443, "024": 463, "02432": 463, "024551293715163": 484, "024e": 486, "025": [463, 476], "0251191219844263": 449, "025e": 135, "026": [53, 66, 463], "026525": 532, "02653": [443, 449], "026891": 463, "026914": 463, "027": [66, 446], "0277e": 455, "028": [439, 455], "028854": 469, "029e": 463, "02e": 81, "02t23": 84, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 66, 85, 87, 88, 195, 379, 394, 434, 435, 437, 448, 449, 451, 454, 455, 459, 463, 466, 468, 470, 472, 473, 474, 478, 479, 485, 520], "032": 463, "0322": 66, "0322775e": 466, "033": [66, 463], "033176650892097": 93, "03383": 475, "034": 561, "0344": 66, "034e": 437, "0354700e": 466, "0356": 435, "0356551": 435, "036": 66, "036e": 463, "037": [434, 470, 487], "03745318352059925": 554, "0375512e": 466, "0376213e": 466, "039": [447, 448], "039215686274545": 453, "03921700077803329": 448, "0395135e": 466, "03978226e": 471, "04": [30, 66, 91, 434, 438, 440, 442, 443, 445, 448, 451, 459, 460, 463, 466, 468, 471, 474, 475, 476], "040882": 523, "041": 476, "0415": 486, "041882": 463, "042": 463, "0423761": 435, "042e": 463, "043": 66, "04357249662280083": 439, "044": 440, "04454": 476, "0447": 443, "044e": 455, "0454683": 475, "046": 66, "0462798e": 466, "047": 66, "0473174": 235, "0474750e": 466, "047e": 455, "048": [447, 476], "0482342e": 466, "04897634344908595": 93, "048e": 66, "049": [437, 447], "04939e": 435, "049676": 463, "04d": 451, "04e": 467, "04t15": 84, "04t22": 84, "05": [19, 20, 26, 29, 42, 66, 70, 85, 88, 101, 118, 119, 120, 121, 128, 196, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 327, 394, 434, 435, 436, 437, 438, 439, 440, 443, 446, 447, 448, 449, 452, 455, 458, 462, 463, 464, 465, 466, 467, 470, 471, 473, 475, 477, 479, 484, 485, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "050": 470, "05019": 135, "0503641": 435, "0505949e": 466, "05075": 466, "0508075688763": 463, "05088486522436142": 439, "051": [19, 20, 26, 470], "051c": [17, 21, 22, 24, 25, 27], "052": 463, "0520119e": 466, "0521842481248": 450, "05227": 463, "053": 447, "053212009682775": 472, "054833602905273e": 448, "05487060546875": 439, "0548e": 448, "054e": 66, "055": 463, "055574": 554, "055e": 437, "0560": 486, "056130": 463, "05628243": 486, "05637e": 435, "05673": 486, "057": 463, "05762513693893088": 448, "058": 66, "058201": 463, "05853": 443, "058823529411775": 453, "058e": 443, "059": 66, "05901956e": 466, "0598579": 435, "05deg": 196, "06": [139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 196, 197, 198, 434, 447, 448, 449, 454, 461, 463, 464, 465, 466, 467, 468, 474, 476, 479, 484, 546], "061": [440, 486], "062": [438, 451, 470, 471, 476], "0625": 471, "0628": 486, "063": 66, "0631757e": 466, "06334488877417636": 472, "064108e": 463, "06430": 449, "0643032": 449, "06450": 135, "065": [434, 474], "065071": 463, "065119": 486, "06549": 135, "066": 439, "066442": 463, "0674": 443, "068245": 463, "0689": 465, "068e": 437, "069": 66, "07": [99, 165, 341, 381, 402, 434, 437, 438, 440, 447, 449, 458, 460, 461, 463, 464, 466, 468, 470, 476, 479, 487], "070": [434, 546], "07022": 135, "070483": 463, "070e": 443, "0711412": 435, "072": 66, "073": 66, "0739282e": 466, "074": [463, 476], "074194": 537, "07454639": 449, "07455": 449, "0746": 486, "0748": [463, 486], "075": 66, "07512322002655547": 448, "0756e": 435, "076": 486, "077": 435, "078": 437, "07843137254903": 453, "07943648658692837": 472, "07944657408": 463, "079464e": 486, "0799109224230051": 472, "07e": 460, "08": [84, 101, 120, 361, 402, 434, 441, 442, 444, 445, 447, 448, 455, 463, 464, 465, 467, 471, 474, 476, 484, 485, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "080": 439, "0800792e": 466, "08075": 466, "08081469527619482": 442, "08088": [171, 467], "081": 439, "0811551760882139": 472, "08142": 462, "08191603310406206": 472, "08192": 449, "08192101": 449, "082": 463, "082691868487906": 456, "08269984": 486, "082e": 121, "083": [66, 463], "08328557573258877": 472, "0833333358168602": 439, "0833333432674408": 439, "08342": 135, "08388624433428049": 472, "084": [66, 440], "08447355125099419": 472, "0845515": 435, "085": 463, "08529426": 94, "0855013383552432": 472, "0858e": 455, "08675": 464, "086e": 463, "087": 486, "08795162606984375": 472, "087e": 463, "088742": 463, "08880368117243051": 472, "08894569035619496": 472, "089": 130, "0894640e": 466, "0897868126630783": 472, "089881": 463, "08e": [455, 470], "09": [33, 121, 165, 440, 443, 445, 447, 463, 464, 466, 467, 484, 485, 486, 562], "090": 440, "0902437e": 466, "0907128e": 466, "0910": [244, 245], "0914": [52, 53], "091e": 455, "092": 439, "093": [434, 454, 455], "093477": 449, "09348": 449, "09426693227142095": 472, "094834": 463, "095232": 463, "09562941": 486, "095707": 486, "096": [440, 455], "0960": 486, "09607": 486, "09610314778983592": 472, "09623312838375568": 472, "09740295372903346": 472, "097e": 66, "09805": 135, "098903": 463, "09907043184188653": 472, "099e": 459, "09e": [455, 467, 476], "0b100": 313, "0d": [123, 453, 464, 521], "0e": [389, 440, 442, 444, 448, 451, 455, 459, 464, 466, 468, 470, 471, 476, 484, 516, 517, 518, 519, 521, 522, 523, 524, 527, 528, 530, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "0f": [465, 476, 486], "0rc": 395, "0rc1": 395, "0true": 449, "0x105fd0cf8": 366, "0x105fe3b70": 366, "0x129602550": 366, "0x7f9bdaca5e20": 464, "0x7f9bdacb74f0": 464, "0x7f9bdacb7ca0": 464, "0x7f9bec4fc0a0": 464, "0x7f9bec4fcc40": 472, "0x7f9bec501ac0": 473, "0x7f9bee368040": 475, "0x7f9bee3b5be0": 475, "0x7f9bee7553d0": 472, "0x7f9bee755e20": 472, "0x7f9bef35f9d0": 456, "0x7f9bef6dbac0": 472, "0x7f9bef799ca0": 475, "0x7f9bef7b1430": 475, "0x7f9befbfa340": 453, "0x7f9befbfa4c0": 453, "0x7f9c24ce1fd0": 471, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 62, 65, 66, 70, 71, 72, 73, 76, 81, 84, 85, 86, 88, 92, 93, 98, 99, 101, 102, 106, 107, 108, 111, 112, 113, 114, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 160, 165, 168, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 203, 206, 208, 210, 211, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 241, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 264, 265, 266, 267, 268, 269, 275, 277, 278, 279, 283, 284, 293, 294, 306, 307, 313, 314, 315, 324, 325, 327, 328, 351, 353, 356, 357, 361, 363, 366, 367, 369, 370, 373, 374, 376, 377, 378, 380, 381, 383, 386, 388, 389, 390, 391, 392, 393, 395, 396, 399, 402, 403, 406, 407, 409, 410, 414, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 481, 484, 485, 486, 488, 492, 493, 494, 497, 498, 500, 502, 503, 504, 505, 506, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 561, 562, 563], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 65, 66, 84, 85, 86, 87, 88, 99, 100, 102, 105, 106, 107, 108, 112, 114, 118, 119, 121, 122, 123, 127, 128, 129, 134, 135, 136, 139, 140, 142, 144, 146, 152, 153, 154, 155, 156, 158, 165, 171, 184, 185, 186, 188, 190, 193, 194, 195, 196, 197, 198, 203, 206, 208, 217, 220, 232, 233, 235, 236, 257, 269, 284, 313, 315, 325, 354, 359, 361, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 388, 389, 390, 394, 396, 402, 407, 409, 420, 422, 425, 429, 431, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 488, 494, 498, 504, 507, 509, 510, 511, 512, 522, 523, 526, 528, 531, 532, 534, 535, 536, 537, 539, 540, 542, 543, 544, 548, 549, 550, 560, 561, 564], "100": [19, 20, 26, 46, 47, 72, 91, 121, 129, 144, 145, 155, 196, 198, 210, 211, 214, 215, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 269, 271, 325, 366, 367, 369, 374, 385, 405, 435, 436, 439, 442, 447, 448, 449, 451, 452, 453, 455, 456, 460, 462, 463, 464, 466, 467, 468, 471, 473, 475, 476, 477, 486, 490, 492, 493, 494, 498, 509, 512, 513, 516, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 561], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 186, 191, 366, 369, 437, 463, 464, 466, 473, 476, 486, 512], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 100, 105, 144, 155, 158, 168, 463, 476], "100000": [72, 463, 484], "1000000": [51, 52, 54, 463, 545], "10000000": 545, "1001": [424, 451, 452], "1002": 424, "10041": 134, "10045": [64, 259, 544], "10049": 435, "1006": 424, "101": [410, 460, 463], "1012": 462, "1013": 425, "1014": 425, "101430": 460, "10172": 471, "102": [165, 443, 561, 562], "1021": 425, "1025": 425, "1026": 425, "10262943822890519": [93, 472], "1027": 425, "102877228833871": 472, "1029": 425, "10295505": 486, "102e": 463, "103": [134, 405, 428], "103000133": 477, "1031": 425, "10317325958321796": 484, "1032": 425, "1034": 486, "1035": [425, 459], "10350021860740599": 440, "1036": 443, "1038": 425, "104": 449, "1040": 425, "10409": 449, "10409446": 449, "1043": 425, "104317": [99, 464, 470], "1044": 443, "1045": 425, "1046": 384, "10470702368766069": 472, "10477": 486, "105": [80, 439, 440, 478], "1051": [425, 459], "1052": 463, "1053": 425, "1054": 425, "1054498": 130, "1057": 425, "10592": 564, "105953": 486, "1061971e": 466, "106217": 81, "1062535e": 466, "1064": 463, "1065": 425, "1067": 425, "1069": 425, "107": [435, 468], "1070": [425, 486], "1072542e": 466, "1073": 425, "10752883769757363": 472, "1076": 425, "1078": 425, "107e": 463, "108": [422, 434, 556], "108034597491956e": 471, "108043": 447, "1082": 425, "1083": 425, "1084": 425, "1085": 425, "1085000": 447, "1086": 284, "1087": 425, "108750": 527, "1088": 425, "1089": 425, "109": [405, 442, 468], "1090": 425, "1092": [425, 443], "1093": [425, 443], "1098": 425, "1099306e": 466, "109e": 449, "10d": 453, "10e": [165, 463, 466], "10k": 186, "10th": [393, 404], "11": [66, 85, 88, 91, 121, 122, 126, 127, 206, 327, 370, 373, 375, 383, 390, 394, 405, 406, 427, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 449, 451, 452, 453, 455, 457, 458, 459, 460, 463, 464, 465, 467, 469, 470, 473, 474, 476, 484, 485, 486, 509, 511, 562], "110": [463, 476], "1100": 425, "110000": [464, 467], "1102": 425, "1102e": 436, "1103": 425, "110380": [81, 382, 444, 447, 449, 475], "1104": 425, "1105": 425, "1107": 425, "1108": 425, "111": [354, 373, 425, 447, 463], "1110": 425, "1111": [136, 463, 486], "111140": [382, 444, 447, 449], "111159": [382, 444, 447, 449, 475], "11132": 63, "1115": 425, "111507416": 460, "111630": [87, 460, 475], "111797": 463, "11184": [64, 258, 543], "112": 435, "11208": 64, "1127": 425, "11291820875721864": 472, "113": [434, 486, 556], "1131": 374, "1133": 425, "1134": 425, "1136": 425, "114": [434, 556], "114416978060046": 459, "1149": 464, "115": [66, 434, 556], "1150": 425, "11517": 486, "11553325504064559": [93, 472], "11587179071752986": 93, "116": 405, "1160": 463, "11610": 486, "1162": 425, "1166": 425, "1167": [373, 380], "1169": 425, "116e": 66, "117": [405, 434, 439, 526, 556], "1170": 425, "1172": 380, "1173775": 463, "1176": 425, "117877e": 463, "1179": 425, "118": [134, 447], "1183": 425, "118355": 463, "119": [443, 447], "1190": 425, "1193777560333226e": 457, "119432": 435, "1195": 425, "1195039600197": 459, "11af4c": 405, "11e": [445, 463], "12": [17, 38, 42, 66, 84, 85, 88, 99, 102, 109, 121, 135, 155, 158, 184, 185, 186, 188, 194, 197, 198, 210, 214, 220, 222, 226, 233, 243, 245, 254, 257, 258, 259, 269, 370, 372, 373, 374, 375, 377, 378, 383, 386, 389, 405, 409, 410, 411, 423, 428, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 463, 464, 465, 468, 470, 471, 473, 474, 476, 484, 486, 487, 498, 509, 512, 513, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 530, 533, 534, 537, 538, 539, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555], "120": [53, 381, 441, 476, 520], "120000": 444, "120154": 463, "1204": 425, "1207": 425, "120e": [66, 486], "121": [66, 449, 470], "1210": 425, "1211": [425, 463], "121241": 447, "12148": 443, "1215": 425, "1216": 436, "12186": 486, "1219": 463, "122": [66, 134, 405, 437, 470], "1220": 425, "1226": 425, "1227": 425, "12276676166802643": 472, "123": [85, 88, 378, 439, 443], "1231": 426, "1234": 86, "123456789": [189, 367, 564], "1235": 425, "1237": 374, "1238": 425, "123890826": 84, "123892513": 84, "1239": 371, "123944": 81, "124": [134, 378, 439, 443, 463, 470], "1240": 425, "12423250e": 466, "1243": 486, "1244969200533408": 294, "1246": 425, "12493874": 466, "124e": 66, "125": [66, 121, 134, 439, 449, 468, 476, 486, 561], "12518": 448, "12525306": 456, "12546": 64, "125e": 448, "126": [66, 437, 463, 465], "12611": 135, "1264500e": 466, "126585": 435, "1266": 425, "1268": 425, "12688": 81, "1269263e": 466, "12697": 448, "127": 443, "12704": [134, 135], "1271v": 285, "12751": 435, "1277": 372, "1278": 373, "12794487": 471, "128": [405, 434, 460, 488, 556], "12809": [99, 464, 470], "1281": 425, "12816": 486, "12856": 476, "1287": 425, "1289": 425, "128e": 437, "129": [431, 434, 556], "1290": 425, "1291": 425, "1294": 425, "1299": 463, "129e": 443, "12nan5": 437, "12r_": 53, "12th": [391, 404], "13": [66, 98, 121, 135, 195, 293, 370, 371, 375, 380, 385, 394, 410, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 494, 562], "130": 509, "1300": 425, "1301v": 38, "13030": 486, "1305": 425, "13061": 471, "131": [437, 449], "1310": 486, "1312": 425, "13133": 486, "13152": 449, "1316": 425, "1317": 426, "1318": 425, "1319": [91, 425], "13197": 447, "132": 443, "1321e": 448, "13226": 486, "1322e": 459, "132472": 449, "133": 135, "1331": 426, "1334": 426, "1337": 426, "1339": 426, "133e": [437, 443], "134": [135, 440, 443, 449], "1341": 426, "1342a": 145, "1343": 426, "1344": 463, "1345": 426, "1346": 426, "1347": 426, "135": [38, 98, 135, 437, 463, 465], "13500212963": 463, "13500566998758723": 450, "1351e": 463, "135249": 520, "1354": 426, "135498046875": 439, "1357": 426, "1359316": 486, "135e": 121, "136": 463, "1360": 426, "1361": 463, "1362": 426, "1367": 426, "1369": [374, 426], "137": [440, 443, 450], "1372": 426, "137254901960785": 453, "1373": 426, "1374": 426, "1376": 426, "1377": 426, "1378": 426, "1379190199428797": 294, "137990": 463, "137e": 443, "138": [405, 437, 451, 486], "1381": 426, "1386": 426, "1387": [426, 532], "138e": 449, "139": [439, 443, 476], "13911": 486, "1395": 426, "1396": [366, 440], "13960": 486, "1397": 426, "1397412321592923": 472, "13e": 464, "13nan6": 437, "13th": 404, "14": [28, 64, 66, 84, 367, 370, 375, 378, 383, 385, 386, 424, 434, 435, 437, 440, 443, 447, 460, 463, 464, 465, 467, 469, 470, 471, 474, 485, 486, 561], "140": [439, 477], "1401": 426, "1406": 426, "140779935183259e": 457, "14079": 134, "1408": [426, 486], "141": [292, 449, 463], "1411180": 447, "1412": 426, "14121": 449, "1412536400000000": 486, "14149953611195087": [93, 472], "14150": 449, "1419": [374, 427], "141945": 435, "142": [66, 405, 437, 463, 486], "14201": 134, "1421": 426, "14210": 437, "1426": 426, "142e": 463, "143": 443, "1432": 426, "1433": 426, "1435": 426, "1438": 168, "1438465e": 466, "1439110308062257": 472, "144": [434, 437, 470, 486, 525], "14419991": 94, "1442739329466746e": 471, "1443": 426, "1444": 426, "1445": 380, "14457": 486, "1446": 426, "1447": 426, "145": 463, "1451": 381, "14531053887243": 449, "1456": 426, "1456479e": 466, "145e": 455, "146": 486, "14610": 564, "146267": 517, "146472": 463, "1466": 459, "1467": 136, "14671140315352": 450, "147": [424, 463, 468], "1470": [426, 486], "1474": 426, "1475": 426, "1476": 426, "14773": 476, "147e": 463, "148": [439, 443], "1482": 463, "1485314": 94, "1486415e": 466, "1489": 426, "149": [439, 467, 470], "1491": 449, "1492": 426, "1494": 449, "1495": 426, "1496e": 444, "1499472780781963": 294, "149e": 463, "14e": [444, 462], "14msts37sst": [451, 452], "14nan3": 437, "14nan5": 437, "14th": [390, 393, 404], "14yr_catalog": 64, "15": [39, 42, 66, 85, 86, 88, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 195, 356, 357, 361, 375, 383, 405, 409, 414, 419, 422, 423, 424, 426, 434, 435, 438, 439, 440, 443, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 459, 460, 463, 465, 467, 468, 470, 471, 476, 486, 509, 517], "150": [127, 134, 135, 405, 437, 439, 451, 452, 468, 486], "1505": 426, "15076259": 94, "1508e": 459, "151": [405, 470], "1510": 130, "1510240e": 466, "15140": 443, "1515": 426, "15154854": 94, "151638": 535, "1517": 426, "152": [443, 449, 485], "1520": 488, "1521": 449, "15228678433255e": 484, "1523": 451, "15246": 451, "152477": 476, "1527": 426, "153": 463, "1530": 464, "15319": 451, "153600": 464, "154": [405, 435, 463], "1543": 426, "154e": 449, "155": [405, 434, 525], "15518": 486, "1552": 445, "1553": [463, 486], "1554": 426, "1554106e": 466, "1556": [426, 463, 486], "1556008e": 466, "1558": 426, "156": [405, 440, 443, 449, 470], "1562": 426, "15621": 486, "1564": 426, "156525": 463, "1567629e": 466, "1568": 426, "15686274509804": 453, "157": [405, 486], "1573": 426, "1576": 426, "158": [135, 435, 440, 447], "1582": 426, "1586": 91, "15899": 443, "1594": 426, "1597317": 94, "159t": 52, "15h14m00": 463, "15nan8": 437, "16": [16, 24, 53, 66, 91, 101, 106, 107, 120, 184, 370, 374, 383, 386, 387, 403, 410, 425, 430, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 511, 553, 561, 562], "160": [31, 121, 405, 414, 434, 453, 470, 525], "1600": 452, "1605": 426, "16056": 443, "160567": 547, "1606": 426, "1607": 462, "160e": 66, "161": [134, 374, 439, 449, 463], "1610e": 463, "161250": 455, "1613279491744304": 472, "1616": 426, "1618850e": 466, "1619e": 98, "162": 66, "16227766": 468, "1622776601683795": [467, 468, 484], "16240": 485, "16287": 486, "1629219e": 466, "163": [453, 561], "1630": [426, 486], "16303": 449, "16303044": 449, "1634": 426, "164": 463, "1642": 435, "165": 470, "1650": 486, "16506": 435, "16511": 449, "16511148": 449, "1658": 426, "166": [405, 449, 463], "1660": 426, "16650390625": 436, "1665478": 94, "167": [405, 449, 455], "167219": 463, "1675": 426, "167e": 443, "168": [463, 486], "1681": 426, "1685": 426, "1686": 463, "1687": 84, "168702": 435, "169": [439, 449], "169014": 455, "1691": 435, "1695": [426, 459], "1696": 426, "1697": 426, "1698": 535, "169871": 455, "16t21": [440, 471, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "16th": 404, "17": [20, 21, 40, 66, 84, 377, 380, 383, 414, 431, 435, 449, 453, 460, 463, 464, 465, 466, 467, 468, 470, 476, 477, 486, 562], "170": 436, "17016482e": 465, "1702": 426, "17020": 443, "1704": 535, "171": [434, 443, 474], "1710": 427, "1711": 426, "1713": 436, "1715": 380, "1717": 486, "171749": 486, "1719502": 94, "1719610": 94, "1719670": 94, "171b": 268, "172": 453, "17229679": 94, "173": 463, "1731": [426, 470], "1732": 463, "17320": 463, "1737799900000000": 486, "1742": 66, "17445": 486, "1746": [426, 486], "1748": [426, 470], "174e": 459, "175": [434, 449, 454, 459], "1750": 426, "1751": 426, "1753": 486, "1755": [426, 443], "1759": 426, "175e": 463, "176": [135, 405, 460, 463], "1760": 426, "1761": 426, "1762": 488, "1763": [427, 463], "1764": [426, 449], "176470588235294": 453, "1766": 427, "1768896e": 466, "177": [405, 476, 477], "17776": 435, "177e": 463, "178": 425, "178442": 66, "1785": [426, 435], "1791": 426, "179475": 235, "1799": 426, "17a": 463, "17e": 470, "17g": 50, "17th": 420, "18": [11, 85, 88, 134, 195, 370, 385, 391, 411, 417, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "180": [380, 398, 400, 405, 463, 468], "1800": [426, 452, 468, 475], "180000": [451, 452], "1804": 463, "180458": 447, "18046952655570045": 294, "1805": 380, "1807": 427, "1808": [426, 463, 486], "181": 443, "1811": 442, "1812": 426, "1813": 463, "1818": 426, "1821": 426, "1822": 426, "1825": 463, "18257": 443, "183": [439, 447], "1830e": 439, "183139597": 84, "1834": 436, "1835": 91, "1836": 427, "1836544903987521": 472, "1837": 427, "18385658": 449, "18386": 449, "18392464": 500, "184": [84, 91, 419, 423, 443, 451, 458, 469, 470], "18400002": 458, "1841": 375, "1845": 427, "1846": 427, "18465": 486, "1849": 427, "184989894219835": 456, "185": 469, "1854": [427, 463], "1855": 427, "1857": 427, "1859": 427, "186": [418, 449, 463], "1861": 427, "1862": [427, 459], "186484131475074": 325, "1866": 467, "186643": 486, "186e": 443, "187": [411, 418, 449], "1871": 427, "1877": 376, "188": [418, 435, 463], "188242": 551, "1883": 427, "1884": 427, "18842983819716610": 449, "1888": 427, "188e": 437, "189": 466, "1890": 427, "1891": 427, "18921591": 466, "1893": 427, "1893e": 463, "1894": 427, "1895": 427, "1898": 427, "18988": 486, "1899070e": 466, "18a": 61, "18h43m48": 66, "19": [51, 53, 54, 66, 195, 370, 382, 384, 386, 405, 413, 414, 416, 428, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "190": [440, 463], "1902": [64, 259, 544], "1903": 427, "1904": 427, "1905": 448, "1908": 427, "1909": 427, "191": [134, 418, 459], "1910": [171, 467], "1912": 427, "1917": 486, "1918": 427, "1919": 427, "1920": 486, "1921": 427, "19214093": 94, "1922": 427, "1926": 427, "1926520e": 466, "1927": 427, "1928": 463, "1929": 427, "193": [443, 476], "1930": 427, "1933": 427, "1934": 427, "19354": 449, "1936925": 94, "1937": [427, 463], "194": [418, 434, 439, 459, 525], "1943186": 94, "1947565": 94, "1949": 427, "195": 230, "1950rspsa": 52, "1951": 406, "1953830": 94, "1955810e": 466, "1958e": 465, "196": [66, 435, 470], "1960784313725492": 453, "1961": 136, "1962": 406, "1963": 463, "19646": 476, "1965tralm": 21, "1966": 406, "1969": 406, "196991563774588": 269, "197": [66, 449], "1971": 377, "19735897928723367": 450, "1975": 406, "1976572e": 466, "1978": 463, "1979": [280, 286, 406, 559], "1979892": 449, "1980": 463, "1982": 37, "1983": 559, "1986": 378, "1986027": 486, "1987": 449, "19879005": 168, "1988": 406, "1989": 406, "198e": 455, "199": [434, 449, 455, 470, 556], "1990": [37, 406], "1990apj": [36, 37], "1991": 406, "1991mnra": 22, "19932878": 466, "1994": [406, 559], "1994a": [52, 53], "1995": [405, 406], "1995a": 278, "1995apj": 17, "1996": [27, 443, 456, 559], "1996mnra": 27, "1997": 484, "1997apj": 25, "1998": [85, 88, 406, 559], "1998apj": 28, "1999": [53, 189, 367, 564], "19991": 484, "199999809265137": 463, "19999999999999998": 442, "1999apj": 53, "19e": 467, "19th": 404, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 106, 107, 123, 143, 144, 153, 167, 184, 186, 320, 359, 372, 376, 377, 379, 380, 381, 382, 385, 386, 387, 398, 408, 410, 411, 412, 413, 417, 419, 422, 426, 428, 429, 432, 434, 435, 436, 437, 438, 439, 441, 443, 447, 454, 459, 464, 465, 467, 469, 471, 472, 473, 475, 476, 484, 496, 498, 500, 505, 508, 513, 557, 559], "1dc": [80, 81, 87, 99, 102, 106, 107, 111, 113, 114, 118, 134, 135, 140, 144, 145, 146, 155, 354, 359, 361, 374, 376, 382, 386, 407, 435, 442, 444, 447, 449, 455, 459, 460, 464, 466, 470, 498], "1deg": 196, "1e": [19, 20, 26, 84, 97, 126, 127, 129, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 236, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 269, 280, 286, 327, 341, 343, 366, 377, 437, 439, 441, 443, 445, 447, 449, 451, 452, 455, 457, 459, 460, 463, 465, 471, 473, 476, 477, 494, 498, 502, 526, 527, 528, 530, 533, 534, 538, 539, 541, 542, 543, 544], "1e0": 492, "1e10": [51, 145], "1e11": 465, "1e12": [492, 502], "1e2": [437, 492, 494], "1e3": [476, 502], "1e30": 536, "1e4": [465, 476, 477], "1e40": 493, "1e5": [441, 476, 494, 512, 513], "1e51": 52, "1e6": [45, 476, 490, 545], "1e7": [123, 545], "1f": 440, "1fhl": [411, 424], "1fhl_name": 70, "1h": [122, 155], "1k": [99, 106], "1kpc": 494, "1lhaaso": [57, 69, 432, 463], "1lhaaso_catalog": 57, "1rc1": 395, "1tev": [52, 53, 127, 452], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 62, 66, 67, 70, 71, 72, 73, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 98, 99, 101, 102, 106, 107, 110, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 133, 135, 137, 138, 142, 143, 144, 145, 147, 153, 155, 158, 165, 168, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 206, 207, 208, 209, 210, 214, 218, 220, 222, 226, 228, 229, 233, 236, 243, 244, 245, 250, 251, 253, 254, 257, 258, 259, 264, 268, 269, 275, 277, 278, 279, 280, 285, 286, 291, 293, 313, 315, 351, 354, 359, 361, 363, 366, 367, 370, 371, 375, 377, 378, 380, 381, 382, 383, 386, 389, 390, 391, 392, 393, 395, 398, 400, 402, 405, 406, 407, 408, 409, 410, 417, 422, 423, 424, 425, 426, 427, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 484, 485, 486, 488, 494, 497, 498, 500, 505, 506, 507, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563], "20": [16, 38, 81, 85, 87, 88, 99, 102, 106, 107, 146, 147, 152, 154, 156, 165, 185, 186, 188, 194, 197, 198, 278, 293, 367, 370, 371, 372, 374, 379, 381, 384, 386, 391, 428, 434, 435, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 462, 463, 465, 467, 468, 470, 471, 473, 475, 478, 484, 485, 486, 488, 507, 509, 510, 511, 517, 518, 519, 522, 523, 532, 535, 540, 546, 561], "200": [52, 85, 88, 129, 196, 390, 418, 439, 440, 443, 449, 453, 455, 463, 468, 471, 486, 561], "2000": [86, 99, 102, 106, 107, 123, 223, 227, 229, 231, 246, 252, 406, 451, 452, 453, 467, 476, 486, 559], "2000000": 447, "20000000000000004": 442, "20009124": 466, "2000apj": 269, "2000e": 471, "2001": [91, 406, 443, 559], "2002": [85, 88, 284, 456], "2003": [285, 456], "2003mnra": 285, "2004": [84, 91, 456, 478], "2004a": [39, 40], "2004aph": [81, 86], "2004mnra": 24, "2005": [64, 559], "200503": 435, "2005a": 463, "2006": [31, 33, 381, 443, 450, 458], "200638": 486, "2006a": 269, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 114], "2007": [384, 559], "20072608": 466, "2008": [38, 84, 218, 266, 476, 488, 526], "2008aj": 38, "2009": [129, 287, 407, 443, 559], "20097159": 466, "2009851": 466, "20099855": 466, "201": [52, 434, 468, 525], "2010": [123, 145, 218, 235, 291, 367, 526, 559, 564], "2010a": [235, 269], "2010mnra": 145, "2011": [218, 488, 526], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [88, 407, 559], "2013": [130, 386, 392, 396, 405, 456], "20136": [80, 294, 478], "20137": [294, 478], "2013aph": 268, "2014": [136, 404, 488], "2015": [52, 84, 380, 383, 404, 476], "20151": 294, "2015apj": [60, 122], "2015jheap": 269, "2016": [26, 380, 383, 404, 407, 456, 467], "2016apj": 58, "2017": [218, 371, 373, 383, 386, 402, 404, 407, 449, 475, 526], "2017apj": [59, 61], "2017icrc": 475, "2018": [52, 371, 372, 373, 374, 375, 376, 377, 381, 383, 385, 386, 404, 431, 475, 478, 559], "2018a": 122, "2019": [373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 404, 426, 427, 450, 475, 559], "202": 449, "2020": [195, 375, 386, 387, 388, 389, 390, 404, 450, 451, 459, 468, 548, 549, 550], "2021": [87, 218, 388, 390, 404, 431, 471, 526], "2021345e": 466, "2022": [391, 392, 404, 407, 477], "2023": [378, 393, 394, 404, 407], "2023arxiv230517030c": 57, "2024": [101, 120, 403, 404, 440, 471, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "2024e": 485, "2026": [378, 407], "2027": 459, "2028": 407, "203": 439, "2030": [378, 407], "2031": 407, "20326": [293, 436], "20327": [293, 436], "2033": 407, "20339": 293, "2034": 407, "20343": 293, "20344": 293, "20345": 293, "20346": 293, "20349": 436, "2035": [119, 121, 407], "20350": 436, "2036": [119, 121], "2037": 407, "20372": 475, "2038": 407, "2039": 407, "20396": 436, "20397": 436, "204": 134, "2040469e": 466, "2041222e": 466, "20421": 436, "20422": 436, "2045": 378, "2046": 407, "2049": [407, 463, 486], "205": [418, 449, 468], "2050": 407, "20508075688775": 463, "2051": 407, "20517": 436, "20518": 436, "20519": 436, "205192": 463, "20521": 436, "2053315944536949e": 475, "205357": 463, "2054": 407, "20559": 486, "2058705e": 466, "206": [443, 459, 463], "2061": 463, "2062580e": 466, "2064": 407, "2064335": 94, "2065": 407, "2066": 407, "2068682e": 466, "2069": 407, "207": [449, 453, 470], "2071": [378, 407], "2075": 394, "207520865": 458, "207521465": 458, "2076": 407, "2077": 407, "2079930e": 466, "2085": 407, "2089": [380, 409], "20898": 436, "20899": 436, "209": 449, "20900": 436, "2093": 407, "2095": 449, "2097": [407, 435, 442, 444, 447, 449, 455, 459, 475], "2097e": 439, "2098": 407, "20deg": [451, 452], "20e": 466, "20th": 392, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 98, 101, 120, 123, 140, 369, 370, 414, 420, 429, 434, 435, 439, 442, 443, 445, 449, 458, 462, 463, 466, 468, 486, 487, 513, 561], "210": [418, 463], "2103": 463, "2104": 408, "2104353e": 466, "2106": 408, "2108": 408, "211": [434, 443, 446, 463, 464, 546], "2111": 408, "2112": [408, 485], "2114": 408, "2115": 408, "211770556360534": 460, "2118": 408, "2119": 408, "211e": [459, 463], "212": [66, 418, 439, 463], "2121": 408, "2121164e": 466, "2123": 408, "21236e": 435, "2124": 408, "2126": 408, "2128": 408, "2129": [380, 409], "213": [434, 441, 546], "2130": 408, "2131": [408, 463], "2132": 408, "21325": 476, "2133": 408, "2136": [379, 410], "2139": 408, "214": [434, 437, 443, 546], "2140": 408, "2141": 408, "2142": 408, "2145": 408, "2146": 408, "21464892": 486, "215": [66, 418, 432, 434, 463, 525], "21500000000003": 520, "2151": 408, "2152": 408, "21525376976022406": 450, "2153": [408, 463], "2154": [408, 463], "2155": [412, 456, 458, 459, 463, 472, 486, 526], "215686274509824": 453, "2157": 408, "2159e": 98, "215e": 463, "216": [230, 439, 440, 468, 470, 555], "2160": 408, "2162670e": 466, "2163": 408, "2164425e": 466, "2166": 408, "2169": 408, "217": [463, 546], "2171": 408, "21731921e": 468, "21733761e": 468, "21735587e": 468, "218": [60, 122, 434, 546], "2190": 384, "2192": 409, "21t19": 91, "21t20": 91, "22": [66, 81, 83, 86, 99, 102, 106, 107, 129, 160, 165, 168, 183, 184, 193, 196, 370, 404, 417, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 497, 504, 507, 509, 510, 513], "220": [447, 463, 470, 561, 562], "2200": 409, "2201": [64, 258, 463, 486, 543], "2202e": 486, "2204": 409, "2206": 409, "220e": 463, "221": [380, 418, 439], "22149": 443, "2217": 409, "2217412e": 466, "2218": [383, 410], "2219": [382, 410], "222": [58, 463, 470], "2221": 463, "22245374e": 121, "2227134679628": 459, "22271346796282": 459, "22271346796283": 459, "2229": [379, 409], "222e": 459, "223": 470, "2230": 409, "2231": 463, "2235": 409, "2237": [409, 486], "2238": 409, "2239": 409, "2240": 409, "2243": 409, "2244": 409, "224436": 486, "225": [93, 293, 294, 390, 418, 463], "2250": 409, "22500": 445, "2254": 409, "2255": [384, 472], "225575051666": 463, "2255890": [458, 472], "2257": 409, "2259": 409, "226": [449, 476], "22608": 464, "2262": 409, "22635140877790516": 465, "2264": [378, 409], "22646133647326874": 465, "2264827111476982": 465, "22648881839710966": 465, "2265163003209506": 465, "22662622801631419": 465, "227": 439, "2270": 383, "2272": 409, "2274": [385, 410, 435], "2275230625394": 459, "2276": 409, "2277": 409, "2278": 409, "2278975306934438": 465, "2279": [383, 410], "227e": 463, "228": [280, 286, 374, 380, 434, 439, 440, 445, 463, 467, 478, 546], "228159": 484, "2287": 409, "2289": 409, "229": [66, 463], "2290": 385, "2292": 410, "2294": 409, "2296": 409, "2297": 409, "22974080e": 476, "2298": 409, "22e": 467, "22nd": 404, "23": [91, 168, 366, 370, 392, 404, 428, 436, 441, 443, 459, 463, 465, 468, 470, 472, 479, 486, 509], "230": [418, 434, 443, 525, 546], "2300": 409, "2304": 384, "2305": 409, "230542e": 463, "2307": [63, 64], "2308": 410, "231": [418, 434, 546], "2310": 409, "2313": 410, "2314": 410, "232": [61, 434, 546], "2320": [410, 463, 464], "2321": 410, "2323": 410, "2326": 410, "2327": [463, 470], "23273": 476, "233": 440, "2330": 410, "23306": 443, "2332": 470, "2334": 410, "2335": 410, "2338": 410, "2339": [436, 463, 486], "234": [418, 460], "234132519034915": 468, "23413252": 468, "2342": 410, "2343": 410, "234359264373779": 467, "2343e": 470, "2344": 410, "2345": 410, "2346": 410, "2347": 410, "235": [418, 439], "2350": 411, "2351": 410, "23523": [138, 165, 402, 439, 440, 448, 457, 464, 465, 467, 478, 484, 485, 497, 500, 560], "23526": [138, 439, 440, 448, 457, 464, 465, 467, 478, 484, 485, 560], "235294117647083": 453, "2354": 410, "23559": [439, 440, 457, 464, 467, 484, 485, 507, 509, 510, 560], "2356": 410, "2357": 470, "2358": 410, "2359": 410, "23592": [439, 440, 457, 464, 467, 484, 485, 507, 509, 510, 560], "236": [418, 463], "2360": 410, "2362506e": 466, "23628": 476, "2365": 410, "2366": 410, "2367": 410, "2368": 410, "237": [434, 435, 454, 546], "23734": 486, "2375": 410, "2377": 410, "2378": 410, "2379": 410, "2381": 410, "238298": 435, "2384": 435, "2385": 410, "239": [66, 449], "23905561": 466, "239439": 486, "239557417": 84, "2399": 463, "239e": 463, "23a": [60, 122], "24": [25, 27, 52, 53, 84, 85, 88, 91, 369, 370, 383, 387, 421, 426, 435, 443, 459, 463, 464, 468, 470, 475, 476, 484, 509, 526, 533, 542, 543, 544], "240": [99, 102, 106, 107, 118, 463, 464, 498], "2400": 410, "2401": 410, "2401e": 441, "2404": 410, "2405": 411, "241": 463, "2412": 410, "2414": 463, "2419": 435, "242835": 66, "243": [434, 454], "2431": 463, "2433": 411, "2435": 411, "244": [66, 418, 439], "2440": 463, "2441": 411, "244140625": 470, "2443672e": 466, "2444": [411, 443], "2446": [411, 470], "2448": 411, "2449": 411, "245": [418, 440], "2450": [411, 470], "245152": 449, "2454": 411, "2455": 411, "2459": 411, "246": 418, "2461": 411, "24611324074": 463, "2463": [386, 411], "2464": 411, "2465055e": 466, "2468": 411, "24685677e": 466, "247": [66, 418, 434, 440, 546], "2470": 411, "2471938975366008": 293, "2472": 411, "2475": 411, "2476": 411, "2477": 411, "2478": 411, "2479": [411, 485], "248": 418, "2481": 411, "248122": 463, "2483": 411, "2485": 484, "2486": 411, "249": [22, 418], "2490": 411, "2491": 411, "2492": 411, "2493": 411, "2496": 411, "24968": 435, "2497": 411, "2498": 411, "2499": 411, "249965667724609": 467, "249e": 135, "24e": [463, 470], "25": [33, 52, 85, 88, 98, 134, 144, 155, 168, 280, 286, 370, 383, 390, 404, 425, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 518, 523], "250": [468, 559], "2501": 411, "250185": 467, "2502": [411, 449], "2505": 411, "2505121": 94, "2505703": 460, "2509": 463, "251": [443, 447], "2510": 411, "251185": 486, "2511884200000000": 486, "25162e": 435, "2518": 463, "251932": 463, "252": [418, 439, 449, 463], "2520": 411, "2521": 411, "2523": 411, "2525": 411, "2528": 411, "253": [442, 470], "2535": 411, "2536": [411, 470], "2537": 470, "2538": 411, "254": 418, "2540": 411, "2546": 411, "254901960784338": 453, "25496": 486, "2551": 411, "2552": [411, 463], "2553": 411, "2555": 387, "2557": 411, "255750516626": 463, "2558": 411, "2559": 411, "256": [66, 421], "2560538e": 466, "2561": 411, "2562": 411, "2563": 411, "2564": 411, "2567": 411, "2568720263723087": 450, "257": [134, 442], "2574": 411, "25743553e": 465, "25763": 443, "257642": 463, "2579999": 475, "258": [442, 524], "2580": 411, "2585": 411, "2587": 411, "2589254117941673": 484, "259": [442, 484, 486], "2591e": 463, "2594": 411, "2595": 411, "259e": 135, "25b": 17, "25e": 470, "25t_": 53, "25th": 392, "26": [19, 85, 88, 370, 404, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 488, 536, 554], "260": [421, 486], "2604": 411, "2609": 470, "261": [421, 486], "2610e": 447, "2616": 411, "26173": 443, "2619": 411, "262": [421, 443, 470, 486], "2620": 411, "2625818241224747": 465, "2627": 411, "262728": 475, "26272868097919794": 472, "2628525e": 466, "263": [134, 135, 443, 470], "2634e": 448, "2635": 411, "2635108e": 466, "2637": 411, "26392": 445, "2639554729438709": 472, "264": [134, 421, 449], "2645": 411, "264516271942103": 484, "2648150": 94, "2649e": 465, "265": [32, 135, 380, 435, 443, 449, 470, 486, 487], "2651": 411, "2654": 411, "266": [134, 135, 380, 442, 443, 449, 451, 455, 468, 470, 486], "2660": 411, "266192": 435, "26665050077722524": 472, "2667": 412, "267": [66, 135, 442, 443, 449, 470, 475], "2672": 412, "2673": 412, "26739753": 94, "2674": 412, "268": [392, 443, 449, 463, 470, 486], "2681": 412, "2684": 412, "2685": 412, "268663733018811": 472, "2687": 412, "26883694": 486, "26887783978974283": 472, "269": 486, "2692": 412, "269385": 463, "2695": 449, "269627": 475, "2697": 412, "2699878e": 466, "26a": [39, 40, 50, 52, 53, 122, 235, 269, 278, 463], "26e": [463, 470], "26th": 388, "27": [135, 372, 432, 443, 449, 464, 486, 561], "270": [436, 443, 463, 470, 486], "2703": 412, "2705": 412, "27057337686547633": 472, "2707": 412, "2708": 235, "2709": 412, "27093776e": 466, "271": [442, 443, 486], "2711": 412, "2712": 412, "2713": 412, "2715": 412, "271777777777796": 436, "27177778": 91, "2718": 412, "2719": 412, "271e": 443, "272": [442, 443, 447, 463, 470], "2720": [387, 413], "27209": 486, "2723": 412, "2725": 412, "2726": 412, "2726e": 486, "2727": 412, "2727693": 475, "2727e": 439, "2728": 412, "2729": 412, "273": [81, 421, 437, 443, 486], "2730": 412, "2731": 412, "2733": 412, "2734": 121, "2735": 412, "2737": 412, "2738": 412, "2739": 412, "274": [459, 468], "27409496735322464": 472, "2741": 412, "2742": 412, "2743": 412, "274509803921596": 453, "2746": 412, "2747": 412, "27473": 449, "275": [442, 463, 554], "2750": 412, "2751": 412, "2752": 412, "2753": 412, "2755": 412, "2756": 412, "2759": 413, "276": 421, "2761": 413, "2762": 413, "2764": 413, "2765": 413, "2767": 413, "2768": 413, "277": [434, 442, 474], "2771": 413, "2772": 413, "27727": 470, "2775": 413, "277522957147003": 450, "2776": 413, "2777": 413, "2777074437073429": 472, "2778": 413, "2779": 413, "278": [27, 421, 442, 455, 463, 470], "2781": 413, "2782": 413, "2783": 413, "2784": 413, "2785": 413, "2785e": 439, "2787": 413, "2788": 413, "2789": 413, "279": [421, 434, 546], "2790": 413, "2791": 413, "2792": 413, "2793": 413, "2794": 413, "2796": 413, "2797": 413, "2798": 413, "2799": 413, "27e": 463, "27t20": 87, "28": [21, 24, 66, 91, 134, 135, 375, 404, 434, 437, 440, 441, 442, 443, 449, 451, 455, 459, 462, 463, 467, 468, 470, 474, 475, 486], "280": [66, 421, 439, 442, 468], "2800": [451, 470, 486], "2801": 413, "2802": 413, "2803": 413, "2804": 413, "2805": 413, "2808": 413, "2809": 413, "281": [442, 463], "2810": 413, "2811": 413, "28118133544922": 463, "2812": 413, "28120079": 463, "2815": 413, "2816": [413, 470], "2817": 413, "2818": 413, "2818047723094509": 472, "282": [134, 135, 434, 546], "2820": 413, "2822": [413, 470], "2823": 413, "2825456e": 466, "2827": 413, "2827988e": 466, "2828": 413, "2829": 413, "282e": 463, "283": [421, 439, 442], "2832": 413, "283218": 435, "283487": 463, "2837": 413, "28382603": 466, "2838398": 475, "28385358839966657": 472, "2839": 413, "284": [434, 442, 459, 463, 474, 564], "2841": 413, "2842": 413, "28429": 449, "2845": 413, "2846": [413, 449], "285": [421, 442], "2852": 470, "28551": 135, "285f": [81, 86], "286": [421, 442], "2861432787940619": 472, "286e": 463, "287": [52, 53], "2872": 414, "28720322": 94, "2874": [414, 486], "28755283551095173": 472, "2878662980210884": 294, "287e": 443, "288": [121, 442], "2880470e": 466, "2885": 414, "288e": 437, "289": [421, 442], "28905": 476, "2890901170642": 459, "2891": 414, "28958": 443, "2896": 414, "2897": 414, "289777": 542, "28e": [99, 437, 447, 449, 464], "29": [66, 135, 264, 381, 391, 404, 432, 435, 437, 440, 442, 443, 449, 455, 458, 463, 468, 470, 471, 475, 486], "290": [422, 439, 442, 450], "2900": 470, "2903": [414, 470], "2903e": 441, "2907": 414, "291": 421, "2912": 414, "29170324": 464, "291e": 486, "2922477": 94, "2924": 414, "2927": 414, "2929": 414, "293": 442, "2930": 463, "2931": 414, "2932": 414, "29355238360800506": 472, "2938": 414, "2939": 414, "293e": 443, "2942": 388, "2943": 414, "2944": [389, 414], "2945": 414, "2947": 414, "2948": 414, "295": [421, 459], "2950": 414, "2951": 414, "2953": 449, "2956": 414, "29585273e": 476, "2959": 470, "295e": [443, 463], "296": [421, 440], "2965": 414, "2966": 414, "2967": 414, "297": [435, 455, 474], "2971e": 463, "2974": 414, "2976": 414, "298": [442, 449, 463], "2981": 414, "2984": 414, "29882214027996945": 472, "299": [421, 442, 463], "2990": 414, "2991": 414, "2992": 414, "2993": 414, "2995484265169": 456, "2996": 486, "2998": 414, "2999": [414, 463], "299940468335294": 449, "299995937905366": 449, "299e": 463, "299t": 53, "29t20": 458, "29th": 404, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 165, 175, 176, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 203, 225, 372, 377, 382, 385, 386, 387, 398, 406, 412, 425, 426, 427, 434, 443, 445, 446, 449, 468, 469, 486, 496, 499, 510, 511, 512, 524], "2degx2deg": 451, "2e": [190, 435, 436, 437, 451, 452, 455, 458, 463, 465, 470], "2e3": [190, 468], "2e6": 476, "2f": [355, 435, 440, 472, 485, 562], "2fhl": [58, 70, 411, 423, 424, 463, 486, 495], "2hwc": [59, 71, 411, 417, 425, 463, 495], "2k": [99, 106], "2m": [235, 269], "2nd": 391, "2pc": 68, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 62, 66, 78, 81, 83, 84, 85, 88, 91, 93, 99, 101, 102, 106, 107, 108, 112, 114, 120, 121, 135, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 168, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 207, 209, 218, 225, 228, 236, 258, 264, 266, 268, 269, 277, 278, 279, 284, 293, 294, 315, 324, 343, 354, 359, 361, 363, 366, 367, 369, 370, 372, 377, 378, 380, 381, 382, 383, 385, 390, 391, 392, 397, 402, 403, 405, 406, 407, 409, 410, 415, 417, 419, 422, 423, 424, 425, 426, 427, 428, 430, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 487, 488, 490, 493, 494, 497, 498, 502, 504, 506, 507, 509, 510, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 561, 562], "30": [24, 52, 66, 81, 93, 99, 109, 134, 145, 184, 293, 294, 373, 374, 379, 386, 393, 404, 406, 435, 436, 439, 440, 443, 444, 449, 452, 455, 458, 459, 460, 463, 464, 465, 468, 470, 471, 472, 473, 475, 476, 486, 498, 504, 509, 510, 517, 518, 532, 535, 536, 537, 540], "300": [72, 85, 88, 278, 442, 444, 448, 451, 452, 455, 459, 463, 476], "3000": [376, 463, 512], "30000": 463, "3000000": 545, "30000000": 545, "3000020211954284": 449, "3001": 414, "30015e": 435, "3002": 414, "3003": 470, "300451666228708": 484, "3004625872247901": 448, "3005": 414, "3006": 486, "3006942": 94, "3007": 414, "301": [421, 442], "3011061699260256": 472, "3012": 414, "3013": 463, "301668796295": 463, "302": [442, 448], "3020791585772495": 293, "30287": 443, "3028e": 470, "302e": 463, "303": [439, 442, 463], "3030": 414, "3032": 414, "3034": 463, "3035": 414, "3035897658854436": 450, "3037": 414, "3037632e": 466, "3038": [414, 486], "3039": 414, "304": [456, 458, 459, 463, 472, 486, 526], "3041": 414, "3042": 414, "3043": 470, "3045": 414, "3046875": [464, 470], "3049664466089965": 294, "305": [66, 442], "3051": 414, "3051827": 94, "3051852": 94, "3051856": 94, "3052": 414, "3053": 414, "30535345877453707": 472, "3054": 414, "30561": 135, "3058": 414, "3058422e": 466, "305e": 463, "306": [421, 561], "3060": 414, "306196370000000": 486, "3063": 414, "3069": 414, "306e": 463, "307": 442, "3070": 414, "3071": 463, "3072": 414, "3074": 414, "3075": 390, "3076": 414, "307e": 463, "308": [442, 449, 520], "3080": 414, "3081": 414, "3083": 414, "3085": 414, "3086": 414, "3088": 414, "3089": 414, "3091": 414, "3092": 414, "30997": 486, "30a": 269, "30d00m00": 393, "30e": [445, 466, 470], "30th": 378, "31": [134, 135, 375, 376, 389, 390, 402, 429, 437, 439, 442, 443, 447, 450, 453, 458, 459, 463, 464, 467, 468, 470, 473, 477, 484, 486], "310": [440, 442, 459], "3100": 414, "3106": 414, "31067517": 463, "3107": [463, 486], "311": [439, 520, 562], "3110": 415, "3111": 415, "3112": 415, "3113": 415, "31139074e": 465, "3114": 415, "311489174710791e": 486, "3116": 415, "3117988e": 466, "31186857659616535": 472, "3119611261122878": 472, "312": 421, "3122": 416, "3123": 416, "3124": 416, "3125": 416, "3126": 416, "3127": 416, "3129": 416, "312e": 443, "313": 442, "3130": 416, "3131": [417, 470], "3135914081482271": 472, "3136": 417, "313714614138": 464, "3138": 417, "314": 426, "3140": 417, "3141": 417, "3145": 417, "3148": 417, "315": 463, "3152": 417, "3153": 417, "3155": 417, "3158": 417, "316": [442, 476, 477], "3162": 417, "316227": 463, "316227766016838": 467, "3165": 417, "3168": 417, "3169": 417, "317": [421, 442, 459], "3173": 417, "3178": 417, "317a": 269, "317e": 463, "318": [421, 439], "3180": 417, "3182": 417, "31834": 135, "3185": 417, "319": [422, 476], "3191": 417, "3195": 486, "3197": 417, "319725": 475, "3199": 417, "32": [81, 134, 184, 434, 443, 445, 447, 454, 459, 464, 467, 468, 486], "320": [99, 102, 106, 107, 118, 463, 464, 470, 498], "3202": 417, "3207": 417, "3208": 417, "32095": 486, "321": 453, "3211": 417, "3216": 417, "3217": 417, "3219": 417, "322": 442, "3222": 417, "3223953247114": 459, "3228": 417, "323": [440, 442, 449], "3230": 417, "3232943": 334, "3233356": 334, "32377509405904137": 93, "323779": 284, "3237948931463171": 472, "3238": 417, "324056": 530, "3241": 417, "3243": 417, "324424288934": 464, "3246": 417, "32465247": 471, "3254": 417, "3257": 417, "3258": 417, "326": 421, "3262": 417, "32684": 486, "32684833": 475, "327": [434, 449, 459, 525], "3272": 417, "3276": 417, "3277": 417, "3278": 417, "3279": 417, "3279955e": 466, "328": 449, "3281": 417, "3283": 417, "3284": 417, "32843": 486, "32847": 435, "3285": 417, "329": [93, 293, 294, 458, 463, 472, 500], "3293": 417, "3299": 463, "329e": [439, 463], "33": [440, 446, 456, 459, 462, 464, 465, 468, 486, 500], "330": [422, 434, 442, 470, 546], "3301": 417, "33013e": 435, "3302": 417, "3302565e": 466, "3303": 417, "330376": 66, "3304": 417, "3305": 417, "330505": 475, "33055e": 435, "3306": 417, "3307": 417, "3308": 417, "3309": 417, "330961": 555, "331": [434, 546], "3310": 417, "3314": 417, "33164865722698683": 472, "3319": 417, "3319831545301117": 293, "332": [66, 422, 434, 546], "3320": 417, "3323": [417, 464], "332525": 463, "3328": 417, "332e": 449, "332f": [30, 31, 32, 33], "333": [434, 546], "3330487": 94, "3331": 486, "3331761": 94, "3333": 417, "33333333": 366, "3333333333333344": 453, "3335": 417, "33368e": 435, "3337": 417, "3338": 417, "334": [121, 476], "3342": 417, "3343": 417, "3346": 417, "3347": 417, "33484": 435, "3349": 417, "334e": 463, "335": 422, "3353": 417, "3357": 417, "3358": 417, "335e": 437, "336": [453, 463], "3363": 417, "3364130e": 466, "336444e": 463, "336606": 435, "3368855e": 466, "3369": 417, "337": [422, 442], "3374": 417, "3377": 417, "33787": [93, 472], "33788": [93, 472], "33789": [93, 472], "3379": 417, "33790": 472, "33791": 472, "33792": 472, "33793": 472, "33794": 472, "33795": 472, "33796": 472, "33797": 472, "33798": 472, "33799": 472, "338": [422, 463], "33800": 472, "33800122": 94, "33801": 472, "3380311e": 466, "3381": 417, "339": [422, 453], "3390": 417, "3392": 417, "3393": 417, "3395": 417, "3396e": 447, "3397": 417, "339835555384604": 472, "3398360": 466, "33983991887701287": 93, "3399": 417, "33e": 460, "34": [52, 53, 66, 405, 434, 435, 439, 440, 449, 458, 461, 464, 468, 470, 486], "34005": 435, "3402": 417, "3403": 417, "340391": 486, "3404": 417, "34047": 435, "3406": 417, "3409": [91, 417], "341": 435, "3413": 417, "3416": 417, "3418": 417, "342": 422, "3420": 417, "3423": 417, "3426": 417, "3428": 417, "3434": 417, "3438": 417, "3439": 417, "343e": 437, "344": [434, 463, 525], "344023": 471, "344238": 486, "3443842": 475, "3445": 417, "3446": 417, "3447": 417, "3449": 417, "344e": 66, "345": [285, 435, 470], "3453": 417, "3454": 417, "345692": 486, "3458": 417, "346": 470, "34613004113985": 450, "346488e": 463, "3466": 417, "3468": 417, "347": [422, 434, 436, 438, 439], "3471": 417, "3474": 417, "347e": 443, "348": [36, 37, 422, 439], "3480": 417, "3481e": 447, "3485e": 485, "3488": 417, "348e": [66, 463], "3491": 417, "3493": 134, "349530550405035": 465, "349530725254468": 465, "34953073943366": 465, "34953075819191": 465, "34953077463306": 465, "34953079334042": 465, "349530807529028": 465, "349535814693404": 465, "349536723056637": 465, "349537158300407": 465, "349537804239922": 465, "34953807814367": 465, "34953910575007": 465, "34953932636892": 465, "349542158419318": 465, "349559366703698": 465, "34971209244579": 465, "349724940685938": 465, "3499075e": 466, "34e": [463, 470], "35": [66, 383, 390, 402, 440, 458, 463, 465, 473, 475], "350": [453, 460], "3501": 443, "350105": 449, "3502": 463, "35030398537787": 465, "3503706026275275": 472, "3504": 486, "35052105086856": 465, "350556388466543": 465, "350d": 453, "351": [422, 463, 486], "3515": 417, "352": [422, 463], "3521": 436, "3523": 417, "3529": 417, "3529411764705888": 453, "353": [24, 422, 486], "3535": 419, "3536": 435, "353e": 449, "354": 453, "3544": 417, "35569283": 466, "355804": 486, "3559": 417, "356": 486, "3561": 417, "356263170943497e": 484, "3568": 417, "357": [463, 486], "3570e": 444, "35722435185": 463, "3576e": 436, "357e": 443, "358": [449, 463, 486], "3584": 417, "3585": 449, "359": [422, 449, 463, 486], "3590188e": 466, "3592": 417, "3599": 451, "359e": 486, "36": [66, 84, 140, 313, 449, 451, 463, 464, 466, 486], "360": [380, 468, 488], "3600": [442, 451, 452, 468], "36014": 447, "36073833513766157": 472, "361": [66, 422], "3619e": 485, "36228879": 486, "36273": 486, "363472509034498": 472, "3639946": 460, "364": [422, 439], "365": [434, 546], "3659253e": 466, "366": [434, 474, 485], "36669663417038234": 472, "3669": 419, "367": [422, 453, 470], "3674884": 463, "368": 114, "36834038301420274": 472, "368346217294295": 93, "3684": 419, "3689322e": 466, "369": 422, "3690": 486, "3699": 419, "36e": [462, 463], "37": [101, 120, 435, 440, 442, 465, 476, 562], "370": [453, 463, 470], "37058": 135, "371": [422, 440], "3710784e": 466, "3712": 419, "3713": 419, "371419": 545, "3715810e": 466, "3718745": 94, "372": [35, 121, 486], "3720": 419, "3722": 419, "3725490196078436": 453, "3728": 419, "373": [439, 449], "3733": 419, "373782": 524, "3739292e": 466, "374": [451, 453], "3740": 419, "37455141": 486, "3748": 419, "375": [422, 468], "3750": 449, "37506": 486, "37517": 443, "3752": 419, "3759377929871826": 472, "375e": 459, "376": 66, "3760": 419, "3761": 419, "3765": 435, "3777": 419, "37773": 443, "3779": 486, "3783": 419, "3784": 134, "379": 422, "3792": 470, "3796": 419, "3797": 419, "38": [22, 66, 435, 436, 463, 468, 470, 486, 545], "3802": 419, "3804": 419, "3806": 419, "381": [439, 470], "3810": 419, "3812": [463, 486], "3812120e": 466, "3812160e": 466, "38143003": 94, "3817": 419, "3829": 486, "382e": 439, "383": [66, 422, 463, 468], "3833": 419, "3837": 419, "383e": 66, "3842": 419, "3846": 419, "3848912826152664e": 486, "3856": 419, "385e": 135, "3860": 419, "3862": 428, "387": [422, 486], "3872": 463, "3873": 419, "3874": 419, "3876": 419, "387834": 486, "388": 524, "388405": 486, "3885947175689592": 472, "3886270e": 466, "3887": 419, "389": 371, "3892": 419, "3895": 419, "3898": 419, "389e": 486, "39": [17, 18, 21, 22, 24, 25, 27, 59, 462, 463, 468, 476, 524, 545], "390": [417, 454], "3904": 419, "39042": 84, "3905": 419, "3906": 419, "391": 463, "3915": 419, "39151": 445, "3918": 419, "3919677734375": 439, "392": [422, 440], "392156862745098": 453, "39224": 443, "3925": 428, "393": [199, 200], "3933": 419, "3935": 436, "3936": 419, "394": [422, 439], "3941": 419, "3945": [436, 463], "3947637541758": 459, "3948": 420, "395": 422, "3950": [391, 428], "395004": 486, "3956": 428, "3959": 420, "396": 422, "396125": 533, "3962942e": 466, "3966": 420, "3970": 392, "39728": 486, "3975": 420, "3979": [420, 560], "397918129147546": [402, 560], "39791813": [402, 560], "398": [422, 447], "3981": 486, "3981075200000000": 486, "3983": 420, "3986": 420, "3987": 420, "3988": 420, "398e": 463, "3990": 420, "39e": 463, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 140, 146, 153, 154, 156, 165, 272, 274, 372, 375, 376, 377, 381, 382, 385, 386, 387, 398, 406, 407, 408, 410, 411, 412, 413, 424, 425, 426, 434, 435, 437, 439, 440, 443, 444, 445, 449, 450, 451, 452, 453, 454, 458, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 484, 485, 496, 498, 499, 500, 505, 507, 508, 512, 557, 559], "3d33m15": 66, "3dataset": 448, "3e": [20, 121, 127, 449, 452, 457, 460, 463, 470], "3e4": 476, "3e5": 476, "3e6": 545, "3e7": 545, "3f": [121, 450, 561, 562], "3fgl": [60, 66, 72, 220, 257, 389, 418, 421, 423, 424, 425, 434, 437, 463, 471, 486, 495, 514, 546], "3fgl_name": 70, "3fhl": [61, 73, 84, 123, 125, 129, 275, 386, 424, 425, 437, 443, 451, 453, 463, 468, 469, 470, 471, 476, 486, 495, 497], "3fhl_data_fermi": 448, "3fhl_dataset": [275, 448, 469], "3fhl_model": [275, 448, 470], "3g": [462, 463], "3hwc": [62, 74, 417, 428, 463, 495], "3ml": [384, 476], "3pc": [63, 68, 463], "3pc_catalog": 63, "3rd": 63, "3rd_psr_catalog": 63, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 60, 66, 81, 85, 88, 98, 99, 102, 106, 107, 111, 113, 124, 129, 135, 137, 142, 145, 153, 165, 168, 184, 185, 186, 187, 188, 189, 194, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 230, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 268, 275, 276, 313, 353, 366, 367, 369, 370, 378, 380, 383, 386, 390, 391, 402, 405, 414, 416, 417, 418, 421, 423, 424, 427, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 484, 485, 486, 488, 493, 494, 495, 509, 512, 513, 517, 518, 521, 526, 531, 544, 545, 553, 559, 560, 561, 562, 563], "40": [59, 106, 107, 373, 418, 436, 437, 439, 440, 447, 449, 458, 459, 468, 471, 475, 486, 509, 532, 535, 540, 561], "400": [129, 434, 444, 449, 453, 463, 468, 486, 487, 554], "4000": 428, "40000": [165, 485], "400023002295445": 484, "400056": 435, "40050506591797": 463, "40051": 445, "40051035": 463, "40071076": 94, "400x200": 453, "401": [434, 440, 446], "40112": 486, "4013": 428, "4014": 428, "4015": 428, "4017": 428, "4018": 428, "402": [145, 440], "4022": 428, "40235": 447, "4024": 428, "4025": 428, "4026": 428, "402712": 463, "403": [422, 449, 470], "4035": 486, "4037": 428, "404": 291, "4040346523975": 459, "4043": 428, "4044": 428, "40481": 447, "405": 374, "4051": 428, "40525": 447, "4054": 428, "4058": 428, "406": 486, "40611": 486, "4067": 428, "407": 463, "4071": 428, "4073": 428, "4073799600000000": 486, "4075": 428, "4076": 428, "4079": 428, "408": [434, 439, 468, 546], "4080": 428, "4080942e": 466, "40822469e": 471, "4083": 428, "4084": 428, "4088": 428, "4089": 428, "409": 439, "40919": 443, "4093": 428, "409416": 486, "4095": 428, "4098": 428, "40a": 59, "41": [66, 84, 91, 380, 463, 464, 468, 476, 486], "410": 453, "41009347393684": 464, "4103": 428, "4105": 428, "4106": 428, "4107": 428, "4108": 428, "411": 486, "4110e": 463, "4112": [121, 428], "4113": 428, "4115": 428, "41176470588239": 453, "4119": 428, "411e": 437, "4120719e": 466, "412165": 449, "412779907405": 463, "413": 449, "414": [422, 447], "41405230487": 450, "41415047": 94, "4142135623730951": 114, "41449": 443, "4144e": 447, "415": [422, 434, 445, 446, 536], "4155": [463, 486], "41584196": 456, "416": [66, 434, 438, 463, 467], "417": 463, "418007850646973": 402, "418157": 548, "41866": 476, "419": 470, "4191": 431, "41924": 134, "4198250e": 466, "41995": 443, "419e": 463, "41e19": [19, 20], "42": [25, 27, 91, 145, 334, 380, 442, 449, 463, 466, 467, 468, 472, 475, 513, 516], "420": 439, "42050348": 464, "4208": 431, "4209": 431, "421": [422, 453, 486, 559], "4210": 431, "4212": 431, "4212028e": 466, "4213": 431, "4215": 431, "4216": 431, "4217": 432, "4219": 431, "422": [39, 40], "4220": 447, "4221": 429, "4225498e": 466, "4225631e": 466, "42267": 449, "4226731": 449, "4231": [429, 431], "4236": 443, "42361": 443, "42399798": 449, "423e": 121, "42400": 449, "4242": 431, "4243": 431, "4245": 431, "42463": 476, "424649": 464, "42474": 486, "424e": 443, "425": 486, "4252": 431, "426": 463, "4264": 431, "4268": 429, "427": 440, "4275": [429, 431], "4277": 431, "4280": 431, "4281": 463, "4282": 431, "4288": 431, "429": 439, "4294": 431, "42e": [465, 470], "43": [268, 334, 380, 439, 440, 449, 459, 464, 468, 486, 513, 516], "430": 463, "43000": [52, 53], "4301": [429, 431], "4303606e": 466, "4305": 431, "431": [130, 374, 453, 464], "43113": 435, "43137254901962": 453, "4313847458879893": 472, "4319": 486, "43197": 443, "4324": [429, 431], "4326": 431, "432878": 463, "432e": 463, "433": 443, "4336": [429, 431], "43366": 554, "434": [439, 463], "43416595": 460, "4344": 429, "4346": 431, "435": 422, "4350": 431, "4351637481047363": 472, "4352": 431, "4359": [429, 431], "435l": 463, "436": [422, 439], "4360750e": 466, "4369": 431, "437": [463, 470], "4370": 431, "4373240195300975": 472, "438": 470, "4380": [430, 431], "4381": [394, 432], "4382": 430, "439": 439, "4393": [430, 431], "439306769641669e": 484, "4394": 430, "4395": 431, "4397": [430, 431], "439e": 463, "43e": 470, "44": [21, 50, 84, 334, 442, 458, 459, 460, 468, 517, 518, 519], "4402": 431, "44055555555555603": 91, "4406": 431, "4408": 432, "4409": 431, "4412": [430, 431], "4417": 431, "4418": 431, "4420073e": 466, "4420222e": 466, "4428": 431, "4428634e": 466, "442e": 443, "4430": 431, "44318": 464, "443199": 540, "4432": 432, "4435": [430, 431], "4444": 431, "445": 443, "4450": 486, "44528685": 486, "4453": [430, 431], "44573": 91, "4458": 431, "4459": 431, "446": [470, 562], "4466": [431, 447], "4466832000000000": 486, "447": 422, "44742": 486, "44749e": 435, "447552": 435, "447e": [449, 463], "447l": 17, "448": 453, "4480056e": 466, "44802852": 486, "4481": 463, "4485": 432, "4486": [430, 431], "448e": [135, 448], "449": [434, 438, 461, 476], "4491": [393, 432], "4495": 431, "4498": 134, "44e": 402, "45": [51, 54, 439, 442, 448, 460, 464, 468, 469, 471, 474, 488, 513, 518, 519, 520, 521, 522], "450": [440, 470], "4500": [430, 431], "4501": 432, "4504": 431, "4506": 431, "4508": 431, "4509803921569": 453, "451": 439, "4510": [431, 447, 486], "4515": 462, "4517490659800822": 457, "4520": 430, "4521": 431, "4524": 430, "453": 470, "454": 439, "4540": 432, "4545": 431, "4546": 432, "455": [422, 437], "45515263080596924": 436, "4558750": 449, "455e": 66, "456": 422, "4561": 432, "45646095": 460, "4567": 432, "457": [269, 422, 434, 470], "457251": 486, "4574": [430, 432], "4575": 91, "4578": 430, "4579e": 435, "458": [453, 463], "4584": 432, "45856": 486, "4586649826004114": 293, "459": [422, 464, 470], "4593": 430, "45935": 486, "4595": 432, "4599": 432, "45\u00ba": 477, "46": [53, 66, 106, 107, 380, 438, 463, 468, 476, 523, 524], "460249999": 84, "4603698412163": 459, "4608": 432, "461": 422, "4615": 432, "4618695378303528": 436, "4619": 430, "462": [422, 439], "4620": [394, 432], "4620e": 463, "46225": 443, "4628": 432, "463": 486, "4631": 430, "4635": 432, "4638": 432, "464": 455, "4642048e": 466, "4647544e": 466, "465": [463, 470], "4653": 430, "4657": [430, 432], "465784": 486, "4660": 432, "4664": 432, "4668": 432, "4669": 432, "4671": 432, "46711": 443, "4677": [430, 432], "468": [434, 460, 463, 479], "4681": 430, "4684": 436, "468805426856864e": 52, "468e": 66, "4697": 432, "46e": [81, 444, 449], "47": [66, 459, 463, 468, 486, 526], "4703": 432, "470393": 521, "470588235294144": 453, "4711": 486, "4714": 432, "4721": 430, "4726": 432, "4728": 430, "4729": 432, "473": 422, "4732": 443, "4738": 432, "474": 422, "4740": 432, "4741": 432, "474e": 463, "475": [422, 470], "4750": 432, "4753": [430, 432], "475468": 435, "4755": 430, "4759": 432, "4770": 432, "4772": 430, "47797": 443, "477e": 463, "478": 422, "47802": 472, "47803": 472, "47804": 472, "47827": 472, "47828": 472, "47829": [80, 472, 478], "4783": 432, "4785": 432, "47e": 463, "48": [33, 165, 405, 447, 448, 468, 470, 476, 527, 528, 529], "480": [436, 463, 470], "4802": 432, "4805": 432, "480554966147": 447, "48068": 443, "4808": 432, "480e": 463, "481": [371, 422], "4810": 432, "4814": [432, 486], "4817": 432, "4819444e": 466, "482": 435, "48215685": 94, "4822": 432, "48248": 463, "4825": [463, 486], "4828": 432, "4829": 432, "483": 439, "4834": 432, "4834488e": 466, "4835": 432, "4837": 432, "484": 422, "48442": 264, "4845": 432, "4847": 432, "4848653": 463, "4849": [432, 463, 486], "484e": 135, "485": 422, "4850": 432, "4851": 432, "4854": 432, "485p": [36, 37], "48602294921875": 436, "487": [422, 484], "4875723e": 466, "4876": 430, "4879": 432, "4881": [244, 245], "4886": 432, "48871": 435, "4888969467051004e": 484, "488z": 27, "489e": 463, "48e": [463, 470, 485], "49": [53, 443, 447, 463, 470, 476, 484, 512, 530, 531], "490": 25, "4902": 432, "4904": 432, "4904078e": 466, "49078e": 435, "491": [439, 479], "491295": 101, "4913": 430, "49152": 476, "4917": 432, "493": [25, 439], "4930435940405": 447, "493255": 518, "4933657e": 466, "4936": [430, 432], "4937": [430, 432], "4940": 432, "49417615": 84, "4942": 432, "49447596": 445, "4958277": 94, "496021": 475, "4963": 486, "4966": 486, "4968236e": 466, "497": 439, "4970": 432, "4971": 432, "4971704e": 466, "4973": 432, "4975": 432, "4978": 432, "498": 486, "498784": 463, "4989": 432, "498e": [463, 486], "499": [66, 463], "49919925926": [230, 555], "4992": 432, "4994": 432, "49972277488662115": 472, "4999833830074": 449, "4d": 385, "4e": [460, 463, 470, 545], "4f": [560, 561, 562], "4fgl": [64, 76, 258, 259, 389, 409, 411, 417, 419, 432, 434, 448, 463, 469, 471, 495, 514, 546], "4th": [378, 404], "4yr_catalog": 60, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 66, 81, 85, 88, 99, 100, 102, 105, 106, 107, 114, 118, 121, 122, 124, 126, 128, 134, 135, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 165, 168, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 210, 211, 214, 217, 218, 220, 221, 222, 225, 226, 228, 230, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 269, 291, 295, 327, 356, 357, 361, 363, 366, 367, 370, 371, 373, 377, 378, 380, 381, 382, 383, 385, 389, 390, 391, 397, 402, 405, 407, 409, 410, 417, 419, 421, 422, 424, 425, 426, 430, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 488, 493, 494, 497, 504, 507, 509, 510, 511, 512, 513, 517, 518, 519, 520, 522, 526, 527, 532, 534, 535, 536, 540, 541, 548, 549, 550, 551, 553, 559, 561, 562], "50": [85, 88, 91, 108, 112, 334, 373, 393, 435, 440, 441, 447, 455, 458, 459, 460, 463, 464, 466, 468, 470, 471, 472, 475, 476, 478, 484, 485, 486, 509, 512, 520, 532, 533, 534, 562], "500": [185, 186, 188, 194, 197, 198, 443, 449, 451, 452, 468, 475, 476, 486, 512, 517], "5000": [19, 20, 85, 88, 488, 512], "5000056568267741": 449, "5000e": 442, "50022222": 91, "500249": 463, "5004": 449, "501": [434, 447, 454], "5015": 432, "502": 422, "5029747": 441, "503": 422, "5030": 486, "504": 28, "5040": 432, "5044": 432, "5049": 486, "505": [66, 463, 464], "505523195905": 447, "506": 422, "5066": 463, "507": 422, "5074834": 94, "5078068": 94, "50807568877": 463, "509": 440, "509e": 463, "50e": [442, 470], "51": [52, 53, 66, 439, 447, 453, 484, 535, 536], "510": 422, "5106": 486, "51095676": 460, "511": [66, 422], "51179": [367, 564], "512": 439, "5126": 66, "513": [402, 468], "51312": 449, "5144": [91, 435], "514854": 475, "51544": [442, 451, 452, 455], "5162628e": 466, "518": [422, 470], "5188338e": 466, "51910": 91, "5192420e": 466, "5194769e": 466, "51948705e": 471, "52": [53, 121, 165, 435, 436, 443, 445, 447, 459, 463, 475, 478, 486, 537, 538], "5205": 476, "52074074074": 81, "521": 423, "523": [423, 468], "5230376e": 466, "52318414": 94, "5237647004325865": 472, "52389101852": 463, "523a": [235, 269], "523b": 22, "524": [423, 463, 470], "5248": 486, "524807800000000": 486, "52587": 443, "526": 423, "52607": 486, "527": [423, 476], "528": [434, 438, 470], "52826166": 463, "5283": [463, 486], "52839183495354": 459, "529": 423, "5292": 464, "529411764705883": 453, "5297030e": 466, "52e": [460, 484], "53": [28, 449, 473, 517, 526, 539, 540, 541], "530": 423, "53025": 91, "531": [423, 453], "532": [434, 473, 474], "53213": 449, "5324402": 94, "532611": 552, "5326744": 94, "5326841": 94, "5326859": 94, "533": 463, "53343": [402, 457], "53344": 457, "53345": 457, "53346": 457, "53347": 457, "53348": 457, "534": [434, 438], "534366": 471, "5345275e": 466, "53482e": 435, "535": [423, 439, 463], "535058216604496": 269, "53566": 435, "536": 439, "53616": 235, "53878248736507": 459, "539": [269, 470], "5390438": 94, "539397": 463, "53945": 458, "53946": 456, "539e": 463, "53e": [402, 442], "54": [66, 439, 463, 466, 542, 543], "5400": 464, "540279": 538, "5407363826067": 497, "5407363826070": 497, "541": [423, 434, 465, 474], "5411": 435, "5427520e": 466, "54282": 443, "5438860e": 466, "544": [423, 463, 476], "545": [423, 439], "54566271": 561, "545y": [39, 40], "546": 423, "5461745": 94, "54676837e": 465, "54682": [443, 463, 476, 486], "547": [423, 435, 463], "54721e": 435, "5477": 463, "54772": 463, "5487540981385": 459, "54892": 443, "548e": 463, "549": 423, "549019607843138": 453, "54e": 470, "55": [39, 42, 85, 88, 459, 460, 465, 469, 473, 544, 545], "550": [434, 439, 479], "55026401977972e": 484, "55027": 135, "55045": 463, "551": [463, 524], "55197": [367, 564], "552": 463, "55275": 476, "553": 463, "553033": 120, "553337": 486, "5538": 486, "5538942e": 466, "554": 66, "55410": 463, "5545130e": 466, "554e": 437, "556": [423, 439, 562], "5561760e": 466, "5563052715230388": 484, "557": [423, 470], "55775": 463, "558": 423, "559": 423, "5594": 81, "56": [435, 460, 468, 477, 547, 548, 549, 550], "560": [37, 463], "5606985": 460, "5607778e": 466, "56093766": 94, "56141": 463, "561464": 455, "562": 463, "5622482": 94, "56353481": 561, "56393115380234": 450, "563e": [439, 449], "564": [284, 423, 439, 470], "56413952067279": 450, "5644": 464, "565": 423, "56506": 463, "565095": 435, "566e": 439, "56711": 486, "5686274509803928": 453, "56871": 463, "569": 423, "56922612": 561, "5692809e": 466, "56973": 486, "57": [33, 439, 443, 445, 449, 460, 468, 551, 552, 553], "57011": 449, "571": 463, "57185": 497, "5719922e": 466, "571e": 463, "572": 440, "57233": 486, "57236": [443, 463, 476, 486], "572e": 437, "573": [66, 439, 486], "57300957": 168, "5754970e": 466, "576": 470, "5760": 486, "57602": 463, "5763635e": 466, "5768262e": 466, "577": [434, 474], "577398": 476, "5779092e": 466, "578": [463, 561], "5783e": 455, "579": 463, "57944657408": 463, "57967": 463, "57e": 463, "58": [402, 405, 442, 447, 450, 463, 467, 468, 470, 478, 484, 554, 555], "580": 562, "580404": 526, "581": 440, "5819e": 441, "582": 423, "582357": 528, "58332": 463, "5833e": 463, "5835918e": 466, "5842497e": 466, "585": 463, "58540702": 94, "5867488e": 466, "58693695": 460, "58698": 463, "586e": 443, "5882352941176467": 453, "588e": 463, "58909": 459, "58926": 443, "5892966e": 466, "5895": 436, "58999": 230, "58e": [455, 463], "59": [81, 445, 455, 457, 463, 467, 478, 486], "590": 439, "59000": [230, 555], "59001": 230, "59063": 463, "5908": 463, "590835686434463": 472, "591": [423, 463], "59100": [554, 555], "59123": [548, 549, 550], "5915030546513255": 456, "5915e": [463, 485], "59200": 554, "59233": 471, "59235": [81, 475], "59240": 471, "59250": 471, "59254e": 435, "59265": 435, "593": 423, "59300": 460, "59344": 486, "59348": 486, "59365": 555, "594": [423, 439], "59400008": 94, "59428": 463, "59451": 443, "5951631e": 466, "596": 470, "59696": 443, "596e": 463, "597": 476, "597774": 466, "59793": 463, "598": 486, "5985": 486, "5987726": 94, "599": [423, 434, 453, 458, 461, 470], "599625": 475, "59976": 463, "599999904632568": 463, "599e": 443, "59d09m41": 463, "59e": [463, 470, 476], "5a": 58, "5e": [442, 452, 463, 470], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 66, 84, 85, 88, 97, 99, 106, 108, 112, 121, 126, 135, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 156, 157, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 230, 269, 354, 357, 370, 373, 378, 382, 383, 386, 391, 399, 402, 415, 417, 419, 425, 426, 430, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 488, 492, 509, 513, 519, 523, 543, 559, 561], "60": [66, 88, 147, 430, 440, 443, 463, 465, 476], "600": [434, 440, 443, 448, 461], "6000": 512, "6000000000000001": 471, "6002e": 485, "600661": 466, "60075": 466, "60090769e": 471, "600e": 439, "6018166e": 466, "601e": 463, "602": 439, "603": [470, 486], "6033": 435, "60350": 437, "603625": 466, "604": 439, "60446": [551, 552, 553], "6046689e": 466, "60603928": 471, "607843137254942": 453, "609e": 443, "60e": 463, "61": [66, 412, 440, 455, 463, 470, 562], "610": 470, "61051": 476, "6105760e": 466, "611": [443, 561], "6116853": 463, "611e": 463, "612": [434, 481], "6125": 478, "612a": 122, "613114": 456, "61422433": 94, "61489": 466, "614e": 443, "615316": 486, "617": 440, "617835": 466, "6181862e": 466, "61862": 230, "619": 463, "6194453e": 466, "619794257232": 484, "62": [439, 445, 463, 477, 485], "620": 463, "620398": 466, "6205": 486, "62111": 443, "621499": 486, "6218742e": 466, "6219": 437, "622": [423, 437], "62258": 463, "6227766": 468, "62277660168379": 468, "6228e": 437, "623": [463, 486], "62320": 437, "623397": 466, "62341325": 468, "623413251903492": 468, "624": 470, "624122": 449, "624d": 24, "62503": 463, "62514628": 466, "6253652e": 466, "6259962e": 466, "6266": 486, "6267247": 486, "627450980392158": 453, "628": 423, "62842028": 464, "63": [183, 184, 193, 196, 435, 439, 441, 459, 464, 467, 477, 478, 484, 485, 507, 509, 510, 513], "630": [80, 470, 478, 484], "6309576500000000": 486, "630e": 66, "631": [423, 447], "631155605": 451, "631159205": 451, "631170005": 451, "631173605": 451, "631177205": 451, "631180805": 451, "6318811e": 466, "632627": 486, "633": [83, 99, 102, 106, 107, 165, 440, 448, 467, 484, 485, 509], "63307": 81, "63308": [457, 485], "633083": 469, "63310241699219": 448, "63326": 443, "6333": 91, "63342": 486, "633600": 470, "635": 423, "63500212963": 463, "6354": 486, "63541": 475, "636688324856333": 459, "638": 470, "639": 463, "6390": 435, "63902": 435, "6397": 486, "63e": 464, "64": [39, 66, 81, 121, 184, 405, 463, 476], "640": 423, "6402822e": 466, "6406": 459, "641": [423, 486], "64103": 475, "6413": 449, "641635917844372": 450, "6417": 449, "6419578e": 466, "642": 486, "6429005895278312": 472, "643": [30, 31, 32, 33], "64323": 443, "64438": 476, "6444": 435, "645": 464, "6451": 449, "6464": 435, "647": 423, "647058823529452": 453, "6471115e": 466, "64794383e": 471, "648": 423, "648e": 66, "649": 423, "64987376": 94, "6499e": 459, "64e": 440, "65": [62, 390, 405, 407, 448, 464, 476], "650": 464, "6505e": 441, "6509": 435, "651": 463, "651058": 486, "6514": 486, "652": [434, 448, 556], "6522806": 486, "652368617859867": 448, "653": [423, 436], "65357608e": 466, "653e": 443, "654": [435, 463], "65412": 449, "654e": 463, "655": 443, "655283": 443, "6554088e": 466, "6556": 443, "6556248e": 466, "655e": 66, "656": 561, "65603222222": 476, "65603794185": 463, "65684312295258": 459, "657416": 543, "6577182894355391": 472, "658": 470, "658909145253801e": 486, "6589622747787678": 472, "659": [434, 439, 443, 461], "65e": 114, "66": [52, 53, 405, 408, 442, 455, 464, 465, 470, 473], "660": 423, "6604475": 449, "660e": 486, "660fals": 437, "661": 423, "66104": 435, "6611e": 441, "662": 463, "6623e": 447, "663": 561, "663742400000000": 486, "664502403": 475, "664502405": 475, "664502408": 475, "664502409": 475, "664502414": 475, "665169": 531, "6652219e": 466, "6654036168695552": 450, "6659": 443, "66650390625": 436, "6666666666583865": 458, "6666666666666666": 550, "666666666666696": 453, "66813": 449, "669": 440, "66984341": 466, "669e": 135, "66e": [447, 464], "67": [17, 405, 463, 486], "670": 463, "6705024680435898": 293, "671616": 435, "6728": [463, 486], "673": [451, 478, 548], "67304": 94, "67375": 435, "67457342435522e": 486, "676": 556, "676727": 549, "676836990188792": 440, "6768e": 440, "677": 423, "6772235e": 466, "67759236e": 466, "678": [84, 450], "67824": 464, "6784": 561, "67861": 466, "678684049503813e": 440, "679": 423, "679478012854058e": 440, "6795e": 440, "67992517": 94, "67e21": 462, "68": [66, 81, 93, 146, 152, 154, 155, 156, 158, 225, 405, 435, 463, 465, 466, 468, 475, 486, 562], "680": [440, 470], "6803": 486, "6812310184489": 459, "68125": 466, "6823": 435, "683": [434, 439, 461], "684": 165, "68542112": 94, "686": 440, "68628538586": 464, "687": [434, 451, 454, 470], "687214": 467, "687500": 467, "687685": 463, "688089": 516, "689": 439, "68e": [447, 463], "69": [99, 432, 443, 463, 464], "690": 66, "690311850083152": 450, "690557685186": 463, "6909290e": 466, "691": 463, "69138": 443, "691680": [99, 464, 470], "692": 443, "69314486": 469, "693940": 447, "694": 440, "6953125": 464, "69543812": 94, "6959369197218669": 472, "697317": 476, "69735": 466, "697e": 437, "697fals": 437, "6985": 436, "6992": 449, "699630": 536, "699e": 443, "6e": [437, 463, 470], "6h": 477, "6th": 404, "7": [16, 30, 31, 38, 52, 53, 66, 82, 85, 88, 101, 120, 121, 127, 134, 165, 168, 195, 228, 356, 357, 366, 370, 371, 378, 382, 383, 386, 402, 406, 407, 409, 410, 416, 417, 422, 423, 424, 426, 427, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 513, 517, 518, 554, 561, 562], "70": [66, 88, 99, 449, 463, 464, 561], "700": [374, 452, 469], "70000000e": 471, "7000e": 471, "70016": 449, "7007": 449, "701": 509, "70181": 135, "702": [457, 463, 485], "703": [402, 434, 479], "70358483e": 471, "704": 470, "70428": 486, "70437": 466, "705": 486, "70546": 443, "70634e": 435, "706e": 463, "707e": 448, "707t": 278, "708": [439, 440], "708e": 443, "709": 423, "7097381e": 466, "70e": 471, "71": [33, 442, 457, 470, 562], "710": 423, "71067811865478": 463, "7116851": 471, "712": 450, "71220672": 464, "7123895e": 466, "712e": [457, 485], "713": [423, 463], "7132e": 486, "714": 463, "714e": 443, "715": 486, "716": [93, 293, 294, 468], "716062": 475, "71693826": [458, 472, 500], "717": 463, "71795506": 486, "7184": 486, "719": [423, 439, 470], "7190994e": 466, "71944e": 435, "7195": 463, "719e": 463, "72": [409, 463, 467, 486], "720": [434, 452, 453, 454, 463], "7200": 455, "721e": 443, "722": 470, "72217": 486, "722557505166": 463, "723": 443, "723e": 463, "7240965e": 466, "725": 463, "725490196078432": 453, "727": 470, "72775": 486, "7284447e": 466, "73": [435, 486], "7303": 486, "731": 423, "732e": [66, 463], "733": [66, 423], "733360190578827e": 484, "734": 486, "735": [434, 450, 454], "7350250533013533": 472, "7350380e": 466, "7351418e": 466, "735e": 463, "736": [561, 562], "737": 439, "738": [423, 463], "7385727e": 466, "739": [423, 439], "7395744e": 466, "739e": 66, "73e": [463, 484], "74": [435, 445, 486], "740": 423, "740e": 443, "741241": 534, "742": 470, "743e": 463, "744": 449, "74427": 449, "74465974e": 466, "74479": 443, "745098039215687": 453, "74542e": 435, "746": 423, "7471700e": 466, "7479085e": 466, "748": 463, "748259": 447, "749": [434, 462, 474], "75": [66, 359, 439, 486], "750": 562, "75267735": 486, "753": [423, 440], "7537086e": 466, "754": 423, "75408483": 486, "7555": 467, "7559": 486, "756": 463, "756121": 522, "7567": 435, "7580410e": 466, "759": 423, "7596682e": 466, "75e": [463, 485], "76": [450, 468], "7613": 402, "7613e": 444, "761c": 28, "762": 423, "762199399999986": 524, "763": 423, "7637308880733709": 472, "76419591747674": 459, "7642": 443, "7647": 486, "764705882352942": 453, "76473": 443, "7652512e": 466, "765e": 443, "766": [423, 443], "7660168382": 463, "7660365375951": 484, "766d": 475, "767": 423, "76739": 463, "768000": [99, 464], "768048": 94, "7681656e": 466, "76837444": 460, "7684028": 486, "7692170e": 466, "76e": 470, "77": 439, "770": [66, 434, 479], "771667": 478, "77174": 443, "7718272408581743": 293, "771e": 463, "772": [423, 435], "77206": 486, "77218": 443, "773": 463, "7733e": 463, "77351": 443, "77358627319336": 436, "774": [423, 455], "7743835449219": 439, "774e": [443, 463], "775": [66, 470], "7752244878226383": 449, "7755386e": 466, "776": 476, "7760": 486, "7763": 455, "7763307219821931": 293, "7765957e": 466, "77678": 435, "7769775": 475, "777": 423, "7771617763704126": 293, "77751797": 94, "777e": [66, 437], "777l": 35, "778": [423, 439, 463], "77827941": 468, "778279410038923": 468, "779": [440, 463], "7796942": 486, "77e": [442, 463], "78": [459, 468, 469, 477, 485], "780": [31, 121], "7800e": 439, "7804888e": 466, "78083": [134, 135], "780e": [121, 459], "78121623382": 551, "78121915957": 552, "78122305073": 553, "78188": 443, "78188096": 94, "782": 476, "782627": 553, "7827941": 468, "78279410038923": 468, "783": [423, 463, 486], "78332719": 449, "78333": 449, "783587001383003": 475, "783e": 449, "784": [424, 440, 459], "7843137254901955": 453, "78499999999997": 520, "785": 520, "7853981633974483": 553, "787": [66, 165], "7872234642813915e": 457, "7875405607868806": 472, "7876233e": 466, "788": 463, "7887840e": 466, "788e": 463, "789": 423, "78910994": 94, "7894": 449, "78952750835169": 459, "78e": 470, "79": [436, 463], "790": [423, 439], "791": 424, "7913e": 439, "7922": 435, "793": 424, "79432823": 471, "79469899": 449, "7947": 443, "79470": 449, "795": 439, "796": [424, 470], "797": 424, "7972": 467, "798": 424, "798218": 435, "7990194e": 466, "7997221e": 466, "799999952316284": 463, "7c": 468, "7d": 463, "7e": [463, 470, 471], "7e955f": 405, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 66, 85, 87, 88, 99, 102, 106, 107, 108, 112, 124, 135, 139, 140, 189, 196, 228, 230, 295, 366, 370, 373, 374, 383, 406, 407, 410, 412, 413, 417, 418, 419, 422, 423, 424, 427, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 493, 495, 504, 509, 513, 517, 526, 537, 545, 561], "80": [168, 439, 441, 442, 443, 464, 468, 476, 509, 536], "800932": 463, "801": [434, 474, 486, 509], "801668796295": 463, "802": [470, 486], "803": [443, 524], "8031431e": 466, "8037638e": 466, "803921568627494": 453, "804": 470, "804492": 455, "80492": 135, "805": 459, "80571": 134, "8062607e": 466, "80683246": 466, "8069e": 447, "807201": 486, "8073e": 459, "8075": [463, 486], "8075185": 463, "8086": 443, "808687936570502e": 465, "80871364": 94, "8090746": 475, "809505": 463, "80982039": 466, "81": [413, 434, 526], "810": [424, 463], "810000": 455, "810e": 463, "811": 424, "8115337251905373e": 465, "812": 424, "812075194992371e": 465, "8122169596532167e": 465, "8122425483643125e": 465, "8122e": 465, "812358724314062e": 465, "8129257829574434e": 465, "812951371538087e": 465, "813": 424, "814": 424, "8150": 486, "8157971601581226e": 465, "816": [424, 450], "8160964882165554": 293, "81699e": 435, "816e": 463, "818388e": 486, "81847286": 460, "818e": 437, "819": 463, "81e": 526, "82": [66, 405, 459, 463, 513], "820": 424, "8205513": 475, "820562952023891": 293, "8222980e": 466, "823": 439, "82352941176471": 453, "824": [130, 424, 470], "8241471833009617": 472, "825": [424, 435, 463], "8256": 486, "826": 424, "826414166666": 91, "827": [424, 434, 484, 487], "8272": 488, "82739": 443, "827e": 135, "8290458e": 466, "8293": 486, "82946153": 486, "82e": 448, "83": [30, 66, 81, 83, 91, 99, 102, 106, 107, 165, 168, 183, 184, 193, 196, 439, 440, 441, 443, 448, 457, 464, 467, 468, 469, 477, 478, 484, 485, 504, 507, 509, 510, 513], "830": 424, "8300": 486, "831": 424, "832": 424, "83242471": 466, "833": [424, 440], "833333333336": 460, "833e": 443, "834": 424, "8341884287660133": 472, "8349780e": 466, "835": 424, "835e": 449, "835fals": 437, "836": [424, 443, 460, 463], "836731": 463, "8369650e": 466, "837": [424, 470], "8377268e": 466, "838": 443, "8383396349722769": 293, "84": [24, 405, 439, 441, 449, 463, 470, 513], "840": [424, 443], "841": 463, "84196311": 94, "842": [424, 463], "84233": 443, "842x": 136, "843": [59, 435, 460], "843137254902004": 453, "843e": 66, "8441040e": 466, "844770648146": 91, "8449575657133206": 293, "845": 425, "84529": 463, "8455480e": 466, "845693": 435, "846": [443, 463, 561], "847": 424, "8475576e": 466, "8475650e": 466, "84e": 447, "85": [85, 88, 431, 449, 517, 518], "851": 424, "85157506": 486, "8515948e": 466, "85188496e": 466, "85202": 486, "85287": 476, "852e": 463, "854": 424, "854166666664": 460, "85416667": 458, "85469291": 94, "855": 424, "85527": 449, "85527359": 449, "8555500e": 466, "855887646638273e": 484, "85624": 444, "85625": 444, "8568": 486, "856e": 463, "8570719e": 466, "85722435185": 463, "858": 424, "858e": 463, "859": [424, 439], "85900": 449, "85900392": 449, "85925": 486, "8593054": 463, "85e": 463, "86": [437, 439, 440, 442, 443, 468, 486, 497], "860": 463, "861": 486, "861001": 519, "86111111": 458, "861150": 437, "8613613e": 466, "86178": 134, "8620": 455, "8623": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "862745098039234": 453, "8635091105637": 459, "864": [424, 439, 486], "865": [424, 443], "86676": 476, "8669": 435, "867": [434, 438], "8673": 449, "868": [424, 463], "86831929": 94, "8699": 435, "8699165e": 466, "87": [66, 449, 455, 468, 485], "870": [66, 424], "871": 424, "872": 424, "872e": 443, "873": 440, "8733348": 475, "873581766271": 450, "873659477745188": 472, "874": 436, "875": 424, "876": 470, "8767": 443, "8769240e": 466, "87710186": 94, "877563": 463, "878": [463, 470], "87897": 449, "87897418": 449, "8799800e": 466, "87e": 21, "88": [405, 427, 439, 441, 449, 450, 463, 468, 486], "881": [424, 435, 443], "88113384": 445, "8815212313941426": 472, "882": [66, 443], "882352941176466": 453, "883": 424, "8834862e": 466, "883e": 66, "884": 424, "88470839": 471, "885": 424, "886": 463, "8865": 486, "88781": 443, "888": 424, "8885138e": 466, "889": 463, "8893600e": 466, "889e": 443, "88e": [437, 463], "89": [33, 440, 468], "8908866e": 466, "8909e": 459, "890e": 66, "892": [439, 470], "89243456": 486, "8926": 486, "89287": 435, "893": 424, "894": 437, "8943121e": 466, "89492144e": 465, "895": 460, "8954039e": 466, "89595846": 471, "89709472": 486, "898": 424, "8986348363207728": 472, "89873": 449, "8989213": 449, "898e": 463, "899": [66, 445], "8999": 449, "899a": 269, "89e": 464, "8e": [437, 447, 450, 452, 470, 476, 545], "9": [31, 33, 35, 66, 81, 85, 88, 134, 189, 228, 230, 325, 331, 363, 370, 371, 375, 383, 402, 408, 410, 421, 424, 426, 429, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 512, 519, 523, 524, 525, 532, 535, 548, 556, 561], "90": [57, 66, 389, 442, 448, 449, 463, 468, 471, 488], "900": 463, "9002269877996247": 460, "900269": 466, "9023670e": 466, "90242058e": 464, "9032163": 84, "904": 486, "905": 463, "9053655e": 466, "9053906e": 466, "906": [424, 463], "90605275e": 476, "90685": 443, "907": 463, "9074812e": 466, "9077294": 475, "908": [434, 459, 461], "908700583573673": 484, "90e": [99, 440, 447, 464], "91": [442, 468, 473, 513], "910": 439, "911": 424, "912": 463, "912525e": 486, "912779907405": 463, "912868843587422e": 457, "913": 439, "913196574074": 457, "914": 66, "915": 463, "91507": [99, 464], "9163195e": 466, "91719": 464, "917669": 541, "918": 66, "918365": 463, "919": 424, "919e": 463, "91e": 470, "92": [135, 442, 443, 468, 475], "920": 439, "9205875e": 466, "921": [434, 438, 440], "9215375e": 466, "92234009259": [402, 457], "923e": 443, "924": 440, "9240e": 471, "92490": 443, "925106": 449, "925e": 443, "9269494e": 466, "9277492e": 466, "928": 463, "9280475e": 466, "929": [435, 440], "93": [66, 119, 121, 442, 443, 468, 475], "93026": 463, "9303": [463, 486], "931": 291, "93128e": 435, "932": 424, "93271046296": 457, "933": 424, "9332549000000": 486, "9343": 435, "935826709880043": 456, "936553": 550, "93702": 476, "938": [434, 464, 474], "9382336444241555": 472, "938e": [449, 463], "939": [280, 286], "9391360e": 466, "93988308": 94, "93e": 463, "94": [442, 463, 468, 475, 484, 486], "940e": 463, "940fals": 437, "94111838": 94, "941176470588236": 453, "94186555556": [402, 457], "943282347242818": 484, "9445e": 444, "9453950989269149": 472, "945e": 443, "9462": 449, "946923": 264, "94722599": 449, "94723": 449, "948683": 435, "9489822e": 466, "949": 470, "9499210e": 466, "94e": [449, 463], "95": [33, 66, 146, 152, 154, 155, 156, 158, 212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 442, 443, 449, 455, 463, 464, 465, 468, 469, 475, 517, 562], "950": 424, "9500979841335693": 293, "95024543e": 465, "952": 66, "9529719e": 466, "953": 470, "95421509259": 457, "95451985e": 121, "9546285068162436": 472, "95615": 435, "957": 66, "9580e": 441, "95883": 486, "959198": 463, "959d": [52, 53], "96": [405, 442, 464, 468, 526], "9606540e": 466, "960784313725491": 453, "9608912e": 466, "9619812963": 457, "965e": 443, "966": 424, "96602": 444, "967546": 443, "9677107409819438": 293, "96814": 486, "96833546296": [463, 476], "968488": 291, "969": [449, 463], "96e": 437, "96r": 468, "97": [442, 463, 466, 472, 484, 485], "970": 525, "97003": 486, "970189": 529, "97054": 443, "970e": 463, "97116": 449, "9711e": 459, "973": 463, "9733e": 455, "97369425926": 457, "974": 440, "9741e": 448, "974e": 463, "975": 424, "97529": 134, "97596": 443, "976": 424, "97749": 449, "97749371": 449, "9776920e": 466, "979": [66, 424, 468], "97934": 443, "97978": 81, "97e": 463, "98": [81, 334, 441, 442, 443, 447, 457, 459, 466, 484], "980": 66, "9803921568627443": 453, "98049": 443, "98149518519": 457, "9816452e": 466, "982075849517389e": 471, "98258": 443, "982826": 440, "9833462074166": 463, "9834338e": 466, "98359208475904647": 449, "98429": 443, "9845": 435, "9847406e": 466, "985": [424, 437], "985502122122975": 472, "9864771491419372": 484, "9876": 435, "98772": 134, "988": [424, 463, 470], "988409870698051e": 52, "9890": 486, "98e": 463, "99": [334, 442, 443, 444, 455, 485, 486], "991": 463, "9910796e": 466, "9912648e": 466, "9912712e": 466, "993": 436, "9931": 486, "994": 424, "9944e": 455, "994e": 463, "995": 470, "9952623149688797": 484, "9968e": 459, "9969731e": 466, "997": [424, 434, 467, 474], "9977859e": 466, "9978": 486, "998": 450, "99848e": 476, "999": [50, 155, 158, 463], "99919925926": 230, "99996948242188": 439, "9999912037958": 449, "999999": 463, "99999994": 84, "9999999995": 463, "9999999997835": 436, "999999999997": 451, "9999999999977": 463, "9999999999978": 458, "9999999999998": 463, "99999999999994": 463, "99999999999999": [442, 463], "99e": 463, "9e": [437, 463, 545], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 85, 86, 87, 88, 89, 96, 97, 98, 99, 101, 102, 105, 106, 107, 119, 120, 121, 129, 134, 135, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 206, 207, 209, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 277, 279, 287, 295, 304, 355, 356, 357, 359, 360, 367, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 404, 406, 410, 411, 412, 413, 414, 417, 419, 420, 423, 424, 425, 426, 428, 430, 431, 432, 435, 436, 439, 441, 443, 447, 449, 450, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 483, 485, 486, 488, 496, 497, 498, 500, 501, 509, 510, 512, 513, 515, 517, 554, 555, 558, 559, 562], "AND": [469, 470], "And": [269, 366, 369, 384, 386, 392, 397, 436, 437, 439, 440, 447, 451, 453, 459, 464, 465, 468, 469, 471, 475, 477, 484, 485, 486], "As": [81, 295, 325, 366, 367, 369, 374, 378, 379, 380, 382, 384, 392, 393, 395, 402, 407, 426, 435, 436, 439, 440, 441, 443, 444, 445, 449, 451, 452, 456, 457, 458, 459, 462, 463, 464, 465, 467, 468, 471, 473, 476, 478, 484, 486, 500, 509, 562], "At": [253, 380, 383, 392, 393, 396, 410, 451, 468, 475, 505, 558], "But": [366, 371, 374, 380, 385, 393, 396, 402, 426, 439, 440, 465, 473, 475, 484, 488, 560], "By": [19, 20, 26, 50, 64, 85, 88, 98, 99, 102, 106, 107, 118, 122, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 162, 165, 172, 182, 184, 185, 186, 188, 194, 197, 198, 210, 211, 213, 214, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 239, 240, 241, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 363, 366, 392, 393, 394, 411, 412, 414, 451, 452, 456, 458, 465, 468, 473, 485, 507, 511, 517, 518, 519, 563], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 80, 85, 86, 88, 92, 96, 98, 99, 102, 106, 107, 114, 116, 118, 119, 121, 122, 123, 126, 127, 128, 129, 142, 143, 144, 150, 155, 158, 165, 170, 172, 175, 176, 178, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 238, 239, 240, 241, 242, 243, 245, 246, 250, 251, 252, 254, 255, 257, 258, 259, 261, 265, 266, 278, 280, 284, 286, 292, 298, 313, 365, 366, 367, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 407, 408, 409, 411, 412, 413, 414, 417, 424, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 453, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 480, 484, 485, 486, 488, 495, 496, 498, 500, 510, 512, 513, 518, 523, 555, 559, 560, 562, 563, 564], "IN": [89, 97, 238], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 116, 118, 119, 120, 121, 122, 124, 126, 129, 133, 134, 137, 142, 143, 144, 150, 153, 155, 158, 159, 161, 162, 165, 167, 168, 171, 172, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 203, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 276, 292, 295, 307, 308, 313, 352, 355, 359, 360, 361, 362, 366, 367, 368, 369, 371, 373, 374, 379, 380, 382, 383, 384, 387, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 425, 426, 427, 435, 436, 437, 439, 441, 442, 444, 447, 449, 452, 455, 457, 458, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 486, 498, 500, 511, 513, 519, 521, 534, 560, 561, 562, 563], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 81, 85, 86, 88, 91, 98, 100, 105, 121, 142, 161, 184, 186, 189, 192, 198, 206, 208, 265, 276, 308, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 402, 407, 408, 409, 410, 411, 412, 413, 414, 417, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 484, 485, 486, 496, 498, 500, 505, 508, 509, 510, 512, 513, 514, 517, 518, 523, 536, 555, 558, 559, 560, 561, 562, 563, 564], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 99, 102, 106, 107, 108, 110, 112, 119, 134, 142, 146, 153, 154, 155, 156, 158, 168, 171, 175, 176, 181, 185, 186, 188, 190, 193, 194, 197, 198, 200, 210, 211, 214, 217, 218, 220, 221, 222, 226, 230, 232, 233, 235, 239, 241, 243, 249, 253, 254, 256, 257, 258, 259, 262, 266, 278, 282, 284, 285, 303, 317, 322, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 401, 403, 407, 408, 409, 410, 414, 417, 419, 420, 421, 426, 428, 430, 431, 432, 435, 440, 445, 448, 450, 452, 455, 456, 460, 463, 464, 465, 467, 468, 469, 471, 473, 475, 476, 477, 478, 484, 485, 486, 488, 489, 496, 497, 499, 500, 504, 505, 507, 509, 513, 527, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544, 557, 558, 559, 560, 561, 562, 564], "Its": [142, 378, 392, 393, 417, 419, 453, 458, 473, 485, 502, 503, 504, 506], "NOT": [469, 500], "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 377, 387, 390, 391, 425, 427, 433, 453, 463, 465, 467, 468, 486], "Not": [102, 106, 107, 187, 193, 195, 374], "ON": [99, 102, 128, 172, 173, 174, 182, 364, 372, 419, 435, 439, 442, 445, 449, 457, 458, 460, 465, 467, 473, 500, 509, 559, 561, 563], "OR": [99, 106, 464, 469, 470], "Of": [366, 369, 402, 447, 464, 468, 476, 560, 563], "On": [59, 160, 166, 167, 170, 278, 285, 291, 366, 367, 372, 374, 381, 382, 395, 397, 398, 399, 400, 421, 447, 448, 465, 480, 562], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 98, 99, 102, 106, 107, 216, 238, 321, 366, 367, 372, 374, 375, 376, 377, 380, 382, 383, 384, 392, 431, 436, 440, 445, 457, 467, 468, 469, 484, 486, 509, 513, 536, 560, 562], "Ones": 295, "Or": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 367, 385, 386, 440, 447, 464, 468, 475, 476, 498], "Such": [378, 466, 504], "That": [16, 19, 20, 82, 101, 120, 203, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 366, 367, 371, 380, 383, 386, 465, 486, 560], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 62, 68, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 162, 166, 167, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 269, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 291, 295, 307, 313, 315, 316, 319, 334, 349, 350, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 403, 406, 407, 409, 410, 411, 412, 413, 414, 417, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 484, 485, 486, 488, 489, 490, 491, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 517, 519, 521, 522, 523, 526, 532, 534, 535, 536, 545, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565], "Their": 469, "Then": [66, 99, 104, 106, 369, 371, 376, 379, 381, 382, 383, 384, 390, 399, 436, 439, 447, 448, 451, 455, 457, 465, 469, 471, 473, 485], "There": [85, 88, 134, 366, 367, 371, 372, 373, 375, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 396, 398, 399, 425, 449, 453, 456, 462, 463, 464, 465, 466, 467, 469, 470, 477, 488, 496, 497, 500, 513], "These": [92, 190, 268, 366, 367, 371, 372, 377, 379, 380, 381, 382, 386, 387, 392, 409, 411, 412, 413, 417, 425, 431, 435, 448, 450, 451, 456, 459, 462, 464, 466, 468, 471, 472, 477, 480, 488, 505, 510, 512, 513, 561, 562, 563], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 85, 88, 97, 101, 105, 118, 120, 122, 126, 184, 196, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 268, 278, 356, 357, 368, 369, 373, 374, 377, 378, 379, 381, 382, 387, 388, 389, 390, 391, 392, 396, 397, 399, 401, 402, 403, 407, 408, 409, 412, 413, 417, 419, 425, 426, 428, 431, 435, 436, 437, 439, 440, 441, 442, 444, 445, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 480, 484, 486, 496, 497, 498, 501, 505, 507, 509, 510, 517, 558, 560, 561, 562], "With": [81, 366, 375, 376, 392, 413, 426, 473, 496, 562], "_": [99, 106, 124, 226, 245, 366, 380, 390, 392, 442, 445, 462, 463, 465, 470, 473, 496, 509], "_0": [50, 51], "_1": [102, 107, 497], "_2": [102, 107], "__all__": 366, "__array__": 295, "__array_ufunc__": [451, 478, 548], "__attributes__": [85, 88], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 307, 372, 377, 394, 413], "__class__": [366, 390, 462, 494], "__dict__": [16, 82, 101, 120, 366], "__enter__": 344, "__eq__": 419, "__exit__": 344, "__fields__": [16, 82, 101, 120, 393], "__getitem__": [376, 377, 378], "__init__": [16, 82, 101, 120, 193, 265, 366, 372, 378, 390, 428], "__int__": 313, "__len__": 376, "__main__": [248, 366, 473, 482, 560], "__name__": [366, 445, 457, 458, 459, 462, 482, 494, 560], "__neq__": 419, "__pydantic_extra__": [16, 82, 101, 120], "__pydantic_fields_set__": [16, 82, 101, 120], "__repr__": [366, 412, 426], "__str__": [366, 378, 393, 409], "__subclasses__": 462, "__version__": 401, "_basemodel__context": [16, 82, 101, 120], "_build": [367, 396], "_check_interv": 431, "_compute_flux_spati": 417, "_covari": [216, 238], "_data": 390, "_dom_class": [447, 455, 468, 484, 485], "_energy_t": 390, "_errn": [122, 123, 126, 127], "_errp": [122, 123, 126, 127], "_evaluate_timevar_sourc": 431, "_f_cash_root_cython": 290, "_factr": 465, "_fields_set": [16, 82, 101, 120], "_i": 124, "_k": [99, 106, 496], "_l": 496, "_lat": 366, "_lon": 366, "_map": 359, "_model": 119, "_new_attribut": 366, "_old_attribut": 366, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 82, 101, 120], "_phi": 366, "_prior": 394, "_propagate_error": 416, "_reco": 366, "_repr_html_": 366, "_row_index": 68, "_sample_coord_time_energi": 431, "_scan": 465, "_time_group": 390, "_time_t": 390, "_true": 366, "_type": [394, 473], "_types_namespac": [16, 82, 101, 120], "_was_": [16, 82, 101, 120], "_wc": 524, "_weight": 394, "a4h3oojw": 447, "a_": [102, 107, 145, 502, 505, 562], "a_off": 562, "a_on": 562, "a_scan": 473, "aa": [85, 88, 295, 392], "aaguasca": 428, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 63, 64, 81, 86, 114, 122, 136, 145, 198, 206, 208, 235, 268, 269, 278, 285, 462, 463], "abc": [18, 56, 96, 117, 164, 183, 188, 467], "abcmeta": 467, "abdalla2018": [509, 510, 559], "abeysekara": 59, "abil": [390, 473], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 376, 381, 384, 436, 455, 457, 458, 473, 480, 560], "about": [11, 13, 16, 82, 101, 120, 140, 145, 225, 230, 325, 366, 369, 371, 375, 382, 383, 385, 386, 387, 391, 392, 394, 395, 396, 401, 402, 421, 422, 426, 427, 428, 437, 443, 444, 445, 448, 449, 451, 463, 466, 468, 471, 476, 485, 486, 488, 496, 497, 560, 563], "abov": [29, 44, 52, 53, 81, 118, 120, 121, 124, 128, 129, 134, 135, 160, 195, 355, 357, 366, 367, 372, 375, 376, 378, 380, 382, 383, 384, 385, 386, 390, 398, 399, 402, 435, 449, 451, 452, 453, 457, 460, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 484, 494, 496, 497, 504, 513, 559, 560, 561, 562, 563], "abramowski": 145, "abruptli": [366, 391], "abs_path": 303, "absenc": [381, 445, 467, 469, 509, 561], "absolut": [80, 88, 103, 139, 140, 141, 142, 145, 147, 149, 152, 157, 185, 186, 188, 190, 194, 197, 198, 299, 325, 343, 347, 498], "absolute_tim": 564, "absopt": 384, "absorb": [266, 376, 389, 424, 526], "absorbedspectralmodel": [411, 424], "absorbt": 389, "absorpt": [218, 384, 414, 424, 434, 514, 546], "abstract": [56, 57, 59, 96, 117, 156, 164, 169, 183, 185, 188, 197, 278, 377, 413, 512], "abstractsetintstr": [16, 82, 101, 120], "acada": 392, "academ": [130, 291], "accept": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 85, 88, 101, 102, 103, 107, 120, 160, 177, 182, 184, 185, 186, 188, 196, 197, 198, 216, 238, 279, 364, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 418, 422, 431, 435, 440, 441, 442, 445, 449, 452, 464, 467, 468, 476, 496, 512, 518, 536, 561, 562], "acceptance_off": [102, 103, 107, 160, 170, 378, 435, 436, 439, 442, 445, 496, 562], "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 63, 64, 65, 66, 80, 81, 85, 86, 88, 99, 153, 183, 184, 193, 196, 285, 303, 366, 374, 375, 376, 377, 379, 382, 390, 396, 398, 401, 406, 407, 414, 421, 422, 424, 425, 431, 432, 437, 439, 440, 441, 447, 463, 465, 466, 470, 471, 475, 478, 484, 485, 486, 495, 500, 511, 512, 513, 558], "accessor": 468, "accident": [476, 560], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 71, 85, 88, 99, 102, 106, 107, 114, 119, 137, 143, 153, 160, 184, 190, 206, 208, 292, 355, 376, 377, 380, 381, 384, 390, 392, 411, 420, 432, 445, 457, 464, 467, 471, 472, 480, 496, 497, 500], "accordingli": [378, 392, 408, 414, 469], "account": [99, 102, 106, 107, 118, 162, 178, 216, 238, 253, 277, 279, 285, 341, 374, 379, 382, 390, 392, 413, 430, 432, 435, 436, 441, 445, 447, 453, 459, 460, 465, 467, 469, 485, 496, 498, 561, 562], "accur": [384, 427, 447, 465, 507], "accuraci": [380, 465, 500], "aceptance_off": 378, "acero": [384, 407, 409, 411, 414, 417, 419, 424, 426, 432], "achiev": [16, 82, 101, 114, 120, 160, 356, 357, 366, 375, 376, 377, 378, 379, 380, 382, 389, 392, 414, 468, 471, 472, 510], "acknowledg": [369, 392, 403], "acquir": 402, "acquisit": 559, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 114, 155, 158, 366, 375, 378, 396, 450, 459, 470, 476, 496, 512, 521, 559], "act": [88, 382, 470, 523], "action": [160, 371, 376, 382, 392, 396, 417, 459], "activ": [88, 285, 369, 383, 397, 398, 400, 401, 402, 411, 428, 456, 500], "actual": [173, 341, 342, 343, 365, 366, 367, 371, 375, 377, 379, 381, 382, 390, 391, 393, 395, 442, 452, 455, 458, 464, 465, 467, 468, 469, 473, 476, 477, 485, 486, 507, 509, 559, 560, 562, 564], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 80, 81, 82, 85, 88, 99, 101, 102, 106, 107, 110, 111, 113, 120, 121, 185, 186, 188, 193, 194, 197, 198, 366, 367, 369, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 390, 392, 406, 407, 408, 410, 411, 412, 414, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 441, 447, 448, 466, 467, 470, 471, 472, 473, 477, 496, 513, 563], "adapt": [114, 160, 203, 375, 376, 379, 380, 385, 386, 388, 389, 392, 395, 402, 407, 408, 410, 411, 412, 414, 415, 417, 420, 423, 424, 426, 428, 430, 431, 432, 464, 466, 468, 469, 510], "adaptiveringbackgroundestim": [170, 372], "adaptiveringbackgroundmak": [163, 411, 510], "adass": 386, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 77, 81, 82, 85, 86, 88, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 119, 120, 121, 139, 140, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 158, 162, 185, 186, 188, 192, 194, 197, 198, 204, 216, 238, 253, 292, 335, 354, 363, 365, 366, 367, 369, 371, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 392, 394, 395, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 442, 447, 448, 451, 455, 457, 460, 464, 466, 467, 468, 469, 471, 473, 475, 486, 490, 491, 500, 513, 528, 560, 563], "add_artist": [471, 517, 518], "add_cbar": [99, 102, 106, 107, 121, 139, 140, 142, 145, 146, 147, 152, 153, 154, 156, 185, 186, 188, 194, 197, 198, 354, 443, 444, 445, 447, 449, 455, 460, 462, 464, 466, 467, 468, 470, 471, 476, 477, 484, 485, 513, 516, 517, 518, 521, 522, 524], "add_column": [85, 88], "add_enabled_unit": [435, 442, 444, 447, 449, 455, 459, 475], "add_index": [85, 88], "add_loc": 366, "add_row": [85, 88], "add_subplot": 354, "addit": [16, 19, 20, 26, 43, 82, 85, 86, 88, 99, 101, 102, 106, 107, 110, 118, 120, 122, 127, 157, 185, 186, 188, 191, 194, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 366, 369, 370, 371, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 393, 395, 396, 397, 398, 399, 408, 409, 411, 413, 414, 417, 418, 425, 426, 428, 431, 432, 437, 441, 453, 460, 463, 464, 465, 468, 470, 471, 473, 475, 476, 485, 486, 496, 498, 500, 507, 512, 513, 557, 563], "addition": [127, 378, 464, 465, 468, 470, 471], "address": [375, 378, 379, 380, 382, 392, 473, 499], "adequ": 193, "adher": 369, "adjac": [137, 190, 417, 458, 468, 509], "adjust": [16, 66, 185, 186, 188, 194, 197, 198, 375, 377, 389, 440, 456, 464, 471, 472, 484, 500, 507], "admit": 386, "adonath": 372, "adopt": [37, 379, 382, 387, 441, 451, 452, 462], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 81, 86, 114, 122, 145, 235, 268, 269, 278, 285], "adult": 366, "advanc": [378, 382, 383, 386, 394, 398, 466, 468, 500, 559, 560], "advantag": [374, 380, 383, 390, 417, 468, 473, 536, 560], "advanteg": 378, "advertis": 395, "advic": [366, 392], "advis": [367, 392, 465, 473, 480], "advoc": 366, "aeff": [16, 80, 85, 86, 102, 107, 145, 171, 179, 376, 378, 379, 413, 414, 436, 439, 440, 441, 444, 445, 447, 449, 458, 466, 467, 475, 477, 478, 484, 485, 502, 507, 509, 510, 559], "aeff2d": 144, "aeff_2d": [80, 85, 145, 475, 478], "aeff_3d": 466, "aeff_ev": 466, "aeff_new": 466, "aeff_perc": [171, 436, 439, 440, 449, 458, 467, 477, 509], "aegi": 218, "af": 362, "affect": [366, 374, 378, 380, 391, 408, 409, 420, 429, 473], "affili": [380, 392, 428], "afmhot": [470, 486], "aforement": 392, "after": [16, 45, 50, 51, 52, 53, 82, 88, 97, 99, 101, 102, 106, 120, 155, 158, 285, 307, 325, 347, 350, 366, 369, 371, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 402, 406, 413, 415, 416, 417, 419, 425, 427, 428, 429, 437, 447, 456, 458, 465, 468, 470, 475, 477, 478, 500, 560, 564], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 299, 366, 490], "again": [99, 102, 106, 107, 155, 369, 376, 378, 380, 382, 387, 393, 397, 412, 413, 416, 423, 428, 437, 439, 440, 447, 452, 453, 468, 471, 473, 476, 484, 486, 513, 560], "against": [16, 82, 101, 120, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 196, 197, 198, 367, 369, 383, 389, 396, 463, 476, 484, 495, 498], "agent": 382, "agglom": 13, "aggreg": 393, "agil": 379, "agn": [130, 283, 380, 439, 456, 457, 459, 475], "agnost": 465, "ago": 373, "agre": [187, 190, 369, 371, 380, 392], "agreement": [366, 369, 387, 460], "aguasca": [419, 428, 429, 430, 431], "aharonian": 450, "ahead": [380, 406], "ahelp": 203, "aim": [375, 376, 392, 447, 451, 462, 472, 488, 559], "air": 475, "ait": [184, 185, 186, 482], "aitoff": 380, "ajnqvk6": 467, "aka": 486, "al": [26, 33, 59, 130, 145, 218, 284, 285, 291, 376, 443, 450, 456, 488, 559], "albert": 559, "albert2007": 559, "alexi": [414, 417], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 85, 88, 114, 129, 160, 203, 278, 366, 372, 378, 379, 380, 385, 393, 409, 414, 422, 423, 424, 443, 456, 465, 477, 498, 512, 558, 562], "alia": [16, 56, 82, 101, 120, 369, 486], "alias": [16, 56, 82, 101, 120, 465], "align": [85, 88, 97, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 154, 156, 157, 184, 185, 186, 188, 190, 194, 196, 197, 198, 366, 466, 469, 471], "alisha": 419, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 92, 93, 97, 99, 100, 101, 102, 104, 105, 106, 107, 118, 119, 120, 121, 122, 126, 127, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 159, 165, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 275, 338, 339, 340, 341, 342, 343, 353, 362, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 444, 445, 447, 449, 450, 451, 455, 457, 459, 460, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 490, 496, 498, 500, 509, 511, 512, 513, 514, 536, 557, 560, 561, 562], "all_quant": [119, 121], "allclos": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 185, 186, 187, 188, 190, 194, 195, 197, 198, 341], "alloc": [186, 194, 198], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 85, 88, 101, 114, 119, 120, 121, 128, 129, 155, 158, 184, 189, 191, 318, 366, 367, 369, 371, 372, 373, 376, 377, 378, 379, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 408, 410, 411, 412, 413, 414, 417, 419, 426, 427, 428, 431, 435, 439, 450, 459, 464, 465, 466, 467, 468, 469, 485, 496, 498, 500, 507, 512, 513, 557, 558, 560, 565], "allow_extra": 189, "allow_pickl": [16, 82, 101, 120], "allowed_channel": [26, 462], "allski": [81, 468], "alma": 385, "almeida": 414, "almost": [365, 367, 369, 380, 476, 486], "alon": 371, "along": [67, 98, 119, 121, 125, 137, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 156, 157, 185, 186, 188, 194, 196, 197, 198, 283, 284, 285, 306, 307, 317, 327, 328, 375, 376, 390, 428, 431, 444, 453, 463, 464, 466, 467, 470, 471, 497, 512, 513, 529, 559], "alpha": [21, 27, 28, 48, 99, 102, 106, 107, 160, 182, 221, 222, 231, 232, 233, 246, 279, 289, 292, 363, 364, 378, 389, 391, 417, 424, 435, 436, 437, 439, 441, 442, 445, 447, 448, 452, 460, 463, 465, 473, 517, 526, 528, 530, 532, 534, 535, 536, 551, 552, 561, 562, 563], "alpha_": [102, 107], "alpha_1": [102, 107], "alpha_2": [102, 107], "alpha_norm": [218, 389, 526], "alphabet": [383, 392, 407, 408, 409, 410, 411, 412, 413, 414, 417], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 85, 88, 101, 120, 203, 261, 262, 263, 265, 366, 372, 373, 374, 377, 378, 379, 380, 381, 383, 386, 387, 388, 390, 393, 395, 396, 426, 437, 441, 443, 452, 460, 462, 463, 464, 468, 469, 470, 471, 475, 476, 477, 486, 488, 513, 524], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 92, 114, 118, 119, 121, 122, 134, 136, 157, 162, 168, 183, 190, 192, 193, 203, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 276, 295, 303, 308, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 417, 425, 426, 427, 431, 435, 436, 439, 440, 441, 442, 443, 447, 449, 450, 451, 452, 453, 456, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 484, 485, 488, 496, 497, 498, 499, 500, 507, 509, 512, 513, 536, 539, 557, 559, 560, 561, 562, 564], "alt": [81, 83, 86, 91, 92, 366, 564], "alt_pnt": 88, "altaz": [81, 83, 91, 148, 366, 466, 564], "altaz_fram": [81, 91], "altaz_from_t": [81, 91], "altaz_interpol": 91, "altern": [80, 275, 365, 366, 369, 371, 375, 399, 417, 439, 441, 443, 450, 463, 465, 466, 468, 470, 475, 496, 497, 560], "although": [366, 379, 380, 381, 383, 386, 390, 465, 475, 522, 523, 557, 564], "altitud": 436, "alwai": [81, 85, 88, 142, 190, 193, 200, 206, 208, 224, 366, 367, 369, 372, 373, 374, 376, 377, 378, 380, 383, 391, 392, 399, 406, 413, 428, 429, 431, 442, 443, 447, 455, 462, 465, 467, 468, 470, 472, 473, 480, 498, 512, 513], "am": 375, "ambigu": [380, 425], "amend": 369, "among": [80, 85, 88, 99, 102, 106, 107, 382, 386, 387, 389, 394, 414, 465, 559], "amount": [373, 380, 394, 500], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 252, 553], "ampl_2": [146, 466], "ampl_3": [146, 466], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 67, 98, 122, 127, 129, 185, 186, 188, 197, 198, 210, 217, 220, 222, 226, 233, 236, 243, 244, 245, 252, 254, 257, 258, 259, 269, 275, 287, 377, 378, 381, 389, 436, 437, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 463, 464, 465, 470, 471, 475, 476, 484, 485, 486, 498, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 530, 531, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562], "amplitude_maximum_signific": 456, "amplitude_maximum_vari": 456, "amplitude_ref": 460, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 99, 100, 101, 102, 105, 106, 107, 108, 110, 112, 119, 120, 121, 122, 123, 124, 126, 127, 129, 133, 134, 135, 140, 142, 143, 144, 145, 147, 150, 153, 155, 157, 158, 161, 165, 168, 170, 173, 175, 176, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 206, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 271, 278, 283, 285, 293, 295, 299, 313, 324, 328, 344, 350, 356, 357, 359, 362, 365, 367, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 403, 406, 407, 410, 411, 412, 413, 414, 417, 419, 420, 421, 424, 425, 426, 428, 429, 431, 432, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 455, 456, 457, 458, 459, 460, 463, 465, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 488, 490, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563], "anaconda": [383, 397, 398], "analog": [85, 88, 185, 186, 188, 194, 197, 198, 513], "analogi": 387, "analys": [80, 365, 366, 375, 376, 377, 378, 380, 384, 386, 388, 389, 394, 402, 403, 409, 410, 411, 413, 414, 424, 426, 429, 439, 440, 447, 458, 459, 462, 463, 469, 471, 475, 476, 484, 485, 488, 496, 560], "analysi": [6, 16, 57, 66, 69, 71, 72, 81, 99, 101, 102, 106, 107, 111, 113, 167, 171, 365, 366, 367, 370, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 393, 395, 396, 397, 398, 399, 402, 403, 406, 407, 408, 410, 411, 412, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 437, 438, 443, 444, 445, 446, 450, 451, 453, 454, 455, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 485, 486, 488, 497, 498, 500, 501, 505, 507, 508, 509, 510, 512, 513, 539, 557, 559, 560, 562], "analysis3d": 427, "analysis_1": [434, 484, 487], "analysis_1d": 457, "analysis_2": [367, 434, 485, 487], "analysis_3d": [426, 434, 447, 454, 457], "analysis_joint": 447, "analysis_mwl": [434, 448, 454], "analysis_stack": 447, "analysisconfig": [15, 367, 440, 444, 445, 447, 457, 484], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 145, 146, 154, 156, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 379, 384, 432, 466, 471, 498, 519, 563], "analyz": [376, 477, 559], "andrea": 379, "andrew": 426, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 67, 81, 87, 88, 93, 99, 102, 111, 113, 114, 118, 125, 129, 139, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 158, 161, 168, 169, 171, 173, 183, 184, 186, 191, 193, 196, 198, 199, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 263, 265, 268, 323, 353, 366, 372, 380, 382, 389, 393, 405, 407, 408, 409, 426, 435, 436, 439, 442, 448, 451, 452, 458, 463, 468, 469, 471, 472, 475, 476, 500, 505, 509, 512, 513, 517, 518, 519, 522, 523, 559], "angle_incr": 168, "angular": [23, 99, 102, 111, 113, 124, 143, 144, 150, 155, 158, 161, 186, 193, 196, 198, 217, 225, 228, 263, 299, 302, 366, 382, 430, 441, 452, 460, 505, 506, 559], "angular_extens": 41, "angular_s": 513, "angular_separ": [389, 430, 432, 471], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 85, 88, 101, 116, 120, 126, 144, 167, 185, 186, 188, 193, 194, 196, 197, 198, 295, 318, 351, 365, 366, 367, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 392, 393, 395, 398, 399, 400, 401, 402, 406, 407, 425, 426, 427, 432, 440, 449, 450, 453, 457, 460, 464, 467, 468, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 488, 497, 498, 510, 512, 513, 528, 560, 564], "ann": [23, 425], "anna": 366, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 428, 471, 488], "annoi": [366, 560], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 355, 393, 465, 517], "announc": [366, 371, 373, 380, 382, 385, 387, 389, 391, 392, 395, 396], "annuli": [453, 513], "annulu": [123, 327, 513], "anonym": 369, "anoth": [19, 20, 26, 81, 84, 85, 88, 99, 102, 106, 107, 143, 144, 145, 150, 155, 157, 158, 187, 190, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 366, 380, 381, 382, 384, 386, 387, 390, 393, 397, 402, 411, 426, 460, 464, 468, 469, 471, 513, 560], "another_posit": 509, "answer": [465, 500], "anti": [468, 469], "anticip": 375, "anymor": 428, "anyon": [371, 373, 475], "anyth": [142, 382, 560], "anytim": [369, 408], "anywai": [369, 380], "anywher": [380, 383, 385, 496], "ap": [371, 383, 391], "apart": 381, "apertur": 559, "api": [224, 370, 372, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 391, 392, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 417, 421, 425, 426, 434, 436, 439, 440, 443, 449, 451, 458, 464, 468, 469, 470, 471, 474, 475, 476, 484, 486, 487, 496, 497, 498, 499, 507, 508, 512, 557, 558, 559, 560], "apj": [280, 286], "aplpi": 426, "apologis": [406, 407, 426], "app": [85, 88, 396, 402, 425], "appear": [85, 88, 366, 367, 374, 380, 393, 420, 431, 463], "append": [85, 88, 89, 97, 138, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 238, 378, 379, 381, 412, 431, 436, 439, 441, 442, 447, 448, 449, 451, 458, 459, 460, 464, 465, 467, 470, 471, 472, 473, 509], "append_ax": [139, 140, 142, 145, 146, 147, 152, 154, 156, 198, 354], "appendix": [30, 129, 145, 235, 269, 287, 443], "appl": [398, 400, 402], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 84, 85, 87, 88, 98, 99, 100, 102, 106, 107, 108, 111, 112, 113, 114, 118, 121, 122, 126, 129, 142, 143, 144, 150, 155, 157, 158, 162, 168, 171, 172, 185, 186, 188, 189, 193, 194, 196, 197, 198, 206, 208, 216, 224, 238, 253, 266, 276, 277, 279, 307, 308, 351, 355, 363, 366, 372, 373, 376, 377, 379, 381, 384, 390, 391, 392, 414, 419, 424, 425, 426, 427, 431, 435, 439, 441, 451, 458, 459, 460, 464, 467, 468, 469, 470, 471, 473, 475, 478, 485, 486, 498, 500, 545, 558, 561], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 85, 88, 366, 377, 392, 394, 413, 456, 465, 512, 559], "apply_async": [315, 316], "apply_edisp": 432, "apply_hysteresis_threshold": 469, "apply_irf": [253, 413], "apply_mask": 191, "apply_psf": [377, 410], "apply_standard_scal": 93, "apply_threshold_sensit": 118, "apply_union": 200, "approach": [85, 88, 129, 366, 372, 374, 378, 382, 387, 390, 391, 393, 431, 435, 439, 467, 480, 559, 562], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 184, 185, 186, 188, 197, 198, 295, 303, 367, 441, 445, 447, 468, 560], "approv": [372, 373, 374], "approx": [52, 53], "approxim": [129, 171, 172, 184, 185, 186, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 277, 279, 306, 377, 380, 408, 435, 465, 475, 498, 509, 518, 519, 522, 523, 559], "appveyor": 422, "apr": [388, 404], "april": [386, 393, 413], "apt": 399, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 66, 69, 72, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 93, 97, 98, 99, 101, 102, 105, 106, 107, 109, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 165, 166, 171, 172, 173, 178, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 275, 278, 283, 291, 295, 307, 313, 315, 327, 328, 341, 355, 357, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 485, 486, 488, 489, 490, 491, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 517, 518, 526, 536, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565], "arakelian": 284, "arang": [114, 381, 443, 458, 512], "arb": 473, "arbitrari": [191, 193, 194, 377, 389, 412, 425, 451, 464, 468, 473, 512, 513], "arbitrary_types_allow": [16, 82, 101, 120, 393], "arbitrarytypemetadata": 393, "architectur": [398, 400], "archiv": [392, 478, 485], "arcsec": 168, "arctan": 380, "area": [80, 86, 102, 104, 144, 145, 160, 171, 172, 179, 186, 194, 196, 198, 366, 367, 377, 421, 423, 435, 439, 451, 460, 467, 477, 478, 505, 512, 513, 559], "areasc": [424, 426], "aren": [342, 366, 380, 385, 386, 397, 398, 400], "arf": [103, 104, 107, 189, 190, 193, 194, 439, 513], "arf_ob": 103, "arffil": 103, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 82, 85, 88, 101, 106, 107, 120, 139, 140, 141, 145, 146, 147, 149, 152, 153, 154, 156, 157, 186, 187, 194, 211, 224, 236, 243, 244, 245, 318, 560], "arg_in_kwarg": 366, "argmax": 456, "argmin": 456, "argpars": [371, 560], "argsort": [85, 88], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 81, 82, 84, 85, 86, 88, 89, 90, 97, 98, 99, 101, 102, 105, 106, 107, 120, 121, 122, 124, 126, 138, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 161, 171, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 276, 293, 295, 307, 313, 315, 316, 353, 354, 355, 359, 360, 361, 362, 363, 369, 372, 378, 381, 413, 414, 417, 419, 425, 431, 432, 443, 447, 452, 465, 467, 468, 471, 472, 485, 498, 500, 511, 512, 513, 536, 560], "aris": [371, 382], "arithmet": [211, 377, 427, 468, 469, 471, 528], "arjun": [424, 425], "arm": [33, 34, 38, 45, 421], "arm64": [398, 400], "armstrong": 425, "arnau": [419, 428, 429, 430, 431], "around": [56, 134, 161, 184, 186, 196, 198, 307, 380, 381, 441, 460, 462, 465, 469, 477, 486, 500, 509, 512, 513], "arpit": 424, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 80, 81, 83, 85, 88, 89, 91, 96, 97, 98, 99, 106, 107, 114, 119, 121, 122, 123, 126, 127, 129, 134, 135, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 206, 210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 263, 264, 265, 266, 267, 276, 277, 279, 281, 291, 295, 306, 307, 308, 322, 323, 324, 328, 359, 360, 365, 366, 379, 380, 384, 390, 393, 402, 412, 425, 428, 430, 432, 442, 451, 452, 460, 463, 464, 465, 466, 468, 470, 471, 473, 475, 477, 478, 486, 512, 513, 520, 545, 548, 561, 562], "array_lik": [99, 106, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 280, 286, 292], "array_shap": [430, 432], "arriba": [418, 421, 422], "arriv": [215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 371, 379, 411, 412, 413, 451, 559, 563], "arrow": 558, "arrowprop": 517, "arrowstyl": 517, "artefact": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "arthmet": 377, "articl": [130, 136, 284, 291, 371, 436, 458], "artifact": [118, 186], "artifici": 451, "artist": [193, 216, 238, 517, 518], "arxiv": [63, 64, 171, 244, 245, 258, 259, 448, 462, 463, 467, 543, 544], "as_arrai": [85, 88], "as_artist": [193, 194, 471, 513, 517, 518], "as_energy_tru": [183, 184, 193, 196], "as_plot_cent": [187, 190, 195], "as_plot_edg": [187, 190, 195], "as_plot_label": [187, 190, 195], "as_plot_scal": 190, "as_plot_xerr": [187, 190, 195], "asanyarrai": 366, "ascii": [85, 88, 121, 366], "asimov": 473, "asinh": 443, "asinha": 80, "ask": [367, 369, 371, 373, 380, 382, 383, 386, 392, 401, 457, 486, 500, 501, 560], "asmooth": [114, 115, 385, 412, 423, 426], "asmoothestim": 387, "asmoothmapestim": [115, 387, 412, 414, 417, 443, 500], "aspect": [369, 392, 501, 560, 565], "assert": [187, 189, 190, 195, 341, 342, 343, 369, 377, 389, 468], "assert_allclos": 366, "assert_equ": 366, "assert_nam": [187, 189, 190, 195], "assert_quantity_allclos": [366, 421], "assess": [439, 441, 456], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 100, 105, 106, 184, 253, 263, 362, 366, 375, 378, 381, 393, 395, 436, 455, 457, 464, 468, 471, 473, 485, 486, 512], "assist": 382, "asso": [70, 72, 73, 75, 76], "assoc": 70, "assoc1": [72, 73, 76, 463, 486], "assoc2": [72, 73, 76, 486], "assoc_fgl": 76, "assoc_fhl": 76, "assoc_gam": 73, "assoc_gam1": [72, 76], "assoc_gam2": [72, 76], "assoc_gam3": [72, 76], "assoc_new": 75, "assoc_prob_bai": 463, "assoc_prob_lr": 463, "assoc_tev": [72, 73, 76], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 85, 88, 97, 99, 102, 119, 128, 130, 131, 132, 143, 144, 155, 158, 175, 176, 181, 194, 264, 295, 372, 382, 390, 391, 392, 393, 394, 431, 432, 436, 437, 439, 443, 448, 463, 464, 467, 468, 470, 471, 477, 486, 497, 498, 500, 513, 562], "association_catalog": [66, 463], "association_nam": [66, 463], "assum": [23, 50, 51, 52, 53, 66, 80, 81, 83, 92, 118, 119, 121, 129, 133, 136, 145, 157, 168, 182, 184, 185, 186, 188, 191, 195, 197, 198, 203, 259, 265, 268, 275, 322, 325, 366, 369, 378, 379, 381, 389, 390, 394, 402, 403, 435, 436, 439, 441, 442, 445, 451, 452, 453, 455, 458, 462, 466, 468, 471, 473, 476, 490, 496, 498, 505, 557, 562], "assumpt": [71, 92, 99, 102, 106, 107, 114, 128, 136, 380, 390, 505, 509, 561], "astri": 94, "astrisim": 379, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 122, 178, 185, 186, 188, 197, 198, 248, 266, 366, 367, 378, 385, 386, 390, 395, 409, 418, 422, 426, 428, 432, 441, 462, 466, 468, 475, 489, 490, 492, 493, 494, 497, 559], "astro_dark_matt": [386, 434, 462, 474], "astromodel": 488, "astronom": [13, 380, 387, 425, 559], "astronomi": [11, 269, 365, 376, 380, 384, 396, 403, 424, 436, 439, 445, 449, 467, 475, 500, 509, 510, 557, 558, 559, 560, 561, 562, 564, 565], "astrophys": [6, 23, 299, 381, 500, 558, 559], "astropi": [13, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 65, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 99, 102, 106, 107, 111, 113, 114, 119, 121, 123, 125, 126, 129, 134, 135, 142, 144, 153, 155, 168, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 229, 230, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 253, 254, 256, 257, 258, 259, 262, 264, 266, 267, 269, 278, 293, 294, 295, 325, 342, 343, 352, 356, 357, 361, 365, 367, 368, 369, 371, 372, 373, 377, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 402, 403, 405, 409, 410, 411, 412, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 485, 486, 490, 492, 493, 494, 496, 497, 498, 500, 502, 504, 507, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 564], "astropy_healpix": 375, "astropy_help": [366, 407, 408, 409], "astropy_introduct": 408, "astropy_timeseri": 381, "astropy_vers": 366, "astropydeprecationwarn": 451, "astyp": [85, 88], "asymmetr": [118, 122, 123, 126, 127, 129, 384, 407, 413, 432, 473, 484, 498, 518], "asymmetri": 466, "asymptot": [562, 563], "atmospher": [381, 398, 403, 475], "atnf": 425, "atol": [84, 97, 126, 190, 195, 341, 343, 366], "atol_ax": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 196, 197, 198], "atom": 382, "atproduction_gamma": 26, "atreye": [378, 381, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 216, 224, 238, 253, 263, 377, 387, 430, 459, 465, 470, 471, 560], "attempt": [16, 82, 101, 120, 369, 380, 383], "attr": 366, "attract": 386, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 170, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 277, 279, 295, 376, 378, 388, 393, 394, 407, 408, 411, 412, 413, 414, 417, 419, 421, 423, 425, 430, 431, 432, 437, 441, 451, 465, 467, 468, 469, 471, 486, 496, 512, 513, 562], "attributeerror": 366, "attrribut": 468, "aug": [379, 382, 383, 385, 404], "august": [373, 379, 382, 385, 449], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395], "authoris": 392, "authorship": 370, "auto": [185, 186, 188, 197, 198, 367, 369, 377, 386, 412, 426, 465, 560], "autodiff": 384, "autogener": 386, "autograd": [377, 384], "autom": [11, 374, 382, 392, 395, 396, 419, 465, 560], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 101, 109, 120, 122, 126, 155, 158, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 365, 366, 367, 369, 373, 374, 376, 377, 383, 386, 388, 392, 395, 406, 407, 413, 441, 449, 451, 465, 468, 560, 564], "automatis": 499, "autopep8": 366, "autoscal": [206, 207, 208, 209], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 66, 69, 71, 76, 81, 85, 86, 88, 98, 99, 102, 106, 107, 118, 119, 121, 122, 126, 127, 129, 138, 159, 165, 171, 172, 190, 203, 206, 208, 212, 213, 217, 218, 225, 228, 240, 242, 250, 251, 255, 261, 263, 265, 269, 319, 354, 366, 369, 372, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 393, 396, 397, 398, 399, 400, 401, 407, 411, 412, 413, 417, 420, 424, 426, 428, 431, 439, 440, 443, 465, 467, 469, 471, 475, 476, 480, 484, 486, 488, 490, 491, 497, 499, 500, 502, 503, 504, 506, 514, 526, 558, 560, 562], "available_hdu": 86, "available_irf": 86, "available_method": [162, 171], "available_quant": [119, 121], "available_select": [165, 172], "averag": [19, 99, 102, 106, 107, 165, 172, 175, 176, 178, 179, 417, 436, 439, 496, 559], "averageaz": [451, 452], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 118, 165, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 366, 367, 372, 373, 374, 376, 380, 384, 385, 388, 389, 391, 392, 394, 417, 419, 428, 430, 431, 469, 473, 497, 509, 560], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 277, 279], "awar": [366, 371, 378, 386, 392], "ax": [16, 19, 20, 26, 65, 66, 81, 98, 99, 102, 106, 107, 108, 109, 110, 112, 118, 119, 121, 123, 124, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 165, 172, 175, 176, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 277, 279, 353, 354, 358, 359, 360, 361, 362, 363, 366, 375, 385, 408, 412, 417, 423, 424, 425, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 484, 485, 486, 496, 498, 500, 502, 507, 509, 510, 511, 512, 517, 518, 519, 523, 526, 554, 555, 559], "ax1": [435, 443, 445, 449, 460, 469, 470], "ax2": [435, 443, 445, 449, 460, 469, 470], "ax3": [443, 449], "ax_crab_3fhl": 486, "ax_ebl": 526, "ax_excess": [436, 439], "ax_model": 526, "ax_residu": [98, 106, 107, 436, 439, 440, 441, 460, 484], "ax_s": [440, 484], "ax_spati": [99, 102, 106, 107], "ax_spectr": [99, 102, 106, 107], "ax_spectrum": [98, 106, 107, 436, 439, 440, 441, 460], "ax_sqrt_t": [436, 439], "axcols1": 468, "axcols2": 468, "axel": [375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "axes0": [185, 186, 188, 194, 197, 198], "axes_loc": [139, 140, 142, 145, 146, 147, 152, 154, 156, 198, 354], "axes_nam": [184, 185, 186, 188, 193, 194, 196, 197, 198], "axesimag": [354, 355], "axesn": [185, 186, 188, 194, 197, 198], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 81, 97, 98, 99, 102, 106, 107, 108, 109, 110, 112, 114, 118, 119, 121, 122, 123, 125, 126, 129, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 263, 264, 266, 267, 273, 277, 278, 279, 283, 284, 285, 306, 307, 317, 354, 359, 360, 361, 362, 372, 375, 388, 390, 409, 412, 413, 414, 417, 419, 424, 426, 427, 428, 431, 435, 436, 439, 440, 441, 442, 444, 445, 447, 449, 451, 452, 453, 455, 456, 458, 459, 463, 464, 466, 467, 468, 475, 476, 477, 484, 485, 486, 496, 498, 500, 504, 509, 512, 513, 555, 559], "axis0": 512, "axis1": 468, "axis2": 468, "axis_edg": 359, "axis_nam": [98, 99, 102, 106, 107, 119, 121, 130, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 453, 457, 458, 459, 464], "axis_new": [121, 137, 456, 458], "axis_origin": 456, "axis_rgb": 361, "axis_tru": 449, "axisymmetr": 432, "axvlin": [442, 462, 472, 473], "axvspan": [194, 460], "az": [81, 83, 86, 91, 92, 366, 564], "azimuth": 476, "azur": 413, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 82, 85, 88, 101, 120, 145, 203, 334, 366, 367, 380, 389, 392, 450, 462, 463, 465, 468, 469, 471, 476, 486, 492, 496, 513], "b1509": 463, "b_0": [517, 518], "b_1": [85, 88], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 85, 88, 186, 307, 369, 376, 377, 380, 386, 439, 440, 442, 468, 471, 484, 560], "backend": [90, 98, 116, 122, 123, 126, 127, 129, 161, 202, 203, 204, 205, 275, 310, 315, 316, 365, 375, 377, 407, 426, 427, 431, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485, 557, 558], "backend_default": [123, 126, 129], "background": [16, 66, 80, 81, 86, 90, 99, 100, 102, 103, 105, 106, 107, 109, 110, 114, 118, 119, 121, 128, 139, 140, 141, 151, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 178, 218, 224, 263, 270, 277, 279, 287, 288, 289, 290, 292, 362, 366, 372, 375, 378, 379, 380, 382, 386, 387, 390, 398, 403, 406, 407, 408, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 446, 447, 449, 452, 453, 455, 457, 458, 459, 460, 463, 464, 465, 466, 468, 469, 473, 477, 478, 480, 485, 496, 498, 499, 512, 558, 559, 560, 562, 563], "background2d": [140, 141, 151, 413, 420, 428, 430, 432, 503], "background3d": [86, 139, 151, 178, 372, 413, 417, 425, 426, 427, 466, 475, 503], "background_estim": 385, "background_interp_missing_data": 165, "background_map": [263, 377], "background_min": 138, "background_model": [99, 102, 106, 107, 129, 378, 379, 386, 388, 413, 444, 485, 503], "background_oversampl": [165, 172, 467], "background_pad_offset": 165, "background_r": [385, 464], "backgroundconfig": 16, "backgroundestim": [381, 411], "backgroundevalu": 377, "backgroundirf": [139, 140], "backgroundirfmodel": 388, "backgroundmodel": [378, 388, 389, 410, 412, 413, 414, 417], "backgroundtempl": 377, "backport": [373, 391, 395], "backround": 375, "backscal": 194, "backward": [366, 371, 380, 389, 390, 391, 409, 498], "bad": [84, 366, 380], "badli": 396, "balanc": 496, "band": [19, 20, 26, 67, 81, 87, 116, 119, 121, 124, 143, 144, 147, 150, 155, 158, 183, 184, 185, 186, 188, 189, 192, 193, 194, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 372, 384, 385, 389, 390, 398, 406, 437, 439, 440, 448, 449, 450, 460, 462, 463, 471, 476, 478, 495, 496, 498, 558], "bandshdu": 468, "banner": 396, "bar": [15, 80, 85, 88, 99, 102, 106, 107, 114, 126, 129, 139, 140, 198, 203, 226, 285, 316, 360, 383, 417, 420, 421, 427, 432, 460, 473, 500, 533], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 277, 279, 294, 303, 304, 307, 313, 315, 317, 340, 353, 361, 366, 367, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 389, 394, 396, 398, 399, 406, 408, 409, 411, 413, 414, 417, 419, 422, 423, 424, 425, 426, 432, 439, 441, 442, 444, 447, 448, 449, 450, 451, 453, 456, 460, 463, 466, 468, 469, 471, 472, 473, 475, 476, 485, 486, 488, 497, 498, 500, 510, 512, 524, 534, 558, 559, 561, 562], "base_dir": [80, 85, 303, 475, 477, 478, 488], "baselin": [80, 81, 231, 475], "basement": 408, "basemodel": [16, 82, 101, 120, 393], "baseradi": 239, "bash": [398, 400, 560], "basi": [371, 372, 382, 385, 395, 419, 421, 460, 462], "basic": [45, 46, 66, 70, 71, 72, 73, 74, 76, 77, 78, 102, 107, 121, 230, 369, 372, 376, 377, 378, 379, 380, 382, 386, 390, 393, 402, 414, 424, 426, 434, 436, 439, 441, 454, 456, 457, 462, 463, 469, 480, 486, 488, 490, 491, 496, 497, 498, 508, 509, 512, 557, 559, 560], "basicconfig": [16, 449, 482], "bayesian": 384, "bayesian_block": 456, "bayesian_edg": 456, "baysian": 375, "bb": [85, 88, 392], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bbv2svq": 471, "bcf": [140, 144, 145, 146, 155, 435, 442, 455, 459, 466, 475], "becam": 373, "becaus": [16, 82, 101, 120, 185, 186, 188, 192, 194, 197, 198, 366, 367, 369, 371, 373, 377, 378, 380, 381, 385, 389, 390, 393, 396, 417, 419, 436, 437, 440, 453, 458, 460, 467, 468, 469, 470, 475, 476, 477, 484, 485, 486, 496, 500, 560, 563], "becom": [366, 374, 376, 377, 380, 385, 393, 451, 458, 471, 500, 560, 563], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 97, 101, 118, 120, 157, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 295, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 397, 399, 413, 414, 417, 419, 420, 426, 427, 428, 429, 430, 431, 432, 440, 450, 458, 459, 460, 468, 471, 472, 475, 477, 484, 497, 512, 545, 564], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 82, 85, 88, 89, 97, 101, 119, 120, 185, 186, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 307, 361, 366, 367, 369, 371, 373, 374, 375, 376, 380, 381, 382, 384, 385, 391, 395, 396, 402, 420, 426, 440, 442, 457, 458, 465, 468, 471, 477, 480, 484, 536, 560], "begin": [52, 85, 88, 99, 106, 119, 121, 129, 386, 389, 392, 439, 441, 468, 471, 517, 522, 523, 527, 543, 562], "behav": [366, 376, 431, 444, 563], "behavior": [16, 82, 85, 88, 92, 101, 120, 390, 416, 420, 431, 477], "behaviour": [341, 366, 388, 389, 414, 419, 425, 432, 458, 469, 476, 496, 561], "being": [118, 128, 186, 366, 371, 374, 380, 387, 390, 396, 441, 450, 456, 469, 473, 489, 513, 560], "belief": 473, "believ": [401, 473], "belong": [84, 390, 413], "below": [52, 53, 85, 88, 184, 188, 195, 196, 355, 356, 357, 361, 363, 367, 369, 370, 375, 376, 380, 382, 383, 386, 389, 390, 392, 393, 394, 396, 397, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 439, 443, 460, 463, 465, 467, 469, 471, 472, 473, 475, 476, 497, 500, 518, 562], "benchmark": [382, 392, 396], "benefit": 383, "benn": 382, "berg": 559, "berge2007": [380, 509, 510, 559], "bernet": 432, "besancon": 490, "besid": [118, 129, 380, 381, 390, 440, 441, 468, 476, 484, 485, 513], "best": [66, 70, 72, 73, 76, 78, 98, 119, 121, 122, 123, 126, 127, 134, 204, 205, 275, 277, 279, 359, 366, 369, 376, 379, 384, 392, 398, 400, 437, 439, 440, 441, 444, 447, 450, 460, 463, 465, 473, 484, 498, 500, 502, 526, 532, 535, 536, 540, 562, 563, 564], "best_fit_model": 441, "beta": [27, 28, 48, 231, 232, 233, 254, 389, 391, 413, 437, 441, 448, 463, 465, 528, 534, 535, 536, 541, 551], "better": [366, 369, 371, 372, 373, 374, 375, 379, 380, 385, 386, 387, 390, 407, 424, 425, 447, 448, 451, 460, 465, 468, 469, 476, 496], "between": [19, 20, 26, 66, 85, 86, 88, 91, 102, 107, 116, 123, 124, 126, 134, 135, 146, 152, 154, 155, 156, 158, 168, 182, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 210, 211, 214, 215, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 269, 275, 292, 325, 356, 357, 364, 366, 367, 374, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 390, 391, 393, 394, 404, 414, 417, 420, 431, 435, 441, 443, 448, 450, 453, 456, 459, 460, 465, 467, 468, 469, 470, 473, 476, 477, 486, 496, 498, 505, 506, 509, 518, 519, 559, 562, 564], "bewar": [264, 436, 458], "bexcub": 189, "bexpcub": [184, 185, 186, 188, 197, 198, 468], "beyond": [189, 380, 390, 393, 413, 467, 488], "bfg": 465, "bgstat": 423, "bi": [424, 427], "bia": [93, 142, 143, 147, 171, 425, 431, 467, 473, 504], "bias": [441, 561], "bias_energi": 142, "bias_perc": 171, "bibliographi": 559, "biederbeck": [394, 432], "big": [373, 376, 383, 395, 427, 476, 561, 563], "bigger": 186, "biggest": 385, "billion": 366, "bimod": 31, "bin": [19, 20, 26, 81, 84, 86, 99, 102, 105, 106, 107, 109, 114, 116, 118, 119, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 136, 137, 138, 142, 143, 145, 147, 153, 155, 157, 158, 165, 167, 168, 169, 171, 173, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 271, 280, 286, 292, 359, 361, 364, 372, 377, 378, 379, 380, 382, 385, 386, 390, 397, 398, 408, 409, 411, 412, 414, 416, 417, 419, 422, 423, 424, 425, 426, 431, 432, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 496, 498, 500, 504, 508, 558, 559, 560, 561, 563], "bin_cent": 460, "bin_edg": 460, "bin_volum": [189, 193, 196, 513], "bin_width": [187, 190, 195, 460], "binari": [196, 198, 374, 380, 383, 392, 396, 417], "binary_dil": [198, 469], "binary_erod": [198, 469], "binary_eros": [198, 417], "binary_structur": 196, "bind": 369, "binder": [374, 395, 425, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "binlik": 121, "binned_likelihood": 122, "binneddataaxi": [408, 424], "binnedtimeseri": [121, 381], "bins_axi": 198, "binsiz": [16, 440, 444, 445, 447, 457, 484, 485], "binsize_irf": [16, 440, 444, 445, 447, 457, 484], "binsz": [99, 102, 106, 107, 108, 112, 144, 153, 155, 165, 168, 169, 173, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 382, 439, 449, 450, 451, 452, 455, 460, 462, 464, 466, 467, 468, 469, 471, 476, 477, 485, 507, 509, 510, 512, 513, 516, 518, 519, 520, 521], "binsz_irf": [99, 102, 106, 107, 110, 464, 467, 500], "binsz_irf_default": [99, 102, 106, 107, 467], "binsz_wc": [193, 194], "bintabl": [184, 185, 186, 188, 197, 198], "bintablehdu": [81, 84, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 189, 190, 196, 197, 198, 451, 468, 496], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [81, 134, 367, 369, 373, 374, 380, 384, 385, 393, 460, 468, 513], "bitpix": 468, "bkg": [16, 80, 85, 86, 99, 103, 104, 106, 107, 139, 140, 141, 171, 178, 224, 388, 412, 414, 419, 435, 439, 440, 444, 445, 447, 448, 451, 452, 455, 460, 464, 466, 467, 470, 475, 477, 478, 484, 485, 496, 503, 559, 561, 562, 563], "bkg_": [99, 106], "bkg_2d": [85, 139], "bkg_3d": [80, 85, 140, 475, 478], "bkg_err": 460, "bkg_maker": [388, 436, 439, 441, 449, 458, 509], "bkg_model": [378, 388, 394, 447, 451, 452, 455, 470, 485, 520], "bkg_ob": 103, "bkg_sy": 128, "bkg_syst_fract": [128, 435], "bkg_syst_fraction_sensit": 118, "bkgfile": 103, "black": [106, 107, 355, 356, 363, 384, 426, 428, 435, 460, 462, 467, 472, 509], "blackground": 435, "blanch": [425, 426], "blanklin": [230, 402, 498, 513], "blazar": 291, "blind": [428, 500], "bll": 486, "blob": 405, "block": [367, 369, 372, 379, 386, 396, 405, 425], "block_reduc": 426, "blue": [98, 99, 102, 106, 107, 356, 439, 445, 447, 450, 472, 509], "blur": 33, "board": [375, 386], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 366, "boller": 456, "boni": [417, 420], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 78, 80, 81, 82, 84, 85, 86, 88, 90, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 118, 119, 120, 121, 122, 126, 127, 129, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 165, 172, 175, 176, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 292, 295, 304, 307, 325, 333, 335, 337, 363, 366, 380, 449, 463, 467, 468], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 119, 122, 123, 126, 127, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 203, 216, 238, 253, 382, 414, 447, 463, 468, 469, 470], "boost": 451, "bootstrap": [85, 88], "border": 88, "bose": 408, "bot": 372, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 69, 80, 81, 84, 85, 86, 88, 97, 98, 99, 102, 103, 104, 106, 107, 119, 121, 142, 143, 144, 150, 155, 158, 182, 185, 186, 188, 190, 192, 193, 194, 196, 197, 198, 206, 208, 366, 371, 372, 377, 378, 379, 380, 381, 386, 391, 395, 407, 411, 413, 414, 417, 420, 440, 441, 451, 455, 464, 468, 469, 470, 472, 473, 497, 498, 500, 512, 513, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 562], "bother": 444, "bottom": [386, 388, 451, 457, 459, 463], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 99, 102, 106, 107, 119, 121, 122, 123, 126, 190, 193, 195, 203, 210, 211, 214, 215, 216, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 263, 264, 266, 267, 290, 375, 468, 473], "boundari": [190, 196, 265, 394, 422, 465, 471, 512], "boundary_mask": [196, 469], "boundary_typ": 190, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 366, 466], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 99, 102, 123, 124, 193, 196, 198, 327, 328, 375, 380, 384, 390, 424, 469, 471, 513], "bpl": [210, 389, 471], "bpwl_norm": 389, "bracket": [142, 203, 429, 431], "brake": 51, "branch": [366, 369, 373, 380, 391, 396, 405], "branchnam": 366, "bratio": 488, "break": [210, 254, 372, 380, 382, 391, 411, 412, 413, 527, 541], "brent": 443, "brentq": [19, 20, 26, 121, 203, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 276], "breviti": [447, 500], "brief": 564, "briefli": [477, 478], "bright": [67, 123, 253, 268, 445, 457, 458, 469, 471, 494, 509], "brighter": 451, "brightest": 463, "brigitta": [383, 407, 409, 411, 413, 422, 423, 424, 425, 426, 427, 428], "bring": 371, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 185, 186, 188, 191, 194, 197, 198, 253, 307, 452, 466, 468, 512], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [210, 254, 392, 434, 514, 546], "brokenpowerlaw": 389, "brokenpowerlawspectralmodel": [248, 254, 389, 414, 471, 527], "brown": [130, 456], "brown2013": 130, "brows": [85, 88, 367, 402, 486], "browser": [85, 88, 369, 396, 402, 422, 425, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "bruno": [392, 409, 411, 414, 417, 420, 424, 425, 426, 428, 429, 430, 431, 432], "br\u00fcgge": [425, 426], "bsd": 392, "bst": [85, 88], "buchner": 417, "budget": 500, "buffer": 344, "bug": [366, 369, 372, 373, 391, 392, 395, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430], "bugfix": [373, 375, 391, 424, 425], "build": [16, 82, 101, 120, 184, 218, 366, 372, 373, 374, 379, 380, 382, 386, 390, 391, 392, 393, 395, 413, 419, 428, 443, 447, 460, 467, 469, 497, 500, 560], "build_doc": [331, 367, 369, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 532, 535, 548], "built": [10, 172, 218, 334, 350, 365, 366, 367, 377, 378, 380, 382, 383, 385, 393, 396, 403, 426, 431, 463, 470, 476, 480, 496], "builtin": 486, "bullet": 371, "bump": [380, 424], "bunch": [100, 105, 367, 560], "bundl": [98, 99, 102, 106, 107, 375, 378, 396, 418, 426, 449, 464, 467, 496, 513, 558, 559], "bunit": [352, 426, 468], "bureaucrat": 371, "burkert": [17, 488], "burst": 456, "butterfli": [425, 465, 486], "button": [428, 468], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 82, 101, 120], "byte": [16, 82, 85, 88, 101, 120, 313, 344, 366], "bytearrai": [16, 82, 101, 120, 313], "bytestr": [85, 88], "b\u00fchler": 405, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 85, 88, 191, 201, 220, 257, 280, 286, 295, 334, 365, 366, 383, 398, 399, 401, 418, 425, 460, 462, 465, 473, 476, 488, 512, 531, 542, 560, 561, 563], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c_": 201, "c_0": [183, 184, 193, 196], "c_i": [183, 184, 193, 196], "c_n": [183, 184, 193, 196], "cach": [85, 86, 88, 97, 99, 102, 106, 107, 263, 303, 304, 375, 376, 378, 385, 388, 396, 410, 414, 417, 432], "cahil": 419, "cal_gen_92_002": [142, 190], "cal_gen_92_002_summari": 142, "calcul": [13, 15, 19, 20, 26, 93, 102, 107, 130, 131, 132, 171, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 249, 254, 256, 257, 258, 259, 262, 265, 266, 282, 284, 285, 292, 294, 317, 348, 356, 357, 376, 379, 407, 413, 417, 418, 419, 425, 430, 432, 435, 456, 460, 462, 473, 484, 485, 488, 500, 559, 563], "caldb": [80, 140, 142, 144, 145, 146, 155, 190, 419, 435, 442, 451, 452, 455, 459, 466, 475], "calendar": [391, 395], "calib_vers": [476, 486], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 84, 85, 88, 98, 99, 101, 102, 106, 107, 120, 130, 131, 132, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 167, 183, 184, 193, 196, 203, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 307, 319, 338, 344, 352, 355, 363, 366, 367, 369, 371, 372, 375, 378, 379, 380, 381, 382, 384, 386, 388, 390, 392, 394, 396, 398, 402, 413, 417, 431, 439, 440, 449, 463, 464, 465, 467, 468, 471, 476, 478, 484, 485, 486, 496, 500, 509, 510, 511, 512, 513, 560, 561, 562, 563], "callabl": [16, 45, 82, 101, 120, 271], "callback": [161, 560], "caller": [366, 377], "camera": [459, 466, 467], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 66, 67, 68, 80, 81, 82, 85, 88, 90, 99, 101, 102, 105, 106, 107, 110, 114, 119, 120, 121, 126, 127, 129, 134, 140, 145, 153, 155, 158, 162, 168, 171, 183, 184, 185, 186, 188, 190, 191, 193, 194, 195, 196, 197, 198, 200, 203, 207, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 225, 226, 228, 230, 232, 233, 235, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 276, 278, 283, 295, 307, 308, 313, 316, 325, 342, 344, 359, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 413, 414, 417, 419, 420, 424, 425, 426, 427, 428, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 485, 486, 488, 490, 491, 496, 497, 498, 500, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 534, 536, 545, 555, 557, 558, 559, 560, 561, 562, 563], "candel": 218, "candid": [391, 419, 463], "candl": [269, 559], "cannot": [16, 66, 82, 85, 88, 92, 101, 109, 119, 120, 121, 200, 286, 334, 363, 369, 379, 380, 431, 466, 470, 471, 498, 513], "cap": [51, 54], "capabl": [376, 476, 488], "capsiz": 473, "captur": [366, 382], "car": [99, 102, 106, 107, 165, 196, 197, 198, 216, 238, 380, 409, 449, 466, 467, 468, 485, 486], "card": [81, 84, 86, 97, 98, 99, 102, 103, 104, 106, 107, 119, 121, 142, 143, 144, 150, 155, 158, 185, 186, 188, 192, 194, 197, 198, 468], "care": [295, 366, 375, 382, 391, 436, 441, 447, 468, 560], "carefulli": [392, 451, 452, 473], "carina": [33, 38], "carlo": [384, 505], "carri": [381, 389, 391, 393, 417, 437, 485], "carr\u00e9": 196, "cartesian": [41, 46, 186, 197, 198, 298, 300, 430, 486, 512], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 68, 81, 85, 88, 142, 161, 173, 184, 186, 192, 193, 196, 198, 203, 206, 208, 228, 239, 261, 263, 265, 276, 286, 308, 325, 361, 366, 367, 369, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 398, 406, 407, 410, 413, 419, 420, 425, 431, 432, 435, 436, 439, 440, 441, 442, 444, 445, 447, 451, 452, 455, 456, 457, 459, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 480, 484, 486, 495, 498, 499, 500, 510, 513, 517, 518, 519, 522, 523, 527, 536, 543, 558, 560, 562], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [99, 102, 106, 107, 165, 281, 286, 366, 378, 417, 442, 444, 447, 455, 459, 464, 467, 470, 473, 484, 485, 496, 559], "cash1979": [559, 562], "cashcountsstatist": [402, 432, 560, 562], "cast": 88, "cat": [65, 66, 77, 374, 396, 424, 425, 437, 463, 471, 495, 559, 560], "catalof": 68, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 118, 122, 380, 386, 405, 409, 411, 413, 417, 418, 419, 422, 423, 424, 425, 426, 428, 432, 434, 437, 443, 448, 464, 471, 474, 476, 480, 490, 524, 558, 559], "catalog_3fgl": 437, "catalog_3fhl": [437, 463], "catalog_3fhl_bright": 463, "catalog_4fgl": 463, "catalog_4fgl_roi": 463, "catalog_gammacat": [437, 463], "catalog_hgp": 463, "catalog_registri": [437, 463, 469], "catalogimageestim": 426, "catalogu": [76, 417, 424], "catch_warn": 500, "categori": [366, 377, 390, 417, 469, 471, 514], "caus": [373, 380, 426, 429, 500], "cautious": 450, "caveat": [203, 291, 432, 518], "cax": 466, "cb98": 48, "cbar": 354, "cbar_kw": 360, "cbarlabel": 360, "cc": [375, 380, 382, 385, 387, 389, 392, 394], "ccube": [184, 185, 186, 188, 189, 190, 196, 197, 198, 468], "cd": [366, 367, 369, 382, 398, 399, 400], "cdelt": [196, 198], "cdelt1": 468, "cdelt2": 468, "cdf": [317, 379, 451, 465], "cdot": [51, 52, 53, 54, 99, 106, 243, 257, 389, 471, 496, 517, 522, 523, 527, 530, 531, 538, 539, 541, 542, 543, 544, 549, 550, 551, 553, 561], "celesti": [468, 512, 517, 521, 564], "celfix": 524, "cell": [374, 402, 428, 448, 460, 468, 475, 476, 486], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 81, 85, 88, 93, 99, 102, 106, 107, 119, 121, 123, 124, 125, 129, 142, 143, 144, 145, 146, 147, 150, 154, 155, 156, 158, 165, 168, 169, 171, 172, 173, 175, 176, 178, 179, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 212, 213, 216, 217, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 263, 265, 297, 301, 327, 366, 367, 380, 382, 389, 390, 407, 408, 417, 419, 432, 435, 436, 439, 441, 442, 443, 444, 445, 447, 449, 451, 452, 453, 458, 459, 460, 462, 466, 467, 468, 469, 470, 471, 475, 476, 485, 486, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 517, 518, 521], "center_coord": [183, 184, 189, 193, 196], "center_pix": [183, 184, 193, 196], "center_ski": 513, "center_skydir": [183, 184, 193, 196, 467, 468, 476, 477, 507, 509, 510], "centr": [462, 469, 488], "central": [378, 387, 437, 486], "cern": 488, "certain": [50, 81, 85, 88, 203, 283, 365, 380, 382, 384, 390, 435, 462, 467, 468, 476, 495, 513], "certainli": 369, "certif": 392, "certifi": 392, "cfa": [203, 465], "cff": 395, "cg": 492, "ch": 53, "chain": [161, 379, 382, 411, 467, 500, 510], "chainer": 384, "chakraborti": [423, 424], "challeng": [373, 375, 379, 424, 445, 447, 449, 475], "chanc": 371, "changchangelog": [366, 395, 418, 426], "channel": [19, 20, 26, 365, 368, 369, 383, 425, 452, 462, 468, 478, 488], "channel0": 488, "channel1": 488, "channel_registri": [19, 20, 26], "chapter": 462, "charact": [85, 88, 366, 470], "character": [285, 390, 451], "characterist": [21, 25, 27, 51, 52, 53, 54, 130, 283, 377, 431, 456, 559], "charg": [392, 536], "chatti": [366, 449], "cheat": 401, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 84, 85, 86, 88, 99, 102, 103, 106, 107, 119, 121, 142, 143, 144, 150, 155, 158, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 207, 209, 216, 238, 253, 291, 340, 342, 369, 382, 388, 392, 395, 396, 398, 399, 400, 403, 412, 417, 425, 437, 455, 466, 480, 488, 500, 504, 513, 557, 560, 561], "check_limit": [206, 207, 208, 209], "check_random_st": 366, "check_tutorials_setup": [435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "checker": [423, 426], "checklist": 396, "checkout": [366, 369, 408, 447, 451, 471], "checksum": [81, 84, 86, 97, 98, 99, 102, 103, 104, 106, 107, 119, 121, 142, 143, 144, 150, 155, 158, 185, 186, 188, 192, 194, 197, 198, 204, 216, 238, 333, 335, 432, 448, 476], "chen": 426, "cherenkov": [145, 379, 398, 403, 436, 439, 445, 457, 467, 475, 477, 509, 510, 559], "cherri": [366, 373, 380, 391], "chi": [282, 381, 561, 562, 563], "chi2": [98, 136, 378, 408, 450, 459, 465, 496, 562], "chi2assym": 411, "child": 376, "children": [447, 455, 468, 484, 485], "chime": 369, "chisq": 282, "chisquar": 282, "chmod": 560, "choic": [379, 383, 385, 392, 439, 440, 442, 444, 465, 477, 484, 501, 557, 560], "choos": [45, 183, 184, 187, 189, 190, 193, 196, 266, 309, 366, 378, 380, 382, 386, 398, 417, 437, 439, 443, 447, 449, 459, 464, 465, 467, 468, 470, 471, 472, 476, 485, 500, 560], "chose": [451, 476, 477, 562, 564], "chosen": [26, 142, 155, 158, 184, 185, 186, 194, 197, 198, 216, 225, 238, 366, 369, 381, 382, 385, 440, 458, 467, 468, 472, 473, 477, 484, 498, 508, 509, 513], "christoph": [371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 405, 406, 407, 408, 409, 410, 411, 412, 418, 421, 422, 423, 424, 425, 426, 427], "chrome": [85, 88], "chromei": 419, "chunk": [144, 155, 158], "chunk_siz": [144, 155, 158], "ci": [366, 369, 373, 392, 396, 411, 417, 419, 422, 428], "circl": [81, 173, 363, 367, 380, 419, 439, 449, 459, 462, 467, 469, 472, 475, 485, 486, 497, 507, 509, 510, 513], "circle_area": 367, "circleannulusskyregion": [250, 251, 509], "circledast": 496, "circlepixelregion": 380, "circleskyregion": [99, 102, 106, 107, 167, 168, 172, 196, 217, 367, 380, 435, 436, 439, 441, 442, 445, 447, 449, 451, 452, 458, 462, 464, 467, 469, 470, 485, 507, 509, 510, 513], "circular": [88, 99, 102, 172, 184, 186, 196, 377, 385, 387, 436, 441, 464, 472, 509, 513], "circumv": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "cirelli": [26, 488], "citat": 395, "cite": [369, 392], "cl": [16, 82, 99, 101, 106, 120, 393], "clabel": 465, "clang": 402, "clarif": 371, "clarifi": [390, 431], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 279, 303, 304, 307, 315, 317, 340, 353, 369, 372, 375, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 394, 398, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 449, 451, 452, 455, 457, 460, 463, 464, 465, 466, 467, 468, 471, 473, 475, 476, 477, 484, 486, 491, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 508, 510, 511, 512, 513, 514, 536, 545, 557, 558, 559, 560, 565], "class1": 463, "class2": 463, "classic": [375, 384, 398, 407, 436, 439, 445, 449, 464, 467, 498, 500, 509, 510, 559, 562], "classifi": 477, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 97, 98, 99, 101, 102, 106, 107, 119, 120, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 393], "classproperti": 417, "classvar": [16, 82, 101, 120], "claudio": [430, 432], "claus": [366, 392], "clean": [366, 367, 369, 374, 375, 380, 382, 384, 405, 407, 408, 409, 410, 411, 412, 413, 414, 417, 424, 425, 426, 427], "cleaner": 428, "cleanup": [373, 385, 396, 405, 410, 411, 416, 417, 418, 422, 423, 425], "clear": [89, 97, 192, 238, 366, 371, 373, 377, 380, 381, 385, 386, 387, 425, 450, 564], "clearer": 410, "clearli": [130, 366, 371, 372, 380, 383, 391], "cli": [11, 382, 427, 558], "click": [365, 382, 383, 402, 410, 425, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 560], "clip": [19, 20, 26, 183, 184, 187, 189, 190, 193, 195, 196, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 265, 266, 307, 410, 411, 443], "clockwis": [217, 225, 228, 517], "clone": [369, 399, 426], "close": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 265, 341, 342, 343, 375, 380, 395, 420, 431, 432, 465, 545], "closer": 486, "closest": [114, 118, 122, 126, 129, 184, 185, 186, 188, 194, 197, 198, 469, 498], "cloud": [396, 480], "cluster": [6, 93, 293, 294, 379, 431, 432, 434, 474, 480, 497, 500], "clutter": [447, 500], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 66, 98, 121, 127, 129, 210, 214, 220, 222, 226, 233, 236, 243, 245, 253, 254, 257, 258, 259, 268, 351, 377, 389, 436, 437, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 455, 459, 460, 462, 463, 465, 471, 473, 475, 476, 484, 486, 493, 494, 498, 500, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559], "cm2": [51, 54, 66, 104, 121, 135, 145, 198, 269, 351, 435, 437, 440, 442, 443, 447, 448, 449, 451, 452, 455, 457, 458, 459, 460, 462, 463, 464, 468, 470, 471, 473, 476, 484, 485, 486, 498, 513, 529, 532, 535, 540, 545], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 462], "cm5": 462, "cmap": [99, 102, 106, 107, 356, 357, 441, 447, 462, 468, 470, 476, 477, 484, 485, 509], "cmb": 536, "co": [53, 191, 391, 392, 435, 517, 518, 519], "coadd": [185, 186, 188, 194, 197, 198], "coars": 464, "coarser": [190, 195, 464], "codaci": 396, "codata": 52, "code": [19, 20, 26, 80, 81, 85, 88, 142, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 361, 369, 370, 371, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 399, 402, 405, 408, 409, 411, 412, 413, 414, 417, 419, 422, 423, 424, 425, 426, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 488, 500, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 560], "codebas": [367, 383, 405, 424, 426], "codemeta": 419, "codespel": 417, "codestyl": 369, "coeffici": [124, 231, 235, 526], "coerce_numbers_to_str": 101, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 456, "col": [85, 88, 417], "col0": [85, 88], "col1": [85, 88], "col2": [85, 88], "col_b": [85, 88], "col_c": [85, 88], "col_d": [85, 88], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 360, "collabor": [356, 357, 371, 373, 375, 379, 419, 450, 476, 559], "colleagu": [369, 560], "collect": [192, 238, 366, 368, 393, 396, 424, 425, 440, 464, 470, 488, 497, 501, 505, 559, 564], "collis": 50, "colnam": [85, 88, 185, 186, 188, 194, 197, 198, 476, 486], "color": [98, 106, 107, 139, 140, 198, 355, 356, 357, 360, 363, 367, 435, 437, 439, 440, 441, 442, 443, 445, 447, 449, 450, 453, 457, 460, 462, 465, 467, 470, 472, 473, 500, 509, 513, 517, 518, 536], "colorbar": [121, 139, 140, 142, 145, 146, 147, 152, 153, 154, 156, 198, 354, 360, 465, 468], "colorblind": 500, "colorblind10": 500, "colormap": [355, 356, 357, 405, 418, 486], "colormap_hess": [387, 565], "colormap_milagro": 565, "colour": 428, "column": [41, 43, 44, 46, 47, 56, 81, 85, 88, 100, 105, 119, 121, 124, 134, 139, 140, 142, 166, 185, 186, 187, 188, 189, 190, 194, 195, 197, 198, 264, 285, 293, 336, 337, 338, 339, 359, 360, 363, 364, 366, 379, 381, 390, 428, 431, 432, 435, 451, 452, 460, 463, 468, 471, 475, 497, 500], "column_nam": 466, "column_prefix": 190, "columnclass": [85, 88], "columnspac": 363, "com": [130, 136, 291, 322, 323, 334, 369, 386, 395, 396, 399], "combin": [96, 98, 99, 102, 106, 107, 137, 171, 179, 185, 186, 188, 193, 194, 197, 198, 211, 253, 366, 372, 376, 377, 378, 379, 380, 381, 386, 389, 398, 410, 425, 431, 437, 442, 447, 448, 455, 459, 464, 465, 466, 467, 468, 469, 471, 477, 485, 486, 488, 490, 500, 507, 512, 528, 558, 559], "combined_ev": 497, "combining_and_defin": [435, 442, 444, 447, 449, 455, 459, 475], "come": [68, 369, 372, 373, 374, 375, 376, 380, 381, 382, 383, 385, 386, 391, 393, 395, 396, 413, 414, 417, 426, 427, 431, 439, 447, 455, 471, 475, 484, 560], "comma": [70, 71, 72, 73, 74, 76, 77, 78, 463], "command": [6, 13, 91, 98, 121, 146, 152, 154, 156, 365, 367, 369, 374, 375, 377, 382, 383, 396, 397, 398, 399, 400, 401, 407, 411, 422, 425, 426, 428, 451, 499, 558], "commensur": 198, "comment": [121, 366, 367, 371, 375, 379, 380, 382, 383, 385, 387, 389, 391, 392], "commit": [366, 369, 374, 380, 391, 392, 404, 405, 428], "committe": [371, 373, 391, 392], "commod": 392, "common": [92, 365, 366, 367, 369, 371, 372, 380, 382, 386, 387, 389, 390, 392, 399, 401, 402, 417, 419, 440, 441, 453, 463, 466, 469, 471, 484, 485, 488, 495, 498, 499, 513, 518, 560], "common_irf_head": 466, "commonli": [29, 81, 380, 384, 426, 453, 488, 557, 558, 560, 562, 565], "commun": [382, 388, 392, 395, 397, 403, 478], "comp": 463, "compact": [16, 82, 85, 88, 101, 120], "compar": [85, 88, 122, 123, 126, 127, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 196, 197, 198, 203, 275, 366, 380, 383, 386, 414, 430, 431, 435, 436, 439, 443, 447, 450, 453, 455, 458, 463, 465, 467, 473, 476, 484, 495, 559, 561], "comparison": [84, 85, 88, 97, 126, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 325, 422, 490], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 185, 186, 188, 197, 198, 224, 371, 373, 377, 380, 389, 391, 393, 394, 402, 405, 407, 409, 426, 432, 468, 512], "compil": [369, 418], "complain": 369, "complaint": 384, "complement": 386, "complet": [13, 16, 82, 101, 120, 325, 366, 372, 376, 377, 378, 379, 380, 383, 384, 386, 390, 391, 392, 399, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 422, 423, 424, 425, 426, 427, 447, 452, 465, 472, 480, 500, 505], "complex": [366, 367, 372, 376, 380, 381, 382, 388, 390, 402, 436, 439, 449, 452, 456, 459, 464, 468, 469, 471, 472, 476, 509], "complianc": [392, 428], "compliant": [185, 186, 188, 197, 198, 432, 559], "complic": [380, 513], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 79, 86, 99, 100, 102, 105, 106, 107, 126, 130, 157, 159, 193, 216, 238, 239, 253, 268, 377, 378, 379, 382, 388, 389, 407, 411, 413, 417, 425, 426, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 455, 457, 458, 459, 463, 464, 470, 471, 475, 476, 484, 485, 488, 496, 498, 500, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559], "component_1": 377, "component_2": 377, "component_class": 463, "components_model": 78, "components_statu": 66, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372, 392], "composit": [57, 69, 78, 306, 392, 424], "compound": [193, 200, 211, 326, 330, 380, 389, 434, 453, 514, 546], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 419], "compoundpixelregion": 330, "compoundskymodel": 377, "compoundskyregion": [200, 326, 330], "compoundsourcemodel": 377, "compoundspectralmodel": [248, 389, 431, 471, 476, 526, 528, 532, 535, 537, 540, 545], "compress": 374, "compris": 477, "compromis": [366, 371, 379, 473], "compton": [239, 413, 536], "compulsori": 471, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 81, 82, 84, 86, 91, 93, 97, 98, 99, 101, 102, 106, 107, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 171, 172, 174, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 193, 194, 195, 196, 197, 198, 199, 203, 210, 211, 214, 216, 218, 220, 221, 222, 226, 230, 232, 233, 235, 238, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 268, 269, 275, 276, 277, 279, 282, 283, 284, 285, 290, 291, 294, 298, 299, 302, 366, 375, 376, 377, 378, 379, 380, 381, 384, 386, 387, 388, 389, 390, 394, 396, 398, 399, 403, 405, 407, 408, 409, 410, 413, 414, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 441, 443, 447, 448, 452, 453, 456, 457, 458, 460, 462, 464, 467, 470, 471, 472, 473, 476, 477, 478, 484, 486, 488, 496, 498, 500, 505, 509, 536, 558, 559, 560, 561, 562, 563, 564], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 203, 379, 380, 496], "compute_chisq": 424, "compute_differential_jfactor": 23, "compute_errn": [277, 279, 428, 562], "compute_errp": [277, 279, 562], "compute_flux_doubl": 130, "compute_fpp": 131, "compute_fvar": [132, 284], "compute_jfactor": [23, 462], "compute_lightcurve_doublingtim": 456, "compute_lightcurve_fpp": 456, "compute_lightcurve_fvar": 456, "compute_lima_map": 413, "compute_npr": 379, "compute_upper_limit": [277, 279], "computedfieldinfo": [16, 82, 101, 120], "con": [366, 382], "concaten": [81, 84, 89, 187, 190, 378, 382, 388, 431, 468], "concentr": 327, "concept": [16, 82, 101, 120, 386, 387, 393, 403, 462, 468, 501], "conception": [379, 388], "concern": [369, 371, 380, 382, 383, 385, 387, 389, 392, 417, 427, 477, 562], "conclud": 375, "concret": [16, 82, 101, 120, 383, 386], "conda": [365, 369, 373, 374, 383, 386, 391, 395, 396, 398, 399, 400, 401, 402, 407, 409, 425, 426, 560], "condit": [52, 53, 138, 190, 207, 209, 216, 238, 390, 394, 414, 435, 439, 442, 452, 463, 469, 470, 472, 477, 496, 505], "conduct": [428, 459], "cone": [88, 380, 440, 472, 484, 485, 500], "conesearch": 382, "conf": [85, 88, 366, 367, 396, 408, 423], "conf_1d": 457, "conf_3d": 457, "conf_max": [206, 208], "conf_min": [206, 208], "confid": [118, 203, 206, 208, 277, 279, 377, 384, 408, 413, 427, 559, 562], "confidence_opt": 203, "config": [15, 16, 82, 101, 120, 365, 367, 372, 374, 375, 382, 383, 386, 393, 398, 400, 410, 411, 412, 417, 425, 440, 447, 484, 557], "config_dict": 484, "config_joint": 447, "config_paramet": [114, 116, 117, 118, 122, 123, 125, 126, 127, 128, 129], "config_stack": 447, "config_str": 16, "configdict": [16, 82, 101, 120], "configpars": 423, "configur": [11, 15, 16, 46, 82, 85, 88, 98, 101, 106, 107, 114, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 315, 366, 367, 369, 375, 377, 381, 382, 386, 387, 393, 396, 402, 410, 412, 413, 417, 419, 428, 431, 432, 439, 441, 449, 451, 452, 475, 480, 499, 505, 559, 560], "confirm": 369, "conflict": [85, 88, 366, 369, 392], "confluenc": 478, "conform": [16, 82, 101, 120, 468], "confus": [366, 367, 372, 385], "connect": [376, 439, 453, 455, 469, 485, 557], "consant": [185, 186, 188, 194, 197, 198], "consciou": 371, "consecut": [168, 325, 366, 391], "consensu": [371, 392], "consent": 366, "consequ": [392, 452, 513], "conserv": [496, 521], "consid": [19, 20, 59, 93, 165, 172, 175, 176, 178, 179, 186, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 275, 362, 371, 372, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 392, 394, 436, 439, 441, 447, 451, 452, 456, 466, 469, 497, 505, 563], "consider": [382, 407, 417, 425, 447], "consist": [72, 88, 92, 119, 121, 143, 144, 155, 158, 185, 186, 188, 197, 198, 225, 228, 366, 376, 377, 379, 380, 381, 386, 393, 410, 411, 412, 413, 414, 421, 425, 426, 428, 430, 431, 432, 440, 441, 442, 443, 450, 455, 459, 465, 467, 468, 471, 473, 484, 534, 536, 561], "consol": [366, 560], "consortium": [393, 475], "const": [212, 213, 214, 215, 389, 452, 471, 529, 547], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 389, "constant": [50, 51, 52, 53, 99, 106, 114, 145, 185, 186, 188, 194, 196, 197, 198, 212, 213, 214, 215, 217, 229, 231, 324, 379, 380, 385, 425, 434, 457, 476, 493, 496, 514, 525, 546, 556, 559, 563], "constant_model": 547, "constantmodel": 427, "constantnormspectralmodel": 389, "constantspatialmodel": [247, 389, 471, 476, 516], "constantspectralmodel": [248, 389, 452, 471, 529], "constanttemporalmodel": [260, 389, 410, 471, 547], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 464, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 444, 448, 467, 473], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 500], "construct": [16, 82, 101, 120, 190, 232, 233, 332, 513, 559], "constructor": [183, 184, 185, 186, 188, 190, 193, 194, 195, 196, 197, 198, 431, 485, 511], "consult": 401, "consum": [465, 500], "contact": [368, 373, 375, 392, 401, 403, 406, 407, 408, 422, 425], "contain": [13, 16, 19, 20, 26, 57, 59, 62, 66, 68, 80, 81, 82, 84, 85, 86, 88, 89, 92, 93, 97, 98, 99, 101, 102, 105, 106, 107, 109, 119, 120, 121, 129, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 167, 170, 172, 177, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 283, 293, 294, 359, 361, 363, 364, 366, 369, 370, 372, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 392, 395, 396, 403, 407, 411, 412, 413, 414, 416, 417, 419, 420, 423, 424, 425, 426, 427, 431, 432, 435, 437, 439, 440, 441, 444, 447, 448, 451, 452, 455, 457, 458, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 488, 489, 491, 496, 497, 498, 500, 504, 508, 509, 512, 513, 514, 557, 559, 561, 562, 563], "containment_correct": [16, 99, 102, 172, 435, 439, 440, 441, 444, 445, 447, 449, 457, 458, 460, 464, 467, 484], "containment_fract": 93, "containment_radiu": [146, 152, 154, 155, 156, 158, 435, 464, 466, 469], "containment_radius_map": [155, 158], "contains_pix": [183, 184, 193, 196], "contains_wcs_pix": 193, "contamin": [66, 445, 463, 469, 509], "content": [82, 101, 120, 121, 185, 186, 188, 194, 197, 198, 333, 366, 369, 371, 375, 381, 386, 393, 396, 411, 420, 425, 436, 468, 469, 475, 477, 497, 500, 511, 512], "content_typ": [16, 82, 101, 120], "context": [16, 82, 85, 88, 101, 120, 207, 209, 216, 238, 315, 344, 366, 381, 392, 396, 432, 468, 490], "contigu": [190, 195, 417], "continu": [190, 373, 375, 376, 379, 380, 382, 383, 385, 386, 391, 402, 405, 406, 409, 417, 422, 423, 424, 426, 439, 452, 469, 512, 559], "continuous_upd": [447, 455, 468, 484, 485], "contour": [200, 203, 358, 375, 427], "contour_": 465, "contour_alpha_amplitud": 465, "contour_alpha_beta": 465, "contour_beta_amplitud": 465, "contourf": 198, "contract": 392, "contrari": [367, 374], "contrast": [386, 559], "contrera": 427, "contribut": [97, 111, 113, 216, 224, 238, 253, 362, 366, 368, 375, 380, 388, 390, 396, 403, 406, 417, 419, 421, 467, 501, 536, 557, 560, 561], "contributes_to_stat": 97, "contributor": [366, 369, 386, 396, 404, 415, 416], "control": [81, 85, 88, 99, 102, 106, 107, 366, 379, 397, 399, 435, 462, 468, 473, 500, 562], "controversi": [366, 371, 372, 386], "conveni": [13, 119, 365, 366, 369, 376, 380, 388, 390, 397, 407, 409, 414, 417, 419, 424, 449, 462, 463, 464, 468, 469, 470, 471, 475, 477, 486, 495, 499, 558], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 184, 185, 186, 188, 196, 197, 198, 388, 390, 409, 410, 413, 414, 428, 464, 467, 468, 471, 496, 498, 505, 512, 562], "converg": [394, 408, 429, 439, 441, 447, 465, 496, 500, 517], "convers": [82, 85, 88, 101, 119, 120, 121, 371, 390, 393, 398, 400, 417, 430, 431, 432, 435, 513], "conversion_typ": [476, 486], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 81, 83, 84, 85, 88, 96, 98, 99, 102, 104, 106, 107, 119, 121, 124, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 204, 205, 206, 207, 208, 209, 216, 230, 238, 275, 292, 295, 296, 300, 313, 329, 347, 349, 350, 367, 372, 380, 381, 390, 393, 396, 418, 430, 431, 432, 435, 445, 450, 458, 459, 464, 465, 469, 470, 475, 486, 498, 504, 509, 512, 562, 564], "convert_bytestring_to_unicod": [85, 88], "convert_unicode_to_bytestr": [85, 88], "convinc": 486, "convolut": [114, 118, 124, 129, 153, 186, 198, 365, 378, 384, 405, 412, 414, 423, 425, 426, 432, 445, 468, 496, 513], "convolution_method": 186, "convolv": [102, 108, 112, 129, 153, 186, 198, 377, 405, 414, 417, 426, 442, 443, 445, 468, 506, 536], "convolve_ful": 186, "convolve_wc": 186, "cookiecutt": 382, "coolwarm": [447, 476, 477, 485], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 240, 283, 377, 410, 452, 468, 469, 509, 512, 513, 520], "coord_to_idx": [183, 184, 187, 189, 190, 193, 195, 196, 468], "coord_to_pix": [183, 184, 187, 189, 190, 193, 195, 196, 468], "coordiant": 466, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 81, 83, 85, 86, 87, 88, 91, 92, 93, 99, 100, 102, 105, 106, 107, 119, 121, 123, 124, 125, 130, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 168, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 216, 217, 225, 228, 230, 238, 240, 242, 250, 251, 253, 265, 283, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 317, 323, 327, 328, 342, 367, 371, 372, 373, 375, 379, 380, 385, 386, 389, 391, 392, 405, 407, 410, 412, 423, 425, 426, 428, 435, 436, 439, 441, 442, 445, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 485, 486, 496, 504, 509, 511, 512, 517, 518, 521, 558, 559, 564], "coordsi": 412, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 101, 102, 105, 106, 107, 114, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 143, 144, 150, 155, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 295, 338, 366, 371, 374, 376, 380, 382, 388, 395, 396, 402, 417, 419, 426, 427, 428, 431, 436, 439, 441, 442, 447, 449, 455, 458, 459, 463, 465, 467, 471, 473, 476, 500, 509, 513, 524, 560], "copy_data": [85, 88, 216, 224, 238, 253, 261, 263, 265], "copy_indic": [85, 88], "copy_ob": [80, 500], "copy_on_getitem": [85, 88], "copyright": 402, "core": [16, 53, 82, 101, 120, 151, 365, 366, 373, 379, 380, 387, 391, 392, 403, 406, 423, 427, 431, 435, 441, 442, 444, 447, 449, 451, 453, 455, 459, 470, 475, 476, 488, 498, 560], "corner": [380, 383, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "corr_coord": [155, 158], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 81, 86, 99, 100, 102, 144, 155, 158, 172, 177, 178, 191, 224, 240, 241, 265, 366, 378, 379, 391, 392, 393, 395, 409, 412, 414, 415, 416, 417, 420, 423, 424, 426, 428, 429, 430, 431, 432, 435, 439, 440, 441, 442, 451, 455, 457, 463, 464, 465, 467, 469, 470, 471, 473, 477, 484, 486, 497, 498, 507, 520, 532, 535, 537, 540, 545], "correctli": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 367, 369, 392, 393, 407, 409, 414, 419, 420, 429, 466, 467, 468, 469, 470, 473, 512, 518], "correl": [19, 20, 26, 118, 124, 201, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 249, 254, 256, 257, 258, 259, 262, 266, 384, 389, 390, 417, 427, 450, 453, 465, 469, 471, 473, 484, 498, 557], "correlate_off": 118, "correlation_radiu": [16, 118, 134, 135, 440, 444, 445, 447, 460, 477, 484, 498], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 82, 85, 87, 88, 97, 99, 101, 102, 106, 107, 119, 120, 121, 122, 123, 124, 126, 127, 129, 142, 143, 144, 150, 153, 155, 157, 158, 159, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 210, 211, 214, 218, 220, 221, 222, 225, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 293, 359, 376, 377, 378, 379, 386, 387, 390, 392, 394, 411, 414, 436, 437, 439, 440, 441, 447, 451, 452, 457, 463, 465, 467, 468, 471, 472, 473, 475, 476, 477, 484, 486, 496, 497, 498, 500, 512, 513, 523, 526, 558, 559, 564], "cosimo": [414, 417, 419, 425, 426, 428, 431], "cosmic": [52, 218, 268, 384, 475], "cost": 559, "costom": 473, "costomprior": 473, "costum": 473, "coto": 425, "could": [16, 82, 101, 120, 367, 369, 371, 372, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 436, 439, 447, 449, 463, 475, 476, 484, 499], "count": [16, 81, 89, 97, 99, 102, 103, 104, 105, 106, 107, 110, 114, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 133, 160, 162, 165, 166, 167, 172, 174, 178, 182, 185, 186, 188, 189, 190, 194, 197, 198, 207, 209, 216, 238, 277, 279, 280, 281, 286, 287, 290, 292, 317, 351, 353, 362, 364, 372, 374, 377, 378, 379, 381, 382, 386, 390, 408, 409, 412, 414, 417, 419, 420, 426, 427, 431, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 455, 457, 458, 459, 460, 464, 465, 467, 468, 469, 473, 477, 482, 484, 485, 486, 498, 500, 504, 507, 508, 509, 510, 513, 559, 560, 561, 563], "count_bkg": 460, "count_statist": 562, "counter": [217, 225, 228, 517], "counts_3d": 468, "counts_imag": [453, 464], "counts_min": 138, "counts_off": [99, 102, 103, 106, 107, 160, 166, 167, 170, 364, 378, 419, 430, 431, 440, 441, 442, 445, 449, 460, 464, 496, 562], "counts_on": 408, "counts_rat": 464, "countspredictor": 377, "countsspectrum": [378, 381, 408, 409, 411, 413, 422], "countsstatist": [277, 279, 390, 413, 414, 417, 428], "coupl": [374, 380, 385, 396, 414, 426, 468], "cours": [366, 369, 373, 376, 383, 402, 440, 447, 464, 468, 476, 484, 560, 563], "cousin": [408, 414, 422, 424, 559], "cousins2007": [559, 562], "coutinho": [414, 417], "cov": [244, 245, 396], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [201, 359, 427], "covar_list": 201, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 122, 123, 126, 127, 202, 203, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 277, 279, 359, 384, 394, 413, 419, 427, 428, 431, 440, 484, 562], "covariance_data": [216, 224, 238, 253, 263], "covariance_opt": 203, "covariance_result": 204, "covariance_typ": 394, "covariancegaussianprior": 394, "covarianceresult": [98, 203, 204, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485], "cover": [264, 366, 368, 380, 381, 382, 390, 436, 457, 458, 464, 468, 480, 486, 501], "coverag": [375, 381, 396, 405, 409, 417, 423, 426, 458, 465], "coveral": [396, 405], "cpu": [122, 123, 126, 129, 315, 316, 379], "cpython": 371, "crab": [66, 81, 106, 107, 127, 138, 235, 269, 275, 374, 378, 386, 405, 411, 423, 425, 439, 440, 441, 448, 449, 457, 463, 464, 465, 469, 473, 476, 477, 478, 484, 485, 486, 498, 509, 513, 559], "crab_10gev_100tev_dataset": 448, "crab_3fhl": 486, "crab_3fhl_spec": 486, "crab_events_pass4": 477, "crab_fp": 440, "crab_fp_tabl": 440, "crab_hess_ecpl": 269, "crab_hess_fp": [119, 121, 137], "crab_magic_lp": 441, "crab_model": 465, "crab_posit": 509, "crab_spec": 448, "crab_spectrum": 465, "crabnebula": 457, "crabspectrum": 409, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 80, 81, 82, 84, 85, 86, 88, 89, 90, 96, 98, 99, 101, 102, 106, 107, 108, 109, 110, 112, 114, 119, 120, 121, 122, 123, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 165, 167, 168, 169, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 275, 295, 305, 326, 330, 344, 353, 355, 360, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 409, 410, 411, 414, 417, 419, 425, 426, 428, 429, 430, 431, 432, 435, 437, 440, 441, 442, 447, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 465, 467, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 486, 488, 495, 496, 497, 500, 504, 507, 509, 510, 511, 512, 516, 518, 519, 520, 521, 526, 536, 545, 557, 558, 560, 565], "create_crab_spectral_model": [439, 441, 448], "create_fermi_isotropic_diffuse_model": [470, 476], "create_map_dataset_from_observ": [90, 105], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 123, 196, 375, 376, 380, 389, 392, 411, 417, 456, 471, 478], "creator": [101, 120, 369, 393, 440, 471, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "creatormedadata": 393, "creatormetadata": [82, 101, 120, 393], "credit": 402, "crimson": 441, "criteria": [15, 88, 419, 467, 472, 480], "criterion": [88, 129, 293, 435, 500], "critic": 473, "criticis": 357, "crop": [84, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198], "crop_width": [183, 184, 185, 186, 188, 193, 194, 196, 197, 198], "cross": [19, 372, 386, 488], "crowd": 463, "crpix": 196, "crpix1": 468, "crpix2": 468, "crucial": [393, 451, 452, 464], "cruft": 396, "crux": [33, 38], "crval1": 468, "crval2": 468, "cryptic": 377, "csh": 560, "csobsselect": 376, "css": [85, 88, 396], "cstat": [378, 411], "csv": 121, "ct": [351, 426, 465], "cta": [80, 81, 87, 99, 102, 106, 107, 111, 113, 114, 118, 134, 135, 140, 144, 145, 146, 155, 165, 218, 268, 354, 359, 361, 366, 370, 373, 374, 375, 379, 382, 385, 386, 395, 398, 403, 406, 407, 417, 423, 424, 425, 426, 434, 435, 440, 442, 444, 447, 449, 451, 452, 455, 459, 460, 464, 466, 470, 472, 477, 478, 479, 480, 484, 488, 497, 498, 500, 502, 505, 558, 559, 564], "cta_data_analysi": [386, 434, 449, 454], "cta_dataset": 470, "cta_north": 94, "cta_sensist": 386, "cta_sensit": [434, 435, 438], "cta_simul": 406, "cta_south": [94, 435, 442, 451, 452, 455, 459], "cta_util": 426, "ctadata": 475, "ctao": [386, 392, 475, 500], "ctapip": [369, 373, 375, 382, 383, 385, 386, 387], "ctaspectrumobserv": 426, "ctobssim": [80, 379], "ctool": [376, 379, 382, 386, 534], "cts_sigma": 465, "ctselect": 376, "ctype1": 468, "ctype2": 468, "cube": [46, 99, 102, 129, 160, 178, 185, 186, 188, 194, 197, 198, 234, 253, 366, 377, 378, 379, 385, 386, 387, 389, 398, 405, 409, 410, 413, 418, 421, 422, 423, 424, 425, 426, 443, 444, 449, 453, 476, 486, 496, 505, 507, 512, 513, 559], "cubic": 468, "cumbersom": [376, 384], "cumsum": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 185, 186, 188, 194, 197, 198], "cumul": [97, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 185, 186, 188, 194, 197, 198, 317, 379, 439, 451, 470, 500], "cunit1": 468, "cunit2": 468, "curat": [396, 406], "curl": [66, 383, 397, 398, 400, 475], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 102, 106, 107, 121, 122, 126, 148, 171, 183, 184, 185, 186, 188, 194, 195, 196, 197, 198, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 344, 360, 366, 367, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 398, 399, 400, 409, 427, 440, 462, 466, 467, 468, 470, 475, 477, 478, 484, 485, 489, 496, 497, 498, 513, 557, 559, 560], "curv": [15, 19, 20, 26, 75, 81, 126, 130, 210, 211, 214, 218, 220, 221, 222, 226, 230, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 285, 358, 370, 377, 379, 382, 386, 390, 398, 407, 411, 413, 414, 418, 421, 422, 424, 426, 428, 431, 432, 434, 435, 456, 461, 480, 496, 497, 498, 499, 508, 509, 512, 514, 556, 558], "curve_fit": 359, "cuspi": 488, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 101, 120, 125, 375, 376, 377, 382, 384, 389, 393, 397, 411, 412, 414, 426, 435, 442, 444, 447, 449, 455, 459, 464, 466, 468, 475, 500, 545], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 471, "customis": [386, 466], "cut": [88, 118, 157, 171, 172, 376, 425, 431, 434, 435, 438, 442, 460, 464, 467, 468, 472, 475, 480, 485, 486, 496, 497, 508, 509, 512, 557], "cutoff": [220, 221, 222, 257, 258, 259, 275, 411, 431, 434, 442, 447, 514, 546], "cutout": [99, 102, 106, 107, 111, 113, 143, 144, 150, 155, 158, 161, 184, 186, 194, 196, 198, 263, 372, 378, 407, 412, 417, 423, 426, 444, 445, 447, 449, 453, 464, 467, 476, 485, 486, 496], "cutout2d": [99, 102, 143, 144, 150, 155, 158, 161, 196, 198, 263, 372], "cutout_and_mask_region": [198, 431], "cutout_info": 411, "cutout_mod": 161, "cutout_slic": 196, "cutout_width": 161, "cval": [185, 186, 188, 194, 197, 198], "cwd": 374, "cwt": [386, 411, 423, 426], "cx": 465, "cxc": [203, 386, 465], "cy": 465, "cyan": 363, "cycl": [363, 369, 370, 371, 383, 385, 399, 424, 428], "cycler": [363, 435], "cython": [369, 408, 418], "d": [19, 20, 23, 85, 87, 88, 189, 192, 195, 230, 235, 246, 264, 269, 334, 369, 384, 386, 419, 428, 437, 451, 452, 459, 468, 471, 472, 505, 512, 517, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 563], "d9o6a": 467, "dai": [85, 88, 119, 121, 195, 223, 227, 229, 246, 252, 369, 380, 386, 395, 396, 468, 553, 560], "daniel": [427, 430, 432], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 386, 394, 426, 431, 432, 434, 474, 480, 489, 512, 558], "dark_matter_spectra": 26, "darkbit": 488, "darkblu": 473, "darkgreen": 473, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 248, 367, 386, 426, 462, 489], "darkmatterannihilationspectralmodel": [20, 248, 428, 462, 471], "darkmatterdecayspectralmodel": [248, 432, 462, 471], "darkorang": [439, 440], "darksusi": 488, "darwin": 402, "dash": [460, 462, 473], "dashboard": 396, "dat": [26, 85, 88, 216, 238, 440, 484, 488], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 119, 120, 121, 122, 123, 124, 125, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 165, 166, 167, 171, 178, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 280, 285, 286, 288, 289, 292, 293, 294, 303, 304, 307, 325, 333, 336, 337, 345, 354, 355, 356, 357, 359, 360, 365, 367, 370, 373, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 389, 390, 392, 394, 395, 398, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 437, 442, 443, 444, 445, 449, 451, 452, 455, 459, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 482, 487, 488, 495, 496, 498, 500, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 519, 520, 532, 535, 537, 539, 540, 545, 557, 558, 559, 562, 563, 564], "data_extend": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "data_nbyt": [183, 184, 193, 196], "data_path": 477, "data_reduct": 382, "data_shap": [98, 99, 102, 106, 107, 183, 184, 193, 196, 464, 513], "data_shape_ax": [184, 193, 196], "data_shape_imag": 196, "data_spectr": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "data_stor": [80, 93, 165, 293, 294, 382, 402, 441, 449, 451, 458, 460, 467, 472, 475, 477, 478, 482, 485, 497, 507, 509, 510], "data_storag": 497, "data_summari": 423, "dataaxi": 408, "databas": [372, 500], "dataclass": 366, "datafram": [85, 88], "dataset": [6, 15, 16, 19, 20, 26, 62, 91, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 133, 134, 135, 136, 138, 143, 144, 150, 155, 158, 160, 161, 162, 165, 166, 167, 170, 171, 172, 187, 192, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 315, 359, 362, 363, 369, 370, 372, 374, 379, 381, 382, 383, 385, 386, 390, 394, 395, 396, 398, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 424, 426, 427, 428, 429, 430, 431, 432, 434, 437, 439, 442, 443, 449, 450, 451, 453, 455, 460, 462, 463, 468, 471, 472, 474, 475, 476, 478, 480, 482, 486, 497, 498, 500, 505, 507, 508, 509, 510, 512, 520, 524, 526, 554, 555, 557, 558, 559, 560, 561, 562], "dataset1": [473, 496], "dataset1_prior": 473, "dataset2": [473, 496], "dataset2_prior": 473, "dataset_1": 498, "dataset_2": 498, "dataset_3fgl": 437, "dataset_3fhl": 437, "dataset_cta": 464, "dataset_empti": [436, 439, 441, 442, 449, 458, 464, 467, 477, 509], "dataset_energy_depend": 450, "dataset_fak": 442, "dataset_fp": 459, "dataset_gammacat": 437, "dataset_hawc": 448, "dataset_hess": [448, 465], "dataset_imag": [449, 464], "dataset_kwarg": [90, 105], "dataset_lc": 459, "dataset_mak": [439, 441, 449, 458, 467, 509], "dataset_nam": [105, 109, 126, 216, 224, 238, 388, 394, 447, 451, 452, 455, 464, 470, 485, 520], "dataset_on_off": [160, 166, 167, 170, 435, 439, 441, 442, 445, 449, 458, 467, 509, 510], "dataset_on_off1": 435, "dataset_onoff": 378, "dataset_simul": 441, "dataset_stack": [439, 447], "datasetmodel": [205, 238, 253, 388, 414, 451, 452, 455], "datasetread": 103, "datasets1": 363, "datasets2": 363, "datasets3": 363, "datasets_fil": [16, 440, 444, 445, 447, 484], "datasets_hess": 448, "datasets_in_phase_bin_3": 390, "datasets_mak": 467, "datasets_nam": [19, 20, 26, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 413, 448, 470, 484, 520], "datasets_read": [470, 476], "datasets_sl": 464, "datasetsconfig": 16, "datasetsmak": [163, 419, 431, 467, 472, 500], "datasetsmetadata": 393, "datasetwrit": 104, "datastor": [16, 87, 93, 165, 293, 294, 372, 376, 381, 398, 402, 408, 419, 420, 422, 423, 425, 431, 432, 436, 439, 440, 441, 444, 445, 447, 449, 451, 455, 458, 460, 467, 472, 477, 478, 482, 484, 500, 507, 509, 510, 560], "datastorecheck": 426, "datastoreindex": 376, "datastoreinmemori": 376, "datastoremak": [408, 419], "datastoremetadata": 393, "datastoreobserv": [166, 372, 376, 412, 425], "datastorexml": 376, "datasum": [81, 84, 86, 97, 98, 99, 102, 103, 104, 106, 107, 119, 121, 142, 143, 144, 150, 155, 158, 185, 186, 188, 192, 194, 197, 198], "datat": [85, 88], "date": [85, 88, 101, 120, 347, 383, 391, 392, 393, 395, 403, 425, 440, 443, 471, 478, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 564], "datefmt": [16, 440, 444, 445, 447, 484, 560], "dateref": 443, "datetim": [101, 120, 393], "datetime64": [85, 88], "datfix": 443, "daughter": 393, "david": [376, 381, 406, 426, 427], "dc": [447, 475], "dc1": [375, 386, 427, 451, 460, 466, 470, 475], "dc2": 375, "ddof": 456, "de": [19, 20, 26, 66, 97, 210, 211, 214, 218, 220, 221, 222, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 292, 392, 414, 417, 420, 462, 478, 559], "deactiv": 397, "dead": [81, 84, 86, 325, 376], "dead_tim": [81, 86, 325], "deadc": 376, "deadlin": [375, 379], "deadtim": [86, 178, 442, 451, 455, 475], "deadtime_fract": 86, "deal": [84, 366, 372, 381, 382, 442, 451, 458, 480, 500], "debanjan": 408, "debian": [383, 399, 421], "debug": [11, 366, 372, 377, 382, 428, 439, 468, 500, 560], "dec": [66, 81, 83, 85, 86, 88, 91, 134, 135, 168, 366, 367, 371, 375, 377, 379, 382, 383, 386, 404, 430, 435, 439, 441, 443, 445, 449, 452, 457, 458, 460, 463, 467, 469, 475, 476, 477, 478, 485, 486, 488, 500, 504, 509, 564], "dec_pnt": 478, "dec_tru": 379, "decad": [17, 18, 21, 22, 24, 25, 27, 109, 190, 271, 432, 451], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 223, 229, 246, 389, 451, 456, 459, 471, 488, 550], "decemb": 404, "decid": [366, 372, 375, 376, 377, 378, 380, 381, 385, 388, 389, 390, 395, 440, 472, 484, 564], "decim": [85, 88, 291], "decis": [366, 367], "declar": [15, 85, 88, 253, 345, 346, 369, 373, 374, 377, 382, 383, 389, 396, 413, 499], "decor": [345, 346, 366, 393, 560], "decorrel": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "decoupl": 68, "dedic": [369, 380, 381, 390, 392, 393, 396, 412, 413, 414, 432, 439, 440, 441, 447, 460, 465, 484, 485, 497], "deduc": [390, 432], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 88, 96, 97, 98, 99, 101, 102, 106, 107, 120, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 266, 267, 447], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 261, 263, 265], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 278, 345, 346, 366, 367, 377, 378, 379, 380, 389, 390, 393, 394, 447, 465, 471, 473, 482, 509, 560, 562], "def_unit": [435, 442, 444, 447, 449, 455, 459, 475], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 64, 66, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 284, 285, 286, 291, 292, 293, 295, 306, 307, 308, 313, 315, 316, 322, 323, 324, 325, 327, 328, 333, 335, 337, 343, 348, 349, 353, 355, 356, 357, 359, 360, 362, 363, 366, 372, 378, 382, 383, 389, 392, 396, 402, 408, 410, 411, 412, 414, 417, 419, 425, 426, 428, 429, 430, 431, 432, 440, 441, 443, 445, 447, 451, 452, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 484, 485, 486, 496, 498, 500, 507, 510, 511, 512, 513, 517, 518, 519, 526, 532, 535, 536, 560, 564], "default_alpha": [21, 27], "default_beta": 27, "default_css": [85, 88], "default_css_nb": [85, 88], "default_epoch": 349, "default_gamma": 27, "default_hdu_t": 80, "default_interp_kwarg": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 424], "default_nam": [85, 88], "default_notebook_table_class": [85, 88], "default_obs_t": 80, "default_paramet": [19, 20, 26, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 394], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [139, 140, 145, 147, 152, 157, 466], "defer": [102, 107], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 81, 82, 85, 86, 88, 92, 98, 99, 100, 101, 102, 105, 106, 107, 111, 113, 118, 119, 120, 121, 122, 123, 125, 126, 129, 142, 143, 144, 146, 150, 153, 154, 155, 156, 158, 161, 162, 166, 171, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 203, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 278, 280, 286, 287, 307, 317, 322, 323, 324, 325, 328, 356, 357, 366, 367, 369, 371, 372, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388, 390, 391, 392, 393, 394, 397, 398, 399, 400, 407, 408, 411, 414, 417, 420, 424, 425, 430, 431, 432, 440, 442, 443, 444, 445, 447, 448, 450, 453, 455, 456, 459, 460, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 484, 486, 496, 497, 498, 500, 502, 505, 509, 510, 512, 517, 519, 521, 522, 523, 526, 527, 530, 531, 533, 534, 536, 538, 539, 541, 542, 543, 544, 545, 555, 557, 558, 559, 560, 561, 562, 563], "definit": [81, 82, 84, 86, 97, 99, 101, 102, 106, 107, 120, 162, 193, 278, 292, 306, 366, 375, 376, 380, 387, 388, 389, 390, 393, 409, 413, 414, 430, 432, 441, 444, 453, 458, 466, 467, 484, 496, 498, 505, 506, 511, 513, 517, 518, 562], "deform": 513, "deg": [16, 33, 34, 38, 47, 66, 81, 83, 85, 88, 91, 93, 99, 102, 106, 107, 109, 110, 111, 113, 114, 118, 123, 124, 129, 134, 135, 144, 146, 147, 152, 153, 154, 155, 156, 157, 158, 160, 168, 169, 171, 173, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 216, 217, 225, 228, 238, 242, 250, 251, 253, 293, 294, 327, 361, 366, 367, 377, 380, 382, 389, 390, 393, 402, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 484, 485, 486, 497, 498, 500, 502, 504, 507, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524], "deg2": 478, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 102, 106, 107, 109, 110, 116, 119, 121, 136, 184, 185, 186, 188, 191, 196, 197, 198, 216, 238, 242, 253, 264, 432, 435, 436, 440, 445, 450, 458, 463, 467, 468, 469, 475, 484, 498, 512, 513, 562, 563], "deil": [371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 405, 406, 407, 408, 409, 410, 411, 412, 418, 421, 422, 423, 424, 425, 426, 427], "deiml": 425, "dej2000": [463, 486], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 377], "delai": [387, 391], "deleg": 382, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 366, 377, 396, 397, 398, 400, 432, 470], "delete_interv": 84, "delimit": 121, "deliv": 382, "delta": [19, 20, 23, 85, 88, 118, 119, 124, 127, 129, 147, 195, 244, 245, 276, 291, 431, 465, 473, 498, 505, 506, 518, 519, 521, 562], "delta_t": [116, 276, 450], "demonstr": [382, 407, 410, 411, 412, 413, 414, 419, 431, 432, 456, 457, 468, 470, 480, 512], "denot": [99, 106, 390, 496], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 121, 147, 198, 321, 324, 359, 379, 445, 447, 462, 463, 473, 488, 490, 494, 504, 505, 506, 559], "dep": 431, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 86, 97, 99, 100, 105, 106, 116, 119, 121, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 172, 183, 184, 193, 196, 198, 216, 230, 238, 253, 295, 346, 366, 368, 369, 370, 372, 377, 378, 379, 380, 381, 384, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 410, 411, 414, 421, 423, 426, 427, 429, 431, 432, 434, 435, 438, 442, 444, 445, 454, 458, 463, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 480, 496, 497, 500, 504, 505, 508, 509, 512, 526, 557], "deploy": 392, "deposit": 392, "deprec": [16, 81, 82, 83, 86, 101, 120, 122, 123, 126, 206, 208, 408, 417, 430, 431, 432, 524], "deprecated_argument_funct": 366, "deprecated_argument_function_kwarg": 366, "deprecated_attribut": 366, "deprecated_funct": 366, "deprecated_renamed_argu": 366, "deprecatedparseprotocol": [16, 82, 101, 120], "deprecation_polici": 391, "depriv": 507, "depth": [16, 82, 101, 120, 334, 398, 403, 456, 526], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 97, 118, 122, 126, 129, 264, 366, 378, 379, 384, 387, 390, 443, 475, 477, 498, 512, 561, 562], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 92, 121, 122, 124, 129, 154, 194, 203, 266, 287, 367, 369, 371, 372, 375, 376, 378, 379, 380, 382, 383, 385, 386, 389, 390, 391, 392, 403, 409, 417, 425, 426, 440, 443, 451, 452, 456, 465, 471, 473, 475, 477, 478, 484, 496, 500, 504, 513, 514, 559, 560, 561, 562], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 85, 88, 123, 203, 367, 371, 372, 380, 386, 391, 392, 403, 428, 432, 447, 455, 463, 465, 468, 475, 477, 484, 485, 500], "description_width": [447, 455, 468, 484, 485], "descriptionstyl": [447, 455, 468, 484, 485], "descriptor": [85, 86, 88, 99, 102, 106, 107, 263, 304, 367, 413], "desi": 478, "design": [371, 372, 375, 376, 379, 380, 382, 386, 388, 390, 391, 405, 425, 432], "desir": [16, 82, 85, 88, 101, 120, 153, 183, 184, 193, 196, 341, 342, 343, 468, 486, 513], "desktop": 403, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 97, 99, 102, 107, 121, 122, 143, 144, 150, 155, 158, 161, 184, 196, 198, 203, 206, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 263, 264, 265, 366, 367, 369, 371, 374, 375, 376, 379, 380, 381, 385, 386, 387, 391, 392, 395, 397, 401, 403, 404, 411, 415, 416, 434, 435, 439, 441, 442, 443, 444, 449, 450, 451, 454, 455, 459, 464, 465, 467, 468, 469, 470, 471, 473, 475, 477, 478, 480, 486, 496, 497, 499, 505, 509, 510, 512, 557, 558, 559, 560, 564], "detect": [59, 134, 135, 275, 356, 357, 367, 382, 385, 386, 388, 405, 411, 412, 413, 423, 425, 426, 432, 434, 446, 463, 475, 477, 480, 496, 512, 559, 562], "detect_t": 386, "detector": [81, 86, 100, 105, 147, 469, 477, 505, 559], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 109, 128, 146, 152, 154, 156, 168, 169, 171, 173, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 295, 317, 377, 381, 384, 392, 419, 431, 432, 435, 441, 444, 445, 450, 457, 467, 469, 490, 558], "determinist": 366, "deti": [81, 100, 105, 379, 475], "detx": [81, 100, 105, 379, 475], "dev": [11, 16, 80, 82, 101, 120, 366, 368, 369, 382, 392, 395, 396, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 526, 554, 555], "dev370": [101, 120, 403, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "develop": [367, 371, 372, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 399, 403, 405, 418, 425, 426, 427, 475], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 122, 186, 198, 203, 282, 465, 473], "devoid": [439, 503], "devop": 392, "devot": 480, "dex": 295, "df": [85, 88, 116, 136, 450, 465, 562], "diagnosi": 375, "diagnost": 382, "diagon": [142, 143, 144, 384, 394, 476], "diagram": 564, "dialog": [398, 400], "diamet": [184, 185, 186, 436], "diamond": 472, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 114, 116, 119, 120, 121, 122, 123, 124, 126, 127, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 275, 276, 277, 278, 279, 283, 293, 307, 315, 316, 333, 334, 335, 337, 347, 348, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 366, 381, 383, 387, 390, 393, 410, 414, 417, 425, 440, 447, 457, 458, 463, 465, 468, 472, 484, 485, 512, 517, 526], "dict_kei": 526, "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 85, 86, 87, 88, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 116, 119, 120, 121, 122, 123, 126, 127, 129, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 170, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 196, 197, 198, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 277, 278, 279, 283, 305, 333, 334, 335, 337, 347, 350, 360, 383, 385, 390, 393, 394, 439, 441, 447, 465, 466, 472, 473, 555], "dictionnari": 359, "did": [373, 380, 385, 386, 387, 389, 392, 408, 435, 442, 444, 447, 449, 455, 459, 465, 473, 475], "didn": [81, 86, 373, 376, 380, 383, 488], "diff": [98, 99, 102, 106, 107, 366, 369, 374, 378, 447, 455, 485], "diff_flux": 462, "diff_flux_point": [98, 464], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 66, 78, 84, 85, 88, 91, 97, 116, 119, 121, 122, 123, 126, 127, 129, 134, 139, 140, 141, 142, 145, 147, 149, 152, 157, 167, 185, 186, 188, 191, 192, 193, 194, 196, 197, 198, 275, 276, 277, 279, 325, 329, 341, 342, 357, 366, 367, 369, 371, 372, 374, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 394, 396, 398, 400, 409, 412, 414, 424, 427, 428, 429, 431, 435, 439, 440, 441, 444, 447, 450, 451, 452, 453, 456, 457, 459, 463, 464, 465, 467, 469, 470, 471, 472, 473, 476, 477, 480, 484, 486, 488, 496, 498, 500, 505, 512, 513, 518, 519, 558, 560, 561, 562], "different": 374, "differenti": [23, 77, 119, 121, 128, 185, 186, 188, 190, 194, 197, 198, 239, 253, 268, 269, 322, 372, 377, 384, 390, 424, 468, 471, 476, 486, 498, 559], "differential_flux": 121, "difficult": [377, 380, 396], "diffus": [67, 185, 186, 188, 194, 197, 198, 270, 366, 382, 385, 426, 427, 447, 451, 463, 468, 470, 471, 475, 557], "diffuse_cub": 471, "diffuse_galactic_fermi": 470, "diffuse_iem": [470, 476], "diffuse_iso": [470, 476], "diffuse_model": 270, "difrsp0": [476, 486], "difrsp1": [476, 486], "difrsp2": [476, 486], "difrsp3": [476, 486], "difrsp4": [476, 486], "digit": 366, "dilat": [198, 417], "dim": [152, 324, 422, 423, 449, 559], "dimens": [46, 53, 99, 102, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 167, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 261, 262, 265, 295, 307, 359, 382, 414, 425, 427, 431, 465, 466, 468, 471, 480, 496, 512, 513, 518], "dimension": [31, 32, 37, 67, 85, 88, 183, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 225, 228, 271, 308, 321, 372, 380, 394, 398, 423, 443, 465, 466, 468, 471, 486, 504, 506, 512, 513, 558, 559], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 147, 258, 259, 294, 453, 471], "dimitri": [417, 419], "dipol": [51, 54], "dirac": 19, "direct": [88, 101, 157, 175, 176, 179, 181, 190, 217, 225, 228, 299, 302, 367, 372, 378, 380, 385, 387, 390, 393, 417, 434, 438, 442, 467, 480, 496, 497, 505, 506, 508, 509, 512, 517, 557, 558, 559], "directional_offset_bi": [435, 442], "directli": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 68, 81, 85, 86, 88, 133, 157, 172, 185, 186, 188, 194, 197, 198, 261, 263, 265, 366, 368, 369, 371, 373, 374, 377, 378, 379, 380, 384, 386, 393, 398, 400, 401, 405, 407, 408, 409, 411, 425, 432, 437, 439, 440, 442, 447, 448, 449, 452, 453, 455, 456, 458, 459, 463, 464, 465, 466, 468, 469, 470, 471, 472, 475, 476, 484, 485, 486, 488, 496, 500, 505, 509, 512, 536, 562], "directori": [11, 80, 85, 366, 382, 440, 450, 478, 484, 486, 497, 500, 560], "dirk": [408, 422, 424], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 417], "disable_unicode_literals_warn": 366, "disadvantag": 560, "disagr": 371, "disambigu": 371, "disc": [444, 445, 447, 452], "discard": [393, 463], "discard_on_copi": [85, 88], "discarded_ind": 463, "discarded_spati": 463, "discarded_t": 463, "disccus": 375, "discourag": 366, "discov": 560, "discret": [88, 291, 379, 465, 512], "discuss": [13, 59, 266, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 403, 425, 473, 478, 488, 489, 564], "disjoint": 380, "disk": [80, 107, 144, 147, 186, 196, 198, 217, 228, 230, 344, 365, 366, 376, 377, 378, 382, 389, 390, 434, 435, 439, 447, 448, 468, 469, 470, 471, 511, 514, 519, 523, 525], "disk_inc": 380, "diskspatialmodel": [71, 247, 389, 410, 431, 470, 471, 517], "dismiss": 97, "disp": [504, 505], "dispatch": 377, "dispers": [80, 86, 99, 100, 102, 104, 105, 106, 107, 108, 110, 112, 142, 143, 144, 147, 165, 171, 172, 175, 176, 179, 366, 372, 377, 378, 379, 411, 413, 423, 424, 425, 427, 435, 436, 439, 440, 447, 451, 467, 477, 478, 484, 485, 496, 505, 508, 559], "displac": 299, "displai": [11, 15, 80, 85, 88, 114, 126, 129, 203, 283, 316, 359, 363, 366, 367, 396, 417, 420, 431, 432, 435, 436, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 453, 455, 457, 459, 460, 463, 464, 465, 467, 468, 470, 471, 475, 476, 477, 478, 485, 500, 560], "display_length": [85, 88], "disrupt": [406, 407], "dissolv": 410, "dist": [318, 396], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 123, 134, 135, 193, 239, 265, 291, 298, 324, 380, 423, 430, 441, 443, 453, 462, 463, 465, 494, 509, 536], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 462], "distance_max": [46, 47, 324, 463], "distance_min": [47, 324, 463], "distance_refer": 463, "distinct": [381, 382, 387, 477, 563], "distinguish": [277, 279, 390, 393, 435, 468], "distort": [380, 409], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 81, 105, 136, 147, 182, 222, 233, 239, 277, 279, 317, 318, 322, 359, 362, 364, 365, 366, 370, 371, 374, 379, 384, 385, 388, 391, 392, 396, 399, 410, 419, 425, 431, 432, 435, 439, 441, 442, 445, 447, 451, 453, 455, 457, 465, 470, 473, 475, 486, 488, 500, 504, 505, 507, 513, 521, 536, 561, 562], "divers": 390, "divid": [184, 190, 195, 387, 390, 451, 472, 477, 478], "djangoproject": 386, "djuvsland": 432, "dl3": [6, 16, 80, 81, 84, 86, 88, 93, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 171, 189, 190, 293, 294, 367, 372, 374, 375, 377, 386, 393, 398, 402, 408, 411, 413, 419, 428, 432, 436, 439, 440, 441, 444, 445, 447, 457, 458, 467, 469, 472, 482, 484, 485, 496, 500, 502, 503, 504, 506, 507, 509, 510, 558, 559], "dl4": [96, 98, 99, 102, 106, 107, 114, 118, 122, 126, 129, 150, 171, 372, 393, 398, 413, 459, 464, 465, 500, 558, 559], "dl5": [114, 118, 122, 126, 129, 393, 432, 459, 465, 558, 559], "dl6": [114, 118, 122, 126, 129, 558, 559], "dm": [19, 20, 26, 395, 413, 428, 462, 471], "dm_exampl": 488, "dmfitfunct": 488, "dmpipe": 488, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 462], "dmsky": 488, "dn": [222, 233, 462], "dnde": [19, 20, 26, 66, 119, 120, 121, 128, 130, 131, 132, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 268, 390, 417, 437, 439, 440, 449, 453, 463, 464, 471, 476, 484, 486, 498], "dnde_cu": 269, "dnde_err": [119, 121, 498], "dnde_errn": [66, 119, 121, 463], "dnde_error": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "dnde_errp": [66, 119, 121, 463], "dnde_ref": [119, 121, 390], "dnde_ul": [66, 119, 121, 463, 486], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 92, 97, 101, 120, 142, 153, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 319, 359, 367, 369, 371, 372, 373, 376, 380, 381, 382, 383, 384, 385, 386, 389, 390, 393, 395, 396, 398, 400, 411, 437, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 455, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 475, 476, 484, 485, 486, 496, 500, 512, 557, 560, 563, 564], "do_someth": 366, "doc": [11, 13, 16, 81, 82, 85, 88, 101, 120, 142, 184, 190, 193, 196, 203, 216, 238, 295, 331, 366, 367, 369, 371, 374, 380, 382, 383, 385, 386, 395, 402, 403, 405, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 488, 513, 524, 526, 532, 535, 548, 554, 555, 559, 560, 564], "docker": [383, 396], "dockerfil": [374, 395, 396], "docstr": [366, 386, 392, 417, 418, 419, 421, 424, 430, 431, 432, 471], "doctest": [153, 354, 367], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 277, 279, 303, 307, 317, 340, 353, 366, 368, 370, 371, 373, 374, 376, 380, 382, 383, 385, 387, 389, 391, 392, 396, 397, 402, 403, 404, 411, 413, 414, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 468, 470, 475, 477, 478, 500, 511, 512, 513, 560], "doe": [16, 82, 85, 88, 101, 120, 122, 126, 145, 155, 158, 192, 230, 264, 275, 366, 367, 373, 374, 376, 378, 380, 381, 383, 385, 386, 389, 390, 392, 393, 408, 417, 428, 435, 439, 442, 444, 447, 449, 450, 463, 465, 466, 467, 468, 469, 477, 488, 500, 509, 560], "doesn": [68, 366, 367, 371, 373, 374, 380, 383, 384, 386, 475, 476, 560], "dof": 562, "doi": [136, 392], "domain": [185, 186, 188, 194, 197, 198, 366, 380, 456], "domenico": 423, "dominguez": [218, 219, 389, 526], "dominquez": 218, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 142, 365, 366, 369, 371, 373, 374, 383, 393, 396, 436, 439, 444, 449, 457, 469, 471, 488, 558, 560, 563, 564], "donath": [375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 119, 122, 359, 366, 367, 369, 371, 372, 373, 377, 379, 380, 381, 382, 384, 385, 386, 389, 390, 392, 398, 402, 426, 431, 436, 442, 447, 448, 452, 453, 455, 459, 460, 464, 467, 468, 471, 472, 496, 500, 508, 509, 513, 545, 562, 564], "dos2unix": 366, "dot": [50, 51, 54, 106, 107, 185, 186, 188, 194, 197, 198, 431], "doubl": [27, 118, 130, 283, 392, 424, 432], "doubling_dict": 283, "down": [50, 51, 54, 129, 371, 373, 376, 380, 385, 409, 464, 476, 563], "downgrad": [184, 365], "download": [66, 91, 98, 121, 369, 374, 382, 383, 386, 393, 395, 397, 398, 400, 402, 406, 407, 409, 410, 417, 426, 427, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560], "downsampl": [99, 102, 106, 107, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 408, 414, 423, 464], "downsampled_energi": 464, "downsampling_factor": [129, 449], "downward": [277, 279], "dozen": 366, "dpp": 392, "dr": [17, 18, 21, 22, 24, 25, 27, 519], "dr1": [16, 64, 80, 81, 84, 86, 88, 93, 147, 165, 259, 293, 294, 367, 374, 386, 402, 434, 436, 439, 440, 445, 447, 458, 467, 472, 482, 484, 485, 497, 500, 502, 503, 504, 506, 507, 509, 510, 514, 546], "dr1vfxrg": 467, "dr2": [64, 259, 417, 434, 514, 546], "dr3": [64, 258, 434, 471, 514, 546], "dr4": [64, 432], "draft": [366, 370, 371, 394, 426], "drag": 369, "draw": [33, 186, 317, 379, 473], "drawback": [381, 385], "drawn": [317, 379], "drift": [83, 91, 92, 428], "drive": 382, "driven": [11, 15, 372, 382, 384, 386, 425, 480, 499], "drop": [52, 53, 99, 102, 106, 107, 119, 121, 126, 143, 144, 150, 155, 158, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 217, 224, 263, 351, 370, 371, 382, 383, 388, 407, 410, 411, 414, 417, 424, 427, 451, 468, 496], "ds9": [81, 184, 193, 196, 200, 216, 238, 366, 367, 380, 409, 469, 471, 513], "ds9parser": 380, "dss": 376, "dt": [85, 88], "dtime_t": 456, "dtype": [33, 38, 85, 88, 108, 112, 140, 142, 145, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 216, 238, 295, 366, 394, 441, 444, 453, 463, 464, 466, 467, 468, 475, 476, 486, 498], "duck": [16, 82, 101, 120], "due": [59, 85, 88, 366, 394, 420, 468, 473, 475, 536, 560], "dummi": [106, 107, 380, 444, 500], "dump": [16, 82, 101, 120, 382], "dumps_kwarg": [16, 82, 101, 120], "duplic": [85, 88, 97, 143, 366, 367, 369, 372, 386, 387, 390, 414, 417], "durat": [81, 84, 86, 91, 442, 451, 455, 458, 475, 497, 500], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 81, 82, 83, 86, 92, 99, 101, 102, 106, 107, 120, 162, 275, 367, 374, 378, 382, 385, 386, 388, 391, 392, 393, 394, 395, 396, 411, 414, 431, 432, 440, 441, 451, 457, 458, 464, 467, 469, 473, 485, 496, 497, 559, 563], "dust": 218, "duti": 392, "dwarf": 488, "dx": [33, 299], "dy": [33, 299], "dynam": [363, 497], "dz": 299, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 66, 67, 80, 81, 82, 83, 84, 85, 88, 92, 101, 110, 120, 121, 134, 142, 143, 144, 145, 147, 178, 184, 185, 186, 188, 190, 192, 194, 196, 197, 198, 203, 206, 208, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 277, 279, 283, 295, 297, 301, 327, 334, 344, 355, 356, 361, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 411, 417, 418, 419, 423, 425, 426, 427, 431, 434, 436, 437, 439, 440, 441, 442, 445, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 475, 476, 477, 479, 480, 482, 484, 485, 486, 488, 495, 496, 497, 498, 500, 504, 505, 510, 511, 512, 517, 518, 519, 526, 527, 529, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544, 554, 557, 559, 560, 561, 562, 563, 564, 565], "e2dnd": [19, 20, 26, 119, 120, 121, 128, 130, 131, 132, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 390, 417, 424, 435, 437, 439, 440, 441, 448, 463, 486, 498, 500, 536], "e2dnde_err": [119, 121], "e2dnde_errn": [119, 121, 463], "e2dnde_errp": [119, 121, 463], "e2dnde_ref": [119, 121], "e2dnde_ul": [119, 121, 463], "e501": [19, 20, 122, 142, 178, 189, 190, 196, 218, 270, 363], "e_": [19, 20, 26, 50, 52, 53, 142, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 496, 502, 504, 505, 506, 527, 531, 539, 541, 542], "e_0": [220, 221, 222, 232, 233, 244, 245, 254, 257, 258, 259, 530, 531, 534, 536, 538, 541, 542, 543, 544], "e_b": 389, "e_cut": [66, 463], "e_cutoff": 536, "e_d": [244, 245], "e_edg": 414, "e_max": [66, 121, 390, 435, 439, 440, 441, 452, 457, 463, 464, 465, 468, 473, 486, 498], "e_min": [66, 121, 390, 435, 439, 440, 441, 452, 457, 463, 464, 465, 468, 473, 476, 486, 498], "e_peak": [222, 233], "e_reco": [108, 112, 142, 147, 460, 559], "e_ref": [66, 121, 390, 435, 439, 440, 457, 463, 484, 486, 498], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 437, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 449, "e_sn": [43, 44, 52], "e_tru": [108, 112, 147, 460, 476, 559], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 84, 85, 88, 89, 97, 99, 102, 105, 106, 107, 111, 113, 114, 116, 118, 119, 121, 122, 126, 128, 129, 130, 131, 132, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 166, 167, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 293, 331, 355, 364, 366, 369, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 390, 392, 396, 397, 404, 411, 414, 425, 428, 431, 436, 442, 443, 445, 447, 448, 449, 451, 452, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 478, 485, 489, 495, 496, 497, 500, 504, 505, 506, 512, 513, 520, 536, 537, 559, 560, 563, 564], "eager": 382, "earli": [380, 385, 386, 475], "earlier": [373, 392], "earth": [41, 86, 268, 476], "earth_azimuth_angl": [476, 486], "earthloc": [81, 83, 86, 91, 94, 305, 393], "easi": [366, 367, 372, 377, 380, 381, 382, 385, 386, 390, 393, 411, 417, 425, 468, 469, 476, 497, 557, 558, 560, 564], "easier": [366, 372, 377, 385, 390, 425, 428, 475], "easiest": 399, "easili": [85, 88, 121, 372, 377, 378, 382, 393, 398, 399, 457, 458, 465, 466, 468, 476, 486, 560], "ebel": 443, "ebl": [218, 219, 266, 384, 389, 411, 414, 424, 431, 434, 471, 514, 546], "ebl_data_builtin": 526, "ebl_dominguez11": [219, 526], "ebl_franceschini": [219, 266], "ebl_franceschini_2017": 219, "ebl_saldana": 219, "eblabsorbtionnormspectralmodel": 389, "eblabsorptionnormspectralmodel": [248, 389, 414, 471, 526], "ebound": [142, 190, 513], "ebreak": [210, 254, 527, 541], "ec": [460, 471, 513], "eccentr": [217, 225, 228, 517, 518, 519], "echo": 560, "eco": 392, "ecosystem": 393, "ecpl": [66, 78, 220, 221, 222, 275, 389, 423, 437, 463, 471], "ecpl_norm": 532, "ecsv": [59, 62, 378], "ecut": [220, 257, 531, 542], "edelson": [284, 456], "edelson2002": 284, "edg": [99, 102, 106, 107, 114, 116, 118, 122, 125, 126, 129, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 156, 157, 165, 166, 171, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 217, 359, 380, 390, 408, 414, 417, 435, 448, 449, 450, 451, 452, 456, 466, 467, 468, 469, 476, 477, 484, 517], "edge_max": 517, "edge_min": 517, "edge_width": [217, 470, 517], "edgecolor": [363, 439, 441, 443, 449, 450, 453, 460, 462, 509, 517, 518, 519], "edges_max": [187, 189, 190, 195, 468], "edges_min": [187, 189, 190, 195, 468], "edisp": [16, 80, 85, 86, 93, 99, 102, 103, 106, 107, 108, 112, 142, 143, 144, 147, 151, 165, 171, 172, 175, 176, 253, 293, 294, 367, 376, 377, 378, 379, 382, 412, 414, 417, 423, 424, 425, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 455, 458, 459, 464, 467, 472, 475, 476, 477, 478, 484, 496, 504, 505, 559], "edisp2d": [144, 147, 367], "edisp3d": 466, "edisp_": 496, "edisp_2d": [80, 85, 147, 475, 478], "edisp_3d": 466, "edisp_ev": 466, "edisp_kernel": [142, 464, 504], "edisp_kernel_map": [143, 477], "edisp_map": [100, 105, 143, 144, 466, 504], "edisp_new": 466, "edispersionmap": 496, "edispkernel": [102, 108, 112, 143, 147, 175, 412, 504], "edispkernelmap": [99, 102, 103, 106, 107, 110, 144, 150, 151, 155, 158, 165, 172, 175, 413, 414, 443, 467, 476, 500, 504], "edispmap": [99, 100, 102, 105, 106, 107, 143, 150, 151, 155, 158, 165, 172, 175, 176, 378, 379, 387, 407, 410, 411, 412, 414, 417, 466, 504], "edit": [367, 369, 371, 373, 374, 375, 382, 386, 395, 396, 399, 484, 560], "editor": [367, 392, 440, 484, 560], "editori": 392, "edm": 465, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 81, 86, 114, 122, 145, 184, 193, 196, 203, 216, 235, 238, 268, 269, 278, 285, 386, 465, 513], "eemin": 536, "eff": [145, 502, 505, 518, 519], "eff_area": 466, "effarea": 466, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 80, 85, 86, 88, 102, 104, 144, 145, 171, 172, 177, 179, 180, 193, 216, 238, 356, 357, 366, 371, 376, 377, 379, 380, 390, 421, 423, 439, 451, 453, 456, 457, 473, 477, 478, 480, 484, 505, 513, 518, 519, 559], "effective_area": [151, 379, 475], "effective_livetim": 467, "effective_times_src": 467, "effectivearea3d": 466, "effectiveareat": [378, 405, 417, 421], "effectiveareatable2d": [86, 144, 151, 157, 179, 372, 421, 466, 475, 502], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 102, 107, 371, 377, 378, 379, 380, 381, 388, 437, 472, 505, 510, 562], "effort": [373, 375, 382, 383, 385, 386, 389, 408, 496], "eflux": [19, 20, 26, 119, 120, 121, 130, 131, 132, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 390, 417, 453, 471, 498], "eflux_err": [119, 121, 390], "eflux_errn": [119, 121], "eflux_errp": [119, 121], "eflux_ref": [119, 121], "eflux_ul": [119, 121], "eg": [366, 447, 455, 459, 464, 466, 470, 471], "egal": 475, "egg": 399, "einasto": [21, 488], "either": [66, 80, 85, 86, 88, 92, 107, 119, 121, 147, 162, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 230, 278, 295, 325, 355, 367, 369, 371, 373, 380, 382, 385, 388, 392, 398, 417, 431, 440, 447, 453, 459, 464, 465, 471, 473, 484, 496, 498, 500, 511, 513, 557, 560], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 462], "elabor": [392, 443], "elaps": [81, 375, 559], "electron": [50, 268, 475, 536], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 89, 97, 99, 102, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 359, 384, 431, 463, 468, 512], "elementtre": 475, "elev": 381, "elif": [366, 380, 393], "elli": [405, 418], "ellips": [217, 380, 513, 517], "ellipseannulusskyregion": [509, 513], "ellipseskyregion": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 436, 471, 509], "ellipsoid": 465, "ellipt": [513, 519], "elong": [407, 410, 411, 517, 518], "elpas": 431, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 119, 121, 129, 192, 366, 369, 380, 383, 390, 393, 394, 396, 398, 400, 472, 560, 562], "elsewher": [111, 113], "email": [367, 369, 392, 396], "emax": [126, 243, 269, 444, 450, 539], "emax_fit": 460, "embryon": 382, "emce": [375, 383, 407, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "emerg": 376, "emeri": 426, "emin": [126, 243, 269, 444, 450, 539], "emin_fit": 460, "emiss": [52, 67, 130, 372, 377, 381, 439, 445, 447, 448, 451, 470, 475, 476, 496, 510, 536, 557], "emit": [80, 206, 207, 208, 209, 352, 366, 407, 425, 505], "emitt": 439, "emmanoulopoulo": 291, "emmanoulopoulos2010": 291, "emphasi": 465, "empir": 40, "emploi": 441, "empti": [89, 97, 99, 102, 106, 107, 134, 165, 185, 186, 188, 192, 194, 197, 198, 203, 238, 352, 374, 376, 408, 420, 447, 451, 452, 455, 459, 467, 468, 477, 489, 496, 509, 510, 513], "empty_dataset": 435, "empty_i": 459, "empty_map": [99, 102, 106, 107, 450, 467, 509], "emsembl": 90, "en": [34, 81, 85, 86, 88, 122, 178, 193, 203, 266, 295, 369, 386, 435, 442, 444, 447, 449, 455, 459, 465, 466, 469, 475, 497, 511, 513], "enabl": [375, 378, 399, 408, 417, 426, 435, 442, 444, 447, 449, 455, 459, 475], "enbdb": 447, "encapsul": [196, 390, 511], "enclos": [198, 367, 436, 441, 465, 469], "enclosur": [80, 149, 441, 466], "encod": [16, 82, 85, 88, 101, 120], "encompass": [184, 511, 513], "encount": [159, 398, 399, 400, 401, 441, 451, 459, 478, 548, 560], "encourag": [366, 371, 392, 395, 425], "end": [52, 53, 84, 85, 88, 89, 91, 97, 99, 106, 119, 121, 129, 190, 230, 238, 371, 373, 375, 377, 378, 380, 381, 382, 383, 385, 386, 389, 418, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562], "end_po": [123, 328, 453], "endswith": 366, "energet": 451, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 61, 62, 66, 70, 72, 73, 78, 80, 81, 86, 93, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 119, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 165, 167, 171, 172, 174, 175, 176, 178, 179, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 361, 362, 366, 372, 375, 377, 378, 379, 380, 381, 382, 384, 385, 388, 390, 394, 398, 402, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 436, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 463, 464, 467, 468, 477, 478, 480, 484, 485, 486, 495, 496, 497, 500, 505, 508, 509, 511, 512, 513, 520, 526, 532, 535, 537, 540, 545, 555, 557, 558, 559, 561], "energy_axes_are_align": 97, "energy_axi": [19, 20, 26, 99, 102, 106, 107, 108, 109, 112, 119, 121, 142, 143, 144, 155, 157, 158, 165, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 390, 435, 436, 439, 441, 442, 443, 445, 449, 451, 452, 458, 459, 464, 466, 467, 468, 471, 476, 477, 485, 504, 507, 509, 510, 512, 513], "energy_axis_new": 464, "energy_axis_tru": [99, 102, 106, 107, 108, 109, 110, 112, 142, 143, 144, 145, 147, 152, 153, 155, 165, 367, 411, 435, 436, 439, 441, 442, 443, 445, 449, 451, 452, 455, 458, 459, 460, 464, 466, 467, 476, 477, 485, 504, 507, 509, 510], "energy_bin": 382, "energy_bin_per_decade_max": 109, "energy_bound": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 380, 417, 437, 439, 441, 447, 448, 460, 462, 463, 465, 471, 476, 485, 486, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545], "energy_cent": 263, "energy_column": 390, "energy_depend": 450, "energy_dependent_estim": [434, 450, 454], "energy_edg": [16, 114, 116, 118, 122, 123, 126, 129, 134, 135, 138, 190, 315, 390, 439, 440, 443, 444, 445, 447, 448, 449, 450, 453, 457, 458, 459, 460, 477, 484, 485, 498], "energy_estim": 477, "energy_flux": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 471, 486], "energy_flux_err": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "energy_flux_error": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "energy_index": 152, "energy_integr": 51, "energy_logspac": 385, "energy_mask": [183, 184, 193, 196, 413, 441, 447, 460, 464, 465, 469, 473], "energy_max": [19, 20, 26, 81, 97, 99, 102, 106, 107, 119, 121, 122, 123, 126, 142, 183, 184, 190, 193, 196, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 263, 266, 271, 380, 382, 447, 452, 460, 462, 464, 467, 471, 486], "energy_min": [19, 20, 26, 52, 53, 81, 97, 99, 102, 106, 107, 119, 121, 122, 123, 126, 142, 183, 184, 190, 193, 196, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 263, 266, 271, 380, 382, 447, 452, 460, 462, 464, 467, 471, 486], "energy_nam": [155, 158], "energy_nod": [389, 471], "energy_pow": [19, 20, 26, 121, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 273, 447, 460, 465, 485, 486], "energy_rang": [65, 66, 70, 72, 73, 78, 81, 97, 99, 102, 106, 107, 417, 464, 469, 543, 544], "energy_range_fit": [99, 102, 106, 107, 464], "energy_range_saf": [99, 102, 106, 107, 464], "energy_range_tot": [99, 102, 106, 107, 469], "energy_reco": [366, 455], "energy_ref": [119, 121], "energy_resolut": 425, "energy_saf": 382, "energy_tru": [16, 93, 99, 102, 106, 107, 108, 112, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 165, 172, 175, 183, 184, 190, 193, 196, 293, 294, 366, 367, 379, 431, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 455, 457, 458, 459, 460, 464, 466, 467, 468, 469, 471, 472, 475, 476, 477, 484, 485, 504, 505, 507, 509, 510, 512, 513], "energy_true_axi": 142, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 409, "energydependentmorphologi": 450, "energydependentmorphologyestim": [432, 450], "energydependentmultigausspsf": [151, 405, 466, 475, 506], "energydependenttablepsf": [372, 387, 406, 417], "energydispers": [142, 143, 144, 147, 378, 412, 422, 425, 426], "energydispersion2d": [86, 142, 144, 151, 157, 175, 176, 367, 372, 417, 419, 424, 466, 475, 504], "energydispersion3d": 466, "energyoffsetarrai": 422, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 369, 393], "engin": [85, 88], "english": 500, "enhanc": [371, 375, 402], "enlarg": 510, "enough": [379, 381, 382, 439, 442, 445, 455, 457, 469], "enrico": 382, "enrico_config": 382, "enrico_xml": 382, "enriqu": [374, 382, 386, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 425, 426, 427], "ensembl": 90, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 171, 191, 275, 366, 372, 377, 378, 389, 393, 399, 419, 435, 439, 458, 469, 512, 521], "enter": [207, 209, 216, 238, 402], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 85, 88, 99, 101, 102, 106, 107, 120, 172, 436, 447, 450, 456], "entri": [43, 44, 85, 88, 91, 116, 119, 122, 123, 126, 127, 203, 204, 216, 238, 275, 334, 366, 378, 386, 390, 393, 395, 398, 400, 417, 428, 436, 440, 463, 465, 468, 471, 472, 500, 501, 513], "entry_point": 418, "enum": [92, 148, 310, 311], "enumer": [451, 463, 470, 473], "env": [369, 383, 395, 397, 398, 400, 401, 426, 560], "envelop": [379, 465, 485], "environ": [11, 80, 332, 365, 366, 369, 373, 374, 378, 383, 386, 395, 396, 398, 399, 400, 401, 402, 406, 407, 409, 425, 426, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 560], "envis": 375, "envvar": 11, "eosc": 392, "episod": 130, "epoch": 349, "epsilon": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "epsilon_": [99, 106, 496], "epsilon_k": [99, 106, 496], "epsmch": 465, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 389, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 114, 118, 122, 126, 129, 142, 190, 366, 376, 379, 427, 439, 457, 458, 469, 473, 496, 512, 563], "equat": [27, 258, 259, 284, 522, 523, 527, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544, 562, 563], "equatori": [92, 148, 184, 185, 186, 188, 191, 193, 196, 197, 198, 466], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 119, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 359, 367, 378, 379, 380, 389, 390, 431, 432, 463, 467, 468, 469, 471, 475, 484, 496, 498, 500, 511, 512, 513, 560, 561, 562], "er": [26, 462], "era": 218, "ereco": [142, 466], "erf": [226, 517], "erg": [52, 53, 66, 435, 439, 463, 486, 493, 500], "erlangen": 385, "erod": 198, "eros": [196, 198], "err": 465, "errat": 366, "errn": [118, 122, 126, 127, 129, 203, 428, 562], "errn_2sigma": 562, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 77, 82, 84, 99, 101, 102, 106, 107, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 161, 187, 190, 195, 206, 208, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 277, 279, 283, 284, 285, 291, 344, 366, 367, 380, 381, 382, 384, 389, 390, 393, 394, 407, 411, 413, 415, 417, 418, 420, 424, 425, 428, 430, 431, 432, 436, 437, 439, 440, 442, 444, 447, 448, 449, 450, 452, 455, 456, 457, 459, 460, 463, 471, 472, 473, 475, 484, 485, 486, 488, 496, 498, 500, 518, 536, 545, 557, 560], "error_callback": 161, "errorbar": [81, 98, 99, 102, 106, 107, 190, 194, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 435, 473], "errp": [118, 122, 126, 127, 129, 203, 428, 562], "errp_2sigma": 562, "escap": [366, 392], "especi": [85, 88, 130, 369, 373, 376, 380, 386, 387, 396, 417, 423, 436, 449, 458, 463, 468, 473, 475, 476], "essenti": [376, 378, 381, 411, 412, 413, 453, 468], "establish": [366, 379], "estim": [6, 19, 20, 26, 50, 71, 98, 102, 107, 109, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 160, 166, 167, 168, 174, 183, 184, 193, 196, 198, 203, 206, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 275, 282, 285, 289, 315, 359, 370, 372, 375, 379, 380, 381, 382, 385, 388, 394, 398, 407, 408, 411, 412, 413, 414, 417, 418, 419, 423, 424, 425, 426, 428, 431, 432, 434, 435, 439, 441, 445, 447, 448, 449, 452, 454, 458, 459, 460, 461, 464, 465, 469, 473, 477, 480, 484, 485, 496, 500, 510, 512, 557, 558, 559, 561, 563], "estimate_best_fit": [122, 123, 126, 127], "estimate_count": [122, 123, 126, 127], "estimate_energy_depend": 116, "estimate_errn_errp": [122, 123, 126, 127], "estimate_excess_map": 118, "estimate_exposure_reco_energi": 118, "estimate_fit_input_map": 129, "estimate_flux_default": 129, "estimate_flux_map": 129, "estimate_flux_point": [122, 123, 126], "estimate_kernel": [118, 129], "estimate_map": 114, "estimate_mask_default": [118, 129], "estimate_min_e2dnd": 128, "estimate_min_excess": 128, "estimate_npr": [122, 123, 126, 127], "estimate_npred_excess": [122, 123, 126], "estimate_pad_width": 129, "estimate_scan": [122, 123, 126, 127], "estimate_t": [122, 123, 126, 127], "estimate_time_bin_flux": 126, "estimate_ul": [122, 123, 126, 127], "estimator_result": [136, 460], "et": [26, 33, 59, 130, 145, 218, 284, 285, 291, 376, 443, 450, 456, 488, 559], "eta": [228, 229, 250, 519, 523, 550], "eta_": 50, "eta_b": 50, "eta_rang": [519, 523], "etc": [102, 107, 119, 366, 371, 372, 376, 377, 378, 381, 382, 386, 387, 390, 392, 393, 414, 440, 442, 447, 455, 457, 459, 460, 464, 468, 471, 473, 476, 484, 496, 509, 559], "etru": 466, "eu": 386, "euclidean": 293, "europ": 392, "ev": [466, 500, 536], "ev2": 466, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 85, 88, 99, 102, 105, 106, 107, 122, 126, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 172, 178, 193, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 366, 371, 375, 381, 384, 385, 388, 389, 390, 394, 406, 407, 408, 410, 413, 417, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 451, 452, 460, 466, 471, 473, 475, 476, 496, 518, 519, 526, 559, 562], "evaluate_contain": [146, 154, 156, 419], "evaluate_direct": [146, 154, 156], "evaluate_energy_flux": [244, 245], "evaluate_error": [19, 20, 26, 121, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 384], "evaluate_geom": [212, 213, 217, 224, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265, 432, 471, 519], "evaluate_integr": [243, 244, 245], "evaluate_paramet": [146, 154, 156], "evaluation_bin_size_min": [212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265], "evaluation_radiu": [212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 263, 265, 377, 378, 389, 471], "evaluation_region": [212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 196, 207, 209, 366, 369, 371, 373, 374, 380, 383, 384, 392, 393, 409, 457, 460, 465, 467, 468, 469, 470, 471, 484, 496, 498, 522, 523, 560], "event": [80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 105, 110, 118, 128, 144, 155, 158, 159, 166, 174, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 325, 366, 367, 370, 372, 376, 378, 380, 381, 382, 393, 398, 402, 409, 410, 411, 413, 417, 418, 419, 424, 425, 426, 427, 428, 431, 432, 434, 436, 439, 440, 441, 445, 447, 448, 454, 459, 467, 477, 480, 482, 484, 485, 496, 500, 508, 509, 510, 558, 559, 562], "event_3fhl": 486, "event_class": [82, 476, 486], "event_det_coord": [100, 105], "event_fil": 86, "event_filt": 87, "event_filter_typ": 87, "event_id": [379, 475, 476, 486, 497], "event_list": [81, 366, 367, 379], "event_list_meta": [100, 105, 412], "event_sampl": [434, 451, 454], "event_sampling_nrg_depend_model": [434, 452, 454], "event_typ": [101, 476, 486], "eventlist": [82, 86, 100, 105, 174, 185, 186, 188, 194, 197, 198, 366, 367, 372, 379, 380, 381, 393, 402, 407, 414, 419, 421, 422, 423, 425, 426, 451, 452, 460, 468, 475, 476, 486, 500, 509], "eventlistbas": 87, "eventlistdataset": 426, "eventlistlat": 497, "eventlistmetadata": [81, 393], "events2": 81, "events_": 451, "events_0001": 451, "events_1": 497, "events_2": 497, "events_3fhl": 486, "events_bkg": 379, "events_gc_3fhl": 486, "events_list": 379, "events_new": 500, "events_path": [80, 451], "events_src": 379, "events_tot": 379, "events_vela": 460, "eventu": [366, 371, 382, 385, 386, 402, 471], "ever": 563, "everi": [184, 186, 198, 265, 366, 369, 374, 375, 376, 378, 382, 391, 393, 396, 436, 439, 468, 485, 560], "everyon": 371, "everyth": [366, 384, 385, 500], "everywher": [366, 380, 385, 386, 406], "evid": [130, 463], "evolut": [50, 52, 53, 218, 372, 386, 434, 454, 480, 493, 494, 496, 497, 505, 508, 512, 514], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 218, 383, 386, 393, 452, 466], "evt_sampl": 451, "ew2aoj6_": 471, "ex": [11, 468, 470, 471], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 384, 468, 476], "exactli": [114, 118, 122, 126, 129, 190, 361, 441, 458, 460, 469, 473, 476, 496, 513], "exagger": 357, "examin": [392, 504], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 66, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 102, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 134, 135, 137, 138, 140, 142, 144, 145, 146, 147, 153, 155, 158, 165, 168, 170, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 207, 209, 230, 236, 266, 269, 275, 278, 293, 294, 315, 319, 325, 334, 345, 346, 351, 354, 356, 357, 359, 361, 363, 366, 367, 369, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 389, 392, 393, 394, 398, 399, 400, 402, 406, 408, 411, 414, 417, 418, 419, 422, 424, 425, 426, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 500, 502, 503, 504, 506, 511, 513, 514, 515, 525, 546, 554, 555, 556, 560, 562, 564, 565], "example_cub": 468, "example_cube_fgst": 468, "exce": 109, "except": [66, 68, 78, 85, 88, 99, 102, 106, 107, 161, 185, 186, 188, 194, 197, 198, 295, 363, 366, 377, 381, 385, 466, 470, 513], "excerpt": 478, "excess": [15, 66, 71, 99, 102, 106, 107, 115, 118, 119, 121, 122, 123, 126, 128, 131, 132, 136, 165, 277, 279, 284, 285, 364, 378, 381, 413, 414, 420, 425, 432, 435, 439, 440, 442, 443, 444, 447, 449, 453, 455, 459, 460, 463, 464, 467, 469, 470, 477, 484, 485, 498, 500], "excess_estim": 477, "excess_estimator_integr": 477, "excess_integr": 477, "excess_map": [16, 440, 444, 445, 447, 484], "excess_map_estim": 460, "excess_matching_signific": [416, 426], "excess_min": 138, "excess_r": 464, "excessestim": 390, "excessmapconfig": 16, "excessmapestim": [115, 134, 135, 136, 390, 413, 414, 415, 417, 420, 430, 432, 445, 447, 460, 469, 477, 498], "excesspointsestim": 390, "excessprofileestim": [390, 414], "exchang": 380, "exclud": [16, 82, 98, 99, 101, 102, 106, 107, 120, 125, 166, 168, 207, 209, 216, 238, 372, 429, 467, 469, 509, 510], "exclude_default": [16, 82, 101, 120], "exclude_non": [16, 82, 101, 120], "exclude_unset": [16, 82, 101, 120], "exclus": [16, 81, 160, 162, 167, 168, 169, 170, 173, 184, 196, 372, 380, 382, 413, 415, 436, 444, 447, 467, 507, 509], "exclusion_mask": [160, 162, 167, 168, 169, 170, 173, 439, 445, 449, 467, 469, 485, 507, 509, 510], "exclusion_mask_2d": 467, "exclusion_mask_crab": [440, 484], "exclusion_radiu": 469, "exclusion_region": 439, "exclusionmask": 423, "execut": [11, 118, 122, 126, 127, 129, 366, 367, 369, 371, 373, 374, 375, 381, 382, 386, 396, 397, 398, 399, 400, 401, 402, 411, 419, 425, 434, 438, 446, 454, 461, 467, 468, 474, 476, 479, 480, 481, 483, 486, 487, 515, 525, 546, 556, 558], "exercis": [369, 382, 386, 392], "exhibit": 450, "exist": [11, 15, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 86, 88, 96, 97, 98, 99, 102, 104, 106, 107, 119, 121, 143, 144, 150, 155, 158, 170, 183, 184, 185, 186, 188, 189, 192, 193, 194, 196, 197, 198, 204, 216, 230, 238, 261, 262, 263, 265, 350, 366, 369, 371, 374, 375, 377, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 392, 393, 398, 399, 402, 403, 406, 410, 411, 425, 426, 428, 431, 443, 445, 464, 468, 469, 471, 472, 476, 497, 512, 513, 561], "exist_ok": [439, 440, 447, 448, 451, 484, 485], "exit": [11, 15, 85, 88, 207, 209, 216, 238, 407, 524, 560], "exot": 383, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 145, 223, 226, 233, 244, 245, 257, 367, 389, 459, 471, 518, 519, 526, 530, 531, 532, 533, 542, 543, 544, 548, 549, 550, 563], "expand": [126, 332, 376, 417], "expand_map": 126, "expans": [50, 52, 53], "expcutoffpowerlaw": 532, "expcutoffpowerlaw3fglspectralmodel": [248, 389, 437, 471, 531], "expcutoffpowerlawnormspectralmodel": [222, 248, 432, 471, 532], "expcutoffpowerlawspectralmodel": [19, 20, 26, 78, 210, 211, 214, 218, 220, 221, 226, 232, 233, 235, 239, 241, 243, 244, 245, 248, 249, 254, 256, 257, 258, 259, 262, 266, 389, 437, 439, 447, 471, 530, 532, 536], "expdecai": [223, 434, 514, 556], "expdecay_model": [451, 548], "expdecaytemporalmodel": [260, 389, 413, 417, 451, 459, 471, 548], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 107, 119, 170, 175, 176, 181, 196, 277, 278, 279, 280, 282, 286, 292, 325, 366, 371, 379, 381, 382, 383, 386, 391, 393, 435, 436, 441, 442, 443, 445, 451, 452, 456, 457, 462, 465, 468, 469, 473, 476, 478, 496, 498, 561, 562, 563], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 439, 452], "experi": [369, 371, 375, 377, 381, 394, 396, 425, 488, 559, 564], "experienc": [375, 401], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 382, 560], "expert": 386, "expertis": 383, "expfactor": [258, 259, 543, 544], "expir": 379, "explain": [85, 88, 366, 369, 371, 380, 383, 385, 386, 392, 396, 398, 400, 411, 417, 435, 439, 441, 462, 465, 469, 471, 500, 558, 560], "explan": [114, 118, 122, 126, 129, 371, 403, 456, 564], "explicit": [85, 88, 184, 186, 366, 382, 384, 390, 512, 564], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 295, 376, 388, 397, 407, 452, 470, 498, 512, 564], "explor": [185, 186, 188, 194, 197, 198, 374, 382, 402, 434, 439, 444, 447, 450, 453, 454, 456, 457, 458, 463, 464, 470, 477, 478, 484, 486, 496, 497, 498, 500, 508, 509, 512, 557], "explos": 52, "expomap": 379, "expon": [389, 471], "exponenti": [28, 30, 36, 39, 40, 220, 221, 222, 223, 257, 258, 259, 367, 377, 411, 434, 447, 451, 459, 514, 546], "exponentialcutoffpowerlaw": 536, "export": [82, 85, 88, 99, 101, 102, 119, 120, 121, 369, 390, 393, 398, 400, 411, 421, 428, 429, 432, 440, 471, 477, 478, 484], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 380, 381, 382, 385, 386, 430, 432, 468, 480, 498, 499, 558], "exposur": [16, 81, 86, 99, 102, 103, 105, 106, 107, 118, 129, 133, 143, 144, 150, 153, 155, 158, 160, 165, 172, 175, 176, 177, 179, 180, 181, 253, 287, 290, 292, 372, 375, 376, 377, 378, 379, 390, 409, 414, 422, 424, 425, 426, 428, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 455, 458, 459, 464, 467, 468, 469, 477, 484, 485, 496, 505, 508, 513, 562], "exposure_geom": 144, "exposure_hdu": [143, 144, 150, 155, 158], "exposure_hdu_band": [143, 144, 150, 155, 158], "exposure_hpx": 476, "exposure_map": [143, 144, 150, 155, 158, 175, 176, 181, 466], "exposure_max": 464, "exposure_min": 464, "exposure_tim": 379, "express": [118, 130, 277, 279, 377, 389, 390, 432, 445, 465, 466, 471, 473, 496, 512, 519, 561, 562, 563], "exptest": 423, "extend": [15, 19, 20, 26, 68, 71, 85, 88, 89, 97, 160, 187, 190, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 238, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 278, 373, 377, 378, 379, 380, 386, 388, 389, 390, 393, 398, 410, 412, 417, 434, 438, 439, 443, 452, 457, 463, 468, 469, 470, 471, 476, 480, 496, 497, 508, 509, 557], "extended_archive_v18": 524, "extended_source_spectral_analysi": [434, 436, 438], "extens": [41, 81, 142, 185, 186, 188, 190, 197, 198, 212, 213, 216, 217, 225, 228, 238, 240, 242, 250, 251, 255, 261, 265, 368, 371, 372, 373, 374, 375, 377, 379, 381, 382, 383, 384, 385, 386, 396, 420, 450, 451, 452, 471, 560], "extent": [196, 216, 238, 380, 443, 471], "extern": [110, 367, 392, 418, 422, 423, 426, 475, 500], "extnam": 466, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 81, 82, 101, 120, 183, 184, 189, 193, 194, 196, 202, 203, 205, 261, 262, 293, 365, 367, 373, 374, 380, 382, 383, 386, 392, 393, 422, 425, 426, 468, 469, 500, 513], "extra_term": 292, "extract": [16, 82, 97, 99, 101, 102, 106, 107, 119, 120, 121, 126, 143, 144, 150, 155, 158, 161, 166, 167, 172, 174, 182, 185, 186, 187, 188, 190, 195, 196, 197, 198, 263, 366, 376, 381, 390, 392, 393, 419, 420, 431, 432, 435, 436, 439, 440, 441, 442, 447, 448, 451, 452, 453, 455, 464, 468, 484, 496, 504, 509], "extragalact": [218, 475], "extrapol": [139, 140, 141, 165, 185, 186, 188, 194, 197, 198, 218, 266, 307, 417, 422, 424, 425, 466, 468, 475, 476, 512], "extras_requir": 383, "extrem": [366, 393, 468, 519], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 129, 138, 192, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 294, 295, 322, 366, 369, 383, 388, 389, 394, 397, 398, 400, 419, 428, 435, 436, 439, 440, 442, 448, 449, 450, 451, 452, 458, 459, 460, 462, 463, 465, 467, 469, 471, 472, 473, 476, 477, 482, 484, 485, 486, 494, 509, 526, 536, 547, 548, 549, 550, 551, 552, 553, 560, 561, 562], "f0": [264, 554], "f06": 48, "f06b": [49, 490], "f06p": 49, "f1": [264, 554], "f2": [264, 554], "f4": [140, 145, 441, 464, 466, 468, 475, 476], "f8": [466, 476], "f_": [283, 285, 294, 496], "f_0": [243, 539], "f_dead": [81, 86], "f_i": 283, "f_max": 456, "f_max_err": 456, "f_mean": 456, "f_mean_err": 456, "f_min": 456, "f_min_err": 456, "f_pp": 284, "f_var": 284, "fabio": [379, 384, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 424, 426, 428, 430, 431, 432], "face": [371, 374], "facecolor": [363, 439, 441, 449, 450, 453, 460, 462, 517, 518, 519], "facil": 391, "fact": [19, 20, 94, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 392, 436, 513], "facto": 392, "factor": [19, 20, 23, 99, 100, 102, 105, 106, 107, 114, 119, 143, 144, 146, 150, 152, 153, 154, 155, 156, 158, 165, 172, 178, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 201, 206, 207, 208, 209, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 264, 265, 267, 366, 379, 381, 413, 435, 442, 444, 447, 449, 453, 455, 459, 464, 467, 471, 475, 496, 513, 526], "factor1": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265], "factor_max": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265], "factor_min": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265], "factori": [185, 186, 197, 198, 380, 385, 389, 511, 513], "factoris": [253, 389, 471, 557], "fail": [16, 82, 101, 120, 203, 367, 369, 380, 395, 396, 420, 448, 476], "failur": [428, 431], "faint": 561, "fair": 392, "fair4r": 392, "fake": [99, 102, 106, 107, 378, 379, 409, 441, 442, 455, 459, 473], "fall": [130, 168, 195, 216, 238, 366, 373, 375, 376, 383, 426, 427, 456], "fallback": 366, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 80, 81, 82, 84, 85, 86, 88, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 118, 119, 120, 121, 122, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 165, 172, 175, 176, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 295, 325, 333, 335, 363, 366, 380, 382, 389, 394, 425, 426, 432, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 453, 455, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 484, 485, 486, 497, 507, 509, 510, 524, 536, 545], "falsifi": 473, "famili": 392, "familiar": [383, 384, 468, 469, 486], "fanci": [366, 460], "far": [374, 379, 381, 383, 387, 390, 393, 402, 417, 451, 488], "fashion": [381, 386], "fast": [366, 380, 384, 465], "faster": [85, 88, 185, 186, 188, 194, 197, 198, 344, 432, 443], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 490, "favour": [371, 379, 394, 473], "favourit": 449, "fc": [471, 513], "fcluster": [293, 472], "fcluster_kwarg": [293, 472], "fcn": 465, "fdx": 366, "fe": 268, "feasibl": [380, 385, 442, 455, 464], "featur": [6, 13, 85, 88, 93, 114, 134, 293, 294, 356, 357, 366, 369, 373, 375, 376, 377, 378, 380, 382, 383, 388, 389, 390, 392, 393, 394, 399, 404, 407, 408, 409, 410, 411, 413, 414, 417, 421, 424, 425, 426, 427, 456, 468, 469, 471, 472, 488, 498, 536], "feature_irf": 472, "features_irf": [93, 293, 294, 472], "feb": [372, 373, 383, 387, 402, 404], "februari": 404, "fed": 441, "feedback": [369, 371, 375, 380, 382, 383, 386, 387, 389, 395, 425, 466, 500], "feedstock": [395, 396], "feel": [376, 560], "feijen": [430, 431, 432], "feldman": [408, 414, 422, 424, 559], "feldman1998": [559, 562], "fellowship": 392, "felt": 366, "fermi": [55, 58, 60, 61, 63, 64, 68, 70, 72, 73, 76, 81, 84, 122, 123, 125, 129, 185, 186, 188, 194, 195, 197, 198, 218, 268, 270, 275, 373, 374, 375, 376, 378, 379, 382, 383, 386, 396, 398, 403, 405, 406, 409, 411, 414, 418, 421, 422, 423, 424, 425, 426, 434, 437, 443, 451, 453, 463, 468, 469, 470, 471, 479, 480, 486, 488, 496, 497, 500, 505, 512, 524, 534, 539, 557, 564], "fermi_3fhl": [81, 185, 186, 188, 194, 197, 198, 470, 476, 486], "fermi_3fhl_events_select": [81, 476], "fermi_3fhl_exposure_cube_hpx": 476, "fermi_3fhl_psf_gc": 476, "fermi_bkg_model": 470, "fermi_ct": 125, "fermi_dataset": [275, 470, 476], "fermi_lat": [386, 426, 434, 476, 479], "fermi_model": 476, "fermi_prof": 123, "fermi_ts_imag": 367, "fermipi": [373, 375, 378, 382, 386, 390, 423, 425, 476, 488], "fermitool": 382, "fetch": [15, 366, 374, 405, 418, 484, 560], "few": [80, 81, 85, 86, 88, 365, 366, 367, 369, 371, 372, 373, 374, 376, 378, 380, 384, 386, 391, 395, 396, 402, 416, 427, 429, 432, 436, 440, 445, 447, 449, 463, 465, 468, 475, 484, 485, 509, 513, 565], "fewer": [380, 386], "ff": 392, "fft": 198, "fftconvolv": 198, "fgl": [195, 469], "fgst": [184, 185, 186, 188, 189, 190, 196, 197, 198, 468], "fhit": 477, "fidalgo": [376, 381, 406, 426, 427], "fiduci": 468, "field": [16, 42, 50, 51, 54, 81, 82, 85, 88, 101, 120, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 154, 156, 157, 162, 224, 239, 297, 301, 353, 366, 380, 392, 393, 402, 407, 412, 419, 426, 439, 441, 445, 447, 449, 451, 466, 467, 469, 475, 476, 500, 502, 503, 504, 505, 506, 507, 509, 536, 559], "fieldinfo": [16, 82, 101, 120], "fig": [198, 354, 435, 436, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 453, 457, 459, 460, 462, 465, 469, 473, 509, 510, 519, 523, 526, 558], "figsiz": [86, 99, 102, 106, 107, 124, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 185, 186, 188, 194, 197, 198, 354, 436, 439, 442, 443, 445, 447, 448, 449, 450, 456, 457, 458, 459, 460, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 509, 519, 523, 526], "figur": [86, 99, 102, 106, 107, 124, 139, 140, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 158, 185, 186, 188, 194, 197, 198, 344, 353, 354, 360, 366, 367, 371, 386, 396, 439, 443, 447, 449, 450, 451, 453, 456, 457, 458, 462, 464, 465, 467, 468, 470, 471, 476, 477, 478, 560], "file": [11, 15, 16, 26, 64, 65, 66, 80, 81, 83, 84, 85, 86, 88, 90, 91, 97, 98, 99, 102, 103, 104, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 166, 171, 185, 186, 188, 192, 194, 197, 198, 204, 216, 218, 230, 238, 261, 262, 263, 264, 265, 266, 303, 333, 335, 365, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 400, 402, 410, 411, 417, 419, 421, 423, 424, 425, 426, 428, 429, 431, 432, 434, 435, 438, 441, 442, 446, 447, 449, 451, 452, 454, 455, 459, 461, 463, 464, 467, 468, 469, 470, 471, 474, 477, 478, 479, 480, 481, 483, 486, 487, 488, 499, 500, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564], "file_dir": 303, "file_model": 451, "file_nam": 303, "filemod": [16, 440, 444, 445, 447, 484, 560], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 80, 81, 83, 84, 85, 88, 91, 97, 98, 99, 102, 103, 104, 106, 107, 119, 121, 123, 125, 127, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 185, 186, 188, 192, 194, 197, 198, 216, 218, 230, 238, 261, 262, 263, 264, 265, 266, 270, 272, 274, 275, 303, 333, 335, 345, 366, 367, 371, 414, 439, 440, 444, 445, 447, 448, 452, 453, 463, 464, 468, 469, 470, 471, 475, 476, 484, 485, 486, 497, 500, 502, 503, 504, 506, 524, 526, 554, 555, 560], "filename_1": 497, "filename_2": 497, "filename_arf": 104, "filename_bkg": 104, "filename_model": [97, 119, 275, 470, 476], "filename_rmf": 104, "fill": [16, 82, 83, 85, 88, 99, 101, 102, 105, 106, 107, 120, 142, 153, 184, 185, 186, 188, 194, 196, 197, 198, 266, 366, 374, 375, 379, 382, 386, 392, 395, 396, 411, 418, 425, 428, 436, 451, 452, 463, 466, 467, 469, 476, 485, 512], "fill_between": [19, 20, 26, 124, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 460], "fill_by_coord": [153, 185, 186, 188, 194, 197, 198, 468, 476, 512], "fill_by_idx": [185, 186, 188, 194, 197, 198, 512], "fill_by_pix": [185, 186, 188, 194, 197, 198, 512], "fill_ev": [185, 186, 188, 194, 197, 198, 420, 431, 441, 468, 476, 482], "fill_nan": 186, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 185, 186, 188, 194, 197, 198, 261, 262, 265, 266, 366, 466, 468, 476], "filled_t": [85, 88], "filter": [86, 87, 372, 376, 378, 380, 381, 426, 427, 430, 469, 472, 480, 485, 486], "filter_ev": 87, "filter_gti": 87, "filter_success_nan": [119, 121], "filtered_ev": 87, "filtered_gti": 87, "filterwarn": [459, 460], "final": [126, 366, 367, 373, 374, 376, 379, 380, 382, 383, 385, 387, 389, 391, 392, 396, 398, 400, 411, 412, 413, 435, 436, 437, 439, 447, 449, 451, 452, 457, 458, 460, 462, 464, 465, 467, 469, 472, 476, 480, 484, 485, 486, 496, 497, 498], "finalis": 370, "find": [19, 20, 26, 129, 134, 135, 142, 168, 169, 173, 200, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 287, 366, 371, 377, 379, 385, 395, 396, 397, 417, 419, 425, 426, 431, 432, 437, 439, 443, 463, 464, 468, 471, 475, 478, 486, 560, 562, 563], "find_peak": [135, 426, 443, 449], "find_peaks_in_flux_map": 443, "find_root": 417, "finder": [134, 168, 169, 417, 426, 443], "fine": [276, 308, 379, 445, 464, 476, 513, 560], "finer": [451, 464, 513], "fingertip": 365, "finish": [369, 373, 375, 395, 423, 425], "finit": [97, 99, 102, 106, 107, 143, 144, 150, 155, 171, 186, 194, 198, 263, 384], "fink": [218, 219, 526], "fir": 536, "firefox": [85, 88], "first": [57, 85, 88, 89, 91, 97, 99, 106, 119, 121, 123, 134, 142, 159, 168, 185, 186, 187, 190, 194, 195, 216, 238, 269, 328, 355, 366, 367, 369, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 390, 391, 392, 396, 397, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 424, 426, 427, 428, 429, 431, 435, 436, 437, 439, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 480, 484, 485, 486, 497, 509, 512, 560], "firstli": [450, 451], "firstnam": [85, 88], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 63, 64, 65, 66, 70, 72, 73, 76, 80, 81, 82, 83, 84, 85, 86, 88, 91, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 162, 165, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 202, 204, 205, 206, 208, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 263, 264, 265, 266, 275, 276, 277, 279, 280, 281, 286, 288, 292, 303, 304, 305, 348, 349, 352, 354, 359, 361, 365, 366, 367, 372, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 389, 390, 393, 394, 398, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 422, 424, 425, 426, 427, 429, 431, 432, 434, 435, 438, 442, 443, 445, 446, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 477, 478, 480, 482, 486, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 512, 517, 524, 526, 536, 554, 555, 558, 559, 564], "fit2": 470, "fit_covari": [440, 484], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [436, 439, 447, 448], "fit_prior": 473, "fit_rang": [16, 440, 444, 445, 447, 484], "fit_result": [203, 275, 440, 484], "fit_results_nul": 275, "fit_scipi": 465, "fit_sherpa": 465, "fit_stat_scan": 381, "fit_statist": 366, "fit_statistics_cython": 396, "fitconfig": 16, "fitmc": 384, "fitresult": [203, 419, 431, 465, 485], "fitsfixedwarn": [443, 524], "fitspectrum": 421, "fitstepresult": [202, 205], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 424, 425, 437], "five": 486, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 91, 92, 103, 104, 137, 155, 157, 172, 203, 240, 241, 246, 265, 369, 371, 372, 373, 377, 378, 381, 383, 388, 390, 391, 392, 395, 396, 398, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 435, 441, 442, 444, 445, 447, 448, 451, 455, 458, 459, 465, 466, 467, 470, 471, 472, 484, 510, 512, 520, 537], "fixed_altaz": 83, "fixed_bin": 137, "fixed_icr": [83, 155, 435, 442, 451, 452, 455, 459], "fixed_offset": [93, 171, 417], "fixed_r_in": 160, "fixed_width": 160, "fixedpointinginfo": [86, 155, 178, 431, 432, 435, 442, 451, 452, 455, 459], "fk5": [513, 524], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 100, 105, 119, 121, 122, 123, 126, 127, 183, 184, 185, 186, 188, 190, 191, 193, 194, 196, 197, 198, 202, 203, 204, 205, 436, 447, 451, 463, 471], "flake8": 369, "flare": [130, 283, 398, 411, 412, 434, 456, 457, 459, 461, 480, 496, 497, 498, 508, 509], "flask": 425, "flat": [121, 130, 147, 157, 183, 184, 189, 191, 193, 196, 199, 200, 240, 377, 390], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 184, 191, 193, 196, 456], "fledg": 394, "flexibl": [80, 319, 366, 371, 375, 376, 377, 380, 382, 386, 387, 393, 468, 500, 557], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 81, 85, 86, 88, 93, 99, 102, 106, 107, 110, 114, 118, 120, 121, 122, 124, 126, 127, 128, 129, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 160, 162, 171, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 199, 200, 203, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 275, 276, 277, 279, 282, 287, 295, 306, 313, 322, 324, 355, 356, 357, 467, 473, 475, 476, 560, 564], "float32": [183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 444, 449, 468], "float64": [85, 88, 108, 112, 142, 145, 366, 394, 466, 468, 498], "float64float64float64": 449, "float64float64float64float64float64float64float64float32bool": 437, "float64float64float64float64float64float64float64float64": 449, "float_a": [85, 88], "flow": [393, 558, 559], "fluctuat": [277, 279, 390, 442, 455, 473, 562], "flux": [15, 19, 20, 26, 41, 46, 66, 70, 72, 73, 75, 76, 77, 78, 81, 86, 97, 98, 99, 102, 106, 107, 114, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 206, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 264, 265, 266, 267, 268, 269, 273, 282, 283, 284, 285, 291, 370, 378, 379, 381, 382, 384, 386, 387, 389, 398, 405, 408, 410, 411, 413, 417, 419, 423, 424, 425, 427, 432, 434, 438, 441, 443, 447, 449, 451, 452, 454, 456, 457, 458, 459, 460, 464, 468, 471, 476, 480, 494, 495, 496, 505, 512, 514, 521, 536, 557, 558, 562], "flux_err": [19, 20, 26, 119, 121, 129, 135, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 283, 284, 285, 291, 443, 456, 457], "flux_errn": [119, 121, 463], "flux_errp": [119, 121, 463], "flux_int_cu": 269, "flux_map": [119, 121, 390, 462], "flux_metadata_fits_kei": 120, "flux_per_omega": 471, "flux_point": [16, 65, 66, 70, 72, 73, 75, 76, 77, 78, 95, 98, 119, 121, 122, 378, 435, 437, 439, 440, 444, 445, 447, 449, 460, 463, 464, 484, 485, 486], "flux_point_dataset": 378, "flux_points_at_tim": 390, "flux_points_ctb_37b": 121, "flux_points_dataset": [439, 449, 460], "flux_points_fermi": 448, "flux_points_hawc": 448, "flux_points_hess": 448, "flux_points_meta": [70, 72, 73, 76], "flux_points_recomput": 121, "flux_points_t": [70, 72, 73, 75, 76, 77, 78], "flux_pr": 98, "flux_profil": [434, 453, 454], "flux_profile_estim": 453, "flux_profile_fermi": 453, "flux_quant": [130, 131, 132, 456], "flux_ref": [119, 121, 390], "flux_sensit": [119, 121], "flux_ul": [119, 121, 129, 463], "fluxestim": [119, 121, 122, 387, 413, 415, 416, 417, 419, 432], "fluxmap": [118, 120, 121, 129, 135, 417, 432, 443, 498], "fluxmapestim": 390, "fluxmapsmetadata": 393, "fluxpoint": [70, 72, 73, 75, 76, 77, 78, 98, 119, 120, 122, 123, 126, 130, 131, 132, 137, 378, 381, 390, 393, 417, 424, 425, 431, 432, 435, 437, 448, 453, 456, 457, 463, 464, 486, 495, 496, 498, 500], "fluxpointdataset": 411, "fluxpointestim": [381, 408, 414, 427], "fluxpointfit": 378, "fluxpointfitt": 426, "fluxpointprofil": 427, "fluxpointsconfig": 16, "fluxpointsdataset": [95, 96, 99, 102, 387, 390, 393, 407, 411, 432, 437, 439, 448, 449, 459, 460, 496], "fluxpointsdatasetmetadata": 393, "fluxpointsestim": [115, 123, 126, 315, 387, 388, 390, 398, 408, 413, 414, 417, 431, 432, 439, 448, 449, 460, 484, 485], "fluxpointsetim": 390, "fluxpointsmetadata": 393, "fluxprofileestim": [115, 417, 430, 432, 453], "fly": 376, "fmt": [465, 473], "focu": [376, 386, 411, 424, 441, 560], "focus": [376, 392], "fold": [105, 390, 437, 448, 496, 498], "folder": [11, 80, 91, 98, 103, 107, 121, 331, 366, 367, 371, 374, 395, 397, 402, 407, 417, 420, 440, 447, 451, 475, 484, 485, 558, 560], "follow": [15, 19, 20, 43, 44, 78, 80, 81, 82, 88, 99, 101, 103, 104, 106, 107, 119, 120, 121, 124, 129, 134, 136, 184, 185, 186, 188, 192, 197, 198, 203, 253, 269, 275, 356, 357, 359, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 409, 410, 411, 413, 414, 417, 419, 420, 426, 427, 431, 432, 435, 436, 437, 439, 440, 442, 443, 444, 447, 448, 451, 452, 457, 458, 459, 460, 462, 463, 465, 467, 468, 469, 470, 471, 475, 480, 484, 486, 488, 490, 491, 496, 498, 500, 502, 504, 505, 509, 511, 512, 513, 514, 522, 523, 527, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544, 545, 558, 561, 562, 563, 565], "font": [185, 186, 188, 194, 197, 198, 367, 468], "fontsiz": [363, 460, 465], "foo": [85, 88], "footprint": [185, 186, 188, 194, 196, 197, 198, 520], "footprint_rectangle_sky_region": 196, "forbid": [16, 82, 101, 120], "forbidden": 470, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 153, 196, 198, 295, 371, 381, 407], "forecom": [366, 391], "foremost": 560, "forens": 382, "foreseen": [376, 391], "forev": 407, "forg": [365, 383, 395, 396, 398, 399, 402, 425, 475], "forget": [440, 450, 484], "forgot": 366, "forgotten": 366, "fork": 369, "form": [16, 82, 85, 88, 99, 101, 120, 155, 158, 193, 307, 366, 372, 376, 381, 389, 391, 393, 403, 425, 469, 473, 497, 505, 518, 528, 558], "formal": [371, 394, 443], "format": [16, 81, 82, 83, 84, 85, 86, 88, 91, 99, 101, 102, 104, 106, 107, 119, 120, 121, 122, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 178, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200, 216, 230, 238, 266, 303, 325, 347, 348, 355, 365, 367, 374, 375, 376, 377, 378, 380, 382, 390, 392, 393, 396, 405, 417, 419, 422, 426, 428, 429, 431, 432, 437, 439, 440, 441, 443, 444, 445, 447, 449, 451, 452, 453, 456, 457, 459, 463, 466, 468, 469, 471, 475, 476, 477, 478, 484, 486, 488, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 513, 554, 555, 559, 560, 561], "format_plot_xaxi": [187, 190, 195, 466], "format_plot_yaxi": [190, 466], "formatt": [355, 468], "formatwarn": 366, "former": [392, 408, 413, 436, 470, 558, 561], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 154, 244, 245, 292, 435, 561], "forum": 395, "forward": [19, 20, 26, 81, 85, 88, 99, 102, 106, 107, 123, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 167, 189, 193, 194, 195, 203, 210, 211, 214, 215, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 270, 293, 355, 360, 367, 373, 376, 390, 437, 448, 496, 498, 513], "forwardref": [16, 82, 101, 120], "found": [19, 20, 26, 80, 84, 85, 88, 130, 168, 173, 192, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 283, 369, 370, 374, 381, 391, 392, 411, 414, 415, 416, 420, 445, 451, 456, 471, 473, 478, 497, 498, 509, 510], "four": [369, 377, 390, 457, 475, 476, 504, 506, 512, 559], "fov": [118, 139, 140, 162, 163, 177, 178, 180, 182, 224, 366, 372, 380, 422, 425, 426, 444, 466, 469, 470, 475, 508, 559], "fov_": 366, "fov_align": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 466], "fov_background": [444, 484], "fov_bkg_mak": [467, 507], "fov_lat": [140, 466, 475, 505], "fov_lat_axi": 466, "fov_lon": [140, 466, 475, 505], "fov_lon_axi": 466, "fov_theta": 366, "fovalign": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 466], "fovbackground": [394, 413], "fovbackgroundmak": [163, 412, 417, 467, 484, 485], "fovbackgroundmodel": [15, 99, 105, 106, 109, 162, 234, 394, 414, 431, 432, 447, 448, 451, 452, 455, 464, 470, 484, 485, 507, 520], "fp": [119, 121, 137, 390, 467, 484, 498, 500], "fp_dataset": 464, "fp_dnde": 390, "fp_energy_flux": 390, "fpe": [315, 388, 390, 439, 449, 460, 485], "fpp": 284, "fpp_err": [284, 456], "fpp_tabl": 456, "fr": [392, 475], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 102, 107, 142, 145, 201, 222, 226, 243, 245, 257, 283, 285, 294, 389, 496, 504, 505, 517, 518, 519, 522, 523, 527, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544, 548, 549, 550, 552, 562, 563], "fraction": [19, 20, 26, 50, 52, 53, 81, 86, 87, 118, 128, 132, 146, 152, 154, 155, 156, 158, 193, 199, 200, 210, 211, 214, 217, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 284, 285, 376, 381, 424, 432, 435, 442, 451, 455, 464, 466, 469, 475, 476, 477], "frame": [16, 81, 83, 88, 91, 92, 93, 99, 102, 106, 107, 108, 112, 123, 134, 155, 165, 168, 178, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265, 293, 294, 329, 342, 366, 367, 375, 377, 380, 390, 407, 408, 410, 411, 412, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 484, 485, 486, 504, 509, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524], "framework": [377, 379, 380, 382, 384, 385, 389, 407, 408, 414, 426, 460, 471, 490, 500], "franceschini": [218, 219, 266, 431, 526], "franceschini17": [219, 526], "franceschni": 526, "frd_ab": 219, "free": [50, 52, 53, 99, 102, 106, 107, 122, 126, 127, 165, 203, 207, 209, 240, 241, 275, 371, 381, 407, 440, 442, 444, 445, 447, 449, 450, 455, 457, 459, 464, 465, 467, 470, 471, 473, 476, 480, 484, 485, 488, 498, 507, 520, 536, 537, 560, 562, 563], "free_paramet": [207, 209, 275, 465, 470], "freedom": [116, 119, 121, 136, 392, 432, 450, 498, 562, 563], "freez": [19, 20, 26, 85, 88, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 381, 392, 407, 417, 432, 444, 455, 465, 471, 536], "freeze_al": [207, 209], "frenk": 488, "frequenc": [264, 278, 492], "frequent": [190, 366, 375, 384, 392, 456, 458, 459, 469, 500, 501, 560], "frequentist": 384, "fridai": 375, "friendli": [371, 393, 428, 440, 484, 500], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 171, 172, 174, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 275, 276, 277, 278, 279, 282, 285, 293, 294, 295, 305, 313, 315, 317, 318, 322, 325, 326, 330, 334, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564], "from_align": [196, 417], "from_attribut": [16, 82, 101, 120], "from_bound": [145, 147, 155, 184, 190, 196, 390, 448, 451, 452, 464, 466, 467, 468, 478, 512, 513], "from_covariance_matrix": 394, "from_default": 189, "from_diagonal_respons": [108, 112, 142, 143, 144, 443, 476], "from_dict": [19, 20, 26, 98, 99, 102, 106, 107, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 410, 417, 473], "from_dir": [80, 87, 93, 165, 293, 294, 402, 436, 439, 441, 449, 458, 460, 467, 472, 475, 478, 482, 485, 497, 500, 507, 509, 510], "from_edg": [144, 185, 186, 188, 190, 194, 197, 198, 442, 455, 459, 466, 476, 477], "from_edisp_kernel": 143, "from_energy_bound": [99, 102, 106, 107, 108, 112, 142, 144, 145, 153, 155, 165, 183, 184, 189, 190, 193, 196, 198, 367, 435, 436, 439, 441, 448, 449, 451, 452, 458, 460, 464, 466, 467, 471, 476, 477, 485, 504, 507, 509, 510, 513], "from_energy_edg": [142, 190, 361, 464, 466], "from_events_fil": [80, 451, 475], "from_factor_matrix": 201, "from_fil": [80, 497], "from_fits_head": 83, "from_gauss": [142, 143, 147, 153, 155, 158, 504], "from_gaussian": 414, "from_geom": [99, 102, 106, 107, 143, 144, 153, 155, 158, 185, 186, 188, 192, 194, 197, 198, 411, 430, 464, 468, 469, 513, 519], "from_gti": 195, "from_gti_bound": 195, "from_hdu": [184, 186, 198], "from_hdulist": [99, 102, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 192, 193, 194, 196, 197, 198, 468], "from_head": [82, 101, 120, 184, 196, 393], "from_irf": 157, "from_log10": [232, 233, 534], "from_map": [119, 121], "from_map_dataset": [102, 107], "from_nam": [445, 449], "from_nod": 190, "from_orm": [16, 82, 101, 120], "from_panda": [85, 88], "from_paramet": [19, 20, 26, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267], "from_parametr": [145, 502], "from_posit": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 452], "from_refer": 389, "from_region": [193, 217, 431, 509], "from_region_map": 266, "from_spatial_model": 153, "from_spectrum_dataset": [107, 435, 442], "from_stack": [81, 84, 89, 119, 121, 185, 186, 187, 188, 190, 194, 197, 198, 201, 207, 209, 431, 432, 497], "from_tabl": [121, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 187, 189, 190, 194, 195, 230, 428, 435], "from_table_hdu": [84, 189, 190], "from_time_bound": 195, "from_time_edg": [195, 456], "from_time_interv": 84, "from_wcs_til": 186, "from_yaml": [16, 216, 238, 377, 440], "fromnumer": 441, "front": [375, 395, 424], "frozen": [19, 20, 26, 98, 122, 126, 162, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 381, 389, 394, 409, 432, 436, 437, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 455, 458, 459, 463, 464, 465, 469, 470, 471, 476, 484, 485, 486, 498, 507, 536, 545], "fr\u00f6se": 432, "ftol": 465, "ftool": 381, "fulfil": [393, 468], "full": [80, 122, 129, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 186, 204, 216, 238, 303, 362, 365, 366, 371, 375, 376, 379, 381, 382, 386, 392, 394, 397, 404, 407, 417, 419, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 500, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558], "full_enclosur": [178, 466], "full_output": [19, 20, 26, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267], "fulli": [126, 183, 184, 193, 196, 264, 375, 376, 383, 387, 392, 396, 399, 409, 411, 419, 436, 456, 471, 475, 477, 478, 488], "fun": [366, 369], "func": [17, 18, 21, 22, 24, 25, 27, 185, 186, 188, 194, 197, 198, 271, 316, 320, 321, 359, 445, 447], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 80, 81, 83, 85, 86, 88, 97, 98, 99, 100, 102, 105, 106, 107, 114, 119, 126, 129, 130, 131, 132, 135, 145, 146, 147, 149, 150, 152, 154, 155, 156, 158, 185, 186, 188, 190, 194, 197, 198, 203, 204, 205, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 252, 253, 254, 256, 257, 258, 259, 262, 266, 271, 277, 278, 279, 287, 291, 308, 316, 317, 319, 320, 324, 325, 334, 351, 354, 355, 359, 361, 363, 365, 369, 372, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 389, 390, 391, 393, 394, 398, 402, 403, 405, 407, 408, 409, 410, 411, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 435, 439, 440, 441, 442, 443, 447, 449, 450, 451, 452, 453, 464, 465, 466, 467, 468, 469, 470, 471, 473, 478, 480, 484, 485, 486, 488, 489, 490, 495, 496, 497, 499, 500, 509, 511, 513, 518, 519, 521, 548, 557, 558, 559, 560, 561, 563, 565], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [379, 388, 393], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 114, 118, 122, 123, 126, 129, 191, 319, 366, 369, 370, 372, 375, 376, 379, 380, 383, 385, 386, 387, 388, 389, 412, 413, 414, 417, 419, 445, 451, 462, 463, 464, 468, 486, 489, 490, 505, 560], "furthermor": 475, "futur": [100, 105, 122, 123, 126, 206, 208, 366, 371, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 425, 447, 451, 468, 476, 489, 498, 557], "fvar": [132, 285, 381, 424], "fvar_err": [285, 456], "fvar_tabl": 456, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 66, 81, 83, 84, 85, 88, 92, 110, 134, 184, 185, 186, 188, 190, 194, 196, 197, 198, 203, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 283, 295, 334, 355, 361, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 392, 393, 395, 396, 398, 399, 400, 417, 419, 423, 425, 426, 427, 428, 431, 436, 437, 440, 442, 449, 451, 453, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 480, 486, 488, 492, 495, 496, 497, 498, 500, 505, 510, 511, 512, 519, 557, 559, 560, 562, 564, 565], "g0": [447, 476], "g12bce6c25": [101, 120, 403, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "g28": 66, "g320": 463, "g_1": 145, "g_2": 145, "g_3": 145, "ga": 453, "gabriel": 426, "gadf": [81, 82, 83, 84, 86, 92, 99, 101, 102, 106, 107, 120, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 376, 379, 390, 393, 417, 419, 428, 431, 466, 468, 484, 496, 500, 513, 559], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 371, 383, 425], "gal_diffus": 382, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 66, 67, 81, 88, 99, 102, 106, 107, 108, 112, 122, 123, 125, 155, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 217, 225, 228, 242, 250, 251, 302, 329, 366, 367, 377, 380, 386, 405, 407, 424, 436, 439, 442, 443, 444, 447, 449, 450, 451, 453, 455, 459, 462, 463, 464, 468, 469, 470, 471, 475, 486, 488, 491, 495, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 559, 565], "galactic_median": 81, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 218, 284, 285, 405, 436], "galelli": [430, 432], "gallant": 425, "galleri": [396, 412, 414, 417, 428, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 501, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "gallery_jupyt": 514, "gallery_python": 514, "galprop": [184, 185, 186, 188, 197, 198], "galprop2": [184, 185, 186, 188, 197, 198], "gambit": 488, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 62, 65, 66, 77, 81, 118, 122, 128, 154, 178, 185, 186, 188, 197, 198, 218, 220, 221, 222, 243, 244, 245, 266, 269, 322, 366, 372, 374, 377, 378, 379, 380, 390, 395, 396, 398, 402, 403, 408, 422, 423, 424, 425, 426, 435, 437, 439, 440, 441, 445, 448, 449, 450, 451, 453, 463, 466, 468, 469, 472, 475, 477, 478, 484, 486, 488, 490, 491, 495, 496, 497, 500, 503, 505, 507, 509, 510, 519, 526, 530, 531, 538, 539, 557, 558, 559, 560, 561, 562, 565], "gamma1": [210, 527, 541], "gamma2": [210, 527, 541], "gamma_1": [254, 257, 258, 259, 389, 542, 543, 544], "gamma_2": [254, 257, 258, 259, 389, 542, 543, 544], "gamma_min": [128, 435], "gamma_min_sensit": 118, "gammacat": [55, 65, 424, 437], "gammalib": [366, 379], "gammamc_dif": 488, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 388, 389, 390, 394, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480, 482, 484, 485, 486, 489, 490, 492, 493, 494, 500, 501, 502, 503, 504, 506, 510, 511, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 565], "gammapy_analysis_config": 382, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 80, 81, 84, 86, 87, 88, 91, 93, 98, 99, 102, 106, 107, 111, 113, 114, 118, 119, 121, 123, 125, 127, 129, 134, 135, 137, 138, 140, 144, 145, 146, 147, 155, 165, 185, 186, 188, 194, 197, 198, 219, 230, 266, 275, 293, 294, 345, 354, 359, 361, 366, 367, 369, 382, 398, 400, 402, 406, 407, 408, 417, 426, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 497, 498, 500, 502, 503, 504, 506, 507, 509, 510, 524, 554, 555], "gammapy_extra": 406, "gammapybaseconfig": 16, "gammapydeprecationwarn": [366, 532, 535], "gammmapi": [376, 383], "garcia": 426, "gather": [380, 386, 395], "gauss": [42, 51, 54, 99, 102, 124, 125, 146, 186, 198, 225, 226, 227, 228, 389, 423, 460, 468, 471, 486, 517, 518], "gauss_elong": 471, "gauss_temp": 471, "gaussian": [66, 67, 78, 79, 114, 124, 142, 143, 147, 153, 155, 158, 186, 198, 225, 226, 227, 228, 229, 284, 285, 377, 385, 389, 394, 410, 414, 434, 437, 449, 451, 455, 456, 459, 463, 465, 466, 471, 473, 475, 486, 504, 506, 514, 525, 546, 556], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 114, "gaussian_compon": [66, 463], "gaussian_filt": [124, 198], "gaussian_model": 549, "gaussian_sigma": 465, "gaussianband2d": 425, "gaussianprior": [394, 473], "gaussianspatialmodel": [78, 79, 111, 113, 247, 389, 410, 449, 450, 455, 471, 518], "gaussianspectralmodel": [248, 389, 471, 533], "gaussiantemporalmod": 417, "gaussiantemporalmodel": [260, 389, 413, 471, 549], "gb": [374, 376, 475, 477], "gc": [84, 99, 102, 106, 107, 111, 113, 114, 118, 123, 125, 129, 134, 135, 354, 359, 361, 369, 443, 444, 447, 449, 451, 453, 462, 464, 468, 470, 471, 475, 476, 486, 488, 497, 498], "gc_3fhl": 486, "gc_3fhl_cutout": 486, "gc_3fhl_smooth": 486, "gc_imag": 453, "gc_po": 476, "gc_sep": 470, "gcc": 402, "geminga": 59, "gen_gaussian_model": 550, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 80, 81, 82, 85, 86, 88, 89, 99, 100, 101, 102, 105, 106, 107, 120, 144, 155, 158, 185, 186, 188, 189, 190, 194, 197, 198, 203, 215, 223, 227, 228, 229, 230, 231, 246, 252, 261, 262, 264, 266, 267, 278, 317, 319, 322, 323, 324, 325, 331, 367, 369, 375, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 396, 399, 402, 408, 412, 413, 414, 417, 419, 424, 428, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 496, 500, 505, 511, 513, 514, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 560, 562, 563], "generalconfig": 16, "generalis": [121, 385, 411, 466], "generalized_gaussian_model": 550, "generalizedgaussianspatialmodel": [247, 414, 471, 519], "generalizedgaussiantemporalmodel": [260, 419, 471, 550], "generalrandom": 409, "generatejsonschema": [16, 82, 101, 120], "gengauss": [229, 471, 519], "geodeticloc": 91, "geolat": 436, "geom": [16, 23, 81, 99, 102, 106, 107, 108, 110, 112, 118, 119, 121, 123, 129, 143, 144, 153, 155, 158, 165, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 192, 193, 194, 196, 197, 198, 212, 213, 216, 217, 224, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 265, 377, 379, 381, 414, 417, 426, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 484, 485, 486, 498, 507, 509, 510, 511, 512, 513, 516, 518, 519, 520, 521], "geom_24_energy_bin": 513, "geom_6_energy_bin": 513, "geom_edisp": [99, 102, 106, 107, 464], "geom_energi": 513, "geom_exposur": [99, 102, 106, 107, 430, 464], "geom_imag": [445, 449, 513], "geom_irf": 379, "geom_psf": [99, 102, 106, 107, 464], "geom_tru": 411, "geomconfig": 16, "geometri": [23, 81, 97, 99, 102, 106, 107, 110, 119, 121, 143, 144, 150, 153, 155, 158, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 212, 213, 216, 217, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 265, 362, 372, 378, 381, 382, 411, 417, 428, 439, 440, 441, 442, 444, 445, 447, 451, 452, 455, 464, 467, 476, 477, 496, 498, 500, 508, 512, 558, 559], "geomspac": [121, 394], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 83, 85, 86, 88, 91, 93, 97, 99, 101, 103, 104, 106, 114, 118, 120, 122, 123, 126, 127, 129, 134, 137, 142, 143, 144, 150, 155, 158, 183, 184, 185, 186, 188, 189, 192, 193, 194, 196, 197, 198, 201, 207, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 303, 319, 366, 367, 371, 372, 373, 374, 375, 376, 380, 381, 383, 390, 392, 393, 394, 396, 397, 399, 400, 402, 403, 406, 408, 423, 424, 425, 426, 435, 440, 442, 443, 447, 448, 449, 455, 458, 463, 464, 465, 466, 467, 469, 470, 471, 473, 475, 476, 477, 478, 480, 484, 485, 486, 488, 496, 500, 513, 559, 563], "get_altaz": [83, 91, 431], "get_bia": 142, "get_bias_energi": 142, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [185, 186, 188, 194, 197, 198, 467, 468, 476, 477, 512], "get_by_idx": [185, 186, 188, 194, 197, 198, 468, 512], "get_by_pix": [185, 186, 188, 194, 197, 198, 512], "get_cl": [437, 463, 469], "get_coord": [183, 184, 189, 193, 196, 410, 417, 426, 452, 468, 469, 509, 513], "get_dataset": [15, 440, 444, 445, 447, 457, 484, 500], "get_devel_vers": 369, "get_edges_fixed_bin": 137, "get_edges_min_t": 137, "get_edisp_kernel": [143, 144, 412, 417, 464, 476, 504], "get_events_meta_data": 379, "get_excess_map": [15, 484], "get_filenam": [103, 104], "get_flux_point": [15, 119, 121, 390, 412, 440, 484], "get_group_by_idx": 390, "get_hdu": 303, "get_icr": [83, 91, 431], "get_idx": [183, 184, 193, 196, 513], "get_image_by_coord": [185, 186, 188, 194, 197, 198, 468], "get_image_by_idx": [185, 186, 188, 194, 197, 198], "get_image_by_pix": [185, 186, 188, 194, 197, 198], "get_index_list": 184, "get_irfs_featur": [293, 294, 431, 472], "get_kernel": 114, "get_light_curv": 15, "get_mean": 142, "get_observ": [15, 80, 93, 293, 294, 408, 419, 436, 439, 440, 441, 444, 445, 447, 449, 451, 457, 458, 460, 467, 472, 477, 478, 482, 484, 485, 500, 507, 509, 510], "get_ogip_meta": 104, "get_pix": 196, "get_pointing_altaz": [86, 472], "get_pointing_icr": [86, 431, 449, 467, 485], "get_psf_kernel": [153, 155, 158, 432, 476], "get_random_st": [33, 42, 45, 46, 47, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 322, 323, 324, 325, 366], "get_rebinned_axi": 458, "get_resolut": 142, "get_respons": 424, "get_scal": 114, "get_scale_model": [122, 123, 126], "get_spectrum": [185, 186, 188, 194, 197, 198], "get_subcovari": 201, "get_transform": [443, 449, 517, 518], "get_valid_path": 103, "get_wcs_coord_and_weight": 193, "getattr": 394, "getitem": 424, "getlogg": [366, 445, 449, 457, 458, 459, 482], "getter": 367, "getting_start": 386, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 72, 123, 129, 185, 186, 188, 190, 194, 197, 198, 437, 441, 443, 447, 448, 453, 455, 459, 460, 462, 463, 467, 468, 469, 470, 475, 476, 477, 486, 513, 536, 558, 559], "gev2": [19, 462], "gevgevgev1": 437, "gh": [366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396], "git": [84, 253, 366, 367, 369, 371, 373, 374, 392, 399, 428], "github": [367, 369, 370, 371, 372, 374, 375, 384, 386, 392, 395, 396, 399, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 422, 423, 424, 425, 426, 427], "giuliani": 379, "giunti": [407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 428, 431], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 133, 283, 284, 366, 371, 375, 376, 380, 381, 382, 383, 386, 387, 392, 396, 407, 409, 411, 419, 432, 440, 443, 450, 452, 456, 458, 463, 465, 466, 467, 468, 471, 475, 476, 484, 500, 505, 560, 561, 563, 564], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 66, 67, 68, 78, 80, 81, 82, 83, 85, 86, 88, 91, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 167, 168, 171, 173, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 275, 277, 279, 285, 293, 295, 298, 299, 306, 313, 317, 320, 321, 329, 353, 354, 359, 363, 366, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 389, 390, 392, 394, 406, 411, 417, 425, 426, 431, 435, 436, 437, 440, 443, 451, 452, 453, 455, 457, 458, 459, 462, 463, 464, 466, 467, 468, 469, 471, 475, 476, 484, 486, 496, 497, 498, 500, 504, 505, 509, 510, 512, 513, 519, 523, 526, 557, 559, 560, 561, 562], "glast": 476, "glat": [41, 66, 67, 81, 366, 439, 463, 468, 476], "glat_err": 463, "glat_pnt": [449, 475], "glimps": [477, 480], "gll_iem_v06_cutout": [185, 186, 188, 194, 197, 198], "gll_iem_v06_gc": [451, 468, 470, 471, 476], "gll_psc_v16": 60, "gll_psc_v20": 463, "gll_psc_v32": 64, "gll_psch_v09": 58, "gll_psch_v13": 61, "glob": [80, 367, 464], "global": [16, 33, 42, 45, 46, 47, 97, 99, 100, 102, 105, 106, 107, 144, 155, 158, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 203, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 319, 322, 323, 324, 325, 366, 370, 372, 414, 431, 439, 449, 450, 460, 470, 473, 498, 558], "global_dataset": 467, "global_to_loc": 184, "glon": [41, 66, 67, 81, 366, 439, 463, 468, 476], "glon_pnt": [449, 475], "glossari": [386, 428, 496, 513], "glue": 500, "glueviz": 383, "gmodelspatialradialprofiledmburkert": 488, "gmodelspatialradialprofiledmeinasto": 488, "gmodelspatialradialprofiledmzhao": 488, "gmyzyaog": 471, "go": [50, 85, 88, 369, 376, 386, 391, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 488, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560], "goal": [371, 380, 394, 465], "goe": [41, 52, 356, 366, 385, 396, 453], "gogia": 424, "good": [80, 81, 84, 98, 121, 288, 292, 366, 371, 373, 374, 375, 376, 377, 380, 382, 383, 384, 386, 439, 441, 442, 445, 455, 456, 458, 459, 462, 464, 465, 467, 469, 471, 476, 477, 480, 522, 523, 559, 564], "googl": [85, 88, 386, 395], "got": 475, "gov": [58, 60, 61, 63, 64, 142, 190, 386, 395, 539], "gp": [80, 81, 87, 367, 376, 382, 444, 447, 449, 460, 475, 477], "gpl3": 366, "gps_baseline_110380": [80, 81, 475], "gradient": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "grai": [357, 509, 536], "grand": 366, "grant": [369, 392], "granular": 456, "grayify_colormap": 385, "grb": [456, 459], "great": [371, 380, 385, 423, 480], "greater": [162, 359], "green": [98, 106, 107, 425, 450, 472, 473], "grei": 460, "grep": 401, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 122, 125, 146, 154, 156, 185, 186, 188, 190, 194, 197, 198, 212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 271, 359, 366, 377, 382, 409, 411, 465, 512, 513, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553], "gridsearch": [203, 465], "gridspec": 353, "gridspec_kw": [443, 449, 457, 459, 526], "ground": [92, 381, 475, 561], "group": [84, 85, 88, 89, 122, 123, 126, 127, 129, 143, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 293, 372, 381, 385, 386, 387, 390, 395, 398, 408, 411, 413, 417, 423, 426, 457, 459, 480, 498, 500, 514, 560], "group_1": 472, "group_2": 472, "group_bi": [85, 88, 390], "group_by_axi": 390, "group_by_label": [89, 472], "group_high_zenith": 472, "group_low_zenith": 472, "group_siz": [137, 458], "group_tabl": [84, 190, 195], "grouped_observ": 472, "grow": [374, 385, 425], "grown": 386, "gr\u00e9aux": 431, "gsfc": [58, 60, 61, 63, 64, 142, 190, 386, 539], "gt": 466, "gtexpcube2": 476, "gti": [80, 81, 85, 86, 87, 97, 98, 99, 102, 106, 107, 119, 121, 123, 126, 159, 195, 253, 372, 375, 376, 379, 380, 381, 390, 409, 411, 412, 414, 427, 431, 432, 451, 458, 459, 464, 467, 475, 477, 478, 496, 500, 559], "gti_1": 497, "gti_2": 497, "gti_t0": 459, "gtimetadata": 393, "gtmktime": [376, 476], "gtobsim": 379, "gtol": 465, "gtpsf": [143, 144, 150, 155, 158, 190, 443, 476], "gtselect": [376, 476], "guarante": [374, 389, 391], "guess": [121, 184, 186, 432], "guid": [369, 382, 384, 398, 399, 400, 403, 426, 480, 500, 515, 525, 546, 556], "guidelin": [366, 370, 403, 425], "guiger": [31, 39], "gz": [58, 60, 61, 63, 64, 65, 66, 80, 81, 84, 86, 88, 91, 99, 102, 106, 107, 111, 113, 114, 118, 123, 125, 129, 134, 135, 147, 219, 266, 354, 359, 361, 367, 388, 426, 439, 440, 443, 450, 451, 452, 453, 463, 464, 466, 468, 470, 471, 475, 476, 477, 482, 484, 485, 486, 497, 498, 500, 502, 503, 504, 506, 526], "h": [26, 66, 80, 84, 85, 88, 92, 124, 144, 185, 186, 188, 194, 197, 198, 278, 356, 386, 389, 398, 402, 403, 411, 426, 434, 435, 436, 439, 440, 442, 448, 450, 457, 458, 459, 462, 466, 467, 468, 471, 475, 476, 477, 479, 480, 482, 484, 485, 495, 497, 500, 513, 548, 549, 559, 560], "h0": 450, "h05": [45, 49], "h1": 450, "h_0": [450, 562], "h_1": [450, 562], "h_i": 124, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 85, 88, 98, 99, 102, 106, 107, 118, 119, 121, 157, 179, 183, 184, 185, 186, 188, 192, 193, 194, 196, 197, 198, 206, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 264, 265, 266, 359, 361, 363, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 413, 414, 417, 419, 420, 426, 427, 428, 430, 431, 432, 436, 439, 440, 441, 445, 450, 452, 457, 458, 460, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 477, 478, 484, 496, 497, 500, 505, 509, 510, 512, 513, 517, 518, 545, 557, 560, 562], "habilit": 292, "hack": 422, "had": [366, 372, 374, 392, 414, 420, 424, 425], "hadron": [268, 372, 377, 445, 464, 475, 496, 509], "hajlaoui": [414, 417], "hal": 392, "half": [155, 158, 190, 196, 265], "halo": 488, "halv": [130, 283, 432], "halving_coord": 456, "halving_err": 456, "hand": [167, 366, 369, 374, 377, 386, 392, 394, 429, 465, 480, 500], "handbook": [386, 480], "handi": 447, "handl": [3, 16, 82, 101, 120, 192, 286, 365, 367, 370, 378, 379, 380, 382, 387, 389, 390, 393, 395, 398, 400, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 439, 441, 447, 448, 449, 451, 464, 466, 468, 470, 471, 476, 477, 480, 485, 486, 496, 497, 500, 559], "handler_map": 363, "hanna": 432, "hap": 382, "happen": [80, 369, 371, 373, 374, 380, 384, 396, 440, 470, 480, 484, 485, 496, 500, 562], "happi": [369, 373, 386, 406, 407, 426], "hard": [366, 367, 389, 394, 412, 473], "harder": [373, 560], "hardli": 393, "harri": [421, 422], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 81, 86, 114, 122, 145, 203, 235, 268, 269, 278, 285, 386, 465], "has_any_t": [119, 121], "has_energy_axi": [183, 184, 193, 196], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [85, 88], "has_masked_valu": [85, 88], "has_mixin_column": [85, 88], "has_offset_axi": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157], "has_stat_profil": [119, 121], "has_success": [119, 121], "has_ul": [119, 121], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 366, "hasn": [371, 564], "hatch": 460, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 80, 82, 85, 88, 92, 97, 101, 104, 108, 112, 119, 120, 121, 122, 126, 134, 135, 142, 143, 144, 153, 155, 158, 165, 167, 179, 183, 184, 185, 186, 188, 192, 193, 194, 196, 197, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 295, 319, 325, 363, 365, 366, 367, 368, 369, 371, 372, 373, 375, 377, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 411, 414, 417, 419, 420, 423, 425, 426, 427, 428, 429, 431, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 458, 459, 460, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 480, 484, 485, 486, 488, 496, 497, 498, 500, 511, 512, 513, 523, 534, 557, 560, 563, 564], "haven": 402, "hawc": [55, 59, 62, 71, 74, 94, 403, 411, 417, 425, 428, 429, 431, 434, 479, 480, 495, 496, 497, 508, 512, 559], "hawc19_flux_point": [121, 448, 500], "hawc_crab": [121, 448, 500], "hayvmpdk": 447, "hd": 66, "hdr": 393, "hdr_dict": 393, "hdu": [66, 80, 81, 83, 84, 85, 86, 91, 99, 102, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 303, 352, 367, 376, 405, 420, 422, 425, 428, 429, 451, 466, 468, 475, 477, 478, 496, 497, 500, 502, 503, 504, 506, 513, 555], "hdu1": 142, "hdu2": 142, "hdu_al": 451, "hdu_band": [119, 121, 143, 144, 150, 155, 158, 183, 184, 185, 186, 188, 189, 192, 193, 194, 196, 197, 198], "hdu_class": [80, 85, 303, 475, 477, 478], "hdu_class_uniqu": 85, "hdu_evt": 451, "hdu_filenam": 477, "hdu_gti": 451, "hdu_hdu": 80, "hdu_index": 80, "hdu_list": [143, 144, 146, 150, 154, 155, 156, 158, 185, 186, 197, 198], "hdu_loc": 85, "hdu_nam": 303, "hdu_ob": 80, "hdu_out": [185, 186], "hdu_region": [193, 194], "hdu_tabl": [80, 477], "hdu_table_filenam": 80, "hdu_typ": [80, 85, 475, 477, 478], "hdu_type_uniqu": 85, "hduclas2": 466, "hduclas3": 466, "hduclas4": 466, "hduclasn": 466, "hduindext": [80, 303, 477], "hdulist": [99, 102, 104, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 192, 193, 194, 196, 197, 198, 451, 468, 496], "hduloc": [85, 99], "he": [268, 376, 381], "hea": 381, "header": [80, 81, 82, 83, 84, 85, 86, 88, 91, 97, 98, 99, 101, 102, 103, 104, 106, 107, 119, 120, 121, 142, 143, 144, 150, 155, 158, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 265, 305, 348, 349, 352, 371, 376, 379, 393, 411, 419, 421, 426, 428, 431, 441, 451, 452, 468, 475, 564], "healpi": [184, 365, 373, 375, 383, 397, 398, 400, 409, 417, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 511], "healpix": [13, 184, 185, 186, 188, 194, 197, 198, 365, 373, 375, 380, 417, 425, 468, 476, 512], "healpix_to_imag": 418, "heapsort": [85, 88], "heart": 562, "heasarc": [142, 190], "heatmap": [355, 360], "heavi": [426, 427], "heavier": 447, "heavili": 417, "hegra": [94, 269], "heidelberg": 366, "heidt": 456, "height": [16, 29, 85, 88, 91, 123, 328, 440, 444, 445, 447, 453, 457, 460, 462, 468, 469, 471, 484, 509, 513], "heighten": 456, "helen": 423, "hello": [402, 449], "help": [11, 85, 88, 280, 286, 366, 369, 371, 373, 380, 381, 382, 386, 392, 395, 396, 397, 402, 406, 407, 408, 425, 426, 428, 463, 467, 468, 470, 476, 478, 486, 500, 560], "helper": [13, 303, 308, 373, 375, 380, 381, 382, 385, 396, 402, 408, 409, 410, 411, 417, 419, 422, 424, 425, 431, 432, 453, 463, 469, 470, 509, 558, 565], "henc": [85, 88, 382, 444, 445, 498, 513, 562], "her": 395, "here": [13, 80, 81, 85, 88, 99, 106, 121, 136, 140, 145, 154, 203, 277, 279, 282, 354, 365, 366, 367, 368, 369, 372, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 394, 396, 398, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 472, 473, 475, 476, 477, 480, 484, 485, 486, 490, 496, 500, 505, 507, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 564, 565], "hereaft": 451, "herebi": 473, "heritag": 392, "herm": [272, 274, 432], "hess": [16, 55, 66, 80, 81, 84, 86, 88, 93, 94, 98, 106, 107, 122, 127, 137, 138, 145, 147, 165, 171, 275, 293, 294, 367, 374, 375, 380, 382, 386, 395, 398, 402, 405, 407, 410, 421, 422, 425, 426, 434, 436, 437, 439, 440, 441, 445, 447, 449, 450, 458, 460, 462, 463, 464, 465, 467, 472, 473, 476, 478, 479, 482, 484, 485, 488, 497, 498, 500, 502, 503, 504, 506, 507, 509, 510], "hess2": [145, 502], "hess_dl3_dr1_obs_id_020136": [86, 147, 367, 502, 503, 504, 506], "hess_dl3_dr1_obs_id_023523": [81, 84, 497], "hess_dl3_dr1_obs_id_023526": 497, "hess_ecpl": [269, 439], "hess_pl": 269, "hessian": 498, "heterogen": [393, 437, 448], "hfm": 66, "hgp": [66, 78, 79, 118, 386, 411, 423, 425, 426, 495], "hgps_catalog_v1": 66, "hgps_sourc": 66, "hgpsc": [66, 463], "hi": [366, 424], "hi_bnd": 190, "hi_threshold": 142, "hidden": 377, "hide": [13, 371, 388], "hierarch": [13, 293, 334, 375, 377, 393, 432, 500, 512], "hierarchi": [293, 377, 410], "hierarchical_clust": [431, 472], "high": [6, 15, 58, 61, 62, 81, 142, 190, 318, 366, 370, 371, 372, 379, 380, 381, 386, 393, 409, 410, 411, 412, 413, 417, 425, 426, 434, 435, 437, 440, 443, 444, 447, 453, 455, 457, 462, 463, 464, 467, 469, 475, 476, 477, 478, 480, 485, 486, 487, 495, 498, 505, 512, 558, 559, 560, 561], "high_zenith": 472, "higher": [183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 229, 369, 372, 377, 382, 385, 387, 399, 437, 452, 456, 466, 468, 513], "highest": [134, 171, 456, 467, 475, 486], "highli": 471, "highlight": 560, "him": 395, "hint": [393, 443, 498], "hire": [146, 386, 490, 492, 493, 494, 496, 497, 502, 503, 504, 506, 509, 513, 562, 565], "hist": [81, 106, 107, 194, 198, 359, 442, 473], "histogram": [81, 106, 107, 190, 194, 198, 359, 431, 460, 513, 559], "histori": [380, 392, 428], "hli": [379, 412, 413, 417, 428, 434, 438, 480, 499, 559], "hli_spectrum_analysi": 440, "hline": 517, "hoc": 380, "hold": [68, 80, 87, 89, 93, 97, 153, 224, 295, 375, 376, 378, 381, 560, 562], "home": [16, 331, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 526, 532, 535, 548, 554, 555], "homebrew": 383, "homework": 408, "homogen": [85, 88, 414], "honk": 371, "hood": [440, 480, 484], "hook": [369, 428], "hope": 371, "hopefulli": 373, "horizont": [83, 92, 148, 336, 466, 564], "host": 366, "hour": [66, 91, 369, 382, 396, 435, 463, 467, 468, 500], "hover": 367, "how": [16, 19, 20, 80, 81, 82, 83, 96, 101, 120, 121, 123, 125, 165, 186, 196, 198, 319, 325, 368, 371, 374, 378, 380, 382, 383, 385, 388, 389, 392, 393, 396, 397, 398, 402, 403, 406, 407, 408, 411, 412, 419, 421, 424, 425, 426, 431, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 463, 464, 465, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 486, 488, 490, 496, 498, 501, 505, 509, 511, 512, 526, 558, 560, 561, 562, 564, 565], "howev": [85, 88, 118, 284, 365, 366, 367, 369, 373, 376, 379, 380, 384, 392, 394, 399, 436, 445, 453, 460, 462, 463, 464, 465, 473, 477, 478, 480, 496, 500, 512, 513, 518, 534, 560], "howto": [386, 428, 429], "hpx": [184, 185, 186, 188, 197, 198, 380, 417, 468, 476], "hpx2wc": [185, 186], "hpx_map": [185, 186], "hpx_pixel": 380, "hpx_reg": 184, "hpxgeom": [119, 183, 185, 186, 412, 417, 428, 476, 511], "hpxmap": [186, 188, 511], "hpxndmap": [261, 417, 511], "hpxsparsemap": 411, "hpxtowcsmap": [185, 186], "hr": [451, 452, 455, 459], "hspace": 462, "hspec": [421, 422, 423], "hst": 218, "hstack": [85, 88, 379], "html": [26, 81, 85, 88, 122, 142, 178, 184, 190, 193, 196, 203, 216, 238, 266, 295, 322, 323, 366, 367, 369, 374, 386, 391, 392, 396, 404, 425, 435, 442, 444, 447, 449, 455, 459, 465, 466, 475, 497, 503, 511, 513, 539], "htmlcov": 396, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 66, 81, 82, 85, 86, 88, 101, 114, 120, 122, 130, 136, 142, 145, 171, 178, 184, 190, 193, 196, 203, 216, 235, 238, 244, 245, 258, 259, 266, 268, 269, 278, 284, 285, 291, 295, 322, 323, 334, 369, 383, 386, 391, 392, 395, 396, 397, 398, 399, 400, 404, 408, 425, 435, 439, 442, 444, 447, 448, 449, 455, 459, 462, 463, 465, 466, 467, 475, 478, 497, 511, 513, 539, 543, 544, 560], "hubert": 426, "hue": 357, "huestart": 357, "huge": [396, 518], "hugovk": 407, "human": [347, 377, 396, 419, 440, 484], "hundr": 477, "hypercub": [468, 512, 513], "hypothes": [275, 431, 500, 562], "hypothesi": [119, 121, 122, 123, 126, 127, 275, 277, 279, 437, 443, 450, 498, 500, 559, 562], "hz": [325, 486], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 291, 292, 293, 295, 297, 301, 303, 306, 307, 308, 313, 315, 316, 319, 322, 323, 324, 325, 327, 328, 333, 335, 337, 341, 343, 344, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 485, 486, 488, 489, 490, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565], "i0": [85, 88], "i1": [85, 88], "i4": 453, "i8": [468, 486], "i_0": [185, 186, 188, 194, 197, 198], "i_hpx": [185, 186, 188, 194, 197, 198], "i_lat": [185, 186, 188, 194, 197, 198], "i_lon": [185, 186, 188, 194, 197, 198], "i_n": [185, 186, 188, 194, 197, 198], "i_scan": 473, "iact": [80, 81, 83, 91, 165, 168, 172, 372, 375, 376, 377, 378, 380, 382, 386, 403, 408, 422, 424, 426, 437, 443, 445, 467, 468, 470, 475, 476, 478, 497, 502, 503, 504, 506, 557, 559], "iactbasicimageestim": [372, 425], "iau": [52, 405, 409], "iau2015": 52, "ic": 536, "icon": 558, "icr": [81, 83, 86, 88, 91, 92, 93, 99, 102, 106, 107, 134, 155, 165, 168, 184, 185, 186, 188, 191, 193, 196, 197, 198, 212, 213, 217, 225, 228, 242, 250, 251, 293, 294, 329, 366, 367, 390, 410, 439, 440, 441, 442, 443, 445, 448, 449, 451, 452, 455, 457, 458, 459, 460, 463, 464, 466, 467, 468, 469, 471, 472, 475, 476, 477, 478, 484, 485, 497, 500, 504, 509, 513, 517, 518, 519, 521, 522, 523], "icrc": 421, "id": [66, 78, 80, 81, 85, 86, 88, 89, 109, 379, 382, 402, 440, 442, 451, 453, 455, 460, 463, 471, 475, 476, 477, 478, 484, 497], "id_obs_vela": 460, "idea": [371, 374, 381, 385, 386, 387, 440, 466, 472, 476, 484], "ideal": [368, 369, 376, 380, 381, 390, 394, 395, 437, 476], "idempot": [16, 82, 101, 120], "ident": [341, 369, 381, 428, 439, 441], "identif": [66, 372, 463], "identifi": [66, 86, 100, 105, 184, 253, 366, 376, 377, 379, 382, 391, 392, 396, 412, 443, 451, 456, 463, 464, 471, 475, 477, 499], "identified_object": 463, "idx": [81, 85, 88, 89, 97, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 238, 442, 451, 459, 463, 465, 468, 512], "idx1": 465, "idx2": 465, "idx_glob": 184, "idx_loc": 184, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 470, 471, 496, 559], "iem": [470, 476], "iem_minus_iem": 468, "iem_plus_iem": 468, "iem_times_two": 468, "ignacio": 427, "ignasi": 421, "ignor": [11, 16, 82, 85, 88, 101, 120, 149, 159, 188, 206, 208, 224, 295, 307, 367, 419, 453, 459, 460, 464, 469, 484, 500, 560], "ii": [201, 423], "ij": 201, "ilist": 184, "illustr": [106, 107, 367, 376, 378, 379, 380, 382, 385, 441, 443, 448, 453, 464, 467, 468, 470, 471, 476, 490, 496, 509, 510, 517, 518, 526, 558], "illustrate_colormap": 385, "iloc": [85, 88], "im": [355, 465], "imag": [99, 102, 106, 107, 114, 124, 125, 134, 144, 145, 146, 152, 154, 155, 156, 158, 160, 170, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 265, 287, 290, 331, 352, 354, 355, 356, 357, 361, 366, 374, 375, 377, 382, 383, 386, 387, 396, 398, 403, 405, 406, 407, 410, 411, 412, 418, 422, 423, 424, 425, 426, 434, 444, 445, 447, 453, 454, 467, 469, 471, 475, 485, 486, 496, 497, 498, 505, 508, 509, 510, 511, 512, 513, 557, 558, 559, 565], "image_analysi": [386, 406], "image_err": 125, "image_fitting_with_sherpa": [386, 427], "image_pip": 425, "image_profil": 424, "imagehdu": [185, 186, 197, 198], "imagenorm": [356, 357], "imageprofil": 125, "images_t": 449, "imagin": 560, "img": [354, 468], "iminuit": [203, 365, 383, 392, 417, 419, 426, 430, 431, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 557], "immut": 216, "impact": [373, 379, 383, 477], "imperfect": 467, "implement": [19, 20, 99, 102, 106, 107, 136, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 278, 284, 366, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 424, 425, 427, 428, 431, 432, 436, 444, 456, 458, 462, 463, 467, 468, 469, 488, 496, 498, 500, 505, 506, 507, 545, 557, 558, 559, 560, 561, 564], "implent": 366, "impli": [229, 366, 385, 496, 559], "implic": 388, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 505], "implicitli": 467, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 98, 99, 101, 102, 106, 107, 108, 111, 112, 113, 114, 118, 119, 120, 121, 123, 125, 127, 129, 134, 135, 137, 138, 140, 142, 144, 145, 146, 147, 153, 155, 165, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 207, 209, 210, 211, 214, 218, 220, 221, 222, 226, 230, 232, 233, 235, 236, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 269, 275, 278, 284, 285, 293, 294, 315, 325, 334, 345, 346, 351, 354, 356, 357, 359, 361, 367, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 402, 413, 423, 425, 430, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 489, 490, 492, 493, 494, 496, 497, 498, 500, 502, 503, 504, 506, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 560, 561, 562, 564], "importantli": [390, 426, 436, 560], "importerror": [85, 88], "impos": [430, 435, 509], "improv": [105, 275, 368, 370, 371, 372, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 391, 396, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 468, 475, 500, 510, 517], "imshow": [99, 102, 153, 186, 198, 354, 360, 424, 468, 486], "in2p3": [392, 475], "in_memori": [86, 500], "in_memory_gener": 89, "in_safe_data_rang": [99, 102, 106, 107], "inaccur": 366, "incex": [16, 82, 101, 120], "incid": [372, 559], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 81, 82, 85, 86, 88, 101, 120, 126, 153, 159, 161, 162, 168, 169, 173, 183, 184, 193, 196, 239, 303, 365, 366, 372, 374, 377, 378, 379, 380, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 407, 409, 414, 425, 430, 431, 432, 435, 448, 450, 451, 453, 459, 462, 463, 465, 467, 469, 470, 471, 475, 477, 488, 490, 496, 498, 499, 510, 512, 557, 561, 564], "include_irf": [81, 86, 497], "include_ssc": 239, "inclus": [81, 193, 380], "incompat": [366, 391, 419], "incomplet": [366, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "inconsist": [414, 420, 430, 431], "inconveni": [385, 426], "incorpor": [382, 386, 394, 559], "incorrect": [81, 366, 393, 401, 410, 428, 429, 467, 473], "incorrectli": [428, 469], "increas": [134, 160, 190, 195, 217, 225, 228, 366, 375, 393, 458, 467, 496, 517], "increment": [19, 20, 26, 114, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 380, 468, 512], "ind": [184, 196, 216, 238], "inde": [451, 518], "indefinit": 373, "indent": [16, 82, 101, 120], "independ": [66, 122, 126, 136, 292, 306, 366, 372, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 390, 392, 398, 407, 417, 435, 440, 457, 463, 468, 469, 470, 471, 477, 484, 485, 495, 500, 505, 559, 563], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 87, 88, 89, 97, 98, 99, 102, 106, 107, 118, 119, 121, 122, 123, 127, 128, 129, 133, 142, 143, 144, 150, 153, 155, 158, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 203, 207, 209, 210, 211, 214, 216, 218, 220, 221, 222, 226, 232, 233, 235, 236, 238, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 269, 278, 303, 317, 322, 369, 372, 375, 376, 377, 378, 381, 382, 389, 390, 391, 395, 398, 408, 422, 424, 425, 431, 432, 436, 437, 439, 440, 442, 443, 444, 447, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 463, 464, 465, 466, 470, 471, 475, 476, 477, 478, 484, 485, 486, 498, 511, 512, 513, 516, 517, 518, 519, 521, 522, 523, 524, 526, 528, 530, 531, 532, 537, 538, 539, 547, 548, 549, 550, 551, 552, 553, 554, 555], "index1": [210, 254, 527, 541], "index2": [210, 254, 527, 541], "index_1": [257, 258, 259, 542, 543, 544], "index_2": [257, 258, 259, 542, 543, 544], "index_arrai": [85, 88], "index_column": [85, 88], "index_data": 189, "index_error": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "index_mod": [85, 88], "index_scan": 473, "indexerror": [89, 97, 238], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 97, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 366, 428, 442, 452, 456, 467, 468, 472, 473, 477, 478, 500, 512, 513, 559], "indico": 375, "indirect": [462, 488], "individu": [85, 88, 105, 116, 124, 362, 372, 378, 379, 381, 386, 389, 390, 394, 436, 439, 442, 450, 453, 458, 463, 464, 465, 467, 470, 471, 486, 496, 500, 505, 559], "indiviud": 388, "indxschm": [185, 186, 197, 198], "ineffici": [85, 88, 369], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [66, 228, 394, 473], "infer": [119, 121, 183, 184, 185, 186, 188, 196, 197, 198, 218, 367, 484, 512], "inferno": 468, "infil": 366, "infin": 473, "influenc": 473, "info": [16, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 91, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 146, 152, 154, 156, 277, 279, 303, 367, 381, 382, 386, 395, 401, 411, 412, 414, 421, 422, 425, 440, 444, 445, 447, 451, 458, 462, 463, 464, 468, 476, 477, 478, 480, 482, 484, 560], "info_dict": [99, 102, 106, 107, 277, 279, 359, 414, 432, 464], "info_t": [97, 436, 439, 440, 442, 447, 459, 464, 470, 500], "infodict": 359, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 86, 88, 91, 96, 97, 98, 99, 101, 102, 106, 107, 119, 120, 121, 142, 146, 152, 154, 156, 157, 160, 165, 166, 172, 191, 203, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 239, 240, 241, 242, 243, 245, 246, 250, 251, 252, 254, 257, 258, 259, 261, 262, 265, 266, 280, 286, 303, 319, 348, 349, 366, 370, 371, 376, 378, 379, 380, 381, 382, 389, 390, 393, 394, 396, 401, 402, 403, 411, 413, 414, 417, 419, 425, 431, 432, 437, 440, 441, 448, 451, 452, 455, 456, 464, 465, 467, 468, 471, 475, 476, 477, 478, 484, 485, 486, 495, 496, 497, 498, 500, 513, 559, 560, 563], "infrar": 218, "infrastructur": [396, 417, 428, 431], "ingredi": [390, 462], "inherit": [85, 88, 278, 366, 376, 378, 381, 390, 393, 394, 412, 417, 424, 464, 466, 511, 512], "init": [19, 20, 26, 85, 88, 118, 123, 129, 162, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 307, 319, 378, 414, 429, 431, 432, 453, 463, 464, 486], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 64, 82, 85, 88, 101, 119, 120, 121, 129, 186, 189, 190, 216, 238, 240, 241, 295, 371, 376, 377, 378, 382, 419, 435, 442, 445, 447, 448, 450, 451, 452, 455, 460, 463, 464, 468, 471, 484, 485, 486, 495, 497, 545, 559], "initialis": [33, 42, 45, 46, 47, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 319, 322, 323, 324, 325, 366, 388, 473], "inject": [442, 455], "inlin": [371, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 478, 484, 485, 486], "inner": [44, 52, 53, 123, 160, 170, 251, 445, 486, 523], "inner_height": [509, 513], "inner_width": [509, 513], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 82, 84, 85, 88, 99, 101, 102, 105, 114, 116, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 135, 138, 143, 144, 146, 153, 154, 155, 156, 157, 158, 160, 162, 166, 168, 170, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 207, 209, 216, 230, 238, 264, 265, 266, 278, 295, 306, 316, 319, 336, 338, 359, 361, 372, 374, 376, 377, 378, 379, 380, 381, 382, 387, 402, 412, 417, 420, 427, 431, 442, 451, 452, 460, 468, 473, 498, 512, 513, 561], "input_map": [108, 112], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 431, "insensit": 192, "insert": [85, 88, 89, 97, 238, 392, 412, 563], "insert_row": [85, 88], "inset": 418, "insid": [50, 81, 99, 106, 111, 113, 142, 168, 184, 185, 186, 188, 193, 196, 197, 198, 216, 238, 253, 355, 359, 366, 367, 380, 382, 390, 417, 435, 439, 442, 444, 447, 449, 455, 459, 464, 467, 469, 470, 471, 475, 477, 497, 507, 509, 510, 513], "inside_geom": 469, "insight": 401, "inspect": [378, 382, 402, 439, 441, 447, 451, 452, 465, 468, 470, 475, 476], "inspir": [366, 390], "instal": [85, 88, 365, 366, 369, 373, 374, 375, 383, 395, 396, 397, 400, 402, 403, 406, 407, 417, 421, 424, 425, 426, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 484, 485, 486, 500, 560], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 82, 83, 84, 85, 86, 88, 89, 101, 116, 120, 121, 122, 124, 126, 127, 157, 159, 167, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 313, 319, 353, 355, 356, 357, 360, 362, 366, 372, 377, 378, 381, 382, 388, 390, 393, 417, 437, 439, 442, 453, 463, 465, 467, 469, 470, 471, 486, 490, 500, 512, 513, 536], "instanti": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 185, 186, 188, 190, 197, 198, 377, 382, 436, 440, 463, 464, 468, 471, 473, 484], "instead": [16, 19, 20, 26, 82, 83, 85, 88, 99, 101, 102, 106, 107, 110, 120, 172, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 366, 367, 369, 371, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 397, 398, 400, 407, 410, 413, 414, 427, 431, 441, 447, 451, 455, 457, 459, 460, 463, 464, 466, 467, 468, 471, 473, 497, 504, 505, 512, 513, 560], "instruct": [366, 375, 383, 395, 397, 398, 406, 417, 421, 425, 451, 475], "instrument": [6, 81, 92, 105, 145, 149, 150, 224, 366, 376, 377, 378, 379, 381, 386, 390, 398, 402, 411, 414, 426, 427, 428, 434, 436, 437, 439, 440, 443, 447, 454, 460, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 478, 480, 484, 485, 496, 497, 498, 502, 504, 506, 557, 558, 559], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 80, 81, 82, 83, 85, 86, 88, 90, 91, 99, 100, 101, 102, 105, 106, 107, 109, 114, 116, 120, 121, 122, 123, 126, 127, 129, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 165, 168, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 271, 273, 275, 277, 278, 279, 283, 284, 285, 291, 295, 306, 307, 313, 317, 319, 322, 323, 324, 325, 327, 328, 353, 359, 366, 380, 424, 445, 465, 490], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 210, 211, 214, 218, 220, 221, 222, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 505, 517], "int_flux": 462, "integ": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 88, 89, 90, 97, 99, 102, 106, 107, 119, 121, 122, 123, 126, 129, 134, 135, 143, 144, 150, 155, 158, 161, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 207, 209, 216, 238, 295, 313, 319, 366, 372, 380, 445, 512], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 99, 102, 106, 107, 119, 121, 124, 126, 133, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 160, 185, 186, 188, 190, 194, 197, 198, 199, 200, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 306, 365, 373, 375, 377, 379, 380, 381, 383, 384, 386, 390, 392, 405, 407, 408, 412, 413, 417, 422, 423, 424, 425, 426, 427, 428, 431, 439, 441, 442, 444, 459, 462, 463, 464, 468, 469, 471, 486, 488, 496, 498, 504, 519, 539], "integral_error": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 384, 414], "integral_flux_imag": 418, "integrate_geom": [212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265, 417, 430, 432], "integrate_log_log": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157], "integrate_spectrum": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 408, 414], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [85, 88, 295, 376, 394, 466], "intens": [185, 186, 188, 194, 197, 198, 203, 229, 376, 468, 496], "intent": 371, "interact": [19, 20, 85, 88, 155, 158, 185, 186, 188, 194, 197, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 365, 366, 367, 375, 376, 377, 378, 382, 386, 389, 402, 411, 447, 455, 465, 468, 470, 471, 480, 484, 485, 509, 512, 536, 560], "interchang": 512, "interest": [111, 113, 122, 126, 203, 275, 371, 379, 380, 384, 386, 396, 437, 447, 451, 453, 463, 464, 465, 467, 469, 472, 475, 476, 486, 497, 498, 536, 559, 562, 563], "interfac": [6, 11, 15, 19, 20, 85, 88, 201, 203, 206, 207, 208, 209, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 370, 371, 372, 376, 378, 379, 381, 383, 384, 385, 386, 407, 410, 412, 413, 414, 417, 421, 424, 425, 431, 434, 440, 443, 444, 447, 455, 457, 465, 471, 475, 480, 485, 486, 487, 500, 511, 536, 557, 558, 559, 560], "intermedi": [196, 375, 382, 392, 402, 436, 458], "intern": [15, 19, 20, 26, 85, 88, 119, 121, 130, 131, 132, 162, 168, 193, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 271, 295, 307, 366, 378, 380, 382, 385, 390, 417, 419, 428, 431, 435, 440, 447, 456, 457, 464, 466, 468, 475, 478, 484, 496, 500, 555], "interp": [19, 20, 147, 185, 186, 188, 190, 194, 195, 197, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 308, 361, 389, 394, 430, 432, 442, 448, 452, 455, 459, 466, 467, 468, 471, 476, 477, 478, 512, 513, 536, 537], "interp1": 468, "interp1d": 308, "interp2": 468, "interp_by_coord": [185, 186, 188, 194, 197, 198, 265, 428, 468], "interp_by_pix": [185, 186, 188, 194, 197, 198, 261, 262, 468], "interp_kwarg": [67, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 218, 261, 262, 265, 266, 366, 466, 476], "interp_map": [185, 186, 188, 194, 197, 198], "interp_missing_data": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157], "interp_param": 366, "interp_scal": [276, 308], "interp_to_geom": [185, 186, 188, 194, 197, 198, 414, 430, 468, 476, 500], "interp_weight": 184, "interpol": [6, 26, 91, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 165, 184, 185, 186, 188, 190, 194, 195, 197, 198, 218, 230, 240, 241, 261, 262, 264, 265, 266, 276, 307, 308, 309, 365, 377, 378, 379, 407, 412, 417, 419, 422, 425, 427, 428, 429, 430, 431, 432, 452, 466, 467, 471, 476, 477, 500, 508, 512, 545], "interpolatedunivariatesplin": 264, "interpret": [88, 99, 102, 124, 134, 135, 186, 190, 196, 197, 198, 313, 384, 394, 468, 498, 513], "intersect": [87, 168, 169, 173, 193, 380, 458], "interspers": 371, "interstellar": [45, 451], "interv": [52, 53, 76, 80, 81, 84, 86, 87, 88, 89, 97, 98, 100, 105, 121, 126, 166, 190, 195, 203, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 375, 376, 380, 381, 384, 390, 398, 411, 413, 414, 417, 426, 427, 432, 457, 459, 465, 468, 477, 485, 497, 512, 559, 562], "interval_edg": 195, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 239, 285, 377, 381], "intro_map": 426, "introduc": [19, 20, 185, 186, 188, 190, 194, 197, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 366, 373, 374, 376, 378, 379, 380, 381, 383, 386, 388, 391, 394, 408, 410, 411, 413, 414, 417, 419, 420, 424, 425, 426, 428, 431, 432, 450, 456, 467, 471, 513, 518, 560, 563], "introduct": [369, 387, 388, 389, 407, 411, 412, 413, 414, 437, 440, 471, 477, 478, 484, 485, 489], "introductori": 456, "introspect": 295, "intuit": [387, 563], "invalid": [352, 366, 380, 393, 394, 417, 451, 478], "invalid_pixel": 469, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 210, 211, 214, 218, 220, 221, 222, 226, 229, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 277, 278, 279, 317, 324, 379, 451, 469, 471, 473, 536], "inverse_al": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "inverse_cdf": 451, "inversecdf": 379, "inversecdfsampl": [379, 409], "inversecompton": [239, 536], "invert": [88, 184, 196, 486], "invest": 369, "investig": 450, "involv": [85, 88, 99, 102, 106, 107, 366, 371, 380, 382, 384, 388, 443, 560], "io": [13, 81, 84, 85, 88, 122, 178, 188, 193, 203, 266, 369, 375, 386, 396, 408, 411, 423, 427, 431, 451, 465, 466, 468, 475, 497, 500, 511, 513], "iop": 284, "iopscienc": 284, "ipix": 184, "ipynb": [374, 386, 408, 411, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "ipynb_to_galleri": 366, "ipython": [85, 88, 365, 366, 382, 383, 397, 401, 409, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 484, 485, 486, 499, 560], "ipython3": 399, "ipywidget": 468, "irap": 386, "irf": [6, 80, 86, 93, 99, 100, 102, 105, 106, 107, 108, 109, 110, 112, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 171, 172, 174, 175, 176, 178, 180, 181, 184, 193, 196, 253, 294, 366, 367, 372, 376, 377, 378, 379, 382, 385, 386, 387, 388, 394, 398, 406, 408, 411, 413, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 443, 444, 447, 451, 452, 455, 457, 459, 467, 469, 472, 473, 474, 476, 477, 478, 480, 484, 485, 496, 497, 500, 502, 503, 504, 506, 507, 512, 557, 558, 559], "irf_dict": 159, "irf_dl3_hdu_specif": 466, "irf_fil": [86, 140, 144, 145, 146, 155, 435, 442, 455, 459, 466, 475], "irf_filenam": [451, 452, 466, 475], "irf_map": [143, 144, 150, 155, 158], "irf_path": 451, "irfmap": [143, 144, 155, 158, 398, 414, 500], "irfmetadata": 393, "irfmodel": 377, "irfs1": 475, "irfs2": 475, "irfs_path": 80, "irfstack": [414, 423], "irregular": [184, 196, 512], "irrespect": [379, 447, 468, 512], "is_align": [184, 190, 195, 196], "is_all_point_sky_region": 193, "is_all_same_energy_shap": 97, "is_all_same_shap": 97, "is_all_same_typ": 97, "is_allclos": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "is_allski": [183, 184, 193, 196], "is_bkg": 104, "is_contigu": [195, 468], "is_convertible_to_flux_sed_typ": [119, 121], "is_energy_axi": 190, "is_energy_depend": [212, 213, 215, 217, 223, 225, 227, 228, 229, 230, 231, 240, 242, 246, 250, 251, 252, 255, 261, 264, 265, 267, 430, 471], "is_fixed_rad_max": 157, "is_flat": [183, 184, 189, 193, 196], "is_hpx": [184, 193, 196], "is_imag": [183, 184, 193, 196], "is_mask": [185, 186, 188, 194, 197, 198], "is_norm": [19, 20, 98, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 394, 419, 432, 436, 439, 440, 441, 442, 444, 447, 448, 455, 459, 463, 465, 471, 485, 486, 536, 545], "is_norm_spectral_model": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 417, 471], "is_nul": 468, "is_pointed_observ": 81, "is_pointlik": [70, 72, 73, 74, 76, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 417], "is_region": [184, 193, 196], "is_regular": [184, 193, 196], "is_ul": [66, 119, 121, 417, 432, 463, 486], "is_unidimension": 189, "isf": [465, 562], "isinst": [366, 377, 380, 389, 393, 394], "ism": [52, 53, 536], "isn": [369, 373, 380, 382, 385, 396, 449, 560], "isnan": [468, 469], "iso": [86, 121, 195, 200, 431, 459, 470, 476, 512, 554], "iso_p8r2_source_v6_v06": [470, 476], "isol": [380, 397, 469], "isot": [347, 564], "isotherm": [22, 488], "isotrop": [47, 213, 270, 470], "issu": [19, 20, 26, 85, 88, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 366, 367, 369, 374, 375, 377, 378, 380, 383, 386, 391, 392, 393, 394, 395, 398, 399, 400, 407, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 449, 469, 475, 496, 500, 560, 561], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 89, 97, 192, 238, 386, 393], "iter": [85, 88, 89, 97, 119, 121, 185, 186, 188, 189, 190, 192, 194, 195, 197, 198, 238, 369, 372, 374, 382, 418, 443, 459], "iter_by_axi": [119, 121, 185, 186, 188, 194, 197, 198], "iter_by_axis_data": 194, "iter_by_coord": 409, "iter_by_edg": [190, 195], "iter_by_imag": [185, 186, 188, 194, 197, 198, 426], "iter_by_image_data": [185, 186, 188, 194, 197, 198, 468], "iter_by_image_index": [185, 186, 188, 194, 197, 198], "iter_by_pix": 409, "iter_with_reshap": 189, "itercol": [85, 88], "iterrow": [85, 88], "itertool": 465, "itrg7pi1": 442, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 75, 99, 102, 106, 107, 119, 121, 161, 162, 171, 184, 190, 192, 210, 211, 214, 217, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 275, 366, 369, 372, 375, 376, 378, 381, 382, 383, 385, 390, 392, 393, 396, 399, 417, 431, 432, 436, 440, 441, 444, 451, 452, 456, 457, 458, 463, 465, 467, 468, 469, 470, 471, 473, 484, 486, 489, 505, 507, 509, 511, 512, 513, 559, 562], "itself": [85, 88, 365, 366, 381, 392, 436, 457, 458, 460, 473, 560], "ivoa": 432, "j": [19, 20, 23, 99, 106, 124, 136, 278, 367, 369, 496], "j0001": [463, 486], "j0002": [463, 486], "j0003": [463, 486], "j0006": 463, "j0007": 486, "j0008": [463, 486], "j0009": 486, "j0010": 463, "j0013": 463, "j0021": 463, "j0022": 463, "j0025": 463, "j0031": 463, "j0349": 463, "j0521": 439, "j0534": [463, 486], "j0633": 486, "j0835": [437, 486], "j0851": 463, "j0nd4hww": 467, "j1036": 463, "j1104": [463, 486], "j1506": 437, "j1507": 437, "j1513": 463, "j1514": 463, "j1555": 486, "j1653": 463, "j1713": 436, "j1731": 470, "j1732": 470, "j1741": 470, "j1744": 470, "j1745": 470, "j1746": 470, "j1747": 470, "j1748": 470, "j1753": 470, "j1800": 470, "j1801": 470, "j1802": 470, "j1809": 470, "j1811": 470, "j1824": 463, "j1825": 450, "j1843": 66, "j1844": 66, "j2028": 463, "j2158": 463, "j2347": 486, "j2350": 486, "j2351": 486, "j2352": 486, "j2356": 486, "j2357": [463, 486], "j2358": [463, 486], "j2359": [463, 486], "j_": 23, "jackson": [85, 88], "jacob": [407, 426], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 413], "jalel": [414, 417], "jan": [371, 372, 375, 378, 383, 387, 404], "jana": 432, "januari": [373, 375, 391], "jargon": 398, "jason": 407, "javascript": [85, 88], "jax": 384, "jbernet": 432, "jean": [425, 426], "jeffrei": 473, "jeltema": 488, "jep": 371, "jet": 357, "jfact": 462, "jfact_decai": 462, "jfact_map": 462, "jfactor": [19, 20, 431], "jfactori": 462, "jj": 201, "jk": [99, 106, 496], "jkl": 496, "jl": 496, "jo": [85, 88], "job": [90, 122, 123, 126, 129, 161, 419], "johann": [410, 417, 421, 422, 423, 424, 425, 426], "john": [85, 88], "join": [368, 377, 378, 475], "joint": [97, 106, 107, 116, 127, 136, 138, 275, 374, 375, 378, 382, 386, 388, 398, 407, 408, 410, 411, 426, 427, 434, 436, 437, 439, 440, 441, 443, 450, 454, 459, 464, 465, 467, 471, 472, 473, 476, 480, 484, 498, 500, 557, 558, 559], "joint_fit": 460, "joint_result": 460, "jointli": [472, 477], "jonathan": [421, 422], "jose": [417, 419, 425], "joshi": 417, "jos\u00e9": [374, 382, 386, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 425, 426, 427], "journal": 392, "jouvin": [407, 409, 410, 411, 414, 422, 423, 424, 425, 426], "jqueri": [85, 88], "jskwarg": [85, 88], "json": [16, 82, 101, 120, 395, 419, 421, 425], "json_data": [16, 82, 101, 120], "json_encod": 16, "json_schema": [16, 82, 101, 120], "jsonschema": [383, 410, 411], "jsviewer": [85, 88, 449], "juan": 432, "jul": [372, 381, 383, 385, 404], "juli": [372, 375, 380, 382, 383, 385, 389, 391, 393, 458], "julia": 432, "julian": 564, "julien": [423, 424, 425], "jun": [380, 382, 383, 388, 389], "june": [380, 384, 404], "junior": [65, 386], "jupyt": [365, 373, 382, 383, 386, 397, 398, 400, 401, 403, 408, 423, 424, 425, 427, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560], "jupyterlab": [365, 383, 386, 402, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "jupytext": 386, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 84, 145, 341, 366, 367, 368, 369, 371, 374, 376, 380, 382, 383, 384, 386, 395, 396, 397, 399, 425, 427, 439, 440, 442, 447, 449, 451, 456, 457, 458, 460, 464, 468, 476, 477, 484, 486, 497, 513, 560], "juypter": 382, "jyear": [85, 88], "k": [19, 33, 52, 53, 99, 106, 192, 214, 264, 319, 437, 439, 441, 463, 465, 468, 470, 476, 496, 513, 517, 529, 536, 547], "kai": [425, 426], "kaori": 409, "kaspi": [31, 39, 45], "katrin": [394, 430, 431, 432], "kb": 374, "keep": [13, 85, 88, 97, 119, 153, 185, 186, 188, 194, 197, 198, 203, 366, 367, 369, 371, 372, 373, 374, 380, 383, 384, 385, 386, 389, 390, 415, 425, 444, 445, 450, 455, 465, 470, 476], "keep_byteord": [85, 88], "keep_column": [85, 88], "keep_mc_id": [100, 105], "keepdim": [153, 155, 158, 185, 186, 188, 194, 197, 198, 406, 411, 467], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 80, 82, 85, 87, 88, 99, 101, 102, 106, 107, 114, 120, 129, 136, 192, 203, 335, 352, 374, 376, 383, 388, 390, 393, 403, 426, 464, 471, 526], "kept": [87, 99, 102, 106, 107, 119, 121, 122, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 366, 372, 386, 390, 498], "kernel": [99, 102, 106, 107, 114, 118, 124, 125, 129, 142, 143, 144, 153, 155, 158, 160, 165, 170, 172, 175, 186, 196, 198, 372, 393, 412, 413, 418, 423, 427, 428, 443, 445, 460, 467, 468, 469, 476, 486, 496, 500, 504], "kernel_width": [129, 443, 449], "kernelbackgroundestim": 413, "kernelbackgroundmapestim": 387, "kev": [104, 129, 190, 443, 464, 513], "keyboard": 402, "keyerror": [88, 192, 390], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 82, 84, 85, 86, 88, 92, 98, 99, 101, 102, 106, 107, 120, 121, 123, 124, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 203, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 276, 278, 307, 315, 316, 335, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 393, 413, 417, 420, 428, 429, 441, 451, 452, 464, 468, 477, 498, 513, 524], "kg": 52, "khelifi": [409, 411, 414, 417, 420, 424, 425, 426, 428, 429], "kh\u00e9lifi": [392, 428, 430, 431, 432], "kind": [85, 88, 266, 341, 377, 378, 379, 384, 385, 389, 392, 426], "kinet": 44, "king": [154, 410, 421, 422, 423, 424, 425, 426, 466, 506], "kirsti": [430, 431, 432], "kl": 496, "klepser": 421, "km": [32, 37], "km2": 475, "km2a": [57, 69], "know": [367, 369, 371, 375, 380, 382, 383, 390, 396, 408, 425, 426, 427, 449, 452, 462, 466, 467, 468, 475, 477, 478, 560], "knowledg": [394, 402, 437, 442, 448, 450, 453, 455, 457, 465, 467, 468, 470, 473], "known": [277, 279, 295, 379, 439, 443, 445, 450, 457, 467, 468, 469, 486, 500, 510, 560, 561, 562], "koenig": 278, "konig": 278, "konrad": 432, "kornecki": 432, "kovalev": 456, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 239, 295, 298, 462, 463, 494, 536], "kurt": 432, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 81, 84, 85, 86, 88, 98, 99, 102, 106, 107, 121, 122, 123, 124, 126, 137, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 167, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 276, 307, 318, 341, 353, 354, 355, 358, 360, 361, 362, 363, 366, 377, 393, 394, 430, 437, 451, 460, 467, 478, 548], "kwargs_ax": [359, 445, 447], "kwargs_background": [106, 107], "kwargs_colorbar": [139, 140, 142, 145, 146, 147, 152, 154, 156, 198, 354], "kwargs_count": [106, 107], "kwargs_excess": [106, 107], "kwargs_extens": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 450], "kwargs_fit": [106, 107, 359], "kwargs_fp": 98, "kwargs_hist": [359, 445, 447], "kwargs_list": 192, "kwargs_model": 98, "kwargs_npred_sign": [106, 107], "kwargs_point": [193, 216, 238, 441], "kwargs_posit": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 450], "kwargs_residu": [98, 106, 107], "kwargs_saf": [106, 107], "kwargs_spati": [99, 102, 106, 107, 447, 485], "kwargs_spectr": [99, 102, 106, 107, 447, 485], "kwargs_spectrum": [98, 106, 107], "l": [23, 26, 51, 54, 98, 99, 106, 107, 165, 363, 367, 380, 389, 392, 436, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 455, 459, 460, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 484, 485, 486, 496, 500, 513, 536, 559, 561, 562, 563], "l06": [48, 490], "l_": [52, 53], "l_0": [51, 493, 517, 518], "l_snr": 44, "la": 423, "lab": [392, 402, 425], "label": [89, 187, 190, 195, 216, 238, 293, 354, 355, 360, 363, 366, 367, 370, 375, 379, 380, 395, 396, 417, 419, 428, 429, 431, 435, 437, 439, 441, 445, 447, 448, 452, 453, 456, 457, 458, 460, 462, 465, 468, 471, 472, 473, 486, 493, 494, 502, 526, 532, 535, 536, 540], "label_axi": [187, 468], "label_axis2": 468, "labelcolor": 435, "labelmapaxi": [417, 431], "lack": [192, 381, 460], "lafferti": [405, 559], "lafferty1994": 559, "lai": 469, "lambda": [16, 66, 221, 222, 278, 359, 463, 465, 475, 530, 562], "lambda_": [221, 222, 275, 437, 439, 447, 530, 532], "lancast": 136, "land": 396, "langl": 19, "languag": [373, 385], "laplac": [228, 519], "lar": [382, 406, 407, 408, 424, 425, 426, 429, 431], "larg": [66, 85, 88, 185, 186, 188, 194, 197, 198, 261, 263, 265, 366, 369, 371, 372, 380, 386, 387, 407, 417, 426, 427, 432, 435, 439, 445, 458, 463, 469, 475, 476, 477, 486, 496, 498, 500, 501, 513, 519, 557, 560, 565], "large_scale_compon": [66, 463], "larger": [27, 128, 275, 284, 367, 374, 385, 431, 435, 436, 439, 464, 467, 468, 469, 473, 497, 513, 519, 561, 562], "largest": [99, 102, 106, 107, 198, 366], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 89, 91, 97, 185, 186, 187, 188, 190, 194, 197, 198, 238, 325, 363, 373, 376, 378, 388, 392, 395, 396, 398, 400, 406, 407, 456, 509], "lat": [16, 47, 58, 60, 61, 63, 64, 68, 70, 72, 73, 76, 81, 84, 88, 91, 93, 99, 102, 106, 108, 112, 118, 122, 123, 125, 129, 143, 144, 150, 155, 158, 161, 185, 186, 188, 191, 194, 196, 197, 198, 212, 213, 217, 224, 225, 228, 240, 242, 250, 251, 253, 255, 261, 263, 265, 270, 275, 297, 298, 301, 323, 366, 367, 374, 375, 376, 377, 378, 379, 385, 386, 389, 396, 398, 403, 406, 411, 424, 425, 426, 434, 437, 440, 443, 444, 445, 447, 449, 453, 457, 458, 463, 464, 466, 467, 468, 469, 470, 471, 472, 479, 480, 484, 485, 486, 488, 495, 496, 497, 498, 500, 505, 512, 513, 517, 518, 519, 520, 521, 522, 523, 557, 564], "lat_0": [217, 225, 228, 242, 250, 251, 265, 381, 389, 444, 447, 448, 450, 451, 452, 455, 457, 463, 464, 470, 471, 476, 484, 485, 517, 518, 519, 521, 522, 523, 524], "lat_0_err": 450, "lat_pnt": [297, 301], "lat_rang": 323, "lat_t": [297, 301], "later": [366, 371, 372, 373, 377, 378, 379, 382, 383, 384, 385, 386, 387, 405, 407, 417, 418, 420, 421, 427, 439, 441, 447, 448, 464, 467, 468, 471, 476, 486, 496], "latest": [122, 178, 266, 295, 369, 373, 386, 391, 392, 399, 428, 435, 442, 444, 447, 448, 449, 455, 459, 465, 475, 497, 513], "latex": [366, 367], "latex_inlin": 431, "latitud": [91, 183, 184, 185, 186, 191, 193, 196, 197, 198, 323, 353, 410, 453, 468, 471, 505, 512, 520], "latpol": 468, "latter": [172, 203, 377, 379, 381, 387, 390, 393, 411, 441, 442, 451, 452, 455, 469, 470, 507, 509, 559, 561], "launch": [425, 560], "laura": [414, 417, 419, 420, 426, 428, 430, 431, 432], "law": [27, 98, 118, 119, 121, 123, 128, 133, 153, 155, 158, 210, 220, 221, 222, 243, 244, 245, 246, 254, 257, 258, 259, 268, 278, 322, 379, 405, 411, 425, 434, 442, 444, 447, 451, 453, 455, 458, 459, 460, 470, 471, 473, 500, 514, 526, 546, 552], "law2": 539, "layer": [85, 88, 378, 385], "layout": [417, 447, 455, 468, 484, 485], "lazi": [86, 97, 99, 102, 106, 107, 263, 304, 425, 500], "lazili": 99, "lazyfitsdata": 413, "lc": [84, 126, 195, 379, 381], "lc_1d": [119, 121, 137, 456, 457, 458, 459], "lc_3d": 457, "lc_estim": 381, "lc_maker_1d": [457, 458, 459], "lc_maker_3d": 457, "lc_new": 458, "lea": 414, "lead": [118, 366, 375, 380, 385, 387, 389, 391, 392, 410, 473, 475, 477, 488, 560], "leak": [441, 509], "leakag": 457, "learn": [140, 145, 366, 383, 386, 395, 398, 400, 402, 426, 437, 439, 443, 449, 450, 451, 453, 456, 463, 464, 465, 468, 471, 473, 475, 480, 486, 560], "least": [43, 44, 366, 369, 371, 375, 451, 456, 512], "leav": [371, 378, 380, 381, 383, 386, 395, 397, 470], "lefaucheur": [423, 424, 425], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 85, 88, 99, 106, 119, 121, 126, 129, 143, 145, 185, 186, 188, 194, 197, 198, 222, 226, 245, 257, 280, 286, 366, 374, 376, 380, 382, 385, 389, 402, 443, 449, 457, 459, 470, 498, 507, 510, 518, 519, 526, 527, 530, 531, 533, 534, 536, 538, 541, 542, 543, 544, 548, 549, 550, 552, 561, 562, 563], "legaci": [366, 425, 426], "legacy_altaz": 83, "legal": [85, 88], "legend": [363, 435, 437, 439, 441, 447, 448, 452, 456, 457, 458, 460, 462, 465, 471, 472, 473, 476, 493, 494, 502, 526, 532, 535, 536, 540], "legend_kwarg": 363, "lemi\u00e8r": 425, "len": [81, 275, 363, 443, 450, 451, 452, 456, 458, 460, 463, 465, 467, 470, 486, 500], "lenain": [425, 426], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 85, 88, 91, 161, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 278, 307, 359, 392, 437, 442, 449, 453, 463, 465, 468, 476, 486, 517], "lengthi": 468, "lennarz": [408, 422, 424], "leq": [517, 522, 523], "less": [75, 184, 186, 190, 230, 264, 286, 366, 371, 373, 384, 396, 425, 465, 471, 472, 473], "let": [66, 269, 366, 369, 371, 375, 380, 383, 398, 401, 425, 426, 427, 437, 440, 441, 442, 443, 447, 448, 449, 450, 451, 453, 459, 460, 463, 464, 465, 468, 469, 471, 473, 476, 484, 486, 560], "level": [6, 11, 15, 16, 81, 82, 101, 118, 120, 203, 277, 279, 366, 367, 369, 370, 371, 377, 379, 381, 385, 386, 387, 390, 393, 398, 402, 409, 410, 411, 412, 413, 417, 425, 432, 434, 436, 437, 439, 440, 443, 444, 445, 447, 449, 451, 455, 456, 457, 458, 459, 460, 462, 465, 470, 472, 475, 476, 477, 478, 480, 482, 486, 487, 496, 497, 498, 505, 507, 508, 512, 557, 558, 559, 560, 564], "levelnam": 366, "levmar": [203, 465], "lf": 396, "lgpl": 366, "lgtm": 396, "lhaaso": [55, 57], "li": [114, 118, 168, 372, 435, 443, 445, 451, 559, 562], "lib": [331, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 532, 535, 548], "librari": [85, 88, 366, 371, 372, 376, 386, 392, 403, 436, 439, 451, 471, 475, 485, 488, 497, 500, 558, 560], "licenc": 392, "licens": [392, 402], "lie": [183, 184, 190, 193, 196], "life": [373, 465], "lifetim": [20, 432], "lifetime_age_of_univers": 20, "light": [15, 75, 126, 130, 218, 230, 285, 370, 377, 379, 382, 386, 390, 398, 411, 413, 414, 421, 424, 426, 431, 432, 434, 456, 461, 480, 496, 497, 498, 499, 508, 509, 512, 514, 556, 558], "light_curv": [16, 230, 386, 426, 434, 440, 444, 445, 447, 457, 461, 484, 555], "light_curve_flar": [434, 458, 461], "light_curve_model": 555, "light_curve_simul": [434, 459, 461], "lightcrv_pksb1222": [230, 555], "lightcurv": [70, 72, 73, 75, 76, 115, 121, 126, 130, 131, 132, 137, 194, 195, 230, 282, 283, 285, 375, 377, 382, 385, 387, 390, 398, 409, 411, 412, 413, 417, 423, 424, 425, 426, 428, 429, 431, 432, 434, 457, 458, 461, 480, 495, 500, 555], "lightcurve_at_energi": 390, "lightcurveconfig": 16, "lightcurveestim": [115, 381, 382, 387, 390, 398, 409, 411, 413, 414, 417, 425, 426, 431, 457, 458, 459, 500], "lightcurvetablemodel": [377, 379], "lightcurvetempl": 377, "lightcurvetemplatemodel": [430, 431], "lightcurvetemplatetemporalmodel": [260, 389, 428, 431, 452, 471, 555], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 66, 78, 80, 85, 86, 88, 134, 135, 149, 157, 185, 186, 188, 192, 194, 197, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 295, 315, 325, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 397, 398, 402, 408, 417, 419, 420, 424, 425, 427, 428, 430, 431, 435, 437, 439, 440, 441, 442, 445, 452, 453, 456, 460, 462, 464, 465, 466, 468, 472, 473, 475, 476, 480, 484, 486, 488, 489, 496, 500, 505, 513, 523, 558, 560, 561, 562, 563], "likelhood": 378, "likelihood": [97, 99, 102, 107, 118, 119, 120, 121, 123, 129, 276, 292, 366, 372, 375, 378, 379, 382, 384, 386, 387, 388, 390, 398, 405, 407, 408, 411, 418, 421, 424, 426, 427, 432, 437, 439, 440, 441, 443, 449, 453, 457, 458, 460, 464, 465, 467, 473, 476, 484, 485, 488, 496, 498, 500, 536, 558, 559, 561, 562], "likelihood_profil": [377, 407], "likelihood_typ": 412, "likewis": [186, 198], "lima": 114, "lima1983": [498, 559, 562], "lima_map": 445, "limamapestim": [387, 413], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 75, 78, 85, 88, 98, 109, 118, 119, 120, 121, 122, 123, 126, 127, 129, 142, 157, 160, 190, 207, 209, 243, 276, 277, 279, 315, 316, 353, 372, 374, 375, 377, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 394, 407, 413, 417, 424, 425, 426, 427, 432, 435, 439, 447, 450, 453, 457, 464, 465, 468, 469, 472, 476, 484, 496, 498, 500, 509, 518, 536, 545, 558, 559, 563], "lin": [19, 20, 190, 194, 195, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 276, 307, 308, 309, 394, 452, 466, 468, 478, 513, 536], "line": [6, 13, 46, 80, 81, 85, 88, 98, 99, 102, 106, 107, 146, 152, 154, 156, 193, 194, 216, 238, 327, 328, 363, 365, 367, 369, 372, 375, 377, 380, 382, 383, 390, 396, 397, 398, 400, 402, 411, 422, 425, 447, 465, 467, 471, 488, 500, 513, 558], "line2d": [193, 216, 238], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 139, 140, 141, 142, 145, 147, 149, 152, 157, 185, 186, 188, 194, 195, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 307, 366, 428, 434, 447, 452, 453, 455, 468, 471, 476, 484, 485, 514, 556], "linear_model": 551, "linearli": [195, 198, 468, 496], "linearsegmentedcolormap": [356, 357], "linearstretch": [356, 357], "lineartemporalmodel": [260, 471, 551], "lineno": 366, "liner": [264, 380], "linestyl": [435, 460, 462, 473, 494, 513, 517, 518], "linewidth": [363, 367], "linhoff": [429, 430, 431, 432], "link": [66, 68, 78, 98, 216, 218, 238, 275, 369, 371, 374, 375, 378, 386, 392, 396, 402, 403, 414, 417, 419, 423, 424, 425, 436, 439, 440, 441, 442, 444, 447, 448, 455, 459, 463, 465, 471, 475, 485, 486, 500, 545, 557], "linkag": 293, "linkage_kwarg": 293, "linkcheck": 367, "linspac": [81, 144, 185, 186, 188, 194, 197, 198, 451, 453, 460, 465, 466, 468, 473, 512, 517], "linux": [373, 383, 396, 399, 426, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 560], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 93, 97, 98, 99, 100, 101, 102, 105, 106, 107, 114, 116, 118, 119, 121, 122, 123, 126, 127, 129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 161, 165, 166, 168, 169, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 316, 326, 327, 328, 330, 355, 359, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 442, 443, 448, 452, 453, 455, 456, 457, 459, 464, 466, 467, 472, 473, 475, 476, 477, 478, 480, 485, 496, 500, 503, 512, 513, 557, 558, 559, 560], "list_format": [85, 88], "listen": 500, "listenv": 369, "listinfo": 395, "liter": [16, 82, 101, 120, 313, 366], "literatur": [488, 490, 559], "littl": [85, 88, 385, 387, 393, 468, 476, 505, 509, 560], "live": [81, 84, 86, 366, 371, 374, 376, 387, 427, 430], "livetim": [66, 86, 87, 102, 103, 107, 155, 177, 179, 180, 372, 435, 436, 439, 440, 442, 449, 451, 452, 455, 459, 463, 464, 466, 468, 476, 477, 486, 496, 500], "livetime_fract": 87, "ljouvin": 372, "ll": [119, 121, 129, 369, 371, 383, 399, 435, 436, 439, 441, 444, 445, 449, 456, 457, 458, 459, 460, 560, 562], "llvm": 402, "ln": [53, 465, 543], "lo": [23, 424], "lo_bnd": 190, "lo_threshold": 142, "load": [65, 66, 80, 81, 84, 85, 88, 97, 98, 99, 102, 106, 123, 125, 159, 165, 183, 184, 185, 186, 196, 303, 366, 420, 423, 425, 431, 440, 442, 444, 445, 451, 452, 455, 456, 459, 460, 469, 475, 476, 477, 478, 484, 486, 497, 500], "load_cta_irf": [427, 431], "load_irf_dict_from_fil": [155, 431, 435, 442, 451, 452, 455, 459, 475], "loc": [85, 88, 198, 359, 460, 493, 494, 502, 526, 532, 535, 536, 540], "loc_indic": [85, 88], "local": [17, 18, 21, 22, 24, 25, 27, 85, 88, 134, 135, 170, 183, 184, 193, 194, 196, 366, 367, 369, 374, 380, 395, 396, 399, 403, 407, 417, 440, 443, 444, 445, 450, 451, 462, 467, 480, 484, 500], "local_dataset": 467, "local_dens": [17, 18, 21, 22, 24, 25, 27, 462], "local_to_glob": 184, "localfold": 11, "localis": 303, "localn": [16, 82, 101, 120], "locat": [47, 80, 81, 83, 85, 86, 91, 130, 143, 144, 150, 155, 158, 196, 324, 374, 380, 384, 387, 392, 393, 398, 400, 431, 435, 442, 451, 452, 455, 459, 463, 477, 478, 497, 513, 560], "location_info": 85, "log": [16, 19, 20, 26, 42, 82, 99, 101, 119, 120, 121, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 190, 194, 198, 206, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 271, 280, 286, 306, 307, 309, 352, 361, 378, 382, 404, 421, 428, 432, 434, 440, 442, 443, 444, 445, 447, 448, 449, 452, 455, 457, 458, 459, 462, 464, 465, 466, 467, 468, 471, 473, 476, 477, 482, 484, 485, 500, 502, 512, 513, 514, 537, 545, 546, 552, 559, 560, 561, 562, 563], "log10": 460, "log_": [232, 233, 471, 534], "log_2": 283, "log_en": 471, "log_level": 11, "log_parabola": 437, "log_parabola_norm": 389, "logarithm": [34, 468, 473, 534], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 424, "loggaussian": 377, "logger": [333, 335, 366, 449], "logic": [16, 82, 84, 101, 120, 171, 390, 468, 469], "logical_and": [185, 186, 188, 194, 197, 198], "logical_or": [185, 186, 188, 194, 197, 198, 467], "loglog": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 306, 435, 462, 492, 493, 494], "lognorm": 462, "logo": 396, "logparabola": [377, 535], "logparabolanormspectralmodel": [233, 248, 389, 414, 471, 535], "logparabolaspectralmodel": [232, 248, 389, 437, 439, 441, 448, 463, 465, 471, 528, 534, 535], "logscal": 411, "logspac": [144, 185, 186, 188, 194, 197, 198, 442, 455, 459, 460, 462, 468, 492, 493, 494, 513], "logspir": [33, 38], "lomb": [381, 425], "lon": [16, 47, 88, 91, 93, 99, 102, 106, 108, 112, 118, 123, 125, 129, 143, 144, 150, 155, 158, 161, 185, 186, 188, 191, 194, 196, 197, 198, 212, 213, 217, 224, 225, 228, 240, 242, 250, 251, 253, 255, 261, 263, 265, 297, 298, 301, 323, 366, 367, 377, 380, 385, 389, 410, 440, 444, 445, 447, 449, 453, 457, 458, 463, 464, 466, 467, 468, 471, 472, 476, 484, 485, 486, 498, 512, 513, 517, 518, 519, 520, 521, 522, 523], "lon_0": [217, 225, 228, 242, 250, 251, 265, 381, 389, 444, 447, 448, 450, 451, 452, 455, 457, 463, 464, 470, 471, 476, 484, 485, 517, 518, 519, 521, 522, 523, 524], "lon_0_err": 450, "lon_pnt": [297, 301], "lon_rang": 323, "lon_t": [297, 301], "long": [366, 369, 371, 373, 380, 382, 385, 386, 388, 391, 393, 419, 428, 463, 480, 512], "longer": [284, 366, 372, 373, 380, 381, 383, 386, 399, 417, 420, 425, 426, 428, 431, 436, 442, 457], "longest": 189, "longitud": [67, 91, 183, 184, 185, 186, 191, 193, 196, 197, 198, 323, 353, 380, 453, 468, 471, 505, 512, 520], "lonpol": 468, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 86, 99, 102, 106, 107, 121, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 325, 366, 368, 369, 371, 378, 380, 381, 383, 385, 386, 389, 402, 425, 436, 439, 440, 442, 443, 444, 445, 447, 449, 451, 453, 455, 457, 459, 460, 464, 466, 468, 471, 475, 476, 478, 480, 484, 486, 488, 497, 500, 560], "look_up": 423, "lookup": 191, "loop": [85, 88, 316, 379, 431, 439, 463, 468, 477, 484, 500], "lopez": [218, 425, 431, 526], "lopez21": [219, 526], "lopez_2021": 219, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 366, "loss": [52, 559], "lost": [97, 99, 106, 500, 513], "lot": [80, 366, 369, 371, 372, 373, 374, 377, 379, 380, 382, 386, 396, 406, 408, 409, 417, 425, 426, 440, 449, 476, 484, 485, 510], "low": [85, 88, 142, 190, 318, 366, 367, 370, 375, 395, 423, 425, 434, 436, 439, 443, 449, 451, 464, 469, 470, 475, 476, 480, 484, 487, 496, 497, 498, 507, 508, 512, 557, 561], "low_zenith": 472, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 119, 121, 142, 171, 190, 192, 195, 210, 211, 214, 215, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 366, 380, 385, 386, 393, 453, 467, 485], "lower_error": 121, "lowest": [385, 456], "lp": [232, 233, 389, 437, 463, 471, 528], "lp_norm": 535, "lst": [373, 475], "lt": [366, 392, 419, 428, 522, 523], "ltcube": [184, 185, 186, 188, 197, 198, 468], "lts_author": 392, "luca": [407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 428, 431], "lui": 427, "luigi": 422, "luminos": [41, 46, 51, 52, 53, 54, 239], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 494], "lvtm": 459, "lw": [441, 443, 449, 460, 465, 513, 517, 519], "ly": [417, 470], "lyne": 37, "l\u00e9a": [407, 409, 410, 411, 414, 422, 423, 424, 425, 426], "l\u00f3pez": 425, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 85, 88, 91, 94, 108, 112, 126, 183, 184, 185, 186, 188, 194, 196, 197, 198, 278, 292, 366, 367, 369, 380, 397, 398, 399, 400, 452, 462, 465, 466, 468, 471, 482, 505, 509, 511, 512, 513, 524, 560, 563], "m1": [398, 400], "m2": [99, 145, 165, 440, 442, 444, 445, 447, 449, 455, 464, 466, 467, 475, 484, 485], "m_": [20, 50, 52, 53], "m_3fhl_gc": 468, "m_4d": 468, "m_allski": 468, "m_b": 561, "m_cube": 468, "m_ejecta": [52, 493], "m_gc": 468, "m_hpx": 468, "m_i": 561, "m_iem_10gev": 468, "m_iem_cutout": 468, "m_iem_gc": 468, "m_iem_interp": 468, "m_sub": 468, "m_sun": 493, "m_wc": [185, 186, 188, 194, 197, 198, 468], "ma": [85, 88, 114, 118, 435, 443, 445, 559, 562], "mac": [85, 88, 366, 373, 396, 424, 560], "machin": [369, 373, 374, 379, 383, 396, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 447], "maco": [383, 426], "macport": [383, 424, 426], "made": [165, 172, 193, 196, 207, 209, 216, 238, 295, 327, 328, 366, 369, 371, 382, 385, 387, 390, 391, 392, 417, 428, 429, 439, 443, 447, 448, 467, 475, 513, 524, 559], "madrid": 376, "magenta": [363, 450, 472], "magic": [94, 398, 403, 419, 425, 428, 441, 476, 559], "magic_ecpl": 269, "magic_lp": [269, 441], "magnet": [42, 50, 51, 54, 536], "magnetic_field": [50, 51, 54], "magnitud": [307, 451], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 85, 88, 91, 98, 101, 120, 121, 122, 123, 126, 206, 208, 366, 367, 369, 374, 375, 379, 380, 382, 383, 391, 392, 396, 397, 399, 403, 404, 405, 444, 445, 451, 475, 499, 512, 519, 536, 557, 560, 564], "mail": [367, 369, 371, 373, 380, 382, 385, 387, 389, 392, 395, 401, 406, 407, 486, 560], "mailman": 395, "mailmap": [417, 428], "main": [88, 99, 106, 366, 369, 371, 372, 374, 378, 381, 382, 383, 386, 390, 392, 396, 407, 413, 417, 420, 425, 431, 440, 450, 451, 453, 455, 463, 466, 468, 469, 470, 482, 484, 485, 495, 497, 501, 560], "mainli": [366, 376, 377, 380, 387, 468], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 366, 368, 383, 385, 386, 387, 391, 396, 426, 467], "mainten": [366, 373, 392, 396, 408, 430], "major": [193, 217, 225, 228, 366, 370, 371, 375, 383, 391, 419, 425, 426, 517, 518, 519], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 80, 82, 85, 88, 92, 98, 101, 120, 160, 161, 165, 166, 167, 168, 170, 171, 172, 175, 176, 181, 182, 184, 185, 186, 189, 190, 193, 195, 196, 197, 198, 264, 325, 327, 328, 337, 365, 367, 368, 371, 372, 373, 376, 378, 380, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 402, 405, 406, 408, 411, 412, 417, 419, 422, 423, 424, 425, 428, 430, 436, 439, 441, 442, 445, 447, 451, 455, 457, 465, 466, 467, 468, 471, 475, 476, 477, 482, 486, 497, 500, 560, 561], "make_background": [165, 172], "make_background_fit": 162, "make_background_scal": 162, "make_base_catalog_galact": [425, 490], "make_concentric_annulus_sky_region": 453, "make_contour": 465, "make_count": [165, 166, 167, 172], "make_counts_off": [166, 167], "make_cub": 160, "make_dataset": 161, "make_default_fov_background_model": 162, "make_edisp": [165, 172], "make_edisp_kernel": [165, 172], "make_edisp_kernel_map": 466, "make_edisp_map": 144, "make_effective_livetime_map": 467, "make_exclusion_mask": 162, "make_exposur": [165, 172], "make_exposure_irf": [165, 172], "make_imag": 426, "make_lupton_rgb": 361, "make_map_background_irf": 420, "make_map_count": 372, "make_map_cutout": 372, "make_map_exposure_reco_energi": 372, "make_map_exposure_true_energi": [144, 372, 466], "make_map_fov_background": 372, "make_map_hadron_accept": 372, "make_map_ring_background": 372, "make_map_xxx": 372, "make_maps_off": 170, "make_mask_bkg_invalid": 171, "make_mask_energy_aeff_default": 171, "make_mask_energy_aeff_max": 171, "make_mask_energy_bkg_peak": 171, "make_mask_energy_edisp_bia": 171, "make_mask_offset_max": 171, "make_mean_edisp": 427, "make_mean_psf": 427, "make_meta_t": [165, 172], "make_model": 385, "make_more_random_stuff": 366, "make_observation_time_map": 467, "make_orthogonal_rectangle_sky_region": [123, 453], "make_path": [121, 448, 464], "make_pixel_region": 380, "make_psf": [155, 165, 172, 427], "make_psf_map": 466, "make_quant": 337, "make_random_stuff": 366, "make_region": 380, "make_sky_coord": 380, "make_some_random_stuff": 366, "make_theta_squared_t": [417, 478], "makefil": [396, 421], "maker": [6, 144, 155, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 372, 379, 381, 392, 411, 413, 414, 419, 428, 431, 432, 434, 435, 439, 441, 442, 445, 449, 451, 452, 455, 459, 460, 464, 466, 469, 474, 477, 478, 480, 496, 497, 510, 512, 559], "maker_fov": 485, "maker_safe_mask": [449, 455, 485], "mamba": [369, 397, 398, 419], "manag": [85, 88, 207, 209, 216, 238, 315, 344, 365, 366, 369, 374, 382, 383, 385, 388, 392, 393, 395, 417, 422, 424, 428, 432, 468, 470, 560], "manconi": 409, "mandatori": [171, 369, 379, 392, 452, 471], "mandatory_keyword": 466, "mani": [85, 88, 307, 366, 367, 369, 371, 373, 375, 378, 380, 381, 382, 383, 386, 387, 392, 396, 402, 408, 409, 414, 417, 423, 424, 425, 426, 427, 430, 431, 436, 439, 442, 450, 455, 456, 468, 478, 480, 488, 496, 498, 510, 513, 557, 558, 559, 560, 564], "manifest": 376, "manipul": [85, 88, 390, 393, 419, 473, 512], "manner": [430, 431], "manpow": [371, 383], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 373, 378, 388, 395, 451, 500, 508, 560, 561], "manuel": [418, 421, 422], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 81, 82, 85, 88, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 129, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 213, 216, 217, 224, 225, 228, 230, 238, 240, 242, 250, 251, 253, 255, 261, 262, 263, 265, 266, 273, 278, 317, 353, 354, 359, 361, 363, 365, 366, 367, 369, 373, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 393, 398, 402, 406, 407, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 431, 432, 434, 435, 436, 439, 440, 441, 442, 446, 447, 450, 451, 452, 453, 454, 456, 457, 458, 459, 463, 464, 467, 471, 474, 475, 476, 477, 478, 480, 481, 484, 485, 488, 495, 496, 497, 499, 500, 504, 505, 506, 507, 508, 509, 510, 516, 518, 519, 520, 521, 524, 555, 557, 558, 559], "map_": [199, 200, 354, 361], "map_4d": 468, "map_analysi": 385, "map_cent": 265, "map_coord": [81, 144, 155, 158], "map_dataset": [378, 460], "map_dataset_empti": 460, "map_dataset_mak": 460, "map_dataset_on_off": 460, "map_edisp": [108, 112], "map_in": [185, 186, 188, 194, 197, 198], "map_out": [102, 107, 143, 144, 150, 155, 158, 185, 186, 188, 194, 197, 198], "map_select": [16, 440, 444, 445, 447, 484], "map_typ": [185, 186, 188, 194, 197, 198, 468, 512], "mapax": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 414, 417, 419, 468], "mapaxi": [19, 20, 26, 99, 102, 106, 107, 108, 109, 110, 112, 119, 121, 123, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 165, 175, 176, 181, 182, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 361, 367, 381, 390, 408, 409, 411, 414, 417, 427, 431, 435, 436, 439, 441, 442, 448, 449, 451, 452, 455, 458, 459, 460, 464, 466, 467, 468, 471, 476, 477, 478, 485, 504, 507, 509, 510, 512, 513], "mapcoord": [81, 144, 155, 158, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 240, 425, 426, 468, 513, 520], "mapdataset": [95, 96, 100, 102, 105, 106, 107, 109, 110, 111, 113, 114, 118, 123, 126, 129, 133, 134, 135, 136, 160, 161, 162, 165, 166, 170, 171, 224, 359, 362, 379, 381, 387, 388, 407, 408, 409, 410, 411, 412, 413, 414, 417, 431, 432, 443, 444, 448, 449, 450, 452, 453, 455, 457, 459, 460, 465, 467, 469, 470, 476, 484, 485, 498, 500, 507, 510, 559, 561, 562], "mapdataseteventsampl": [90, 105, 411, 412, 413, 420, 431, 451, 452], "mapdatasetmak": [155, 163, 172, 379, 411, 414, 417, 420, 428, 449, 451, 452, 455, 460, 466, 467, 477, 484, 485, 500, 507, 510], "mapdatasetmetadata": [99, 102, 393], "mapdatasetoff": 419, "mapdatasetonoff": [95, 99, 106, 107, 114, 118, 133, 160, 166, 170, 411, 412, 414, 417, 430, 431, 445, 460, 467, 496, 510, 561], "mapdatasetsampl": 379, "mapevalu": [377, 378, 410, 411, 414, 417, 428, 429, 430, 432], "mapeventsampl": [409, 410], "mapfit": [377, 378, 407, 426, 427], "mapgeom": [372, 427, 428], "mapmak": [165, 382, 407, 411, 426], "mapmakerob": [410, 411], "mappabl": 390, "mappanelplott": [387, 565], "mapper": 303, "mappingintstrani": [16, 82, 101, 120], "maps_off": 170, "mar": [383, 404, 429], "march": [373, 375, 404, 406, 427], "marcocirelli": 26, "margin": [102, 107, 111, 113, 184, 186, 196, 198, 216, 238, 253, 377, 469, 517, 559, 561], "marion": [407, 426], "mark": [88, 366, 377, 395], "marker": [98, 99, 102, 106, 107, 435, 436, 439, 441, 443, 449, 456, 457, 458, 459, 486], "markerfacecolor": [99, 102, 106, 107], "markers": [98, 99, 102, 106, 107, 473], "mask": [81, 85, 88, 96, 98, 99, 102, 106, 107, 118, 122, 123, 125, 126, 127, 129, 143, 144, 150, 155, 158, 160, 162, 167, 168, 169, 170, 171, 173, 183, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 207, 209, 216, 238, 253, 378, 394, 411, 413, 414, 415, 417, 420, 426, 428, 429, 430, 431, 434, 435, 436, 447, 449, 467, 470, 474, 477, 480, 496, 507, 509, 512, 559], "mask_1": 472, "mask_2": 472, "mask_bright": 463, "mask_contains_region": 198, "mask_data": 469, "mask_energi": [464, 469], "mask_fit": [98, 99, 102, 106, 107, 111, 113, 378, 411, 428, 441, 447, 460, 464, 465, 469, 473, 496], "mask_fit_imag": [99, 102, 106, 107], "mask_imag": [99, 102, 106, 107], "mask_map": [184, 196, 434, 469, 474], "mask_map_catalog": 469, "mask_nearest_posit": [185, 186, 188, 194, 197, 198], "mask_off": 460, "mask_roi": 463, "mask_saf": [98, 99, 102, 103, 106, 107, 171, 378, 411, 464, 467, 469, 496], "mask_safe_edisp": [99, 102, 106, 107], "mask_safe_imag": [99, 102, 106, 107, 143, 144, 150, 155, 158], "mask_safe_psf": [99, 102, 106, 107], "mask_spac": 464, "masked_ev": 81, "maskedarrai": [85, 88], "maskedcolumn": [85, 88], "mass": [19, 20, 26, 52, 379, 413, 432, 462, 488, 521], "massdm": [19, 20, 462], "master": [372, 373, 380, 395, 396, 405], "match": [85, 88, 105, 109, 183, 184, 186, 189, 190, 191, 193, 196, 198, 200, 277, 279, 366, 374, 425, 427, 432, 439, 442, 459, 476, 495, 512], "match_by_nam": 191, "math": [225, 365], "mathcal": [465, 496], "mathemat": [471, 473], "mathieu": [417, 420], "mathrm": [19, 20, 23, 99, 106, 145, 462, 465, 496, 561, 563], "mathworld": [322, 323], "matplotlib": [19, 20, 26, 65, 66, 81, 125, 139, 142, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 185, 186, 188, 194, 197, 198, 201, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 344, 354, 355, 356, 359, 360, 361, 363, 365, 366, 367, 380, 383, 392, 399, 402, 409, 417, 419, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 492, 493, 494, 500, 502, 503, 504, 506, 509, 517, 519, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 564], "matric": 201, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 108, 112, 142, 143, 144, 147, 201, 202, 203, 207, 216, 238, 277, 279, 359, 383, 384, 394, 427, 428, 431, 465, 466, 496, 498, 504], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 380, 386, 394, 426, 431, 432, 434, 467, 474, 476, 480, 489, 512, 558, 560], "matthew": [373, 423, 425, 426], "matthia": [425, 426], "mattox": 443, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 86, 88, 99, 109, 122, 124, 126, 155, 157, 158, 161, 165, 167, 171, 198, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 323, 374, 382, 389, 394, 402, 413, 414, 415, 417, 419, 431, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 453, 455, 456, 457, 458, 460, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 476, 477, 484, 485, 488, 507, 509, 510, 517, 536, 539, 545, 562], "max_ag": [45, 490], "max_column": [85, 88], "max_energi": 456, "max_lin": [85, 88], "max_offset": 382, "max_percentil": 81, "max_radiu": [153, 155, 158, 196, 476], "max_region_numb": [168, 509], "max_width": [85, 88], "maxcal": 203, "maxclust": 293, "maxfev": 465, "maxim": [45, 80, 88, 109, 171, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 429, 430, 431, 432, 509], "maxima": [134, 207, 209], "maximilian": [417, 419, 420, 429, 430, 431, 432], "maximum": [19, 20, 45, 46, 47, 81, 85, 88, 97, 119, 121, 122, 124, 126, 155, 158, 160, 168, 171, 177, 180, 184, 190, 195, 196, 206, 208, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 277, 279, 322, 324, 327, 363, 369, 372, 380, 419, 437, 443, 456, 467, 468, 473, 477, 485, 490, 498, 509, 536, 558, 559, 562], "maxmimum": 473, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 374, 376, 377, 388], "mb": [183, 184, 193, 196, 374, 398, 400, 434, 438, 446, 454, 461, 474, 475, 476, 478, 479, 481, 483, 487, 515, 525, 546, 556], "mbox": [99, 106], "mc": 384, "mc_id": [81, 376, 379, 419, 451, 475], "mcerp": 384, "mckee": [53, 432], "mcmc": [384, 386, 407, 412, 414, 536], "mcmc_sampl": [386, 409], "md": [369, 386, 392], "mdm": [26, 462], "mean": [42, 67, 85, 88, 93, 99, 123, 125, 142, 143, 144, 147, 150, 155, 158, 226, 230, 264, 282, 294, 313, 366, 367, 369, 371, 373, 379, 380, 382, 383, 389, 394, 399, 402, 414, 423, 442, 452, 456, 465, 467, 471, 472, 473, 476, 477, 486, 518, 533, 560, 561], "meaning": 471, "meant": [372, 431, 435, 442, 444, 447, 449, 455, 459, 475], "measur": [27, 66, 102, 107, 125, 190, 269, 277, 279, 282, 283, 284, 285, 288, 289, 291, 292, 372, 380, 385, 390, 396, 405, 410, 418, 424, 426, 436, 439, 441, 442, 445, 448, 450, 453, 455, 456, 457, 458, 463, 476, 485, 486, 498, 505, 507, 510, 558, 559, 562, 563], "mechan": [374, 384, 390, 393], "media": 392, "median": [81, 155, 158, 402, 460, 472, 476], "median_zenith": 472, "medium": [45, 52, 366, 375], "meeseeksdev": 366, "meeseeksmachin": 366, "meet": [216, 238, 295, 372, 374, 386, 391, 396], "megabyt": [183, 184, 193, 196], "mem": [434, 438, 446, 454, 461, 474, 479, 481, 483, 487, 515, 525, 546, 556], "member": [81, 367, 371, 380, 392, 393, 425, 431, 475, 478], "memo": [142, 190], "memori": [85, 86, 88, 89, 97, 99, 100, 102, 105, 106, 107, 183, 184, 193, 196, 261, 263, 265, 344, 366, 376, 378, 379, 382, 388, 390, 411, 417, 432, 442, 455, 500, 559], "memoryobserv": 86, "mender": [430, 431, 432], "mention": [59, 137, 366, 367, 369, 373, 374, 378, 380, 383, 385, 386, 391, 392, 395, 396, 466, 470, 471, 488, 559], "mentor": [369, 386], "mere": 376, "merg": [66, 84, 85, 88, 187, 190, 216, 238, 334, 366, 369, 370, 371, 372, 379, 380, 381, 385, 386, 391, 392, 395, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 422, 423, 424, 425, 426, 427], "merge_equ": 84, "mergesort": [85, 88], "mess": 367, "messag": [98, 202, 204, 205, 369, 380, 382, 389, 415, 430, 436, 437, 439, 440, 441, 447, 448, 449, 459, 460, 465, 476, 484, 485, 500, 560], "met": [84, 347, 431, 458, 559], "met_start": 84, "met_stop": 84, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 83, 85, 86, 88, 91, 97, 99, 100, 102, 104, 105, 106, 107, 119, 121, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 172, 185, 186, 188, 194, 197, 198, 261, 262, 265, 266, 305, 347, 348, 349, 350, 376, 379, 380, 381, 390, 393, 413, 414, 425, 429, 431, 432, 451, 460, 468, 472, 475, 477, 497, 498, 555], "meta_t": [97, 98, 99, 102, 106, 107, 165, 172, 390, 393, 414, 436, 442, 467, 496], "metaattribut": [85, 88], "metadata": [16, 81, 82, 83, 85, 86, 88, 101, 103, 119, 120, 121, 139, 140, 141, 145, 146, 149, 152, 154, 156, 157, 185, 186, 188, 194, 197, 198, 348, 370, 372, 383, 432, 440, 451, 471, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "metadata_fits_export_kei": [82, 101, 120], "metadatabas": 393, "metadatabasemodel": 393, "metapackag": 383, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 277, 279, 285, 293, 303, 307, 311, 315, 316, 317, 340, 353, 355, 365, 366, 369, 372, 375, 376, 377, 380, 381, 382, 384, 385, 386, 388, 390, 392, 393, 398, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 435, 436, 437, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 455, 458, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 495, 497, 499, 500, 504, 507, 509, 510, 511, 513, 534, 548, 557, 558, 559, 560, 562], "method_kwarg": [315, 316], "methoda": 409, "metric": 293, "mev": [72, 81, 139, 140, 141, 145, 435, 442, 444, 447, 449, 455, 459, 460, 463, 466, 468, 471, 475, 476, 486, 545], "meval": 519, "mexico": 477, "meyer": [235, 269, 448, 559], "meyer2010": 559, "mgtime": 381, "michael": [430, 432], "mid": [420, 431, 475], "middl": [355, 382], "midli": 439, "midpoint": 86, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 173, 190, 203, 366, 371, 377, 378, 380, 383, 385, 390, 392, 393, 398, 400, 407, 439, 458, 460, 464, 467, 469, 476, 477, 480, 486, 488, 496, 500, 507, 513, 560, 562], "migra": [99, 102, 106, 107, 144, 147, 176, 382, 451, 452, 466, 505], "migra_axi": [99, 102, 106, 107, 110, 144, 147, 451, 452, 466, 467], "migrad": [98, 203, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485], "migrad_opt": [203, 465], "migrat": [99, 102, 106, 107, 110, 147, 375, 410, 417, 426, 451, 467, 504, 505], "milagro": [94, 357], "mileston": [375, 395], "milki": [33, 38, 405, 490], "miller": [85, 88], "million": [366, 393], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 88, 99, 122, 124, 126, 137, 165, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 283, 323, 381, 382, 389, 394, 402, 417, 425, 440, 442, 444, 445, 447, 448, 449, 450, 453, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 471, 472, 473, 476, 484, 485, 488, 509, 536, 539, 545], "min_count": 162, "min_dist": [134, 135, 168, 443, 449, 509], "min_distance_input": [168, 509], "min_energi": 456, "min_npred_background": 162, "min_signific": 381, "min_significance_lc": 381, "minaya": 427, "mind": [369, 386, 455, 465], "mini": 386, "miniconda": 397, "minim": [19, 20, 26, 109, 128, 185, 186, 188, 193, 194, 197, 198, 199, 203, 210, 211, 213, 214, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 239, 240, 241, 242, 243, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 275, 378, 381, 389, 393, 419, 429, 431, 435, 451, 464, 465, 473, 485, 500, 509, 510, 513, 558, 563], "minima": [207, 209, 473], "minimis": [459, 472], "minimum": [19, 20, 26, 47, 81, 97, 118, 119, 121, 122, 124, 126, 128, 130, 134, 135, 137, 138, 160, 162, 168, 190, 193, 195, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 271, 276, 280, 283, 295, 322, 324, 327, 361, 383, 419, 425, 439, 443, 451, 465, 468, 473, 476, 498, 500, 509, 536, 563], "mino": [203, 465], "minor": [366, 371, 386, 389, 391, 416, 429, 518, 519], "minos_contour": [409, 427], "minu": [147, 460], "minuit": [98, 116, 203, 204, 205, 377, 384, 411, 426, 427, 431, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485], "minuit_opt": 465, "minut": [386, 396, 425, 439, 443, 445, 447, 449, 450, 451, 453, 455, 458, 459, 462, 464, 465, 467, 473, 484], "mireia": 428, "mirror": 182, "misc": [405, 418, 422, 423, 424], "miss": [80, 85, 88, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 366, 369, 374, 375, 376, 377, 380, 386, 387, 390, 415, 417, 419, 425, 430, 468], "mission": [81, 431, 559], "mistak": [371, 391], "mix": [365, 366, 382, 464, 468], "mixin": [85, 88], "mjd": [84, 91, 121, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 348, 350, 367, 430, 431, 443, 451, 452, 456, 457, 458, 459, 468, 471, 497, 548, 549, 550, 551, 552, 553, 554, 555, 564], "mjdref": [443, 468], "mjdreff": [91, 347, 350, 452], "mjdrefi": [91, 347, 350, 452], "mkdir": [382, 439, 440, 447, 448, 451, 484, 485], "mkn": [486, 559], "mkn_421_3fhl": 486, "mncontour": 203, "mnra": [130, 291], "mnt": 428, "mock": 450, "mock_dl4": 450, "mode": [16, 82, 83, 85, 88, 91, 99, 101, 102, 106, 120, 124, 143, 144, 150, 155, 158, 161, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 263, 393, 412, 425, 428, 432, 459], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 86, 90, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 133, 136, 139, 145, 146, 153, 154, 155, 156, 158, 162, 165, 178, 185, 186, 188, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 287, 290, 292, 362, 365, 366, 367, 370, 371, 372, 378, 379, 381, 382, 384, 386, 387, 390, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 442, 443, 445, 450, 453, 455, 460, 466, 467, 468, 469, 474, 476, 477, 480, 488, 489, 495, 496, 498, 500, 501, 505, 507, 508, 512, 515, 525, 546, 556, 558, 559, 562, 563], "model1": [211, 526, 528, 532, 535, 537, 540], "model2": [211, 459, 526, 528, 532, 535, 537, 540], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 440], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [471, 528], "model_best_joint": 439, "model_best_stack": 439, "model_bkg": 464, "model_computed_field": [16, 82, 101, 120], "model_config": [16, 82, 101, 120, 444, 484], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 82, 101, 120], "model_copi": [16, 82, 101, 120, 471], "model_dump": [16, 82, 101, 120], "model_dump_json": [16, 82, 101, 120], "model_extra": [16, 82, 101, 120], "model_field": [16, 82, 101, 120], "model_fields_set": [16, 82, 101, 120], "model_fit": 459, "model_joint": 447, "model_json_schema": [16, 82, 101, 120], "model_manag": [434, 470, 474], "model_nam": [99, 102, 106, 107, 216, 238, 362, 464], "model_parametrized_nam": [16, 82, 101, 120], "model_plot": 450, "model_post_init": [16, 82, 101, 120], "model_prior": 473, "model_read": 473, "model_rebuild": [16, 82, 101, 120], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [442, 455, 459], "model_spectrum": 471, "model_str": 440, "model_typ": [216, 224, 236, 238, 253, 263, 275, 389, 470], "model_valid": [16, 82, 101, 120], "model_validate_json": [16, 82, 101, 120], "model_validate_str": [16, 82, 101, 120], "model_weak": 473, "model_weak_prior": 473, "model_without_nam": 471, "modelbas": [224, 253, 255, 256, 263, 267, 394], "modeldm": [19, 20], "modelevalu": 377, "modeling_2d": [434, 444, 446], "modelmetadata": 393, "modelmodel_dump": [16, 82, 101, 120], "modelmodel_dump_json": [16, 82, 101, 120], "models_3fhl": 470, "models_4fgl_roi": 463, "models_as_dict": [16, 82, 101, 120], "models_diffus": 451, "models_fil": [16, 440, 444, 445, 447, 484], "models_fit": 455, "models_gc": 470, "models_gp": 475, "models_joint": 447, "models_or": 470, "models_read": 471, "models_select": 470, "models_stack": 447, "models_yaml": 471, "modelsmetadata": 393, "modern": [85, 88, 384], "modernis": [383, 411], "modest": [366, 518], "modif": [16, 82, 85, 88, 101, 120, 366, 369, 388, 395, 428], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 85, 88, 90, 99, 106, 121, 122, 123, 126, 129, 161, 203, 315, 338, 363, 376, 378, 382, 388, 392, 393, 412, 414, 415, 417, 419, 427, 430, 431, 440, 452, 467, 469, 473, 477, 484, 498, 500, 513, 564], "modul": [6, 252, 366, 367, 371, 375, 382, 387, 405, 407, 413, 425, 459, 463, 467, 470, 488, 489, 490, 491, 536, 553, 564], "modular": 372, "mohrmann": [382, 406, 407, 408, 424, 425, 426, 429, 431, 559], "mohrmann2019": 559, "moment": [15, 51, 54, 84, 92, 253, 342, 372, 380, 382, 383, 386, 391, 392, 466, 468, 505], "moncar": [203, 465], "monitor": [379, 475, 500], "monkei": 366, "mono": 374, "monoton": 190, "mont": [384, 505], "montecarlo": [100, 105, 203], "month": [76, 369, 375, 380, 383, 385, 386, 391, 395, 399, 405, 406, 407, 408, 409, 418, 421, 422, 423, 424, 425, 426, 427], "monthli": [375, 393, 398, 427], "moor": 24, "morcuend": [427, 430, 432], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 73, 76, 85, 88, 96, 97, 98, 99, 102, 106, 107, 134, 142, 185, 186, 188, 197, 198, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 239, 240, 241, 242, 243, 245, 246, 250, 251, 252, 254, 257, 258, 259, 265, 266, 280, 286, 303, 341, 366, 367, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397, 398, 399, 402, 411, 412, 413, 414, 417, 424, 426, 427, 431, 436, 439, 441, 443, 445, 447, 451, 452, 456, 459, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 477, 478, 480, 486, 496, 497, 498, 500, 509, 510, 512, 513, 518, 557, 558, 560, 562, 564], "moreov": [382, 463, 467, 496], "morpholog": [116, 379, 434, 454, 480, 496, 512], "morphologi": [50, 52, 116, 377, 379, 389, 405, 422, 424, 436, 444, 450, 451, 452, 455, 463, 467, 514], "mosaic": 372, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 92, 114, 121, 365, 366, 367, 369, 371, 372, 373, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 396, 398, 399, 417, 424, 425, 427, 428, 431, 432, 444, 445, 453, 457, 459, 463, 465, 466, 467, 468, 469, 475, 476, 480, 486, 488, 498, 499, 500, 505, 513, 557, 559, 560, 563], "mostli": [56, 68, 295, 366, 367, 372, 373, 374, 375, 380, 382, 385, 386, 387, 390, 391, 393, 395, 396, 417, 425, 463, 467, 478, 486, 562, 564], "motion": [45, 299], "motiv": [171, 371, 373, 374, 380, 383, 385, 395, 471, 500], "move": [275, 371, 372, 373, 374, 377, 380, 385, 386, 387, 390, 395, 401, 407, 408, 410, 411, 412, 413, 417, 418, 422, 423, 425, 426, 427, 428, 442], "move_axi": 431, "movement": 392, "mpatch": 453, "mpg": 66, "mpi": 66, "mpl": 366, "mpl_check_plot": 366, "mpl_kwarg": [439, 449, 453], "mpl_normal": [356, 357], "mpl_plot_check": 366, "mpl_style": 425, "msg": [435, 442, 444, 447, 449, 455, 459, 475], "msh": [445, 463, 467], "msh15": 478, "mst": 475, "mu": [26, 277, 279, 280, 359, 394, 462, 473, 504, 505, 562], "mu_": [280, 286, 561, 562, 563], "mu_background": 560, "mu_bkg": [102, 107, 277, 289, 292, 402, 560, 562], "mu_off": 562, "mu_on": [280, 286, 562], "mu_sig": [279, 289, 292, 561, 562], "mu_x": 562, "much": [186, 366, 372, 377, 380, 382, 385, 386, 410, 417, 442, 447, 453, 460, 473, 476, 486, 519], "mul": [26, 462, 471, 526, 532, 535, 537, 540, 545], "multi": [85, 88, 184, 196, 375, 380, 394, 411, 414, 418, 425, 434, 437, 443, 454, 464, 465, 466, 471, 472, 476, 480, 496, 498, 500, 512, 557, 558, 559], "multidimension": [372, 382, 394, 432, 480, 505, 558], "multinorm": 384, "multipl": [19, 20, 26, 80, 85, 88, 89, 98, 105, 109, 111, 113, 129, 134, 159, 185, 186, 188, 194, 197, 198, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 366, 367, 372, 375, 378, 379, 380, 382, 384, 387, 388, 390, 394, 398, 407, 414, 415, 417, 425, 431, 432, 441, 447, 463, 464, 467, 468, 469, 471, 476, 498, 512, 536, 545, 557, 558, 559, 560, 565], "multipli": [19, 20, 26, 121, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 225, 226, 228, 230, 232, 233, 235, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 273, 287, 290, 295, 460, 462, 471, 526, 562], "multiprocess": [13, 90, 122, 123, 126, 129, 161, 310, 315, 316, 411, 431, 432], "multithread": 13, "multivari": 384, "multivariategaussianprior": 394, "multiwavelength": 218, "muon": [86, 472], "muoneff": [86, 472], "mur": [26, 462], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 85, 86, 88, 98, 99, 102, 103, 107, 108, 112, 121, 126, 129, 134, 135, 142, 153, 161, 165, 167, 172, 179, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 284, 285, 295, 313, 361, 366, 371, 377, 378, 381, 390, 391, 392, 393, 435, 439, 444, 464, 467, 469, 470, 471, 475, 476, 485, 486, 500, 512, 559], "mutablemap": 192, "mutablesequ": [89, 97, 238], "mutipl": 398, "mutltipl": 369, "my": [366, 388, 389, 397, 451, 452, 464, 471], "my_custom_model": 471, "my_flux_map": 390, "my_ob": 87, "my_obs_filt": 87, "my_sourc": 388, "mybind": [396, 425], "myconfig": [11, 560], "mycustomgaussianmodel": [389, 471], "mycustomprior": 473, "mycustomspectralmodel": [248, 471], "n": [19, 20, 51, 80, 85, 88, 119, 121, 183, 184, 185, 186, 188, 190, 191, 194, 196, 197, 198, 206, 208, 268, 275, 366, 369, 380, 383, 397, 399, 423, 455, 458, 462, 463, 465, 468, 470, 473, 475, 476, 477, 478, 483, 505, 512, 513, 515, 518, 519, 559, 561, 563], "n_": [99, 106, 280, 286, 496, 561, 562, 563], "n_0": [226, 533], "n_bad": 476, "n_bin": 464, "n_bkg": [277, 279, 562], "n_dof": [119, 121, 498], "n_event": [185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 379], "n_event_bunch": [100, 105], "n_events_bkg": 379, "n_fit_bin": [447, 459, 464, 470], "n_free_paramet": 275, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 493, 494], "n_job": [16, 90, 122, 123, 126, 129, 161, 315, 431, 440, 444, 445, 447, 453, 467, 484], "n_jobs_default": [90, 122, 123, 126, 129, 161], "n_model": [71, 74], "n_ob": [442, 451, 459], "n_observ": 560, "n_off": [102, 107, 279, 288, 289, 292, 561, 562], "n_off_posit": 441, "n_off_region": [173, 441], "n_on": [277, 279, 280, 286, 288, 289, 292, 402, 560, 561, 562], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 210, 211, 214, 215, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 394, 554], "n_scale": 114, "n_sig": [277, 279, 460, 562], "n_sig_matching_signific": [277, 279], "n_sigma": [70, 72, 73, 76, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 275, 277, 279, 435, 453, 463, 464, 484, 486, 498], "n_sigma_sensit": [118, 119, 120, 121], "n_sigma_ul": [70, 72, 73, 76, 118, 119, 120, 121, 122, 123, 126, 127, 129, 453, 457, 463, 464, 484, 486, 498], "n_sourc": [45, 490], "n_spatial_ax": 189, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 88, "n_time_bin": 458, "nachiketa": [423, 424], "naima": [239, 365, 383, 384, 385, 386, 389, 408, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 500, 514, 545, 546], "naimamodel": [408, 411, 413], "naimaspectralmodel": [248, 389, 417, 471, 500, 536], "nakashima": 409, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 119, 120, 121, 122, 123, 126, 127, 130, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 165, 166, 175, 176, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 293, 294, 316, 345, 346, 361, 367, 369, 372, 375, 376, 378, 379, 380, 381, 384, 385, 388, 389, 390, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 417, 426, 428, 429, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 488, 498, 500, 504, 507, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562], "name1": 465, "name2": 465, "name_err": [122, 123, 126, 127], "name_scan": [122, 123, 126, 127], "name_substr": [216, 238, 470], "name_ul": [122, 123, 126, 127], "namedtupl": 366, "nameerror": 366, "namespac": [6, 16, 82, 101, 120, 366, 385, 387, 410, 413, 423, 471, 489, 564], "namibia": 478, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 85, 88, 99, 119, 121, 165, 183, 184, 185, 186, 188, 194, 197, 198, 206, 208, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 366, 389, 394, 439, 440, 441, 444, 445, 447, 448, 453, 455, 457, 463, 464, 466, 467, 468, 469, 470, 471, 484, 485, 486, 536, 545], "nan_to_num": [97, 99, 102, 106, 107, 143, 144, 150, 155, 158, 186, 194, 198, 263], "nansum": [185, 186, 188, 197, 198], "nasa": [58, 60, 61, 63, 64, 142, 190, 386, 395, 539], "nativ": [85, 88, 191, 378, 383, 417, 468], "natur": [85, 88, 366, 372, 389, 392, 471, 534], "nauroi": [292, 559], "naurois2012": 559, "navarro": 488, "navig": [425, 427], "naxi": 468, "naxis1": 468, "naxis2": 468, "naxis3": 468, "naxis4": 468, "nbin": [16, 108, 112, 123, 145, 147, 153, 155, 187, 190, 195, 198, 327, 328, 382, 435, 439, 440, 441, 444, 445, 447, 448, 449, 451, 452, 453, 457, 458, 460, 464, 466, 467, 468, 471, 476, 477, 478, 484, 504, 507, 509, 510, 513], "nbin_per_decad": 190, "nbstripout": 374, "ncol": [139, 140, 185, 186, 188, 194, 197, 198, 359, 363, 436, 439, 443, 445, 447, 449, 460, 464, 465, 468, 469, 509, 526], "ncp": 456, "nd": [185, 186, 188, 194, 197, 198, 261, 262, 387, 468, 513], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 85, 88, 89, 98, 114, 122, 126, 139, 140, 141, 142, 143, 146, 147, 149, 152, 153, 154, 155, 156, 158, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 206, 207, 208, 209, 216, 240, 241, 266, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 290, 291, 292, 295, 306, 307, 308, 317, 322, 324, 355, 359, 360, 366, 464, 468, 486, 512, 513], "nddata": [408, 411], "nddataarrai": [409, 423, 424], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 271], "ndim": [99, 106, 108, 112, 140, 142, 145, 184, 191, 196, 441, 444, 449, 453, 464, 466, 467, 468, 475, 476, 486, 498, 513], "ndimag": [198, 380], "ndmin": 295, "ne": 378, "nearest": [26, 129, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 185, 186, 188, 190, 194, 197, 198, 307, 419, 426, 428, 468, 498, 500, 512], "nearli": [366, 417, 436], "nebula": [50, 269, 275, 411, 439, 440, 441, 445, 448, 449, 450, 457, 465, 469, 471, 473, 476, 477, 478, 484, 485, 486, 491, 513, 559], "necess": [390, 473], "necessari": [16, 82, 101, 120, 369, 376, 381, 392, 419, 436, 439, 441, 442, 445, 451, 452, 455, 458, 459, 467, 468, 470, 471, 485, 496, 497, 500], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 381, 444], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 85, 87, 88, 91, 98, 101, 102, 118, 120, 121, 143, 144, 155, 157, 158, 193, 268, 269, 295, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 396, 397, 402, 406, 407, 408, 425, 427, 432, 436, 440, 442, 443, 444, 445, 449, 451, 452, 456, 458, 459, 465, 466, 468, 469, 470, 471, 472, 475, 477, 484, 486, 496, 509, 511, 512, 560, 564], "need_upd": 417, "neg": [19, 20, 26, 85, 88, 119, 121, 122, 123, 126, 127, 129, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 265, 266, 277, 279, 367, 414, 432, 473, 498, 562, 563], "neglect": [124, 171, 435, 467, 498, 563], "neighbor": [146, 154, 156, 419, 426], "neighbour": [307, 521], "neither": [93, 171, 383, 391], "neldermead": 203, "nep": [371, 391], "neraest": 186, "nest": [15, 184, 185, 186, 239, 275, 295, 334, 431, 476, 511, 562], "nested_model": 239, "net": [26, 85, 88, 439], "neutrino": 52, "neutron": 36, "never": [363, 365, 366, 369, 372, 376, 380, 388, 477], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 84, 85, 86, 88, 89, 98, 99, 101, 102, 106, 107, 119, 120, 121, 122, 126, 137, 139, 140, 141, 142, 145, 147, 149, 152, 157, 168, 169, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 216, 238, 253, 263, 295, 319, 344, 351, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 418, 421, 447, 456, 463, 464, 468, 470, 471, 497, 498, 500, 545, 559], "new_attribut": 366, "new_axi": 137, "new_dataset_nam": [216, 238], "new_datasets_nam": [19, 20, 26, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267], "new_flux_map": 390, "new_funct": 366, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 545, "new_nam": [85, 88, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198], "new_ob": [86, 500], "new_observ": 89, "newaxi": 512, "newer": [383, 396, 407, 426], "newli": [411, 412, 413], "next": [85, 88, 99, 366, 367, 371, 382, 386, 387, 391, 394, 395, 423, 424, 435, 447, 450, 451, 453, 455, 463, 464, 467, 468, 471, 472, 473, 476], "nfcn": 465, "nfev": [98, 203, 204, 205, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485], "nfw": [25, 27, 488], "nfwprofil": 462, "ni": 366, "nice": [366, 371, 377, 383, 385, 393, 409, 417, 443, 447, 463, 560], "nicer": [366, 402, 465, 486], "nieto": [414, 417, 419, 420, 428, 430, 431, 432], "nieva": 428, "night": [381, 458], "nightli": [398, 457], "nightwise_lc": 457, "nigro": [414, 417, 419, 425, 426, 428, 431], "niter": [119, 121, 129, 443], "nmcid": 420, "nn": 477, "noah": [394, 432], "node": [19, 20, 26, 155, 158, 187, 190, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 240, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 408, 465, 466, 468, 475, 476, 520, 537], "node_typ": [187, 190, 195, 451, 452, 466, 476], "noeth": [414, 415], "nois": [278, 284, 384, 559], "noisi": 475, "non": [16, 82, 85, 88, 97, 99, 101, 102, 106, 107, 111, 113, 119, 120, 121, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 167, 171, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 263, 295, 356, 357, 359, 361, 372, 377, 380, 384, 386, 387, 393, 407, 411, 412, 413, 417, 425, 428, 429, 431, 432, 436, 476, 480, 496, 500, 511, 512, 536, 559], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 109, 110, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 277, 278, 279, 292, 293, 295, 298, 303, 307, 315, 316, 317, 319, 322, 323, 324, 325, 333, 335, 341, 349, 353, 354, 355, 359, 360, 361, 362, 363, 366, 378, 380, 383, 390, 393, 394, 419, 430, 431, 436, 437, 439, 440, 442, 443, 447, 448, 449, 451, 452, 453, 455, 458, 459, 460, 462, 463, 464, 467, 468, 470, 471, 473, 476, 484, 488, 496, 512, 517, 518, 519, 560], "nonetyp": [82, 101, 120], "nonposit": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "nonposx": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 417], "nonstopmod": 367, "nonzero": 39, "nooverlaperror": 430, "noqa": [19, 20, 122, 142, 178, 189, 190, 196, 218, 270, 363], "nor": [93, 171, 376, 387, 391, 395], "norm": [19, 20, 26, 118, 119, 121, 122, 123, 126, 129, 135, 136, 162, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 267, 359, 377, 388, 390, 394, 411, 412, 414, 417, 432, 434, 439, 444, 445, 447, 448, 450, 451, 452, 453, 455, 458, 459, 460, 462, 463, 464, 465, 476, 484, 485, 486, 488, 498, 507, 514, 519, 525, 526, 533, 545, 546, 554, 562], "norm_0": [520, 537], "norm_1": [520, 537], "norm_2": [520, 537], "norm_3": [520, 537], "norm_4": 537, "norm_5": 537, "norm_err": [118, 119, 121, 123, 129, 135, 390, 453, 464, 498], "norm_errn": [119, 121, 463, 486, 498], "norm_errp": [119, 121, 463, 486, 498], "norm_max": [122, 123, 126], "norm_min": [122, 123, 126], "norm_n_valu": [122, 123, 126], "norm_only_chang": 429, "norm_paramet": [206, 207, 208, 209], "norm_prior": 394, "norm_scan": [119, 390, 439, 440, 498], "norm_sensit": [119, 121], "norm_ul": [119, 121, 390, 453, 463, 464, 486, 498], "norm_valu": [122, 123, 126], "norma": [33, 38], "normal": [42, 98, 99, 102, 106, 107, 122, 123, 124, 126, 133, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 162, 185, 186, 188, 194, 195, 197, 198, 224, 240, 241, 244, 263, 265, 268, 295, 356, 357, 366, 367, 371, 372, 376, 377, 380, 384, 390, 406, 410, 419, 445, 451, 457, 458, 460, 467, 468, 469, 470, 471, 476, 485, 486, 512, 517, 518, 519, 522, 523, 524, 545, 559, 561, 562], "normalis": [66, 78, 126, 139, 140, 141, 142, 145, 147, 149, 152, 153, 157, 162, 182, 185, 186, 188, 194, 197, 198, 240, 241, 253, 364, 440, 444, 445, 459, 469, 470, 471, 476, 484], "normed_templ": 471, "normspectralmodel": [216, 238, 389, 414, 430, 432, 471, 507], "north": [217, 225, 228, 517], "notat": [414, 502, 504, 510, 563], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 80, 81, 82, 84, 85, 88, 91, 98, 99, 100, 101, 105, 114, 120, 121, 126, 129, 142, 147, 155, 157, 167, 178, 196, 200, 203, 206, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 284, 285, 295, 316, 341, 357, 363, 365, 368, 369, 371, 374, 379, 380, 383, 386, 390, 391, 392, 394, 395, 396, 399, 405, 407, 427, 429, 431, 435, 436, 439, 440, 441, 443, 444, 447, 450, 452, 456, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 496, 498, 500, 512, 513, 522, 523, 534, 562, 563, 564], "notebook": [85, 88, 331, 369, 370, 375, 376, 380, 381, 382, 383, 384, 386, 396, 398, 399, 400, 403, 406, 407, 408, 409, 411, 412, 413, 415, 417, 419, 423, 424, 425, 426, 427, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 499, 500, 501, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560], "noth": [319, 383, 473], "notic": [372, 465, 480], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [373, 378, 383, 384, 386, 390, 404, 428], "novemb": [375, 404, 414, 415, 416, 417], "now": [16, 80, 82, 86, 96, 101, 119, 120, 121, 195, 239, 366, 369, 371, 372, 373, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 459, 460, 464, 465, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 497, 498, 509, 547, 551, 552, 553, 560, 562, 563, 564], "np": [81, 85, 88, 108, 112, 114, 121, 144, 185, 186, 188, 194, 197, 198, 268, 366, 367, 377, 378, 381, 389, 390, 394, 428, 435, 439, 442, 443, 445, 447, 449, 451, 453, 455, 456, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 477, 492, 493, 494, 498, 500, 512, 513, 517, 518, 520, 545, 553], "npanel": 353, "npix": [184, 193, 196, 197, 198, 439, 449, 466, 476, 509, 513, 516, 520], "npix_max": 184, "npoint": [278, 465], "npred": [99, 102, 106, 107, 118, 119, 121, 122, 123, 126, 127, 129, 263, 281, 377, 378, 379, 388, 390, 405, 407, 414, 417, 423, 425, 451, 453, 463, 464, 473, 476, 496, 498, 562], "npred_background": [99, 102, 106, 107, 119, 121, 414, 441, 442, 453, 464, 498, 562], "npred_background_min": 138, "npred_excess": [118, 119, 121, 123, 129, 136, 445, 453, 460, 498], "npred_excess_err": [119, 121], "npred_excess_errn": [119, 121], "npred_excess_errp": [119, 121], "npred_excess_ref": [119, 121], "npred_excess_ul": [119, 121], "npred_min": 138, "npred_off": [102, 107, 562], "npred_sig": [99, 102, 106, 107, 378], "npred_sign": [99, 102, 106, 107, 362, 417, 431, 464, 562], "npred_signal_min": 138, "npred_sourc": 464, "nrow": [436, 439, 465, 526], "nside": [184, 185, 186, 428, 476, 511], "nside2resol": 186, "nside_til": [184, 186], "nsou": 443, "nstep": 381, "nu": [19, 26], "nu_e": [26, 462], "nu_mu": [26, 462], "nu_tau": [26, 462], "nuisanc": [439, 465, 559, 563], "null": [119, 121, 122, 123, 126, 127, 275, 277, 279, 440, 444, 445, 447, 450, 471, 484, 498, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562], "null_valu": [127, 275, 453], "nullabl": [85, 88], "num": 81, "numba": 383, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 66, 71, 74, 80, 81, 83, 84, 85, 88, 89, 90, 91, 97, 99, 100, 102, 105, 106, 107, 109, 114, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 161, 162, 165, 168, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 267, 271, 275, 277, 278, 279, 291, 295, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 327, 328, 353, 359, 370, 371, 372, 375, 377, 378, 379, 380, 381, 385, 387, 390, 392, 393, 395, 402, 407, 417, 419, 420, 421, 426, 427, 428, 431, 432, 435, 436, 439, 440, 441, 442, 444, 445, 447, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 467, 468, 469, 471, 472, 475, 476, 477, 478, 484, 485, 486, 490, 496, 498, 500, 507, 509, 512, 513, 559, 560, 561, 562, 563], "number_of_column": [85, 88], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 85, 88, 121, 190, 206, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 267, 295, 365, 366, 379, 384, 399, 417, 435, 442, 444, 447, 449, 455, 459, 468, 475], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 89, 98, 108, 112, 114, 121, 122, 126, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 200, 201, 206, 207, 209, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 264, 265, 277, 279, 295, 319, 324, 360, 365, 366, 367, 369, 373, 377, 379, 383, 384, 385, 392, 394, 402, 403, 410, 411, 414, 422, 423, 424, 426, 428, 429, 430, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 484, 485, 486, 492, 493, 494, 498, 500, 512, 513, 517, 518, 520, 545, 553], "numpoint": [203, 465], "numpy121": 369, "nupeak_ob": 486, "nutshel": 564, "n\u00f6the": [417, 419, 420], "o": [66, 80, 85, 88, 98, 192, 366, 375, 380, 383, 387, 390, 397, 398, 400, 409, 417, 420, 423, 424, 425, 431, 435, 436, 439, 443, 449, 456, 457, 458, 459, 468, 472, 473, 475, 500, 559, 560], "o2": 500, "ob": [40, 80, 81, 86, 87, 88, 89, 93, 155, 165, 293, 294, 378, 379, 382, 383, 388, 402, 420, 421, 430, 435, 436, 439, 442, 443, 449, 451, 455, 458, 459, 460, 467, 472, 475, 476, 477, 478, 482, 485, 497, 500, 505, 507, 509, 510], "obei": 512, "obj": [16, 82, 101, 120, 441], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 97, 98, 99, 100, 101, 102, 106, 107, 119, 120, 121, 124, 125, 126, 130, 131, 132, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 277, 279, 295, 299, 303, 304, 307, 315, 317, 319, 325, 328, 340, 341, 342, 343, 348, 353, 359, 361, 362, 363, 372, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 392, 393, 398, 402, 408, 409, 411, 412, 413, 414, 417, 419, 424, 425, 426, 428, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 448, 450, 453, 455, 456, 457, 458, 459, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 478, 484, 485, 486, 490, 495, 496, 497, 498, 506, 509, 511, 512, 513, 557, 559, 560, 564], "obs_": 439, "obs_clust": [89, 472], "obs_col": 449, "obs_con": [16, 440, 444, 445, 447, 484], "obs_copi": 86, "obs_fil": [16, 440, 444, 445, 447, 484], "obs_filenam": 477, "obs_filt": [86, 87], "obs_id": [16, 80, 85, 86, 87, 88, 93, 138, 293, 294, 376, 378, 388, 393, 402, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 451, 452, 457, 458, 459, 465, 467, 472, 475, 477, 478, 482, 484, 485, 509], "obs_id_uniqu": 85, "obs_index": 80, "obs_info": [86, 101, 393], "obs_list": [425, 427], "obs_list_vela": 460, "obs_mod": 92, "obs_muoneff": 472, "obs_po": [41, 298], "obs_tabl": [80, 88, 93, 293, 294, 419, 449, 451, 458, 467, 472, 475, 477, 478, 482, 485, 509], "obs_table_filenam": 80, "obs_tim": [16, 440, 444, 445, 447, 484], "obs_time_src": 467, "obs_zenith": 472, "obscor": 432, "observ": [6, 15, 16, 41, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 93, 98, 99, 100, 101, 102, 105, 106, 107, 109, 155, 160, 161, 162, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 215, 218, 223, 227, 229, 230, 231, 246, 252, 264, 267, 280, 286, 292, 294, 303, 324, 370, 372, 378, 379, 380, 381, 382, 386, 388, 390, 393, 398, 407, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 441, 442, 444, 445, 447, 448, 455, 456, 459, 460, 465, 473, 474, 475, 477, 478, 480, 482, 488, 496, 497, 500, 503, 505, 507, 509, 510, 536, 559, 560, 561, 562], "observation_clust": [434, 472, 474], "observation_dead_time_fract": [81, 86], "observation_list": 89, "observation_live_time_dur": [81, 86], "observation_time_dur": [81, 86], "observation_time_start": 81, "observation_time_stop": 81, "observationcheck": 426, "observationcta": 376, "observationeventsampl": 432, "observationfilt": [86, 376, 381, 406, 427], "observationlist": [376, 427], "observationmetadata": 393, "observations_list": 89, "observationsconfig": 16, "observationseventsampl": 432, "observationssummari": 411, "observationstat": [406, 411], "observationt": [80, 379, 380, 428, 472, 477, 485], "observationtablecheck": 426, "observationtablesummari": 423, "observatori": [57, 59, 62, 80, 81, 83, 86, 91, 379, 393, 395, 398, 418, 475, 477, 478, 495, 500], "observatory_earth_loc": [81, 86], "observatory_loc": [393, 419, 435, 442, 451, 452, 455, 459], "obsinfometadata": 101, "obstim": [83, 91, 178, 564], "obtain": [83, 99, 102, 105, 130, 283, 376, 381, 383, 384, 390, 427, 439, 440, 441, 445, 451, 452, 456, 458, 465, 468, 469, 473, 484, 486, 496, 500, 504, 505, 559, 561, 562], "obviou": [378, 385, 386, 387, 393], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 488], "occur": [185, 186, 188, 197, 198, 325, 366, 386, 387, 391, 476], "occurr": [89, 97, 189, 207, 209, 216, 238], "oct": [374, 376, 377, 381, 383, 386, 392], "octob": 375, "odd": [196, 198], "odd_npix": [196, 198], "odot": [28, 35, 39, 40, 52], "off": [99, 102, 104, 106, 107, 118, 160, 166, 167, 170, 173, 182, 279, 292, 363, 364, 369, 372, 378, 380, 381, 382, 411, 417, 419, 421, 431, 435, 436, 440, 441, 445, 449, 457, 458, 460, 464, 465, 467, 473, 496, 509, 510, 559, 561, 562, 563], "off_2": [102, 107], "off_ev": 460, "off_patch": 460, "off_phas": [166, 460], "off_phase_rang": 460, "offdatabackgroundmak": 422, "offer": [119, 369, 377, 392, 393, 398, 399, 426, 441, 465, 467, 471, 500], "offici": [392, 501, 560], "offlin": [85, 88], "offset": [81, 93, 109, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 161, 165, 171, 172, 177, 180, 185, 186, 188, 190, 194, 197, 198, 366, 372, 380, 402, 411, 421, 423, 425, 430, 431, 432, 435, 441, 442, 444, 447, 448, 449, 455, 460, 466, 467, 472, 475, 478, 485, 497, 505, 507, 510], "offset2": 81, "offset_axi": [145, 147, 152, 157], "offset_band": 81, "offset_from_median": 81, "offset_index": 152, "offset_max": [16, 81, 161, 171, 177, 180, 440, 444, 445, 447, 449, 455, 460, 467, 484, 485, 507, 510], "offset_min": 81, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 130, 269, 356, 357, 366, 371, 380, 381, 382, 384, 424, 435, 436, 440, 444, 445, 448, 449, 455, 464, 465, 467, 469, 484, 485, 496, 559], "ogip": [92, 103, 104, 107, 142, 187, 189, 190, 193, 194, 195, 378, 381, 424, 439, 448, 496, 504, 513], "ogip_column": 194, "ogipdatasetread": 107, "ogipdatasetwrit": [107, 430, 432], "ok": [366, 380, 465], "old": [189, 351, 366, 371, 374, 378, 382, 383, 408, 409, 424, 425, 426, 456], "old_attribut": 366, "older": [373, 383, 399, 424, 463], "oldest": 386, "olga": [422, 423], "olivera": [414, 417, 419, 420, 428, 430, 431, 432], "omega": [19, 20, 23, 252, 268, 517, 553], "omit": [129, 367, 447, 475, 560], "omp": 386, "on_circl": 509, "on_ellipse_annulu": 509, "on_ev": 460, "on_patch": 460, "on_phas": [166, 460], "on_phase_rang": 460, "on_posit": 182, "on_radii": 435, "on_radiu": [449, 460], "on_rectangl": 509, "on_region": [16, 99, 102, 168, 435, 436, 439, 440, 441, 442, 444, 445, 447, 449, 451, 452, 457, 458, 460, 464, 484, 509], "on_region_radiu": [435, 439, 442, 451, 452, 458], "onc": [85, 88, 99, 196, 366, 369, 371, 376, 377, 380, 381, 382, 386, 387, 388, 390, 391, 395, 396, 397, 441, 458, 460, 467, 470, 477, 480, 497, 500, 560], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 69, 82, 85, 87, 88, 89, 90, 92, 96, 99, 101, 102, 105, 106, 107, 109, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 165, 167, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 271, 275, 277, 278, 279, 303, 308, 324, 337, 353, 359, 360, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 396, 397, 398, 425, 428, 429, 431, 435, 436, 439, 440, 441, 444, 447, 451, 456, 457, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 484, 485, 486, 495, 496, 497, 498, 500, 505, 507, 509, 512, 513, 519, 557, 558, 560, 561, 562, 563, 564], "ones": [85, 88, 114, 118, 122, 126, 129, 142, 189, 370, 374, 378, 380, 383, 386, 394, 399, 402, 456, 459, 466, 468, 488, 507, 559, 560], "ones_lik": 460, "ongo": [369, 372, 373, 396], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 71, 72, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 97, 98, 99, 100, 101, 102, 105, 106, 107, 118, 120, 121, 122, 126, 129, 136, 143, 144, 148, 150, 155, 158, 161, 167, 172, 183, 184, 185, 186, 188, 190, 193, 194, 195, 196, 197, 198, 206, 207, 209, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 263, 264, 265, 277, 279, 295, 315, 341, 363, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 399, 407, 409, 413, 417, 419, 420, 425, 429, 431, 432, 436, 437, 439, 440, 441, 444, 445, 447, 448, 450, 451, 452, 453, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 485, 488, 496, 498, 500, 504, 507, 510, 513, 555, 559, 560, 561, 562], "onlin": [85, 88, 367, 371, 374, 386, 402], "onlinelibrari": 136, "onoff": [420, 496], "onserv": 90, "ontim": [178, 376, 451, 464], "onto": [185, 186, 188, 194, 196, 197, 198, 353, 372, 485, 496, 500, 512, 558], "oo": 392, "op": 382, "opac": 218, "open": [65, 85, 88, 367, 369, 371, 377, 380, 383, 385, 386, 390, 391, 392, 395, 397, 398, 400, 402, 403, 424, 440, 448, 468, 475, 477, 478, 484, 495, 559, 560], "openastronomi": 425, "oper": [85, 88, 184, 196, 211, 366, 372, 377, 380, 412, 414, 417, 426, 427, 431, 464, 470, 471, 512, 513, 526, 528, 532, 535, 537, 540, 545], "opinion": [371, 560], "oppos": [456, 536, 560], "opposit": [185, 186], "opt": [86, 87, 463, 526, 536], "opt_method": 465, "optic": [218, 380, 526], "optim": [19, 20, 26, 98, 127, 129, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 359, 365, 366, 375, 378, 379, 388, 390, 436, 437, 439, 440, 441, 442, 443, 447, 448, 449, 456, 460, 465, 473, 476, 484, 485], "optimis": [19, 20, 203, 204, 205, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 380, 382, 384, 426, 498, 557], "optimize_opt": [203, 447, 455, 465, 485], "optimize_result": [203, 204, 431], "optimizeresult": [98, 203, 204, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485], "optin": 392, "optinon": [106, 107], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 66, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 283, 284, 285, 291, 292, 293, 295, 306, 316, 319, 322, 323, 324, 325, 327, 328, 335, 337, 348, 349, 353, 354, 355, 360, 361, 362, 363, 366, 369, 371, 372, 374, 375, 377, 378, 380, 382, 384, 386, 389, 393, 396, 397, 398, 399, 400, 406, 407, 408, 411, 413, 414, 417, 419, 423, 425, 426, 427, 428, 430, 431, 432, 447, 455, 457, 459, 463, 464, 467, 468, 469, 471, 472, 475, 476, 484, 485, 496, 498, 500, 512, 513, 555, 560], "option_context": [85, 88], "optionali": 520, "optout": 392, "optpars": 371, "oral": 392, "orang": [367, 439, 447, 453, 457, 460, 462, 473, 509], "orchestr": [372, 376, 378, 382, 440, 484, 485], "orcid": 392, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 85, 88, 91, 97, 98, 99, 102, 121, 139, 140, 143, 144, 150, 155, 158, 161, 165, 172, 175, 176, 181, 183, 184, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 263, 275, 295, 363, 367, 372, 377, 378, 380, 381, 382, 383, 390, 391, 392, 394, 407, 408, 409, 410, 411, 412, 413, 414, 417, 439, 440, 441, 443, 447, 448, 451, 460, 463, 465, 466, 467, 468, 471, 477, 484, 485, 486, 511, 512, 513, 560, 563], "ordereddict": [372, 383, 410], "ordinari": 486, "org": [11, 34, 62, 63, 64, 81, 85, 86, 88, 171, 203, 244, 245, 258, 259, 284, 295, 369, 374, 383, 386, 391, 392, 395, 397, 398, 400, 404, 423, 425, 435, 442, 444, 447, 448, 449, 455, 459, 462, 463, 465, 467, 475, 543, 544, 560], "organ": [370, 386, 391, 392, 417, 477, 478, 497, 512], "organis": [373, 382, 385, 392, 425], "orient": [140, 148, 149, 366, 377], "origin": [41, 85, 88, 99, 101, 106, 120, 186, 198, 261, 263, 265, 376, 380, 392, 393, 423, 440, 456, 458, 468, 471, 476, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 563, 564], "orthogon": 328, "oscar": [425, 426], "osx": 413, "ot": 395, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 66, 68, 81, 82, 84, 85, 88, 99, 101, 102, 106, 107, 119, 120, 122, 126, 127, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 167, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 203, 207, 209, 263, 276, 295, 308, 336, 355, 360, 365, 369, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 397, 425, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 496, 497, 498, 500, 505, 507, 509, 513, 528, 557, 558, 560, 564], "other_id": 436, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 85, 88, 99, 101, 102, 106, 107, 120, 153, 192, 196, 198, 200, 206, 207, 208, 209, 216, 238, 295, 359, 379, 389, 392, 470, 471, 476, 527], "oup": [130, 291], "our": [366, 369, 375, 380, 382, 383, 385, 388, 389, 390, 392, 407, 408, 424, 435, 436, 439, 440, 441, 444, 445, 447, 448, 449, 452, 458, 459, 460, 468, 469, 473, 477, 484, 485, 560], "ourself": 486, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 89, 91, 97, 98, 121, 185, 186, 188, 194, 197, 198, 238, 250, 251, 365, 366, 367, 369, 371, 374, 376, 378, 380, 382, 384, 385, 386, 391, 395, 402, 403, 405, 411, 425, 437, 441, 444, 445, 468, 469, 475, 476, 484, 486, 488, 489, 509, 522, 523, 557, 560, 564], "out_fold": 382, "outcom": [371, 380], "outdat": [383, 386], "outdir": [16, 80, 90, 440, 444, 445, 447, 484], "outer": [43, 44, 52, 53, 123, 160, 250, 523], "outer_height": [509, 513], "outer_width": [509, 513], "outfil": 366, "outflow": 195, "outlin": [99, 102, 106, 107, 212, 213, 217, 225, 228, 242, 250, 251, 265, 369, 371, 374, 375, 376, 377, 380, 386, 389], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 81, 82, 84, 85, 86, 88, 90, 101, 120, 134, 135, 142, 147, 185, 186, 188, 194, 197, 198, 204, 216, 230, 238, 278, 324, 367, 374, 376, 379, 382, 383, 387, 390, 393, 406, 421, 427, 430, 431, 447, 451, 452, 455, 459, 467, 468, 484, 485, 498, 500, 560, 561], "output_map": [185, 186, 188, 194, 197, 198], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [85, 88, 99, 106, 111, 113, 142, 162, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 206, 208, 218, 266, 354, 366, 380, 381, 382, 417, 445, 465, 467, 468, 469, 500, 507, 519, 545, 559], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 81, 85, 86, 88, 89, 92, 99, 102, 106, 107, 122, 129, 130, 142, 143, 153, 155, 158, 165, 172, 175, 176, 178, 179, 185, 186, 188, 189, 190, 194, 196, 197, 198, 216, 238, 268, 277, 279, 283, 306, 307, 320, 357, 366, 367, 371, 374, 375, 376, 379, 380, 381, 386, 389, 393, 397, 399, 417, 436, 439, 447, 450, 451, 459, 463, 464, 467, 468, 471, 473, 485, 486, 498, 504, 561, 562], "overal": [374, 380, 439], "overcom": 469, "overestim": [498, 562], "overflow": [195, 441, 459, 548], "overkil": 459, "overlai": 440, "overlaid": [99, 102, 106, 107, 439, 440], "overlap": [84, 88, 111, 113, 126, 173, 190, 195, 363, 381, 439], "overlap_ok": 84, "overlin": [99, 106, 496], "overload": 417, "overplot": [463, 495], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 334, 377, 439, 441, 449, 453], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 85, 88, 101, 120, 193, 363], "oversampl": [100, 105, 153, 155, 158, 165, 172, 178, 184, 185, 186, 188, 193, 194, 197, 198, 213, 217, 225, 228, 229, 230, 240, 250, 251, 253, 255, 261, 265, 267, 271, 408, 467], "oversample_energy_factor": [100, 105, 452], "oversampling_factor": [186, 196, 212, 213, 217, 225, 228, 229, 230, 240, 242, 250, 251, 253, 255, 261, 265, 267], "overview": [6, 369, 396, 411, 412, 414, 417, 434, 460, 468, 471, 480, 486, 487, 500, 501, 514, 561], "overwrit": [11, 15, 16, 19, 20, 26, 80, 81, 86, 90, 97, 98, 99, 102, 104, 106, 107, 119, 121, 143, 144, 150, 155, 158, 183, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 204, 206, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 261, 262, 263, 264, 265, 315, 390, 426, 428, 439, 440, 447, 448, 451, 452, 453, 466, 468, 469, 470, 471, 475, 476, 482, 484, 485, 496, 500, 513, 524, 560], "overwrite_templ": [204, 216, 238], "overwritten": [155, 158, 307], "owen": [405, 418], "own": [85, 88, 96, 119, 121, 192, 194, 369, 372, 382, 388, 392, 417, 435, 451, 471, 476, 500, 512, 513], "p": [38, 51, 54, 85, 88, 106, 107, 125, 282, 292, 366, 417, 440, 450, 462, 465, 484, 500, 505, 506, 562], "p0_birth": 43, "p90": 48, "p_": [502, 504, 505, 506], "p_0": [51, 185, 188, 194, 197, 198, 492], "p_dot": [51, 54], "p_i": [185, 188, 194, 197, 198], "p_lat": [185, 188, 194, 197, 198], "p_lon": [185, 188, 194, 197, 198], "p_mean": 42, "p_n": [185, 188, 194, 197, 198], "p_stdv": 42, "p_valu": [277, 279, 465, 560, 562], "pace": [374, 375], "packag": [6, 11, 134, 295, 331, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 380, 383, 384, 386, 391, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 410, 411, 413, 414, 417, 420, 421, 422, 423, 424, 425, 426, 428, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 496, 499, 500, 501, 508, 513, 524, 532, 534, 535, 548, 560, 564], "pacman": 422, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [85, 88, 99, 102, 106, 107, 129, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 165, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 354, 414, 417], "pad_width": [99, 106, 129, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198], "pad_with": [185, 186, 188, 194, 197, 198], "page": [6, 85, 88, 203, 280, 286, 292, 367, 369, 371, 378, 380, 383, 386, 392, 395, 396, 398, 399, 403, 411, 412, 417, 420, 421, 424, 425, 426, 427, 465, 468, 478, 480, 498, 500, 511, 513, 561, 564], "pain": [366, 369, 373], "pair": [16, 82, 99, 101, 102, 106, 107, 119, 120, 121, 130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 192, 193, 194, 196, 197, 198, 382], "panda": [85, 88, 365, 383, 426, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "panel": [86, 98, 99, 102, 106, 107, 353, 420, 451, 465], "panel_fov": 353, "panni": 417, "papadopoulo": [417, 419], "paper": [57, 59, 62, 71, 72, 122, 171, 386, 392, 426, 456, 458, 463, 467, 477, 488], "papermil": 382, "par": [377, 389, 394, 465, 473, 475], "par_000_amplitud": 465, "par_001_alpha": 465, "par_002_beta": 465, "par_00x_": 377, "par_1": [203, 465], "par_2": [203, 465], "par_alpha": 465, "par_beta": 465, "par_box": 88, "par_nam": [216, 238], "par_to_v": 475, "par_typ": [216, 238], "parabol": [276, 308, 465], "parabola": [232, 233, 434, 448, 465, 514, 546], "paragraph": 371, "parallel": [6, 90, 122, 123, 126, 129, 161, 310, 311, 312, 313, 314, 315, 316, 369, 383, 396, 419, 431, 432, 464], "parallel_backend": [90, 122, 123, 126, 129, 161, 315, 453], "parallelbackendenum": 310, "parallelmixin": [90, 122, 129, 161], "param": [16, 82, 101, 120, 218, 266, 359, 382, 412], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 297, 299, 301, 302, 304, 306, 307, 308, 309, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 375, 378, 379, 381, 382, 384, 385, 388, 390, 392, 403, 406, 407, 408, 409, 410, 411, 413, 414, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 472, 473, 475, 476, 485, 486, 488, 496, 498, 499, 500, 507, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563], "parameter": 471, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 203, "parameterestim": [115, 413, 432], "parameteris": [502, 504], "parameters_list": [207, 209], "parameters_nam": [216, 238], "parameters_stat_sum": 394, "parameters_unique_nam": [216, 238, 465], "parametr": [16, 27, 82, 98, 101, 120, 145, 146, 151, 154, 156, 232, 233, 250, 378, 382, 389, 407, 414, 417, 441, 443, 471, 475, 522, 523, 534], "parametricpsf": [146, 154, 417, 419], "parametris": [154, 389, 411, 504, 506, 517, 518, 519, 520, 527, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555], "parent": [16, 82, 101, 114, 118, 120, 122, 126, 129, 196, 366, 376, 393, 458, 498, 536], "parenthes": [377, 383, 429, 431], "parfiv": [383, 410], "parnam": 473, "pars": [16, 82, 83, 101, 120, 184, 193, 367, 380, 435, 442, 444, 447, 449, 455, 459, 469, 475, 560], "parse_arg": 560, "parse_fil": [16, 82, 101, 120], "parse_obj": [16, 82, 101, 120], "parse_raw": [16, 82, 101, 120], "parseabl": 295, "parser": 560, "part": [98, 366, 369, 372, 375, 377, 379, 380, 381, 382, 384, 385, 386, 391, 392, 407, 411, 412, 413, 421, 426, 431, 432, 435, 436, 439, 447, 455, 463, 464, 468, 469, 485, 486, 500, 505, 509], "parti": 371, "partial": [88, 99, 102, 143, 144, 150, 155, 158, 161, 184, 196, 198, 263, 380, 384, 412, 426, 511], "partial_overlap": 88, "particip": [371, 375, 386], "particl": [19, 26, 239, 268, 413, 488, 536], "particle_distribut": [239, 536], "particular": [85, 88, 366, 372, 379, 381, 388, 390, 391, 393, 414, 417, 428, 429, 436, 439, 440, 441, 442, 444, 448, 451, 456, 458, 459, 465, 467, 470, 475, 477, 478, 484, 485, 497, 500, 507, 509, 513, 562], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [369, 375, 376, 380, 386, 387], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 99, 101, 102, 105, 106, 107, 120, 121, 124, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 170, 178, 183, 184, 185, 186, 188, 190, 192, 193, 194, 196, 197, 198, 201, 202, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 276, 278, 295, 307, 315, 316, 317, 322, 323, 324, 325, 353, 354, 359, 361, 362, 366, 369, 376, 378, 379, 380, 381, 393, 413, 417, 419, 431, 432, 436, 437, 439, 440, 447, 448, 452, 456, 457, 458, 463, 464, 465, 466, 467, 468, 469, 471, 472, 475, 484, 485, 486, 500, 511, 512, 513, 517, 518, 560, 564], "pass4": 477, "passkwarg": 441, "past": [366, 371, 374, 382, 383, 386, 387, 389, 392, 394, 402, 423, 425, 426, 468, 560], "patch": [363, 366, 373, 392, 420, 429, 439, 441, 449, 453, 460], "path": [11, 15, 16, 65, 80, 81, 82, 84, 85, 86, 88, 90, 97, 101, 103, 104, 107, 120, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 185, 186, 188, 193, 194, 197, 198, 204, 216, 230, 238, 264, 303, 331, 332, 333, 335, 366, 369, 401, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 498, 554, 555, 560], "path_effect": [193, 216, 238], "path_to_notebook": 366, "path_to_script": 366, "patheffect": [193, 216, 238], "pathlib": [80, 81, 84, 85, 88, 142, 194, 204, 216, 238, 332, 439, 440, 447, 448, 451, 452, 475, 484, 485], "pathpatch": 453, "pattern": [366, 372, 380], "paula": 432, "paulakx": 432, "paz": [418, 421, 422], "pbar": 500, "pc": [46, 47, 50, 52, 493, 494], "pcolormesh": [81, 121, 139, 140, 142, 145, 146, 147, 152, 154, 156, 157, 424, 430, 465, 466], "pd": [85, 88], "pdf": [142, 146, 171, 244, 245, 258, 259, 317, 359, 367, 448, 451, 462, 467, 490, 492, 493, 494, 496, 497, 502, 503, 504, 506, 509, 513, 543, 544, 562, 565], "pdf_in_safe_rang": 142, "pdf_matrix": 142, "pdf_threshold": [142, 143, 147], "pdflatex": 367, "peak": [67, 124, 134, 135, 142, 171, 222, 227, 229, 233, 419, 425, 432, 443, 456, 463, 467, 523], "peak_bright": 67, "peak_brightness_error": 67, "peak_latitud": 67, "peak_latitude_error": 67, "pedant": 366, "peek": [81, 86, 99, 102, 106, 107, 124, 125, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 366, 378, 402, 414, 420, 424, 428, 436, 441, 447, 451, 452, 460, 464, 466, 475, 477, 478, 497, 500, 502, 503, 504, 506], "pend": 295, "peopl": [371, 373, 386, 392, 395, 396, 462, 488, 500, 560], "pep": 371, "pep8": 369, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 96, 98, 99, 102, 106, 107, 109, 118, 119, 121, 122, 123, 126, 127, 134, 136, 137, 138, 155, 158, 190, 223, 230, 231, 271, 280, 286, 292, 366, 372, 378, 379, 382, 390, 392, 393, 405, 413, 417, 419, 432, 435, 442, 451, 455, 457, 459, 462, 467, 468, 472, 473, 477, 478, 496, 500, 503, 559, 561], "per_decad": [190, 439, 441, 451, 452, 460, 464, 476, 504, 510], "percent": 128, "percentag": [142, 171, 467], "percentil": 81, "perfect": 142, "perfectli": [518, 560], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 85, 88, 91, 97, 101, 105, 120, 162, 170, 184, 196, 198, 213, 216, 217, 225, 228, 238, 240, 250, 251, 255, 261, 265, 277, 279, 333, 359, 366, 367, 372, 375, 376, 377, 381, 382, 390, 393, 396, 398, 407, 414, 417, 419, 422, 426, 429, 431, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 452, 455, 457, 458, 459, 464, 465, 467, 468, 469, 470, 472, 477, 480, 484, 496, 500, 508, 509, 512, 518, 536, 558, 559, 560, 561], "perhap": 513, "period": [42, 51, 54, 190, 264, 373, 392, 425, 472, 492], "period_dot": 51, "periodogram": [278, 381, 426], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392], "perseu": [33, 38], "person": [366, 369, 371, 373, 374, 375, 379, 384, 387], "perspect": [85, 88], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 425, "pf": 26, "pformat": [85, 88], "pformat_al": [85, 88], "pg": 486, "ph": 351, "pha": [103, 104, 107, 194, 378, 423, 426, 439, 448], "pha_": 464, "pha_meta": 103, "pha_ob": [103, 138, 448, 465], "pha_obs23523": [106, 107, 127, 275, 473, 498], "pha_obs23592": 498, "phacountsspectrum": 409, "phacountsspectrumlist": 408, "phase": [50, 52, 53, 87, 163, 166, 264, 371, 376, 377, 380, 381, 383, 385, 390, 402, 407, 426, 428, 431, 434, 471, 489, 500, 514, 556], "phase_axi": 390, "phase_bkg_mak": 460, "phase_column_nam": [166, 460], "phase_curve_model": 554, "phase_filt": 87, "phase_max": 460, "phase_min": 460, "phase_model": 554, "phasebackgroundestim": 411, "phasebackgroundmak": [163, 411, 431, 460], "phasecurv": [264, 425, 554], "phasecurve_lsi_dc": 554, "phasecurvemodel": 389, "phasecurvetablemodel": [377, 379], "phasecurvetempl": 377, "phasogram": [264, 554], "phi": [19, 20, 26, 191, 210, 211, 214, 217, 218, 220, 221, 222, 225, 228, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 299, 389, 455, 465, 470, 471, 476, 486, 505, 517, 518, 519, 521, 522, 523, 527, 529, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544], "phi_0": [210, 212, 213, 217, 220, 221, 222, 225, 228, 232, 233, 240, 242, 244, 245, 250, 251, 254, 255, 257, 258, 259, 261, 265, 389, 465, 527, 530, 531, 534, 538, 541, 542, 543, 544], "phi_ref": [264, 554], "philipp": [425, 426], "phone": 386, "photon": [44, 218, 239, 351, 381, 442, 451, 455, 469, 471, 486, 505, 536, 559], "photutil": [134, 366, 380, 426], "php": 62, "physic": [122, 123, 126, 129, 315, 316, 365, 390, 394, 408, 440, 448, 468, 471, 473, 475, 484, 498, 500, 536, 559, 562, 563], "pi": [19, 20, 30, 31, 32, 37, 54, 226, 268, 389, 471, 494, 517, 518, 519, 522, 523, 533, 553], "pick": [366, 373, 380, 391, 407, 486], "pictur": 367, "pie": 500, "piec": [366, 372, 380, 385, 394], "piecewis": [240, 241, 434, 471, 514, 525, 546], "piecewisebrokenpowerlawnormspectralmodel": 389, "piecewisebrokenpowerlawnormspectramodel": 389, "piecewisenormsectralmodel": 414, "piecewisenormspatialmodel": [247, 431, 471, 520], "piecewisenormspectralmodel": [248, 394, 414, 417, 430, 432, 471, 507, 537], "pig": [13, 366, 368, 369, 406, 407, 409, 410, 411, 413, 414, 425, 427, 428, 432], "pii": 136, "pillar": 382, "pin": 426, "pink": [106, 107], "pint": [460, 500], "pintor": [379, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 428, 430, 431, 432], "pip": [365, 369, 373, 383, 397, 398, 400, 407, 426, 475, 560], "pipe": [422, 423, 424], "pipelin": [379, 381, 413], "piron": 559, "piron2001": 559, "pivot": [19, 20, 26, 66, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 432, 463], "pivot_energi": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "pix": [183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 512], "pix_reg": 462, "pix_reg_rec": 462, "pix_to_coord": [183, 184, 187, 189, 190, 193, 195, 196, 432], "pix_to_idx": [183, 184, 187, 189, 190, 193, 195, 196], "pixcoord": 380, "pixel": [13, 81, 99, 102, 106, 107, 109, 110, 114, 124, 134, 135, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 156, 157, 168, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 213, 216, 217, 225, 228, 238, 240, 250, 251, 255, 261, 265, 377, 405, 409, 423, 426, 443, 445, 451, 453, 464, 467, 468, 476, 486, 496, 498, 510, 511, 512, 521], "pixel_area": 196, "pixel_scal": [114, 184, 196], "pixelregion": [380, 509], "pixilis": 468, "pixreg": 519, "pixregion": 198, "pk": [130, 412, 456, 458, 459, 463, 472, 486, 526], "pks2155": 458, "pks2155_hess_lc": [119, 121, 137, 456], "pl": [66, 78, 118, 123, 129, 162, 236, 243, 244, 245, 389, 437, 453, 463, 464, 471, 486], "pl_model": 552, "pl_spectrum": 473, "place": [81, 84, 85, 88, 89, 97, 99, 102, 106, 107, 134, 139, 140, 141, 142, 143, 144, 145, 149, 150, 155, 157, 158, 168, 173, 185, 186, 188, 194, 197, 198, 238, 263, 291, 339, 366, 367, 373, 374, 377, 378, 379, 380, 382, 385, 386, 387, 388, 391, 396, 410, 412, 439, 457, 468, 469, 471, 486, 496, 497, 500, 558, 564], "placehold": 371, "plai": [386, 449], "plain": [383, 468], "plan": [370, 371, 375, 376, 380, 382, 383, 386, 391, 395, 406, 423, 425, 426, 427, 557], "planar": [265, 377], "plane": [29, 66, 67, 122, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 386, 462, 463, 468, 475, 495, 510, 513, 518, 559, 565], "plate": [196, 468], "platform": [383, 392, 417], "plausibl": [393, 450], "pleas": [100, 105, 367, 369, 371, 373, 375, 401, 406, 407, 408, 417, 425, 427, 437, 439, 440, 441, 442, 444, 447, 451, 452, 456, 458, 459, 464, 484, 489, 500], "pleasant": 369, "plot": [6, 19, 20, 26, 65, 66, 81, 86, 98, 99, 102, 106, 107, 121, 124, 125, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 185, 186, 187, 188, 190, 193, 194, 195, 197, 198, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 269, 273, 344, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 367, 380, 381, 382, 384, 385, 387, 390, 402, 405, 408, 411, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 435, 436, 437, 441, 444, 445, 447, 448, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 469, 471, 472, 473, 475, 476, 477, 478, 484, 486, 490, 492, 493, 494, 496, 500, 502, 503, 504, 506, 509, 554, 555, 562, 564], "plot_absorb": [434, 526, 546], "plot_at_energi": [139, 140, 475], "plot_bia": [142, 147], "plot_broken_powerlaw": [434, 527, 546], "plot_compound": [434, 528, 546], "plot_const": [434, 516, 525], "plot_constant_spectr": [434, 529, 546], "plot_constant_tempor": [434, 547, 556], "plot_containment_radiu": [146, 152, 154, 156], "plot_containment_radius_vs_energi": [146, 152, 154, 155, 156, 158, 475, 476], "plot_contour_lin": 465, "plot_correl": [201, 465], "plot_count": [106, 107], "plot_dat": 564, "plot_disk": [434, 517, 525], "plot_distribut": [445, 447], "plot_energi": [81, 452], "plot_energy_depend": [139, 145, 475, 502], "plot_energy_offset": 81, "plot_err": 124, "plot_error": [19, 20, 26, 65, 66, 98, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 384, 437, 439, 441, 447, 448, 450, 463, 465, 485], "plot_excess": [106, 107, 420], "plot_exp_cutoff_powerlaw": [434, 530, 546], "plot_exp_cutoff_powerlaw_3fgl": [434, 531, 546], "plot_exp_cutoff_powerlaw_norm_spectr": [434, 532, 546], "plot_expdecay_tempor": [434, 548, 556], "plot_extension_error": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265], "plot_fit": [98, 106, 107, 436, 439, 440, 441, 449, 460, 484], "plot_gauss": [434, 518, 525], "plot_gauss_spectr": [434, 533, 546], "plot_gaussian_tempor": [434, 549, 556], "plot_gen_gauss": [434, 519, 525], "plot_generalized_gaussian_tempor": [434, 550, 556], "plot_grid": [153, 185, 186, 188, 194, 197, 198, 212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 390, 419, 430, 447, 464, 466, 467, 468, 469, 471, 477], "plot_heatmap": 201, "plot_hist": [194, 513], "plot_imag": 81, "plot_interact": [185, 186, 188, 194, 197, 198, 212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 419, 426, 447, 455, 468, 484, 485], "plot_kernel": 153, "plot_kwarg": [439, 441, 449], "plot_linear_tempor": [434, 551, 556], "plot_logparabola": [434, 534, 546], "plot_logparabola_norm_spectr": [434, 535, 546], "plot_map_rgb": 431, "plot_mask": [106, 107, 186, 194, 198, 436, 439, 440, 509], "plot_matrix": [142, 464, 476], "plot_migr": 147, "plot_naima": [434, 536, 546], "plot_npred_sign": [431, 447, 449, 485], "plot_offset2_distribut": 81, "plot_offset_depend": [139, 145], "plot_panel": 353, "plot_phasogram": 264, "plot_piecewise_norm_spati": [434, 520, 525], "plot_piecewise_norm_spectr": [434, 537, 546], "plot_point": [434, 521, 525], "plot_posit": [216, 238, 470], "plot_position_error": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265], "plot_powerlaw": [434, 538, 546], "plot_powerlaw2": [434, 539, 546], "plot_powerlaw_norm_spectr": [434, 540, 546], "plot_powerlaw_tempor": [434, 552, 556], "plot_profil": 124, "plot_psf_vs_rad": [146, 152, 154, 155, 156, 158, 476], "plot_rad_max_vs_energi": [157, 441], "plot_region": [193, 194, 216, 238, 363, 441, 453, 470, 509, 513], "plot_residu": [98, 99, 102, 106, 107, 415, 417, 447, 485], "plot_residuals_spati": [99, 102, 106, 107, 447, 455, 485], "plot_residuals_spectr": [99, 102, 106, 107], "plot_rgb": 431, "plot_shel": [434, 522, 525], "plot_shell2": [434, 523, 525], "plot_sine_tempor": [434, 553, 556], "plot_smooth_broken_powerlaw": [434, 541, 546], "plot_spati": 417, "plot_spectrum": [98, 139, 447, 459, 464], "plot_spectrum_datasets_off_region": [414, 430, 431, 439, 441, 449, 509], "plot_super_exp_cutoff_powerlaw_3fgl": [434, 542, 546], "plot_super_exp_cutoff_powerlaw_4fgl": [434, 543, 546], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [434, 544, 546], "plot_templ": [434, 524, 525], "plot_template_phase_tempor": [434, 554, 556], "plot_template_spectr": [434, 545, 546], "plot_template_tempor": [434, 555, 556], "plot_theta_squared_t": [477, 478], "plot_tim": 81, "plot_ts_profil": [121, 439, 440, 453, 457], "plotmixin": [106, 107], "plotter": 353, "plsuperexpcutoff3fgl": 424, "plsuperexpcutoff4fgl": 409, "plt": [19, 20, 26, 65, 66, 125, 139, 145, 146, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 354, 363, 366, 367, 402, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 492, 493, 494, 500, 502, 503, 504, 506, 509, 517, 519, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 217, 386, 392, 471], "pmf": 379, "png": [146, 374, 402, 490, 492, 493, 494, 496, 497, 502, 503, 504, 506, 509, 513, 562, 565], "po": [144, 196, 509], "point": [15, 17, 18, 21, 22, 24, 25, 27, 60, 64, 66, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 85, 86, 88, 91, 92, 93, 96, 97, 98, 99, 101, 102, 106, 107, 115, 119, 121, 122, 123, 126, 127, 128, 129, 131, 137, 144, 146, 149, 155, 157, 158, 168, 169, 171, 172, 173, 175, 176, 178, 179, 181, 182, 185, 186, 188, 193, 194, 197, 198, 203, 216, 238, 242, 253, 271, 275, 278, 284, 297, 301, 307, 313, 323, 358, 366, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 405, 408, 410, 411, 417, 419, 420, 422, 423, 424, 425, 427, 430, 431, 432, 434, 436, 438, 441, 442, 443, 447, 452, 453, 455, 457, 459, 460, 464, 465, 466, 467, 468, 471, 472, 476, 478, 480, 488, 489, 495, 496, 497, 500, 505, 508, 509, 512, 514, 518, 519, 525, 536, 557, 558, 559], "point_sourc": 377, "pointer": 374, "pointing_altaz": [393, 431], "pointing_galact": 88, "pointing_info": [83, 91, 435], "pointing_posit": [155, 442, 452, 455], "pointing_radec": [81, 88, 431, 475], "pointing_t": 91, "pointing_zen": 431, "pointinginfo": [83, 423], "pointinginfometadata": 101, "pointingmetadata": 393, "pointingmod": 83, "pointlik": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 425, 509], "points_scal": 307, "pointskyregion": [167, 172, 193, 242, 420, 441, 452], "pointsourc": [377, 488], "pointspatialmodel": [19, 20, 71, 78, 129, 247, 389, 390, 410, 430, 443, 444, 447, 448, 451, 452, 457, 463, 464, 470, 471, 476, 484, 485, 521], "pointspreadfunct": 466, "poisson": [102, 107, 277, 279, 280, 286, 288, 289, 292, 325, 378, 379, 408, 413, 437, 442, 445, 455, 559, 560, 562], "poissonian": [456, 460, 559], "poissonlikelihoodfitt": 422, "polar": [51, 54, 296, 366], "pole": [51, 380, 468], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 186], "polici": 370, "pollut": 381, "polygon": [186, 200, 380], "polygonis": 380, "polygonpixelregion": 380, "polygonskyregion": [200, 380], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 235, 468], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [311, 315, 316], "pool_kwarg": [315, 316], "poolmethodenum": 311, "poon": 423, "poorli": 467, "pop": [89, 97, 192, 238], "popitem": 192, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 367, 386, 424, 489, 491, 536, 558], "popular": 560, "port": 424, "pos_ob": 449, "pos_on": 182, "pos_target": [449, 460], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 88, 91, 92, 93, 99, 100, 101, 102, 105, 119, 120, 121, 122, 123, 126, 127, 129, 143, 144, 150, 153, 155, 158, 168, 171, 173, 182, 184, 185, 186, 188, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 212, 213, 216, 217, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 263, 265, 275, 277, 279, 293, 294, 297, 298, 301, 302, 354, 366, 373, 377, 379, 380, 389, 390, 391, 392, 407, 409, 414, 417, 419, 432, 435, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 475, 476, 478, 486, 496, 497, 498, 500, 505, 506, 509, 510, 511, 513, 517, 518, 519, 521, 536, 562], "position_angl": 442, "position_error": [212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 411], "position_lonlat": [212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265], "position_off": 182, "positv": 428, "posixpath": [16, 331], "possibl": [33, 80, 85, 88, 148, 366, 367, 369, 373, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 390, 393, 396, 398, 408, 409, 417, 424, 426, 431, 439, 443, 444, 445, 450, 453, 464, 465, 466, 467, 468, 476, 486, 498, 500, 507, 512, 513, 536, 560, 561], "possibli": [85, 88, 119, 372, 376, 377, 379, 380, 384, 385, 386, 387, 393, 395, 417, 507], "post": [52, 375, 393], "poster": [369, 392, 396, 421], "posterior": [384, 473], "posteriori": 473, "postfix": 366, "potenti": [116, 374, 382, 450, 500], "potentiel": 392, "power": [19, 20, 26, 27, 98, 118, 119, 121, 123, 128, 133, 153, 155, 158, 184, 206, 208, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 254, 256, 257, 258, 259, 262, 266, 268, 273, 278, 322, 377, 379, 405, 411, 423, 425, 434, 442, 444, 447, 451, 453, 455, 458, 459, 460, 470, 471, 473, 500, 514, 526, 546, 552], "power_spectrum": 278, "power_spectrum_param": 278, "powerlaw": [171, 244, 246, 278, 377, 378, 382, 423, 425, 434, 436, 444, 452, 453, 463, 471, 473, 485, 514, 540, 556], "powerlaw2spectralmodel": [236, 244, 245, 248, 389, 437, 444, 471, 486, 539], "powerlaw_with_paramet": 278, "powerlawnormspectralmodel": [66, 224, 243, 245, 248, 263, 388, 389, 394, 414, 432, 447, 448, 451, 452, 455, 464, 470, 471, 476, 484, 507, 520, 540, 545], "powerlawspectr": 129, "powerlawspectralmodel": [69, 71, 74, 78, 98, 106, 107, 111, 113, 121, 127, 129, 207, 209, 243, 244, 248, 269, 389, 390, 394, 436, 437, 440, 442, 443, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 463, 464, 470, 471, 473, 475, 476, 484, 485, 486, 498, 516, 517, 518, 519, 521, 522, 523, 524, 526, 528, 537, 538, 540, 547, 548, 549, 550, 551, 552, 553, 554, 555], "powerlawspectramodel": 394, "powerlawtemporalmodel": [260, 471, 552], "pppc4dmid": 26, "pprint": [85, 88, 561], "pprint_al": [85, 88], "pprint_exclude_nam": [85, 88], "pprint_include_nam": [85, 88], "pr": [366, 376, 378, 380, 389, 390, 392, 394, 395, 411, 412], "practic": [379, 383, 387, 390, 391, 392, 393, 439, 464, 469, 471, 485, 496, 500, 509, 559], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 98, 101, 105, 120, 121, 295, 366, 369, 375, 386, 392, 393, 397, 398, 414, 426, 428, 440, 444, 445, 448, 450, 453, 456, 463, 465, 470, 473, 496, 502], "preced": [313, 380, 382, 392, 471], "precis": [129, 146, 152, 154, 156, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 366, 384, 391, 392, 452], "precision_factor": [155, 158, 185, 186, 188, 194, 197, 198], "precomput": [26, 98, 121, 464, 470], "pred": 496, "predefin": [419, 453, 457, 458, 484], "predic": 377, "predict": [98, 99, 102, 105, 106, 107, 118, 119, 121, 122, 123, 126, 127, 133, 162, 165, 171, 178, 242, 253, 281, 317, 362, 372, 377, 378, 379, 414, 431, 432, 440, 442, 444, 445, 447, 449, 451, 453, 455, 464, 467, 473, 484, 485, 498, 500, 504, 507, 526, 559, 562], "prefer": [85, 88, 341, 366, 371, 373, 377, 385, 386, 392, 397, 398, 402, 453, 459, 468, 469, 473, 480, 560, 562], "prefix": [190, 377], "preliminari": [375, 386, 394, 422, 424, 432, 443, 466, 476], "prepar": [80, 165, 376, 377, 395, 440, 448, 465, 467, 471, 476, 484, 508, 557], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [85, 88], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 443, 456, 468, 536, 559], "present": [15, 69, 80, 81, 83, 88, 89, 97, 103, 107, 119, 121, 159, 187, 192, 216, 224, 238, 295, 366, 367, 369, 379, 382, 386, 390, 393, 396, 417, 436, 441, 444, 445, 456, 457, 458, 462, 466, 467, 468, 470, 496, 498, 501, 513, 560, 562], "preserv": [85, 88, 102, 185, 186, 188, 190, 194, 197, 198, 383, 464, 469], "preserve_count": [185, 186, 188, 194, 197, 198, 468], "press": 475, "pretti": [380, 386, 396, 402], "prevent": [186, 218, 295, 417, 447], "preview": [369, 478], "previou": [72, 85, 88, 366, 369, 380, 386, 387, 391, 395, 408, 414, 432, 441, 450, 451, 468, 471, 472, 473, 486, 495], "previous": [275, 383, 413, 425, 426, 435, 439, 447, 448, 463, 467, 469], "primari": [26, 85, 88, 185, 186, 188, 189, 197, 198, 371, 392, 413, 428, 468], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 189, "primary_band": 468, "primary_hdu": 451, "primaryflux": [19, 20, 462, 488], "primaryhdu": [451, 468], "prime": 23, "primer": 384, "princip": 450, "principl": [392, 394, 439, 510], "print": [11, 66, 80, 81, 83, 84, 85, 86, 88, 91, 93, 98, 99, 106, 108, 112, 118, 121, 123, 129, 134, 135, 140, 142, 145, 146, 152, 154, 156, 165, 168, 207, 209, 216, 230, 238, 269, 293, 294, 303, 334, 366, 367, 377, 378, 381, 390, 393, 401, 402, 435, 436, 437, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 484, 485, 486, 498, 500, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 564], "print0": 366, "print_level": [447, 455, 465, 485], "print_stack": 366, "printout": [366, 424, 425, 464], "prior": [19, 20, 96, 98, 99, 106, 206, 207, 208, 209, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 370, 375, 398, 400, 432, 434, 436, 439, 440, 441, 442, 444, 447, 448, 453, 455, 459, 463, 465, 471, 474, 480, 485, 486, 512, 545, 557], "prior_registri": 473, "prior_stat_sum": [206, 207, 208, 209, 394, 473], "priorfitstatist": 394, "priori": [390, 445, 469], "prioriti": [363, 375, 377, 378, 380, 392, 395], "priormodel": 394, "priorparamet": [394, 473], "privat": [366, 369, 375, 389, 425, 477, 478], "pro": [366, 382], "probabl": [13, 147, 366, 369, 372, 373, 374, 376, 379, 380, 384, 386, 388, 394, 396, 442, 455, 465, 468, 471, 473, 476, 504, 505, 506, 559, 560, 562, 563], "probe": [284, 471], "problem": [19, 20, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 291, 344, 374, 376, 380, 387, 394, 401, 429, 465], "problemat": [385, 390, 393, 458, 500], "proce": [369, 396, 398, 400, 428, 436, 439, 440, 451, 455, 458, 469, 470, 476, 484, 485], "procedur": [379, 391, 396, 443, 447], "proceed": [386, 392, 477], "process": [11, 81, 90, 122, 123, 126, 129, 161, 186, 198, 314, 315, 316, 325, 366, 367, 369, 371, 372, 374, 375, 376, 378, 379, 381, 382, 388, 391, 392, 393, 399, 403, 409, 414, 417, 419, 425, 432, 436, 439, 449, 451, 452, 463, 464, 467, 477, 482, 485, 490, 497, 499, 500, 558, 559, 560], "process_lots_of_data": 366, "processor": 386, "prod": 406, "prod3": 386, "prod3b": 475, "prod5": [451, 452], "produc": [15, 99, 102, 106, 107, 110, 119, 272, 274, 366, 367, 372, 381, 382, 390, 391, 393, 396, 411, 436, 439, 441, 443, 448, 449, 450, 451, 455, 458, 460, 462, 465, 467, 473, 475, 485, 500, 503, 505, 559, 560], "product": [105, 185, 186, 188, 191, 194, 197, 198, 264, 372, 381, 382, 392, 393, 402, 417, 431, 432, 437, 443, 452, 460, 464, 465, 467, 476, 478, 498, 505, 559], "prof_mak": 123, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 115, 119, 121, 122, 123, 124, 125, 126, 127, 146, 152, 154, 155, 156, 158, 182, 186, 194, 203, 227, 229, 276, 292, 308, 327, 328, 378, 380, 384, 385, 392, 398, 400, 405, 407, 414, 417, 422, 424, 426, 427, 432, 434, 439, 440, 449, 454, 457, 459, 465, 473, 480, 488, 496, 498, 500, 512, 517, 559, 562], "profile_err": 124, "profile_high": 453, "profile_new": 453, "profuma": 488, "program": [366, 382], "programmat": 447, "progress": [15, 80, 114, 126, 129, 203, 316, 372, 375, 382, 383, 396, 417, 424, 425, 426, 432, 500], "progress_download": 500, "prohibit": 500, "proj": [99, 102, 106, 107, 165, 184, 185, 186, 196, 197, 198, 439, 467, 468, 476, 485, 509], "project": [99, 106, 123, 162, 168, 184, 185, 186, 188, 193, 194, 196, 197, 198, 213, 216, 217, 225, 228, 238, 240, 250, 251, 255, 261, 265, 302, 328, 366, 367, 368, 369, 371, 373, 380, 382, 383, 386, 392, 409, 417, 425, 431, 440, 443, 445, 449, 453, 460, 466, 468, 469, 470, 475, 476, 482, 484, 485, 486, 488, 509, 512, 513, 522, 523, 558, 560], "projected_distance_axi": 123, "prompt": 560, "pronounc": 500, "pronunci": 500, "prop_cycl": 363, "propag": [19, 20, 26, 53, 124, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 283, 377, 384, 411, 431, 465], "proper": [45, 97, 381, 392, 430, 431, 441, 447, 500], "properli": [129, 178, 371, 381, 392, 429, 430, 439, 440, 465, 484, 496, 561], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 93, 119, 162, 196, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 285, 363, 366, 367, 377, 379, 389, 390, 393, 394, 414, 417, 419, 424, 425, 427, 430, 431, 439, 441, 449, 451, 453, 463, 469, 471, 472, 486, 497, 513, 559], "propos": [368, 370, 371, 372, 373, 375, 383, 391, 392, 394, 407, 410, 411, 413, 414, 425, 431], "proto": [16, 82, 101, 120], "proton": [268, 536], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 371, 377, 379, 382, 383, 384, 386, 422, 424, 425, 432, 489], "proven": 382, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 83, 85, 86, 88, 99, 101, 102, 106, 107, 110, 120, 126, 129, 142, 143, 161, 175, 176, 181, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 278, 292, 295, 359, 366, 367, 376, 377, 379, 381, 382, 383, 386, 387, 390, 392, 393, 394, 395, 396, 397, 401, 403, 407, 410, 411, 412, 414, 417, 419, 428, 431, 435, 441, 442, 443, 452, 455, 456, 463, 464, 465, 467, 468, 469, 471, 472, 476, 477, 478, 480, 485, 486, 488, 490, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 521, 524, 536, 545, 557, 558, 559, 560, 562, 565], "proxi": 376, "prune": 369, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 369, "psf": [16, 80, 85, 86, 93, 99, 100, 102, 105, 106, 107, 109, 110, 144, 146, 151, 152, 153, 154, 155, 156, 158, 165, 172, 181, 196, 216, 238, 253, 293, 294, 366, 372, 376, 377, 378, 379, 382, 405, 407, 411, 412, 413, 414, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 431, 435, 436, 439, 440, 441, 443, 444, 445, 447, 449, 451, 452, 455, 457, 464, 467, 469, 472, 475, 477, 478, 484, 485, 496, 498, 500, 505, 508, 513, 559], "psf3d": [86, 146, 151, 154, 156, 181, 407, 425, 506], "psf68": 435, "psf_": 496, "psf_3gauss": [85, 146, 475, 506], "psf_assym": 466, "psf_kernel": [155, 476], "psf_kernel_map": [153, 476], "psf_king": [85, 154, 506], "psf_map": [100, 105, 155, 158], "psf_map_reco": [158, 477], "psf_mean": 476, "psf_new": 466, "psf_out": [155, 158], "psf_r95": 469, "psf_tabl": [80, 85, 152, 466, 478], "psf_theta": 366, "psf_valu": [146, 154, 156], "psfkernel": [102, 155, 158, 186, 198, 378, 387, 426, 506], "psfking": [151, 419, 506], "psfmap": [99, 100, 102, 105, 106, 107, 143, 144, 150, 151, 153, 158, 165, 172, 181, 378, 379, 387, 407, 410, 411, 413, 414, 426, 432, 443, 464, 476, 500, 506], "psfnd": 466, "psr": [460, 463, 486], "public": [6, 356, 357, 369, 371, 380, 385, 388, 391, 396, 421, 436, 448, 457, 458, 558, 565], "publicli": [475, 477, 478], "publish": [11, 383, 396, 439, 476], "pull": [367, 370, 371, 374, 375, 376, 377, 378, 379, 380, 386, 391, 392, 396, 404], "puls": 229, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 63, 81, 376, 386, 407, 409, 428, 431, 434, 445, 450, 461, 471, 480, 490, 491, 496, 497, 498, 500, 508, 512, 557], "pulsar_analysi": [386, 434, 460, 461], "pulsat": 252, "pulse_stat": 460, "punch": [430, 432], "pure": [366, 383, 385, 386, 509], "purpl": 513, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 319, 341, 370, 372, 378, 381, 385, 389, 391, 392, 425, 443, 464, 470, 471, 504], "push": [366, 369, 395, 428], "put": [366, 367, 369, 371, 373, 374, 377, 386, 395, 396, 402, 408, 442, 451, 469, 476, 560], "pwbpl": 389, "pwd": [369, 398, 400], "pwl": [19, 20, 26, 121, 207, 209, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 269, 377, 389, 394, 437, 451, 471, 473, 498, 516, 517, 518, 519, 521, 522, 523, 524, 526, 528], "pwl2": 471, "pwl_decai": 451, "pwl_norm": [389, 471, 540], "pwn": [43, 463, 486, 493], "pwne": 450, "py": [16, 82, 101, 120, 366, 367, 373, 380, 383, 385, 387, 395, 396, 402, 407, 409, 410, 418, 423, 427, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 500, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 560], "py310": 369, "py35": 424, "pycharm": 408, "pydant": [16, 82, 101, 120, 365, 411, 430, 432], "pydantic_cor": [16, 82, 101, 120], "pydanticserializationerror": [16, 82, 101, 120], "pydanticundefin": [16, 82, 101, 120], "pydata": 419, "pyfact": [405, 423], "pyflak": 419, "pyirf": 432, "pyjok": 365, "pymc": 384, "pymotw": 560, "pypi": [383, 393, 395, 396, 398, 399], "pyplot": [19, 20, 26, 65, 66, 81, 125, 146, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 354, 359, 402, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 492, 493, 494, 500, 502, 503, 504, 506, 509, 517, 519, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553], "pyproject": 414, "pyregion": 380, "pytest": [366, 367, 369, 396, 425], "python": [11, 16, 82, 101, 120, 134, 295, 335, 365, 369, 370, 371, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 392, 393, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 409, 410, 417, 419, 422, 423, 424, 425, 426, 427, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 488, 499, 500, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560], "python3": [331, 399, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 532, 535, 548], "python_execut": [435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "python_vers": [435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "pytorch": 384, "pyx": [369, 396], "pyyaml": [365, 383, 406, 410], "q": [26, 81, 85, 88, 361, 462], "qtabl": [85, 88, 381], "quadrat": [468, 478, 486, 563], "qualiti": [194, 386, 425, 426, 431, 472, 485, 500, 558, 565], "quantifi": [432, 450, 456, 473], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 70, 72, 73, 78, 81, 84, 85, 86, 88, 91, 93, 97, 99, 100, 102, 103, 105, 106, 107, 109, 110, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 160, 169, 170, 171, 173, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 206, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 271, 277, 278, 279, 282, 283, 284, 285, 291, 294, 295, 297, 299, 301, 302, 307, 325, 327, 328, 337, 341, 366, 367, 372, 375, 377, 380, 381, 382, 384, 389, 390, 393, 394, 408, 410, 414, 417, 418, 426, 427, 428, 435, 443, 451, 452, 453, 456, 463, 464, 466, 467, 468, 469, 471, 475, 477, 478, 486, 492, 493, 494, 496, 500, 513, 539, 548, 550, 559, 562, 564], "quantity_support": [466, 517], "quasar": 130, "quentin": [384, 388, 389, 409, 410, 411, 412, 413, 414, 417, 419, 420, 428, 429, 430, 431, 432], "queri": [382, 422, 463], "question": [334, 369, 371, 373, 374, 375, 377, 378, 379, 380, 383, 385, 390, 401, 406, 407, 425, 426, 427, 449, 486, 500, 501, 560], "questionnair": [373, 425], "quetin": 411, "quick": [81, 86, 99, 102, 106, 107, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 366, 369, 386, 396, 443, 444, 447, 449, 451, 459, 464, 466, 470, 475, 477, 478, 480, 486, 488, 497], "quickest": 367, "quickli": [366, 367, 369, 371, 382, 383, 386, 392, 396, 398, 424, 439, 447, 456, 477, 504, 560], "quicklook": 81, "quickplot": 186, "quicksort": [85, 88], "quickstart": 403, "quiescent": 526, "quit": [85, 88, 366, 394, 451], "quival": 377, "quot": [72, 269, 366, 367, 462], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 84, 85, 88, 147, 182, 195, 296, 366, 367, 391, 396, 440, 448, 452, 465, 467, 484, 490, 505, 509, 517, 518, 519, 523, 526], "r68": [81, 109, 146, 155, 158], "r70": [66, 463], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 250, 251, 462, 519, 522, 523], "r_0": [30, 33, 38, 48, 217, 228, 250, 470, 517, 519, 523], "r_1": [39, 48], "r_eval": 228, "r_exp": [36, 48], "r_in": [44, 160, 170, 250, 445, 510], "r_m": 519, "r_out": 44, "r_out_max": 160, "r_out_pwn": 43, "r_sun": 38, "ra": [66, 81, 83, 85, 86, 88, 91, 134, 135, 168, 366, 367, 379, 382, 435, 439, 441, 443, 445, 449, 452, 457, 458, 460, 463, 467, 469, 475, 476, 477, 478, 485, 486, 488, 500, 504, 564], "ra_pnt": 478, "ra_tru": [366, 379], "rad": [33, 81, 86, 99, 102, 106, 107, 109, 110, 146, 152, 154, 155, 156, 157, 158, 168, 181, 252, 382, 419, 431, 441, 464, 466, 467, 476, 505, 506, 509, 553], "rad_axi": [99, 102, 106, 107, 110, 152, 155, 158, 464, 466, 467, 500], "rad_di": [45, 490], "rad_index": 152, "rad_max": [80, 81, 85, 86, 151, 157, 174, 419, 428, 430, 431, 441], "rad_max_2d": [85, 157, 167, 172, 174, 441], "radec": [81, 91, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 154, 156, 157, 366, 367, 466, 468, 486], "radecsi": 524, "radesysa": 524, "radi": [239, 536], "radial": [28, 30, 35, 36, 39, 40, 45, 125, 182, 186, 321, 366, 377, 385, 390, 407, 422, 424, 432, 451, 453, 467, 475, 488, 490, 506, 509], "radian": [17, 18, 21, 22, 24, 25, 27, 191, 212, 213, 217, 225, 228, 240, 242, 250, 251, 253, 255, 261, 265], "radiat": [218, 500, 522, 523, 536], "radiative_model": [239, 536], "radii": [27, 462, 476, 518], "radio": [130, 380, 468], "radiobutton": [447, 455, 468, 484, 485], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 71, 80, 81, 88, 93, 99, 102, 106, 107, 118, 123, 124, 146, 152, 154, 155, 156, 158, 160, 168, 170, 186, 196, 198, 199, 216, 217, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 263, 265, 293, 294, 327, 367, 380, 382, 389, 390, 407, 416, 417, 421, 431, 435, 436, 439, 440, 442, 443, 444, 445, 447, 449, 451, 452, 457, 458, 460, 462, 464, 466, 467, 469, 470, 471, 472, 475, 484, 485, 486, 493, 494, 507, 509, 510, 513, 517, 518, 519, 522, 523], "radius_inn": [52, 53], "radius_max": [327, 453], "radius_min": 327, "radius_reverse_shock": [50, 53, 493], "radmax": [419, 420, 431, 432], "radmax2d": [81, 86, 151, 174, 417, 441], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 62, 65, 81, 90, 118, 122, 123, 126, 128, 129, 130, 161, 218, 268, 269, 284, 285, 315, 316, 372, 377, 378, 380, 384, 395, 396, 398, 402, 403, 408, 424, 426, 431, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 488, 490, 491, 495, 496, 497, 500, 503, 505, 507, 509, 510, 526, 557, 558, 559, 560, 561, 562, 565], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 82, 84, 85, 88, 89, 97, 101, 120, 187, 192, 216, 218, 238, 261, 262, 263, 265, 295, 344, 366, 380, 389, 390, 393, 394, 411, 428, 431, 432, 452], "raise_error": [16, 82, 101, 120], "raj2000": [463, 486], "ran": 475, "random": [6, 33, 42, 45, 46, 47, 85, 88, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 318, 319, 320, 321, 322, 323, 324, 325, 369, 378, 379, 382, 409, 421, 425, 451, 471, 500, 561, 562, 564], "random_se": 378, "random_st": [33, 42, 45, 46, 47, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 318, 319, 322, 323, 324, 325, 366, 379, 442, 451, 452], "randomli": [46, 366], "randomnumb": 322, "randomst": [33, 42, 45, 46, 47, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 319, 322, 323, 324, 325, 366], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 66, 70, 72, 73, 78, 81, 85, 88, 89, 97, 98, 99, 102, 106, 107, 122, 142, 155, 157, 158, 171, 183, 184, 187, 189, 190, 193, 194, 196, 206, 208, 210, 211, 214, 215, 217, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 263, 264, 266, 267, 271, 320, 322, 323, 324, 359, 366, 372, 378, 379, 381, 390, 408, 413, 414, 417, 425, 426, 428, 436, 439, 441, 442, 444, 447, 448, 450, 452, 456, 458, 459, 460, 463, 464, 465, 466, 468, 469, 471, 472, 473, 476, 477, 484, 485, 486, 496, 498, 500, 519, 529, 558, 562], "rangl": 19, "rapid": [130, 284, 372, 375, 390, 391], "rare": [365, 366, 385, 468], "raster": [92, 186], "rate": [44, 45, 81, 86, 139, 140, 171, 178, 278, 325, 379, 402, 426, 439, 441, 460, 467, 475, 476, 478, 490, 503, 559], "rather": [114, 118, 122, 126, 129, 371, 384, 387, 425, 428, 430, 432, 436, 465, 468, 486, 496, 518, 562], "ratio": [102, 107, 160, 184, 185, 186, 279, 292, 390, 435, 460, 475, 510, 559, 561, 562, 563, 565], "ravel": [184, 451], "raw": [119, 171, 486], "rc": [185, 186, 188, 194, 197, 198, 363, 468], "rc1": 395, "rc_context": [185, 186, 188, 194, 197, 198, 468], "rc_param": [185, 186, 188, 194, 197, 198, 468], "rcparam": 363, "rdbu": 484, "rdbu_r": [99, 102, 106, 107], "re": [85, 88, 93, 121, 122, 127, 162, 185, 186, 188, 194, 197, 198, 203, 293, 294, 359, 366, 367, 369, 371, 373, 374, 380, 381, 382, 384, 387, 388, 389, 390, 398, 400, 401, 405, 417, 419, 426, 437, 439, 440, 445, 447, 448, 449, 459, 465, 466, 470, 472, 476, 484, 486, 498, 500, 521, 560], "reach": [53, 128, 199, 371, 376, 379, 471], "reactiv": 428, "read": [15, 16, 81, 83, 84, 85, 86, 88, 91, 97, 98, 99, 102, 103, 106, 107, 111, 113, 114, 118, 119, 121, 123, 125, 127, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 167, 185, 186, 188, 192, 193, 194, 197, 198, 216, 218, 230, 238, 264, 265, 266, 270, 272, 274, 275, 333, 352, 354, 359, 361, 366, 367, 369, 371, 376, 377, 378, 379, 382, 386, 388, 390, 392, 393, 394, 398, 400, 411, 414, 417, 425, 426, 428, 431, 432, 439, 440, 441, 445, 447, 450, 451, 456, 464, 465, 466, 471, 473, 475, 476, 477, 480, 484, 486, 497, 498, 500, 502, 503, 504, 506, 524, 554, 555, 560, 563], "read_arf": 103, "read_bkg": 103, "read_builtin": [218, 526], "read_covari": [216, 238], "read_dataset": 15, "read_lazi": 419, "read_model": 15, "read_pha": 103, "read_rmf": 103, "read_xspec_model": 266, "readabl": [347, 377, 419, 440, 484], "reader": [393, 435, 442, 444, 447, 449, 452, 455, 459, 475], "readi": [376, 393, 401, 559], "readili": 386, "readm": [369, 392], "readthedoc": [13, 122, 178, 193, 203, 266, 369, 386, 408, 423, 465, 466, 475, 497, 511, 513], "real": [51, 366, 369, 396, 442, 443, 445, 452, 465, 469, 496], "realis": [366, 371, 380, 392], "realist": 394, "realiz": [372, 559], "realli": [366, 373, 380, 383, 442, 455, 465], "rearrang": 386, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 371, 372, 373, 374, 377, 378, 379, 381, 383, 385, 387, 392, 425, 451, 465, 473, 477, 496, 560], "reassign": [19, 20, 26, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267], "rebas": [366, 380], "rebin": [121, 137, 381, 419, 432, 456, 458, 464], "rebuild": [16, 82, 101, 120, 448], "recarrai": [85, 88, 146, 156], "receiv": [384, 386, 387, 389, 391], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 376, 380, 381, 382, 383, 386, 399, 406, 420, 426, 448, 475, 477], "recip": [368, 382, 403, 417, 460, 501, 562], "reco": [99, 102, 106, 107, 142, 175, 366, 372, 381, 390, 427, 428, 435, 464, 467, 477, 559], "reco_exposur": 118, "reco_psf": [99, 102, 106, 107, 110, 467, 477], "recogn": [435, 442, 444, 447, 449, 451, 455, 459, 475], "recognis": [377, 560], "recognit": 392, "recommend": [89, 97, 172, 216, 238, 276, 307, 308, 365, 366, 367, 369, 373, 375, 383, 392, 396, 397, 399, 402, 409, 426, 440, 441, 450, 464, 465, 467, 471, 476, 484, 500, 507, 512, 513, 560, 561, 564], "recomput": [121, 390], "recompute_ul": 121, "recon_vers": [476, 486], "reconstruct": [81, 99, 100, 102, 105, 106, 107, 109, 110, 118, 128, 129, 133, 142, 143, 144, 147, 157, 158, 171, 178, 366, 372, 377, 379, 414, 429, 435, 436, 439, 442, 444, 445, 447, 451, 455, 459, 464, 467, 469, 473, 477, 496, 498, 504, 505, 506, 513, 559], "recopsfmap": [151, 428, 431], "record": [81, 86, 366, 371, 372, 392], "recov": 382, "rectangl": [213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 328, 380, 453, 509], "rectangleskyregion": [196, 212, 213, 265, 327, 328, 380, 436, 462, 469, 509, 513], "rectangular": [453, 509, 513], "recurr": 381, "recurs": [334, 393], "red": [98, 278, 284, 356, 435, 442, 445, 447, 450, 462, 472, 473, 517, 518], "redesign": 375, "redistribut": 504, "redo": 460, "redshift": [19, 20, 218, 389, 486, 526], "reduc": [6, 11, 15, 97, 99, 102, 106, 107, 153, 155, 158, 163, 173, 185, 186, 188, 190, 194, 197, 198, 372, 373, 375, 377, 378, 382, 385, 387, 392, 393, 398, 405, 410, 417, 426, 432, 434, 436, 437, 440, 441, 442, 447, 448, 451, 455, 457, 458, 459, 469, 472, 474, 477, 480, 496, 500, 505, 510, 512, 513, 518, 519, 557, 558, 559, 560], "reduce_data": 382, "reduce_over_ax": [185, 186, 188, 194, 197, 198, 444, 467, 477], "reduct": [6, 11, 161, 372, 378, 379, 382, 386, 387, 388, 393, 398, 411, 413, 431, 434, 445, 449, 450, 453, 460, 464, 466, 469, 470, 472, 474, 480, 496, 497, 500, 507, 509, 510, 512, 558, 559], "ref": [81, 91, 99, 106, 118, 123, 129, 184, 193, 196, 216, 238, 390, 449, 453, 463, 464, 466, 468, 476, 486, 513, 548, 549, 550, 551, 552, 553, 559, 560], "ref_templ": [16, 82, 101, 120], "refactor": [366, 378, 380, 381, 382, 389, 407, 408, 409, 411, 412, 413, 414, 417, 419, 421, 423, 425], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 62, 66, 68, 81, 82, 83, 84, 85, 86, 88, 91, 98, 99, 101, 102, 103, 106, 107, 109, 110, 119, 120, 121, 122, 124, 129, 130, 147, 161, 162, 165, 168, 169, 172, 173, 174, 177, 178, 180, 195, 196, 197, 198, 203, 210, 211, 214, 215, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 269, 278, 280, 284, 285, 286, 291, 292, 322, 323, 347, 348, 349, 350, 366, 367, 372, 374, 377, 378, 380, 382, 384, 389, 390, 391, 392, 393, 396, 403, 417, 424, 425, 436, 437, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 463, 464, 465, 467, 468, 470, 471, 473, 475, 476, 477, 484, 485, 486, 489, 496, 498, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 530, 531, 532, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 564], "referenc": [366, 559], "reference_flux": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "reference_map": 468, "reference_model": [119, 121, 435, 448], "reference_model_default": [119, 121], "reference_spectral_model": [119, 121], "reference_tim": [84, 86, 99, 102, 106, 107, 189, 195, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 430, 431, 452, 456, 459, 467, 468, 555], "reflect": [163, 167, 168, 169, 173, 182, 375, 380, 382, 385, 387, 398, 410, 417, 419, 422, 423, 426, 436, 439, 440, 441, 449, 458, 469, 508, 559], "reflected_bkg_mak": 467, "reflectedbgestim": 382, "reflectedregionsbackgroundmak": [163, 168, 411, 436, 439, 441, 449, 458, 467], "reflectedregionsfind": [167, 173, 409, 509], "refpix": [196, 197, 198], "refresh": [85, 88], "refus": 366, "reg": [99, 102, 106, 107, 469, 471], "reg_dataset": 464, "regard": [390, 393, 439], "regardless": [85, 88], "regeard": [429, 430, 431, 432], "regi": [372, 377, 378, 382], "region": [6, 27, 81, 88, 97, 99, 102, 104, 106, 107, 111, 113, 123, 125, 128, 130, 143, 144, 150, 155, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 188, 193, 194, 196, 197, 198, 200, 203, 212, 213, 216, 217, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 263, 265, 266, 268, 279, 292, 326, 327, 328, 329, 330, 362, 363, 365, 367, 370, 372, 373, 381, 382, 383, 385, 388, 390, 398, 409, 410, 411, 413, 417, 419, 420, 422, 423, 425, 426, 428, 430, 431, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 468, 471, 473, 475, 476, 477, 478, 484, 485, 486, 495, 496, 497, 498, 500, 507, 508, 510, 511, 512, 517, 518, 536, 558, 559, 561, 562, 563], "region_coord": 193, "region_ev": 460, "region_find": [167, 441], "region_io": 193, "region_map": [194, 198, 513], "region_map_1": 513, "region_map_2": 513, "region_mask": [81, 184, 196, 380, 439, 445, 449, 464, 467, 469, 485, 507, 509, 510], "region_nd_map": 194, "region_new": 329, "region_pix": 471, "region_weight": 196, "regionfind": [168, 169, 173], "regiongeom": [99, 102, 106, 107, 119, 123, 165, 172, 174, 175, 176, 178, 179, 194, 213, 217, 225, 228, 240, 250, 251, 253, 255, 261, 265, 380, 381, 388, 398, 413, 414, 417, 435, 436, 439, 441, 442, 449, 453, 458, 459, 460, 463, 464, 467, 476, 486, 496, 509, 512], "regionndmap": [26, 103, 106, 107, 128, 166, 167, 172, 174, 185, 186, 188, 193, 197, 198, 213, 217, 225, 228, 230, 240, 250, 251, 255, 261, 262, 265, 363, 380, 398, 413, 414, 417, 420, 428, 431, 452, 476, 496, 555], "regions_ds9": 469, "regionsfind": [167, 168, 173, 419], "regist": 471, "registri": [55, 95, 115, 151, 163, 234, 236, 247, 248, 260, 387, 394, 410, 413, 414, 417, 426, 463, 471], "regress": 369, "regul": 392, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 192, 196, 375, 394, 419, 431, 455, 468, 469], "regulargridinterpol": [266, 307, 366], "regularis": 394, "regularli": [394, 478], "reichardt": 421, "reimplement": 377, "rej_sampl": 379, "reject": [370, 371, 379], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 80, 85, 86, 88, 102, 103, 107, 129, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 195, 196, 197, 198, 250, 269, 283, 325, 381, 392, 417, 456, 459, 477, 523, 562], "rel_reduction_of_f_": 465, "relat": [11, 13, 66, 81, 83, 201, 284, 372, 374, 377, 379, 380, 383, 385, 386, 387, 392, 396, 413, 414, 426, 432, 451, 464, 471, 475, 490, 557, 562], "relative_variability_amplitud": 456, "relative_variability_error": 456, "relative_variability_signific": 456, "relativist": 536, "releas": [11, 51, 64, 92, 368, 370, 371, 373, 374, 380, 383, 384, 393, 397, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 439, 440, 448, 457, 458, 475, 477, 478, 484, 485, 488, 500, 502, 503, 504, 506], "relev": [119, 277, 279, 349, 366, 372, 381, 386, 390, 395, 439, 440, 443, 457, 458, 459, 470, 472, 475, 477, 478, 484, 485, 496, 497, 564], "reli": [119, 366, 371, 372, 376, 377, 381, 385, 390, 391, 409, 414, 417, 428, 437, 447, 469, 488, 562], "reliabl": [369, 399, 445, 465, 469, 561], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 97, 371, 372, 373, 374, 379, 383, 392, 407, 426, 441, 470, 506], "remark": 441, "rememb": [366, 380, 465, 480, 560], "remi": [388, 389, 409, 410, 411, 412, 413, 414, 417, 428, 429, 430, 431, 432], "remind": [392, 449, 564], "remnant": [28, 52, 436, 450, 471, 491], "remot": 369, "remov": [13, 85, 88, 89, 93, 97, 122, 123, 126, 155, 158, 170, 183, 184, 189, 192, 193, 196, 198, 206, 208, 238, 294, 369, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 439, 445, 460, 464, 469, 472, 475, 489, 500, 509], "remove_column": [85, 88], "remove_indic": [85, 88], "remove_row": [85, 88], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 121, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 369, 376, 377, 385, 386, 389, 405, 408, 410, 411, 412, 413, 417, 427, 428, 431, 560], "rename_ax": [183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 428], "rename_column": [85, 88, 121], "rename_dupl": [85, 88], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 344, 366, 374, 425], "renorm": [445, 507], "renormalis": 170, "reoptim": [122, 126, 127, 203, 407, 453, 457, 465, 473, 484], "reorder_ax": [185, 186, 188, 194, 197, 198, 431], "reorgan": 417, "reorganis": 386, "repeat": [367, 447, 477], "repl": 366, "replac": [15, 16, 82, 85, 88, 97, 99, 101, 102, 106, 107, 120, 143, 144, 150, 155, 183, 184, 186, 189, 193, 194, 196, 198, 263, 275, 366, 376, 377, 380, 384, 387, 393, 399, 408, 409, 411, 413, 414, 431, 432, 451, 460], "replace_axi": [183, 184, 193, 196], "replace_column": [85, 88], "repo": [367, 374, 395, 396, 405, 418], "report": [85, 369, 382, 395, 396, 405, 419, 420, 425], "repositori": [85, 88, 366, 369, 371, 374, 376, 392, 395, 417, 426, 451, 478], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 82, 85, 88, 99, 101, 102, 106, 107, 120, 184, 186, 188, 190, 191, 193, 195, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 264, 265, 295, 303, 313, 366, 377, 378, 379, 380, 384, 387, 388, 389, 390, 407, 431, 452, 453, 463, 465, 467, 468, 469, 471, 476, 486, 495, 496, 498, 502, 503, 504, 506, 512, 557, 558, 559, 564], "represent": [16, 19, 20, 26, 81, 82, 84, 85, 88, 101, 120, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 366, 380, 393, 407, 409, 431, 437, 463, 468, 471, 512], "reprocess": 372, "reproduc": [91, 98, 121, 367, 382, 383, 384, 386, 392, 393, 397, 399, 426, 467, 488], "reproject": [171, 185, 186, 188, 194, 197, 198, 362, 366, 372, 380, 383, 390, 411, 418, 426, 428, 432, 468, 469], "reproject_by_imag": [185, 186, 188, 194, 197, 198, 432], "reproject_to_geom": [185, 186, 188, 194, 197, 198, 428], "request": [83, 119, 121, 367, 370, 371, 373, 374, 375, 376, 377, 378, 380, 386, 390, 391, 392, 394, 396, 404, 451, 469, 488, 498], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 80, 81, 82, 83, 85, 86, 88, 92, 99, 101, 102, 106, 107, 108, 112, 120, 121, 124, 129, 139, 140, 146, 154, 162, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 295, 341, 345, 346, 364, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 388, 389, 390, 391, 392, 394, 395, 397, 399, 405, 410, 411, 412, 413, 418, 419, 421, 422, 423, 424, 427, 428, 429, 436, 441, 445, 448, 456, 458, 459, 460, 464, 466, 468, 469, 471, 475, 485, 498, 500, 513], "require_ev": 80, "required_ax": [139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 466], "required_hdu": 420, "required_irf": [16, 80, 440, 441, 444, 445, 447, 484], "required_nam": [187, 189, 190, 195], "required_paramet": [146, 154, 156], "rerun": 381, "resampl": [99, 102, 106, 107, 121, 137, 138, 143, 183, 184, 185, 186, 187, 188, 189, 193, 194, 196, 197, 198, 361, 417, 419, 456, 500], "resample_axi": [121, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 361, 414, 456, 458], "resample_energy_axi": [99, 102, 106, 107, 143, 414, 419, 464], "resample_energy_edg": [439, 500], "resampled_energy_edg": 138, "resampled_map": [185, 186, 188, 194, 197, 198], "rescal": 467, "research": [382, 392], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 102, 106, 107, 224, 263, 367, 414], "reset_data_cach": [99, 102, 106, 107], "reset_to_default": 224, "reshap": [185, 186, 188, 194, 197, 198, 435, 452, 466, 468], "resid": [388, 471], "residu": [71, 98, 99, 102, 106, 107, 162, 377, 378, 382, 409, 414, 420, 427, 445, 464, 465, 476, 496, 509, 559], "resolut": [52, 142, 143, 147, 184, 196, 375, 377, 379, 380, 425, 431, 463, 476], "resolv": [16, 82, 101, 120, 367, 369, 376, 380, 381, 388, 389, 401, 407, 426], "resort": 444, "resourc": [425, 480], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 81, 82, 85, 88, 101, 103, 120, 121, 130, 184, 186, 196, 198, 276, 376, 381, 392, 394, 414, 443, 445, 459, 468, 469, 477, 498, 513, 563], "respond": 392, "respons": [6, 105, 142, 143, 144, 147, 149, 150, 168, 366, 372, 373, 375, 377, 378, 379, 381, 382, 390, 392, 398, 424, 425, 426, 427, 436, 439, 440, 441, 442, 455, 459, 466, 467, 470, 475, 478, 480, 484, 485, 496, 497, 502, 504, 506, 558, 559], "rest": [26, 369, 383, 385, 463, 495], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 470], "restore_statu": [207, 209, 216, 238, 473], "restore_valu": [207, 209, 216, 238], "restrict": [85, 88, 380, 447, 464, 469], "restructur": [367, 381, 382, 383, 385, 387, 393, 396, 411, 417, 418, 419, 420, 422, 431], "result": [16, 46, 72, 82, 84, 85, 88, 89, 98, 99, 101, 102, 106, 107, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 134, 136, 147, 153, 155, 158, 171, 175, 176, 181, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 202, 203, 204, 205, 216, 238, 265, 275, 278, 295, 359, 365, 366, 367, 369, 371, 373, 375, 376, 377, 378, 379, 382, 384, 385, 388, 392, 394, 399, 402, 409, 417, 419, 420, 425, 427, 431, 432, 437, 439, 441, 442, 447, 449, 451, 452, 455, 456, 458, 459, 460, 463, 464, 465, 468, 469, 472, 473, 476, 477, 478, 484, 485, 488, 495, 498, 513, 548, 559, 561, 562], "result2": 470, "result_ecpl": 437, "result_joint": [436, 439, 447], "result_list": 359, "result_log_parabola": 437, "result_minuit": 465, "result_pwl": 437, "result_scipi": 465, "result_stack": 439, "results_joint": 448, "results_prior": 473, "results_simplex": 465, "results_t": 450, "retain": [463, 513], "retriev": [85, 88, 390, 392, 436, 437, 439, 468, 471, 472, 477, 485, 497, 512, 513], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 297, 299, 301, 302, 306, 308, 313, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 337, 338, 347, 348, 349, 350, 351, 354, 356, 357, 359, 361, 362, 372, 376, 377, 378, 379, 380, 381, 389, 390, 393, 394, 410, 411, 414, 417, 420, 426, 428, 439, 441, 449, 453, 458, 459, 463, 464, 465, 467, 468, 469, 471, 473, 486, 490, 512, 513, 545, 562], "return_delta": 325, "return_diff": 325, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [382, 414, 432], "reval": 519, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 85, 88, 89, 97, 189, 238, 468, 493], "review": [369, 374, 375, 376, 379, 380, 382, 383, 385, 386, 387, 389, 390, 392, 394, 427, 428, 512], "revis": 386, "revisit": 218, "rework": 412, "rewrit": [372, 375, 382, 412, 422, 423, 425, 426, 427, 560], "rewritten": [424, 427], "rf": 462, "rgb": [361, 363, 431, 435, 439], "rglob": [80, 451, 475], "rhe": 174, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [366, 382], "rid": 372, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 85, 88, 99, 106, 119, 121, 129, 145, 222, 226, 245, 257, 280, 286, 354, 366, 380, 389, 392, 443, 449, 451, 457, 459, 475, 517, 518, 519, 526, 527, 530, 531, 533, 534, 538, 541, 542, 543, 544, 548, 549, 550, 552, 560, 561, 562, 563], "rightarrow": [523, 563], "rigid": 371, "ring": [102, 118, 160, 163, 170, 184, 185, 186, 372, 375, 382, 385, 398, 407, 411, 413, 423, 424, 425, 426, 434, 446, 450, 469, 480, 496, 499, 508, 511, 512, 559], "ring2dkernel": [160, 170], "ring_background": [434, 445, 446], "ring_bkg_mak": 510, "ring_mak": 445, "ringbackgroundestim": [372, 425], "ringbackgroundmak": [160, 163, 411, 445, 467, 510], "rise": [130, 229, 456, 550], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 369, 392], "rm": [142, 143, 147, 389, 441, 465, 502, 504, 505, 506, 519, 548, 549, 550, 551, 552, 553], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [103, 104, 107, 142, 143, 144, 423, 439], "rmf_ob": 103, "rmffile": 103, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 278, 317, 319, 322, 323, 324, 325, 366], "roadmap": [370, 373, 382, 391, 406, 427], "roberta": [425, 426], "robust": [366, 426], "roi": [66, 382, 463, 478, 559], "roi_max": 382, "role": [425, 467], "rolf": 405, "rolk": 559, "rolke2005": [559, 562], "roll": 476, "room": 376, "root": [19, 20, 26, 119, 120, 129, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 287, 290, 366, 384, 417, 443, 488, 498, 560, 562], "rosillo": 428, "rotang": 452, "rotat": [51, 54, 168, 169, 173, 178, 217, 225, 228, 452, 509, 517, 518], "rough": [71, 382], "roughli": [114, 369, 374, 380, 382, 385, 386, 424, 445], "round": [85, 88, 185, 186, 188, 190, 194, 197, 198, 439, 512], "round_to_edg": [183, 184, 193, 196], "round_trip": [16, 82, 101, 120], "routin": 405, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 88, 134, 142, 303, 337, 360, 381, 390, 393, 428, 431, 442, 452, 453, 463, 465, 468, 475, 477, 478, 486, 495], "row_idx": [66, 85], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 463], "row_label": 360, "row_specifi": [81, 85, 88], "royalblu": 460, "rpovid": 381, "rspec": [66, 463], "rst": [369, 371, 386, 392, 395, 396, 412, 417], "rtd": 426, "rtol": [129, 341, 366], "rtol_ax": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 193, 194, 196, 197, 198], "rtol_wc": 196, "ruben": 425, "rub\u00e9n": 425, "ruiz": [374, 382, 386, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 425, 426, 427], "rule": [85, 88, 253, 271, 306, 392, 468, 512], "run": [16, 80, 81, 82, 86, 90, 98, 100, 101, 105, 114, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 134, 135, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 193, 196, 203, 315, 316, 340, 359, 365, 366, 367, 373, 374, 376, 379, 381, 382, 383, 386, 388, 390, 394, 395, 396, 397, 402, 408, 409, 412, 413, 424, 426, 427, 431, 435, 436, 437, 442, 443, 444, 445, 447, 448, 449, 451, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 485, 486, 496, 497, 498, 500, 505, 507, 509, 510, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "run_fit": [15, 440, 444, 484], "run_id": [476, 486], "run_multiprocess": 500, "runner": [16, 331, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 526, 532, 535, 548, 554, 555], "runtim": [375, 393], "runtimewarn": [441, 451, 478, 548], "rx": 436, "rxj": 436, "rxj1713_2016_250gev": 524, "r\u00e9gi": [372, 375, 376, 380, 381, 383, 385, 387, 388, 389, 390, 391, 393, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "r\u00e9my": [384, 417, 419, 420, 428], "s0167947313003204": 136, "s180": 284, "s2": 264, "s3": 264, "s_0": 500, "s_1": 500, "safari": [85, 88], "safe": [96, 98, 99, 102, 106, 107, 143, 144, 150, 155, 158, 163, 171, 366, 378, 380, 392, 411, 413, 414, 428, 429, 430, 431, 436, 439, 464, 469, 485, 496, 558], "safe_mask": [16, 99, 106, 440, 444, 445, 447, 484], "safe_mask_mak": [161, 436, 460, 467, 507, 509, 510], "safe_mask_mask": [439, 441, 449, 458, 467], "safemask": 477, "safemask_mak": 477, "safemaskconfig": 16, "safemaskmak": [161, 163, 387, 411, 412, 417, 419, 420, 432, 436, 439, 441, 449, 455, 458, 460, 467, 469, 477, 484, 485, 507, 508, 509, 510], "safeti": 392, "sagittariu": [33, 38], "saha": 425, "sai": [72, 371, 385, 560], "said": [366, 371, 373, 477, 478, 560], "sake": [451, 465], "saldana": [218, 219, 431, 526], "saldana21": 526, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 85, 88, 92, 97, 99, 102, 103, 106, 107, 118, 134, 135, 146, 147, 153, 154, 155, 156, 158, 159, 161, 182, 183, 184, 185, 186, 188, 189, 192, 193, 194, 196, 197, 198, 269, 278, 284, 359, 366, 369, 374, 376, 378, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 398, 399, 409, 410, 414, 417, 431, 437, 440, 441, 442, 447, 448, 451, 455, 457, 460, 463, 464, 468, 469, 470, 471, 472, 473, 476, 477, 480, 484, 496, 497, 498, 504, 512, 513, 560], "sampl": [47, 90, 100, 105, 129, 144, 146, 152, 154, 155, 156, 158, 185, 186, 188, 194, 196, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 276, 278, 308, 317, 322, 323, 324, 325, 370, 378, 380, 381, 384, 386, 398, 405, 407, 409, 410, 413, 419, 426, 428, 431, 432, 434, 441, 454, 456, 464, 465, 480, 496, 497, 500, 505, 508, 512], "sample_axi": 317, "sample_background": [100, 105, 411], "sample_coord": [144, 155, 158, 185, 186, 188, 194, 197, 198, 411, 413, 428], "sample_edisp": [100, 105], "sample_powerlaw": 385, "sample_psf": [100, 105], "sample_sourc": [100, 105], "sample_spher": [421, 564], "sample_tim": [215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 417, 428], "sampler": [100, 317, 375, 379, 413, 417, 451], "sampler_kwarg": 90, "saniti": 425, "satisfi": [138, 162, 184, 185, 186, 295, 470, 500], "save": [15, 19, 20, 26, 81, 97, 129, 200, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 366, 374, 382, 390, 394, 447, 448, 451, 465, 469, 470, 477, 497], "savefig": [344, 402], "savez": 200, "saw": 403, "sbpl": [254, 389, 471], "sc": [85, 88], "scalar": [85, 88, 153, 184, 185, 186, 188, 194, 197, 198, 295, 385, 419, 430, 432, 468, 512], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 66, 84, 86, 93, 97, 101, 102, 107, 114, 120, 122, 123, 126, 146, 162, 190, 194, 195, 196, 198, 206, 208, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 264, 265, 266, 273, 276, 294, 307, 308, 309, 325, 347, 348, 349, 359, 367, 375, 380, 381, 384, 389, 412, 417, 418, 426, 429, 430, 431, 440, 443, 452, 453, 456, 457, 458, 459, 462, 463, 466, 467, 468, 471, 472, 473, 475, 484, 486, 488, 526, 547, 548, 549, 550, 551, 552, 553, 554, 555], "scale10": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 394, 536], "scale_method": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 394, 536], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 462], "scaled_featur": 294, "scaled_features_irf": [293, 294, 472], "scaledregulargridinterpol": [67, 218, 412, 427], "scalespectralmodel": [122, 123, 126, 248, 389, 471], "scan": [19, 20, 92, 119, 121, 122, 123, 126, 127, 203, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 381, 390, 417, 453, 458, 473, 498, 500], "scan_max": [19, 20, 122, 126, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 458, 465], "scan_min": [19, 20, 122, 126, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 465], "scan_n_sigma": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 465], "scan_n_valu": [19, 20, 122, 126, 127, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 465, 473], "scan_prior": 473, "scan_valu": [19, 20, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 453, 465], "scargl": [381, 425, 456], "scatter": [216, 238, 387, 443, 449, 517, 518], "scenario": [85, 88, 371, 378, 388, 398, 468, 471, 489, 561], "scengin": [85, 88], "schedul": 375, "schema": [15, 16, 82, 101, 120, 382, 385], "schema_gener": [16, 82, 101, 120], "schema_json": [16, 82, 101, 120], "scheme": [16, 82, 101, 103, 104, 120, 184, 185, 186, 195, 230, 366, 372, 376, 378, 381, 388, 389, 390, 391, 393, 410, 417, 428, 432, 452, 466, 468, 471, 500, 505, 511, 512, 514], "school": 392, "scienc": [136, 185, 186, 188, 197, 198, 373, 375, 379, 382, 383, 386, 392, 403, 425, 426, 442, 448, 459, 468, 471, 472, 475, 476, 480, 488, 500, 534, 559, 560], "sciencedirect": 136, "scientif": [367, 373, 389, 392, 399], "scikit": [134, 366, 380, 383, 386, 426, 469], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 203, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 293, 307, 346, 359, 365, 366, 369, 375, 380, 383, 384, 386, 392, 403, 407, 408, 409, 410, 422, 423, 424, 427, 429, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 557, 562], "scipy_mvn": 201, "scipy_opt": 465, "scitool": 539, "scope": [379, 380, 381, 382, 385, 393, 489], "scratch": [145, 366, 376, 380, 396, 447, 469], "screen": [85, 88, 468, 486], "script": [6, 85, 88, 121, 331, 332, 333, 334, 335, 367, 372, 373, 375, 377, 380, 382, 385, 386, 392, 395, 396, 406, 407, 408, 409, 417, 418, 422, 425, 426, 427, 428, 432, 434, 439, 443, 445, 447, 448, 449, 450, 451, 453, 455, 458, 459, 462, 463, 464, 465, 467, 473, 476, 481, 484, 499, 500, 560], "scriptabl": 393, "scutum": [33, 38], "sdist": 396, "seaborn": 500, "search": [85, 88, 277, 279, 331, 366, 367, 402, 425, 426, 440, 443, 449, 450, 462, 463, 472, 484, 485, 486, 488, 500, 560], "season": 386, "sebastian": 417, "sec": [54, 81, 91, 97, 126, 325], "second": [42, 58, 81, 84, 85, 86, 88, 142, 264, 325, 328, 343, 347, 350, 355, 367, 374, 376, 378, 380, 384, 390, 392, 396, 411, 430, 439, 440, 443, 445, 447, 449, 450, 451, 452, 453, 455, 458, 459, 462, 464, 465, 467, 468, 473, 475, 480, 484, 495, 561, 564], "secpl": [257, 258, 259, 389, 471], "section": [19, 85, 88, 278, 280, 286, 366, 367, 369, 371, 380, 382, 383, 385, 389, 392, 396, 414, 427, 442, 447, 451, 452, 455, 459, 463, 465, 469, 470, 471, 486, 488, 489, 500, 513, 558, 560, 564], "secur": 469, "sed": [115, 118, 119, 120, 121, 123, 129, 194, 218, 365, 382, 384, 390, 398, 405, 424, 437, 453, 463, 464, 484, 486, 498], "sed_fit": [434, 437, 438], "sed_fitting_gammacat_fermi": 386, "sed_typ": [19, 20, 26, 119, 120, 121, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 417, 435, 437, 439, 440, 441, 448, 449, 453, 457, 459, 463, 486, 498, 500, 536], "sed_type_init": [70, 72, 73, 76, 119, 120, 121], "sed_type_plot_default": [119, 121], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 494], "sedov_taylor_end": [52, 53, 494], "seds_20230803": 63, "sedtypeenum": 120, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 65, 80, 81, 83, 85, 87, 88, 92, 96, 97, 98, 99, 102, 106, 107, 114, 116, 118, 121, 122, 123, 126, 128, 129, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 161, 168, 170, 178, 183, 184, 186, 188, 190, 191, 193, 196, 198, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 270, 280, 286, 288, 289, 292, 295, 303, 319, 334, 356, 357, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 422, 423, 424, 425, 426, 427, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 480, 484, 486, 488, 496, 497, 500, 510, 511, 513, 539, 543, 544, 557, 559, 560, 561, 562, 564], "seed": [33, 42, 45, 46, 47, 99, 100, 102, 105, 106, 107, 144, 155, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 239, 246, 252, 264, 267, 278, 317, 318, 319, 322, 323, 324, 325, 366, 425, 451, 536], "seed_photon_field": [239, 536], "seem": [366, 373, 374, 377, 383, 387, 488], "seen": [366, 380, 387, 436, 443, 448, 458, 468, 471, 476], "select": [16, 80, 81, 84, 85, 86, 87, 88, 89, 93, 97, 99, 102, 106, 107, 165, 172, 185, 186, 187, 188, 190, 195, 197, 198, 207, 209, 216, 238, 253, 263, 275, 362, 363, 376, 378, 379, 380, 381, 382, 386, 388, 390, 393, 398, 400, 406, 409, 417, 421, 435, 439, 441, 442, 444, 445, 447, 448, 450, 451, 452, 455, 459, 460, 464, 465, 467, 468, 469, 472, 475, 477, 478, 480, 486, 498, 500, 504, 505, 509, 558, 560], "select_energi": [81, 497], "select_from_geom": [216, 238], "select_map_mask": 407, "select_mask": [81, 216, 238, 417, 470], "select_nested_model": 431, "select_obs_id": [88, 449], "select_observ": [88, 93, 382, 458, 472, 485, 500], "select_offset": [81, 451, 478, 497], "select_paramet": [81, 87, 460, 497], "select_phas": 376, "select_rad_max": 81, "select_rang": 88, "select_region": [81, 87, 216, 238, 380, 409, 417, 451, 452, 460, 470, 486, 497], "select_row_subset": 81, "select_sky_box": 380, "select_sky_circl": [88, 380], "select_tim": [81, 84, 86, 89, 97, 376, 390, 411, 452, 458, 497], "select_time_rang": 88, "selected_energi": 497, "selected_ev": 81, "selected_id": 497, "selected_obs_t": [88, 472, 485], "selected_offset": 497, "selected_region": 497, "selected_tim": 497, "selection_al": [114, 129], "selection_mask": [216, 238, 470], "selection_opt": [16, 114, 116, 117, 118, 122, 123, 125, 126, 127, 128, 129, 417, 439, 440, 444, 445, 447, 448, 449, 453, 457, 458, 459, 460, 469, 477, 484], "selection_vari": 88, "selectionconfig": 16, "selectionslid": [447, 455, 468, 484, 485], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 84, 85, 88, 101, 119, 120, 121, 193, 194, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 253, 254, 256, 257, 258, 259, 262, 266, 366, 367, 377, 378, 380, 383, 389, 390, 393, 394, 413, 468, 471], "semant": [380, 391], "semi": 217, "semiaxi": [217, 225, 228, 517, 518, 519], "semilogi": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 435, 452], "semimajor": 463, "semiminor": 463, "semver": 391, "send": 395, "sens": [366, 373, 376, 380, 382, 385, 386, 387, 445], "sensibl": 472, "sensit": [115, 118, 119, 120, 121, 128, 269, 379, 386, 412, 414, 424, 425, 431, 432, 434, 438, 455, 475, 480, 488, 496, 505, 508, 512], "sensitivity_estim": 435, "sensitivity_t": 435, "sensitivityestim": [115, 406, 412, 435], "sent": 371, "sentenc": [371, 386, 392], "sep": [193, 375, 383, 389, 404, 471], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 70, 71, 72, 73, 74, 76, 77, 78, 81, 88, 184, 193, 196, 291, 355, 366, 367, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385, 386, 387, 388, 413, 417, 423, 425, 426, 430, 431, 442, 445, 447, 449, 455, 459, 463, 470, 471, 472, 489, 497, 505, 506, 517, 518, 522, 523, 536, 559], "septemb": [375, 383, 385, 386, 391], "sequenc": [85, 88, 89, 97, 99, 106, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 207, 216, 238, 295, 396], "sequenti": [372, 439, 485], "seri": [85, 88, 121, 278, 283, 325, 375, 380, 381, 417, 456], "serial": [16, 82, 85, 88, 96, 97, 98, 99, 101, 102, 106, 107, 120, 372, 377, 381, 382, 387, 390, 410, 413, 417, 419, 426, 428, 429, 430, 431, 432, 468, 471, 473, 488], "serialis": [20, 99, 102, 106, 107, 210, 211, 214, 216, 218, 220, 221, 222, 224, 226, 230, 232, 233, 235, 237, 238, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 378, 380, 382, 385, 387, 388, 389, 409, 411, 413, 417, 422, 425, 427, 428, 430, 431, 432, 473, 484, 500, 513, 555], "serializ": [16, 82, 101, 120], "serialize_as_ani": [16, 82, 101, 120], "serialize_method": [85, 88], "serializiaton": 378, "serilis": [26, 212, 213, 215, 217, 223, 225, 227, 228, 229, 231, 240, 242, 246, 250, 251, 252, 253, 255, 262, 265, 267], "sersic": 389, "sersic2d": 389, "sersicspatialmodel": 389, "serv": [85, 88, 366, 371, 378, 382, 390, 396, 419, 462, 504], "server": [388, 398, 400, 480], "servic": 425, "session": [382, 392, 499], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 85, 88, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 116, 118, 119, 120, 121, 122, 123, 125, 126, 129, 136, 142, 144, 155, 158, 161, 162, 165, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 257, 258, 259, 261, 264, 265, 266, 275, 315, 317, 366, 367, 372, 375, 376, 378, 379, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 396, 398, 400, 413, 419, 421, 423, 425, 428, 431, 432, 435, 436, 439, 441, 442, 443, 444, 447, 449, 450, 451, 452, 453, 457, 458, 460, 463, 464, 465, 467, 469, 471, 472, 473, 475, 477, 478, 480, 488, 496, 497, 500, 509, 511, 512, 513, 536, 557, 560, 563, 564], "set_by_coord": [185, 186, 188, 194, 197, 198, 468, 512], "set_by_idx": [185, 186, 188, 194, 197, 198, 468, 512], "set_by_pix": [185, 186, 188, 194, 197, 198, 512], "set_log": 16, "set_model": [15, 388, 440, 444, 457, 484], "set_models_paramet": 388, "set_parameter_factor": [207, 209], "set_parameters_bound": [216, 238], "set_prior": [238, 394], "set_prop_cycl": 435, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 201, "set_titl": [436, 439, 443, 445, 449, 460, 462, 465, 466, 467, 470, 509, 519, 523, 526], "set_unit": [437, 500], "set_xlabel": [435, 436, 439, 442, 460, 465, 472, 473], "set_xlim": [437, 440, 448, 460, 502, 526], "set_xscal": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "set_xtick": [519, 523], "set_ylabel": [435, 436, 439, 453, 460, 462, 465, 472, 526], "set_ylim": [435, 437, 439, 440, 441, 457, 460, 502, 526], "set_yscal": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 453, 462, 502], "set_ytick": [519, 523], "setdefault": 192, "seterr": 366, "setlevel": 449, "setter": [367, 394, 411, 417, 464], "settl": [392, 564], "setup": [13, 368, 369, 370, 373, 378, 379, 383, 386, 394, 423, 427, 480, 560], "setuptool": [418, 560], "sever": [85, 88, 167, 371, 372, 373, 380, 381, 382, 385, 390, 393, 411, 412, 413, 417, 420, 429, 430, 431, 442, 448, 463, 475, 476, 477, 500, 560, 562], "seyfert": 284, "sf": [291, 562], "sgr": 486, "shade": [186, 194, 198, 465, 558], "shall": 369, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 98, 99, 102, 106, 107, 108, 112, 118, 119, 123, 124, 129, 133, 134, 135, 140, 142, 145, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 201, 228, 276, 295, 308, 324, 377, 380, 384, 415, 430, 437, 439, 441, 444, 449, 452, 453, 456, 458, 463, 464, 466, 467, 468, 469, 471, 475, 476, 486, 498, 512, 513, 514, 519, 523], "shape_ax": [184, 196], "share": [185, 186, 188, 192, 194, 197, 198, 366, 371, 378, 381, 385, 388, 399, 417, 419, 431, 447, 448, 469, 470, 500, 560], "sharp": [229, 356, 357, 517], "she": [376, 381], "shear": 380, "sheet": [401, 500], "shell": [52, 53, 78, 250, 251, 377, 382, 389, 398, 400, 434, 471, 514, 523, 525, 560], "shell2": [250, 434, 471, 514, 525], "shell2d": 52, "shell2spatialmodel": [247, 251, 471, 523], "shellspatialmodel": [78, 247, 250, 389, 417, 471, 522], "sherpa": [104, 107, 142, 189, 190, 193, 194, 203, 280, 286, 365, 366, 375, 383, 384, 386, 387, 397, 398, 400, 407, 421, 422, 423, 424, 426, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 513, 534, 561], "sherpa_opt": 465, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 265, 402], "shim": 373, "shini": 351, "ship": [373, 374, 383, 406, 424, 442, 455, 460, 471, 500], "shock": [50, 52, 53, 493], "short": [366, 367, 370, 371, 375, 380, 383, 386, 389, 392, 414, 456, 458, 476, 500, 501, 559, 562, 565], "short_observ": 458, "shortcut": [80, 402, 419], "shorten": 417, "shorter": [284, 366, 367, 380, 386, 391, 414, 442, 458, 471, 560], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 85, 88, 99, 101, 102, 105, 106, 107, 109, 111, 113, 119, 120, 121, 122, 126, 130, 131, 132, 137, 143, 144, 147, 153, 155, 158, 170, 175, 176, 181, 183, 184, 185, 186, 188, 190, 192, 193, 194, 196, 197, 198, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 295, 341, 355, 356, 357, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 391, 392, 393, 395, 396, 398, 400, 401, 402, 407, 409, 431, 441, 447, 450, 451, 452, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 477, 496, 498, 500, 505, 512, 560, 561, 563, 564], "shoulder": 268, "shouldn": [81, 366, 369], "show": [11, 80, 85, 88, 123, 124, 125, 146, 165, 230, 363, 366, 367, 369, 378, 380, 381, 385, 386, 394, 396, 406, 407, 411, 419, 424, 425, 426, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 484, 485, 486, 492, 493, 494, 500, 502, 503, 504, 506, 507, 509, 511, 517, 526, 558, 560, 562, 565], "show_dtyp": [85, 88], "show_in_brows": [85, 88, 449], "show_in_notebook": [85, 88], "show_nam": [85, 88], "show_progress_bar": 500, "show_row_index": [85, 88], "show_unit": [85, 88], "showcas": 473, "shower": [421, 475, 505], "shown": [19, 20, 26, 81, 153, 193, 194, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 361, 366, 373, 383, 384, 385, 393, 394, 396, 411, 413, 436, 439, 447, 449, 450, 451, 452, 456, 459, 460, 467, 470, 471, 472, 473, 475, 485, 497], "showwarn": 366, "si": [81, 184, 193, 196, 216, 238, 268, 513], "side": [196, 198, 277, 279, 366, 380], "sider": 564, "sidereal_tim": 367, "siejkowski": 426, "sig": [359, 561, 562, 563], "sight": 488, "sigma": [19, 20, 30, 32, 48, 49, 118, 119, 120, 121, 122, 126, 127, 129, 134, 135, 142, 143, 147, 153, 154, 155, 158, 201, 203, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 275, 277, 279, 285, 389, 394, 449, 450, 455, 456, 457, 465, 469, 471, 473, 484, 498, 504, 518, 533, 549, 562], "sigma1": 31, "sigma2": 31, "sigma_": [201, 518], "sigma_1": [31, 49, 146, 466], "sigma_10tev": [389, 471], "sigma_1tev": [389, 471], "sigma_2": [31, 49, 146, 466], "sigma_3": [146, 466], "sigma_err": 450, "sigma_gauss": 228, "sigma_laplac": 228, "sigma_m": 518, "sigma_nod": 471, "sigma_to_t": 562, "sigmav": 488, "sign": [206, 208, 277, 279, 369, 392, 413, 428, 498, 562], "signal": [81, 99, 102, 105, 106, 107, 170, 198, 252, 277, 279, 292, 390, 435, 439, 440, 445, 448, 457, 469, 484, 488, 503, 507, 509, 559, 561, 562, 563], "signif_avg": 486, "signific": [75, 114, 118, 119, 120, 121, 128, 129, 136, 137, 275, 277, 279, 283, 356, 357, 364, 371, 372, 373, 374, 381, 382, 386, 387, 390, 392, 413, 414, 422, 425, 426, 431, 432, 434, 435, 439, 440, 446, 447, 448, 449, 450, 456, 457, 460, 463, 465, 477, 480, 484, 486, 496, 498, 500, 505, 512, 558, 559, 560], "significance_lima": 413, "significance_map": [445, 447], "significance_map_off": 445, "significance_mask": 469, "significance_mask_inv": 469, "significancemapestim": 413, "significantli": [417, 451, 475, 559], "signoff": 369, "silent": 428, "silicon": [398, 400], "silvia": 409, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 357, 366, 369, 378, 379, 380, 381, 382, 385, 386, 387, 390, 417, 431, 441, 456, 468, 472, 473, 486, 496, 504, 560], "similarli": [372, 374, 390, 393, 417, 463, 465, 466, 468, 469, 471, 513], "simlat": 278, "simon": [430, 431, 432], "simpifi": 375, "simpl": [50, 52, 134, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 268, 366, 367, 378, 379, 380, 381, 382, 385, 390, 393, 394, 407, 417, 421, 425, 426, 431, 435, 436, 437, 439, 440, 441, 442, 444, 447, 456, 460, 465, 468, 469, 472, 478, 484, 485, 486, 490, 500, 558, 559, 560], "simple_norm": 198, "simple_rebin_lc": 381, "simplefilt": 500, "simpler": [173, 374, 379, 380, 388], "simplest": [435, 439, 456], "simplex": [203, 465], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 88, 162, 203, 207, 209, 366, 380, 381, 390, 399, 428, 431, 435, 436, 449, 464, 469, 470, 471, 486, 513, 560, 562], "simplic": [448, 451, 458, 465, 471, 473, 476], "simplif": [377, 389, 428], "simplifi": [129, 192, 373, 375, 377, 384, 390, 407, 410, 411, 412, 414, 417, 421, 428, 437, 443, 505, 563], "simu": [455, 459, 473], "simul": [45, 80, 81, 86, 90, 99, 102, 105, 106, 107, 109, 144, 155, 158, 278, 325, 376, 379, 382, 386, 393, 394, 398, 405, 409, 411, 413, 419, 422, 424, 425, 426, 431, 432, 434, 438, 444, 447, 449, 454, 460, 461, 470, 473, 475, 480, 490, 496, 498, 505, 508, 557, 558], "simulate_3d": [386, 426, 434, 454, 455], "simulate_dataset": [407, 411, 412], "simulate_observ": 90, "simulated_d": 441, "simulated_data": 90, "simulated_model": 441, "simultan": [394, 459, 464, 471, 473, 496], "sin": [517, 518, 519, 553], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 81, 85, 86, 88, 122, 123, 126, 186, 196, 206, 208, 341, 366, 367, 372, 376, 380, 382, 383, 384, 385, 386, 390, 392, 393, 394, 396, 417, 427, 428, 429, 430, 431, 432, 441, 445, 447, 459, 464, 470, 471, 473, 475, 477, 532, 535, 561, 564], "sine": [252, 377, 434, 514, 556], "sine_model": 553, "sinetemporalmodel": [260, 471, 553], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 80, 85, 86, 87, 88, 90, 92, 118, 122, 123, 126, 129, 143, 144, 155, 157, 158, 161, 165, 167, 172, 175, 176, 181, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 216, 238, 366, 372, 373, 376, 378, 379, 380, 381, 382, 383, 387, 388, 393, 394, 398, 405, 407, 412, 413, 425, 431, 432, 435, 439, 441, 443, 444, 445, 457, 459, 463, 464, 467, 468, 470, 473, 477, 478, 484, 486, 496, 498, 510, 512, 513, 557, 559], "singleobscubemak": 372, "singleobsimagemak": 372, "singleton": 319, "sinha": [378, 381, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432], "sink": 383, "sinu": [252, 471], "sinusoid": [252, 553], "sipocz": [383, 407, 409, 411, 413, 422, 423, 424, 425, 426, 427], "sip\u0151cz": 428, "sit": 369, "site": [331, 396, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 532, 535, 548, 560], "situat": [380, 381, 383, 505], "six": [385, 391], "size": [19, 20, 26, 46, 47, 66, 71, 78, 85, 86, 88, 99, 100, 102, 105, 106, 107, 109, 110, 111, 113, 124, 129, 139, 140, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 158, 160, 161, 167, 168, 169, 172, 173, 174, 182, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 210, 211, 213, 214, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 317, 318, 322, 323, 324, 325, 354, 366, 374, 377, 379, 380, 398, 400, 430, 432, 435, 441, 445, 447, 451, 458, 460, 463, 467, 468, 469, 471, 475, 476, 477, 478, 486, 496, 511, 517, 518, 564], "skeleton": 382, "sketch": 382, "skill": [369, 402], "skimag": 426, "skip": [80, 153, 354, 367, 369, 378, 380, 386, 424, 470], "skip_miss": [80, 425], "sklearn": 366, "sky": [6, 13, 41, 57, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 86, 93, 99, 102, 105, 106, 107, 114, 134, 143, 144, 155, 158, 178, 184, 185, 186, 188, 193, 194, 196, 197, 198, 216, 238, 253, 265, 268, 270, 297, 301, 302, 326, 328, 330, 353, 365, 366, 367, 379, 385, 398, 407, 409, 423, 424, 426, 439, 440, 442, 443, 445, 455, 459, 460, 463, 468, 471, 475, 476, 480, 482, 484, 485, 486, 488, 495, 496, 497, 500, 505, 506, 509, 511, 513, 517, 518, 522, 523, 524, 558, 559], "sky_circl": [88, 93, 458, 472, 485], "sky_model": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 111, 113, 381, 457, 458, 463, 470, 471, 485, 528], "sky_model_pntpwl": 451, "sky_reg": 462, "sky_reg_rec": 462, "sky_region": 87, "skycood": 377, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 88, 91, 93, 99, 102, 106, 107, 119, 121, 123, 125, 143, 144, 150, 155, 158, 168, 169, 171, 173, 175, 176, 178, 179, 181, 182, 184, 185, 186, 188, 191, 193, 194, 196, 197, 198, 199, 212, 213, 216, 217, 225, 228, 238, 240, 242, 250, 251, 253, 255, 261, 263, 265, 293, 294, 327, 328, 342, 362, 367, 377, 380, 390, 393, 435, 436, 439, 441, 442, 445, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 485, 486, 500, 504, 509, 511, 513, 521], "skycoord_from_t": 380, "skycoord_to_pixel_scale_angl": 380, "skycoordconfig": 16, "skycub": [372, 385, 423, 424, 425, 426], "skydiffusecub": [377, 389, 408, 413, 414, 426], "skydiffusemap": [377, 408], "skydir": [16, 81, 99, 102, 106, 107, 108, 112, 144, 155, 165, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 439, 440, 441, 444, 445, 447, 449, 450, 451, 452, 455, 457, 460, 462, 464, 466, 467, 468, 469, 471, 476, 477, 484, 485, 507, 509, 510, 511, 513, 518, 519, 520, 521], "skydirfunct": 488, "skydisk": 408, "skydiskelong": 377, "skyellips": [407, 408, 409, 410], "skygaussian": 407, "skygaussianelong": 377, "skyimag": [372, 385, 423, 424, 425, 426], "skyimagelist": 423, "skymap": [185, 186, 188, 194, 197, 198, 380, 422, 423, 452], "skymap_band": [452, 555], "skymap_region": 452, "skymask": 424, "skymodel": [66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 98, 99, 102, 106, 107, 111, 113, 119, 121, 127, 129, 162, 216, 234, 238, 270, 275, 377, 378, 379, 381, 387, 389, 390, 407, 411, 412, 413, 417, 426, 432, 436, 437, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 455, 457, 458, 459, 460, 463, 464, 465, 470, 473, 476, 484, 485, 495, 496, 498, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557], "skypointsourc": 410, "skyregion": [97, 99, 102, 106, 107, 123, 143, 144, 150, 155, 158, 168, 169, 173, 188, 193, 194, 198, 216, 238, 326, 329, 380, 436, 451, 453, 469, 471, 504, 509, 513], "skyspatialmodel": [377, 426], "slack": [368, 369, 373, 389, 395, 401, 406, 407, 560], "slew": 92, "slice": [81, 85, 88, 97, 99, 102, 106, 107, 116, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 203, 212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 263, 265, 287, 372, 414, 450, 453, 464, 475, 512], "slice_by_coord": [119, 121, 432], "slice_by_energi": [97, 99, 102, 106, 107, 119, 121, 263, 414, 464], "slice_by_idx": [99, 102, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 414, 426, 428, 453, 468, 476], "slice_by_tim": [119, 121], "sliced_ax": 189, "sliced_geom": [183, 184, 193, 196], "slide": [375, 443, 463], "slider": 468, "sliderstyl": [447, 455, 468, 484, 485], "slightli": [114, 190], "slope": [27, 408], "slow": [85, 88, 203, 373, 382, 440, 465, 484, 485], "slower": [85, 88, 186, 366, 374, 384], "slowest": 396, "small": [357, 366, 372, 374, 380, 382, 383, 386, 388, 393, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 457, 458, 468, 473, 475, 476, 477, 478, 518, 522, 523, 559, 560], "smaller": [27, 144, 155, 158, 173, 184, 185, 186, 188, 194, 197, 198, 359, 369, 407, 426, 451, 456, 458, 465, 468, 473, 518], "smallest": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 249, 254, 256, 257, 258, 259, 262, 266, 443], "smooth": [99, 102, 106, 107, 114, 124, 125, 134, 186, 198, 217, 254, 358, 361, 417, 422, 423, 424, 426, 427, 434, 445, 447, 449, 453, 455, 460, 464, 467, 468, 470, 476, 484, 485, 486, 514, 517, 546], "smooth_kernel": [99, 102], "smooth_radiu": [99, 102], "smoothbrokenpowerlawspectralmodel": [210, 248, 389, 412, 413, 471, 541], "sn": [45, 50, 52, 53], "sn_rate": [45, 490], "snippet": [367, 386, 500], "snr": [44, 50, 53, 66, 476, 493, 494], "snr_model": 494, "snrcat": [421, 463], "snrtruelovemcke": [50, 493, 494], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 85, 88, 92, 102, 107, 118, 122, 124, 126, 127, 129, 138, 182, 185, 186, 188, 190, 194, 197, 198, 203, 206, 208, 228, 265, 275, 341, 349, 356, 357, 366, 367, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 397, 398, 400, 402, 407, 409, 417, 427, 429, 430, 436, 439, 441, 443, 444, 449, 450, 451, 455, 457, 462, 463, 465, 468, 469, 471, 473, 475, 476, 477, 480, 485, 500, 509, 513, 519, 523, 560, 561, 562, 563], "social": 392, "soft": 284, "softwar": [185, 186, 188, 197, 198, 380, 381, 383, 392, 393, 396, 468], "solar": 52, "sole": [376, 392], "solid": [183, 184, 193, 196, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265, 268, 382, 405, 407, 408, 409, 426, 445, 467, 468, 475, 503, 509, 559], "solid_angl": [183, 184, 193, 196, 468, 513], "solut": [19, 20, 26, 52, 142, 210, 211, 214, 218, 220, 221, 222, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 264, 266, 367, 369, 371, 373, 374, 379, 380, 382, 383, 384, 386, 388, 390, 394, 399, 496, 498, 500, 563], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 369, 374, 376, 377, 378, 379, 419, 500], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 80, 82, 85, 88, 101, 120, 171, 192, 295, 303, 369, 371, 372, 373, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 405, 407, 409, 417, 418, 420, 422, 424, 425, 426, 431, 435, 436, 437, 439, 441, 443, 444, 445, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 470, 471, 473, 475, 476, 485, 486, 488, 489, 496, 497, 500, 505, 510, 512, 559, 560, 561, 562, 564], "some_class": 366, "some_map": 153, "some_map_convolv": 153, "somehow": [374, 380, 385, 488], "someon": [369, 371, 386], "someth": [85, 88, 366, 367, 368, 369, 371, 374, 380, 383, 384, 386, 396, 398, 400, 442, 463, 513, 560], "sometim": [19, 20, 81, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 344, 366, 369, 373, 380, 386, 396, 398, 465, 559, 564], "somewhat": [383, 475], "somewher": [369, 383, 396], "soon": [369, 380, 396], "sort": [80, 81, 85, 88, 98, 134, 335, 366, 383, 408, 486], "sort_kei": 335, "sortedarrai": [85, 88], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 371, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 396, 398, 403, 405, 407, 411, 412, 417, 418, 423, 424, 425, 426, 431, 432, 434, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476, 477, 478, 480, 482, 484, 485, 488, 489, 494, 496, 497, 498, 500, 505, 508, 509, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 561, 562], "source1": 471, "source2": 471, "source_1": [377, 382], "source_2": 377, "source_42": 382, "source_fermi_3fgl": 437, "source_fermi_3fhl": 437, "source_gammacat": 437, "source_irf_model": 377, "source_librari": 475, "source_model": 539, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 463, 486], "source_name_alia": 56, "source_name_kei": 56, "source_po": [445, 449, 467], "source_population_model": [386, 411], "source_posit": [435, 450, 472], "sourcebackground": 377, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 380, 417, 463, 469, 486, 495], "sourcecatalog1lhaaso": [55, 69, 463], "sourcecatalog2fhl": [55, 70, 463, 495], "sourcecatalog2hwc": [55, 71, 463, 495], "sourcecatalog3fgl": [55, 72, 437, 463, 495], "sourcecatalog3fhl": [55, 73, 437, 463, 470, 486], "sourcecatalog3hwc": [55, 74, 463, 495], "sourcecatalog3pc": [55, 463], "sourcecatalog4fgl": [55, 76, 419, 463, 495], "sourcecataloggammacat": [55, 77, 437, 463], "sourcecataloghgp": [55, 78, 79, 463, 495], "sourcecataloglargescalehgp": 66, "sourcecatalogobject": [69, 77, 78, 79, 463, 495], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject3fgl": 60, "sourcecatalogobject3fhl": 61, "sourcecatalogobject3hwc": 62, "sourcecatalogobject3pc": 63, "sourcecatalogobject4fgl": 64, "sourcecatalogobjectfermibas": [70, 72, 73, 76], "sourcecatalogobjectfermipcbas": 75, "sourcecatalogobjectgammacat": 65, "sourcecatalogobjecthgp": [66, 79, 406, 463], "sourcecatalogobjecthgpscompon": 66, "sourcecatalogobjecthwcbas": [71, 74], "sourceevalu": 377, "sources_flux_map": 443, "sourcetempl": 377, "south": [451, 452], "south_z20_50h": [80, 140, 144, 145, 146, 155, 435, 442, 455, 459, 466, 475], "south_z40_50h": 475, "southern": 475, "space": [85, 88, 99, 102, 106, 107, 195, 198, 261, 262, 278, 306, 324, 365, 366, 376, 382, 388, 460, 464, 465, 468, 512, 536, 545], "span": 472, "spars": [184, 185, 186, 188, 193, 196, 197, 198, 408, 417, 425, 452, 468], "sparsif": 390, "sparsifi": [185, 186, 188, 197, 198], "spatail": 129, "spatial": [1, 46, 48, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 99, 102, 106, 107, 109, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 167, 183, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 207, 209, 212, 213, 216, 217, 224, 225, 228, 238, 240, 242, 247, 250, 251, 253, 255, 261, 263, 265, 275, 359, 361, 366, 372, 375, 378, 379, 380, 382, 384, 385, 390, 398, 406, 407, 409, 410, 411, 412, 414, 417, 425, 426, 428, 431, 432, 434, 437, 440, 442, 444, 447, 448, 450, 451, 452, 453, 455, 459, 460, 463, 464, 467, 470, 474, 476, 480, 484, 488, 489, 496, 498, 500, 501, 511, 512, 525, 557, 558, 559], "spatial_bin_s": 109, "spatial_bin_size_min": 109, "spatial_model": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 111, 113, 129, 217, 224, 253, 263, 275, 381, 411, 443, 447, 449, 450, 451, 452, 455, 457, 458, 463, 464, 470, 471, 476, 485, 516, 517, 518, 519, 520, 521, 522, 523, 524], "spatial_model_point": 451, "spatial_model_registri": 471, "spatial_par": 389, "spatial_typ": 389, "spatial_width": 109, "spatial_width_max": 109, "spatialbackground": 377, "spatialcircleconfig": 16, "spatialconst": 377, "spatialgaussian": 377, "spatialmodel": [69, 70, 71, 72, 73, 74, 76, 77, 78, 212, 213, 217, 224, 225, 228, 240, 242, 250, 251, 253, 261, 263, 265, 377, 389, 411, 426, 430, 463, 471, 485, 488, 495, 514, 557], "spatialtempl": 377, "spatiamodel": 153, "speak": 465, "spec": [78, 107, 366, 380, 422, 447, 452, 463, 475, 485], "spec_model_tru": 460, "special": [85, 88, 228, 366, 376, 378, 380, 381, 389, 392, 393, 406, 444, 451, 463, 464, 470, 471], "specialis": [380, 386], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 84, 85, 88, 91, 99, 102, 107, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 161, 175, 176, 181, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 203, 230, 263, 275, 355, 365, 366, 367, 369, 371, 376, 378, 380, 381, 382, 383, 384, 385, 387, 390, 391, 392, 393, 396, 398, 399, 411, 414, 417, 419, 428, 429, 431, 436, 439, 441, 442, 445, 447, 448, 453, 455, 459, 460, 464, 465, 466, 468, 469, 472, 473, 478, 480, 486, 496, 497, 498, 500, 502, 503, 504, 506, 511, 512, 513, 564], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 85, 86, 88, 89, 93, 99, 101, 102, 106, 107, 114, 116, 119, 120, 121, 122, 124, 126, 127, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 171, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 216, 230, 238, 275, 295, 297, 301, 306, 353, 376, 383, 388, 391, 399, 410, 413, 417, 441, 444, 447, 450, 451, 453, 455, 464, 465, 466, 467, 468, 470, 471, 475, 485, 496, 498, 511], "spectra": [26, 106, 107, 122, 127, 138, 248, 268, 275, 372, 375, 377, 379, 381, 385, 389, 405, 409, 422, 426, 436, 441, 442, 448, 452, 457, 459, 460, 464, 465, 467, 471, 473, 488, 496, 498, 500, 559], "spectral": [1, 19, 20, 26, 52, 53, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 98, 99, 102, 106, 107, 114, 118, 119, 121, 122, 123, 126, 128, 129, 133, 153, 155, 158, 162, 207, 209, 210, 211, 214, 216, 218, 220, 221, 222, 224, 226, 230, 232, 233, 235, 236, 238, 239, 241, 243, 244, 245, 248, 249, 253, 254, 256, 257, 258, 259, 262, 263, 264, 266, 268, 269, 284, 322, 372, 375, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388, 390, 398, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 438, 442, 444, 447, 450, 451, 452, 453, 455, 457, 458, 459, 460, 463, 464, 465, 467, 469, 470, 473, 474, 475, 476, 484, 485, 488, 489, 495, 496, 497, 498, 499, 500, 501, 507, 508, 509, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 561], "spectral_analysi": [434, 438, 439], "spectral_analysis_hli": [434, 438, 440], "spectral_analysis_rad_max": [434, 438, 441], "spectral_cub": 418, "spectral_index": [19, 20, 26, 52, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266], "spectral_index_error": [19, 20, 26, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 431], "spectral_irf_model": 377, "spectral_model": [65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 98, 106, 107, 111, 113, 118, 127, 129, 133, 162, 216, 224, 236, 238, 253, 263, 275, 381, 384, 388, 389, 390, 394, 414, 436, 437, 439, 441, 442, 443, 447, 448, 449, 450, 451, 452, 455, 457, 458, 459, 460, 463, 464, 465, 470, 471, 473, 476, 485, 486, 498, 507, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "spectral_model1": 459, "spectral_model2": 459, "spectral_model_pwl": 451, "spectral_model_registri": 471, "spectral_par": 389, "spectral_point": 382, "spectral_typ": 389, "spectralbackground": 377, "spectralbackgroundmodel": 378, "spectralcompoundmodel": 377, "spectralconst": 377, "spectralevalu": 377, "spectralexponentialcutoffpowerlaw3fgl": 385, "spectralgaussian": [377, 409], "spectralmodel": [19, 20, 70, 72, 73, 76, 77, 78, 98, 114, 118, 119, 121, 123, 128, 133, 153, 155, 158, 162, 210, 211, 214, 216, 218, 220, 221, 222, 224, 226, 232, 233, 235, 238, 239, 241, 243, 244, 245, 249, 253, 254, 257, 258, 259, 262, 263, 266, 268, 377, 378, 381, 384, 390, 414, 417, 424, 431, 463, 471, 485, 486, 495, 514, 557], "spectralregion": 380, "spectraltempl": 377, "spectrum": [19, 20, 26, 71, 74, 95, 97, 98, 99, 102, 103, 106, 107, 114, 119, 121, 123, 126, 128, 130, 153, 155, 158, 163, 167, 171, 172, 185, 186, 188, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 268, 269, 278, 284, 363, 372, 377, 378, 381, 382, 385, 386, 387, 398, 408, 409, 410, 411, 413, 417, 419, 422, 423, 424, 425, 426, 428, 430, 434, 435, 436, 437, 438, 440, 447, 448, 451, 452, 453, 459, 462, 463, 464, 469, 471, 475, 476, 480, 484, 486, 488, 496, 500, 505, 508, 513, 527, 530, 531, 533, 534, 538, 539, 541, 542, 543, 544, 557, 560], "spectrum_analysi": 439, "spectrum_dataset": [138, 378, 460, 464], "spectrum_dataset_1": 378, "spectrum_dataset_2": 378, "spectrum_dataset_empti": [460, 467], "spectrum_dataset_mak": [460, 467], "spectrum_dataset_on_off": 460, "spectrum_fitting_with_sherpa": 386, "spectrum_mak": 435, "spectrum_simul": [386, 434, 438, 442], "spectrumanalysisiact": [382, 410, 424], "spectrumdataset": [95, 96, 97, 99, 102, 107, 126, 128, 138, 166, 167, 171, 172, 224, 387, 408, 409, 410, 411, 412, 413, 414, 417, 420, 435, 436, 439, 441, 442, 449, 458, 459, 460, 465, 467, 473, 496, 509, 561], "spectrumdatasetmak": [163, 411, 417, 435, 436, 439, 441, 442, 449, 458, 459, 460, 467, 509], "spectrumdatasetonoff": [95, 102, 103, 104, 106, 127, 128, 138, 166, 167, 275, 363, 381, 408, 409, 410, 412, 413, 429, 430, 431, 435, 436, 439, 440, 442, 448, 449, 457, 460, 464, 465, 467, 473, 498, 561], "spectrumdatasetonoffstack": 410, "spectrumdatasetsonoff": 378, "spectrumenergygroup": 425, "spectrumevalu": 413, "spectrumextract": [381, 408, 411, 424], "spectrumfit": [408, 424, 425, 426], "spectrumobserv": [378, 408, 424], "spectrumobservationlist": [408, 423], "spectrumobservationstack": 423, "spectrumonoffdataset": 381, "spectrumresult": 408, "spectrumsimul": [409, 423, 426], "spectrumstack": 425, "spectrumstat": 409, "specutil": 380, "speed": [129, 295, 369, 399, 409, 411, 419, 425, 426, 465], "spell": [371, 500], "spend": [379, 386], "spent": [373, 467], "sphere": [47, 323, 405, 407, 512, 517, 518, 521], "spherepointpick": 323, "spheric": [47, 366, 407, 512, 558], "sphericalcircleskyregion": [385, 460, 486], "sphinx": [369, 373, 386, 396, 408, 412, 419, 425, 426, 428, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "sphinx_gallery_conf": 396, "sphinx_gallery_thumbnail_numb": [367, 439, 441, 443, 445, 450, 453, 466, 526], "spill": 467, "spin": [50, 51, 54, 409, 492], "spir": [407, 426], "spiral": [33, 34, 38, 45, 421], "spiralarm": [33, 38, 45, 425, 490], "spiralarm_index": [33, 34, 38], "spirit": 392, "split": [19, 20, 85, 88, 89, 111, 113, 119, 121, 185, 186, 188, 194, 197, 198, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 372, 374, 376, 378, 380, 381, 385, 387, 389, 398, 414, 432, 458, 471, 489, 565], "split_by_axi": [185, 186, 188, 194, 197, 198], "split_template_model": [111, 113], "sporad": 393, "spot": 366, "spread": [80, 86, 146, 155, 158, 366, 388, 414, 435, 443, 466, 505, 559], "spring": [376, 427], "sprint": [374, 375, 379, 382, 383, 384, 385, 387], "spuriou": 134, "sqrt": [19, 20, 30, 31, 32, 66, 99, 102, 106, 107, 114, 119, 121, 124, 129, 185, 186, 188, 190, 194, 197, 198, 201, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 276, 285, 307, 308, 309, 378, 436, 439, 443, 447, 453, 455, 456, 460, 463, 465, 467, 468, 470, 476, 484, 485, 486, 498, 518, 519, 522, 523, 533, 562], "sqrt_space": [385, 411], "sqrt_t": [114, 118, 119, 121, 129, 134, 138, 277, 279, 359, 390, 402, 414, 436, 439, 440, 443, 445, 447, 449, 460, 463, 464, 469, 477, 484, 486, 498, 560, 562], "sqrt_ts_min": [138, 439], "sqrt_ts_threshold_ul": [70, 72, 73, 76, 118, 119, 120, 121, 123, 129, 453, 457, 463, 464, 484, 486], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 99, 102, 119, 120, 142, 143, 144, 150, 155, 158, 161, 182, 196, 198, 263, 282, 381, 384, 414, 469, 473, 488, 498, 512, 560, 561, 562, 563], "squash": [144, 183, 184, 187, 189, 190, 193, 195, 196, 431, 435, 445, 464, 468], "squeez": [435, 466], "sr": [139, 140, 141, 152, 183, 184, 193, 196, 213, 265, 268, 435, 442, 444, 447, 449, 455, 459, 463, 464, 466, 468, 471, 475, 476, 505, 516, 524], "src": [379, 450, 496], "src_above_bkg": 450, "src_event": [451, 452], "src_posit": [451, 452], "srcmap": [184, 185, 186, 188, 197, 198, 468], "ssc": [58, 60, 61, 63, 64, 239, 386, 539], "ssc_model": 239, "st": [53, 465, 476], "stabil": [19, 20, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 391, 455], "stabl": [11, 85, 88, 193, 203, 295, 373, 374, 375, 382, 383, 386, 391, 395, 396, 397, 399, 411, 412, 413, 419, 424, 426, 428, 465, 497], "stack": [16, 81, 84, 89, 97, 98, 99, 101, 102, 106, 107, 118, 119, 121, 143, 144, 150, 155, 158, 161, 185, 186, 187, 188, 193, 194, 197, 198, 201, 207, 209, 263, 336, 366, 378, 381, 382, 388, 393, 407, 410, 411, 414, 417, 422, 423, 428, 429, 431, 436, 440, 444, 448, 449, 457, 460, 464, 465, 467, 472, 473, 484, 485, 497, 498, 507, 510, 559], "stack_dataset": [161, 460, 467], "stack_reduc": [97, 138, 410, 436, 439, 441, 447, 448, 449, 460, 464, 465, 498], "stacked_dataset": [449, 450], "stacked_fit": 439, "stacked_on_off": 445, "stackedobscubemak": 372, "stackedobsimagemak": 372, "stackoverflow": 334, "stage": [369, 382, 445, 447, 459, 464, 496, 559], "stai": 378, "stand": 371, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 84, 85, 88, 93, 186, 198, 203, 269, 294, 348, 349, 366, 367, 369, 371, 375, 377, 378, 379, 382, 384, 390, 392, 393, 402, 409, 410, 426, 432, 435, 440, 442, 445, 448, 450, 452, 455, 458, 459, 462, 465, 468, 471, 472, 473, 475, 478, 480, 484, 496, 499, 504, 512, 558, 559, 560], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [93, 293, 472], "standardis": [338, 339, 351, 425], "standardise_unit": [338, 352], "standpoint": 366, "stapel": 432, "star": [36, 40, 218], "starmap": [311, 315, 316], "start": [16, 53, 81, 84, 86, 87, 88, 89, 91, 97, 126, 134, 195, 215, 216, 223, 227, 229, 230, 231, 238, 246, 252, 264, 267, 366, 367, 369, 371, 373, 374, 375, 376, 379, 380, 382, 383, 391, 392, 394, 395, 396, 400, 401, 402, 403, 405, 410, 419, 422, 423, 424, 425, 426, 431, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 447, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 468, 471, 475, 476, 480, 484, 486, 487, 500, 504, 558], "start_po": [123, 328, 453], "startswith": 366, "stat": [6, 97, 98, 102, 107, 119, 121, 122, 123, 126, 127, 129, 203, 204, 206, 208, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 359, 366, 378, 386, 394, 396, 402, 409, 411, 412, 413, 414, 417, 423, 426, 427, 428, 432, 436, 437, 439, 440, 441, 445, 447, 448, 449, 450, 453, 456, 460, 465, 473, 476, 484, 485, 498, 560, 561, 562], "stat_arrai": [96, 98, 99, 102, 106, 107, 394], "stat_contour": 203, "stat_max": [277, 279], "stat_nul": [119, 121, 122, 123, 126, 127, 129, 277, 279, 432, 443, 453, 498], "stat_per_bin": 378, "stat_profil": [203, 465, 473, 500], "stat_scan": [119, 121, 122, 123, 126, 127, 203, 276, 439, 440, 465, 473, 498], "stat_sum": [96, 97, 98, 99, 102, 106, 107, 394, 430, 431, 447, 459, 464, 470, 500], "stat_surfac": [203, 414, 500], "stat_typ": [98, 99, 102, 106, 107, 412, 447, 459, 464, 470], "state": [16, 45, 47, 195, 203, 366, 372, 376, 378, 382, 386, 388, 390, 440, 484, 505, 526], "stateless": 393, "statement": [366, 369, 373, 430, 432, 489], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 104, 105, 114, 118, 119, 121, 122, 123, 126, 127, 129, 146, 154, 165, 171, 172, 184, 185, 186, 188, 194, 195, 197, 198, 210, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 245, 246, 250, 251, 252, 254, 257, 258, 259, 264, 266, 267, 363, 374, 377, 396, 408, 425], "staticmethod": [377, 389, 394, 471, 473], "statist": [6, 19, 20, 26, 77, 96, 97, 98, 99, 102, 106, 107, 118, 119, 121, 122, 123, 126, 127, 129, 135, 138, 165, 203, 205, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 249, 254, 256, 257, 258, 259, 262, 266, 275, 276, 277, 279, 280, 281, 286, 292, 378, 381, 384, 385, 386, 388, 394, 408, 412, 413, 414, 417, 419, 431, 432, 435, 440, 442, 443, 444, 445, 447, 449, 453, 455, 456, 457, 459, 460, 464, 465, 467, 473, 484, 485, 496, 498, 500, 510, 558, 559], "statu": [19, 20, 26, 119, 121, 202, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 366, 369, 370, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 427, 432, 470, 471], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 294, 442, 456, 476], "stddev": 67, "stderr": 366, "stdout": [303, 366], "steep": 442, "stefan": [421, 432], "step": [19, 20, 26, 118, 122, 126, 127, 129, 203, 204, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 366, 369, 372, 373, 376, 377, 378, 380, 381, 382, 384, 387, 391, 394, 395, 396, 402, 419, 426, 427, 431, 435, 439, 441, 444, 447, 449, 450, 451, 452, 458, 459, 464, 465, 467, 471, 473, 484, 485, 486, 500, 508, 513], "stepprior": 394, "stepsiz": 160, "steradian": 193, "stewart": [129, 287, 443, 559], "stewart2009": [129, 559, 562], "stick": [369, 389, 407, 426, 465, 559], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 373, 374, 376, 379, 380, 383, 385, 386, 387, 390, 391, 393, 395, 396, 424, 425, 426, 471, 473, 486, 498, 522, 523, 560], "stipul": 392, "stone": [366, 386], "stop": [16, 52, 81, 84, 86, 87, 88, 89, 97, 126, 129, 195, 215, 216, 223, 227, 229, 230, 231, 238, 246, 252, 264, 267, 376, 402, 431, 440, 444, 445, 447, 458, 460, 465, 476, 484], "storag": [80, 500], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 68, 80, 81, 83, 84, 85, 88, 119, 120, 121, 124, 126, 153, 166, 167, 185, 186, 188, 194, 197, 198, 203, 204, 206, 208, 216, 238, 349, 366, 369, 372, 374, 375, 376, 378, 379, 382, 384, 388, 390, 392, 393, 396, 414, 417, 418, 436, 441, 442, 451, 452, 456, 460, 464, 465, 466, 467, 468, 469, 472, 475, 476, 477, 478, 486, 496, 497, 500, 505, 506, 507, 512, 513, 536, 557, 558, 560, 564], "store_per_ob": 382, "store_trac": [203, 465], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 116, 118, 119, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 162, 165, 166, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 295, 307, 316, 331, 332, 348, 349, 351, 355, 359, 360, 362, 380, 393, 439, 441, 467, 471, 477], "str3": [85, 88], "straight": [367, 398, 500], "straightforward": [396, 563], "strang": 366, "strategi": [366, 373, 380, 431, 465, 563], "stream": 366, "streil": [394, 430, 431, 432], "strength": [51, 54, 394, 536], "stretch": [185, 186, 188, 194, 197, 198, 356, 357, 361, 443, 447, 453, 455, 467, 468, 470, 476, 484, 485, 486], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 99, 101, 102, 120, 143, 144, 150, 155, 158, 161, 196, 198, 263], "strict_bound": 190, "strictli": [16, 82, 101, 120, 190], "strike": 496, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 88, 90, 101, 119, 120, 121, 122, 123, 126, 129, 146, 152, 154, 156, 161, 184, 185, 186, 188, 190, 191, 193, 194, 196, 197, 198, 204, 206, 208, 216, 238, 295, 313, 355, 366, 379, 380, 383, 385, 392, 393, 405, 409, 417, 419, 440, 463, 469, 471, 484, 512, 513], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 379, 386, 439, 473], "stronger": 473, "strongli": [284, 381, 383, 392, 417, 444, 465, 473], "structur": [85, 88, 196, 291, 370, 371, 372, 375, 377, 379, 382, 386, 389, 392, 393, 404, 410, 411, 413, 417, 420, 432, 434, 453, 464, 467, 468, 469, 471, 480, 487, 488, 495, 497, 501, 512, 513, 560], "stuck": 560, "student": 369, "studi": [46, 268, 291, 379, 382, 390, 399, 426, 436, 437, 448, 449, 450, 453, 455, 458, 459, 465, 468, 471, 475, 490, 500, 509, 561], "stuff": [367, 396, 500], "stuff1": 366, "stuff2": 366, "style": [85, 88, 98, 185, 186, 188, 194, 197, 198, 363, 369, 375, 392, 421, 423, 447, 455, 466, 468, 484, 485, 500, 513], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 102, 106, 107, 111, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 185, 186, 187, 188, 190, 194, 195, 197, 198, 201, 366, 369, 373, 375, 376, 380, 385, 386, 387, 388, 393, 396, 405, 407, 411, 413, 414, 422, 424, 425, 449, 451, 467, 469, 471, 477, 478, 496, 499, 500, 508, 558, 560, 564], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 85, 88, 101, 120, 295, 380, 423, 426, 471, 473], "subcompon": [66, 78], "subfold": [374, 417], "submit": [371, 392], "submodul": [374, 407, 408, 413, 468, 486, 498], "subok": 295, "subpackag": [387, 393, 410, 417, 421], "subplot": [65, 66, 185, 186, 188, 194, 197, 198, 435, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 453, 457, 459, 460, 462, 465, 466, 468, 469, 470, 472, 473, 500, 502, 509, 519, 523, 526], "subplot_kw": [443, 445, 449, 460, 469, 509], "subplots_adjust": 462, "subsect": [386, 468], "subsequ": [283, 375], "subset": [80, 81, 85, 88, 122, 126, 239, 393, 421, 422, 449, 460, 470, 475, 477, 499, 558], "subspac": 380, "substanti": [85, 88], "substitut": 561, "substr": [216, 238], "subtract": 441, "succed": 395, "succeed": 119, "success": [16, 82, 98, 101, 119, 120, 121, 122, 123, 126, 127, 129, 202, 203, 204, 205, 394, 417, 436, 437, 439, 440, 441, 443, 447, 448, 449, 453, 457, 460, 465, 470, 476, 484, 485, 524], "successfulli": [98, 436, 437, 439, 440, 441, 447, 448, 449, 459, 460, 465, 476, 484, 485], "sudo": 399, "suffer": [383, 460], "suffic": 459, "suffici": [369, 372, 379, 392, 431], "suffix": [98, 119, 367, 377, 389, 395, 471, 512, 514], "suggest": [369, 371, 373, 376, 380, 386, 388, 390, 394, 443, 451, 452, 500, 560], "suit": [186, 366, 513], "suitabl": 186, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 99, 102, 106, 107, 121, 122, 123, 125, 126, 127, 129, 136, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 185, 186, 188, 194, 197, 198, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 268, 277, 279, 281, 362, 366, 376, 377, 379, 388, 390, 394, 408, 432, 447, 451, 460, 462, 464, 473, 476, 484, 485, 486, 496, 506, 559, 561], "sum_": 496, "sum_band": [185, 186], "sum_i": 124, "sum_j": 496, "sum_k": 496, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [185, 186, 188, 194, 197, 198, 354, 426, 445, 447, 453, 460, 464, 467, 469, 470, 476, 485], "sum_over_energy_group": [118, 122, 129, 449, 453], "summar": [375, 488], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 277, 279, 303, 307, 317, 340, 353, 367, 369, 386, 404, 436, 440, 458, 459, 464, 475, 484, 500], "summaris": [366, 371, 373, 386], "summat": [277, 279, 372], "summer": 374, "sun": 41, "sunpi": [383, 386, 387], "super": [184, 186, 257, 258, 259, 434, 451, 478, 514, 546, 548], "superexpcutoffpowerlaw3fglspectralmodel": [248, 389, 471, 542], "superexpcutoffpowerlaw4fgldr3spectralmodel": [248, 471, 543], "superexpcutoffpowerlaw4fglspectralmodel": [248, 389, 471, 544], "superfici": 488, "superflu": [376, 460], "supernova": [28, 52, 436, 450, 471, 490, 491], "superpixel": 184, "supersed": [184, 185, 186, 196, 197, 198], "supervisor": 382, "suppli": [19, 20, 26, 85, 88, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 459], "support": [81, 83, 84, 85, 86, 87, 88, 89, 92, 97, 99, 102, 106, 107, 110, 121, 137, 148, 153, 184, 185, 186, 187, 188, 190, 195, 196, 197, 198, 203, 216, 238, 365, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 399, 403, 406, 407, 409, 410, 411, 412, 413, 414, 417, 419, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 440, 442, 444, 447, 449, 455, 459, 462, 463, 464, 468, 473, 475, 476, 477, 478, 484, 499, 505, 512, 513, 555, 557, 558, 560], "suppos": [230, 264, 371, 378, 559, 561], "suppress": [142, 143, 147, 500], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 369, 371, 382, 395, 439, 457, 468, 500, 560], "surfac": [28, 30, 35, 36, 39, 40, 45, 203, 253, 268, 321, 385, 414, 465, 471, 490], "surface_brightness_err": 463, "surprisingli": 380, "surround": [52, 313, 366], "survei": [62, 66, 122, 218, 373, 376, 386, 402, 434, 475, 480, 481, 490, 495, 500, 559], "survey_map": [434, 481, 482], "suspect": 562, "suss": [375, 392], "svg": 366, "swap": 184, "swept": 52, "swh": 392, "swhid": 392, "switch": [275, 366, 373, 376, 419, 423], "switcher": 395, "sy": [366, 401], "syllabl": 500, "symbol": 469, "symmetr": [99, 102, 106, 107, 118, 127, 129, 173, 182, 186, 225, 366, 377, 407, 419, 422, 437, 459, 467, 473, 475, 488, 498, 506, 517, 518, 562], "symmetri": [186, 407], "sync": 426, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 392, "synchrotron": [239, 413, 536], "syntact": [85, 88], "syntax": [16, 85, 88, 367, 382, 385, 411, 428, 560], "synthesi": [490, 491], "synthet": 405, "system": [11, 81, 85, 88, 140, 148, 149, 184, 185, 186, 188, 191, 193, 196, 197, 198, 216, 238, 366, 372, 377, 379, 383, 386, 387, 391, 392, 394, 399, 407, 425, 431, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 511, 512, 558, 560, 564], "systemat": [377, 390, 392, 393, 414, 439, 457, 467, 498, 559, 561], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 66, 68, 81, 82, 84, 85, 86, 88, 101, 114, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 129, 136, 137, 142, 182, 195, 216, 230, 238, 275, 277, 278, 279, 293, 338, 342, 365, 366, 367, 369, 371, 373, 374, 376, 378, 380, 382, 383, 384, 385, 386, 389, 390, 391, 393, 396, 397, 398, 400, 402, 414, 418, 421, 422, 423, 426, 431, 435, 436, 439, 444, 447, 449, 450, 453, 455, 456, 457, 460, 462, 463, 465, 467, 468, 469, 471, 472, 473, 475, 476, 488, 492, 493, 494, 496, 498, 500, 509, 547, 548, 549, 550, 551, 552, 553, 558, 559, 560, 563, 564], "t0": [223, 246, 451, 458, 459, 548, 552], "t1": [85, 88], "t2": [85, 88], "t5": 467, "t_": [52, 53, 283, 505, 548, 549, 550, 551, 552, 553, 561], "t_0": 552, "t_b": 561, "t_decai": [229, 550], "t_delta": [100, 105, 195, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267], "t_i": 283, "t_j": 496, "t_live": [81, 86], "t_max": [215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 379, 390], "t_min": [215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 379, 390], "t_observ": [81, 86], "t_r": 230, "t_ref": [223, 227, 229, 230, 231, 246, 252, 264, 430, 431, 451, 452, 459, 471, 548, 549, 550, 551, 552, 553, 554, 555], "t_rise": [229, 550], "t_start": [84, 497], "t_stop": [52, 84, 497], "ta": 278, "ta2": 278, "ta3": 278, "tab": [142, 371, 447, 453, 457, 473, 509], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565], "table_arrai": [85, 88], "table_associ": 66, "table_bkg_src": 450, "table_class": [85, 88], "table_compon": [66, 463], "table_filenam": 26, "table_from_row_data": 431, "table_hdu": 84, "table_identif": 66, "table_large_scale_compon": [66, 463], "table_model": [266, 389], "table_oth": 336, "tableau": 500, "tableclass": [85, 88], "tablegroup": [85, 88], "tableid": [85, 88], "tableiloc": [85, 88], "tableindic": [85, 88], "tableloc": [85, 88], "tablelocindic": [85, 88], "tablemodel": [377, 427], "tablepsf": [387, 405, 407], "tablepsfcheck": 423, "tabul": 488, "tabular": [471, 545], "tackl": 375, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 82, 85, 88, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 170, 171, 172, 185, 186, 188, 194, 197, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 391, 394, 395, 414, 428, 466, 471, 473, 519, 523], "tail": [475, 560], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 99, 102, 106, 107, 118, 140, 160, 162, 194, 196, 203, 216, 238, 253, 341, 364, 366, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 390, 396, 412, 413, 414, 417, 419, 427, 428, 430, 431, 432, 435, 436, 441, 442, 451, 452, 453, 459, 460, 465, 467, 468, 469, 471, 472, 473, 475, 485, 486, 497, 500, 513, 529, 561, 562, 563], "taken": [15, 27, 85, 88, 99, 102, 106, 107, 119, 121, 145, 153, 172, 178, 180, 194, 195, 198, 203, 286, 367, 371, 375, 379, 430, 439, 447, 448, 460, 466, 469, 470, 475, 486, 496, 498, 509, 510, 562], "talk": [369, 371, 373, 383, 392], "tan": [186, 193, 380, 409, 439, 468, 476, 509], "tandem": 488, "tangent": [168, 213, 217, 225, 228, 240, 250, 251, 255, 261, 265], "tangenti": [184, 513], "tar": [396, 475], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 99, 102, 106, 107, 110, 114, 118, 120, 129, 143, 144, 155, 158, 175, 176, 180, 181, 185, 186, 188, 190, 194, 197, 198, 372, 373, 379, 392, 395, 423, 436, 441, 449, 458, 467, 469, 485], "target_nam": 509, "target_posit": [168, 436, 439, 441, 449, 457, 458, 485], "target_radec": 86, "targetmetadata": 120, "task": [316, 386, 390, 392, 393, 395, 396, 427, 440, 443, 467, 468, 476, 480, 484, 500, 508, 558, 560, 564], "task_nam": 316, "tast": 560, "tau": [26, 51, 54, 394, 462, 526], "tau_0": 51, "taul": [26, 462], "taur": [26, 462], "taylor": [52, 53], "tb00058": 136, "tbl": [85, 88], "tctypn": 451, "tcunin": 451, "tdelta_precis": 291, "team": [371, 375, 383, 386, 388, 392, 404, 425], "technic": [368, 369, 371, 379, 386, 388, 390, 392, 396, 444, 500], "techniqu": [372, 381, 382, 384, 436, 439, 447, 450, 467, 469, 507, 510, 558], "tediou": 463, "tel": [85, 88], "telescop": [80, 81, 83, 88, 92, 101, 145, 379, 380, 393, 398, 402, 403, 451, 457, 460, 472, 475, 476, 478], "tell": 441, "temp": [421, 452], "temperatur": [52, 53], "templat": [16, 26, 57, 69, 82, 101, 102, 107, 111, 113, 120, 162, 170, 184, 185, 186, 188, 189, 190, 196, 197, 198, 204, 216, 230, 238, 261, 262, 263, 264, 265, 266, 272, 274, 287, 290, 371, 377, 378, 382, 389, 414, 428, 431, 432, 434, 442, 443, 445, 452, 468, 469, 470, 471, 488, 509, 512, 514, 525, 532, 535, 540, 546, 554], "template_diffus": [470, 476], "template_model": 451, "templatelightcurvetemporalmodel": 428, "templatend": [261, 262, 471], "templatendspatialmodel": [247, 471], "templatendspectralmodel": [26, 248, 419, 430, 471], "templatenpredmodel": [234, 417], "templatephasecurvetemporalmodel": [260, 428, 471, 554], "templatespatialmodel": [66, 247, 388, 389, 414, 428, 429, 431, 432, 451, 470, 471, 476, 524], "templatespectralmodel": [216, 238, 248, 270, 389, 471, 476, 496, 532, 535, 540, 545], "templatetemporalmodel": 428, "tempo2": [460, 500], "tempor": [207, 209, 215, 216, 223, 227, 229, 230, 231, 238, 246, 252, 253, 260, 264, 267, 283, 377, 379, 389, 390, 410, 412, 413, 414, 419, 428, 430, 431, 432, 434, 437, 440, 442, 447, 448, 449, 451, 454, 455, 456, 463, 464, 470, 476, 480, 484, 496, 497, 500, 501, 505, 508, 512, 556, 557, 559], "temporal_model": [253, 379, 451, 452, 459, 471, 547, 548, 549, 550, 551, 552, 553, 554, 555], "temporal_model1": 459, "temporal_model2": 459, "temporal_model_map": 452, "temporal_model_registri": 471, "temporal_typ": 389, "temporalbackground": 377, "temporalmodel": [215, 223, 227, 229, 230, 231, 246, 252, 253, 264, 377, 390, 413, 428, 430, 431, 514], "temporari": 480, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377], "ten": [372, 386], "tend": [366, 519], "tension": 456, "tensorflow": [384, 386], "tent": 395, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 231, 288, 292, 369, 371, 373, 375, 376, 380, 383, 386, 391, 393, 415, 419, 428, 443, 465, 466, 560, 562, 563], "termin": [85, 88, 98, 382, 397, 398, 399, 400, 401, 436, 437, 439, 440, 441, 447, 448, 449, 460, 465, 476, 484, 485, 560], "terrestri": 564, "terrier": [372, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 393, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "test": [6, 91, 98, 111, 113, 116, 118, 119, 121, 122, 123, 126, 127, 129, 135, 153, 155, 158, 185, 186, 188, 194, 197, 198, 230, 275, 276, 277, 279, 282, 325, 340, 341, 342, 343, 344, 345, 346, 367, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 391, 394, 395, 396, 406, 408, 409, 411, 413, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 431, 436, 442, 443, 452, 455, 457, 458, 459, 464, 466, 498, 500, 504, 510, 554, 555, 559, 562], "test2": 459, "test_aeff3d": 466, "test_edisp": 466, "test_events_with_gti": 497, "test_gti": 497, "test_person_txt": 366, "test_plot": 366, "test_psf": 466, "test_someth": 366, "test_using_data_fil": 345, "test_using_scipi": 346, "testcod": 367, "testoutput": 367, "testpar": 394, "teststatisticnest": 431, "tev": [16, 19, 20, 26, 44, 52, 53, 65, 66, 70, 73, 81, 93, 98, 99, 102, 106, 107, 108, 112, 114, 119, 121, 122, 134, 135, 139, 140, 142, 144, 145, 146, 147, 152, 153, 154, 155, 156, 158, 165, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 253, 254, 256, 257, 258, 259, 262, 266, 268, 269, 293, 294, 315, 361, 367, 377, 389, 390, 393, 394, 402, 435, 436, 437, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 494, 497, 498, 504, 505, 507, 509, 510, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558], "tevcat": [418, 463], "tevcat_nam": 70, "tevpi": 405, "tevtevtev1": 449, "tex": 367, "texliv": 367, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 102, 107, 119, 121, 129, 250, 251, 294, 355, 367, 374, 382, 392, 396, 440, 460, 466, 475, 484, 486, 517, 518, 519, 522, 523, 527, 543, 550, 560, 562], "textcolor": 355, "textkw": 355, "th": 190, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 75, 85, 88, 128, 146, 147, 154, 156, 162, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 275, 284, 344, 359, 366, 369, 371, 372, 373, 376, 379, 380, 381, 384, 385, 390, 392, 393, 396, 425, 428, 429, 430, 432, 435, 436, 447, 448, 451, 456, 457, 458, 465, 467, 469, 472, 473, 496, 513, 518, 519, 560, 562], "thank": [390, 411, 412, 417, 419, 467, 500], "thaw": 470, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 85, 88, 92, 101, 105, 109, 120, 126, 130, 159, 264, 283, 315, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 403, 414, 417, 419, 431, 432, 436, 437, 441, 462, 464, 465, 469, 470, 471, 472, 473, 475, 478, 488, 497, 498, 500, 505, 512, 513, 558, 559, 560, 561, 562, 564], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 85, 88, 97, 101, 120, 207, 209, 216, 238, 295, 366, 367, 369, 371, 373, 374, 380, 382, 385, 392, 393, 395, 396, 402, 409, 425, 436, 437, 439, 442, 444, 447, 448, 450, 452, 457, 463, 464, 465, 468, 469, 471, 473, 475, 477, 480, 485, 497, 500, 509, 560, 562], "theme": [419, 426], "themselv": [85, 88, 382, 467, 469, 507], "theorem": [275, 498, 562], "theoret": 473, "therefor": [102, 372, 376, 379, 380, 381, 385, 387, 389, 399, 417, 436, 457, 460, 465, 468, 469, 472, 473, 486, 498, 562, 563], "thereof": 377, "thermal": [19, 536, 559], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 146, 152, 154, 156, 160, 168, 182, 191, 296, 299, 366, 414, 441, 476, 486, 517, 518, 522, 523], "theta2": [172, 182, 364, 425], "theta2_axi": 478, "theta2_max": 364, "theta2_min": 364, "theta2_t": 478, "theta_0": [33, 38], "theta_squared_axi": [182, 478], "thew": 463, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 66, 67, 68, 80, 81, 82, 83, 84, 85, 86, 88, 97, 99, 100, 101, 102, 105, 106, 107, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 165, 167, 168, 169, 171, 173, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 206, 208, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 275, 277, 279, 285, 295, 303, 313, 316, 319, 324, 325, 341, 344, 351, 353, 355, 356, 357, 361, 363, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 488, 489, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564], "thick": 363, "thin": [56, 307], "thing": [366, 369, 371, 374, 380, 381, 382, 383, 386, 390, 396, 405, 424, 441, 444, 459, 460, 469, 476], "think": [371, 383, 384, 386], "third": [61, 62, 85, 88, 367, 417, 463, 465, 468, 480, 486, 495], "thoma": [392, 425], "thorough": [468, 488], "those": [15, 81, 171, 185, 186, 188, 194, 197, 198, 203, 207, 209, 216, 238, 303, 355, 366, 369, 371, 373, 375, 380, 382, 385, 386, 387, 388, 389, 391, 396, 397, 398, 400, 401, 411, 414, 457, 465, 468, 469, 470, 472, 480, 486, 498, 500, 509, 564], "though": [15, 369, 374, 380, 381, 382, 384, 386, 440, 471, 484], "thought": [371, 380], "three": [85, 88, 153, 278, 366, 375, 378, 380, 392, 449, 451, 456, 457, 468, 473, 480, 505, 512, 559], "threshold": [66, 99, 106, 114, 119, 120, 121, 129, 134, 135, 142, 143, 147, 160, 171, 195, 275, 355, 356, 357, 380, 407, 413, 414, 435, 439, 441, 443, 449, 453, 457, 463, 464, 465, 467, 469, 475, 484, 496, 498], "threshold_alpha": 160, "through": [41, 85, 88, 294, 295, 363, 369, 371, 379, 380, 386, 390, 391, 399, 403, 417, 428, 452, 456, 465, 467, 468, 469, 470, 476, 477, 500, 505, 512, 559, 562], "throughout": [13, 373, 375, 376, 380, 382, 424, 463], "throught": 453, "thrown": 471, "thu": [366, 373, 380, 383, 384, 386, 421, 435, 444, 445, 449, 451, 557, 563], "thumbnail": 417, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 186, 375, 459], "tibaldo": 422, "tick": [430, 431], "tick_param": 435, "ticker": 355, "tight_layout": [465, 473, 519, 523], "tightli": 385, "tikonov": 394, "tild": [184, 196], "tile": [184, 186], "tilt": [244, 263, 377, 388, 389, 394, 406, 412, 444, 447, 448, 451, 452, 455, 464, 471, 476, 484, 485, 507, 513, 520, 540, 545], "tilt_prior": 394, "tim": 432, "time": [6, 19, 20, 50, 51, 52, 53, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 97, 98, 99, 100, 101, 102, 105, 106, 107, 119, 120, 121, 126, 129, 130, 137, 161, 167, 178, 180, 185, 186, 187, 188, 189, 194, 195, 197, 198, 203, 206, 208, 215, 218, 223, 227, 229, 230, 231, 246, 252, 253, 264, 267, 278, 283, 291, 325, 343, 347, 348, 349, 350, 366, 367, 369, 371, 372, 373, 374, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 396, 398, 402, 406, 407, 410, 411, 412, 414, 417, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 439, 441, 442, 443, 445, 447, 449, 450, 452, 453, 455, 457, 460, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 484, 485, 486, 492, 493, 494, 496, 497, 498, 500, 505, 508, 513, 518, 519, 526, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563], "time_axi": [185, 186, 188, 189, 194, 197, 198, 278, 452, 468, 513], "time_bin": 381, "time_bin_end": 381, "time_bin_s": 381, "time_bin_start": 381, "time_bound": 195, "time_box": 88, "time_column": 390, "time_delta": [84, 195, 347, 350], "time_edg": [195, 456, 468], "time_filt": 87, "time_format": [121, 195, 431, 459], "time_interv": [16, 81, 84, 86, 89, 126, 440, 444, 445, 447, 452, 457, 458, 484], "time_map_axi": [195, 468], "time_map_axis_contigu": 468, "time_max": [97, 119, 121, 195, 380, 381, 382, 452, 457, 463, 468], "time_mid": [195, 456], "time_min": [97, 119, 121, 195, 380, 381, 382, 452, 457, 463, 468], "time_rang": [88, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 452, 547, 548, 549, 550, 551, 552, 553, 554, 555], "time_ref": [81, 83, 84, 88, 91, 189], "time_ref_default": 84, "time_ref_from_dict": 564, "time_relative_to_ref": 564, "time_seri": 278, "time_start": [83, 84, 88, 381], "time_step": 381, "time_stop": [83, 84, 88, 381], "time_sum": [84, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267], "timedelta": [85, 88, 91, 195, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 325, 347, 350, 564], "timedelta64": [85, 88], "timelin": [371, 373, 425], "timemapaxi": [121, 137, 187, 189, 417, 432, 456, 458, 459], "timerangeconfig": 16, "timeref": 451, "timescal": [130, 223, 284, 391, 456], "timeseri": 381, "timesi": [91, 429, 431, 451], "timestamp": 366, "timeunit": 451, "timmer": 278, "timmer1995": 278, "tini": [449, 475], "tip": 500, "titl": [371, 453, 462], "tiziani": 423, "tke": 476, "tm": [85, 88], "tmax": 381, "tmid": [86, 431, 449, 467, 472, 485], "tmin": 381, "to_2d": [140, 478], "to_3d": [139, 430, 432], "to_bands_hdu": [183, 184, 193, 196], "to_binsz": [184, 193, 196, 417], "to_binsz_wc": 193, "to_contigu": [195, 468], "to_counts_hdulist": 104, "to_cub": [183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 414, 445, 513], "to_dict": [19, 20, 26, 96, 98, 99, 102, 106, 107, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 393, 473], "to_edisp_kernel": [147, 504], "to_edisp_kernel_map": [144, 417, 504], "to_energy_dependent_table_psf": 425, "to_even_npix": 196, "to_fits_head": 83, "to_fram": 191, "to_gti": [195, 432], "to_hdu": [185, 186, 197, 198], "to_hdulist": [99, 102, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 185, 186, 192, 193, 194, 197, 198, 468], "to_head": [82, 101, 120, 184, 187, 189, 190, 195, 196, 393], "to_html": 366, "to_imag": [99, 102, 106, 107, 142, 143, 153, 155, 158, 183, 184, 193, 196, 388, 411, 412, 435, 445, 449, 464, 476, 510, 513], "to_json": [16, 82, 101, 120], "to_map": [119, 121], "to_map_dataset": [102, 107], "to_mask": [99, 102, 106, 107, 462], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 417, 463], "to_node_typ": 190, "to_nsid": [184, 186], "to_odd_npix": 196, "to_panda": [85, 88], "to_parameters_t": [216, 238, 436, 439, 440, 441, 444, 447, 465, 485], "to_pixel": [380, 439, 449, 462, 467, 471, 509, 517, 518, 519], "to_polygon": 380, "to_psf3d": [146, 154, 156], "to_python": [16, 82, 101, 120], "to_region": [212, 213, 216, 217, 225, 228, 238, 242, 250, 251, 265, 380, 411, 471, 517, 518, 519], "to_region_map_dataset": [99, 102, 106, 107, 464], "to_region_nd_map": [143, 144, 150, 155, 158, 186, 194, 198, 414, 417, 476], "to_region_nd_map_histogram": [198, 431], "to_sed_typ": 390, "to_sherpa": [411, 425, 426], "to_spectrum": 417, "to_spectrum_dataset": [97, 99, 102, 106, 107, 388, 410, 412, 460, 464, 473], "to_st": 431, "to_str": [431, 435], "to_swap": [184, 185, 186], "to_tabl": [98, 121, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 189, 190, 194, 207, 209, 230, 417, 437, 439, 440, 449, 453, 455, 457, 459, 463, 471, 486, 498], "to_table_hdu": [81, 84, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 189, 190, 468], "to_table_psf": 423, "to_template_sky_model": [216, 238], "to_template_spectral_model": [216, 238, 389], "to_unit": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 185, 186, 188, 194, 197, 198], "to_wc": [185, 186], "to_wcs_geom": [184, 193, 513], "to_wcs_til": [184, 186], "to_yaml": [16, 82, 101, 120, 204, 216, 238, 377, 393, 471, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "tob": 440, "todai": 392, "todo": [13, 77, 85, 88, 96, 153, 266, 367, 390, 408, 475, 490, 491, 564], "tof": 152, "togeth": [97, 99, 102, 106, 107, 122, 126, 216, 238, 363, 366, 379, 383, 386, 397, 409, 445, 447, 448, 453, 458, 464, 465, 467, 470, 471, 472, 473, 478, 485, 496, 497, 560], "tol": 465, "toler": [84, 97, 126, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 343, 465], "tolist": 465, "toml": 414, "ton": [284, 475], "too": [366, 371, 372, 416, 417, 430, 431, 432, 465, 469], "took": 391, "tool": [6, 13, 185, 186, 188, 197, 198, 365, 369, 373, 375, 377, 379, 382, 383, 386, 392, 403, 411, 422, 425, 426, 450, 453, 459, 464, 465, 468, 472, 475, 476, 488, 500, 534, 558, 559], "toolbox": [382, 422], "top": [106, 107, 353, 362, 366, 371, 382, 386, 388, 399, 425, 441, 443, 449, 453, 456, 457, 459, 463, 467, 486, 500, 513, 558, 560, 564], "top_five_ts_3fhl": 486, "tophat2dkernel": 118, "topic": [371, 375, 386, 394, 486], "total": [51, 66, 96, 98, 99, 102, 106, 107, 122, 123, 126, 127, 133, 165, 180, 184, 204, 215, 223, 227, 229, 230, 231, 246, 252, 264, 267, 292, 374, 390, 394, 398, 400, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 476, 479, 481, 483, 484, 485, 486, 487, 490, 496, 500, 505, 515, 525, 536, 546, 556, 559], "total_jfact": 462, "total_jfact_decai": 462, "total_model": 377, "total_obstim": 467, "total_stat": [204, 205, 465, 561], "touch": [84, 406], "tour": 480, "toward": [313, 373, 380, 386, 427], "tox": [331, 367, 369, 428, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 524, 532, 535, 548], "tqdm": 500, "trace": [203, 204, 205, 414, 465], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366], "track": [83, 91, 366, 375, 381, 392, 419, 470], "tracker": [369, 380], "tradition": [471, 561], "train": 391, "traitlet": [382, 393], "traittyp": 393, "transfer": 393, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 83, 91, 153, 187, 189, 190, 195, 196, 216, 238, 297, 301, 324, 329, 366, 380, 382, 390, 394, 405, 407, 423, 426, 443, 449, 467, 473, 512, 517, 518, 564], "transit": [27, 356, 357, 373, 406, 407, 425, 477], "transit_map": 477, "transit_numb": 477, "transitsmap_crab": 477, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 382, 498], "transpar": 381, "transport": 468, "transpos": 426, "trapezoid": [139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 271, 306], "trapz": 306, "trapz_loglog": 412, "trash": 408, "travi": [411, 413, 417], "treat": [92, 398, 430, 431, 439, 451, 563], "treatment": [417, 447, 559], "trend": 451, "tri": [374, 380], "tributor": 392, "tricki": 380, "trigger": [344, 366, 395, 477], "trim": [99, 102, 143, 144, 150, 155, 158, 161, 196, 198, 263], "tripl": 146, "trivial": 373, "troubl": 560, "troubleshoot": [398, 399, 400], "trough": 456, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 78, 80, 81, 82, 84, 85, 86, 88, 90, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 118, 119, 120, 121, 122, 126, 127, 129, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 165, 171, 172, 175, 176, 178, 179, 181, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 292, 295, 303, 304, 307, 325, 335, 337, 354, 359, 363, 366, 372, 379, 380, 381, 382, 389, 390, 393, 408, 412, 413, 424, 426, 427, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 482, 484, 485, 486, 490, 496, 498, 500, 505, 510, 512, 513, 516, 517, 518, 521, 522, 524, 545, 559, 562, 564], "truelov": 53, "truncat": [129, 313, 417], "truncation_valu": [280, 286], "trust": [16, 82, 101, 120], "trustworthi": 394, "truth": 473, "try": [16, 82, 101, 120, 185, 186, 188, 194, 197, 198, 366, 367, 376, 380, 386, 395, 396, 402, 407, 437, 439, 441, 451, 452, 457, 463, 465, 468, 486, 560], "ts2": 278, "ts3": 278, "ts_image_estim": 449, "ts_scan": [119, 121], "ts_threshold": [137, 275], "ts_threshold_ul": [460, 498], "ts_to_sigma": [450, 562], "tsimageestim": 425, "tsmap_est": 359, "tsmapestim": [115, 136, 359, 387, 390, 412, 413, 415, 417, 431, 443, 449, 500], "tstart": [86, 88, 379, 381, 442, 451, 455, 458, 459, 475], "tstop": [86, 379, 381, 442, 451, 455, 458, 475], "tt": [84, 91, 348, 349, 392, 452, 458, 564], "tth_sec3": 190, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 81, 82, 85, 86, 88, 98, 99, 101, 102, 106, 107, 120, 124, 129, 139, 140, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 158, 161, 166, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 263, 266, 277, 279, 282, 307, 317, 324, 366, 468, 512], "turn": [81, 86, 367, 369, 380, 475, 557], "tutori": [80, 96, 116, 126, 128, 170, 366, 369, 370, 375, 378, 379, 380, 381, 382, 383, 384, 387, 396, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 500, 501, 503, 512, 557, 560], "tutorials_jupyt": [395, 480], "tutorials_python": 480, "tweak": [382, 417, 468], "twice": [118, 512, 563], "twinx": 435, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 88, 98, 99, 102, 106, 107, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 154, 156, 157, 161, 166, 168, 184, 185, 186, 187, 188, 190, 193, 194, 196, 197, 198, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 325, 334, 355, 360, 363, 365, 366, 367, 369, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 390, 391, 392, 394, 395, 396, 398, 419, 425, 427, 431, 440, 441, 447, 448, 450, 453, 459, 463, 464, 465, 466, 468, 469, 471, 472, 473, 475, 477, 484, 485, 490, 496, 497, 498, 500, 509, 512, 513, 528, 562, 563], "txt": [121, 391, 393, 470, 476], "tyler": 419, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 85, 87, 88, 93, 96, 97, 98, 99, 101, 110, 118, 119, 120, 121, 123, 129, 159, 165, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 295, 325, 372, 375, 376, 377, 378, 380, 381, 382, 385, 389, 390, 392, 394, 396, 397, 402, 410, 417, 423, 424, 425, 431, 436, 437, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 484, 485, 486, 488, 498, 500, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560], "typeerror": [16, 82, 101, 120, 295, 380, 390, 394], "typic": [119, 372, 375, 377, 384, 388, 389, 390, 391, 393, 398, 399, 436, 441, 445, 453, 455, 457, 458, 463, 464, 466, 469, 471, 472, 488, 495, 496, 497, 505, 509, 558, 559], "typing_extens": [16, 82, 101, 120], "typo": [366, 403, 429, 430], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 81, 83, 85, 88, 93, 99, 102, 106, 107, 111, 113, 114, 119, 121, 123, 125, 129, 134, 135, 142, 144, 153, 183, 184, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 210, 211, 214, 218, 220, 221, 222, 226, 230, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 268, 269, 278, 293, 294, 295, 315, 361, 366, 369, 373, 374, 375, 381, 382, 383, 384, 389, 390, 393, 394, 406, 407, 408, 425, 426, 427, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 490, 497, 498, 500, 502, 507, 509, 510, 513, 517, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554], "u03c3": 450, "u18": [33, 38], "uc": [85, 88], "ufunc": [185, 186, 188, 194, 197, 198, 441], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 81, 86, 114, 122, 145, 235, 268, 269, 278, 285], "ul": [66, 118, 119, 121, 122, 123, 126, 127, 129, 276, 448, 453, 459, 463], "ultim": 366, "un": [378, 392, 414, 470], "unambigu": 471, "unbehaun": 432, "unbin": [378, 379, 426], "unboundlocalerror": 366, "uncertaint": 384, "uncertainti": [52, 99, 102, 106, 107, 277, 279, 370, 383, 424, 437, 439, 460, 465, 473, 485, 558, 559, 561], "unchang": [99, 102, 106, 107, 111, 113, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 425], "unclear": [366, 376, 377, 383, 393], "uncom": [382, 475], "undefin": 563, "under": [71, 88, 136, 366, 370, 375, 383, 392, 426, 427, 440, 480, 484, 496, 562, 563], "underestim": 498, "underflow": 195, "underli": [85, 88, 193, 379, 437, 463, 468, 473, 486, 488, 497, 500, 509, 512], "underscor": 366, "understand": [382, 403, 411, 412, 436, 439, 440, 441, 444, 451, 452, 456, 458, 459, 468, 469, 470, 475, 484, 485, 488, 560], "undertak": 386, "unexpect": 477, "unfold": 559, "unfreez": [19, 20, 26, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 536], "unfreeze_al": [207, 209, 470], "unfrozen": 507, "unheard": 560, "uni": 394, "uni_prior_stat_sum": 473, "unicod": [85, 88, 366], "unid": 66, "unidimension": 189, "unif": 411, "unifi": [85, 88, 370, 375, 380, 406, 409, 411, 412, 413, 414, 417, 426, 427, 559], "uniform": [153, 203, 324, 366, 375, 377, 378, 388, 390, 394, 408, 409, 413, 417, 436, 468, 473, 558], "uniform_filt": [124, 198], "uniformli": [379, 498], "uniformprior": [394, 473], "uninstal": 365, "union": [82, 84, 87, 99, 101, 102, 120, 193, 330, 380, 381, 392, 393, 409, 496], "uniqu": [85, 88, 97, 142, 184, 185, 186, 187, 188, 194, 196, 197, 198, 207, 209, 216, 238, 359, 376, 377, 378, 379, 389, 392, 412, 440, 464, 471, 477, 513, 557], "unique_id": 471, "unique_paramet": [207, 209], "uniquifi": [85, 88], "unit": [6, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 65, 81, 83, 85, 86, 88, 93, 98, 99, 102, 104, 106, 107, 108, 111, 112, 113, 114, 119, 121, 123, 125, 129, 134, 135, 139, 140, 141, 142, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 165, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 206, 208, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 278, 293, 294, 295, 325, 337, 338, 339, 341, 350, 351, 352, 355, 356, 357, 361, 367, 375, 377, 380, 382, 384, 389, 390, 394, 406, 407, 409, 417, 419, 425, 426, 428, 429, 430, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 490, 492, 493, 494, 497, 498, 500, 502, 504, 505, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559], "unit_string_format": [431, 435], "unitbas": 295, "uniti": [124, 187, 265, 429, 519], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 224, 263], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [435, 442, 444, 447, 449, 455, 459, 475], "univers": [185, 186, 188, 194, 197, 198, 559], "univsers": 20, "unknown": [279, 443, 465, 559, 561, 562], "unless": [90, 92, 122, 123, 126, 129, 161, 295, 365, 372, 391, 393, 466], "unlik": [85, 88, 275, 373, 384], "unmaintain": 407, "unmask": [85, 88], "unnam": [85, 88, 191], "unnecessari": [417, 428, 447], "unneed": 431, "unphys": 563, "unrealist": 366, "unrel": 564, "unreli": 475, "unsaf": 366, "unstabl": [366, 475], "unsupport": 383, "untar": 475, "until": [366, 369, 373, 380, 391, 424], "unus": [382, 409, 411], "unusu": 371, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 123, 125, 129, 146, 152, 154, 156, 193, 295, 366, 367, 370, 371, 373, 374, 375, 378, 380, 382, 383, 384, 386, 388, 392, 394, 396, 397, 398, 400, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 417, 421, 423, 424, 425, 426, 427, 439, 440, 447, 450, 451, 473, 475, 476, 513, 560], "upcast": 295, "upcom": [374, 375], "updat": [15, 16, 82, 85, 88, 100, 101, 105, 120, 192, 206, 208, 216, 238, 275, 315, 334, 366, 369, 371, 372, 373, 374, 375, 378, 383, 388, 390, 392, 393, 395, 396, 398, 399, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 423, 424, 425, 426, 428, 431, 432, 468, 471, 511, 512, 564], "update_config": 15, "update_forward_ref": [16, 82, 101, 120], "update_from_dict": [206, 208], "update_link_label": [216, 238], "update_parameters_from_t": [216, 238], "upgrad": [184, 365, 391, 399], "upload": [383, 395, 475], "upon": [99, 102, 106, 107, 375, 444, 470, 475, 496], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 75, 78, 98, 118, 119, 120, 121, 122, 123, 126, 127, 129, 142, 190, 195, 203, 210, 211, 214, 215, 218, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 235, 239, 241, 243, 244, 245, 246, 249, 252, 254, 256, 257, 258, 259, 262, 264, 266, 267, 276, 277, 279, 393, 402, 413, 417, 424, 425, 426, 432, 439, 453, 457, 464, 467, 484, 496, 498], "upper_error": 121, "upsampl": [155, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 408, 428], "upsample_geom": 155, "upstream": [366, 369], "upward": [277, 279], "url": 374, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 64, 68, 69, 70, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 276, 278, 280, 291, 293, 295, 303, 306, 307, 308, 315, 316, 319, 324, 325, 331, 334, 349, 350, 352, 353, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 452, 453, 455, 456, 458, 459, 460, 462, 463, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 486, 489, 490, 500, 502, 503, 504, 506, 510, 511, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 564, 565], "usabl": 366, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 101, 116, 120, 126, 128, 170, 183, 184, 193, 196, 319, 372, 376, 377, 379, 381, 385, 390, 410, 431, 432, 463, 467, 469, 470, 560], "use_cach": 239, "use_center_as_plot_label": 190, "use_enum_valu": [16, 82, 101, 120], "use_evaluation_region": [216, 238], "use_fft": 198, "use_local_fil": [85, 88], "use_nullable_int": [85, 88], "use_region_cent": [165, 172, 175, 176, 178, 179, 417, 436], "useless": 475, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 86, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 366, 367, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 403, 410, 417, 418, 424, 425, 426, 428, 440, 450, 451, 452, 464, 466, 468, 469, 470, 471, 472, 480, 484, 497, 498, 499, 500, 505, 509, 512, 515, 521, 525, 546, 556, 557, 560], "userdataset": 378, "usernam": 369, "userwarn": [439, 441, 448, 449, 453, 476], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 560, "usual": [29, 80, 81, 119, 134, 139, 140, 141, 153, 194, 303, 366, 367, 369, 371, 372, 373, 374, 380, 381, 386, 392, 396, 431, 435, 436, 437, 439, 441, 442, 444, 445, 449, 451, 452, 455, 456, 457, 458, 459, 462, 464, 469, 472, 477, 485, 488, 496, 500, 502, 503, 504, 506, 509, 513, 518, 557, 559, 560, 561], "ut1": 564, "utc": [84, 86, 101, 120, 347, 451, 457, 458, 468, 471, 547, 548, 549, 550, 551, 552, 553, 554, 555, 564], "utf": [85, 88], "utf8": [16, 82, 101, 120], "util": [6, 93, 101, 108, 111, 112, 113, 120, 121, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 174, 175, 176, 177, 178, 179, 180, 181, 182, 274, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 366, 375, 377, 378, 379, 380, 390, 405, 408, 409, 410, 411, 418, 419, 422, 423, 424, 425, 426, 427, 431, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 488, 489, 500, 559], "utilis": [81, 135, 367, 435, 439, 443, 450, 456, 468, 472, 497, 500], "uxtvf": 467, "v": [26, 31, 32, 37, 85, 88, 146, 152, 154, 155, 156, 158, 167, 174, 192, 264, 275, 299, 369, 374, 381, 382, 393, 394, 395, 396, 419, 435, 447, 457, 462, 472, 484], "v0": [92, 373, 374, 377, 378, 380, 383, 385, 386, 391, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 426, 427, 428, 451, 452, 466, 470], "v1": [13, 16, 81, 82, 86, 101, 120, 366, 373, 375, 377, 382, 383, 384, 385, 391, 392, 395, 398, 400, 411, 412, 413, 419, 424, 428, 429, 430, 431, 432, 532, 535], "v2": [392, 393, 417, 425, 432, 475], "v3": 409, "v_0": [37, 49], "v_glat": 302, "v_glon": 302, "va": 517, "vagu": 371, "vain": 369, "val": [85, 88, 185, 186, 188, 194, 197, 198, 207, 209, 468, 512], "valfmt": 355, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 85, 88, 101, 103, 119, 120, 123, 136, 157, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 295, 313, 365, 366, 375, 379, 382, 383, 392, 411, 419, 428, 436, 439, 465, 467, 468, 471, 476, 498, 500, 505, 559], "valid_hdu_class": [80, 85], "valid_hdu_typ": 85, "validate_al": 393, "validate_assign": [16, 82, 101, 120, 393], "validate_default": [16, 82, 101, 120], "validate_loc": 393, "validate_zenith_angl": 393, "validationerror": [16, 82, 101, 120, 393], "valle": 38, "valleespir": 490, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 81, 82, 84, 85, 86, 88, 89, 92, 96, 97, 98, 99, 101, 102, 106, 107, 109, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 161, 165, 171, 172, 174, 175, 176, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 275, 276, 277, 279, 280, 282, 283, 284, 295, 299, 307, 308, 322, 325, 334, 337, 352, 355, 356, 357, 367, 369, 372, 377, 378, 380, 382, 384, 386, 389, 390, 393, 408, 411, 417, 428, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 476, 477, 478, 484, 485, 486, 488, 492, 493, 494, 498, 500, 504, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563], "value_rang": 88, "value_scan": 276, "valueerror": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 82, 85, 88, 89, 97, 101, 120, 216, 238, 366, 380, 393], "values_equ": [85, 88], "values_err": 460, "values_scal": [139, 140, 141, 194, 198, 230, 261, 265, 266, 307, 429, 431, 452, 466], "vanilla": [85, 88], "var": [285, 398, 400], "vari": [67, 100, 105, 126, 153, 203, 307, 334, 378, 380, 381, 391, 411, 414, 434, 444, 449, 450, 452, 461, 467, 471, 473, 476, 480, 496, 498, 505, 508, 557], "variability_amplitud": 456, "variability_amplitude_100": 456, "variability_amplitude_error": 456, "variability_amplitude_signific": 456, "variability_estim": [434, 456, 461], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 88, 101, 120, 130, 198, 277, 279, 282, 283, 284, 285, 291, 306, 332, 366, 367, 369, 379, 381, 382, 396, 398, 400, 406, 407, 423, 424, 425, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 484, 485, 486, 505, 560, 561, 562], "varianc": [93, 131, 132, 284, 285, 294, 381, 432, 472], "variant": 396, "variat": [130, 231, 284, 372, 382, 435, 456, 466, 467, 510, 562], "varieti": [377, 558], "variou": [116, 122, 123, 126, 127, 129, 135, 366, 372, 376, 378, 381, 390, 393, 396, 398, 417, 418, 432, 437, 440, 443, 448, 450, 457, 465, 484, 496, 500, 558, 564], "vast": [383, 419], "vaughan": [285, 456], "vaughan2003": 285, "ve": [366, 367, 369, 560], "vector": [183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 468, 504, 512], "vega": 426, "vel": 460, "vel_di": [45, 490], "vela": [65, 405, 437, 460, 486], "veloc": [31, 32, 37, 45, 49, 299, 302], "ver": 468, "verbos": [11, 80, 367, 389, 560, 562], "veri": [62, 85, 88, 134, 203, 356, 365, 366, 367, 368, 371, 372, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 393, 396, 427, 435, 442, 456, 463, 465, 468, 473, 476, 486, 496, 500, 513, 522, 523, 557, 559, 560, 561], "verif": [97, 216, 238, 333, 448, 476], "verifi": [207, 209, 228, 275, 366, 379, 463, 500], "verifywarn": 500, "verita": [94, 398, 403, 476], "versa": 184, "version": [11, 76, 81, 83, 85, 86, 88, 121, 122, 123, 126, 173, 206, 208, 365, 367, 369, 370, 373, 374, 375, 376, 380, 383, 386, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 410, 411, 416, 418, 419, 421, 424, 425, 426, 428, 429, 431, 432, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 498, 560], "versu": [139, 145, 275, 277, 279, 475, 494], "vert": 245, "vertex": 380, "vhe": [436, 488], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 80, 81, 88, 100, 105, 186, 191, 201, 365, 367, 369, 374, 378, 380, 381, 382, 383, 384, 385, 387, 389, 392, 393, 394, 395, 396, 398, 399, 406, 414, 422, 424, 425, 426, 430, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 482, 484, 485, 486, 500, 504, 509, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 560, 564], "viabil": 393, "vice": 184, "victor": 421, "view": [81, 85, 88, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 154, 156, 157, 162, 185, 186, 188, 192, 194, 197, 198, 224, 297, 301, 353, 366, 380, 407, 412, 417, 419, 426, 427, 439, 441, 445, 447, 451, 464, 466, 467, 469, 475, 476, 500, 502, 503, 504, 505, 506, 507, 509, 559], "vika": 417, "vin\u00edciu": 424, "viridi": [441, 462], "virtual": [369, 396, 398, 399, 400, 560], "visibl": [85, 88, 356, 357, 374, 417, 435, 451, 477, 485, 486, 559], "vision": 371, "visit": 452, "visual": [6, 186, 198, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 380, 412, 413, 431, 432, 439, 441, 445, 447, 449, 452, 465, 466, 472, 477, 478, 485, 486, 500, 509, 514, 517, 558], "visualis": [363, 378, 380, 387, 413, 428, 441, 443, 466, 471, 473, 475, 500], "vline": [494, 517, 518], "vlvbmp0": 467, "vmax": [99, 102, 106, 107, 356, 357, 444, 447, 449, 455, 464, 468, 469, 476, 477, 484, 485, 509], "vmin": [99, 102, 106, 107, 356, 357, 443, 447, 455, 464, 468, 469, 476, 477, 484, 485, 509], "volum": [27, 189, 193, 196], "vorokh": [422, 423], "voruganti": [424, 425], "vstack": [81, 84, 379], "vuillaum": [392, 425], "vx": [299, 302, 391], "vy": [299, 302], "vz": [299, 302], "w": [26, 31, 49, 84, 182, 195, 292, 367, 391, 443, 445, 453, 462, 467, 471, 473, 500, 509, 561, 563], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 82, 83, 85, 88, 90, 91, 99, 101, 114, 120, 122, 123, 126, 129, 161, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 359, 366, 369, 371, 372, 373, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 406, 409, 410, 411, 412, 413, 414, 421, 425, 426, 427, 428, 429, 430, 431, 437, 439, 445, 447, 449, 467, 473, 475, 476, 477, 478, 486, 560], "wagner": 456, "wai": [33, 38, 81, 85, 88, 190, 278, 319, 325, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 386, 387, 390, 392, 398, 399, 400, 402, 405, 409, 425, 426, 437, 439, 441, 444, 447, 456, 463, 464, 465, 467, 468, 469, 470, 472, 475, 476, 477, 478, 480, 490, 497, 499, 500, 504, 513, 558, 560, 562], "wait": [366, 395, 396], "wall": [81, 86], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 82, 101, 104, 120, 142, 168, 193, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 366, 368, 369, 371, 372, 373, 376, 380, 381, 382, 384, 385, 386, 396, 397, 398, 399, 400, 402, 403, 406, 426, 436, 439, 440, 441, 442, 444, 451, 452, 455, 457, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 484, 485, 486, 504, 557, 560, 561, 562, 563, 564], "ward": 293, "warn": [11, 16, 26, 80, 82, 85, 88, 101, 120, 186, 206, 207, 208, 209, 261, 262, 263, 265, 352, 391, 396, 408, 425, 430, 431, 432, 435, 442, 443, 444, 447, 448, 449, 451, 452, 455, 459, 460, 475, 476, 500, 524, 532, 535, 560], "warn_miss": 85, "warn_with_traceback": 366, "wasn": [373, 426], "watch": [476, 564], "water": [398, 477], "watson": 407, "wavelength": 385, "wavelet": [405, 423], "wc": [13, 16, 81, 99, 102, 106, 123, 160, 168, 169, 173, 184, 185, 186, 188, 193, 194, 196, 197, 198, 213, 216, 217, 225, 228, 238, 240, 250, 251, 255, 261, 265, 328, 361, 366, 372, 380, 385, 407, 408, 409, 411, 417, 425, 426, 430, 432, 439, 440, 443, 444, 445, 447, 449, 453, 457, 460, 462, 464, 466, 467, 469, 470, 471, 476, 484, 485, 486, 509, 512, 517, 518, 519, 524], "wcda": [57, 69], "wcs_geom": [193, 216, 238, 468, 513], "wcs_geom_3d": 468, "wcs_geom_cel": 468, "wcs_map": [197, 198, 359], "wcs_tile": [184, 186], "wcsax": [99, 102, 106, 107, 186, 193, 194, 198, 216, 238, 361, 363, 447, 468, 486, 516, 520, 521, 522], "wcsconfig": 16, "wcsgeom": [23, 81, 99, 102, 106, 107, 108, 110, 112, 118, 119, 129, 144, 153, 155, 165, 178, 179, 183, 184, 193, 197, 198, 212, 213, 217, 225, 228, 240, 242, 250, 251, 255, 261, 265, 367, 372, 380, 407, 410, 411, 412, 417, 430, 432, 439, 444, 449, 451, 452, 453, 455, 460, 462, 464, 466, 467, 468, 469, 471, 476, 477, 478, 485, 486, 496, 498, 507, 509, 510, 513, 516, 518, 519, 520, 521], "wcslib": 366, "wcsmap": [185, 186, 188, 198, 428], "wcsndmap": [99, 102, 108, 112, 114, 129, 134, 153, 155, 158, 160, 162, 167, 168, 169, 170, 173, 178, 179, 184, 185, 186, 188, 194, 196, 197, 199, 200, 216, 238, 253, 261, 353, 359, 361, 372, 410, 411, 412, 414, 417, 419, 426, 428, 431, 432, 443, 444, 453, 462, 464, 467, 468, 476, 486, 496, 498, 506, 509], "wcsprm": 524, "wcsshape": 468, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 81, 85, 86, 87, 88, 92, 167, 193, 196, 206, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 269, 341, 366, 367, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 392, 393, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 413, 417, 419, 424, 425, 426, 427, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 482, 484, 485, 486, 497, 504, 505, 507, 509, 512, 523, 526, 536, 557, 560, 561, 562, 563, 564], "weak": [385, 473], "weaker": 275, "weakli": 469, "web": [85, 88, 374, 392, 395, 396, 402, 403, 417, 425, 463], "webpag": [368, 374, 386, 392, 395, 425, 428], "wedg": 380, "week": [369, 374, 384, 386, 391, 395], "weekli": [372, 375, 379, 380, 457], "wegen": [425, 426], "weigh": [155, 158, 473], "weight": [66, 143, 144, 150, 153, 155, 158, 184, 185, 186, 188, 193, 194, 196, 197, 198, 263, 394, 427, 431, 450, 473, 496, 512], "weighted_chi2_paramet": 450, "weighted_kernel": 153, "welcom": [371, 380, 476], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 66, 81, 85, 88, 102, 107, 111, 113, 118, 119, 127, 184, 188, 190, 194, 196, 206, 210, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 356, 357, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 425, 426, 427, 431, 432, 436, 442, 445, 450, 452, 457, 459, 464, 465, 466, 467, 468, 469, 471, 475, 476, 480, 484, 485, 486, 496, 497, 498, 509, 512, 513, 557, 558, 560, 562], "went": 406, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 101, 120, 130, 283, 366, 371, 372, 373, 374, 379, 381, 382, 383, 384, 385, 386, 387, 389, 391, 394, 396, 406, 409, 410, 411, 412, 413, 414, 417, 420, 425, 426, 429, 448, 460, 469, 473, 475, 563], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 269, 325, 367, 372, 380, 383, 385, 386, 393, 396, 404, 453, 462, 463, 465, 475, 476, 480, 485, 488, 496, 513, 545, 560, 561, 564], "whatev": [380, 382, 383, 560], "whatsnew": 395, "wheel": 383, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 81, 82, 84, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 118, 119, 120, 121, 133, 143, 144, 150, 155, 157, 158, 168, 171, 185, 186, 188, 190, 192, 194, 197, 198, 203, 204, 210, 211, 214, 216, 218, 220, 221, 222, 226, 230, 232, 233, 235, 238, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 265, 266, 307, 365, 366, 367, 369, 371, 372, 373, 376, 378, 380, 381, 383, 386, 391, 392, 393, 394, 399, 411, 419, 420, 425, 427, 430, 431, 432, 441, 445, 449, 452, 453, 457, 458, 460, 463, 465, 467, 468, 471, 472, 475, 476, 496, 498, 500, 505, 507, 511, 512, 559, 561, 562, 563, 564], "whenev": [85, 88], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 68, 81, 82, 85, 86, 88, 101, 119, 120, 121, 124, 129, 142, 143, 144, 150, 155, 158, 160, 171, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 199, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 280, 283, 286, 287, 295, 331, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 398, 400, 402, 408, 420, 426, 435, 439, 444, 451, 452, 463, 467, 468, 469, 471, 473, 475, 476, 477, 486, 488, 496, 497, 500, 505, 512, 517, 518, 519, 522, 523, 526, 559, 560, 561, 562, 563, 564], "wherea": [372, 380, 383, 560], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 82, 84, 85, 86, 88, 97, 99, 101, 102, 104, 106, 107, 119, 120, 121, 122, 129, 139, 140, 141, 142, 145, 146, 147, 149, 152, 154, 156, 157, 171, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 203, 206, 210, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 295, 304, 333, 335, 363, 371, 373, 380, 383, 385, 386, 393, 431, 442, 455, 467, 468, 486, 512, 561, 562], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 66, 69, 71, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 104, 106, 107, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135, 139, 140, 141, 142, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161, 165, 166, 171, 172, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 203, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 225, 226, 228, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 269, 275, 277, 279, 283, 284, 285, 291, 293, 307, 317, 327, 328, 344, 353, 355, 360, 362, 365, 367, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 401, 403, 407, 408, 409, 411, 412, 413, 414, 417, 420, 426, 428, 431, 435, 436, 439, 442, 443, 444, 445, 447, 450, 451, 452, 453, 456, 457, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 484, 485, 486, 490, 491, 496, 497, 498, 500, 502, 503, 504, 506, 507, 509, 511, 512, 513, 514, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563], "whichev": [184, 185, 186], "while": [85, 88, 102, 185, 186, 188, 190, 194, 197, 198, 366, 369, 371, 372, 373, 375, 378, 379, 381, 385, 387, 388, 390, 391, 392, 395, 396, 398, 435, 439, 441, 444, 452, 459, 460, 464, 466, 467, 468, 470, 471, 496, 498, 500, 511, 513, 560], "whilst": [367, 472, 480], "whippl": 94, "whirlwind": 480, "white": [284, 355, 356, 449, 460, 465, 470, 488, 513], "whitespac": 313, "who": [392, 462, 488], "whole": [92, 114, 162, 165, 172, 175, 176, 178, 179, 184, 185, 186, 188, 197, 198, 239, 268, 277, 279, 366, 372, 378, 381, 392, 436, 439, 447, 452, 457, 460, 464, 471, 476, 478, 557], "whose": [392, 396, 452, 506, 518], "why": [366, 367, 371, 373, 380, 465, 513], "wide": [373, 392, 393, 407, 426, 437, 448, 559], "wider": [458, 469], "widget": [185, 186, 188, 194, 197, 198, 447, 455, 468, 484, 485], "width": [16, 27, 67, 81, 85, 88, 99, 102, 106, 107, 108, 109, 111, 112, 113, 114, 124, 129, 142, 143, 144, 147, 150, 153, 155, 158, 160, 165, 170, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 213, 216, 217, 225, 227, 228, 238, 240, 250, 251, 253, 255, 261, 263, 265, 356, 357, 382, 389, 427, 440, 441, 444, 445, 447, 449, 450, 451, 452, 453, 455, 457, 460, 462, 463, 464, 466, 467, 468, 469, 471, 476, 477, 484, 485, 486, 507, 509, 510, 511, 512, 513, 517, 518, 519, 521, 522, 523], "width_err": 463, "width_error": 67, "width_min": 193, "width_pix": [184, 185, 186], "widthconfig": 16, "wiki": [34, 81, 86, 417, 475], "wikipedia": [34, 81, 86, 324, 380, 384], "wilei": 136, "wilk": [275, 498, 562], "willing": 369, "wind": [50, 445, 450, 471, 491], "window": [109, 365, 366, 373, 383, 396, 397, 398, 400, 406, 422, 426, 443, 463, 559, 560, 562], "wise": [19, 20, 26, 85, 88, 134, 135, 186, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 394, 419, 445, 447, 496], "wish": [193, 369, 384, 450, 465], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [376, 377, 378, 381, 388, 390], "withdrawn": [370, 371, 376, 377, 378, 381, 388, 390], "within": [122, 125, 134, 184, 198, 215, 216, 217, 223, 227, 228, 229, 230, 231, 238, 246, 250, 252, 253, 264, 267, 365, 366, 367, 371, 375, 380, 382, 383, 384, 385, 386, 389, 391, 392, 394, 396, 397, 398, 400, 420, 423, 425, 429, 431, 440, 441, 447, 450, 457, 458, 459, 463, 466, 467, 468, 471, 472, 476, 480, 486, 496, 499, 500, 559], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 126, 145, 183, 184, 189, 193, 196, 363, 366, 369, 371, 374, 376, 380, 381, 382, 383, 385, 390, 396, 407, 408, 412, 440, 443, 447, 448, 462, 467, 468, 469, 484, 500, 511, 512, 513, 555, 560, 562], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 462], "wo": 460, "wobbl": [92, 459, 475], "wobbleregionfind": 419, "wobbleregionsfind": 441, "wolfram": [322, 323], "women": 422, "won": [85, 88, 114, 118, 122, 126, 129, 338, 391, 447, 468, 475, 563], "wong": 409, "wood": [373, 423, 425, 426], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 500], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 88, 97, 121, 195, 331, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 418, 421, 422, 423, 424, 425, 426, 427, 428, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486, 496, 500, 510, 512, 524, 526, 532, 535, 548, 554, 555, 560], "workaround": 383, "workflow": [369, 374, 375, 382, 387, 391, 396, 411, 440, 445, 480, 484, 485, 501], "workshop": 375, "workspac": 369, "world": [81, 196, 216, 238, 366, 372, 449, 486, 512], "worst": 369, "worth": [366, 488], "would": [16, 82, 85, 88, 92, 101, 120, 185, 186, 188, 194, 197, 198, 366, 369, 372, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 408, 417, 437, 439, 442, 443, 455, 465, 468, 469, 471, 473, 476, 513], "wouldn": 380, "wp": [395, 475], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 190, 249, 303, 380, 410], "wrap_at": 377, "wrap_coord": 190, "wrapper": [56, 239, 249, 307, 380, 381, 408, 411, 488, 500], "write": [11, 15, 16, 26, 80, 81, 84, 85, 86, 88, 97, 98, 99, 102, 104, 106, 107, 119, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 185, 186, 188, 192, 194, 197, 198, 204, 216, 230, 238, 261, 262, 263, 264, 265, 335, 344, 367, 369, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 388, 389, 390, 392, 393, 394, 396, 402, 405, 411, 414, 419, 421, 424, 425, 426, 427, 432, 435, 439, 447, 448, 451, 453, 466, 470, 471, 475, 476, 482, 484, 485, 500, 505, 561, 563], "write_arf": 104, "write_bkg": 104, "write_covari": [15, 97, 216, 238], "write_dataset": 15, "write_ds9": 471, "write_model": 15, "write_pha": 104, "write_rmf": 104, "writeabl": 394, "writer": [85, 88, 386, 393], "writeto": [84, 139, 140, 141, 145, 146, 147, 149, 152, 154, 156, 157, 451], "written": [81, 86, 97, 98, 99, 102, 104, 106, 107, 119, 121, 143, 144, 150, 155, 158, 185, 186, 188, 192, 194, 197, 198, 200, 366, 367, 369, 371, 375, 376, 386, 392, 394, 429, 435, 452, 470, 473, 488, 496, 497, 500, 513, 559, 564], "wrong": [366, 415, 429, 430, 431], "wrote": 392, "wrt": [81, 155, 158, 366, 384, 459, 555], "wstat": [102, 107, 288, 289, 378, 405, 423, 424, 439, 440, 442, 445, 449, 460, 464, 473, 496, 559], "wstatcountsstatist": [460, 562], "wt": [26, 462], "wun": 409, "www": [26, 66, 85, 88, 136, 386, 475], "wyatt": [405, 559], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 66, 67, 85, 88, 99, 106, 124, 134, 135, 136, 140, 190, 194, 195, 203, 206, 208, 210, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 257, 258, 259, 264, 265, 278, 284, 285, 287, 298, 299, 300, 302, 306, 308, 313, 322, 355, 358, 359, 366, 367, 371, 373, 374, 375, 380, 391, 395, 437, 442, 443, 449, 452, 456, 460, 463, 465, 466, 468, 473, 476, 486, 494, 500, 517, 518, 560, 562], "x27": 466, "x86_64": [435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "x_": 124, "x_0": [185, 186, 188, 194, 197, 198], "x_1": 307, "x_2": 307, "x_3": 307, "x_bkg": 460, "x_edg": 125, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [185, 186, 188, 194, 197, 198], "x_j": 124, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [124, 320, 322, 453], "x_min": [124, 320, 322, 453], "x_n": [185, 186, 188, 194, 197, 198], "x_r_0": 228, "x_ref": [124, 453], "x_sigma": 225, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [203, 465], "xarg": 366, "xaxi": 500, "xerr": [435, 473], "xf": 475, "xfail": 366, "xlabel": [367, 431, 445, 459, 465, 473, 476, 492, 493, 494, 517, 554], "xlim": [353, 447, 473, 476, 494], "xmax": [17, 18, 21, 22, 24, 25, 27, 194, 394], "xmin": [17, 18, 21, 22, 24, 25, 27, 194, 394], "xml": [375, 376, 377, 410, 424, 426, 475, 488], "xmltodict": [418, 475], "xref": 124, "xspec": [218, 266, 292, 424, 561], "xunit": [441, 526], "xviii": 386, "xx": [377, 392], "xxx": [85, 88, 371, 392], "xxx_by_coord": 468, "xxxx": 500, "xy": [439, 449, 453, 517], "xy_posit": [33, 34, 38], "xytext": 517, "xyz": 395, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 85, 88, 134, 135, 140, 190, 203, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 298, 299, 300, 302, 306, 308, 358, 366, 380, 391, 431, 435, 443, 449, 452, 465, 473, 494, 500], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [203, 465], "yaml": [11, 15, 16, 20, 26, 82, 96, 97, 98, 99, 101, 102, 106, 107, 119, 120, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 275, 333, 335, 365, 374, 375, 377, 378, 379, 382, 383, 388, 393, 394, 396, 397, 409, 410, 411, 414, 419, 428, 432, 435, 436, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 485, 486, 499, 557, 558, 559, 560], "yaml_str": [216, 238, 440], "yaxi": [437, 500], "ye": 396, "year": [45, 60, 64, 76, 366, 371, 373, 374, 376, 383, 386, 387, 391, 393, 396, 423, 425, 426, 448, 450, 463, 475, 492, 493, 494, 495], "yearli": [399, 424], "yellow": 356, "yerr": 460, "yet": [87, 365, 366, 369, 371, 373, 380, 383, 386, 387, 433, 437, 440, 484, 564], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 86, 89, 185, 186, 188, 194, 197, 198, 331, 373, 379, 380, 385, 387, 389, 394, 469, 561, 562, 563], "yk04": [45, 48], "yk04b": 48, "ylabel": [367, 459, 465, 473, 476, 492, 493, 494, 517, 554], "ylim": [353, 445, 473, 476, 492, 494, 533, 542, 543, 544], "ymax": [517, 518], "ymin": [517, 518], "yml": [369, 383, 395, 396, 397, 398, 400, 425], "you": [16, 19, 20, 26, 66, 80, 81, 82, 85, 88, 91, 98, 101, 104, 120, 121, 134, 140, 142, 145, 168, 185, 186, 188, 194, 197, 198, 203, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 268, 275, 365, 366, 367, 368, 369, 371, 373, 376, 380, 383, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 417, 425, 426, 427, 436, 437, 439, 440, 441, 442, 444, 445, 447, 449, 451, 452, 455, 458, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 484, 485, 486, 496, 497, 500, 503, 511, 534, 557, 560, 561, 562, 563, 564], "your": [16, 19, 20, 26, 82, 96, 101, 120, 210, 211, 214, 218, 220, 221, 222, 226, 232, 233, 235, 239, 241, 243, 244, 245, 249, 254, 256, 257, 258, 259, 262, 266, 365, 366, 367, 369, 371, 373, 396, 397, 398, 399, 400, 402, 403, 406, 407, 408, 411, 412, 417, 426, 427, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 484, 485, 486, 495, 500, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 562], "yourself": [560, 561], "yr": [45, 52, 53, 490, 492, 493, 494], "yscale": [445, 552], "yt": 366, "yu": 409, "yunit": [439, 441, 462, 463, 476, 537], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 425, "yy": 392, "yyyi": 392, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 85, 88, 298, 299, 302, 391, 392, 462, 490, 526], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 421, "zanin": [425, 426], "zd": 81, "zen": 472, "zen_pnt": 472, "zenith": [435, 448, 472, 475, 476, 477, 505], "zenith_angl": [81, 393, 476, 486], "zenodo": [392, 419], "zero": [52, 53, 66, 85, 88, 97, 99, 102, 106, 107, 129, 134, 142, 143, 144, 147, 150, 155, 171, 185, 186, 188, 194, 197, 198, 242, 263, 265, 266, 307, 313, 325, 366, 410, 413, 428, 463, 467, 468, 473, 563], "zhao": [27, 432], "zhen": 136, "zip": [381, 394, 395, 439, 458, 462, 465, 470, 480, 494, 514, 519, 523, 536], "zl": [26, 462], "zone": 460, "zry0nroz": 467, "zsh": 367, "zt": [26, 462], "z\u00e9": 424, "\u00e0": 423, "\u0261\u00e6m\u0259pa\u026a": 500, "\u03b3": [130, 488, 559], "\u03c3": 450}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 440, 452, 478, 484], "0": [375, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "1": [371, 375, 394, 404, 405, 412, 413, 415, 420, 428, 429, 430, 431, 432, 433, 473], "10": [380, 404, 406], "10th": 428, "11": [381, 404, 407], "12": [382, 404, 408], "12th": 419, "13": [383, 404, 409, 418, 421], "13th": 431, "14": [384, 404, 410], "14th": 429, "15": [404, 411], "16": [385, 404, 412], "16th": 420, "17": [404, 413], "18": [386, 404, 414, 415, 416], "19": [387, 404, 417], "19th": 416, "1d": [440, 442, 448, 457, 458, 480], "1dc": 475, "2": [372, 373, 394, 404, 416, 418, 430, 432, 473, 539], "20": [388, 404, 419, 420, 422], "2014": 405, "2015": [418, 421], "2016": [422, 423], "2017": 424, "2018": [425, 426, 427], "2019": [406, 407, 408, 409, 410, 411], "2020": [412, 413, 414, 415, 416], "2021": 417, "2022": [419, 420, 428], "2023": [429, 430, 431], "2024": 432, "21": 389, "22": [390, 423], "22nd": 417, "23": [391, 426], "24": 392, "25": [393, 405], "26": [394, 409], "28": [406, 424, 425], "29": [407, 427], "29th": 432, "2d": [444, 480], "3": [373, 394, 404, 411, 421, 433], "30": [408, 410], "32": 366, "3955": 394, "3d": [447, 448, 455, 457, 480], "3fgl": [531, 542], "3fhl": 448, "4": [374, 404, 422], "4122": 394, "4fgl": [543, 544], "4th": 414, "5": [375, 404, 423], "6": [376, 404, 424], "64": 366, "6th": [415, 430], "7": [373, 377, 404, 425], "8": [378, 404, 426], "9": [379, 404, 427], "As": 506, "In": 367, "ON": [436, 441, 448], "On": 442, "The": [372, 396, 448, 450, 465, 473, 497, 509], "To": [366, 367, 386, 500], "about": 473, "abov": 450, "absolute_tim": 347, "absorpt": [389, 526], "abstract": [371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "accept": 369, "access": [464, 468, 477, 497], "accessor": 512, "action": [366, 386], "ad": 468, "adapt": 443, "adaptiveringbackgroundmak": 160, "add": [377, 470], "add_colorbar": 354, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [389, 394, 506, 558], "aeff_2d": 502, "against": 441, "aim": 470, "alia": 389, "all": 458, "along": 393, "altern": [374, 377, 379, 380, 381, 382, 383, 384, 386, 387, 390, 393], "amplitud": [394, 473], "an": [366, 435, 451, 452, 464, 469], "anaconda": 399, "analysi": [0, 11, 15, 372, 375, 435, 436, 439, 440, 441, 442, 447, 448, 449, 457, 460, 480, 484, 496, 499, 558], "analysisconfig": 16, "angl": [502, 503, 504, 506], "angular": 513, "annihil": 462, "annotate_heatmap": 355, "api": [6, 366, 367, 388, 390, 393, 394, 428, 431, 432, 480, 485], "apply_edisp": [108, 112], "approach": [381, 436, 437, 440, 442, 443, 444, 445, 448, 451, 452, 453, 455, 456, 457, 458, 459, 465, 469, 470, 472, 484, 485], "apr": [413, 418, 422, 424], "arbitrari": 393, "area": [466, 475, 502], "argument": [366, 380], "arm": 490, "asmoothmapestim": 114, "assert": 366, "assert_quantity_allclos": 341, "assert_skycoord_allclos": 342, "assert_time_allclos": 343, "assess": [447, 465], "assign": [458, 470], "astro": [1, 488, 491], "astronomi": 381, "astrophys": [1, 489, 490, 491], "astropi": [366, 391], "asymmetr": 466, "attribut": [366, 367, 377], "aug": [405, 421], "author": 392, "authorship": 392, "avail": 463, "ax": [468, 513], "axi": [366, 505], "backend_default": 310, "background": [377, 381, 385, 388, 394, 445, 450, 451, 467, 470, 475, 476, 484, 503, 507, 508, 509, 510, 561], "background2d": 139, "background3d": 140, "backgroundirf": 141, "backgroundirfmodel": 377, "backgroundmodel": 377, "backport": 366, "base": [390, 393, 511], "basic": [449, 468], "bayesian": 456, "between": 388, "bin": [381, 435, 450, 513], "binder": 396, "bit": 366, "bkg_2d": 503, "bkg_3d": 503, "block": 456, "boundari": 469, "branch": 395, "break": 366, "broken": [367, 527, 541], "brokenpowerlawspectralmodel": 210, "bsd": 366, "bug": [419, 428, 431, 432], "bugfix": 395, "build": [367, 369, 396, 457, 458], "built": 557, "bundl": 366, "burkertprofil": 17, "butterfli": 485, "call": 377, "candid": [395, 443], "caplog": 366, "cartesian": 296, "case": [372, 376, 394, 563], "casebattacharya1998": 28, "cash": [280, 561, 562], "cash_sum_cython": 281, "cashcountsstatist": 277, "catalog": [2, 463, 469, 470, 486, 495], "catalog_registri": 55, "caveat": 561, "cell": 366, "certif": 369, "cff": 392, "chain": [439, 441], "chang": [366, 387, 428, 431, 432], "changelog": 386, "character": 456, "check": [11, 366, 367, 401, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "checker": 340, "chi": 450, "choos": 367, "citat": 392, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 366, 367, 376, 377, 390, 393, 485, 506, 562], "clean": 385, "cli": 560, "click": 366, "clobber": 366, "clumpi": 488, "cluster": [13, 472], "code": [366, 367, 372, 375, 396], "codemeta": 392, "collect": 392, "colormap": 565, "colormap_hess": 356, "colormap_milagro": 357, "combin": [470, 497], "command": [11, 366, 560], "compar": [441, 457], "compound": [471, 528], "compound_region_to_region": 326, "compoundspectralmodel": 211, "comput": [434, 435, 438, 439, 440, 445, 446, 449, 454, 461, 465, 474, 479, 481, 483, 485, 487, 515, 525, 546, 556], "compute_chisq": 282, "compute_flux_doubl": 283, "compute_fpp": 284, "compute_fvar": 285, "compute_lightcurve_doublingtim": 130, "compute_lightcurve_fpp": 131, "compute_lightcurve_fvar": 132, "conda": 397, "confer": 392, "confid": 465, "config": [11, 444, 445, 560], "configur": [440, 447, 453, 457, 484, 558], "constant": [516, 529, 547], "constantfluxspatialmodel": 212, "constantspatialmodel": 213, "constantspectralmodel": 214, "constanttemporalmodel": 215, "contain": 393, "containment_radiu": 199, "containment_region": 200, "content": [464, 513], "context": [436, 437, 439, 440, 441, 442, 443, 444, 445, 448, 450, 451, 453, 455, 456, 457, 458, 459, 469, 472, 473, 484, 485], "contigu": 468, "continu": 396, "contour": 465, "contribut": [369, 392, 470], "contributor": [392, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "conveni": 378, "convent": 366, "convers": 366, "convert": 366, "coordin": [13, 366, 377, 503, 513], "correl": 445, "count": [470, 476, 496, 562], "covari": [201, 465], "covarianceresult": 202, "creat": [436, 439, 444, 445, 452, 464, 466, 468, 469, 485, 513], "create_cosmic_ray_spectral_model": 268, "create_crab_spectral_model": 269, "create_fermi_isotropic_diffuse_model": 270, "create_map_dataset_from_observ": 109, "create_map_dataset_geom": 110, "creation": [436, 440, 458], "cstat": 286, "cta": [376, 475], "cube": [372, 468, 480], "cumul": 436, "current": 391, "curv": [381, 457, 458, 459, 554, 555], "custom": [471, 473, 557], "cut": [437, 441], "cutoff": [530, 531, 532, 542, 543, 544], "cutout": 468, "cycl": 391, "cython": [391, 396], "d_sun_to_galactic_cent": 295, "dark": [462, 488], "darkmatt": [1, 488], "darkmatterannihilationspectralmodel": [19, 488], "darkmatterdecayspectralmodel": 20, "data": [3, 8, 366, 372, 374, 375, 381, 393, 396, 436, 439, 440, 441, 447, 448, 450, 453, 457, 458, 460, 464, 467, 468, 477, 480, 484, 485, 486, 497, 508, 560, 561], "dataflow": 393, "dataset": [4, 11, 96, 97, 366, 375, 378, 387, 388, 393, 435, 436, 440, 441, 444, 445, 447, 448, 452, 457, 458, 459, 464, 465, 467, 469, 470, 473, 477, 484, 485, 496, 499], "dataset_registri": 95, "datasetmodel": 216, "datasetsmak": 161, "datastor": [80, 475, 485, 497], "dco": [369, 392], "deal": 367, "dec": 411, "decai": 462, "decemb": 430, "decis": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "default": 377, "defin": [435, 436, 439, 441, 449, 451, 452, 457, 458, 469, 485, 513], "definit": [392, 457, 508], "depend": [365, 383, 389, 419, 441, 450, 452, 471], "deprec": [366, 391], "deriv": 563, "detail": [373, 447], "detect": [387, 443, 449, 505], "detector": 503, "develop": [366, 368, 369, 373], "diagram": 376, "differ": [448, 468, 564], "diffus": 476, "dilat": 469, "direct": 441, "discuss": 381, "disk": [440, 452, 484, 485, 517], "diskspatialmodel": 217, "dispers": [466, 475, 476, 504], "dissolv": 385, "distribut": [383, 478, 490], "dl3": [3, 448, 478, 497, 505, 508], "dl4": [466, 496, 498, 508, 512, 557], "dl5": [498, 557], "dl6": 498, "dmprofil": 18, "do": 366, "doc": 396, "docstr": 367, "document": [367, 369, 375, 386, 432], "doubl": 456, "download": [11, 396], "downsampl": 513, "dr1": [478, 544], "dr2": 544, "dr3": 543, "draw": 318, "driven": 560, "drop": 373, "durat": 467, "e": 478, "each": 450, "earli": 369, "earth_location_from_dict": 305, "ebl": 526, "ebl_data_builtin": 219, "eblabsorptionnormspectralmodel": 218, "edg": 498, "edisp": 466, "edisp_2d": 504, "edispkernel": 142, "edispkernelmap": [143, 505], "edispmap": 144, "effect": [466, 467, 475, 502], "effectiveareatable2d": 145, "einastoprofil": 21, "elaps": 564, "empti": 464, "encourag": 473, "end": 366, "energi": [389, 435, 441, 450, 452, 466, 469, 471, 475, 476, 498, 502, 503, 504, 506], "energydependentmorphologyestim": 116, "energydependentmultigausspsf": 146, "energydispersion2d": 147, "environ": 397, "eros": 469, "error": [465, 562], "estim": [5, 117, 384, 387, 390, 393, 440, 443, 450, 453, 456, 457, 467, 498, 508, 509, 562], "estimate_exposure_reco_energi": 133, "estimator_registri": 115, "evalu": [377, 378, 379], "event": [375, 379, 451, 452, 460, 468, 475, 476, 478, 486, 497, 505], "eventlist": [81, 497], "eventlistmetadata": 82, "evolut": 452, "exampl": [396, 473, 488, 495, 496, 497, 498, 499, 505, 507, 508, 509, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 557, 561], "excess": [390, 436, 445, 456, 562], "excessmapestim": 118, "exclus": [439, 440, 445, 469, 484], "execut": 560, "exemplari": 394, "exercis": [435, 437, 439, 442, 447, 449, 451, 452, 459, 475, 476, 477, 478, 486], "exist": 372, "expcutoffpowerlaw3fglspectralmodel": 220, "expcutoffpowerlawnormspectralmodel": 221, "expcutoffpowerlawspectralmodel": 222, "expdecai": 548, "expdecaytemporalmodel": 223, "expect": 505, "explor": [436, 440, 449, 480], "exponenti": [29, 437, 530, 531, 532, 542, 543, 544], "expos": 377, "exposur": [466, 476], "extend": [436, 451], "extens": 367, "extern": 366, "extra": 396, "extract": [445, 457, 458, 459], "extrapol": 366, "f_cash_root_cython": 287, "factor": 462, "factori": 468, "factoris": 505, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 394, "featur": [14, 391, 395, 428, 431, 432], "feb": [412, 425], "februari": 432, "fermi": [448, 476], "fermist": 488, "file": [367, 392, 440, 444, 445, 448, 475, 484, 497, 513], "fill": [468, 513], "filter": 458, "final": [371, 395, 440, 563], "find_peak": 134, "find_peaks_in_flux_map": 135, "finder": 509, "first": [395, 440], "fit": [10, 13, 203, 375, 381, 436, 437, 439, 440, 441, 444, 447, 448, 449, 455, 459, 465, 469, 473, 476, 484, 485, 513, 557, 561, 562, 563], "fitresult": 204, "fix": [366, 419, 428, 431, 432], "fixedpointinginfo": 83, "fixtur": 366, "flare": 458, "float": 366, "flux": [390, 394, 435, 437, 439, 440, 448, 453, 462, 463, 484, 485, 486, 498], "fluxestim": 390, "fluxmap": [119, 390], "fluxmetadata": 120, "fluxpoint": 121, "fluxpointscollect": 390, "fluxpointsdataset": [98, 378, 464], "fluxpointsestim": [122, 498], "fluxprofileestim": 123, "fold": 377, "folder": 396, "follow": 387, "format": [366, 564], "formula": 563, "forward": 377, "found": 560, "fov": [467, 507], "fov_to_ski": 297, "fovalign": 148, "fovbackgroundmak": [162, 507], "fovbackgroundmodel": 224, "fraction": 456, "freez": [391, 395, 470], "from": [366, 458, 468, 469, 470, 513], "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 366, 367, 475, 502, 503, 504, 505, 506, 562, 564], "further": [381, 561], "galact": [298, 476], "galactocentr": 490, "galleri": [366, 367, 514], "gamlik": 488, "gamma": [381, 462], "gammalib": 488, "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 366, 369, 372, 375, 383, 385, 386, 387, 391, 392, 393, 395, 396, 402, 403, 466, 475, 476, 477, 478, 488, 491, 495, 496, 497, 498, 499, 505, 507, 508, 509, 512, 557, 558, 564], "gaussian": [518, 519, 533, 549, 550], "gaussianspatialmodel": 225, "gaussianspectralmodel": 226, "gaussiantemporalmodel": 227, "gener": [366, 372, 376, 381, 392, 393, 498, 519, 550], "generalist": 390, "generalizedgaussianspatialmodel": 228, "generalizedgaussiantemporalmodel": 229, "geom": 183, "geometri": [436, 449, 457, 458, 468, 469, 484, 485, 511, 513], "get": [369, 386, 398, 444, 445, 468, 489, 490, 491, 497, 512], "get_combined_significance_map": 136, "get_images_path": 331, "get_irfs_featur": 93, "get_random_st": 319, "get_rebinned_axi": 137, "get_wstat_gof_term": 288, "get_wstat_mu_bkg": 289, "github": 366, "given": 470, "global": 388, "glossari": 559, "good": 563, "gpl": 366, "group": 472, "gti": [84, 497], "guid": [368, 501], "guidelin": [367, 371, 372, 386], "h": 478, "halv": 456, "handl": [366, 375, 376, 377, 388, 392, 467, 564], "have": [374, 376, 381, 382, 390], "hawc": [448, 477], "hduindext": 85, "hduloc": 303, "healpix": 511, "help": 401, "helper": 378, "hess": 448, "hgp": 463, "hierarch": 472, "hierarchi": 393, "hierarchical_clust": 293, "high": [0, 5, 375, 382, 484, 499], "hli": 440, "how": [366, 367, 369, 386, 395, 468, 500], "hpxgeom": 184, "hpxmap": 185, "hpxndmap": [186, 512], "hstack_column": 336, "i": [366, 369, 371, 453], "idea": 376, "imag": [367, 372, 380, 385, 443, 449, 468, 480], "imageprofil": 124, "imageprofileestim": 125, "implement": [376, 377, 386, 392, 394, 471, 473], "import": [366, 455], "improv": [377, 389, 419, 428, 431, 432], "inbuilt": 466, "includ": [367, 473], "index": [468, 473, 497], "info": [11, 366], "inform": [392, 463, 473, 504], "input": [366, 393, 443], "inspect": 485, "instal": [386, 398, 399, 401], "instrument": [7, 448, 505], "integr": [13, 396, 435], "integrate_spectrum": 271, "interact": 388, "interest": 450, "interfac": [0, 375, 377, 382, 484, 499, 512], "interpol": [13, 366, 468], "interpolate_profil": 308, "interpolation_scal": 309, "interv": 458, "introduc": [377, 385, 387, 389, 390, 453], "introduct": [377, 380, 381, 383, 384, 386, 390, 392, 393, 435, 439, 441, 449, 460, 462, 463, 464, 467, 468, 475, 476, 480, 486, 488, 490, 491, 561], "inversecdfsampl": 317, "ipython": 402, "irf": [7, 149, 375, 393, 435, 464, 466, 475, 505], "irf_registri": 151, "irfmap": 150, "isothermalprofil": 22, "isotrop": 476, "issu": 401, "iter": 468, "j": 462, "jan": 406, "jfactori": 23, "joint": [447, 448, 496], "json": 392, "jul": 409, "june": [420, 431], "jupyt": [366, 402], "kernel": 466, "labelmapaxi": [187, 468], "lat": [448, 476], "law": [437, 527, 530, 531, 532, 538, 539, 540, 541, 542, 543, 544], "lazi": 378, "lazyfitsdata": 304, "lc": 457, "let": 452, "level": [0, 5, 372, 375, 382, 484, 485, 499], "li": 460, "licens": 366, "light": [381, 457, 458, 459, 555], "lightcurv": [381, 451, 456, 459, 463], "lightcurveestim": [126, 498], "lightcurvetemplatetemporalmodel": 230, "like": 451, "likelihood": 563, "limit": 376, "line": [11, 366, 560], "linear": 551, "lineartemporalmodel": 231, "link": 367, "list": [377, 378, 379, 380, 381, 382, 383, 451, 458, 463, 468, 469, 470, 471, 486, 497], "literatur": 441, "livetim": 467, "load": [378, 435, 437, 439, 441, 463, 470], "load_irf_dict_from_fil": [159, 505], "locat": 366, "log": [11, 366, 437, 534, 535], "logparabolanormspectralmodel": 232, "logparabolaspectralmodel": 233, "logspir": 34, "long": 392, "loop": [436, 467, 485], "lorimer2006": 35, "low": [372, 485], "lt": 391, "ma": 460, "mai": [408, 419], "maintain": [373, 392], "mainten": 375, "major": 395, "make": [366, 369, 395, 449, 452, 460, 485], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 327, "make_counts_rad_max": 174, "make_edisp_kernel_map": 175, "make_edisp_map": 176, "make_effective_livetime_map": 177, "make_map_background_irf": 178, "make_map_exposure_true_energi": 179, "make_observation_time_map": 180, "make_orthogonal_rectangle_sky_region": 328, "make_path": 332, "make_psf_map": 181, "make_theta_squared_t": 182, "maker": [8, 164, 387, 393, 436, 458, 467, 484, 485, 507, 508, 509], "maker_registri": 163, "mamba": 399, "manag": [375, 399], "manual": [469, 472], "map": [9, 188, 192, 372, 375, 376, 443, 444, 445, 448, 449, 455, 460, 462, 466, 468, 469, 470, 482, 486, 498, 511, 512, 513], "mapax": 189, "mapaxi": 190, "mapcoord": [191, 512], "mapdataset": [99, 378, 447, 451, 464, 477, 496], "mapdataseteventsampl": [100, 379], "mapdatasetmak": [165, 508], "mapdatasetmetadata": 101, "mapdatasetonoff": [102, 378], "mappanelplott": 353, "mar": 407, "march": 429, "mask": [380, 439, 440, 445, 464, 469, 484], "materi": 392, "matter": [462, 488], "measur": 561, "meet": 375, "messag": 366, "met": 564, "metadata": [392, 393], "method": [367, 378, 379, 394, 456, 468, 498, 512], "method_default": 311, "method_kwargs_default": 312, "meyercrabspectralmodel": 235, "miniconda": 399, "minor": 387, "mission": 564, "model": [10, 236, 238, 375, 377, 385, 388, 389, 393, 394, 436, 439, 440, 441, 444, 447, 448, 449, 451, 452, 457, 458, 459, 462, 463, 464, 465, 470, 471, 473, 475, 484, 485, 486, 490, 491, 492, 493, 494, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 561], "model_registri": 234, "modelbas": 237, "modif": 469, "modifi": [366, 468, 471], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 450, "morphologi": 471, "motion_since_birth": 299, "motiv": 394, "mpl_plot_check": 344, "multi": 448, "multipl": [451, 470, 473, 496], "multiprocessing_manag": 315, "n_jobs_default": 313, "naima": 536, "naimaspectralmodel": 239, "name": [366, 377, 505], "nebula": 493, "new": [366, 377, 381, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 458], "next": [437, 439, 440, 443, 449, 457, 475, 477, 478, 484, 486], "nfwprofil": 25, "night": 457, "non": [366, 468, 513], "norm": [389, 471, 520, 532, 535, 537, 540], "norm_bounds_cython": 290, "normal": [320, 484], "notat": 562, "note": [366, 404, 561], "notebook": [11, 366, 374, 402], "nov": [414, 415, 416, 417, 423, 427], "novemb": 428, "now": 381, "nuisanc": 394, "number": [366, 391, 505], "numpi": 391, "o": 453, "object": [366, 367, 376, 388, 444, 445, 451, 452, 463, 472], "observ": [3, 86, 89, 375, 376, 439, 440, 449, 451, 452, 457, 458, 467, 472, 484, 485], "observationeventsampl": 105, "observationfilt": 87, "observationseventssampl": 90, "observationt": 88, "observatory_loc": 94, "obtain": [435, 450, 459, 472], "off": [437, 439, 442, 448], "offset": [502, 503, 504, 506], "ogipdatasetread": 103, "ogipdatasetwrit": 104, "old": 396, "onto": 468, "open": 460, "oper": [468, 469], "optimizeresult": 205, "option": [365, 383, 465], "org": 396, "organ": [372, 381], "origin": [366, 369], "other": [366, 367, 376, 396, 399, 488], "outlin": 394, "outlook": [378, 379, 380, 382, 383, 385, 386, 387, 390], "output": 366, "over": 460, "overview": [386, 398, 450, 475, 507, 509, 510], "overwrit": 366, "own": 560, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 385, 387, 396, 399, 419, 480, 488, 489, 558], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 565, "paper": 375, "parabola": [437, 534, 535], "parallel": [13, 378], "paramet": [206, 207, 377, 389, 394, 440, 450, 465, 470, 471, 484], "parameterestim": 127, "parametr": 377, "parametricpsf": 156, "pdf": 321, "perform": [379, 436, 475, 485], "person": 392, "perspect": 373, "phase": [460, 554], "phasebackgroundmak": 166, "phasogram": 460, "piecewis": [520, 537], "piecewisenormspatialmodel": 240, "piecewisenormspectralmodel": 241, "pig": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "pip": 399, "pixel": [366, 380, 469], "plan": 373, "plot": [14, 366, 439, 440, 443, 449, 450, 453, 468, 470, 485, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 565], "plot_contour_lin": 358, "plot_distribut": 359, "plot_heatmap": 360, "plot_map_rgb": 361, "plot_npred_sign": 362, "plot_spectrum_datasets_off_region": 363, "plot_theta_squared_t": 364, "png": 367, "point": [394, 435, 437, 439, 440, 448, 449, 451, 456, 463, 475, 484, 485, 486, 498, 506, 521], "pointinginfo": 91, "pointingmod": 92, "pointspatialmodel": 242, "poisson": 561, "polar": 300, "polici": 392, "pool_kwargs_default": 314, "popul": [1, 490], "posit": [394, 473, 504], "possibl": 392, "post": 395, "power": [437, 527, 530, 531, 532, 538, 539, 540, 541, 542, 543, 544], "powerlaw": [437, 552], "powerlaw2spectralmodel": 243, "powerlawnormspectralmodel": 244, "powerlawspectralmodel": 245, "powerlawtemporalmodel": 246, "precis": 379, "predict": 496, "prepar": [381, 391, 435, 436, 452, 485], "prerequisit": [436, 437, 439, 440, 441, 442, 444, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 465, 469, 470, 473, 484, 485], "pretti": 463, "primaryflux": 26, "print": 463, "prior": [394, 473], "priorparamet": [208, 209], "produc": 477, "product": [462, 466], "profil": [453, 462, 563], "project": [375, 396], "propag": 393, "propos": [374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 393, 436, 437, 440, 442, 443, 444, 445, 448, 451, 452, 453, 455, 456, 457, 458, 459, 465, 469, 470, 472, 484, 485], "psf": [466, 476, 506], "psf3d": 152, "psf_tabl": 506, "psfkernel": 153, "psfking": 154, "psfmap": [155, 466, 505], "public": 392, "pull": [366, 369, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "pulsar": [51, 460, 492, 493], "purpos": 371, "pwn": 50, "pydant": 393, "python": [366, 367, 373, 391, 402], "qualiti": [375, 396, 439, 441, 447, 465], "quantiti": [472, 498], "radial": 503, "radial_distribut": 48, "radmax2d": 157, "rai": [381, 462], "random": [13, 366], "rang": [467, 508], "read": [443, 448, 452, 453, 468, 469, 470, 513], "read_hermes_cub": [272, 274], "read_yaml": 333, "recommend": [398, 400], "reconstruct": 503, "recopsfmap": 158, "recursive_merge_dict": 334, "reduc": [4, 444, 445, 464, 484, 485], "reduct": [8, 375, 381, 436, 439, 440, 441, 447, 457, 458, 467, 477, 484, 485, 508, 560], "refer": [6, 386, 559, 560, 561], "reflect": [467, 509], "reflectedregionsbackgroundmak": [167, 509], "reflectedregionsfind": 168, "region": [13, 377, 380, 435, 436, 439, 441, 467, 469, 470, 509, 513], "region_to_fram": 329, "regiongeom": [193, 513], "regionndmap": [194, 512, 513], "regions_to_compound_region": 330, "regionsfind": 169, "relat": 513, "releas": [366, 375, 391, 392, 395, 396, 404], "remark": 371, "remnant": 494, "remov": [366, 470], "renam": 366, "repositori": 396, "repr": 366, "represent": [389, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "request": [366, 369, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "requir": [365, 366, 383, 393], "requires_data": 345, "requires_depend": 346, "resampl": 464, "resample_energy_edg": 138, "residu": [439, 441, 447, 485], "resolv": [387, 460], "respons": [7, 505], "restructur": 386, "result": [381, 390, 435, 436, 440, 443, 450, 453, 457, 563], "return": [366, 367], "review": 371, "ring": [445, 467, 510], "ringbackgroundmak": 170, "rmf": 504, "road": 376, "roadmap": 375, "rotat": 380, "rst": 367, "run": [11, 369, 439, 440, 441, 450, 452, 453, 457, 484, 560], "run_multiprocess": 316, "safe": [467, 508], "safemaskmak": 171, "sampl": [379, 451, 452], "sample_powerlaw": 322, "sample_spher": 323, "sample_sphere_dist": 324, "sample_tim": 325, "sampler": 452, "save": [440, 484, 485], "scale": 564, "scale_plot_flux": 273, "scaledregulargridinterpol": 307, "scalespectralmodel": 249, "scenario": 376, "schedul": 391, "scheme": [377, 392], "script": [11, 13, 366, 402, 480, 482], "section": 386, "select": [436, 440, 449, 457, 458, 463, 470, 484, 485, 497], "select_nested_model": 275, "sensit": 435, "sensitivityestim": 128, "sep": [410, 426], "serial": [378, 393, 448], "serialis": [394, 440, 453, 466, 470, 471, 476, 496], "seril": 377, "set": [369, 440, 468, 484], "setup": [374, 396, 398, 400, 401, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 484, 485, 486], "sever": 366, "share": 471, "shell": 522, "shell2": 523, "shell2spatialmodel": 250, "shellspatialmodel": 251, "shorter": 389, "should": 366, "show": [449, 450, 472], "signal": 450, "signific": [436, 443, 445, 469, 562], "simplepulsar": 54, "simplifi": 389, "simul": [375, 378, 441, 442, 451, 452, 455, 459], "sine": 553, "sinetemporalmodel": 252, "singl": [367, 442], "size": 513, "skip": 366, "sky": [9, 377, 380, 449, 451, 469, 504, 512], "sky_to_fov": 301, "skycoord": 512, "skymodel": [253, 471], "slice": 468, "small": 369, "smooth": [443, 541], "smoothbrokenpowerlawspectralmodel": 254, "snr": 52, "snrtruelovemcke": 53, "solut": 393, "some": [366, 376, 469], "sourc": [1, 2, 435, 436, 439, 443, 449, 450, 451, 452, 459, 463, 469, 473, 475, 486, 490, 491, 492, 493, 495], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog3fgl": 60, "sourcecatalog3fhl": [61, 495], "sourcecatalog3hwc": 62, "sourcecatalog3pc": 63, "sourcecatalog4fgl": 64, "sourcecataloggammacat": [65, 495], "sourcecataloghgp": 66, "sourcecataloglargescalehgp": 67, "sourcecatalogobject": 68, "sourcecatalogobject1lhaaso": 69, "sourcecatalogobject2fhl": 70, "sourcecatalogobject2hwc": 71, "sourcecatalogobject3fgl": 72, "sourcecatalogobject3fhl": 73, "sourcecatalogobject3hwc": 74, "sourcecatalogobject3pc": 75, "sourcecatalogobject4fgl": 76, "sourcecatalogobjectgammacat": 77, "sourcecatalogobjecthgp": 78, "sourcecatalogobjecthgpscompon": 79, "sourceirfmodel": 377, "sourcemodel": 377, "spatial": [377, 389, 449, 462, 468, 471, 490, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524], "spatial_model_registri": 247, "spatialirfmodel": 377, "spatialmodel": 255, "special": 563, "specif": [377, 386, 463], "spectra": 462, "spectral": [389, 394, 436, 437, 439, 440, 441, 448, 449, 462, 471, 480, 486, 514, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 545], "spectral_model_registri": 248, "spectralirfmodel": 377, "spectralmodel": 256, "spectrum": [439, 441, 442, 449, 460, 467, 485], "spectrumdataset": [106, 378, 464], "spectrumdatasetmak": [172, 508], "spectrumdatasetonoff": [107, 378, 496], "sphinx": [366, 367], "spiral": 490, "split_dataset": [111, 113], "spread": [475, 506], "squar": [450, 478], "stack": [439, 445, 447, 496], "standard_scal": 294, "standardise_unit": 351, "start": [386, 398, 489, 490, 491, 497, 512], "stat": 12, "stat_contour": 465, "stat_profile_ul_scipi": 276, "stat_surfac": 465, "statist": [12, 439, 469, 561, 562], "statu": [371, 376, 385, 391], "step": [440, 475, 477, 478, 558], "store": [381, 440, 504], "str": 366, "structur": [385, 387, 419, 486, 558], "structure_funct": 291, "studi": 381, "style": 372, "sub": [468, 489], "subclass": 394, "subpackag": 372, "subset": 463, "suggest": 392, "summari": [405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 447, 476], "super": [542, 543, 544], "superexpcutoffpowerlaw3fglspectralmodel": 257, "superexpcutoffpowerlaw4fgldr3spectralmodel": 258, "superexpcutoffpowerlaw4fglspectralmodel": 259, "supernova": 494, "support": [366, 373, 391, 392, 394, 466, 496], "survei": [482, 565], "symmetr": 503, "systemat": 394, "t": [443, 562], "tabl": [13, 450, 463, 497], "table_row_to_dict": 337, "table_standardise_units_copi": 338, "table_standardise_units_inplac": 339, "tag": 389, "target": 439, "task": [377, 378, 379, 380, 381, 382, 383], "templat": [451, 524, 545], "templatendspatialmodel": 261, "templatendspectralmodel": 262, "templatenpredmodel": 263, "templatephasecurvetemporalmodel": 264, "templatespatialmodel": 265, "templatespectralmodel": 266, "tempor": [452, 459, 471, 514, 547, 548, 549, 550, 551, 552, 553, 554, 555], "temporal_model_registri": 260, "temporalmodel": 267, "term": 392, "terminologi": 376, "test": [13, 366, 369, 450, 460], "text": 366, "theta": 478, "thi": 369, "thumbnail": 367, "time": [13, 375, 381, 434, 438, 446, 451, 454, 456, 458, 459, 461, 474, 479, 480, 481, 483, 487, 515, 525, 546, 556, 564], "time_ref_from_dict": 348, "time_ref_to_dict": 349, "time_relative_to_ref": 350, "timemapaxi": [195, 468], "timmerkonig_lightcurve_simul": 278, "tool": [11, 366, 560], "tooltip": 367, "touch": 369, "trapz_loglog": 306, "troubleshoot": [401, 560], "true": [502, 504, 506], "tsmapestim": 129, "tutori": [367, 374, 386, 398, 450, 475, 480], "two": 470, "type": [366, 393, 496], "uncertainti": 384, "underli": 513, "unfold": 394, "unfreez": 470, "unif": 390, "unifi": [377, 390], "unit": [13, 366], "unit_from_fits_image_hdu": 352, "unix": 366, "unreleas": 433, "up": [369, 385, 387], "upsampl": 513, "us": [366, 376, 394, 399, 402, 440, 450, 451, 457, 464, 465, 466, 468, 484, 485, 488, 491, 495, 496, 497, 498, 499, 505, 507, 508, 509, 512, 531, 542, 543, 544, 557], "user": [373, 501], "util": [4, 5, 8, 10, 13, 385, 558, 562, 564], "valid": 393, "valleespir": 38, "valu": [366, 394, 450, 468, 473], "vari": 459, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 451, 456], "varianc": 456, "variou": 472, "veloc": 490, "velocity_distribut": 49, "velocity_glon_glat": 302, "venv": 397, "version": [366, 391, 395, 404, 455], "virtual": 397, "visual": [14, 387, 468, 513, 565], "volum": 513, "warn": 366, "wc": [468, 513], "wcsgeom": 196, "wcsmap": 197, "wcsndmap": [198, 512], "we": [374, 381, 382, 390, 477], "webpag": 396, "what": [366, 369, 371, 374, 376, 381, 382, 390, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 437, 439, 440, 443, 449, 457, 484, 486], "where": 366, "which": 366, "wind": 493, "wise": 457, "without": 473, "wobbleregionsfind": 173, "work": 497, "workflow": 558, "write": [366, 371, 440, 452, 468, 469, 497, 513, 560], "write_yaml": 335, "wstat": [292, 561, 562, 563], "wstatcountsstatist": 279, "yaml": [389, 440, 484, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "your": [401, 440, 560], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})