Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[411, null]], "0.10 (Jan 28, 2019)": [[412, null]], "0.11 (Mar 29, 2019)": [[413, null]], "0.12 (May 30, 2019)": [[414, null]], "0.13 (Jul 26, 2019)": [[415, null]], "0.14 (Sep 30, 2019)": [[416, null]], "0.15 (Dec 3, 2019)": [[417, null]], "0.16 (Feb 1, 2020)": [[418, null]], "0.17 (Apr 1, 2020)": [[419, null]], "0.18 (Nov 4th, 2020)": [[420, null]], "0.18.1 (Nov 6th, 2020)": [[421, null]], "0.18.2 (Nov 19th, 2020)": [[422, null]], "0.19 (Nov 22nd, 2021)": [[423, null]], "0.2 (Apr 13, 2015)": [[424, null]], "0.20 (May 12th, 2022)": [[425, null]], "0.20.1 (June 16th, 2022)": [[426, null]], "0.3 (Aug 13, 2015)": [[427, null]], "0.4 (Apr 20, 2016)": [[428, null]], "0.5 (Nov 22, 2016)": [[429, null]], "0.6 (Apr 28, 2017)": [[430, null]], "0.7 (Feb 28, 2018)": [[431, null]], "0.8 (Sep 23, 2018)": [[432, null]], "0.9 (Nov 29, 2018)": [[433, null]], "1.0 (November 10th, 2022)": [[434, null]], "1.0.1 (March 14th, 2023)": [[435, null]], "1.0.2 (December 6th, 2023)": [[436, null]], "1.1 (June 13th 2023)": [[437, null]], "1.2 (February 29th 2024)": [[438, null]], "1.3 (unreleased)": [[439, null]], "1D Spectral": [[487, "d-spectral"]], "1D spectrum simulation": [[449, null]], "2D Image": [[487, "d-image"]], "2D map fitting": [[451, null]], "3D Cube": [[487, "d-cube"]], "3D detailed analysis": [[454, null]], "3D map simulation": [[462, null]], "A note on statistics": [[446, "a-note-on-statistics"]], "API Links": [[373, "api-links"]], "API changes": [[434, "api-changes"], [437, "api-changes"], [438, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[117, null]], "Abstract": [[377, "abstract"], [378, "abstract"], [379, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[375, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[475, "accessing-data"]], "Accessing contents of a dataset": [[471, "accessing-contents-of-a-dataset"]], "Accessor methods": [[519, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[442, null]], "Adaptive smoothing": [[450, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[163, null]], "Add a model on multiple datasets": [[477, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[383, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[475, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[475, "adding-non-contiguous-axes"]], "Additional Models": [[395, "additional-models"]], "Additional PSF classes": [[513, "additional-psf-classes"]], "Additional utilities": [[565, "additional-utilities"]], "Aim": [[477, "aim"]], "Alternative": [[396, "alternative"]], "Alternatives": [[380, "alternatives"], [383, "alternatives"], [386, "alternatives"], [388, "alternatives"], [389, "alternatives"], [390, "alternatives"], [392, "alternatives"], [393, "alternatives"], [399, "alternatives"]], "Alternatives / Outlook": [[385, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[447, "analysis-configuration"], [454, "analysis-configuration"], [464, "analysis-configuration"], [491, "analysis-configuration"]], "Analysis steps": [[565, "analysis-steps"]], "Analysis workflow": [[565, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[513, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[372, "assert-convention"]], "Assign to model to all datasets": [[465, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[477, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[498, null]], "Astrophysical source population models": [[497, null]], "Astrophysics": [[496, null]], "Authorship policy": [[398, "authorship-policy"]], "BACKEND_DEFAULT": [[314, null]], "BSD or GPL license?": [[372, "bsd-or-gpl-license"]], "Background": [[482, "background"], [510, null]], "Background / What we have now": [[387, "background-what-we-have-now"]], "Background Model Handling": [[394, "background-model-handling"]], "Background estimation": [[474, "background-estimation"], [515, "background-estimation"]], "Background2D": [[142, null]], "Background3D": [[143, null]], "BackgroundIRF": [[144, null]], "BackgroundIRFModel": [[383, "backgroundirfmodel"]], "BackgroundModel": [[383, "backgroundmodel"]], "Basic image exploration and fitting": [[456, null]], "Basic operators": [[475, "basic-operators"]], "Bayesian blocks": [[463, "bayesian-blocks"]], "Bin volume and angular size": [[520, "bin-volume-and-angular-size"]], "Boundary mask": [[476, "boundary-mask"]], "Broken power law spectral model": [[534, null]], "BrokenPowerLawSpectralModel": [[213, null]], "Bug fixes and improvements": [[425, "bug-fixes-and-improvements"], [434, "bug-fixes-and-improvements"], [437, "bug-fixes-and-improvements"], [438, "bug-fixes-and-improvements"]], "Build": [[402, "build"]], "Building 1D datasets from the new observations": [[465, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[464, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[464, "building-the-3d-analysis-configuration"]], "Built-in models": [[564, "built-in-models"]], "Bundled gammapy.extern code": [[372, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[398, "citation-cff"]], "CLUMPY": [[495, "clumpy"]], "CTA 1DC": [[482, "cta-1dc"]], "CTA performance files": [[482, "cta-performance-files"]], "CTA with Gammapy": [[482, null]], "Caplog fixture": [[372, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[400, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[400, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[400, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[568, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[569, "cash-counts-statistic"]], "CashCountsStatistic": [[281, null]], "Catalog table": [[470, "catalog-table"]], "Caveat": [[568, "caveat"]], "Changelog": [[392, "changelog"]], "Check Python code": [[373, "check-python-code"]], "Check broken links": [[373, "check-broken-links"]], "Check setup": [[441, "check-setup"], [443, "check-setup"], [446, "check-setup"], [447, "check-setup"], [448, "check-setup"], [449, "check-setup"], [450, "check-setup"], [451, "check-setup"], [452, "check-setup"], [454, "check-setup"], [455, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [459, "check-setup"], [460, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [477, "check-setup"], [478, "check-setup"], [480, "check-setup"], [482, "check-setup"], [483, "check-setup"], [484, "check-setup"], [485, "check-setup"], [491, "check-setup"], [492, "check-setup"], [493, "check-setup"]], "Check the dataset we produced": [[484, "check-the-dataset-we-produced"]], "Check your setup": [[407, "check-your-setup"]], "Checker": [[346, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[373, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[398, "citation-scheme"]], "Class attributes": [[373, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[391, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[372, "clobber-or-overwrite"]], "Code in RST files": [[373, "code-in-rst-files"]], "Code in docstrings in Python files": [[373, "code-in-docstrings-in-python-files"]], "Code quality": [[402, "code-quality"]], "Collection of the personal information of authors": [[398, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[572, "colormaps"]], "Combining event lists and GTIs": [[504, "combining-event-lists-and-gtis"]], "Combining two Models": [[477, "combining-two-models"]], "Command line tools": [[567, null]], "Command line tools using click": [[372, "command-line-tools-using-click"]], "Command not found": [[567, "command-not-found"]], "Compare against the literature": [[448, "compare-against-the-literature"]], "Compare results": [[464, "compare-results"]], "Compound Spectral Model": [[478, "compound-spectral-model"]], "Compound spectral model": [[535, null]], "CompoundSpectralModel": [[214, null]], "Computation times": [[440, null], [445, null], [453, null], [461, null], [468, null], [481, null], [486, null], [488, null], [490, null], [494, null], [522, null], [532, null], [553, null], [563, null]], "Compute Flux Points": [[446, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[452, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[456, "compute-images"]], "Compute sensitivity": [[441, "compute-sensitivity"]], "Computing contours using stat_contour": [[472, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[472, "computing-contours-using-stat-surface"]], "Computing flux points": [[492, "computing-flux-points"]], "Conda Environments": [[403, "conda-environments"]], "Confidence contours": [[472, "confidence-contours"]], "Configurable analysis": [[565, "configurable-analysis"]], "Configuration": [[460, "configuration"]], "Configuration for stacked and joint analysis": [[454, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[447, "configuration-of-the-analysis"]], "Constant spatial model": [[523, null]], "Constant spectral model": [[536, null]], "Constant temporal model": [[554, null]], "ConstantFluxSpatialModel": [[215, null]], "ConstantSpatialModel": [[216, null]], "ConstantSpectralModel": [[217, null]], "ConstantTemporalModel": [[218, null]], "Context": [[443, "context"], [444, "context"], [446, "context"], [447, "context"], [448, "context"], [449, "context"], [450, "context"], [451, "context"], [452, "context"], [455, "context"], [457, "context"], [458, "context"], [460, "context"], [462, "context"], [463, "context"], [464, "context"], [465, "context"], [466, "context"], [476, "context"], [479, "context"], [480, "context"], [491, "context"], [492, "context"]], "Continuous integration": [[402, "continuous-integration"]], "Contribution in conferences": [[398, "contribution-in-conferences"]], "Contributors": [[411, "contributors"], [412, "contributors"], [413, "contributors"], [414, "contributors"], [415, "contributors"], [416, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[372, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[372, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[520, "coordinates-defined-by-the-regiongeom"]], "Counts": [[483, "counts"]], "Counts and fit statistics": [[569, "counts-and-fit-statistics"]], "Counts statistics classes": [[569, "counts-statistics-classes"]], "Covariance": [[204, null]], "Covariance and parameters errors": [[472, "covariance-and-parameters-errors"]], "CovarianceResult": [[205, null]], "Create DL4 product - PSFMap": [[473, "create-dl4-product-psfmap"]], "Create a mask in energy": [[476, "create-a-mask-in-energy"]], "Create a stacked dataset": [[452, "create-a-stacked-dataset"]], "Create edisp kernel map": [[473, "create-edisp-kernel-map"]], "Create exclusion mask": [[446, "create-exclusion-mask"], [452, "create-exclusion-mask"]], "Create exposure map": [[473, "create-exposure-map"]], "Create the energy-dependent temporal model": [[459, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[492, "create-the-maker-classes-to-be-used"]], "Create the makers": [[443, "create-the-makers"]], "Create the mask from a catalog of sources": [[476, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[476, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[476, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[476, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[459, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[475, "creating-wcs-maps"]], "Creating a RegionGeom": [[520, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[520, "creating-a-regionndmap"]], "Creating a mask for fitting": [[476, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[476, "creating-a-mask-manually"]], "Creating an empty dataset": [[471, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[476, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[475, "creating-from-a-map-geometry"]], "Creating the config file": [[451, "creating-the-config-file"], [452, "creating-the-config-file"]], "Creation of the Flux points": [[447, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[465, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[465, "creation-of-the-datasets"]], "Creation of the model": [[447, "creation-of-the-model"]], "Cube plotting": [[475, "cube-plotting"]], "Cumulative excess and significance": [[443, "cumulative-excess-and-significance"]], "Current status": [[397, "current-status"]], "Custom models": [[564, "custom-models"]], "Cutouts": [[475, "cutouts"]], "Cython": [[402, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[398, "dco-implementation"]], "DL3 DR1": [[485, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[299, null]], "Dark matter": [[495, null]], "Dark matter spatial and spectral models": [[469, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[387, "data-fitting"]], "Data access and selection (DL3)": [[504, null]], "Data analysis": [[487, "data-analysis"]], "Data analysis subpackages in gammapy": [[378, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[381, "data-and-observation-handling"]], "Data and models files": [[455, "data-and-models-files"]], "Data exploration": [[487, "data-exploration"]], "Data reduction": [[387, "data-reduction"], [454, "data-reduction"], [454, "id1"], [491, "data-reduction"], [492, "data-reduction"]], "Data reduction (DL3 to DL4)": [[515, null]], "Data reduction into a MapDataset": [[484, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[474, "data-reduction-loop"]], "Data structures": [[493, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [384, "dataset"], [474, "dataset"]], "Dataset helper / convenience methods": [[384, "dataset-helper-convenience-methods"]], "Dataset serialization": [[384, "dataset-serialization"]], "Dataset simulations": [[448, "dataset-simulations"]], "DatasetModels": [[219, null]], "Datasets": [[100, null], [381, "datasets"], [384, "datasets"], [399, "datasets"], [471, "datasets"]], "Datasets (DL4)": [[503, null]], "Datasets - Reduced data, IRFs, models": [[471, null]], "Datasets serialization": [[455, "datasets-serialization"]], "DatasetsMaker": [[164, null]], "Datastore": [[482, "datastore"]], "Dealing with links": [[373, "dealing-with-links"]], "Decision": [[377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"]], "Define Target Region": [[446, "define-target-region"]], "Define an Observation": [[458, "define-an-observation"]], "Define an observation and make a dataset": [[459, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[441, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[456, "define-map-geometry"]], "Define the MapDataset": [[458, "define-the-mapdataset"]], "Define the Model": [[465, "define-the-model"]], "Define the ON region": [[448, "define-the-on-region"]], "Define the Sky model: a point-like source": [[458, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[443, "define-the-geometries"]], "Define the geometry": [[476, "define-the-geometry"]], "Define the model": [[492, "define-the-model"]], "Define the model to be used": [[464, "define-the-model-to-be-used"], [464, "id3"]], "Define the simulation source model": [[459, "define-the-simulation-source-model"]], "Define time intervals": [[465, "define-time-intervals"]], "Defining the datastore and selecting observations": [[492, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[465, "defining-the-geometry"]], "Definition of a Contributor": [[398, "definition-of-a-contributor"]], "Definition of the Maintainer": [[398, "definition-of-the-maintainer"]], "Definition of the data selection": [[464, "definition-of-the-data-selection"], [464, "id1"]], "Definition of the dataset geometry": [[464, "definition-of-the-dataset-geometry"], [464, "id2"]], "Dependencies": [[371, null], [389, "dependencies"]], "Deprecating a function or a class": [[372, "deprecating-a-function-or-a-class"]], "Deprecation": [[397, "deprecation"]], "Derivation of the WStat formula": [[570, null]], "Detailed plan": [[379, "detailed-plan"]], "Developer How To": [[372, null]], "Developer guide": [[374, null]], "Discussion / Alternatives": [[387, "discussion-alternatives"]], "Disk spatial model": [[524, null]], "DiskSpatialModel": [[220, null]], "Dissolve gammapy.background": [[391, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[391, "dissolve-gammapy-image"]], "Distributions": [[389, "distributions"], [389, "id1"]], "Documentation": [[381, "documentation"], [438, "documentation"]], "Documentation How To": [[373, null]], "Documentation building": [[373, "documentation-building"]], "Documentation guidelines": [[373, "documentation-guidelines"]], "Download": [[402, "download"]], "EBL absorption spectral model": [[533, null]], "EBLAbsorptionNormSpectralModel": [[221, null]], "EBL_DATA_BUILTIN": [[222, null]], "EDispKernel": [[145, null]], "EDispKernelMap": [[146, null]], "EDispMap": [[147, null]], "ESTIMATOR_REGISTRY": [[118, null]], "Effective Area": [[473, "effective-area"]], "Effective area": [[482, "effective-area"], [509, null]], "EffectiveAreaTable2D": [[148, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[395, "energy-dependent-spatial-models"]], "Energy Dispersion": [[473, "energy-dispersion"], [483, "energy-dispersion"], [511, null]], "Energy dispersion": [[482, "energy-dispersion"]], "Energy edges": [[505, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[119, null]], "EnergyDependentMultiGaussPSF": [[149, null]], "EnergyDispersion2D": [[150, null]], "Estimating TS": [[569, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[463, null]], "Estimator": [[120, null]], "Estimators": [[399, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[505, null]], "Event Simulation": [[381, "event-simulation"]], "Event lists": [[493, "event-lists"]], "Event sampling": [[458, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[482, "events"], [483, "events"]], "Example": [[568, "example"], [568, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[480, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[480, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[523, "example-plot"], [524, "example-plot"], [525, "example-plot"], [526, "example-plot"], [527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[506, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[502, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[502, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[504, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[504, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[503, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[503, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[505, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[505, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[512, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[512, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[512, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[514, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[515, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[516, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[515, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[519, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[519, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[519, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[564, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[569, "excess-and-significance"], [569, "id2"]], "Excess errors": [[569, "excess-errors"], [569, "id4"]], "Excess estimators": [[396, "excess-estimators"]], "ExcessMapEstimator": [[121, null]], "Exclusion masks": [[476, "exclusion-masks"]], "Execution": [[567, "execution"]], "Exemplary additional prior subclasses:": [[400, "exemplary-additional-prior-subclasses"]], "Exercises": [[441, "exercises"], [444, "exercises"], [446, "exercises"], [449, "exercises"], [454, "exercises"], [456, "exercises"], [458, "exercises"], [459, "exercises"], [466, "exercises"], [482, "exercises"], [483, "exercises"], [484, "exercises"], [485, "exercises"], [493, "exercises"], [493, "id1"], [493, "id2"], [493, "id3"]], "Existing code": [[378, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[223, null]], "ExpCutoffPowerLawNormSpectralModel": [[224, null]], "ExpCutoffPowerLawSpectralModel": [[225, null]], "ExpDecay temporal model": [[555, null]], "ExpDecayTemporalModel": [[226, null]], "Expected number of detected events": [[512, "expected-number-of-detected-events"]], "Exploration of the fit results": [[447, "exploration-of-the-fit-results"]], "Explore the fit results": [[443, "explore-the-fit-results"]], "Explore the results": [[443, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[444, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[539, null]], "Exponential cutoff power law spectral model": [[537, null]], "Exponential cutoff power law spectral model used for 3FGL": [[538, null]], "Expose model parameters as attributes": [[383, "expose-model-parameters-as-attributes"]], "Exposure": [[483, "exposure"]], "Extended source using a template": [[458, "extended-source-using-a-template"]], "Extract the light curve": [[465, "extract-the-light-curve"]], "Extract the lightcurve": [[466, "extract-the-lightcurve"]], "Extracting the light curve": [[464, "extracting-the-light-curve"]], "Extracting the ring background": [[452, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[512, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[401, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[455, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[483, null]], "FermiST": [[495, "fermist"]], "Files": [[482, "files"]], "Filling a RegionNDMap": [[520, "filling-a-regionndmap"]], "Filling maps from event lists": [[475, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[475, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[465, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[377, "final-remarks"]], "Final result": [[570, "final-result"]], "Fit": [[206, null], [462, "fit"], [483, "fit"]], "Fit quality and model residuals": [[446, "fit-quality-and-model-residuals"], [448, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[472, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[454, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[454, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[446, "fit-spectrum"], [448, "fit-spectrum"]], "Fit statistics": [[568, null]], "Fit the datasets": [[466, "fit-the-datasets"]], "Fit the model": [[492, "fit-the-model"]], "FitResult": [[207, null]], "Fitting": [[381, "fitting"], [472, null]], "Fitting Multiple Datasets with and without the Prior": [[480, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[480, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[472, "fitting-options"]], "Fitting temporal models": [[466, "fitting-temporal-models"]], "Fitting the obtained light curve": [[466, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[372, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[372, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[460, null]], "Flux maps": [[505, "flux-maps"]], "Flux maps for annihilation": [[469, "flux-maps-for-annihilation"]], "Flux maps for decay": [[469, "flux-maps-for-decay"]], "Flux point fitting": [[444, null]], "Flux points": [[470, "flux-points"], [491, "flux-points"], [505, "flux-points"]], "Flux quantities": [[505, "flux-quantities"]], "FluxMaps": [[122, null]], "FluxMetaData": [[123, null]], "FluxPoints": [[124, null]], "FluxPointsDataset": [[101, null], [384, "fluxpointsdataset"], [471, "fluxpointsdataset"]], "FluxPointsEstimator": [[125, null]], "FluxProfileEstimator": [[126, null]], "FoV background": [[474, "fov-background"], [514, null]], "FoVAlignment": [[151, null]], "FoVBackgroundMaker": [[165, null]], "FoVBackgroundModel": [[227, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[463, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[477, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[373, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[372, "functions-returning-several-values"]], "Further extensions": [[442, "further-extensions"]], "Further references": [[568, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[483, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[497, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[469, "gamma-ray-spectra-at-production"]], "Gammapy": [[409, null]], "Gammapy Binder": [[402, "id1"]], "Gammapy analysis workflow and package structure": [[565, null]], "Gammapy overview": [[392, "gammapy-overview"]], "Gammapy repository": [[402, "gammapy-repository"]], "Gammapy tutorial": [[495, "gammapy-tutorial"]], "Gammapy webpages": [[402, "gammapy-webpages"]], "Gaussian spatial model": [[525, null]], "Gaussian spectral model": [[540, null]], "Gaussian temporal model": [[556, null]], "GaussianSpatialModel": [[228, null]], "GaussianSpectralModel": [[229, null]], "GaussianTemporalModel": [[230, null]], "General Gammapy publications": [[398, "general-gammapy-publications"]], "General code style guidelines": [[378, "general-code-style-guidelines"]], "General conventions": [[372, "general-conventions"]], "General idea and class diagram": [[382, "general-idea-and-class-diagram"]], "General method": [[505, "general-method"]], "General organization of the new approach": [[387, "general-organization-of-the-new-approach"]], "Generalist estimators": [[396, "generalist-estimators"]], "Generalized Gaussian temporal model": [[557, null]], "Generalized gaussian spatial model": [[526, null]], "GeneralizedGaussianSpatialModel": [[231, null]], "GeneralizedGaussianTemporalModel": [[232, null]], "Generating log messages": [[372, "generating-log-messages"]], "Geom": [[186, null]], "Get a fit stat profile for the redshift": [[442, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[375, "get-in-touch-early"]], "Get set up": [[375, "get-set-up"]], "Get the flux points": [[442, "get-the-flux-points"]], "Getting started": [[392, "getting-started"], [404, null], [496, "getting-started"], [497, "getting-started"], [498, "getting-started"]], "Getting started section restructuring": [[392, "getting-started-section-restructuring"]], "Getting started with data": [[504, "getting-started-with-data"]], "Getting started with maps": [[519, "getting-started-with-maps"]], "Getting the reduced dataset": [[451, "getting-the-reduced-dataset"], [452, "getting-the-reduced-dataset"]], "Global Model Handling": [[394, "global-model-handling"]], "Glossary": [[566, "glossary"]], "Glossary and references": [[566, null]], "Goodness of fit": [[570, "goodness-of-fit"]], "Guidelines and specific actions": [[392, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[485, null]], "HAWC data access and reduction": [[484, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[484, null]], "HAWC: 1D dataset for flux point fitting": [[455, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[307, null]], "HEALPix geometry": [[518, "healpix-geometry"]], "HEALPix-based maps": [[518, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[455, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[398, "handling-of-conference-material"]], "Help!?": [[407, "help"]], "Hierarchical clustering of observations": [[479, "hierarchical-clustering-of-observations"]], "Hierarchy": [[399, "hierarchy"]], "High Level Analysis Interface": [[506, null]], "High level interface": [[381, "high-level-interface"], [491, null]], "How To": [[392, "how-to"], [507, null]], "How to contribute to Gammapy": [[375, null]], "How to get data values": [[475, "how-to-get-data-values"]], "How to handle API breaking changes?": [[372, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[401, null]], "How to make a pull request": [[372, "how-to-make-a-pull-request"]], "How to set data values": [[475, "how-to-set-data-values"]], "How to use logging": [[372, "how-to-use-logging"]], "How to use random numbers": [[372, "how-to-use-random-numbers"]], "How to write code": [[372, "how-to-write-code"]], "How to write tests": [[372, "how-to-write-tests"]], "HpxGeom": [[187, null]], "HpxMap": [[188, null]], "HpxNDMap": [[189, null]], "IPython": [[408, "id3"]], "IRF": [[152, null], [399, "irf"]], "IRF axis naming": [[512, "irf-axis-naming"]], "IRFMap": [[153, null]], "IRF_REGISTRY": [[154, null]], "IRFs": [[381, "irfs"], [482, "irfs"]], "Image Plotting": [[475, "image-plotting"]], "ImageProfile": [[127, null]], "ImageProfileEstimator": [[128, null]], "Images and masks": [[386, "images-and-masks"]], "Implement default parameters": [[383, "implement-default-parameters"]], "Implement evaluation region specifications": [[383, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[383, "implement-sky-coordinate-handling"]], "Implementation": [[392, "implementation"], [400, "implementation"]], "Implementation Outline": [[400, "implementation-outline"]], "Implementation road map": [[382, "implementation-road-map"]], "Implementing a custom model": [[478, "implementing-a-custom-model"]], "Implementing a custom prior": [[480, "implementing-a-custom-prior"]], "Imports and versions": [[462, "imports-and-versions"]], "Improve SourceModels class": [[383, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[383, "improve-and-implement-model-serilization"]], "Improve spatial models": [[383, "improve-spatial-models"]], "In the RST files": [[373, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[473, "inbuilt-gammapy-irfs"]], "Include png files as images": [[373, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[475, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[492, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[492, "inspecting-residuals"]], "Install issues": [[407, "install-issues"]], "Installation": [[392, "installation"], [404, "installation"], [405, null]], "Instrument Response Functions (DL3)": [[512, null]], "Interaction Between Models and Dataset Objects": [[394, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[519, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[475, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[372, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[395, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[396, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[396, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[396, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[393, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[393, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[393, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[391, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[393, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[383, "introduce-naming-scheme-for-models"]], "Introduction": [[383, "introduction"], [386, "introduction"], [387, "introduction"], [389, "introduction"], [390, "introduction"], [392, "introduction"], [396, "introduction"], [398, "introduction"], [399, "introduction"], [441, "introduction"], [446, "introduction"], [448, "introduction"], [456, "introduction"], [467, "introduction"], [469, "introduction"], [470, "introduction"], [471, "introduction"], [474, "introduction"], [475, "introduction"], [482, "introduction"], [483, "introduction"], [487, "introduction"], [493, "introduction"], [495, "introduction"], [497, "introduction"], [498, "introduction"], [568, "introduction"]], "Introduction of background models": [[383, "introduction-of-background-models"]], "Introduction of model name attributes": [[383, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[383, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[321, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[483, "isotropic-diffuse-background"]], "Iterating by image": [[475, "iterating-by-image"]], "J Factors": [[469, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[503, "joint-analysis"]], "Joint analysis": [[454, "joint-analysis"], [455, "joint-analysis"]], "Jupyter notebooks": [[408, "jupyter-notebooks"]], "LabelMapAxis": [[190, null], [475, "labelmapaxis"]], "Lazy loading of Datasets": [[384, "lazy-loading-of-datasets"]], "LazyFitsData": [[308, null]], "Let\u2019s simulate the model": [[459, "let-s-simulate-the-model"]], "Light Curve Fitting": [[387, "light-curve-fitting"]], "Light Curve estimation by observation": [[464, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[562, null]], "Light curves": [[464, null]], "Light curves for flares": [[465, null]], "LightCurveEstimator": [[129, null]], "LightCurveTemplateTemporalModel": [[233, null]], "Lightcurve": [[387, "lightcurve"]], "Lightcurves": [[470, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[387, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[382, "limitations"]], "Linear temporal model": [[558, null]], "LinearTemporalModel": [[234, null]], "Links to other tutorials": [[373, "links-to-other-tutorials"]], "List available catalogs": [[470, "list-available-catalogs"]], "Load Data": [[446, "load-data"]], "Load IRFs and prepare dataset": [[441, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[470, "load-catalogs"]], "Load data": [[448, "load-data"]], "Load spectral points": [[444, "load-spectral-points"]], "Load the data": [[442, "load-the-data"]], "Loading models from a catalog": [[477, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[372, "locate-origin-of-warnings"]], "Log parabola spectral model": [[541, null]], "Log parabola spectral norm model": [[542, null]], "Log-Parabola Fit": [[444, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[235, null]], "LogParabolaSpectralModel": [[236, null]], "LogSpiral": [[34, null]], "Long Term Support releases": [[398, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[492, null]], "Low level map and cube analysis": [[378, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[166, null]], "METHOD_DEFAULT": [[315, null]], "METHOD_KWARGS_DEFAULT": [[316, null]], "MODEL_REGISTRY": [[237, null]], "Maintainer and developer perspective": [[379, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[381, "maintenance-and-code-quality"]], "Make a Bugfix release": [[401, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[467, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[456, "make-sky-images"]], "Make small pull requests": [[375, "make-small-pull-requests"]], "Maker": [[167, null]], "Makers": [[399, "makers"]], "Makers - Data reduction": [[474, null]], "Making a butterfly plot": [[492, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[372, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[372, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[372, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[479, "manual-grouping-of-observations"]], "Map": [[191, null]], "Map Analysis / Data Reduction": [[381, "map-analysis-data-reduction"]], "MapAxes": [[192, null]], "MapAxis": [[193, null]], "MapCoord": [[194, null], [519, "mapcoord"]], "MapDataset": [[102, null], [384, "mapdataset"], [471, "mapdataset"]], "MapDatasetEventSampler": [[103, null], [385, "mapdataseteventsampler"]], "MapDatasetMaker": [[168, null]], "MapDatasetMetaData": [[104, null]], "MapDatasetOnOff": [[105, null], [384, "mapdatasetonoff"]], "MapPanelPlotter": [[359, null]], "Maps": [[195, null], [381, "maps"], [475, null], [493, "maps"]], "Maps operations": [[475, "maps-operations"]], "Mask dilation and erosion": [[476, "mask-dilation-and-erosion"]], "Mask maps": [[476, null]], "Mask modifications": [[476, "mask-modifications"]], "Mask some sky regions": [[476, "mask-some-sky-regions"]], "Masks for fitting": [[476, "masks-for-fitting"]], "Masks operations": [[476, "masks-operations"]], "Meetings": [[381, "meetings"]], "Metadata API": [[399, "metadata-api"]], "Metadata files": [[398, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[399, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[463, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[238, null]], "Minor changes": [[393, "minor-changes"]], "Mission elapsed times (MET)": [[571, "mission-elapsed-times-met"]], "Model": [[239, null]], "Model and dataset": [[472, "model-and-dataset"], [480, "model-and-dataset"]], "Model fit": [[456, "model-fit"]], "Model fitting": [[447, "model-fitting"], [491, "model-fitting"]], "Model gallery": [[521, null]], "Model lists and serialisation": [[478, "model-lists-and-serialisation"]], "Model the observed spectrum": [[442, "model-the-observed-spectrum"]], "ModelBase": [[240, null]], "Modeling": [[381, "modeling"], [399, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[564, null]], "Modeling and fitting": [[454, "modeling-and-fitting"]], "Modelling": [[451, "modelling"], [477, null]], "Models": [[241, null], [478, null]], "Models with energy dependent morphology": [[478, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[478, "models-with-shared-parameter"]], "Modifying Data": [[475, "modifying-data"]], "Modifying model parameters": [[478, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[457, null]], "Motivation": [[400, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[455, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[317, null]], "Naima spectral model": [[543, null]], "NaimaSpectralModel": [[242, null]], "New features": [[434, "new-features"], [437, "new-features"], [438, "new-features"]], "Next steps": [[482, "next-steps"], [484, "next-steps"], [485, "next-steps"]], "Night-wise LC estimation": [[464, "night-wise-lc-estimation"]], "Norm Spectral Models": [[478, "norm-spectral-models"]], "Notations": [[569, "notations"]], "Notes": [[568, "notes"]], "OGIPDatasetReader": [[106, null]], "OGIPDatasetWriter": [[107, null]], "Object text repr, str and info": [[372, "object-text-repr-str-and-info"]], "Objective": [[451, "objective"], [452, "objective"], [458, "objective"], [459, "objective"], [479, "objective"]], "Objectives": [[382, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[474, "observation-duration-and-effective-livetime"]], "Observation selection": [[447, "observation-selection"], [491, "observation-selection"]], "ObservationEventSampler": [[108, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[479, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[457, "obtain-the-data-to-use"]], "Obtain the observations": [[479, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[441, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[402, "old-example-data"]], "On-Off analysis": [[449, "on-off-analysis"]], "Opening the data": [[467, "opening-the-data"]], "OptimizeResult": [[208, null]], "Optional dependencies": [[371, "optional-dependencies"], [389, "optional-dependencies"]], "Other folders": [[402, "other-folders"]], "Other packages": [[495, "other-packages"]], "Other repositories": [[402, "other-repositories"]], "Others": [[372, "others"], [402, "others"]], "Outlook": [[384, "outlook"], [386, "outlook"], [388, "outlook"], [389, "outlook"], [391, "outlook"], [392, "outlook"], [393, "outlook"], [396, "outlook"]], "Output in Jupyter notebook cells": [[372, "output-in-jupyter-notebook-cells"]], "Overview": [[514, "overview"], [516, "overview"], [517, "overview"]], "PIG 1 - PIG purpose and guidelines": [[377, null]], "PIG 10 - Regions": [[386, null]], "PIG 11 - Light curves": [[387, null]], "PIG 12 - High level interface": [[388, null]], "PIG 13 - Gammapy dependencies and distribution": [[389, null]], "PIG 14 - Uncertainty estimation": [[390, null]], "PIG 16 - Gammapy package structure": [[391, null]], "PIG 18 - Documentation": [[392, null]], "PIG 19 - Gammapy package structure follow up": [[393, null]], "PIG 2 - Organization of low level analysis code": [[378, null]], "PIG 20 - Global Model API": [[394, null]], "PIG 21 - Models improvements": [[395, null]], "PIG 22 - Unified flux estimators API": [[396, null]], "PIG 23 - Gammapy release cycle and version numbering": [[397, null]], "PIG 24 - Authorship policy": [[398, null]], "PIG 25 - Metadata container for Gammapy": [[399, null]], "PIG 26 - Model Priors API": [[400, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[379, null]], "PIG 4 - Setup for tutorial notebooks and data": [[380, null]], "PIG 5 - Gammapy 1.0 roadmap": [[381, null]], "PIG 6 - CTA observation handling": [[382, null]], "PIG 7 - Models": [[383, null]], "PIG 8 - Datasets": [[384, null]], "PIG 9 - Event sampling": [[385, null]], "PIG review": [[377, "pig-review"]], "PIG status": [[377, "pig-status"]], "PIGs": [[376, null]], "POOL_KWARGS_DEFAULT": [[318, null]], "PSF": [[473, "psf"], [483, "psf"]], "PSF3D": [[155, null]], "PSFKernel": [[156, null]], "PSFKing": [[157, null]], "PSFMap": [[158, null]], "PWN": [[50, null]], "Package / API": [[487, "package-api"]], "Package and docs": [[402, "package-and-docs"]], "Package structure and dependencies": [[425, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[381, "papers"]], "Parallel evaluation of datasets": [[384, "parallel-evaluation-of-datasets"]], "Parameter": [[209, null]], "ParameterEstimator": [[130, null]], "Parameters": [[210, null]], "ParametricPSF": [[159, null]], "Perform spectral model fitting": [[443, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[492, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[443, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[385, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[561, null]], "Phase-resolved map": [[467, "phase-resolved-map"]], "Phase-resolved spectrum": [[467, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[169, null]], "Phasogram": [[467, "phasogram"]], "Piecewise  norm spectral model": [[544, null]], "Piecewise norm spatial model": [[527, null]], "PiecewiseNormSpatialModel": [[243, null]], "PiecewiseNormSpectralModel": [[244, null]], "Pixel coordinate convention": [[372, "pixel-coordinate-convention"]], "Plot": [[456, "plot"]], "Plot off regions": [[446, "plot-off-regions"]], "Plot resulting images": [[450, "plot-resulting-images"]], "Plot the fitted spectrum": [[492, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[442, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[460, "plotting-results"]], "Plotting a RegionGeom": [[520, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[477, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[447, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[520, "plotting-the-map-content"]], "Plotting the results": [[457, "plotting-the-results"]], "Plotting the underlying region": [[520, "plotting-the-underlying-region"]], "Point Spread Function": [[513, null]], "Point source sensitivity": [[441, null]], "Point spatial model": [[528, null]], "Point spread function": [[482, "point-spread-function"]], "PointSpatialModel": [[245, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[398, "possible-implementations"]], "Post release": [[401, "post-release"]], "Power Law Fit": [[444, "power-law-fit"]], "Power law 2 spectral model": [[546, null]], "Power law norm spectral model": [[547, null]], "Power law spectral model": [[545, null]], "PowerLaw temporal model": [[559, null]], "PowerLaw2SpectralModel": [[246, null]], "PowerLawNormSpectralModel": [[247, null]], "PowerLawSpectralModel": [[248, null]], "PowerLawTemporalModel": [[249, null]], "Predicted counts": [[503, "predicted-counts"]], "Prepare and run the event sampler": [[459, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[443, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[492, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[443, "prerequisites"], [444, "prerequisites"], [446, "prerequisites"], [447, "prerequisites"], [448, "prerequisites"], [449, "prerequisites"], [451, "prerequisites"], [455, "prerequisites"], [457, "prerequisites"], [458, "prerequisites"], [459, "prerequisites"], [460, "prerequisites"], [462, "prerequisites"], [463, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [466, "prerequisites"], [472, "prerequisites"], [476, "prerequisites"], [477, "prerequisites"], [480, "prerequisites"], [491, "prerequisites"], [492, "prerequisites"]], "Pretty-print source information": [[470, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[250, null]], "PriorParameter": [[211, null]], "PriorParameters": [[212, null]], "Priors": [[480, null]], "Profile Estimation": [[460, "profile-estimation"]], "Profile Likelihood": [[570, "profile-likelihood"]], "Profiles": [[469, "profiles"]], "Project Management": [[381, "project-management"]], "Project setup": [[402, null]], "Projects": [[381, "projects"]], "Proposal": [[380, "proposal"], [382, "proposal"], [383, "proposal"], [384, "proposal"], [385, "proposal"], [386, "proposal"], [387, "proposal"], [388, "proposal"], [390, "proposal"], [391, "proposal"], [392, "proposal"], [393, "proposal"], [394, "proposal"], [395, "proposal"]], "Proposal of API for flux estimate results": [[396, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[460, "proposed-approach"]], "Proposed approach": [[443, "proposed-approach"], [444, "proposed-approach"], [447, "proposed-approach"], [449, "proposed-approach"], [450, "proposed-approach"], [451, "proposed-approach"], [452, "proposed-approach"], [455, "proposed-approach"], [458, "proposed-approach"], [459, "proposed-approach"], [462, "proposed-approach"], [463, "proposed-approach"], [464, "proposed-approach"], [465, "proposed-approach"], [466, "proposed-approach"], [472, "proposed-approach"], [476, "proposed-approach"], [477, "proposed-approach"], [479, "proposed-approach"], [491, "proposed-approach"], [492, "proposed-approach"]], "Proposed class diagram": [[382, "proposed-class-diagram"]], "Proposed metadata classes": [[399, "proposed-metadata-classes"]], "Proposed solution": [[399, "proposed-solution"]], "Pull Requests": [[425, "pull-requests"], [426, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"]], "Pull requests": [[411, "pull-requests"], [412, "pull-requests"], [413, "pull-requests"], [414, "pull-requests"], [415, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[499, null]], "Pulsar Wind Nebula Source Models": [[500, null]], "Pulsar analysis": [[467, null]], "Python": [[408, "id2"]], "Python scripts": [[408, "python-scripts"]], "Python version support": [[372, "python-version-support"]], "RadMax2D": [[160, null]], "Read and Introduce Data": [[460, "read-and-introduce-data"]], "Read in input images": [[450, "read-in-input-images"]], "Read the datasets": [[477, "read-the-datasets"]], "Read the energy-dependent model": [[459, "read-the-energy-dependent-model"]], "Reading Maps": [[475, "reading-maps"]], "Reading and Writing": [[475, "reading-and-writing"]], "Reading and writing masks": [[476, "reading-and-writing-masks"]], "Reading different datasets": [[455, "reading-different-datasets"]], "RecoPSFMap": [[161, null]], "Recommended Setup": [[404, "recommended-setup"], [406, null]], "Reference": [[392, "reference"], [567, "reference"]], "References": [[566, "publications"]], "Reflected regions background": [[474, "reflected-regions-background"], [516, null]], "ReflectedRegionsBackgroundMaker": [[170, null]], "ReflectedRegionsFinder": [[171, null]], "Region arguments": [[386, "region-arguments"]], "RegionGeom": [[196, null], [520, "regiongeom"]], "RegionGeom and RegionNDMap": [[520, null]], "RegionGeom and coordinates": [[520, "regiongeom-and-coordinates"]], "RegionNDMap": [[197, null], [520, "regionndmap"]], "RegionsFinder": [[172, null]], "Relation to WCS geometries": [[520, "relation-to-wcs-geometries"]], "Release notes": [[372, "release-notes"], [410, null]], "Release preparation, feature freeze": [[397, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[397, "release-scheduling-and-lts"]], "Releases": [[381, "releases"], [398, "releases"], [402, "releases"]], "Releasing the final version of the major release": [[401, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[401, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[477, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[372, "removing-an-attribute"]], "Renaming an argument": [[372, "renaming-an-argument"]], "Required dependencies": [[371, "required-dependencies"], [389, "required-dependencies"]], "Requirements": [[399, "requirements"]], "Resampling datasets": [[471, "resampling-datasets"]], "Resolve gammapy.detect": [[393, "resolve-gammapy-detect"]], "Results": [[441, "results"]], "Results exploration": [[447, "results-exploration"]], "Ring background": [[474, "ring-background"], [517, null]], "Ring background map": [[452, null]], "RingBackgroundMaker": [[173, null]], "Rotated regions": [[386, "rotated-regions"]], "Run Estimation": [[460, "run-estimation"]], "Run Estimator": [[457, "run-estimator"]], "Run data reduction chain": [[446, "run-data-reduction-chain"], [448, "run-data-reduction-chain"]], "Run the 1D data reduction": [[464, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[464, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[567, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[375, "running-tests-building-documentation"]], "Running the Data Reduction": [[447, "running-the-data-reduction"]], "Running the analysis": [[491, "running-the-analysis"]], "Running the estimation": [[447, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[447, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[447, "running-the-fit"]], "Running the light curve extraction in 1D": [[464, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[251, null]], "SPECTRAL_MODEL_REGISTRY": [[252, null]], "Safe data range definition": [[515, "safe-data-range-definition"]], "Safe data range handling": [[474, "safe-data-range-handling"]], "SafeMaskMaker": [[174, null]], "Sample a source with energy-dependent temporal evolution": [[459, null]], "Sampling methods": [[385, "sampling-methods"]], "Sampling the source and background events": [[458, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[447, "save-dataset-to-disk"], [491, "save-dataset-to-disk"], [492, "save-dataset-to-disk"]], "ScaleSpectralModel": [[253, null]], "ScaledRegularGridInterpolator": [[311, null]], "Scripts": [[487, "scripts"]], "Select a catalog subset": [[470, "select-a-catalog-subset"]], "Select a source": [[470, "select-a-source"]], "Select observations": [[456, "select-observations"]], "Select the ON region": [[443, "select-the-on-region"]], "Select the data": [[443, "select-the-data"], [465, "select-the-data"]], "Selecting models contributing to a given region": [[477, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[477, "selecting-models-from-a-list"]], "SensitivityEstimator": [[131, null]], "Serialisation": [[400, "serialisation"], [473, "serialisation"], [473, "id1"], [473, "id2"], [483, "serialisation"]], "Serialisation and I/O": [[460, "serialisation-and-i-o"]], "Serialisation of datasets": [[503, "serialisation-of-datasets"]], "Serialisation of the fit result": [[447, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[447, "serialisation-of-the-results"]], "Serialising models": [[477, "serialising-models"]], "Serialization": [[399, "serialization"]], "Setting fitting parameters": [[447, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[491, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[491, "setting-the-background-normalization-maker"]], "Setting the data to use": [[491, "setting-the-data-to-use"]], "Setting the exclusion mask": [[447, "setting-the-exclusion-mask"], [491, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[491, "setting-the-reduced-datasets-geometry"]], "Setup": [[441, "setup"], [442, "setup"], [443, "setup"], [444, "setup"], [446, "setup"], [447, "setup"], [448, "setup"], [449, "setup"], [450, "setup"], [451, "setup"], [452, "setup"], [456, "setup"], [457, "setup"], [458, "setup"], [459, "setup"], [460, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [466, "setup"], [469, "setup"], [471, "setup"], [474, "setup"], [475, "setup"], [476, "setup"], [477, "setup"], [478, "setup"], [482, "setup"], [483, "setup"], [491, "setup"], [492, "setup"], [493, "setup"]], "Shell spatial model": [[529, null]], "Shell2 spatial model": [[530, null]], "Shell2SpatialModel": [[254, null]], "ShellSpatialModel": [[255, null]], "Show images": [[456, "show-images"]], "Show the results tables": [[457, "show-the-results-tables"]], "Show various observation quantities": [[479, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[395, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[395, "simplify-yaml-representation"]], "Simulate multiple event lists": [[458, "simulate-multiple-event-lists"]], "Simulating a light curve": [[466, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[466, null]], "Simulation": [[462, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[384, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[449, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[560, null]], "SineTemporalModel": [[256, null]], "Skip unit tests for some Astropy versions": [[372, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[386, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[519, null]], "SkyModel": [[257, null], [478, "skymodel"]], "Smooth broken power law spectral model": [[548, null]], "SmoothBrokenPowerLawSpectralModel": [[258, null]], "Some terminology": [[382, "some-terminology"]], "Source Detection": [[456, "source-detection"]], "Source candidates": [[450, "source-candidates"]], "Source catalogs": [[470, null], [493, "source-catalogs"], [502, null]], "Source detection and significance maps": [[450, null]], "Source information": [[470, "source-information"]], "Source models": [[470, "source-models"], [482, "source-models"]], "Source object": [[470, "source-object"]], "Source statistic": [[446, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[383, "sourceirfmodel"]], "Spatial analysis": [[456, "spatial-analysis"]], "Spatial models": [[478, "spatial-models"], [521, "spatial-models"]], "SpatialIRFModel": [[383, "spatialirfmodel"]], "SpatialModel": [[259, null]], "Special cases": [[570, "special-cases"]], "Specificities of the HGPS catalog": [[470, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[395, "spectral-absorption-model"]], "Spectral Norm Models": [[395, "spectral-norm-models"]], "Spectral analysis": [[446, null]], "Spectral analysis of extended sources": [[443, null]], "Spectral analysis with energy-dependent directional cuts": [[448, null]], "Spectral analysis with the HLI": [[447, null]], "Spectral models": [[478, "spectral-models"], [521, "spectral-models"]], "Spectral models and flux points": [[493, "spectral-models-and-flux-points"]], "Spectral points": [[456, "spectral-points"]], "SpectralIRFModel": [[383, "spectralirfmodel"]], "SpectralModel": [[260, null]], "Spectrum": [[456, "spectrum"]], "Spectrum dataset": [[474, "spectrum-dataset"]], "SpectrumDataset": [[109, null], [384, "spectrumdataset"], [471, "spectrumdataset"]], "SpectrumDatasetMaker": [[175, null]], "SpectrumDatasetOnOff": [[110, null], [384, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[373, "sphinx-gallery-extension"]], "Spiral arm models": [[497, "spiral-arm-models"]], "Stack observations": [[446, "stack-observations"]], "Stacked analysis": [[454, "stacked-analysis"]], "Stacking Multiple Datasets": [[503, "stacking-multiple-datasets"]], "Statistical utility functions": [[569, null]], "Status": [[382, "status"], [391, "status"]], "Storing the energy dispersion information as a function of sky position": [[511, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[387, "storing-the-results-and-further-studies"]], "Sub-packages": [[496, "sub-packages"]], "Suggestions": [[398, "suggestions"]], "Summary": [[411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [454, "summary"], [483, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[551, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[550, null]], "Super exponential cutoff power law model used for 3FGL": [[549, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[261, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[262, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[263, null]], "Supernova Remnant Models": [[501, null]], "Support for Asymmetric IRFs": [[473, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[397, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[489, null]], "Survey panel plots": [[572, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[264, null]], "TS map estimation": [[450, "ts-map-estimation"]], "TSMapEstimator": [[132, null]], "Task List": [[384, "task-list"]], "Task list": [[383, "task-list"], [385, "task-list"], [386, "task-list"], [387, "task-list"], [388, "task-list"], [389, "task-list"]], "Template spatial model": [[531, null]], "Template spectral model": [[552, null]], "TemplateNDSpatialModel": [[265, null]], "TemplateNDSpectralModel": [[266, null]], "TemplateNPredModel": [[267, null]], "TemplatePhaseCurveTemporalModel": [[268, null]], "TemplateSpatialModel": [[269, null]], "TemplateSpectralModel": [[270, null]], "Temporal models": [[478, "temporal-models"], [521, "temporal-models"]], "TemporalModel": [[271, null]], "Testing of plotting functions": [[372, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[378, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[457, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[402, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[402, "the-gammapy-extra-repository"]], "The index tables": [[504, "the-index-tables"]], "The reflected region finder": [[516, "the-reflected-region-finder"]], "The results for testing energy dependence": [[457, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[457, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[455, "the-setup"], [472, "the-setup"], [480, "the-setup"]], "Theta squared event distribution": [[485, "theta-squared-event-distribution"]], "Time": [[487, "time"]], "Time bin preparation": [[387, "time-bin-preparation"]], "Time bins": [[387, "time-bins"]], "Time differences": [[571, "time-differences"]], "Time format and scale": [[571, "time-format-and-scale"]], "Time handling in Gammapy": [[571, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[458, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[198, null], [475, "timemapaxis"]], "Timing Analysis": [[381, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[282, null]], "Troubleshooting": [[407, null], [567, "troubleshooting"]], "Tutorial overview": [[457, "tutorial-overview"], [482, "tutorial-overview"]], "Tutorials": [[392, "tutorials"], [487, null]], "Tutorials Overview": [[404, "tutorials-overview"]], "Type validation": [[399, "type-validation"]], "Types of supported datasets": [[503, "types-of-supported-datasets"]], "Unification of flux estimators?": [[396, "unification-of-flux-estimators"]], "Unify calling interface for models": [[383, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[520, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[400, "use-cases"]], "Use cases / scenarios": [[382, "use-cases-scenarios"]], "User guide": [[508, null]], "User perspective": [[379, "user-perspective"]], "Using Anaconda / Miniconda": [[405, "using-anaconda-miniconda"]], "Using Factory Methods": [[475, "using-factory-methods"]], "Using Gammapy": [[408, null]], "Using Gammapy IRFs": [[473, null]], "Using Mamba": [[405, "using-mamba"]], "Using YAML configuration files": [[491, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[447, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[447, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[498, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[502, "using-gammapy-catalog"]], "Using gammapy.data": [[504, "using-gammapy-data"]], "Using gammapy.datasets": [[503, "using-gammapy-datasets"], [506, "using-gammapy-datasets"]], "Using gammapy.estimators": [[505, "using-gammapy-estimators"]], "Using gammapy.irf": [[512, "using-gammapy-irf"]], "Using gammapy.makers": [[515, "using-gammapy-makers"]], "Using gammapy.maps": [[519, "using-gammapy-maps"]], "Using gammapy.modeling": [[564, "using-gammapy-modeling"]], "Using masks": [[471, "using-masks"]], "Using other package managers": [[405, "using-other-package-managers"]], "Using pip": [[405, "using-pip"]], "Using regions": [[516, "using-regions"]], "Using the reflected background estimator": [[516, "using-the-reflected-background-estimator"]], "Utility functions": [[571, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[497, "velocity-distributions"]], "Venv Environments": [[403, "venv-environments"]], "Version 0.1": [[410, "version-0-1"]], "Version 0.10": [[410, "version-0-10"]], "Version 0.11": [[410, "version-0-11"]], "Version 0.12": [[410, "version-0-12"]], "Version 0.13": [[410, "version-0-13"]], "Version 0.14": [[410, "version-0-14"]], "Version 0.15": [[410, "version-0-15"]], "Version 0.16": [[410, "version-0-16"]], "Version 0.17": [[410, "version-0-17"]], "Version 0.18": [[410, "version-0-18"]], "Version 0.19": [[410, "version-0-19"]], "Version 0.2": [[410, "version-0-2"]], "Version 0.20": [[410, "version-0-20"]], "Version 0.20.1": [[410, "version-0-20-1"]], "Version 0.3": [[410, "version-0-3"]], "Version 0.4": [[410, "version-0-4"]], "Version 0.5": [[410, "version-0-5"]], "Version 0.6": [[410, "version-0-6"]], "Version 0.7": [[410, "version-0-7"]], "Version 0.8": [[410, "version-0-8"]], "Version 0.9": [[410, "version-0-9"]], "Version 1.0": [[410, "version-1-0"]], "Version 1.0.1": [[410, "version-1-0-1"]], "Version 1.0.2": [[410, "version-1-0-2"]], "Version 1.1": [[410, "version-1-1"]], "Version 1.2": [[410, "version-1-2"]], "Version numbering": [[397, "version-numbering"]], "Virtual Environments": [[403, null]], "Visualing a RegionNDMap": [[520, "visualing-a-regionndmap"]], "Visualization": [[572, null]], "Visualizing and Plotting": [[475, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[568, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[569, "wstat-counts-statistic"]], "WStatCountsStatistic": [[283, null]], "WcsGeom": [[199, null]], "WcsMap": [[200, null]], "WcsNDMap": [[201, null]], "What checks and conversions should I do for inputs?": [[372, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[377, "what-is-a-pig"]], "What is this?": [[375, "what-is-this"]], "What next?": [[444, "what-next"], [446, "what-next"], [450, "what-next"], [456, "what-next"], [464, "what-next"], [493, "what-next"]], "What others have": [[382, "what-others-have"]], "What we have": [[380, "what-we-have"], [388, "what-we-have"], [396, "what-we-have"]], "What\u2019s new?": [[412, "what-s-new"], [413, "what-s-new"], [414, "what-s-new"], [415, "what-s-new"], [416, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [433, "what-s-new"]], "What\u2019s next": [[491, "whats-next"]], "What\u2019s next?": [[447, "whats-next"]], "Where should I import from?": [[372, "where-should-i-import-from"]], "WobbleRegionsFinder": [[176, null]], "Working with event lists": [[504, "working-with-event-lists"]], "Write your own CLI": [[567, "write-your-own-cli"]], "Writing Maps": [[475, "writing-maps"]], "Writing a PIG": [[377, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[520, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[504, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[523, "yaml-representation"], [524, "yaml-representation"], [525, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[353, null]], "add_colorbar": [[360, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[361, null]], "apply_edisp": [[111, null], [115, null]], "arbitrary type input and validation": [[399, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[511, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[510, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[510, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[511, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[509, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[347, null]], "assert_skycoord_allclose": [[348, null]], "assert_time_allclose": [[349, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[300, null]], "cash": [[284, null]], "cash_sum_cython": [[285, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[398, "codemeta-json"]], "colormap_hess": [[362, null]], "colormap_milagro": [[363, null]], "compound_region_to_regions": [[330, null]], "compute_chisq": [[286, null]], "compute_flux_doubling": [[287, null]], "compute_fpp": [[288, null]], "compute_fvar": [[289, null]], "compute_lightcurve_doublingtime": [[133, null]], "compute_lightcurve_fpp": [[134, null]], "compute_lightcurve_fvar": [[135, null]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[202, null]], "containment_region": [[203, null]], "create_cosmic_ray_spectral_model": [[272, null]], "create_crab_spectral_model": [[273, null]], "create_fermi_isotropic_diffuse_model": [[274, null]], "create_map_dataset_from_observation": [[112, null]], "create_map_dataset_geoms": [[113, null]], "cstat": [[290, null]], "data": [[399, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "docs.gammapy.org": [[402, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[322, null]], "earth_location_from_dict": [[309, null]], "estimate_exposure_reco_energy": [[136, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[291, null]], "find_peaks": [[137, null]], "find_peaks_in_flux_map": [[138, null]], "fov_to_sky": [[301, null]], "from_yaml": [[335, null]], "galactic": [[302, null]], "gamLike": [[495, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[402, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[139, null]], "get_images_paths": [[336, null]], "get_irfs_features": [[96, null]], "get_random_state": [[323, null]], "get_rebinned_axis": [[140, null]], "get_wstat_gof_terms": [[292, null]], "get_wstat_mu_bkg": [[293, null]], "hierarchical_clustering": [[297, null]], "hstack_columns": [[342, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[275, null]], "interpolate_profile": [[312, null]], "interpolation_scale": [[313, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[162, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[331, null]], "make_counts_rad_max": [[177, null]], "make_edisp_kernel_map": [[178, null]], "make_edisp_map": [[179, null]], "make_effective_livetime_map": [[180, null]], "make_map_background_irf": [[181, null]], "make_map_exposure_true_energy": [[182, null]], "make_observation_time_map": [[183, null]], "make_orthogonal_rectangle_sky_regions": [[332, null]], "make_path": [[337, null]], "make_psf_map": [[184, null]], "make_theta_squared_table": [[185, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[303, null]], "mpl_plot_check": [[350, null]], "multiprocessing_manager": [[319, null]], "norm_bounds_cython": [[294, null]], "normalize": [[324, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[325, null]], "plot_contour_line": [[364, null]], "plot_distribution": [[365, null]], "plot_heatmap": [[366, null]], "plot_map_rgb": [[367, null]], "plot_npred_signal": [[368, null]], "plot_spectrum_datasets_off_regions": [[369, null]], "plot_theta_squared_table": [[370, null]], "polar": [[304, null]], "pydantic": [[399, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[276, null], [278, null]], "read_yaml": [[338, null]], "recursive_merge_dicts": [[339, null]], "region_to_frame": [[333, null]], "regions_to_compound_region": [[334, null]], "requires_data": [[351, null]], "requires_dependency": [[352, null]], "resample_energy_edges": [[141, null]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[320, null]], "sample_powerlaw": [[326, null]], "sample_sphere": [[327, null]], "sample_sphere_distance": [[328, null]], "sample_times": [[329, null]], "scale_plot_flux": [[277, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[279, null]], "sky_to_fov": [[305, null]], "split_dataset": [[114, null], [116, null]], "standard_scaler": [[298, null]], "standardise_unit": [[357, null]], "stat_profile_ul_scipy": [[280, null]], "stats - Statistics": [[12, null]], "structure_function": [[295, null]], "table_row_to_dict": [[343, null]], "table_standardise_units_copy": [[344, null]], "table_standardise_units_inplace": [[345, null]], "the base class": [[399, "the-base-class"]], "time_ref_from_dict": [[354, null]], "time_ref_to_dict": [[355, null]], "time_relative_to_ref": [[356, null]], "to_yaml": [[340, null]], "trapz_loglog": [[310, null]], "unit_from_fits_image_hdu": [[358, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[306, null]], "visualization - Plotting features": [[14, null]], "write_yaml": [[341, null]], "wstat": [[296, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[566, "term-1D-Analysis", true]], "3d analysis": [[566, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[250, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[311, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[353, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[163, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[360, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[566, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[122, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[124, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[151, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[361, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[111, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[115, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[194, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[117, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[347, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[348, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[349, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[209, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[211, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[165, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[174, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[168, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[175, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[205, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[314, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[142, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[143, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[144, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[566, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[164, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[300, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[566, "term-Cash", true]], "cash() (in module gammapy.stats)": [[284, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[285, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[281, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[209, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[211, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[346, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[362, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[363, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[330, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[214, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[286, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[281, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[283, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[281, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[283, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[287, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[288, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[289, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[281, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[283, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[202, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[203, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[120, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[128, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[194, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[240, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[250, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[209, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[211, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[204, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[204, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[240, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[205, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[187, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[188, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[189, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[191, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[194, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[196, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[197, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[199, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[200, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[201, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[239, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[257, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[272, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[273, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[274, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[290, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[299, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[156, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[204, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[566, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[164, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[566, "term-DL3", true]], "dl4": [[566, "term-DL4", true]], "dl5": [[566, "term-DL5", true]], "dl6": [[566, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[322, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[309, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[222, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[566, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[146, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[147, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[145, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[146, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[147, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[148, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[158, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[161, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[150, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[164, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[566, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[120, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[118, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[220, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[234, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[255, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[256, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[157, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[157, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[291, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[206, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[207, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[122, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[566, "term-FoV", true]], "fov background": [[566, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[301, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[151, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[165, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[240, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[250, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[199, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[192, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[145, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[146, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[147, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[219, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[220, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[234, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[239, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[240, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[241, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[245, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[250, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[255, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[256, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[257, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[259, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[260, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[267, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[271, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[210, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[212, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[146, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[204, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[145, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[146, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[150, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[156, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[158, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[161, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[146, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[147, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[158, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[161, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[188, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[189, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[191, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[195, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[197, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[200, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[201, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[198, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[198, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[187, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[189, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[201, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[142, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[143, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[144, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[145, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[146, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[147, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[148, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[150, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[152, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[153, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[159, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[155, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[157, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[158, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[160, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[161, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[186, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[187, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[188, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[189, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[191, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[195, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[196, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[197, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[199, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[200, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[201, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[187, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[199, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[160, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[220, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[234, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[240, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[245, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[250, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[255, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[256, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[257, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[259, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[260, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[267, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[271, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[148, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[220, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[245, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[255, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[259, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[220, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[196, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[156, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[188, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[189, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[190, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[191, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[197, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[200, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[201, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[204, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[210, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[212, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[142, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[143, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[144, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[145, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[148, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[150, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[152, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[159, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[155, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[157, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[160, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[190, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[192, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[197, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[198, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[192, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[193, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[198, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[198, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[189, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[219, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[241, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[335, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[240, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[566, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[302, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[186, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[195, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[307, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[336, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[187, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[323, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[117, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[204, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[292, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[293, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[566, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[146, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[147, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[153, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[158, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[161, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[307, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[297, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[566, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[187, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[188, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[189, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[342, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[127, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[307, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[281, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[283, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[275, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[312, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[313, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[321, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[566, "term-IRF", true]], "irf (class in gammapy.irf)": [[152, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[154, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[153, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[186, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[566, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[173, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[163, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[190, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[308, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[307, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[162, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[168, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[165, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[165, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[331, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[168, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[169, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[169, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[170, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[163, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[164, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[165, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[168, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[168, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[165, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[168, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[168, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[181, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[173, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[174, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[174, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[174, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[174, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[174, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[174, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[168, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[332, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[337, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[168, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[175, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[566, "term-Maker", true]], "maker (class in gammapy.makers)": [[167, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[166, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[191, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[192, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[193, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[194, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[168, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[359, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[195, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[146, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[147, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[153, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[158, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[161, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[205, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[205, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.message", false]], "met": [[566, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[165, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[205, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[315, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[316, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[237, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[303, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[350, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[319, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[164, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[317, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[281, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[283, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[294, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[156, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[324, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[108, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[164, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[208, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[164, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[209, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[210, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[240, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[240, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[159, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[307, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[325, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[156, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[169, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[198, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[359, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[364, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[204, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[365, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[366, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[156, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[367, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[368, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[359, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[369, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[370, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[304, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[318, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[209, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[211, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[211, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[212, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.projection", false]], "psf": [[566, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[155, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[156, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[158, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[161, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[156, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[157, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[158, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[151, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[160, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[142, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[143, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[144, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[145, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[146, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[147, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[148, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[150, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[152, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[153, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[159, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[155, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[156, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[157, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[158, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[160, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[161, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[188, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[189, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[191, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[195, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[197, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[200, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[201, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[219, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[241, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[276, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[278, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[338, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[240, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[250, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[566, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[161, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[339, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[566, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[170, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[171, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[333, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[196, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[197, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[334, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[172, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[146, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[147, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[153, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[158, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[161, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[351, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[352, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[566, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[173, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[566, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[120, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[128, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[163, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[164, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[165, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[167, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[168, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[169, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[170, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[171, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[172, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[173, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[174, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[175, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[176, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[346, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[320, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[164, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[174, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[321, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[321, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[326, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[327, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[328, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[329, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[277, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[311, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[204, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[279, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[204, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[192, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[204, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[305, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[156, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[251, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[252, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[175, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[114, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[116, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[566, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[298, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[357, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[280, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[206, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[295, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[205, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[281, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[283, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[343, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[344, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[345, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[106, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[107, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[146, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[147, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[153, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[158, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[161, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[163, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[164, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[165, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[167, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[168, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[169, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[170, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[173, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[174, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[175, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[264, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[194, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[354, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[355, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[356, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[234, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[256, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[271, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[198, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[282, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[205, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[240, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[250, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[208, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[209, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[211, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[194, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[156, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[340, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[207, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[208, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[310, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[566, "term-True-Energy", true]], "ts": [[566, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[281, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[283, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[214, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[217, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[218, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[220, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[227, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[228, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[229, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[230, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[234, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[240, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[242, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[245, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[253, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[254, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[256, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[257, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[259, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[260, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[267, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[271, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[213, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[214, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[215, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[216, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[217, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[218, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[220, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[221, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[223, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[224, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[225, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[226, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[227, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[228, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[229, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[230, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[231, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[232, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[234, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[235, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[236, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[238, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[240, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[242, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[243, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[244, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[245, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[246, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[247, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[248, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[249, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[250, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[253, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[254, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[255, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[256, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[257, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[258, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[259, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[260, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[261, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[262, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[263, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[270, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[271, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[210, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[212, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[142, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[143, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[144, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[145, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[148, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[150, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[152, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[159, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[155, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[157, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[160, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[188, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[189, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[190, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[191, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[197, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[198, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[200, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[201, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[358, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[209, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[211, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[186, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[187, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[190, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[192, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[196, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[198, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[199, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[193, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[216, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[209, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[210, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[211, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[212, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[306, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[219, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[241, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[199, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[200, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[201, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.prior attribute)": [[250, "gammapy.modeling.models.Prior.weight", false]], "width (gammapy.maps.hpxgeom attribute)": [[187, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[196, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[199, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[255, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[176, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[193, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[142, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[143, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[144, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[145, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[146, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[147, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[148, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[149, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[150, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[152, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[153, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[159, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[155, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[156, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[157, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[158, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[160, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[161, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[188, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[189, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[191, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[195, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[197, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[200, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[201, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[207, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[233, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[265, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[266, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[267, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[268, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[269, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[219, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[241, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[341, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[566, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[296, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[283, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"], [83, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "muoneff"], [88, 2, 1, "", "obs_info"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FluxPointsDataset"], [102, 1, 1, "", "MapDataset"], [103, 1, 1, "", "MapDatasetEventSampler"], [104, 1, 1, "", "MapDatasetMetaData"], [105, 1, 1, "", "MapDatasetOnOff"], [106, 1, 1, "", "OGIPDatasetReader"], [107, 1, 1, "", "OGIPDatasetWriter"], [108, 1, 1, "", "ObservationEventSampler"], [109, 1, 1, "", "SpectrumDataset"], [110, 1, 1, "", "SpectrumDatasetOnOff"], [111, 4, 1, "", "apply_edisp"], [112, 4, 1, "", "create_map_dataset_from_observation"], [113, 4, 1, "", "create_map_dataset_geoms"], [114, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[101, 2, 1, "", "available_stat_type"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "data_shape"], [101, 3, 1, "", "flux_pred"], [101, 3, 1, "", "from_dict"], [101, 2, 1, "", "gti"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_valid"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "plot_fit"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_spectrum"], [101, 3, 1, "", "read"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[102, 2, 1, "", "background"], [102, 2, 1, "", "background_model"], [102, 3, 1, "", "copy"], [102, 2, 1, "", "counts"], [102, 3, 1, "", "create"], [102, 3, 1, "", "cutout"], [102, 2, 1, "", "data_shape"], [102, 3, 1, "", "downsample"], [102, 2, 1, "", "edisp"], [102, 2, 1, "", "energy_range"], [102, 2, 1, "", "energy_range_fit"], [102, 2, 1, "", "energy_range_safe"], [102, 2, 1, "", "energy_range_total"], [102, 2, 1, "", "evaluators"], [102, 2, 1, "", "excess"], [102, 2, 1, "", "exposure"], [102, 3, 1, "", "fake"], [102, 3, 1, "", "from_dict"], [102, 3, 1, "", "from_geoms"], [102, 3, 1, "", "from_hdulist"], [102, 2, 1, "", "geoms"], [102, 2, 1, "", "gti"], [102, 3, 1, "", "info_dict"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_fit"], [102, 2, 1, "", "mask_fit_image"], [102, 2, 1, "", "mask_image"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_safe_edisp"], [102, 2, 1, "", "mask_safe_image"], [102, 2, 1, "", "mask_safe_psf"], [102, 2, 1, "", "meta"], [102, 2, 1, "", "meta_table"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "npred"], [102, 3, 1, "", "npred_background"], [102, 3, 1, "", "npred_signal"], [102, 3, 1, "", "pad"], [102, 3, 1, "", "peek"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_residuals_spatial"], [102, 3, 1, "", "plot_residuals_spectral"], [102, 2, 1, "", "psf"], [102, 3, 1, "", "read"], [102, 3, 1, "", "resample_energy_axis"], [102, 3, 1, "", "reset_data_cache"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "slice_by_energy"], [102, 3, 1, "", "slice_by_idx"], [102, 3, 1, "", "stack"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "to_hdulist"], [102, 3, 1, "", "to_image"], [102, 3, 1, "", "to_masked"], [102, 3, 1, "", "to_region_map_dataset"], [102, 3, 1, "", "to_spectrum_dataset"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[104, 3, 1, "", "construct"], [104, 3, 1, "", "copy"], [104, 3, 1, "", "dict"], [104, 3, 1, "", "from_header"], [104, 3, 1, "", "from_orm"], [104, 3, 1, "", "json"], [104, 2, 1, "", "model_computed_fields"], [104, 2, 1, "", "model_config"], [104, 3, 1, "", "model_construct"], [104, 3, 1, "", "model_copy"], [104, 3, 1, "", "model_dump"], [104, 3, 1, "", "model_dump_json"], [104, 2, 1, "", "model_extra"], [104, 2, 1, "", "model_fields"], [104, 2, 1, "", "model_fields_set"], [104, 3, 1, "", "model_json_schema"], [104, 3, 1, "", "model_parametrized_name"], [104, 3, 1, "", "model_post_init"], [104, 3, 1, "", "model_rebuild"], [104, 3, 1, "", "model_validate"], [104, 3, 1, "", "model_validate_json"], [104, 3, 1, "", "model_validate_strings"], [104, 3, 1, "", "parse_file"], [104, 3, 1, "", "parse_obj"], [104, 3, 1, "", "parse_raw"], [104, 3, 1, "", "schema"], [104, 3, 1, "", "schema_json"], [104, 3, 1, "", "stack"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_header"], [104, 3, 1, "", "to_yaml"], [104, 3, 1, "", "update_forward_refs"], [104, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_valid_path"], [106, 3, 1, "", "read"], [106, 3, 1, "", "read_arf"], [106, 3, 1, "", "read_bkg"], [106, 3, 1, "", "read_pha"], [106, 3, 1, "", "read_rmf"], [106, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_ogip_meta"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_counts_hdulist"], [107, 3, 1, "", "write"], [107, 3, 1, "", "write_arf"], [107, 3, 1, "", "write_bkg"], [107, 3, 1, "", "write_pha"], [107, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[108, 3, 1, "", "event_det_coords"], [108, 3, 1, "", "event_list_meta"], [108, 3, 1, "", "run"], [108, 3, 1, "", "sample_background"], [108, 3, 1, "", "sample_edisp"], [108, 3, 1, "", "sample_psf"], [108, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[110, 2, 1, "", "alpha"], [110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 3, 1, "", "from_map_dataset"], [110, 3, 1, "", "from_spectrum_dataset"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_off"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_map_dataset"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.utils": [[115, 4, 1, "", "apply_edisp"], [116, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[117, 1, 1, "", "ASmoothMapEstimator"], [118, 5, 1, "", "ESTIMATOR_REGISTRY"], [119, 1, 1, "", "EnergyDependentMorphologyEstimator"], [120, 1, 1, "", "Estimator"], [121, 1, 1, "", "ExcessMapEstimator"], [122, 1, 1, "", "FluxMaps"], [123, 1, 1, "", "FluxMetaData"], [124, 1, 1, "", "FluxPoints"], [125, 1, 1, "", "FluxPointsEstimator"], [126, 1, 1, "", "FluxProfileEstimator"], [127, 1, 1, "", "ImageProfile"], [128, 1, 1, "", "ImageProfileEstimator"], [129, 1, 1, "", "LightCurveEstimator"], [130, 1, 1, "", "ParameterEstimator"], [131, 1, 1, "", "SensitivityEstimator"], [132, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[117, 2, 1, "", "config_parameters"], [117, 3, 1, "", "copy"], [117, 3, 1, "", "estimate_maps"], [117, 3, 1, "", "get_kernels"], [117, 3, 1, "", "get_scales"], [117, 3, 1, "", "run"], [117, 3, 1, "", "selection_all"], [117, 2, 1, "", "selection_optional"], [117, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[119, 2, 1, "", "config_parameters"], [119, 3, 1, "", "copy"], [119, 3, 1, "", "estimate_energy_dependence"], [119, 3, 1, "", "run"], [119, 2, 1, "", "selection_optional"], [119, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 2, 1, "", "correlation_radius"], [121, 3, 1, "", "estimate_excess_map"], [121, 3, 1, "", "estimate_exposure_reco_energy"], [121, 3, 1, "", "estimate_kernel"], [121, 3, 1, "", "estimate_mask_default"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[122, 2, 1, "", "acceptance_off"], [122, 2, 1, "", "acceptance_on"], [122, 3, 1, "", "all_quantities"], [122, 2, 1, "", "alpha"], [122, 2, 1, "", "available_quantities"], [122, 3, 1, "", "copy"], [122, 2, 1, "", "counts"], [122, 2, 1, "", "dnde"], [122, 2, 1, "", "dnde_err"], [122, 2, 1, "", "dnde_errn"], [122, 2, 1, "", "dnde_errp"], [122, 2, 1, "", "dnde_ref"], [122, 2, 1, "", "dnde_scan_values"], [122, 2, 1, "", "dnde_ul"], [122, 2, 1, "", "e2dnde"], [122, 2, 1, "", "e2dnde_err"], [122, 2, 1, "", "e2dnde_errn"], [122, 2, 1, "", "e2dnde_errp"], [122, 2, 1, "", "e2dnde_ref"], [122, 2, 1, "", "e2dnde_ul"], [122, 2, 1, "", "eflux"], [122, 2, 1, "", "eflux_err"], [122, 2, 1, "", "eflux_errn"], [122, 2, 1, "", "eflux_errp"], [122, 2, 1, "", "eflux_ref"], [122, 2, 1, "", "eflux_ul"], [122, 2, 1, "", "energy_axis"], [122, 2, 1, "", "energy_max"], [122, 2, 1, "", "energy_min"], [122, 2, 1, "", "energy_ref"], [122, 2, 1, "", "filter_success_nan"], [122, 2, 1, "", "flux"], [122, 2, 1, "", "flux_err"], [122, 2, 1, "", "flux_errn"], [122, 2, 1, "", "flux_errp"], [122, 2, 1, "", "flux_ref"], [122, 2, 1, "", "flux_sensitivity"], [122, 2, 1, "", "flux_ul"], [122, 3, 1, "", "from_hdulist"], [122, 3, 1, "", "from_maps"], [122, 3, 1, "", "from_stack"], [122, 2, 1, "", "geom"], [122, 3, 1, "", "get_flux_points"], [122, 2, 1, "", "has_any_ts"], [122, 2, 1, "", "has_stat_profiles"], [122, 2, 1, "", "has_success"], [122, 2, 1, "", "has_ul"], [122, 2, 1, "", "is_convertible_to_flux_sed_type"], [122, 2, 1, "", "is_ul"], [122, 3, 1, "", "iter_by_axis"], [122, 2, 1, "", "n_dof"], [122, 2, 1, "", "n_sigma"], [122, 2, 1, "", "n_sigma_ul"], [122, 2, 1, "", "niter"], [122, 2, 1, "", "norm"], [122, 2, 1, "", "norm_err"], [122, 2, 1, "", "norm_errn"], [122, 2, 1, "", "norm_errp"], [122, 2, 1, "", "norm_sensitivity"], [122, 2, 1, "", "norm_ul"], [122, 2, 1, "", "npred"], [122, 2, 1, "", "npred_background"], [122, 2, 1, "", "npred_excess"], [122, 2, 1, "", "npred_excess_err"], [122, 2, 1, "", "npred_excess_errn"], [122, 2, 1, "", "npred_excess_errp"], [122, 2, 1, "", "npred_excess_ref"], [122, 2, 1, "", "npred_excess_ul"], [122, 3, 1, "", "read"], [122, 2, 1, "", "reference_model"], [122, 2, 1, "", "reference_model_default"], [122, 2, 1, "", "reference_spectral_model"], [122, 2, 1, "", "sed_type_init"], [122, 2, 1, "", "sed_type_plot_default"], [122, 3, 1, "", "slice_by_coord"], [122, 3, 1, "", "slice_by_energy"], [122, 3, 1, "", "slice_by_idx"], [122, 3, 1, "", "slice_by_time"], [122, 2, 1, "", "sqrt_ts"], [122, 2, 1, "", "sqrt_ts_threshold_ul"], [122, 2, 1, "", "stat"], [122, 2, 1, "", "stat_null"], [122, 2, 1, "", "stat_scan"], [122, 2, 1, "", "success"], [122, 3, 1, "", "to_hdulist"], [122, 3, 1, "", "to_maps"], [122, 2, 1, "", "ts"], [122, 2, 1, "", "ts_scan"], [122, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[123, 3, 1, "", "construct"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "dict"], [123, 3, 1, "", "from_header"], [123, 3, 1, "", "from_orm"], [123, 3, 1, "", "json"], [123, 2, 1, "", "model_computed_fields"], [123, 2, 1, "", "model_config"], [123, 3, 1, "", "model_construct"], [123, 3, 1, "", "model_copy"], [123, 3, 1, "", "model_dump"], [123, 3, 1, "", "model_dump_json"], [123, 2, 1, "", "model_extra"], [123, 2, 1, "", "model_fields"], [123, 2, 1, "", "model_fields_set"], [123, 3, 1, "", "model_json_schema"], [123, 3, 1, "", "model_parametrized_name"], [123, 3, 1, "", "model_post_init"], [123, 3, 1, "", "model_rebuild"], [123, 3, 1, "", "model_validate"], [123, 3, 1, "", "model_validate_json"], [123, 3, 1, "", "model_validate_strings"], [123, 3, 1, "", "parse_file"], [123, 3, 1, "", "parse_obj"], [123, 3, 1, "", "parse_raw"], [123, 3, 1, "", "schema"], [123, 3, 1, "", "schema_json"], [123, 2, 1, "", "tag"], [123, 3, 1, "", "to_header"], [123, 3, 1, "", "to_yaml"], [123, 3, 1, "", "update_forward_refs"], [123, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[124, 2, 1, "", "acceptance_off"], [124, 2, 1, "", "acceptance_on"], [124, 3, 1, "", "all_quantities"], [124, 2, 1, "", "alpha"], [124, 2, 1, "", "available_quantities"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "counts"], [124, 2, 1, "", "dnde"], [124, 2, 1, "", "dnde_err"], [124, 2, 1, "", "dnde_errn"], [124, 2, 1, "", "dnde_errp"], [124, 2, 1, "", "dnde_ref"], [124, 2, 1, "", "dnde_scan_values"], [124, 2, 1, "", "dnde_ul"], [124, 2, 1, "", "e2dnde"], [124, 2, 1, "", "e2dnde_err"], [124, 2, 1, "", "e2dnde_errn"], [124, 2, 1, "", "e2dnde_errp"], [124, 2, 1, "", "e2dnde_ref"], [124, 2, 1, "", "e2dnde_ul"], [124, 2, 1, "", "eflux"], [124, 2, 1, "", "eflux_err"], [124, 2, 1, "", "eflux_errn"], [124, 2, 1, "", "eflux_errp"], [124, 2, 1, "", "eflux_ref"], [124, 2, 1, "", "eflux_ul"], [124, 2, 1, "", "energy_axis"], [124, 2, 1, "", "energy_max"], [124, 2, 1, "", "energy_min"], [124, 2, 1, "", "energy_ref"], [124, 2, 1, "", "filter_success_nan"], [124, 2, 1, "", "flux"], [124, 2, 1, "", "flux_err"], [124, 2, 1, "", "flux_errn"], [124, 2, 1, "", "flux_errp"], [124, 2, 1, "", "flux_ref"], [124, 2, 1, "", "flux_sensitivity"], [124, 2, 1, "", "flux_ul"], [124, 3, 1, "", "from_hdulist"], [124, 3, 1, "", "from_maps"], [124, 3, 1, "", "from_stack"], [124, 3, 1, "", "from_table"], [124, 2, 1, "", "geom"], [124, 3, 1, "", "get_flux_points"], [124, 2, 1, "", "has_any_ts"], [124, 2, 1, "", "has_stat_profiles"], [124, 2, 1, "", "has_success"], [124, 2, 1, "", "has_ul"], [124, 2, 1, "", "is_convertible_to_flux_sed_type"], [124, 2, 1, "", "is_ul"], [124, 3, 1, "", "iter_by_axis"], [124, 2, 1, "", "n_dof"], [124, 2, 1, "", "n_sigma"], [124, 2, 1, "", "n_sigma_ul"], [124, 2, 1, "", "niter"], [124, 2, 1, "", "norm"], [124, 2, 1, "", "norm_err"], [124, 2, 1, "", "norm_errn"], [124, 2, 1, "", "norm_errp"], [124, 2, 1, "", "norm_sensitivity"], [124, 2, 1, "", "norm_ul"], [124, 2, 1, "", "npred"], [124, 2, 1, "", "npred_background"], [124, 2, 1, "", "npred_excess"], [124, 2, 1, "", "npred_excess_err"], [124, 2, 1, "", "npred_excess_errn"], [124, 2, 1, "", "npred_excess_errp"], [124, 2, 1, "", "npred_excess_ref"], [124, 2, 1, "", "npred_excess_ul"], [124, 3, 1, "", "plot"], [124, 3, 1, "", "plot_ts_profiles"], [124, 3, 1, "", "read"], [124, 3, 1, "", "recompute_ul"], [124, 2, 1, "", "reference_model"], [124, 2, 1, "", "reference_model_default"], [124, 2, 1, "", "reference_spectral_model"], [124, 3, 1, "", "resample_axis"], [124, 2, 1, "", "sed_type_init"], [124, 2, 1, "", "sed_type_plot_default"], [124, 3, 1, "", "slice_by_coord"], [124, 3, 1, "", "slice_by_energy"], [124, 3, 1, "", "slice_by_idx"], [124, 3, 1, "", "slice_by_time"], [124, 2, 1, "", "sqrt_ts"], [124, 2, 1, "", "sqrt_ts_threshold_ul"], [124, 2, 1, "", "stat"], [124, 2, 1, "", "stat_null"], [124, 2, 1, "", "stat_scan"], [124, 2, 1, "", "success"], [124, 3, 1, "", "to_hdulist"], [124, 3, 1, "", "to_maps"], [124, 3, 1, "", "to_table"], [124, 2, 1, "", "ts"], [124, 2, 1, "", "ts_scan"], [124, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_flux_point"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_npred_excess"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "get_scale_model"], [125, 2, 1, "", "n_jobs"], [125, 2, 1, "", "norm_max"], [125, 2, 1, "", "norm_min"], [125, 2, 1, "", "norm_n_values"], [125, 2, 1, "", "norm_values"], [125, 2, 1, "", "parallel_backend"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_best_fit"], [126, 3, 1, "", "estimate_counts"], [126, 3, 1, "", "estimate_errn_errp"], [126, 3, 1, "", "estimate_flux_point"], [126, 3, 1, "", "estimate_npred"], [126, 3, 1, "", "estimate_npred_excess"], [126, 3, 1, "", "estimate_scan"], [126, 3, 1, "", "estimate_ts"], [126, 3, 1, "", "estimate_ul"], [126, 3, 1, "", "get_scale_model"], [126, 2, 1, "", "n_jobs"], [126, 2, 1, "", "norm_max"], [126, 2, 1, "", "norm_min"], [126, 2, 1, "", "norm_n_values"], [126, 2, 1, "", "norm_values"], [126, 2, 1, "", "parallel_backend"], [126, 2, 1, "", "projected_distance_axis"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[127, 3, 1, "", "normalize"], [127, 3, 1, "", "peek"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_err"], [127, 2, 1, "", "profile"], [127, 2, 1, "", "profile_err"], [127, 3, 1, "", "smooth"], [127, 2, 1, "", "x_max"], [127, 2, 1, "", "x_min"], [127, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_time_bin_flux"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "expand_map"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "norm_max"], [129, 2, 1, "", "norm_min"], [129, 2, 1, "", "norm_n_values"], [129, 2, 1, "", "norm_values"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_min_e2dnde"], [131, 3, 1, "", "estimate_min_excess"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_fit_input_maps"], [132, 3, 1, "", "estimate_flux_default"], [132, 3, 1, "", "estimate_flux_map"], [132, 3, 1, "", "estimate_kernel"], [132, 3, 1, "", "estimate_mask_default"], [132, 3, 1, "", "estimate_pad_width"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_all"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[133, 4, 1, "", "compute_lightcurve_doublingtime"], [134, 4, 1, "", "compute_lightcurve_fpp"], [135, 4, 1, "", "compute_lightcurve_fvar"], [136, 4, 1, "", "estimate_exposure_reco_energy"], [137, 4, 1, "", "find_peaks"], [138, 4, 1, "", "find_peaks_in_flux_map"], [139, 4, 1, "", "get_combined_significance_maps"], [140, 4, 1, "", "get_rebinned_axis"], [141, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[142, 1, 1, "", "Background2D"], [143, 1, 1, "", "Background3D"], [144, 1, 1, "", "BackgroundIRF"], [145, 1, 1, "", "EDispKernel"], [146, 1, 1, "", "EDispKernelMap"], [147, 1, 1, "", "EDispMap"], [148, 1, 1, "", "EffectiveAreaTable2D"], [149, 1, 1, "", "EnergyDependentMultiGaussPSF"], [150, 1, 1, "", "EnergyDispersion2D"], [151, 1, 1, "", "FoVAlignment"], [152, 1, 1, "", "IRF"], [153, 1, 1, "", "IRFMap"], [154, 5, 1, "", "IRF_REGISTRY"], [155, 1, 1, "", "PSF3D"], [156, 1, 1, "", "PSFKernel"], [157, 1, 1, "", "PSFKing"], [158, 1, 1, "", "PSFMap"], [159, 1, 1, "", "ParametricPSF"], [160, 1, 1, "", "RadMax2D"], [161, 1, 1, "", "RecoPSFMap"], [162, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[142, 2, 1, "", "axes"], [142, 3, 1, "", "cumsum"], [142, 2, 1, "", "data"], [142, 2, 1, "", "default_interp_kwargs"], [142, 2, 1, "", "default_unit"], [142, 3, 1, "", "evaluate"], [142, 2, 1, "", "fov_alignment"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "from_table"], [142, 2, 1, "", "has_offset_axis"], [142, 3, 1, "", "integral"], [142, 3, 1, "", "integrate_log_log"], [142, 3, 1, "", "interp_missing_data"], [142, 3, 1, "", "is_allclose"], [142, 2, 1, "", "is_pointlike"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "pad"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "plot"], [142, 3, 1, "", "plot_at_energy"], [142, 3, 1, "", "plot_energy_dependence"], [142, 3, 1, "", "plot_offset_dependence"], [142, 3, 1, "", "plot_spectrum"], [142, 2, 1, "", "quantity"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "slice_by_idx"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_3d"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_table"], [142, 3, 1, "", "to_table_hdu"], [142, 3, 1, "", "to_unit"], [142, 2, 1, "", "unit"], [142, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 2, 1, "", "default_unit"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 3, 1, "", "peek"], [143, 3, 1, "", "plot_at_energy"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_2d"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 3, 1, "", "evaluate"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[145, 2, 1, "", "axes"], [145, 3, 1, "", "cumsum"], [145, 2, 1, "", "data"], [145, 2, 1, "", "default_interp_kwargs"], [145, 3, 1, "", "evaluate"], [145, 2, 1, "", "fov_alignment"], [145, 3, 1, "", "from_diagonal_response"], [145, 3, 1, "", "from_gauss"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "from_table"], [145, 3, 1, "", "get_bias"], [145, 3, 1, "", "get_bias_energy"], [145, 3, 1, "", "get_mean"], [145, 3, 1, "", "get_resolution"], [145, 2, 1, "", "has_offset_axis"], [145, 3, 1, "", "integral"], [145, 3, 1, "", "integrate_log_log"], [145, 3, 1, "", "interp_missing_data"], [145, 3, 1, "", "is_allclose"], [145, 2, 1, "", "is_pointlike"], [145, 3, 1, "", "normalize"], [145, 3, 1, "", "pad"], [145, 3, 1, "", "pdf_in_safe_range"], [145, 2, 1, "", "pdf_matrix"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "plot_bias"], [145, 3, 1, "", "plot_matrix"], [145, 2, 1, "", "quantity"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "slice_by_idx"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_image"], [145, 3, 1, "", "to_table"], [145, 3, 1, "", "to_table_hdu"], [145, 3, 1, "", "to_unit"], [145, 2, 1, "", "unit"], [145, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[146, 3, 1, "", "copy"], [146, 3, 1, "", "cutout"], [146, 3, 1, "", "downsample"], [146, 2, 1, "", "edisp_map"], [146, 3, 1, "", "from_diagonal_response"], [146, 3, 1, "", "from_edisp_kernel"], [146, 3, 1, "", "from_gauss"], [146, 3, 1, "", "from_geom"], [146, 3, 1, "", "from_hdulist"], [146, 3, 1, "", "get_edisp_kernel"], [146, 2, 1, "", "has_single_spatial_bin"], [146, 2, 1, "", "mask_safe_image"], [146, 3, 1, "", "peek"], [146, 3, 1, "", "read"], [146, 2, 1, "", "required_axes"], [146, 3, 1, "", "resample_energy_axis"], [146, 3, 1, "", "slice_by_idx"], [146, 3, 1, "", "stack"], [146, 2, 1, "", "tag"], [146, 3, 1, "", "to_hdulist"], [146, 3, 1, "", "to_image"], [146, 3, 1, "", "to_region_nd_map"], [146, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[147, 3, 1, "", "copy"], [147, 3, 1, "", "cutout"], [147, 3, 1, "", "downsample"], [147, 2, 1, "", "edisp_map"], [147, 3, 1, "", "from_diagonal_response"], [147, 3, 1, "", "from_geom"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "get_edisp_kernel"], [147, 2, 1, "", "has_single_spatial_bin"], [147, 2, 1, "", "mask_safe_image"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "sample_coord"], [147, 3, 1, "", "slice_by_idx"], [147, 3, 1, "", "stack"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_edisp_kernel_map"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_region_nd_map"], [147, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[148, 2, 1, "", "axes"], [148, 3, 1, "", "cumsum"], [148, 2, 1, "", "data"], [148, 2, 1, "", "default_interp_kwargs"], [148, 2, 1, "", "default_unit"], [148, 3, 1, "", "evaluate"], [148, 2, 1, "", "fov_alignment"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "from_parametrization"], [148, 3, 1, "", "from_table"], [148, 2, 1, "", "has_offset_axis"], [148, 3, 1, "", "integral"], [148, 3, 1, "", "integrate_log_log"], [148, 3, 1, "", "interp_missing_data"], [148, 3, 1, "", "is_allclose"], [148, 2, 1, "", "is_pointlike"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "pad"], [148, 3, 1, "", "peek"], [148, 3, 1, "", "plot"], [148, 3, 1, "", "plot_energy_dependence"], [148, 3, 1, "", "plot_offset_dependence"], [148, 2, 1, "", "quantity"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_table"], [148, 3, 1, "", "to_table_hdu"], [148, 3, 1, "", "to_unit"], [148, 2, 1, "", "unit"], [148, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "containment"], [149, 3, 1, "", "containment_radius"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 3, 1, "", "evaluate"], [149, 3, 1, "", "evaluate_containment"], [149, 3, 1, "", "evaluate_direct"], [149, 3, 1, "", "evaluate_parameters"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "info"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "peek"], [149, 3, 1, "", "plot_containment_radius"], [149, 3, 1, "", "plot_containment_radius_vs_energy"], [149, 3, 1, "", "plot_psf_vs_rad"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 2, 1, "", "required_parameters"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_psf3d"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_gauss"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_bias"], [150, 3, 1, "", "plot_migration"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_edisp_kernel"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[151, 2, 1, "", "ALTAZ"], [151, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[153, 3, 1, "", "copy"], [153, 3, 1, "", "cutout"], [153, 3, 1, "", "downsample"], [153, 3, 1, "", "from_hdulist"], [153, 2, 1, "", "has_single_spatial_bin"], [153, 2, 1, "", "mask_safe_image"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 3, 1, "", "stack"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_region_nd_map"], [153, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "containment"], [155, 3, 1, "", "containment_radius"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "info"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot_containment_radius"], [155, 3, 1, "", "plot_containment_radius_vs_energy"], [155, 3, 1, "", "plot_psf_vs_rad"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[156, 2, 1, "", "data"], [156, 3, 1, "", "from_gauss"], [156, 3, 1, "", "from_spatial_model"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_kernel"], [156, 2, 1, "", "psf_kernel_map"], [156, 3, 1, "", "read"], [156, 3, 1, "", "slice_by_idx"], [156, 3, 1, "", "to_image"], [156, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 3, 1, "", "evaluate_containment"], [157, 3, 1, "", "evaluate_direct"], [157, 3, 1, "", "evaluate_parameters"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "info"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 2, 1, "", "required_parameters"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_psf3d"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "containment_radius_map"], [158, 3, 1, "", "copy"], [158, 3, 1, "", "cutout"], [158, 3, 1, "", "downsample"], [158, 2, 1, "", "energy_name"], [158, 3, 1, "", "from_gauss"], [158, 3, 1, "", "from_geom"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "get_psf_kernel"], [158, 2, 1, "", "has_single_spatial_bin"], [158, 2, 1, "", "mask_safe_image"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "psf_map"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "sample_coord"], [158, 3, 1, "", "slice_by_idx"], [158, 3, 1, "", "stack"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_image"], [158, 3, 1, "", "to_region_nd_map"], [158, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "containment"], [159, 3, 1, "", "containment_radius"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 3, 1, "", "evaluate"], [159, 3, 1, "", "evaluate_containment"], [159, 3, 1, "", "evaluate_direct"], [159, 3, 1, "", "evaluate_parameters"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "info"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 3, 1, "", "peek"], [159, 3, 1, "", "plot_containment_radius"], [159, 3, 1, "", "plot_containment_radius_vs_energy"], [159, 3, 1, "", "plot_psf_vs_rad"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 2, 1, "", "required_parameters"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_psf3d"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 2, 1, "", "default_unit"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_irf"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_fixed_rad_max"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 3, 1, "", "plot_rad_max_vs_energy"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[161, 3, 1, "", "containment"], [161, 3, 1, "", "containment_radius"], [161, 3, 1, "", "containment_radius_map"], [161, 3, 1, "", "copy"], [161, 3, 1, "", "cutout"], [161, 3, 1, "", "downsample"], [161, 2, 1, "", "energy_name"], [161, 3, 1, "", "from_gauss"], [161, 3, 1, "", "from_geom"], [161, 3, 1, "", "from_hdulist"], [161, 3, 1, "", "get_psf_kernel"], [161, 2, 1, "", "has_single_spatial_bin"], [161, 2, 1, "", "mask_safe_image"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "peek"], [161, 3, 1, "", "plot_containment_radius_vs_energy"], [161, 3, 1, "", "plot_psf_vs_rad"], [161, 2, 1, "", "psf_map"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "sample_coord"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "stack"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_image"], [161, 3, 1, "", "to_region_nd_map"], [161, 3, 1, "", "write"]], "gammapy.makers": [[163, 1, 1, "", "AdaptiveRingBackgroundMaker"], [164, 1, 1, "", "DatasetsMaker"], [165, 1, 1, "", "FoVBackgroundMaker"], [166, 5, 1, "", "MAKER_REGISTRY"], [167, 1, 1, "", "Maker"], [168, 1, 1, "", "MapDatasetMaker"], [169, 1, 1, "", "PhaseBackgroundMaker"], [170, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [171, 1, 1, "", "ReflectedRegionsFinder"], [172, 1, 1, "", "RegionsFinder"], [173, 1, 1, "", "RingBackgroundMaker"], [174, 1, 1, "", "SafeMaskMaker"], [175, 1, 1, "", "SpectrumDatasetMaker"], [176, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[163, 3, 1, "", "kernels"], [163, 3, 1, "", "make_cubes"], [163, 3, 1, "", "run"], [163, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[164, 3, 1, "", "callback"], [164, 3, 1, "", "error_callback"], [164, 3, 1, "", "make_dataset"], [164, 2, 1, "", "n_jobs"], [164, 2, 1, "", "offset_max"], [164, 2, 1, "", "parallel_backend"], [164, 3, 1, "", "run"], [164, 2, 1, "", "safe_mask_maker"], [164, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[165, 2, 1, "", "available_methods"], [165, 3, 1, "", "make_background_fit"], [165, 3, 1, "", "make_background_scale"], [165, 3, 1, "", "make_default_fov_background_model"], [165, 3, 1, "", "make_exclusion_mask"], [165, 2, 1, "", "method"], [165, 3, 1, "", "run"], [165, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[167, 3, 1, "", "run"], [167, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[168, 2, 1, "", "available_selection"], [168, 3, 1, "", "make_background"], [168, 3, 1, "", "make_counts"], [168, 3, 1, "", "make_edisp"], [168, 3, 1, "", "make_edisp_kernel"], [168, 3, 1, "", "make_exposure"], [168, 3, 1, "", "make_exposure_irf"], [168, 3, 1, "", "make_meta_table"], [168, 3, 1, "", "make_psf"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[169, 3, 1, "", "make_counts"], [169, 3, 1, "", "make_counts_off"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[170, 3, 1, "", "make_counts_off"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[171, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[172, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[173, 3, 1, "", "kernel"], [173, 3, 1, "", "make_maps_off"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[174, 2, 1, "", "available_methods"], [174, 3, 1, "", "make_mask_bkg_invalid"], [174, 3, 1, "", "make_mask_energy_aeff_default"], [174, 3, 1, "", "make_mask_energy_aeff_max"], [174, 3, 1, "", "make_mask_energy_bkg_peak"], [174, 3, 1, "", "make_mask_energy_edisp_bias"], [174, 3, 1, "", "make_mask_offset_max"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[175, 2, 1, "", "available_selection"], [175, 3, 1, "", "make_background"], [175, 3, 1, "", "make_counts"], [175, 3, 1, "", "make_edisp"], [175, 3, 1, "", "make_edisp_kernel"], [175, 3, 1, "", "make_exposure"], [175, 3, 1, "", "make_exposure_irf"], [175, 3, 1, "", "make_meta_table"], [175, 3, 1, "", "make_psf"], [175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[176, 3, 1, "", "run"]], "gammapy.makers.utils": [[177, 4, 1, "", "make_counts_rad_max"], [178, 4, 1, "", "make_edisp_kernel_map"], [179, 4, 1, "", "make_edisp_map"], [180, 4, 1, "", "make_effective_livetime_map"], [181, 4, 1, "", "make_map_background_irf"], [182, 4, 1, "", "make_map_exposure_true_energy"], [183, 4, 1, "", "make_observation_time_map"], [184, 4, 1, "", "make_psf_map"], [185, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[186, 1, 1, "", "Geom"], [187, 1, 1, "", "HpxGeom"], [188, 1, 1, "", "HpxMap"], [189, 1, 1, "", "HpxNDMap"], [190, 1, 1, "", "LabelMapAxis"], [191, 1, 1, "", "Map"], [192, 1, 1, "", "MapAxes"], [193, 1, 1, "", "MapAxis"], [194, 1, 1, "", "MapCoord"], [195, 1, 1, "", "Maps"], [196, 1, 1, "", "RegionGeom"], [197, 1, 1, "", "RegionNDMap"], [198, 1, 1, "", "TimeMapAxis"], [199, 1, 1, "", "WcsGeom"], [200, 1, 1, "", "WcsMap"], [201, 1, 1, "", "WcsNDMap"], [202, 4, 1, "", "containment_radius"], [203, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[186, 2, 1, "", "as_energy_true"], [186, 2, 1, "", "center_coord"], [186, 2, 1, "", "center_pix"], [186, 2, 1, "", "center_skydir"], [186, 3, 1, "", "contains"], [186, 3, 1, "", "contains_pix"], [186, 3, 1, "", "coord_to_idx"], [186, 3, 1, "", "coord_to_pix"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "data_nbytes"], [186, 2, 1, "", "data_shape"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "drop"], [186, 3, 1, "", "energy_mask"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "get_coord"], [186, 3, 1, "", "get_idx"], [186, 2, 1, "", "has_energy_axis"], [186, 2, 1, "", "is_allsky"], [186, 2, 1, "", "is_flat"], [186, 2, 1, "", "is_image"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "pix_to_coord"], [186, 3, 1, "", "pix_to_idx"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "replace_axis"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "solid_angle"], [186, 3, 1, "", "squash"], [186, 3, 1, "", "to_bands_hdu"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_image"], [186, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[187, 2, 1, "", "as_energy_true"], [187, 2, 1, "", "axes"], [187, 2, 1, "", "axes_names"], [187, 2, 1, "", "center_coord"], [187, 2, 1, "", "center_pix"], [187, 2, 1, "", "center_skydir"], [187, 3, 1, "", "contains"], [187, 3, 1, "", "contains_pix"], [187, 3, 1, "", "coord_to_idx"], [187, 3, 1, "", "coord_to_pix"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "create"], [187, 3, 1, "", "crop"], [187, 3, 1, "", "cutout"], [187, 3, 1, "", "data_nbytes"], [187, 2, 1, "", "data_shape"], [187, 2, 1, "", "data_shape_axes"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "drop"], [187, 3, 1, "", "energy_mask"], [187, 2, 1, "", "frame"], [187, 3, 1, "", "from_hdu"], [187, 3, 1, "", "from_hdulist"], [187, 3, 1, "", "from_header"], [187, 3, 1, "", "get_coord"], [187, 3, 1, "", "get_idx"], [187, 3, 1, "", "get_index_list"], [187, 3, 1, "", "global_to_local"], [187, 2, 1, "", "has_energy_axis"], [187, 3, 1, "", "interp_weights"], [187, 2, 1, "", "ipix"], [187, 3, 1, "", "is_aligned"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "is_allsky"], [187, 2, 1, "", "is_flat"], [187, 2, 1, "", "is_hpx"], [187, 2, 1, "", "is_image"], [187, 2, 1, "", "is_region"], [187, 2, 1, "", "is_regular"], [187, 3, 1, "", "local_to_global"], [187, 2, 1, "", "ndim"], [187, 2, 1, "", "nest"], [187, 2, 1, "", "npix"], [187, 2, 1, "", "npix_max"], [187, 2, 1, "", "nside"], [187, 2, 1, "", "order"], [187, 2, 1, "", "ordering"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pix_to_coord"], [187, 3, 1, "", "pix_to_idx"], [187, 2, 1, "", "pixel_scales"], [187, 2, 1, "", "projection"], [187, 2, 1, "", "region"], [187, 3, 1, "", "region_mask"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "replace_axis"], [187, 3, 1, "", "resample_axis"], [187, 3, 1, "", "separation"], [187, 2, 1, "", "shape_axes"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "solid_angle"], [187, 3, 1, "", "squash"], [187, 3, 1, "", "to_bands_hdu"], [187, 3, 1, "", "to_binsz"], [187, 3, 1, "", "to_cube"], [187, 3, 1, "", "to_header"], [187, 3, 1, "", "to_image"], [187, 3, 1, "", "to_nside"], [187, 3, 1, "", "to_swapped"], [187, 3, 1, "", "to_wcs_geom"], [187, 3, 1, "", "to_wcs_tiles"], [187, 3, 1, "", "upsample"], [187, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[188, 3, 1, "", "coadd"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "create"], [188, 3, 1, "", "crop"], [188, 3, 1, "", "cumsum"], [188, 2, 1, "", "data"], [188, 3, 1, "", "dot"], [188, 3, 1, "", "downsample"], [188, 3, 1, "", "fill_by_coord"], [188, 3, 1, "", "fill_by_idx"], [188, 3, 1, "", "fill_by_pix"], [188, 3, 1, "", "fill_events"], [188, 3, 1, "", "from_geom"], [188, 3, 1, "", "from_hdulist"], [188, 3, 1, "", "from_stack"], [188, 2, 1, "", "geom"], [188, 3, 1, "", "get_by_coord"], [188, 3, 1, "", "get_by_idx"], [188, 3, 1, "", "get_by_pix"], [188, 3, 1, "", "get_image_by_coord"], [188, 3, 1, "", "get_image_by_idx"], [188, 3, 1, "", "get_image_by_pix"], [188, 3, 1, "", "get_spectrum"], [188, 3, 1, "", "integral"], [188, 3, 1, "", "interp_by_coord"], [188, 3, 1, "", "interp_by_pix"], [188, 3, 1, "", "interp_to_geom"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_mask"], [188, 3, 1, "", "iter_by_axis"], [188, 3, 1, "", "iter_by_image"], [188, 3, 1, "", "iter_by_image_data"], [188, 3, 1, "", "iter_by_image_index"], [188, 3, 1, "", "mask_nearest_position"], [188, 2, 1, "", "meta"], [188, 3, 1, "", "normalize"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "plot_grid"], [188, 3, 1, "", "plot_interactive"], [188, 2, 1, "", "quantity"], [188, 3, 1, "", "read"], [188, 3, 1, "", "reduce"], [188, 3, 1, "", "reduce_over_axes"], [188, 3, 1, "", "rename_axes"], [188, 3, 1, "", "reorder_axes"], [188, 3, 1, "", "reproject_by_image"], [188, 3, 1, "", "reproject_to_geom"], [188, 3, 1, "", "resample"], [188, 3, 1, "", "resample_axis"], [188, 3, 1, "", "sample_coord"], [188, 3, 1, "", "set_by_coord"], [188, 3, 1, "", "set_by_idx"], [188, 3, 1, "", "set_by_pix"], [188, 3, 1, "", "slice_by_idx"], [188, 3, 1, "", "split_by_axis"], [188, 3, 1, "", "sum_over_axes"], [188, 2, 1, "", "tag"], [188, 3, 1, "", "to_cube"], [188, 3, 1, "", "to_hdu"], [188, 3, 1, "", "to_hdulist"], [188, 3, 1, "", "to_swapped"], [188, 3, 1, "", "to_unit"], [188, 3, 1, "", "to_wcs"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[189, 3, 1, "", "coadd"], [189, 3, 1, "", "convolve"], [189, 3, 1, "", "convolve_full"], [189, 3, 1, "", "convolve_wcs"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "create"], [189, 3, 1, "", "crop"], [189, 3, 1, "", "cumsum"], [189, 3, 1, "", "cutout"], [189, 2, 1, "", "data"], [189, 3, 1, "", "dot"], [189, 3, 1, "", "downsample"], [189, 3, 1, "", "fill_by_coord"], [189, 3, 1, "", "fill_by_idx"], [189, 3, 1, "", "fill_by_pix"], [189, 3, 1, "", "fill_events"], [189, 3, 1, "", "from_geom"], [189, 3, 1, "", "from_hdu"], [189, 3, 1, "", "from_hdulist"], [189, 3, 1, "", "from_stack"], [189, 3, 1, "", "from_wcs_tiles"], [189, 2, 1, "", "geom"], [189, 3, 1, "", "get_by_coord"], [189, 3, 1, "", "get_by_idx"], [189, 3, 1, "", "get_by_pix"], [189, 3, 1, "", "get_image_by_coord"], [189, 3, 1, "", "get_image_by_idx"], [189, 3, 1, "", "get_image_by_pix"], [189, 3, 1, "", "get_spectrum"], [189, 3, 1, "", "integral"], [189, 3, 1, "", "interp_by_coord"], [189, 3, 1, "", "interp_by_pix"], [189, 3, 1, "", "interp_to_geom"], [189, 3, 1, "", "is_allclose"], [189, 2, 1, "", "is_mask"], [189, 3, 1, "", "iter_by_axis"], [189, 3, 1, "", "iter_by_image"], [189, 3, 1, "", "iter_by_image_data"], [189, 3, 1, "", "iter_by_image_index"], [189, 3, 1, "", "mask_nearest_position"], [189, 2, 1, "", "meta"], [189, 3, 1, "", "normalize"], [189, 3, 1, "", "pad"], [189, 3, 1, "", "plot"], [189, 3, 1, "", "plot_grid"], [189, 3, 1, "", "plot_interactive"], [189, 3, 1, "", "plot_mask"], [189, 2, 1, "", "quantity"], [189, 3, 1, "", "read"], [189, 3, 1, "", "reduce"], [189, 3, 1, "", "reduce_over_axes"], [189, 3, 1, "", "rename_axes"], [189, 3, 1, "", "reorder_axes"], [189, 3, 1, "", "reproject_by_image"], [189, 3, 1, "", "reproject_to_geom"], [189, 3, 1, "", "resample"], [189, 3, 1, "", "resample_axis"], [189, 3, 1, "", "sample_coord"], [189, 3, 1, "", "set_by_coord"], [189, 3, 1, "", "set_by_idx"], [189, 3, 1, "", "set_by_pix"], [189, 3, 1, "", "slice_by_idx"], [189, 3, 1, "", "smooth"], [189, 3, 1, "", "split_by_axis"], [189, 3, 1, "", "stack"], [189, 3, 1, "", "sum_over_axes"], [189, 2, 1, "", "tag"], [189, 3, 1, "", "to_cube"], [189, 3, 1, "", "to_hdu"], [189, 3, 1, "", "to_hdulist"], [189, 3, 1, "", "to_nside"], [189, 3, 1, "", "to_region_nd_map"], [189, 3, 1, "", "to_swapped"], [189, 3, 1, "", "to_unit"], [189, 3, 1, "", "to_wcs"], [189, 3, 1, "", "to_wcs_tiles"], [189, 2, 1, "", "unit"], [189, 3, 1, "", "upsample"], [189, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[190, 2, 1, "", "as_plot_center"], [190, 2, 1, "", "as_plot_edges"], [190, 2, 1, "", "as_plot_labels"], [190, 2, 1, "", "as_plot_xerr"], [190, 3, 1, "", "assert_name"], [190, 2, 1, "", "bin_width"], [190, 2, 1, "", "center"], [190, 3, 1, "", "concatenate"], [190, 3, 1, "", "coord_to_idx"], [190, 3, 1, "", "coord_to_pix"], [190, 3, 1, "", "copy"], [190, 3, 1, "", "downsample"], [190, 2, 1, "", "edges"], [190, 2, 1, "", "edges_max"], [190, 2, 1, "", "edges_min"], [190, 3, 1, "", "format_plot_xaxis"], [190, 3, 1, "", "from_stack"], [190, 3, 1, "", "from_table"], [190, 3, 1, "", "is_allclose"], [190, 2, 1, "", "name"], [190, 2, 1, "", "nbin"], [190, 2, 1, "", "node_type"], [190, 3, 1, "", "pad"], [190, 3, 1, "", "pix_to_coord"], [190, 3, 1, "", "pix_to_idx"], [190, 3, 1, "", "resample"], [190, 3, 1, "", "slice"], [190, 3, 1, "", "squash"], [190, 3, 1, "", "to_header"], [190, 2, 1, "", "unit"], [190, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[191, 3, 1, "", "coadd"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "cumsum"], [191, 2, 1, "", "data"], [191, 3, 1, "", "dot"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "fill_by_coord"], [191, 3, 1, "", "fill_by_idx"], [191, 3, 1, "", "fill_by_pix"], [191, 3, 1, "", "fill_events"], [191, 3, 1, "", "from_geom"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "from_stack"], [191, 2, 1, "", "geom"], [191, 3, 1, "", "get_by_coord"], [191, 3, 1, "", "get_by_idx"], [191, 3, 1, "", "get_by_pix"], [191, 3, 1, "", "get_image_by_coord"], [191, 3, 1, "", "get_image_by_idx"], [191, 3, 1, "", "get_image_by_pix"], [191, 3, 1, "", "get_spectrum"], [191, 3, 1, "", "integral"], [191, 3, 1, "", "interp_by_coord"], [191, 3, 1, "", "interp_by_pix"], [191, 3, 1, "", "interp_to_geom"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_mask"], [191, 3, 1, "", "iter_by_axis"], [191, 3, 1, "", "iter_by_image"], [191, 3, 1, "", "iter_by_image_data"], [191, 3, 1, "", "iter_by_image_index"], [191, 3, 1, "", "mask_nearest_position"], [191, 2, 1, "", "meta"], [191, 3, 1, "", "normalize"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "plot_grid"], [191, 3, 1, "", "plot_interactive"], [191, 2, 1, "", "quantity"], [191, 3, 1, "", "read"], [191, 3, 1, "", "reduce"], [191, 3, 1, "", "reduce_over_axes"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "reorder_axes"], [191, 3, 1, "", "reproject_by_image"], [191, 3, 1, "", "reproject_to_geom"], [191, 3, 1, "", "resample"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "sample_coord"], [191, 3, 1, "", "set_by_coord"], [191, 3, 1, "", "set_by_idx"], [191, 3, 1, "", "set_by_pix"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "split_by_axis"], [191, 3, 1, "", "sum_over_axes"], [191, 2, 1, "", "tag"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_unit"], [191, 2, 1, "", "unit"], [191, 3, 1, "", "upsample"], [191, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[192, 3, 1, "", "assert_names"], [192, 3, 1, "", "bin_volume"], [192, 2, 1, "", "center_coord"], [192, 3, 1, "", "coord_to_idx"], [192, 3, 1, "", "coord_to_pix"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "count"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "drop"], [192, 3, 1, "", "from_default"], [192, 3, 1, "", "from_table"], [192, 3, 1, "", "from_table_hdu"], [192, 3, 1, "", "get_coord"], [192, 3, 1, "", "index"], [192, 3, 1, "", "index_data"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_flat"], [192, 2, 1, "", "is_unidimensional"], [192, 2, 1, "", "iter_with_reshape"], [192, 2, 1, "", "names"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "pix_to_coord"], [192, 3, 1, "", "pix_to_idx"], [192, 2, 1, "", "primary_axis"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "replace"], [192, 3, 1, "", "resample"], [192, 2, 1, "", "reverse"], [192, 2, 1, "", "shape"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "squash"], [192, 3, 1, "", "to_header"], [192, 3, 1, "", "to_table"], [192, 3, 1, "", "to_table_hdu"], [192, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[193, 2, 1, "", "as_plot_center"], [193, 2, 1, "", "as_plot_edges"], [193, 2, 1, "", "as_plot_labels"], [193, 2, 1, "", "as_plot_scale"], [193, 2, 1, "", "as_plot_xerr"], [193, 3, 1, "", "assert_name"], [193, 2, 1, "", "bin_width"], [193, 2, 1, "", "bounds"], [193, 2, 1, "", "center"], [193, 3, 1, "", "concatenate"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "downsample"], [193, 2, 1, "", "edges"], [193, 2, 1, "", "edges_max"], [193, 2, 1, "", "edges_min"], [193, 3, 1, "", "format_plot_xaxis"], [193, 3, 1, "", "format_plot_yaxis"], [193, 3, 1, "", "from_bounds"], [193, 3, 1, "", "from_edges"], [193, 3, 1, "", "from_energy_bounds"], [193, 3, 1, "", "from_energy_edges"], [193, 3, 1, "", "from_nodes"], [193, 3, 1, "", "from_stack"], [193, 3, 1, "", "from_table"], [193, 3, 1, "", "from_table_hdu"], [193, 3, 1, "", "group_table"], [193, 2, 1, "", "interp"], [193, 3, 1, "", "is_aligned"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_energy_axis"], [193, 2, 1, "", "iter_by_edges"], [193, 2, 1, "", "name"], [193, 2, 1, "", "nbin"], [193, 2, 1, "", "nbin_per_decade"], [193, 2, 1, "", "node_type"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 3, 1, "", "rename"], [193, 3, 1, "", "round"], [193, 3, 1, "", "slice"], [193, 3, 1, "", "squash"], [193, 3, 1, "", "to_header"], [193, 3, 1, "", "to_node_type"], [193, 3, 1, "", "to_table"], [193, 3, 1, "", "to_table_hdu"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"], [193, 2, 1, "", "use_center_as_plot_labels"], [193, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[194, 3, 1, "", "apply_mask"], [194, 2, 1, "", "axis_names"], [194, 2, 1, "", "broadcasted"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 2, 1, "", "flat"], [194, 2, 1, "", "frame"], [194, 2, 1, "", "lat"], [194, 2, 1, "", "lon"], [194, 2, 1, "", "match_by_name"], [194, 2, 1, "", "ndim"], [194, 2, 1, "", "phi"], [194, 2, 1, "", "shape"], [194, 2, 1, "", "size"], [194, 2, 1, "", "skycoord"], [194, 2, 1, "", "theta"], [194, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[195, 3, 1, "", "clear"], [195, 3, 1, "", "from_geom"], [195, 3, 1, "", "from_hdulist"], [195, 2, 1, "", "geom"], [195, 3, 1, "", "get"], [195, 3, 1, "", "items"], [195, 3, 1, "", "keys"], [195, 3, 1, "", "pop"], [195, 3, 1, "", "popitem"], [195, 3, 1, "", "read"], [195, 3, 1, "", "setdefault"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "update"], [195, 3, 1, "", "values"], [195, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[196, 2, 1, "", "as_energy_true"], [196, 2, 1, "", "axes"], [196, 2, 1, "", "axes_names"], [196, 3, 1, "", "bin_volume"], [196, 2, 1, "", "binsz_wcs"], [196, 2, 1, "", "center_coord"], [196, 2, 1, "", "center_pix"], [196, 2, 1, "", "center_skydir"], [196, 3, 1, "", "contains"], [196, 3, 1, "", "contains_pix"], [196, 3, 1, "", "contains_wcs_pix"], [196, 3, 1, "", "coord_to_idx"], [196, 3, 1, "", "coord_to_pix"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "data_nbytes"], [196, 2, 1, "", "data_shape"], [196, 2, 1, "", "data_shape_axes"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "drop"], [196, 3, 1, "", "energy_mask"], [196, 2, 1, "", "frame"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_regions"], [196, 3, 1, "", "get_coord"], [196, 3, 1, "", "get_idx"], [196, 3, 1, "", "get_wcs_coord_and_weights"], [196, 2, 1, "", "has_energy_axis"], [196, 2, 1, "", "is_all_point_sky_regions"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_allsky"], [196, 2, 1, "", "is_flat"], [196, 2, 1, "", "is_hpx"], [196, 2, 1, "", "is_image"], [196, 2, 1, "", "is_region"], [196, 2, 1, "", "is_regular"], [196, 2, 1, "", "npix"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "pix_to_coord"], [196, 3, 1, "", "pix_to_idx"], [196, 3, 1, "", "plot_region"], [196, 2, 1, "", "projection"], [196, 2, 1, "", "region"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "replace_axis"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "separation"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "solid_angle"], [196, 3, 1, "", "squash"], [196, 3, 1, "", "to_bands_hdu"], [196, 3, 1, "", "to_binsz"], [196, 3, 1, "", "to_binsz_wcs"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_image"], [196, 3, 1, "", "to_wcs_geom"], [196, 3, 1, "", "union"], [196, 3, 1, "", "upsample"], [196, 2, 1, "", "wcs"], [196, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 3, 1, "", "cutout"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_table"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_axis_data"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_hist"], [197, 3, 1, "", "plot_interactive"], [197, 3, 1, "", "plot_mask"], [197, 3, 1, "", "plot_region"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "stack"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_region_nd_map"], [197, 3, 1, "", "to_table"], [197, 3, 1, "", "to_unit"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "bounds"], [198, 2, 1, "", "center"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "from_gti"], [198, 3, 1, "", "from_gti_bounds"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "from_time_bounds"], [198, 3, 1, "", "from_time_edges"], [198, 3, 1, "", "group_table"], [198, 2, 1, "", "interp"], [198, 3, 1, "", "is_aligned"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_contiguous"], [198, 2, 1, "", "iter_by_edges"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 2, 1, "", "reference_time"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 2, 1, "", "time_bounds"], [198, 2, 1, "", "time_delta"], [198, 2, 1, "", "time_edges"], [198, 2, 1, "", "time_format"], [198, 2, 1, "", "time_max"], [198, 2, 1, "", "time_mid"], [198, 2, 1, "", "time_min"], [198, 3, 1, "", "to_contiguous"], [198, 3, 1, "", "to_gti"], [198, 3, 1, "", "to_header"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[199, 2, 1, "", "as_energy_true"], [199, 2, 1, "", "axes"], [199, 2, 1, "", "axes_names"], [199, 3, 1, "", "bin_volume"], [199, 3, 1, "", "binary_structure"], [199, 3, 1, "", "boundary_mask"], [199, 2, 1, "", "center_coord"], [199, 2, 1, "", "center_pix"], [199, 2, 1, "", "center_skydir"], [199, 3, 1, "", "contains"], [199, 3, 1, "", "contains_pix"], [199, 3, 1, "", "coord_to_idx"], [199, 3, 1, "", "coord_to_pix"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cutout"], [199, 3, 1, "", "cutout_slices"], [199, 3, 1, "", "data_nbytes"], [199, 2, 1, "", "data_shape"], [199, 2, 1, "", "data_shape_axes"], [199, 2, 1, "", "data_shape_image"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "drop"], [199, 3, 1, "", "energy_mask"], [199, 2, 1, "", "footprint"], [199, 2, 1, "", "footprint_rectangle_sky_region"], [199, 2, 1, "", "frame"], [199, 3, 1, "", "from_aligned"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_header"], [199, 3, 1, "", "get_coord"], [199, 3, 1, "", "get_idx"], [199, 3, 1, "", "get_pix"], [199, 2, 1, "", "has_energy_axis"], [199, 3, 1, "", "is_aligned"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_allsky"], [199, 2, 1, "", "is_flat"], [199, 2, 1, "", "is_hpx"], [199, 2, 1, "", "is_image"], [199, 2, 1, "", "is_region"], [199, 2, 1, "", "is_regular"], [199, 2, 1, "", "ndim"], [199, 2, 1, "", "npix"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "pix_to_coord"], [199, 3, 1, "", "pix_to_idx"], [199, 2, 1, "", "pixel_area"], [199, 2, 1, "", "pixel_scales"], [199, 2, 1, "", "projection"], [199, 3, 1, "", "region_mask"], [199, 3, 1, "", "region_weights"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "replace_axis"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "separation"], [199, 2, 1, "", "shape_axes"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "solid_angle"], [199, 3, 1, "", "squash"], [199, 3, 1, "", "to_bands_hdu"], [199, 3, 1, "", "to_binsz"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_even_npix"], [199, 3, 1, "", "to_header"], [199, 3, 1, "", "to_image"], [199, 3, 1, "", "to_odd_npix"], [199, 3, 1, "", "upsample"], [199, 2, 1, "", "wcs"], [199, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[200, 3, 1, "", "coadd"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "cumsum"], [200, 2, 1, "", "data"], [200, 3, 1, "", "dot"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "fill_by_coord"], [200, 3, 1, "", "fill_by_idx"], [200, 3, 1, "", "fill_by_pix"], [200, 3, 1, "", "fill_events"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_stack"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get_by_coord"], [200, 3, 1, "", "get_by_idx"], [200, 3, 1, "", "get_by_pix"], [200, 3, 1, "", "get_image_by_coord"], [200, 3, 1, "", "get_image_by_idx"], [200, 3, 1, "", "get_image_by_pix"], [200, 3, 1, "", "get_spectrum"], [200, 3, 1, "", "integral"], [200, 3, 1, "", "interp_by_coord"], [200, 3, 1, "", "interp_by_pix"], [200, 3, 1, "", "interp_to_geom"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_mask"], [200, 3, 1, "", "iter_by_axis"], [200, 3, 1, "", "iter_by_image"], [200, 3, 1, "", "iter_by_image_data"], [200, 3, 1, "", "iter_by_image_index"], [200, 3, 1, "", "mask_nearest_position"], [200, 2, 1, "", "meta"], [200, 3, 1, "", "normalize"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "plot_grid"], [200, 3, 1, "", "plot_interactive"], [200, 2, 1, "", "quantity"], [200, 3, 1, "", "read"], [200, 3, 1, "", "reduce"], [200, 3, 1, "", "reduce_over_axes"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "reorder_axes"], [200, 3, 1, "", "reproject_by_image"], [200, 3, 1, "", "reproject_to_geom"], [200, 3, 1, "", "resample"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "sample_coord"], [200, 3, 1, "", "set_by_coord"], [200, 3, 1, "", "set_by_idx"], [200, 3, 1, "", "set_by_pix"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "split_by_axis"], [200, 3, 1, "", "sum_over_axes"], [200, 2, 1, "", "tag"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_hdu"], [200, 3, 1, "", "to_hdulist"], [200, 3, 1, "", "to_unit"], [200, 2, 1, "", "unit"], [200, 3, 1, "", "upsample"], [200, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[201, 3, 1, "", "binary_dilate"], [201, 3, 1, "", "binary_erode"], [201, 3, 1, "", "coadd"], [201, 3, 1, "", "convolve"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "create"], [201, 3, 1, "", "crop"], [201, 3, 1, "", "cumsum"], [201, 3, 1, "", "cutout"], [201, 3, 1, "", "cutout_and_mask_region"], [201, 2, 1, "", "data"], [201, 3, 1, "", "dot"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "fill_by_coord"], [201, 3, 1, "", "fill_by_idx"], [201, 3, 1, "", "fill_by_pix"], [201, 3, 1, "", "fill_events"], [201, 3, 1, "", "from_geom"], [201, 3, 1, "", "from_hdu"], [201, 3, 1, "", "from_hdulist"], [201, 3, 1, "", "from_stack"], [201, 2, 1, "", "geom"], [201, 3, 1, "", "get_by_coord"], [201, 3, 1, "", "get_by_idx"], [201, 3, 1, "", "get_by_pix"], [201, 3, 1, "", "get_image_by_coord"], [201, 3, 1, "", "get_image_by_idx"], [201, 3, 1, "", "get_image_by_pix"], [201, 3, 1, "", "get_spectrum"], [201, 3, 1, "", "integral"], [201, 3, 1, "", "interp_by_coord"], [201, 3, 1, "", "interp_by_pix"], [201, 3, 1, "", "interp_to_geom"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_mask"], [201, 3, 1, "", "iter_by_axis"], [201, 3, 1, "", "iter_by_image"], [201, 3, 1, "", "iter_by_image_data"], [201, 3, 1, "", "iter_by_image_index"], [201, 3, 1, "", "mask_contains_region"], [201, 3, 1, "", "mask_nearest_position"], [201, 2, 1, "", "meta"], [201, 3, 1, "", "normalize"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "plot"], [201, 3, 1, "", "plot_grid"], [201, 3, 1, "", "plot_interactive"], [201, 3, 1, "", "plot_mask"], [201, 2, 1, "", "quantity"], [201, 3, 1, "", "read"], [201, 3, 1, "", "reduce"], [201, 3, 1, "", "reduce_over_axes"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "reorder_axes"], [201, 3, 1, "", "reproject_by_image"], [201, 3, 1, "", "reproject_to_geom"], [201, 3, 1, "", "resample"], [201, 3, 1, "", "resample_axis"], [201, 3, 1, "", "sample_coord"], [201, 3, 1, "", "set_by_coord"], [201, 3, 1, "", "set_by_idx"], [201, 3, 1, "", "set_by_pix"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "smooth"], [201, 3, 1, "", "split_by_axis"], [201, 3, 1, "", "stack"], [201, 3, 1, "", "sum_over_axes"], [201, 2, 1, "", "tag"], [201, 3, 1, "", "to_cube"], [201, 3, 1, "", "to_hdu"], [201, 3, 1, "", "to_hdulist"], [201, 3, 1, "", "to_region_nd_map"], [201, 3, 1, "", "to_region_nd_map_histogram"], [201, 3, 1, "", "to_unit"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 3, 1, "", "write"]], "gammapy.modeling": [[204, 1, 1, "", "Covariance"], [205, 1, 1, "", "CovarianceResult"], [206, 1, 1, "", "Fit"], [207, 1, 1, "", "FitResult"], [208, 1, 1, "", "OptimizeResult"], [209, 1, 1, "", "Parameter"], [210, 1, 1, "", "Parameters"], [211, 1, 1, "", "PriorParameter"], [212, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [279, 4, 1, "", "select_nested_models"], [280, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[204, 2, 1, "", "correlation"], [204, 2, 1, "", "data"], [204, 3, 1, "", "from_factor_matrix"], [204, 3, 1, "", "from_stack"], [204, 3, 1, "", "get_subcovariance"], [204, 3, 1, "", "plot_correlation"], [204, 2, 1, "", "scipy_mvn"], [204, 3, 1, "", "set_subcovariance"], [204, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[205, 2, 1, "", "backend"], [205, 2, 1, "", "matrix"], [205, 2, 1, "", "message"], [205, 2, 1, "", "method"], [205, 2, 1, "", "success"], [205, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[206, 3, 1, "", "confidence"], [206, 3, 1, "", "covariance"], [206, 3, 1, "", "optimize"], [206, 3, 1, "", "run"], [206, 3, 1, "", "stat_contour"], [206, 3, 1, "", "stat_profile"], [206, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[207, 2, 1, "", "backend"], [207, 2, 1, "", "covariance_result"], [207, 2, 1, "", "message"], [207, 2, 1, "", "method"], [207, 2, 1, "", "minuit"], [207, 2, 1, "", "models"], [207, 2, 1, "", "nfev"], [207, 2, 1, "", "optimize_result"], [207, 2, 1, "", "parameters"], [207, 2, 1, "", "success"], [207, 2, 1, "", "total_stat"], [207, 2, 1, "", "trace"], [207, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[208, 2, 1, "", "backend"], [208, 2, 1, "", "message"], [208, 2, 1, "", "method"], [208, 2, 1, "", "minuit"], [208, 2, 1, "", "models"], [208, 2, 1, "", "nfev"], [208, 2, 1, "", "parameters"], [208, 2, 1, "", "success"], [208, 3, 1, "", "to_dict"], [208, 2, 1, "", "total_stat"], [208, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[209, 3, 1, "", "autoscale"], [209, 3, 1, "", "check_limits"], [209, 2, 1, "", "conf_max"], [209, 2, 1, "", "conf_min"], [209, 3, 1, "", "copy"], [209, 2, 1, "", "error"], [209, 2, 1, "", "factor"], [209, 2, 1, "", "factor_max"], [209, 2, 1, "", "factor_min"], [209, 2, 1, "", "frozen"], [209, 2, 1, "", "is_norm"], [209, 2, 1, "", "max"], [209, 2, 1, "", "min"], [209, 2, 1, "", "name"], [209, 2, 1, "", "norm_parameters"], [209, 2, 1, "", "prior"], [209, 3, 1, "", "prior_stat_sum"], [209, 2, 1, "", "quantity"], [209, 2, 1, "", "scale"], [209, 2, 1, "", "scale_method"], [209, 2, 1, "", "scan_max"], [209, 2, 1, "", "scan_min"], [209, 2, 1, "", "scan_n_sigma"], [209, 2, 1, "", "scan_values"], [209, 3, 1, "", "to_dict"], [209, 2, 1, "", "type"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "update_from_dict"], [209, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[210, 3, 1, "", "autoscale"], [210, 3, 1, "", "check_limits"], [210, 3, 1, "", "copy"], [210, 3, 1, "", "count"], [210, 2, 1, "", "free_parameters"], [210, 3, 1, "", "freeze_all"], [210, 3, 1, "", "from_dict"], [210, 3, 1, "", "from_stack"], [210, 3, 1, "", "index"], [210, 2, 1, "", "max"], [210, 2, 1, "", "min"], [210, 2, 1, "", "names"], [210, 2, 1, "", "norm_parameters"], [210, 2, 1, "", "prior"], [210, 3, 1, "", "prior_stat_sum"], [210, 3, 1, "", "restore_status"], [210, 3, 1, "", "select"], [210, 3, 1, "", "set_parameter_factors"], [210, 3, 1, "", "to_dict"], [210, 3, 1, "", "to_table"], [210, 2, 1, "", "types"], [210, 3, 1, "", "unfreeze_all"], [210, 2, 1, "", "unique_parameters"], [210, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[211, 3, 1, "", "autoscale"], [211, 3, 1, "", "check_limits"], [211, 2, 1, "", "conf_max"], [211, 2, 1, "", "conf_min"], [211, 3, 1, "", "copy"], [211, 2, 1, "", "error"], [211, 2, 1, "", "factor"], [211, 2, 1, "", "factor_max"], [211, 2, 1, "", "factor_min"], [211, 2, 1, "", "frozen"], [211, 2, 1, "", "is_norm"], [211, 2, 1, "", "max"], [211, 2, 1, "", "min"], [211, 2, 1, "", "name"], [211, 2, 1, "", "norm_parameters"], [211, 2, 1, "", "prior"], [211, 3, 1, "", "prior_stat_sum"], [211, 2, 1, "", "quantity"], [211, 2, 1, "", "scale"], [211, 2, 1, "", "scale_method"], [211, 2, 1, "", "scan_max"], [211, 2, 1, "", "scan_min"], [211, 2, 1, "", "scan_n_sigma"], [211, 2, 1, "", "scan_values"], [211, 3, 1, "", "to_dict"], [211, 2, 1, "", "type"], [211, 2, 1, "", "unit"], [211, 3, 1, "", "update_from_dict"], [211, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[212, 3, 1, "", "autoscale"], [212, 3, 1, "", "check_limits"], [212, 3, 1, "", "copy"], [212, 3, 1, "", "count"], [212, 2, 1, "", "free_parameters"], [212, 3, 1, "", "freeze_all"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_stack"], [212, 3, 1, "", "index"], [212, 2, 1, "", "max"], [212, 2, 1, "", "min"], [212, 2, 1, "", "names"], [212, 2, 1, "", "norm_parameters"], [212, 2, 1, "", "prior"], [212, 3, 1, "", "prior_stat_sum"], [212, 3, 1, "", "restore_status"], [212, 3, 1, "", "select"], [212, 3, 1, "", "set_parameter_factors"], [212, 3, 1, "", "to_dict"], [212, 3, 1, "", "to_table"], [212, 2, 1, "", "types"], [212, 3, 1, "", "unfreeze_all"], [212, 2, 1, "", "unique_parameters"], [212, 2, 1, "", "value"]], "gammapy.modeling.models": [[213, 1, 1, "", "BrokenPowerLawSpectralModel"], [214, 1, 1, "", "CompoundSpectralModel"], [215, 1, 1, "", "ConstantFluxSpatialModel"], [216, 1, 1, "", "ConstantSpatialModel"], [217, 1, 1, "", "ConstantSpectralModel"], [218, 1, 1, "", "ConstantTemporalModel"], [219, 1, 1, "", "DatasetModels"], [220, 1, 1, "", "DiskSpatialModel"], [221, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [222, 5, 1, "", "EBL_DATA_BUILTIN"], [223, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [224, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [225, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [226, 1, 1, "", "ExpDecayTemporalModel"], [227, 1, 1, "", "FoVBackgroundModel"], [228, 1, 1, "", "GaussianSpatialModel"], [229, 1, 1, "", "GaussianSpectralModel"], [230, 1, 1, "", "GaussianTemporalModel"], [231, 1, 1, "", "GeneralizedGaussianSpatialModel"], [232, 1, 1, "", "GeneralizedGaussianTemporalModel"], [233, 1, 1, "", "LightCurveTemplateTemporalModel"], [234, 1, 1, "", "LinearTemporalModel"], [235, 1, 1, "", "LogParabolaNormSpectralModel"], [236, 1, 1, "", "LogParabolaSpectralModel"], [237, 5, 1, "", "MODEL_REGISTRY"], [238, 1, 1, "", "MeyerCrabSpectralModel"], [239, 1, 1, "", "Model"], [240, 1, 1, "", "ModelBase"], [241, 1, 1, "", "Models"], [242, 1, 1, "", "NaimaSpectralModel"], [243, 1, 1, "", "PiecewiseNormSpatialModel"], [244, 1, 1, "", "PiecewiseNormSpectralModel"], [245, 1, 1, "", "PointSpatialModel"], [246, 1, 1, "", "PowerLaw2SpectralModel"], [247, 1, 1, "", "PowerLawNormSpectralModel"], [248, 1, 1, "", "PowerLawSpectralModel"], [249, 1, 1, "", "PowerLawTemporalModel"], [250, 1, 1, "", "Prior"], [251, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [252, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [253, 1, 1, "", "ScaleSpectralModel"], [254, 1, 1, "", "Shell2SpatialModel"], [255, 1, 1, "", "ShellSpatialModel"], [256, 1, 1, "", "SineTemporalModel"], [257, 1, 1, "", "SkyModel"], [258, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [259, 1, 1, "", "SpatialModel"], [260, 1, 1, "", "SpectralModel"], [261, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [262, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [263, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [264, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [265, 1, 1, "", "TemplateNDSpatialModel"], [266, 1, 1, "", "TemplateNDSpectralModel"], [267, 1, 1, "", "TemplateNPredModel"], [268, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [269, 1, 1, "", "TemplateSpatialModel"], [270, 1, 1, "", "TemplateSpectralModel"], [271, 1, 1, "", "TemporalModel"], [272, 4, 1, "", "create_cosmic_ray_spectral_model"], [273, 4, 1, "", "create_crab_spectral_model"], [274, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [275, 4, 1, "", "integrate_spectrum"], [276, 4, 1, "", "read_hermes_cube"], [277, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[213, 3, 1, "", "__call__"], [213, 2, 1, "", "amplitude"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 2, 1, "", "ebreak"], [213, 3, 1, "", "energy_flux"], [213, 3, 1, "", "energy_flux_error"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "evaluate_error"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 2, 1, "", "frozen"], [213, 2, 1, "", "index1"], [213, 2, 1, "", "index2"], [213, 3, 1, "", "integral"], [213, 3, 1, "", "integral_error"], [213, 3, 1, "", "inverse"], [213, 3, 1, "", "inverse_all"], [213, 2, 1, "", "is_norm_spectral_model"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "parameters_unique_names"], [213, 2, 1, "", "pivot_energy"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "plot_error"], [213, 3, 1, "", "reassign"], [213, 3, 1, "", "reference_fluxes"], [213, 3, 1, "", "spectral_index"], [213, 3, 1, "", "spectral_index_error"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[214, 3, 1, "", "__call__"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "covariance"], [214, 2, 1, "", "default_parameters"], [214, 3, 1, "", "energy_flux"], [214, 3, 1, "", "energy_flux_error"], [214, 3, 1, "", "evaluate"], [214, 3, 1, "", "evaluate_error"], [214, 3, 1, "", "freeze"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_parameters"], [214, 2, 1, "", "frozen"], [214, 3, 1, "", "integral"], [214, 3, 1, "", "integral_error"], [214, 3, 1, "", "inverse"], [214, 3, 1, "", "inverse_all"], [214, 2, 1, "", "is_norm_spectral_model"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "parameters_unique_names"], [214, 2, 1, "", "pivot_energy"], [214, 3, 1, "", "plot"], [214, 3, 1, "", "plot_error"], [214, 3, 1, "", "reassign"], [214, 3, 1, "", "reference_fluxes"], [214, 3, 1, "", "spectral_index"], [214, 3, 1, "", "spectral_index_error"], [214, 2, 1, "", "tag"], [214, 3, 1, "", "to_dict"], [214, 2, 1, "", "type"], [214, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[215, 3, 1, "", "__call__"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_geom"], [215, 2, 1, "", "evaluation_bin_size_min"], [215, 2, 1, "", "evaluation_radius"], [215, 2, 1, "", "evaluation_region"], [215, 2, 1, "", "frame"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 3, 1, "", "from_position"], [215, 2, 1, "", "frozen"], [215, 3, 1, "", "integrate_geom"], [215, 2, 1, "", "is_energy_dependent"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "parameters_unique_names"], [215, 2, 1, "", "phi_0"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "plot_grid"], [215, 3, 1, "", "plot_interactive"], [215, 3, 1, "", "plot_position_error"], [215, 2, 1, "", "position"], [215, 2, 1, "", "position_error"], [215, 2, 1, "", "position_lonlat"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 3, 1, "", "to_region"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[216, 3, 1, "", "__call__"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_geom"], [216, 2, 1, "", "evaluation_bin_size_min"], [216, 2, 1, "", "evaluation_radius"], [216, 2, 1, "", "evaluation_region"], [216, 2, 1, "", "frame"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 3, 1, "", "from_position"], [216, 2, 1, "", "frozen"], [216, 3, 1, "", "integrate_geom"], [216, 2, 1, "", "is_energy_dependent"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "parameters_unique_names"], [216, 2, 1, "", "phi_0"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "plot_grid"], [216, 3, 1, "", "plot_interactive"], [216, 3, 1, "", "plot_position_error"], [216, 2, 1, "", "position"], [216, 2, 1, "", "position_error"], [216, 2, 1, "", "position_lonlat"], [216, 3, 1, "", "reassign"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 3, 1, "", "to_region"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"], [216, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[217, 3, 1, "", "__call__"], [217, 2, 1, "", "const"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 3, 1, "", "energy_flux"], [217, 3, 1, "", "energy_flux_error"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "evaluate_error"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "integral"], [217, 3, 1, "", "integral_error"], [217, 3, 1, "", "inverse"], [217, 3, 1, "", "inverse_all"], [217, 2, 1, "", "is_norm_spectral_model"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "parameters_unique_names"], [217, 2, 1, "", "pivot_energy"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "plot_error"], [217, 3, 1, "", "reassign"], [217, 3, 1, "", "reference_fluxes"], [217, 3, 1, "", "spectral_index"], [217, 3, 1, "", "spectral_index_error"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[218, 3, 1, "", "__call__"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "integral"], [218, 2, 1, "", "is_energy_dependent"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "reassign"], [218, 2, 1, "", "reference_time"], [218, 3, 1, "", "sample_time"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "time_sum"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[219, 3, 1, "", "copy"], [219, 3, 1, "", "count"], [219, 2, 1, "", "covariance"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_yaml"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "index"], [219, 2, 1, "", "names"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 3, 1, "", "plot_positions"], [219, 3, 1, "", "plot_regions"], [219, 2, 1, "", "positions"], [219, 3, 1, "", "read"], [219, 3, 1, "", "read_covariance"], [219, 3, 1, "", "reassign"], [219, 3, 1, "", "restore_status"], [219, 3, 1, "", "select"], [219, 3, 1, "", "select_from_geom"], [219, 3, 1, "", "select_mask"], [219, 3, 1, "", "select_region"], [219, 3, 1, "", "selection_mask"], [219, 3, 1, "", "set_parameters_bounds"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_parameters_table"], [219, 3, 1, "", "to_regions"], [219, 3, 1, "", "to_template_sky_model"], [219, 3, 1, "", "to_template_spectral_model"], [219, 3, 1, "", "to_yaml"], [219, 3, 1, "", "unfreeze"], [219, 3, 1, "", "update_link_label"], [219, 3, 1, "", "update_parameters_from_table"], [219, 2, 1, "", "wcs_geom"], [219, 3, 1, "", "write"], [219, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[220, 3, 1, "", "__call__"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 2, 1, "", "e"], [220, 2, 1, "", "edge_width"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_geom"], [220, 2, 1, "", "evaluation_bin_size_min"], [220, 2, 1, "", "evaluation_radius"], [220, 2, 1, "", "evaluation_region"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 3, 1, "", "from_position"], [220, 3, 1, "", "from_region"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integrate_geom"], [220, 2, 1, "", "is_energy_dependent"], [220, 2, 1, "", "lat_0"], [220, 2, 1, "", "lon_0"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "phi"], [220, 2, 1, "", "phi_0"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "plot_grid"], [220, 3, 1, "", "plot_interactive"], [220, 3, 1, "", "plot_position_error"], [220, 2, 1, "", "position"], [220, 2, 1, "", "position_error"], [220, 2, 1, "", "position_lonlat"], [220, 2, 1, "", "r_0"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_region"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "alpha_norm"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "read"], [221, 3, 1, "", "read_builtin"], [221, 3, 1, "", "reassign"], [221, 2, 1, "", "redshift"], [221, 3, 1, "", "reference_fluxes"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[223, 3, 1, "", "__call__"], [223, 2, 1, "", "amplitude"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 2, 1, "", "ecut"], [223, 3, 1, "", "energy_flux"], [223, 3, 1, "", "energy_flux_error"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_error"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 2, 1, "", "index"], [223, 3, 1, "", "integral"], [223, 3, 1, "", "integral_error"], [223, 3, 1, "", "inverse"], [223, 3, 1, "", "inverse_all"], [223, 2, 1, "", "is_norm_spectral_model"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "pivot_energy"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "reference"], [223, 3, 1, "", "reference_fluxes"], [223, 3, 1, "", "spectral_index"], [223, 3, 1, "", "spectral_index_error"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "alpha"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 2, 1, "", "index"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "lambda_"], [224, 2, 1, "", "norm"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "reference"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[225, 3, 1, "", "__call__"], [225, 2, 1, "", "alpha"], [225, 2, 1, "", "amplitude"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 2, 1, "", "e_peak"], [225, 3, 1, "", "energy_flux"], [225, 3, 1, "", "energy_flux_error"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_error"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 2, 1, "", "index"], [225, 3, 1, "", "integral"], [225, 3, 1, "", "integral_error"], [225, 3, 1, "", "inverse"], [225, 3, 1, "", "inverse_all"], [225, 2, 1, "", "is_norm_spectral_model"], [225, 2, 1, "", "lambda_"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "pivot_energy"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference"], [225, 3, 1, "", "reference_fluxes"], [225, 3, 1, "", "spectral_index"], [225, 3, 1, "", "spectral_index_error"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "reference_time"], [226, 3, 1, "", "sample_time"], [226, 2, 1, "", "t0"], [226, 2, 1, "", "t_ref"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "time_sum"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[227, 3, 1, "", "contributes"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_geom"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 2, 1, "", "name"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 3, 1, "", "reassign"], [227, 3, 1, "", "reset_to_default"], [227, 2, 1, "", "spatial_model"], [227, 2, 1, "", "spectral_model"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "e"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_geom"], [228, 2, 1, "", "evaluation_bin_size_min"], [228, 2, 1, "", "evaluation_radius"], [228, 2, 1, "", "evaluation_region"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 3, 1, "", "from_position"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integrate_geom"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "lat_0"], [228, 2, 1, "", "lon_0"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "phi"], [228, 2, 1, "", "phi_0"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "plot_grid"], [228, 3, 1, "", "plot_interactive"], [228, 3, 1, "", "plot_position_error"], [228, 2, 1, "", "position"], [228, 2, 1, "", "position_error"], [228, 2, 1, "", "position_lonlat"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "sigma"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 3, 1, "", "to_region"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "amplitude"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "energy_flux"], [229, 3, 1, "", "energy_flux_error"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_error"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 3, 1, "", "integral_error"], [229, 3, 1, "", "inverse"], [229, 3, 1, "", "inverse_all"], [229, 2, 1, "", "is_norm_spectral_model"], [229, 2, 1, "", "mean"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "pivot_energy"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "reassign"], [229, 3, 1, "", "reference_fluxes"], [229, 2, 1, "", "sigma"], [229, 3, 1, "", "spectral_index"], [229, 3, 1, "", "spectral_index_error"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference_time"], [230, 3, 1, "", "sample_time"], [230, 2, 1, "", "sigma"], [230, 2, 1, "", "t_ref"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "time_sum"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "e"], [231, 2, 1, "", "eta"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_geom"], [231, 2, 1, "", "evaluation_bin_size_min"], [231, 2, 1, "", "evaluation_radius"], [231, 2, 1, "", "evaluation_region"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 3, 1, "", "from_position"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integrate_geom"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "lat_0"], [231, 2, 1, "", "lon_0"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "phi"], [231, 2, 1, "", "phi_0"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "plot_grid"], [231, 3, 1, "", "plot_interactive"], [231, 3, 1, "", "plot_position_error"], [231, 2, 1, "", "position"], [231, 2, 1, "", "position_error"], [231, 2, 1, "", "position_lonlat"], [231, 2, 1, "", "r_0"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 3, 1, "", "to_region"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[232, 3, 1, "", "__call__"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 2, 1, "", "eta"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integral"], [232, 2, 1, "", "is_energy_dependent"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference_time"], [232, 3, 1, "", "sample_time"], [232, 2, 1, "", "t_decay"], [232, 2, 1, "", "t_ref"], [232, 2, 1, "", "t_rise"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "time_sum"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[233, 3, 1, "", "__call__"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 3, 1, "", "from_table"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 2, 1, "", "is_energy_dependent"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "read"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference_time"], [233, 3, 1, "", "sample_time"], [233, 2, 1, "", "t_ref"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "time_sum"], [233, 3, 1, "", "to_dict"], [233, 3, 1, "", "to_table"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"], [233, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "alpha"], [234, 2, 1, "", "beta"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 2, 1, "", "is_energy_dependent"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference_time"], [234, 3, 1, "", "sample_time"], [234, 2, 1, "", "t_ref"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "time_sum"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 2, 1, "", "beta"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_log10"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "norm"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[236, 3, 1, "", "__call__"], [236, 2, 1, "", "alpha"], [236, 2, 1, "", "amplitude"], [236, 2, 1, "", "beta"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "e_peak"], [236, 3, 1, "", "energy_flux"], [236, 3, 1, "", "energy_flux_error"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_error"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_log10"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 3, 1, "", "integral_error"], [236, 3, 1, "", "inverse"], [236, 3, 1, "", "inverse_all"], [236, 2, 1, "", "is_norm_spectral_model"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 2, 1, "", "pivot_energy"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference"], [236, 3, 1, "", "reference_fluxes"], [236, 3, 1, "", "spectral_index"], [236, 3, 1, "", "spectral_index_error"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "coefficients"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "energy_flux"], [238, 3, 1, "", "energy_flux_error"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_error"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 3, 1, "", "integral_error"], [238, 3, 1, "", "inverse"], [238, 3, 1, "", "inverse_all"], [238, 2, 1, "", "is_norm_spectral_model"], [238, 2, 1, "", "norm"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 2, 1, "", "pivot_energy"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "reference_fluxes"], [238, 3, 1, "", "spectral_index"], [238, 3, 1, "", "spectral_index_error"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[239, 3, 1, "", "create"], [239, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 3, 1, "", "reassign"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[241, 3, 1, "", "append"], [241, 3, 1, "", "clear"], [241, 3, 1, "", "copy"], [241, 3, 1, "", "count"], [241, 2, 1, "", "covariance"], [241, 3, 1, "", "extend"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_yaml"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "index"], [241, 3, 1, "", "insert"], [241, 2, 1, "", "names"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "plot_positions"], [241, 3, 1, "", "plot_regions"], [241, 3, 1, "", "pop"], [241, 2, 1, "", "positions"], [241, 3, 1, "", "read"], [241, 3, 1, "", "read_covariance"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "remove"], [241, 3, 1, "", "restore_status"], [241, 3, 1, "", "reverse"], [241, 3, 1, "", "select"], [241, 3, 1, "", "select_from_geom"], [241, 3, 1, "", "select_mask"], [241, 3, 1, "", "select_region"], [241, 3, 1, "", "selection_mask"], [241, 3, 1, "", "set_parameters_bounds"], [241, 3, 1, "", "set_prior"], [241, 3, 1, "", "to_dict"], [241, 3, 1, "", "to_parameters_table"], [241, 3, 1, "", "to_regions"], [241, 3, 1, "", "to_template_sky_model"], [241, 3, 1, "", "to_template_spectral_model"], [241, 3, 1, "", "to_yaml"], [241, 3, 1, "", "unfreeze"], [241, 3, 1, "", "update_link_label"], [241, 3, 1, "", "update_parameters_from_table"], [241, 2, 1, "", "wcs_geom"], [241, 3, 1, "", "write"], [241, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "energy_flux"], [242, 3, 1, "", "energy_flux_error"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_error"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 2, 1, "", "include_ssc"], [242, 3, 1, "", "integral"], [242, 3, 1, "", "integral_error"], [242, 3, 1, "", "inverse"], [242, 3, 1, "", "inverse_all"], [242, 2, 1, "", "is_norm_spectral_model"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "particle_distribution"], [242, 2, 1, "", "pivot_energy"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "reassign"], [242, 3, 1, "", "reference_fluxes"], [242, 3, 1, "", "spectral_index"], [242, 3, 1, "", "spectral_index_error"], [242, 2, 1, "", "ssc_model"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "coords"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_geom"], [243, 2, 1, "", "evaluation_bin_size_min"], [243, 2, 1, "", "evaluation_radius"], [243, 2, 1, "", "evaluation_region"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 3, 1, "", "from_position"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integrate_geom"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "norms"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "phi_0"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "plot_grid"], [243, 3, 1, "", "plot_interactive"], [243, 3, 1, "", "plot_position_error"], [243, 2, 1, "", "position"], [243, 2, 1, "", "position_error"], [243, 2, 1, "", "position_lonlat"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 2, 1, "", "energy"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "norms"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[245, 3, 1, "", "__call__"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "evaluate_geom"], [245, 2, 1, "", "evaluation_bin_size_min"], [245, 2, 1, "", "evaluation_radius"], [245, 2, 1, "", "evaluation_region"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 3, 1, "", "from_position"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integrate_geom"], [245, 2, 1, "", "is_energy_dependent"], [245, 2, 1, "", "lat_0"], [245, 2, 1, "", "lon_0"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "phi_0"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_interactive"], [245, 3, 1, "", "plot_position_error"], [245, 2, 1, "", "position"], [245, 2, 1, "", "position_error"], [245, 2, 1, "", "position_lonlat"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 3, 1, "", "to_region"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[246, 3, 1, "", "__call__"], [246, 2, 1, "", "amplitude"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 2, 1, "", "emax"], [246, 2, 1, "", "emin"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "evaluate_integral"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 2, 1, "", "index"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[247, 3, 1, "", "__call__"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_energy_flux"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "evaluate_integral"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "norm"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 2, 1, "", "tilt"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "amplitude"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "energy_flux"], [248, 3, 1, "", "energy_flux_error"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_energy_flux"], [248, 3, 1, "", "evaluate_error"], [248, 3, 1, "", "evaluate_integral"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 2, 1, "", "index"], [248, 3, 1, "", "integral"], [248, 3, 1, "", "integral_error"], [248, 3, 1, "", "inverse"], [248, 3, 1, "", "inverse_all"], [248, 2, 1, "", "is_norm_spectral_model"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "pivot_energy"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "reference"], [248, 3, 1, "", "reference_fluxes"], [248, 3, 1, "", "spectral_index"], [248, 3, 1, "", "spectral_index_error"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[249, 3, 1, "", "__call__"], [249, 2, 1, "", "alpha"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 3, 1, "", "integral"], [249, 2, 1, "", "is_energy_dependent"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "reference_time"], [249, 3, 1, "", "sample_time"], [249, 2, 1, "", "t0"], [249, 2, 1, "", "t_ref"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "time_sum"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[250, 3, 1, "", "__call__"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"], [250, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_error"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "norm"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 2, 1, "", "eta"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_geom"], [254, 2, 1, "", "evaluation_bin_size_min"], [254, 2, 1, "", "evaluation_radius"], [254, 2, 1, "", "evaluation_region"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 3, 1, "", "from_position"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integrate_geom"], [254, 2, 1, "", "is_energy_dependent"], [254, 2, 1, "", "lat_0"], [254, 2, 1, "", "lon_0"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "phi_0"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "plot_grid"], [254, 3, 1, "", "plot_interactive"], [254, 3, 1, "", "plot_position_error"], [254, 2, 1, "", "position"], [254, 2, 1, "", "position_error"], [254, 2, 1, "", "position_lonlat"], [254, 2, 1, "", "r_0"], [254, 2, 1, "", "r_in"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 3, 1, "", "to_region"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "lat_0"], [255, 2, 1, "", "lon_0"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 2, 1, "", "radius"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 3, 1, "", "to_region"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"], [255, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "amp"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integral"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "omega"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "reference_time"], [256, 3, 1, "", "sample_time"], [256, 2, 1, "", "t_ref"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "time_sum"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "contributes"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 3, 1, "", "create"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_geom"], [257, 2, 1, "", "evaluation_bin_size_min"], [257, 2, 1, "", "evaluation_radius"], [257, 2, 1, "", "evaluation_region"], [257, 2, 1, "", "frame"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integrate_geom"], [257, 2, 1, "", "name"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "position"], [257, 2, 1, "", "position_lonlat"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "spatial_model"], [257, 2, 1, "", "spectral_model"], [257, 2, 1, "", "tag"], [257, 2, 1, "", "temporal_model"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "amplitude"], [258, 2, 1, "", "beta"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 2, 1, "", "ebreak"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "index1"], [258, 2, 1, "", "index2"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "reference"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate_geom"], [259, 2, 1, "", "evaluation_bin_size_min"], [259, 2, 1, "", "evaluation_radius"], [259, 2, 1, "", "evaluation_region"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 3, 1, "", "from_position"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integrate_geom"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "phi_0"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_interactive"], [259, 3, 1, "", "plot_position_error"], [259, 2, 1, "", "position"], [259, 2, 1, "", "position_error"], [259, 2, 1, "", "position_lonlat"], [259, 3, 1, "", "reassign"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate_error"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "amplitude"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 2, 1, "", "ecut"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_error"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 2, 1, "", "index_1"], [261, 2, 1, "", "index_2"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[262, 3, 1, "", "__call__"], [262, 2, 1, "", "amplitude"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "energy_flux"], [262, 3, 1, "", "energy_flux_error"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_error"], [262, 2, 1, "", "expfactor"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 2, 1, "", "index_1"], [262, 2, 1, "", "index_2"], [262, 3, 1, "", "integral"], [262, 3, 1, "", "integral_error"], [262, 3, 1, "", "inverse"], [262, 3, 1, "", "inverse_all"], [262, 2, 1, "", "is_norm_spectral_model"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 2, 1, "", "pivot_energy"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_error"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference"], [262, 3, 1, "", "reference_fluxes"], [262, 3, 1, "", "spectral_index"], [262, 3, 1, "", "spectral_index_error"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[263, 3, 1, "", "__call__"], [263, 2, 1, "", "amplitude"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "energy_flux"], [263, 3, 1, "", "energy_flux_error"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_error"], [263, 2, 1, "", "expfactor"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 2, 1, "", "index_1"], [263, 2, 1, "", "index_2"], [263, 3, 1, "", "integral"], [263, 3, 1, "", "integral_error"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "inverse_all"], [263, 2, 1, "", "is_norm_spectral_model"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "pivot_energy"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "reference"], [263, 3, 1, "", "reference_fluxes"], [263, 3, 1, "", "spectral_index"], [263, 3, 1, "", "spectral_index_error"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_geom"], [265, 2, 1, "", "evaluation_bin_size_min"], [265, 2, 1, "", "evaluation_radius"], [265, 2, 1, "", "evaluation_region"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 3, 1, "", "from_position"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integrate_geom"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "map"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "phi_0"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "plot_grid"], [265, 3, 1, "", "plot_interactive"], [265, 3, 1, "", "plot_position_error"], [265, 2, 1, "", "position"], [265, 2, 1, "", "position_error"], [265, 2, 1, "", "position_lonlat"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"], [265, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "energy_flux"], [266, 3, 1, "", "energy_flux_error"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_error"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 3, 1, "", "integral_error"], [266, 3, 1, "", "inverse"], [266, 3, 1, "", "inverse_all"], [266, 2, 1, "", "is_norm_spectral_model"], [266, 2, 1, "", "map"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "pivot_energy"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "reassign"], [266, 3, 1, "", "reference_fluxes"], [266, 3, 1, "", "spectral_index"], [266, 3, 1, "", "spectral_index_error"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"], [266, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 3, 1, "", "cutout"], [267, 2, 1, "", "default_parameters"], [267, 2, 1, "", "energy_center"], [267, 3, 1, "", "evaluate"], [267, 2, 1, "", "evaluation_radius"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 2, 1, "", "map"], [267, 2, 1, "", "name"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "position"], [267, 3, 1, "", "reassign"], [267, 3, 1, "", "slice_by_energy"], [267, 2, 1, "", "spectral_model"], [267, 3, 1, "", "stack"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"], [267, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[268, 3, 1, "", "__call__"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "evaluate"], [268, 2, 1, "", "f0"], [268, 2, 1, "", "f1"], [268, 2, 1, "", "f2"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integral"], [268, 2, 1, "", "is_energy_dependent"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "phi_ref"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_phasogram"], [268, 3, 1, "", "read"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference_time"], [268, 3, 1, "", "sample_time"], [268, 2, 1, "", "t_ref"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "time_sum"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"], [268, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "evaluate_geom"], [269, 2, 1, "", "evaluation_bin_size_min"], [269, 2, 1, "", "evaluation_radius"], [269, 2, 1, "", "evaluation_region"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 3, 1, "", "from_position"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integrate_geom"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "lat_0"], [269, 2, 1, "", "lon_0"], [269, 2, 1, "", "map"], [269, 2, 1, "", "map_center"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "phi_0"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "plot_grid"], [269, 3, 1, "", "plot_interactive"], [269, 3, 1, "", "plot_position_error"], [269, 2, 1, "", "position"], [269, 2, 1, "", "position_error"], [269, 2, 1, "", "position_lonlat"], [269, 3, 1, "", "read"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "tag"], [269, 3, 1, "", "to_dict"], [269, 3, 1, "", "to_region"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"], [269, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 3, 1, "", "from_region_map"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "read_xspec_model"], [270, 3, 1, "", "reassign"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[271, 3, 1, "", "__call__"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 3, 1, "", "integral"], [271, 2, 1, "", "is_energy_dependent"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "reassign"], [271, 2, 1, "", "reference_time"], [271, 3, 1, "", "sample_time"], [271, 3, 1, "", "time_sum"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[278, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[281, 1, 1, "", "CashCountsStatistic"], [282, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [283, 1, 1, "", "WStatCountsStatistic"], [284, 4, 1, "", "cash"], [285, 4, 1, "", "cash_sum_cython"], [286, 4, 1, "", "compute_chisq"], [287, 4, 1, "", "compute_flux_doubling"], [288, 4, 1, "", "compute_fpp"], [289, 4, 1, "", "compute_fvar"], [290, 4, 1, "", "cstat"], [291, 4, 1, "", "f_cash_root_cython"], [292, 4, 1, "", "get_wstat_gof_terms"], [293, 4, 1, "", "get_wstat_mu_bkg"], [294, 4, 1, "", "norm_bounds_cython"], [295, 4, 1, "", "structure_function"], [296, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[281, 3, 1, "", "compute_errn"], [281, 3, 1, "", "compute_errp"], [281, 3, 1, "", "compute_upper_limit"], [281, 2, 1, "", "error"], [281, 3, 1, "", "info_dict"], [281, 2, 1, "", "n_bkg"], [281, 2, 1, "", "n_sig"], [281, 3, 1, "", "n_sig_matching_significance"], [281, 2, 1, "", "p_value"], [281, 2, 1, "", "sqrt_ts"], [281, 2, 1, "", "stat_max"], [281, 2, 1, "", "stat_null"], [281, 3, 1, "", "sum"], [281, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[283, 3, 1, "", "compute_errn"], [283, 3, 1, "", "compute_errp"], [283, 3, 1, "", "compute_upper_limit"], [283, 2, 1, "", "error"], [283, 3, 1, "", "info_dict"], [283, 2, 1, "", "n_bkg"], [283, 2, 1, "", "n_sig"], [283, 3, 1, "", "n_sig_matching_significance"], [283, 2, 1, "", "p_value"], [283, 2, 1, "", "sqrt_ts"], [283, 2, 1, "", "stat_max"], [283, 2, 1, "", "stat_null"], [283, 3, 1, "", "sum"], [283, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[297, 4, 1, "", "hierarchical_clustering"], [298, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[299, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [300, 4, 1, "", "cartesian"], [301, 4, 1, "", "fov_to_sky"], [302, 4, 1, "", "galactic"], [303, 4, 1, "", "motion_since_birth"], [304, 4, 1, "", "polar"], [305, 4, 1, "", "sky_to_fov"], [306, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[307, 1, 1, "", "HDULocation"], [308, 1, 1, "", "LazyFitsData"], [309, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[307, 3, 1, "", "get_hdu"], [307, 3, 1, "", "info"], [307, 3, 1, "", "load"], [307, 3, 1, "", "path"]], "gammapy.utils.integrate": [[310, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[311, 1, 1, "", "ScaledRegularGridInterpolator"], [312, 4, 1, "", "interpolate_profile"], [313, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[311, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[314, 5, 1, "", "BACKEND_DEFAULT"], [315, 5, 1, "", "METHOD_DEFAULT"], [316, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [317, 5, 1, "", "N_JOBS_DEFAULT"], [318, 5, 1, "", "POOL_KWARGS_DEFAULT"], [319, 1, 1, "", "multiprocessing_manager"], [320, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[321, 1, 1, "", "InverseCDFSampler"], [322, 4, 1, "", "draw"], [323, 4, 1, "", "get_random_state"], [324, 4, 1, "", "normalize"], [325, 4, 1, "", "pdf"], [326, 4, 1, "", "sample_powerlaw"], [327, 4, 1, "", "sample_sphere"], [328, 4, 1, "", "sample_sphere_distance"], [329, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[321, 3, 1, "", "sample"], [321, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[330, 4, 1, "", "compound_region_to_regions"], [331, 4, 1, "", "make_concentric_annulus_sky_regions"], [332, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [333, 4, 1, "", "region_to_frame"], [334, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[335, 4, 1, "", "from_yaml"], [336, 4, 1, "", "get_images_paths"], [337, 4, 1, "", "make_path"], [338, 4, 1, "", "read_yaml"], [339, 4, 1, "", "recursive_merge_dicts"], [340, 4, 1, "", "to_yaml"], [341, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[342, 4, 1, "", "hstack_columns"], [343, 4, 1, "", "table_row_to_dict"], [344, 4, 1, "", "table_standardise_units_copy"], [345, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[346, 1, 1, "", "Checker"], [347, 4, 1, "", "assert_quantity_allclose"], [348, 4, 1, "", "assert_skycoord_allclose"], [349, 4, 1, "", "assert_time_allclose"], [350, 4, 1, "", "mpl_plot_check"], [351, 4, 1, "", "requires_data"], [352, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[346, 3, 1, "", "run"]], "gammapy.utils.time": [[353, 4, 1, "", "absolute_time"], [354, 4, 1, "", "time_ref_from_dict"], [355, 4, 1, "", "time_ref_to_dict"], [356, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[357, 4, 1, "", "standardise_unit"], [358, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[359, 1, 1, "", "MapPanelPlotter"], [360, 4, 1, "", "add_colorbar"], [361, 4, 1, "", "annotate_heatmap"], [362, 4, 1, "", "colormap_hess"], [363, 4, 1, "", "colormap_milagro"], [364, 4, 1, "", "plot_contour_line"], [365, 4, 1, "", "plot_distribution"], [366, 4, 1, "", "plot_heatmap"], [367, 4, 1, "", "plot_map_rgb"], [368, 4, 1, "", "plot_npred_signal"], [369, 4, 1, "", "plot_spectrum_datasets_off_regions"], [370, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[359, 3, 1, "", "plot"], [359, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 123, 124, 129, 132, 137, 138, 142, 143, 144, 148, 168, 195, 201, 213, 217, 218, 223, 225, 226, 229, 230, 232, 233, 234, 236, 239, 241, 242, 246, 248, 249, 256, 257, 258, 261, 262, 263, 268, 271, 272, 273, 279, 289, 307, 357, 361, 362, 369, 372, 373, 375, 377, 382, 383, 384, 386, 388, 389, 390, 391, 392, 395, 398, 401, 402, 404, 405, 407, 408, 409, 410, 438, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 486, 487, 489, 492, 493, 499, 500, 501, 502, 504, 505, 507, 512, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 568, 569, 571], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 129, 131, 132, 137, 138, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 165, 168, 171, 172, 176, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 277, 279, 281, 282, 283, 284, 287, 288, 289, 290, 297, 298, 317, 321, 328, 329, 349, 360, 362, 363, 367, 369, 372, 373, 375, 376, 379, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 405, 408, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 499, 501, 505, 509, 511, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567, 568, 569, 570], "00": [67, 87, 88, 89, 91, 101, 192, 373, 387, 440, 441, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 458, 459, 461, 462, 465, 466, 468, 470, 471, 472, 473, 474, 475, 477, 478, 481, 482, 483, 484, 486, 488, 490, 491, 492, 493, 494, 522, 532, 537, 538, 539, 552, 553, 563, 571], "000": [67, 87, 88, 91, 124, 387, 442, 444, 446, 447, 449, 454, 455, 456, 458, 459, 462, 465, 466, 470, 471, 475, 477, 478, 483, 490, 491, 493, 522], "0000": 398, "000000": 470, "000000000000002": 475, "00000000000001": 449, "00000000000003": 467, "00000000000004": 470, "0000000000016": 86, "0000000000018": 94, "000000000002": 458, "000000000006": 458, "000000000007": 470, "00000000001": 470, "00000000e": [472, 473], "00000001": 86, "0000000e": 473, "00000143": [373, 571], "0000e": [101, 442, 443, 446, 447, 448, 449, 451, 454, 462, 466, 472, 478, 492, 552], "0001": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 363, 456], "00010298": 471, "000150": 444, "0002": [444, 493], "00020": 444, "0002000": 444, "0003": 456, "0004": 101, "00050": 444, "000500": 444, "0006": 444, "0006e": 462, "00074287037": [94, 459], "000742870370370241": 94, "0008": 470, "0009": 444, "000e": [442, 446, 449, 455, 462, 466, 470, 478, 493, 552], "000true": 444, "001": [50, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 188, 189, 191, 197, 200, 201, 349, 458, 462, 472, 530], "0016288e": 473, "001e": 67, "002018": 483, "0025508e": 473, "0028272e": 473, "0029": 397, "0029202684427718766": 491, "002e": [67, 447], "003": [467, 477, 483], "003026327991562108": 455, "0031052863692021915": 491, "0033": 569, "0036925550381217": 449, "00375698": 233, "004": 67, "00422666667": 463, "00449161": 238, "00490": 456, "00490483": 456, "0049409": 482, "005": 470, "00521472221220211": 455, "005838": 478, "005909017160171437": 457, "0064830e": 473, "00688029": 233, "007": 470, "0076540e": 473, "008": [470, 568], "008166963876141447": 457, "008891944789387447": 457, "00894": 493, "009": 470, "00931e": 441, "009433226692021113": 457, "00e": [83, 441, 447, 458, 462, 466, 467, 471, 473, 474, 483, 491], "01": [39, 52, 75, 83, 87, 88, 91, 94, 102, 105, 109, 110, 112, 126, 132, 171, 172, 176, 186, 187, 192, 196, 199, 220, 226, 230, 232, 234, 249, 256, 373, 408, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 454, 455, 458, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 484, 485, 491, 492, 493, 494, 499, 504, 514, 516, 517, 520, 524, 526, 528, 540, 541, 542, 550, 551, 553, 555, 556, 557, 563, 568, 571], "010": 477, "010e": 67, "011": 477, "011872336272724": 491, "012": 477, "0122385e": 473, "01235137e": 473, "012733796525585": 479, "0133e": 466, "0139252e": 473, "014": [85, 102, 105, 109, 110, 168, 447, 454, 470, 474, 491, 492, 516], "0142e": 462, "0143724": 233, "0143764": 482, "01449": 83, "0145": 476, "01450": [464, 492], "0149044e": 473, "015": 470, "01551196351647377": 233, "0163": 456, "01648855015875024": 567, "01700709977114979": 463, "017442925431194484": 463, "018": 67, "018182745349064267": 455, "0183519e": 473, "019": 494, "01960784313726": 460, "019899368286133": 455, "01e": [168, 408, 441, 462, 470], "01t00": [87, 91, 94, 192, 373, 450, 458, 571], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 102, 105, 109, 110, 111, 115, 156, 163, 168, 186, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 408, 440, 441, 442, 444, 446, 447, 451, 452, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 477, 478, 481, 483, 488, 491, 492, 493, 514, 516, 517, 524, 525, 526, 532, 543, 544], "020": [455, 470], "020420144596410953": 479, "021": [67, 440, 458, 461, 470], "0225e": 470, "022699": 549, "02288737": 233, "023": 470, "023472814714293713": 491, "024": 470, "02432": 470, "024715584699834": 491, "024e": 493, "025": [470, 483], "0251191207999763": 456, "025e": 138, "026": [53, 67, 470], "02653": [450, 456], "026891": 470, "026914": 470, "027": 67, "028399": 524, "028854": 476, "029e": [442, 470], "02e": 83, "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 198, 385, 400, 440, 441, 442, 444, 454, 455, 456, 458, 461, 462, 466, 470, 473, 475, 477, 479, 480, 481, 485, 486, 492, 527, 545, 546], "032": 470, "0322": 67, "0322775e": 473, "033": [67, 470], "033176650892097": 96, "03383": 482, "034": 568, "0344": 67, "034e": 444, "0354700e": 473, "0356": 441, "0356551": 441, "036": 67, "036e": 470, "037": 477, "03745318352059925": 561, "0375512e": 473, "0376213e": 473, "038332": 552, "039": [454, 455], "039215686274545": 460, "03921700077803329": 455, "0395135e": 473, "03978226e": 478, "04": [30, 67, 94, 440, 445, 447, 449, 450, 452, 455, 458, 466, 467, 470, 473, 475, 478, 482, 483, 547, 548], "040": 446, "040e": 450, "041": 483, "0414": 450, "0415": 493, "041882": 470, "042": 470, "0423761": 441, "0428e": 462, "042e": 470, "043": 67, "04357249662280083": 446, "04454": 483, "0454683": 482, "046": 67, "0462798e": 473, "047": 67, "0473174": 238, "0474750e": 473, "048": [454, 483], "0482342e": 473, "04897634344908595": 96, "048e": 67, "049": [444, 454], "04939e": 441, "049676": 470, "04d": 458, "04e": 474, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 121, 122, 124, 131, 199, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 331, 400, 440, 441, 442, 443, 444, 445, 446, 450, 453, 454, 455, 456, 459, 462, 465, 469, 470, 471, 472, 473, 474, 477, 480, 482, 484, 486, 491, 492, 519, 524, 549, 550, 551], "050": 477, "05019": 138, "0503641": 441, "0505949e": 473, "05075": 473, "0508075688763": 470, "05088486522436142": 446, "050e": 450, "051": [19, 20, 26, 477], "051c": [17, 21, 22, 24, 25, 27], "052": 470, "0520119e": 473, "0521419985089": 457, "05227": 470, "053": 454, "053212009682775": 479, "054833602905273e": 455, "0548e": 455, "054e": 67, "055": 470, "055e": 444, "0560": 493, "056130": 470, "05628243": 493, "05637e": 441, "05673": 493, "057": 470, "05762513693893088": 455, "058": 67, "058201": 470, "05853": 450, "058823529411775": 460, "059": [67, 440, 471, 481], "05901956e": 473, "0598579": 441, "05deg": 199, "06": [142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 199, 200, 201, 440, 447, 454, 455, 456, 461, 466, 468, 470, 471, 472, 473, 474, 475, 481, 483, 486, 552, 553, 554], "061": 493, "061e": 466, "062": [458, 477, 478, 483], "0625": 478, "0628": 493, "063": 67, "0631757e": 473, "06334488877417636": 479, "064108e": 470, "06430": 456, "0643032": 456, "06450": 138, "065071": 470, "065119": 493, "06549": 138, "066": 446, "066442": 470, "067": 450, "068245": 470, "0689": 472, "068e": 444, "069": 67, "07": [102, 168, 347, 387, 408, 440, 444, 445, 447, 454, 456, 465, 467, 468, 470, 471, 473, 475, 477, 478, 483, 486, 494, 555, 556, 557, 558], "07022": 138, "070483": 470, "0711412": 441, "072": 67, "073": [67, 440, 474, 481], "0739282e": 473, "074": [470, 483], "07454639": 456, "07455": 456, "0746": 493, "0748": [470, 493], "075": 67, "07512322002655547": 455, "0756e": 441, "076": 493, "077": 441, "078": 444, "07843137254903": 460, "07871368968": 471, "07943648658692837": 479, "07944657408": 470, "079464e": 493, "0799109224230051": 479, "07e": 467, "08": [86, 367, 408, 440, 445, 448, 449, 451, 452, 454, 455, 462, 470, 471, 472, 474, 483, 491, 492, 533, 559, 560, 561, 562], "0800792e": 473, "08075": 473, "08081469527619482": 449, "08088": [174, 474], "080e": 450, "0811551760882139": 479, "08142": 469, "08191603310406206": 479, "08192": 456, "08192101": 456, "082": [440, 470, 481], "082691868487906": 463, "08269984": 493, "082e": 124, "083": [67, 470], "08328557573258877": 479, "0833333358168602": 446, "0833333432674408": 446, "08342": 138, "08388624433428049": 479, "084": 67, "08447355125099419": 479, "0845515": 441, "085": [440, 470, 553], "08529426": 97, "0855013383552432": 479, "08675": 471, "086e": 470, "087": 493, "08795162606984375": 479, "087e": 470, "088742": 470, "08880368117243051": 479, "08894569035619496": 479, "089": 133, "0894640e": 473, "0897868126630783": 479, "089881": 470, "08e": [462, 477], "09": [33, 104, 123, 124, 168, 440, 442, 447, 450, 451, 452, 454, 461, 470, 471, 473, 474, 478, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 569], "090": 532, "0902437e": 473, "0907128e": 473, "0910": [247, 248], "0914": [52, 53], "093477": 456, "09348": 456, "094": [453, 462], "09426693227142095": 479, "094834": 470, "095232": 470, "09562941": 493, "095707": 493, "096": 447, "0960": 493, "09607": 493, "09610314778983592": 479, "09623312838375568": 479, "09740295372903346": 479, "097e": 67, "09805": 138, "098903": 470, "09907043184188653": 479, "09e": 474, "0b100": 317, "0d": [126, 460, 471, 528], "0e": [395, 447, 449, 451, 455, 458, 462, 466, 471, 473, 475, 477, 478, 483, 491, 523, 524, 525, 526, 528, 529, 530, 531, 534, 535, 537, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "0f": [472, 483, 493], "0rc": 401, "0rc1": 401, "0true": 456, "0x105fd0cf8": 372, "0x105fe3b70": 372, "0x129602550": 372, "0x7f8d42d259d0": 479, "0x7f8d42d25d90": 479, "0x7f8d42d5be20": 479, "0x7f8d43e68310": 480, "0x7f8d49e70730": 482, "0x7f8d49fd1040": 471, "0x7f8d49fd12b0": 471, "0x7f8d49fd1e20": 471, "0x7f8d4a2aed30": 482, "0x7f8d4a42aa90": 482, "0x7f8d4a5076a0": 479, "0x7f8d4a860940": 471, "0x7f8d4aaa18e0": 460, "0x7f8d4aaa1dc0": 460, "0x7f8d4ab072e0": 482, "0x7f8d53819430": 463, "0x7f8d5382d910": 478, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 111, 114, 115, 116, 117, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 137, 138, 142, 143, 144, 145, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 163, 168, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 206, 209, 211, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 244, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 287, 288, 297, 298, 310, 311, 317, 318, 319, 328, 329, 331, 332, 357, 359, 362, 363, 367, 369, 372, 373, 375, 376, 379, 380, 382, 383, 384, 386, 387, 389, 392, 394, 395, 396, 397, 398, 399, 401, 402, 405, 408, 409, 412, 413, 415, 416, 420, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 488, 491, 492, 493, 495, 499, 500, 501, 504, 505, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 568, 569, 570], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 86, 87, 88, 89, 91, 101, 102, 103, 104, 105, 108, 109, 110, 111, 115, 117, 121, 122, 123, 124, 125, 126, 130, 131, 132, 137, 138, 139, 142, 143, 145, 147, 149, 155, 156, 157, 158, 159, 161, 168, 174, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 206, 209, 211, 220, 223, 235, 236, 238, 239, 261, 273, 282, 288, 317, 319, 329, 360, 365, 367, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 389, 394, 395, 396, 400, 402, 408, 413, 415, 426, 428, 431, 435, 437, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 491, 492, 493, 495, 501, 505, 511, 514, 516, 517, 518, 519, 529, 530, 533, 535, 538, 539, 541, 542, 543, 544, 546, 547, 549, 550, 551, 555, 556, 557, 567, 568, 571], "100": [19, 20, 26, 46, 47, 74, 94, 124, 132, 147, 148, 158, 199, 201, 213, 214, 217, 218, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 268, 270, 271, 273, 275, 329, 372, 373, 375, 380, 391, 411, 441, 443, 446, 449, 454, 455, 456, 458, 459, 460, 462, 463, 467, 469, 470, 471, 473, 474, 475, 478, 480, 482, 483, 484, 493, 497, 499, 500, 501, 505, 516, 519, 520, 523, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 568], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 189, 194, 372, 375, 444, 470, 471, 473, 480, 483, 493, 519], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 103, 108, 147, 158, 161, 171, 470, 483], "100000": [74, 470, 491], "1000000": [51, 52, 54, 470, 552], "10000000": 552, "1001": [430, 458, 459], "1002": 430, "10041": 137, "10045": [65, 263, 551], "10049": 441, "1006": 430, "101": [416, 467, 470], "1012": 469, "1013": 431, "1014": 431, "101430": 467, "10172": 478, "102": [168, 447, 450, 568, 569], "1021": 431, "102331": 555, "1025": 431, "1026": 431, "10262943822890519": [96, 479], "1027": 431, "102877228833871": 479, "1029": 431, "10295505": 493, "102e": 470, "103": [137, 411, 434], "103000133": 484, "1031": 431, "1032": 431, "1032531953505502": 491, "1034": 493, "1035": 431, "1035002116788955": 447, "1036": 450, "1038": 431, "104": 456, "1040": 431, "10409": 456, "10409446": 456, "1043": 431, "104317": [102, 471, 477], "1044": 450, "1045": 431, "1046": 390, "10470702368766069": 479, "10477": 493, "105": [82, 485], "1051": 431, "1052": 470, "1053": 431, "1054": 431, "1054498": 133, "1057": 431, "10592": 571, "105953": 493, "105e": 450, "1061971e": 473, "106217": 83, "1062535e": 473, "1064": 470, "1065": 431, "1067": 431, "1068": 466, "1069": 431, "107": [441, 475], "1070": [431, 493], "1072542e": 473, "1073": 431, "10752883769757363": 479, "1076": 431, "1078": 431, "107e": [450, 470], "108": 428, "108034597491956e": 478, "108043": 454, "1082": 431, "1083": 431, "1084": 431, "1085": 431, "1085000": 454, "1086": 288, "1087": 431, "1088": [101, 431], "1089": 431, "109": [411, 440, 442, 475, 563], "1090": 431, "1092": [431, 450], "1093": [431, 450], "1098": 431, "1099306e": 473, "109e": 456, "10d": 460, "10e": [168, 470, 473], "10k": 189, "10th": [399, 410], "11": [67, 87, 91, 94, 124, 125, 129, 130, 209, 331, 376, 379, 381, 389, 396, 400, 411, 412, 433, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 456, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 472, 474, 476, 477, 480, 481, 483, 491, 492, 493, 516, 518, 569], "110": [470, 483], "1100": [431, 446], "110000": [471, 474], "1102": 431, "1102e": 443, "1103": 431, "110380": [83, 388, 451, 454, 456, 482], "1104": 431, "1105": 431, "1107": 431, "1108": 431, "111": [360, 379, 431, 454, 470], "1110": 431, "1111": [139, 470, 493], "111140": [388, 451, 454, 456], "111159": [388, 451, 454, 456, 482], "11132": 64, "1115": 431, "111507416": 467, "111630": [89, 467, 482], "111797": 470, "11184": [65, 262, 550], "112": [440, 441, 446, 563], "11208": 65, "1127": 431, "11291820875721864": 479, "113": [440, 493, 563], "1131": 380, "1133": 431, "1134": 431, "1136": 431, "114": 449, "114416978060046": 466, "115": [67, 440, 563], "1150": 431, "11517": 493, "11553325504064559": [96, 479], "11587179071752986": 96, "116": [411, 442, 443], "1160": 470, "11610": 493, "1162": 431, "1162290917256776e": 464, "1166": 431, "1167": [379, 386], "1169": 431, "116e": 67, "117": [411, 533], "1170": 431, "1172": 386, "1173775": 470, "1176": 431, "117877e": 470, "1179": 431, "118": [137, 454], "1183": 431, "118355": 470, "119": [442, 450, 454], "1190": 431, "119432": 441, "1195": 431, "119e": 446, "11af4c": 411, "11e": [452, 470], "12": [17, 38, 42, 67, 86, 87, 91, 102, 105, 112, 124, 138, 158, 161, 187, 188, 189, 191, 197, 200, 201, 213, 217, 223, 225, 229, 236, 246, 248, 258, 261, 262, 263, 273, 376, 378, 379, 380, 381, 383, 384, 389, 392, 395, 411, 415, 416, 417, 429, 434, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 463, 464, 465, 466, 470, 471, 472, 475, 477, 478, 480, 481, 483, 491, 493, 505, 516, 519, 520, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 537, 540, 541, 544, 545, 546, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562], "120": [53, 387, 448, 466, 483, 527], "120000": 451, "120154": 470, "1204": 431, "1207": 431, "120e": [67, 493], "121": [67, 456, 477], "1210": 431, "1211": [431, 470], "121241": 454, "12148": 450, "1215": 431, "1216": 443, "12186": 493, "1219": 470, "122": [67, 137, 411, 444, 477], "1220": 431, "1226": 431, "1227": 431, "12276676166802643": 479, "122e": 455, "123": [87, 91, 384, 450], "1231": 432, "1234": 88, "123456789": [192, 373, 571], "1235": 431, "1237": 380, "1238": 431, "123890826": 86, "123892513": 86, "1239": 377, "123944": 83, "123e": 450, "124": [137, 384, 440, 450, 460, 461, 470, 477], "1240": 431, "12423250e": 473, "1243": 493, "1244969200533408": 298, "1246": 431, "12493874": 473, "124e": 67, "125": [67, 124, 137, 446, 456, 475, 483, 493, 568], "12518": 455, "12525306": 463, "12546": 65, "126": [67, 444, 470, 472], "12611": 138, "1264500e": 473, "126585": 441, "1266": 431, "1268": 431, "12688": 83, "1269263e": 473, "12697": 455, "127": [440, 450, 563], "12704": [137, 138], "1271v": 289, "12751": 441, "1277": 378, "1278": 379, "12794487": 478, "128": [411, 440, 467, 495, 563], "12809": [102, 471, 477], "1281": 431, "12816": 493, "12856": 483, "1287": 431, "1289": 431, "128e": 444, "129": [437, 492], "1290": 431, "1291": 431, "1294": 431, "1299": 470, "12nan5": 444, "12r_": 53, "12th": [397, 410], "13": [67, 101, 124, 138, 198, 297, 376, 377, 381, 386, 391, 400, 416, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 491, 492, 493, 501, 569], "130": 516, "1300": 431, "1301v": 38, "13030": 493, "1305": 431, "13061": 478, "131": 444, "1310": 493, "1312": 431, "13133": 493, "13152": 456, "1316": 431, "1317": 432, "1318": 431, "1319": [94, 431], "13197": 454, "132": 450, "13226": 493, "1323e": 455, "132472": 456, "132e": 446, "133": 138, "1331": 432, "1334": 432, "1337": 432, "1339": 432, "133e": 444, "134": [138, 447, 450, 456], "1341": 432, "1342a": 148, "1343": 432, "1344": 470, "1345": 432, "1346": 432, "1347": 432, "13499879586502125": 457, "135": [38, 101, 138, 444, 470, 472], "13500212963": 470, "1351e": 470, "1354": 432, "135498046875": 446, "1357": 432, "1359316": 493, "135e": 124, "136": 470, "1360": 432, "1361": 470, "1362": 432, "1367": 432, "1369": [380, 432], "137": [450, 457], "1372": 432, "137254901960785": 460, "1373": 432, "1374": 432, "137521287529426e": 491, "1376": 432, "1376407570489014e": 464, "1377": 432, "1378": 432, "1379190199428797": 298, "137990": 470, "138": [411, 444, 458, 493], "1381": 432, "1386": 432, "1387": 432, "138e": 456, "139": [446, 450, 483], "13911": 493, "1395": 432, "1396": [372, 447], "13960": 493, "1397": 432, "1397412321592923": 479, "13e": 471, "13nan6": 444, "13th": 410, "14": [28, 65, 67, 86, 373, 376, 381, 384, 389, 391, 392, 430, 441, 444, 446, 447, 449, 450, 454, 467, 470, 471, 472, 476, 477, 478, 492, 493, 568], "140": 484, "1401": 432, "1402": 539, "1406": 432, "14079": 137, "1408": [432, 493], "141": [296, 456, 470], "1411180": 454, "1412": 432, "14121": 456, "1412536400000000": 493, "14149953611195087": [96, 479], "14150": 456, "1419": [380, 433], "141945": 441, "142": [67, 411, 444, 470, 493], "14201": 137, "1421": 432, "14210": 444, "1426": 432, "142e": 470, "1432": 432, "1433": 432, "1435": 432, "1438": 171, "1438465e": 473, "1439110308062257": 479, "144": [444, 477, 493], "14419991": 97, "1442739329466746e": 478, "1443": 432, "1444": 432, "1445": 386, "14457": 493, "1446": 432, "1447": 432, "145": 470, "1451": 387, "14531053887243": 456, "1456": 432, "1456479e": 473, "146": [440, 461, 493, 532], "14610": 571, "146472": 470, "1467": 139, "146829": 559, "147": [430, 470, 475], "1470": [432, 466, 493], "1474": 432, "1475": 432, "1476": 432, "14773": 483, "147e": 470, "148": 450, "1482": 470, "1485314": 97, "1486415e": 473, "1489": [432, 456], "149": [446, 474, 477], "1492": 432, "1494": 456, "149445429667434": 457, "1495": 432, "1499472780781963": 298, "149e": 470, "14e": [451, 469], "14msts37sst": [458, 459], "14nan3": 444, "14nan5": 444, "14th": [396, 399, 410], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 145, 146, 147, 148, 149, 150, 155, 156, 157, 159, 198, 362, 363, 367, 381, 389, 411, 415, 420, 425, 428, 429, 430, 432, 440, 441, 446, 450, 452, 454, 455, 456, 458, 459, 460, 462, 463, 467, 470, 471, 472, 474, 475, 477, 478, 481, 483, 491, 493, 494, 516, 524], "150": [130, 137, 138, 411, 444, 446, 458, 459, 475, 493], "1505": 432, "15076259": 97, "151": [411, 477], "1510": 133, "1510240e": 473, "15140": 450, "1515": 432, "15154854": 97, "151574": 537, "1517": 432, "152": [450, 456], "1521": 456, "1523": 458, "15246": 458, "152477": 483, "1527": 432, "153": 470, "1530": 471, "15319": 458, "153600": 471, "154": [411, 441, 470], "1543": 432, "154e": 456, "155": 411, "15518": 493, "1552": 452, "1553": [470, 493], "1554": 432, "1554106e": 473, "1556": [432, 470, 493], "1556008e": 473, "1558": 432, "156": [411, 446, 447, 450, 456, 477], "1562": 432, "15621": 493, "1564": 432, "156525": 470, "1567629e": 473, "1568": 432, "15686274509804": 460, "157": [411, 493], "1573": 432, "1576": 432, "158": [138, 441, 447, 454], "1582": 432, "1586": 94, "15899": 450, "1594": 432, "1597317": 97, "159t": 52, "15h14m00": 470, "15nan8": 444, "16": [16, 24, 53, 67, 94, 109, 110, 187, 376, 380, 389, 392, 393, 416, 431, 436, 438, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 518, 560, 568, 569], "160": [31, 124, 411, 420, 460, 466, 477], "1600": 459, "1600e": 442, "1605": 432, "16056": 450, "1606": 432, "1607": 469, "160e": 67, "161": [137, 380, 446, 456, 470], "1610e": [442, 470], "161250": 462, "1613279491744304": 479, "1616": 432, "1618850e": 473, "1619e": 101, "162": [67, 440, 461], "16227766": 475, "1622776601683795": [474, 475, 491], "16240": 492, "1626e": 451, "16287": 493, "1629219e": 473, "163": [460, 568], "1630": [432, 493], "16303": 456, "16303044": 456, "1634": 432, "164": 470, "1642": 441, "165": 477, "1650": 493, "16506": 441, "16511": 456, "16511148": 456, "1658": 432, "165e": 450, "166": [411, 456, 470], "1660": 432, "166015625": 443, "1665478": 97, "167": [411, 456, 462], "167219": 470, "1675": 432, "168": [101, 470, 471, 493], "1681": 432, "1685": 432, "1686": 470, "1687": 86, "168702": 441, "169": 456, "1691": 441, "1695": 432, "1696": 432, "1697": 432, "1698": 446, "169871": 462, "16th": 410, "17": [20, 21, 40, 67, 86, 383, 386, 389, 420, 437, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 569], "170": 443, "17016482e": 472, "1702": 432, "17020": 450, "170655": 462, "1710": 433, "1711": 432, "1713": [443, 542], "1715": 386, "1717": 493, "171749": 493, "1719": 542, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 272, "172": 460, "17229679": 97, "173": 470, "1731": [432, 477], "1732": 470, "17320": 470, "173219": 540, "1736": 450, "1737799900000000": 493, "174": 446, "1742": 67, "17445": 493, "1746": [432, 493], "1748": [432, 477], "1750": 432, "1751": 432, "1753": 493, "1755": 432, "1756": 447, "1759": 432, "175e": 470, "176": [138, 411, 467, 470], "1760": 432, "1761": 432, "1762": 495, "1763": [433, 470], "1764": [432, 456], "176470588235294": 460, "1766": 433, "1768896e": 473, "177": [411, 483, 484], "17776": 441, "177e": 470, "178": 431, "178442": 67, "1785": [432, 441], "179": [440, 466, 532], "1791": 432, "179475": 238, "179723": 104, "1799": 432, "17a": [60, 470], "17e": 477, "17g": 50, "17th": 426, "17v_qhxg": 478, "18": [11, 87, 91, 137, 198, 376, 391, 397, 417, 423, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "180": [386, 404, 406, 411, 470, 475], "1800": [432, 459, 475, 482], "180000": [458, 459], "1804": 470, "180458": 454, "18046952655570045": 298, "1805": 386, "1807": 433, "1808": [432, 470, 493], "181": 450, "1811": 449, "1812": 432, "1813": 470, "1818": 432, "1821": 432, "1822": 432, "1825": 470, "18257": 450, "183": 446, "1830e": 446, "183139597": 86, "1834": 443, "1835": 94, "1836": 433, "1836544903987521": 479, "1837": 433, "18385658": 456, "18386": 456, "18392464": 507, "184": [86, 94, 425, 429, 450, 454, 458, 465, 476, 477], "18400002": 465, "1841": 381, "1845": 433, "1846": 433, "18465": 493, "1848": 466, "1849": 433, "184989894219835": 463, "185": 476, "1854": [433, 470], "1855": 433, "1857": 433, "1859": 433, "186": [424, 456, 470], "1861": 433, "1862": 433, "186484131475074": 329, "1866": 474, "186643": 493, "187": [417, 424, 440, 445, 456], "1871": 433, "1877": 382, "188": [424, 440, 441, 470, 532], "1883": 433, "1884": 433, "18842984749525210": 456, "1888": 433, "188e": 444, "189": [446, 466, 473], "1890": 433, "1891": 433, "18921591": 473, "1893": 433, "1893e": [442, 470], "1894": 433, "1895": 433, "1896e": 442, "1898": 433, "18988": 493, "1899070e": 473, "189962": 478, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 198, 376, 388, 390, 392, 411, 419, 420, 422, 434, 440, 447, 450, 460, 463, 467, 470, 471, 475, 477, 480, 481], "190": [440, 470, 480, 481], "1902": [65, 263, 551], "1903": 433, "1904": 433, "1905": 455, "1908": 433, "1909": 433, "190e": 446, "191": [137, 424, 440, 481], "1910": [174, 474], "1912": 433, "1917": 493, "1918": 433, "1919": 433, "1920": 493, "1921": 433, "19214093": 97, "1922": 433, "1926": 433, "1926520e": 473, "1927": 433, "1928": 470, "1929": 433, "192e": 466, "193": 450, "1930": 433, "1930e": 466, "1933": 433, "1934": 433, "1935": 466, "19354": 456, "1936925": 97, "1937": [433, 470], "193e": 447, "194": [424, 450], "1943186": 97, "1947565": 97, "1949": 433, "195": [233, 446], "1950rspsa": 52, "1951": 412, "1953830": 97, "1955810e": 473, "1958e": 472, "196": [67, 441, 477], "1960784313725492": 460, "1961": 139, "1962": 412, "1963": 470, "19644": 483, "1965tralm": 21, "1966": 412, "1969": 412, "196991563774588": 273, "197": [67, 456, 483], "1971": 383, "19736017641361556": 457, "1975": 412, "1976572e": 473, "1978": 470, "1979": [284, 290, 412, 566], "1979892": 456, "1980": 470, "1982": 37, "1983": 566, "1986": 384, "1986027": 493, "1987": 456, "19879005": 171, "1988": 412, "1989": 412, "199": [456, 477], "1990": [37, 412], "1990apj": [36, 37], "1991": 412, "1991mnra": 22, "19932878": 473, "1994": [412, 566], "1994a": [52, 53], "1995": [411, 412], "1995a": 282, "1995apj": 17, "1996": [27, 450, 463, 566], "1996mnra": 27, "1997": 491, "1997apj": 25, "1998": [87, 91, 412, 566], "1998apj": 28, "1999": [53, 192, 373, 571], "19991": 491, "199999809265137": 470, "19999999999999998": 449, "1999apj": 53, "19e": 474, "19th": 410, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 109, 110, 126, 146, 147, 156, 170, 187, 189, 324, 365, 378, 382, 383, 385, 386, 387, 388, 391, 392, 393, 404, 414, 416, 417, 418, 419, 423, 425, 428, 432, 434, 435, 438, 440, 441, 443, 444, 445, 446, 448, 450, 454, 461, 466, 471, 472, 474, 476, 478, 479, 480, 482, 483, 491, 503, 505, 507, 512, 515, 520, 564, 566], "1dc": [82, 83, 89, 102, 105, 109, 110, 114, 116, 117, 121, 137, 138, 143, 147, 148, 149, 158, 360, 365, 367, 380, 382, 388, 392, 413, 441, 449, 451, 454, 456, 462, 466, 467, 471, 473, 477, 505], "1deg": 199, "1e": [19, 20, 26, 86, 100, 129, 130, 132, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 239, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 273, 284, 290, 331, 347, 349, 372, 383, 442, 444, 446, 448, 450, 452, 454, 456, 458, 459, 462, 464, 466, 467, 470, 472, 478, 480, 483, 484, 501, 505, 509, 533, 534, 535, 537, 540, 541, 545, 546, 548, 549, 550, 551], "1e0": 499, "1e10": [51, 148], "1e12": [499, 509], "1e2": [444, 499, 501], "1e3": [483, 509], "1e30": 543, "1e4": [472, 483, 484], "1e40": 500, "1e5": [448, 483, 501, 519, 520], "1e51": 52, "1e6": [45, 483, 497, 552], "1e7": [126, 552], "1f": 447, "1fhl": [417, 430], "1fhl_name": 71, "1h": [125, 158], "1k": [102, 109], "1kpc": 501, "1lhaaso": [57, 70, 438, 470], "1lhaaso_catalog": 57, "1rc1": 401, "1tev": [52, 53, 130, 459], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 113, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 136, 138, 140, 141, 145, 146, 147, 148, 150, 156, 158, 161, 168, 171, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 201, 206, 209, 210, 211, 212, 213, 217, 221, 223, 225, 229, 231, 232, 236, 239, 246, 247, 248, 254, 255, 257, 258, 261, 262, 263, 268, 272, 273, 279, 281, 282, 283, 284, 289, 290, 295, 297, 317, 319, 357, 360, 365, 367, 369, 372, 373, 376, 377, 381, 383, 384, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 401, 404, 406, 408, 411, 412, 413, 414, 415, 416, 423, 428, 429, 430, 431, 432, 433, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 491, 492, 493, 501, 504, 505, 507, 512, 513, 514, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 568, 569, 570], "20": [16, 38, 83, 87, 89, 91, 102, 104, 105, 109, 110, 123, 149, 150, 155, 157, 159, 168, 188, 189, 191, 197, 200, 201, 206, 282, 297, 373, 376, 377, 378, 380, 385, 387, 390, 392, 397, 409, 434, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 495, 514, 516, 517, 518, 524, 525, 526, 529, 530, 539, 542, 547, 553, 568], "200": [52, 87, 91, 132, 199, 396, 424, 440, 446, 447, 450, 456, 460, 462, 470, 475, 478, 493, 563, 568], "2000": [88, 102, 105, 109, 110, 126, 226, 230, 232, 234, 249, 256, 412, 458, 459, 460, 474, 483, 493, 566], "2000000": 454, "20000000000000004": 449, "20009124": 473, "2000apj": 273, "2000e": 478, "2001": [94, 412, 450, 566], "2002": [87, 91, 288, 463], "2003": [289, 463], "2003mnra": 289, "2004": [86, 94, 463, 485], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 566], "200503": 441, "2005a": 470, "2006": [31, 33, 387, 450, 457, 465], "200638": 493, "2006a": 273, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 117], "2007": [390, 566], "20072608": 473, "2008": [38, 86, 221, 270, 442, 483, 495, 533], "2008aj": 38, "2009": [132, 291, 413, 450, 566], "20097159": 473, "2009851": 473, "20099855": 473, "201": [52, 475], "2010": [126, 148, 221, 238, 295, 373, 533, 566, 571], "2010a": [238, 273], "2010mnra": 148, "2011": [221, 442, 495, 533], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 413, 566], "2013": [101, 133, 392, 398, 402, 411, 463], "20136": [82, 298, 485], "20137": [298, 485], "2013aph": 272, "2013apj": 60, "2014": [139, 410, 495], "2015": [52, 86, 386, 389, 410, 483], "20151": 298, "2015apj": [61, 125], "2015jheap": 273, "2016": [26, 386, 389, 410, 413, 463, 474], "2016apj": 58, "2017": [221, 377, 379, 389, 392, 408, 410, 413, 456, 482, 533], "2017apj": [59, 62], "2017icrc": 482, "2018": [52, 377, 378, 379, 380, 381, 382, 383, 387, 389, 391, 392, 410, 437, 482, 485, 566], "2018a": 125, "2019": [379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 410, 432, 433, 457, 466, 482, 566], "202": 456, "2020": [198, 381, 392, 393, 394, 395, 396, 410, 457, 458, 466, 475, 555, 556, 557], "2021": [89, 221, 394, 396, 410, 437, 478, 533], "2021345e": 473, "2022": [397, 398, 410, 413, 484], "2023": [384, 399, 400, 410, 413], "2023arxiv230517030c": 57, "2024": [104, 123, 409, 410, 447, 451, 452, 454, 478, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "2024e": 492, "2026": [384, 413], "2028": 413, "2030": [384, 413], "2031": 413, "20326": [297, 443], "20327": [297, 443], "2033": 413, "20339": 297, "2034": 413, "20343": 297, "20344": 297, "20345": 297, "20346": 297, "20349": 443, "2035": [122, 124, 413], "20350": 443, "2036": [122, 124], "2037": 413, "20372": 482, "2038": 413, "2039": 413, "20396": 443, "20397": 443, "204": [137, 440, 462, 466, 532], "2040469e": 473, "2041222e": 473, "20421": 443, "20422": 443, "2045": 384, "2046": 413, "2049": [413, 470, 493], "205": [424, 456, 475], "2050": 413, "20508075688775": 470, "2051": 413, "20517": 443, "20518": 443, "20519": 443, "205192": 470, "20521": 443, "2053315944536949e": 482, "205357": 470, "2054": 413, "20559": 493, "2058705e": 473, "206": 470, "2061": 470, "2062580e": 473, "2064": 413, "2064335": 97, "2065": 413, "2066": 413, "2068682e": 473, "2069": 413, "207": [440, 456, 460, 477, 553], "2071": [384, 413], "2075": 400, "207520865": 465, "207521465": 465, "2076": 413, "2077": 413, "207872": 547, "2079930e": 473, "207e": 450, "208": 60, "2085": 413, "2089": [386, 415], "20898": 443, "20899": 443, "209": 456, "20900": 443, "2093": 413, "2095": 456, "2097": [413, 441, 449, 451, 454, 456, 462, 466, 482], "2097e": 446, "2098": 413, "20deg": [458, 459], "20e": 473, "20t10": [491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "20t11": [447, 451, 452, 454, 478], "20th": 398, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 126, 143, 375, 376, 420, 426, 435, 440, 441, 442, 450, 452, 456, 460, 461, 465, 466, 469, 470, 473, 475, 493, 520, 568], "210": [424, 470], "2103": 470, "2104": 414, "2104353e": 473, "2106": 414, "2108": 414, "211": [440, 470, 471, 553], "2111": 414, "2112": [414, 492], "2114": 414, "2115": 414, "211770556360534": 467, "2118": 414, "2119": 414, "211e": 470, "212": [67, 424, 440, 446, 470, 553], "2121": 414, "2121164e": 473, "2123": 414, "21236e": 441, "2124": 414, "2126": 414, "2128": 414, "2129": [386, 415], "213": 448, "2130": 414, "2131": [414, 470], "2132": 414, "21325": 483, "2133": 414, "2136": [385, 416], "2139": 414, "214": [444, 450], "2140": 414, "2141": 414, "2142": 414, "2145": 414, "2146": 414, "21464892": 493, "214e": 446, "215": [67, 424, 438, 470], "21500000000003": 527, "2151": 414, "2152": 414, "21525804550772332": 457, "2153": [414, 470], "2154": [414, 470], "2155": [418, 442, 463, 465, 466, 470, 479, 493, 533], "215686274509824": 460, "2157": 414, "2159e": 101, "215e": 470, "216": [233, 446, 475, 477, 562], "2160": 414, "2162670e": 473, "2163": 414, "2164425e": 473, "2166": 414, "2169": 414, "217": [440, 446, 470, 532], "2171": 414, "21731921e": 475, "21733761e": 475, "21735587e": 475, "218": [61, 125], "219": [440, 445], "2190": 390, "2192": 415, "2197": 456, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 102, 105, 109, 110, 132, 163, 168, 171, 186, 187, 196, 199, 376, 410, 423, 446, 447, 448, 449, 450, 455, 464, 466, 470, 471, 474, 475, 476, 484, 485, 486, 491, 492, 493, 504, 511, 514, 516, 517, 520], "220": [470, 477, 568, 569], "2200": 415, "2201": [65, 262, 470, 493, 550], "2202e": 493, "2204": 415, "2206": 415, "220e": 470, "221": [386, 424], "22149": 450, "2217": 415, "2217412e": 473, "2218": [389, 416], "2219": [388, 416], "222": [58, 470, 477], "2221": 470, "22245374e": 124, "2227134679628": 466, "22271346796282": 466, "22271346796283": 466, "2229": [385, 415], "223": 477, "2230": 415, "2231": 470, "2235": 415, "2237": [415, 493], "2238": 415, "2239": 415, "224": [440, 553], "2240": 415, "2243": 415, "2244": 415, "224436": 493, "225": [96, 297, 298, 396, 424, 470], "2250": 415, "22500": 452, "2254": 415, "2255": [390, 479], "225575051666": 470, "2255890": [465, 479], "2257": 415, "2259": 415, "226": [440, 456, 483, 553], "22608": 471, "2262": 415, "22635140877790516": 472, "2264": [384, 415], "22646133647326874": 472, "2264827111476982": 472, "22648881839710966": 472, "2265163003209506": 472, "22662622801631419": 472, "227": [440, 553], "2270": 389, "2272": 415, "2274": [391, 416, 441], "2276": 415, "2277": 415, "2278": 415, "2278975306934438": 472, "2279": [389, 416], "227e": 470, "228": [284, 290, 380, 386, 440, 447, 452, 470, 474, 485, 532], "228377": 123, "2287": 415, "2289": 415, "229": [67, 470], "2290": 391, "2292": 416, "2294": 415, "2296": 415, "2297": 415, "22974080e": 483, "2298": 415, "22e": 474, "22nd": 410, "23": [77, 94, 171, 372, 376, 398, 410, 434, 443, 445, 446, 448, 450, 455, 466, 470, 472, 475, 477, 479, 493, 516], "230": [424, 440, 450, 553], "2300": 415, "2304": 390, "2305": 415, "230542e": 470, "2307": [64, 65], "2308": 416, "231": [424, 440, 532], "2310": 415, "2313": 416, "2314": 416, "232": 62, "2320": [416, 470, 471], "2321": 416, "2323": 416, "2326": 416, "2327": [470, 477], "23273": 483, "233": 447, "2330": 416, "23306": 450, "2332": 477, "2334": 416, "2335": 416, "2338": 416, "2339": [443, 470, 493], "234": [424, 440, 467, 553], "234132519034915": 475, "23413252": 475, "2342": 416, "2343": 416, "234359264373779": 474, "2343e": 477, "2344": 416, "2345": 416, "2346": 416, "2347": 416, "235": 424, "2350": 417, "2351": 416, "23523": [141, 168, 206, 408, 446, 447, 455, 464, 471, 472, 474, 485, 491, 492, 504, 507, 567], "23526": [141, 206, 446, 447, 455, 464, 471, 472, 474, 485, 491, 492, 567], "235294117647083": 460, "2354": 416, "23559": [446, 447, 464, 471, 474, 491, 492, 514, 516, 517, 567], "2356": 416, "2357": 477, "2358": 416, "2359": 416, "23592": [446, 447, 464, 471, 474, 491, 492, 514, 516, 517, 567], "236": [424, 470], "2360": 416, "2362506e": 473, "23628": 483, "2365": 416, "2366": 416, "2367": 416, "2368": 416, "237": 441, "23734": 493, "2375": 416, "2377": 416, "2378": 416, "2379": 416, "2381": 416, "238298": 441, "2384": 441, "2385": 416, "239": [67, 456], "23905561": 473, "239439": 493, "239557417": 86, "2399": 470, "239e": 470, "23a": [61, 125], "24": [25, 27, 52, 53, 86, 87, 91, 94, 375, 376, 389, 393, 427, 432, 441, 447, 450, 466, 470, 471, 475, 477, 482, 483, 491, 516, 533, 540, 549, 550, 551], "240": [102, 105, 109, 110, 121, 470, 471, 505], "2400": 416, "2401": 416, "2404": 416, "2405": 417, "240e": 446, "241": [470, 553], "2412": 416, "2414": 470, "2419": 441, "242835": 67, "243": 446, "2431": 470, "2432": 450, "2433": 417, "2435": 417, "244": [67, 424, 446], "2440": 470, "2441": 417, "244140625": 477, "2443672e": 473, "2444": 417, "2446": [417, 477], "2448": 417, "2449": 417, "245": [424, 440, 553], "2450": [417, 477], "245152": 456, "2454": 417, "2455": 417, "2459": 417, "246": 424, "2461": 417, "24611324074": 470, "2463": [392, 417], "2464": 417, "2465055e": 473, "2468": 417, "24685677e": 473, "247": [67, 424], "2470": 417, "2471938975366008": 297, "2472": 417, "2475": 417, "2476": 417, "2477": 417, "2478": 417, "2479": [417, 492], "248": 424, "2481": 417, "248122": 470, "2483": 417, "2485": 491, "2486": 417, "249": [22, 424], "2490": 417, "2491": 417, "2492": 417, "2493": 417, "2496": 417, "24968": 441, "2497": 417, "2498": 417, "2499": 417, "249965667724609": 474, "249e": 138, "24e": [470, 477], "25": [33, 52, 87, 91, 101, 137, 147, 158, 171, 284, 290, 376, 389, 396, 410, 431, 438, 440, 441, 442, 446, 447, 450, 456, 458, 461, 466, 467, 470, 473, 475, 477, 493, 494, 525, 530], "250": [475, 566], "2501": 417, "250185": 474, "2502": [417, 456], "2505": 417, "2505121": 97, "2505703": 467, "2509": 470, "251": [450, 454], "2510": 417, "251185": 493, "2511884200000000": 493, "25162e": 441, "2518": 470, "251932": 470, "252": [424, 456, 470], "2520": 417, "2521": 417, "2523": 417, "2525": 417, "2528": 417, "253": [449, 477], "2535": 417, "2536": [417, 477], "2537": 477, "2538": 417, "254": 424, "2540": 417, "2546": 417, "254901960784338": 460, "25496": 493, "2551": 417, "2552": [417, 470], "2553": 417, "2555": 393, "2557": 417, "255750516626": 470, "2558": 417, "2559": 417, "256": [67, 427], "2560538e": 473, "2561": 417, "2562": 417, "2563": 417, "2564": 417, "2567": 417, "2568710719919036": 457, "257": [137, 440, 449, 461], "2574": 417, "25743553e": 472, "25763": 450, "257642": 470, "2579999": 482, "258": [449, 531], "2580": 417, "2585": 417, "2587": 417, "2589254117941673": 491, "259": [449, 493], "2591e": [442, 470], "2594": 417, "2595": 417, "2595e": 454, "259e": [138, 450], "25b": 17, "25e": 477, "25t_": 53, "25th": 398, "26": [19, 87, 91, 376, 410, 438, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 495, 543, 561], "260": [427, 493], "2604": 417, "2609": 477, "261": [427, 493], "2616": 417, "26173": 450, "261746": 531, "2619": 417, "262": [427, 450, 477, 493], "2620": 417, "262554796103245": 491, "2625818241224747": 472, "2627": 417, "262728": 482, "26272868097919794": 479, "2628525e": 473, "263": [137, 138, 449, 450, 477], "2633e": 455, "2635": 417, "2635108e": 473, "2637": 417, "26392": 452, "2639554729438709": 479, "264": [137, 427, 456], "2645": 417, "2648150": 97, "2649e": 472, "265": [32, 138, 386, 441, 450, 456, 477, 493], "2651": 417, "2654": 417, "266": [137, 138, 386, 449, 450, 456, 458, 462, 475, 477, 493], "2660": 417, "266192": 441, "26665050077722524": 479, "2667": 418, "267": [67, 138, 440, 449, 450, 456, 477, 482, 486], "2672": 418, "2673": 418, "26739753": 97, "2674": 418, "267e": 446, "268": [398, 450, 456, 470, 477, 491, 493], "2681": 418, "2684": 418, "2685": 418, "268663733018811": 479, "2687": 418, "26883694": 493, "26887783978974283": 479, "2689": 456, "269": 493, "2692": 418, "269385": 470, "269627": 482, "2697": 418, "2699878e": 473, "26a": [39, 40, 50, 52, 53, 125, 238, 273, 282, 470], "26e": [470, 477], "26th": 394, "27": [138, 378, 438, 446, 450, 456, 471, 493, 568], "270": [443, 450, 470, 477, 493], "2703": 418, "2705": 418, "27057337686547633": 479, "2707": 418, "2708": 238, "2709": 418, "27093776e": 473, "271": [446, 449, 450, 454, 493], "2711": 418, "2712": 418, "2713": 418, "2715": 418, "271777777777796": 443, "27177778": 94, "2718": 418, "2719": 418, "272": [449, 450, 470, 477], "2720": [393, 419], "27209": 493, "2723": 418, "2725": 418, "2726": 418, "2726e": 493, "2727": 418, "2727693": 482, "2727e": 446, "2728": 418, "2729": 418, "273": [83, 427, 440, 444, 450, 465, 468, 493], "2730": 418, "2731": 418, "2733": 418, "2734": 124, "2735": 418, "2737": 418, "2738": 418, "2739": 418, "274": 475, "27409496735322464": 479, "2741": 418, "2742": 418, "2743": 418, "274509803921596": 460, "2746": 418, "2747": 418, "27473": 456, "275": [449, 470, 561], "2750": 418, "2751": 418, "2752": 418, "2753": 418, "2755": 418, "2756": 418, "2759": 419, "276": 427, "2761": 419, "2762": 419, "2764": 419, "2765": 419, "2767": 419, "2768": 419, "277": 449, "2771": 419, "2772": 419, "27727": 477, "2775": 419, "277522283785622": 457, "2776": 419, "2777": 419, "2777074437073429": 479, "2778": 419, "2779": 419, "278": [27, 427, 449, 462, 470, 477], "2781": 419, "2782": 419, "2783": 419, "2784": 419, "2785": 419, "2785e": 446, "2787": 419, "2788": 419, "2789": 419, "278e": 450, "279": 427, "2790": 419, "2791": 419, "2792": 419, "2793": 419, "2794": 419, "2796": 419, "2797": 419, "2798": 419, "2799": 419, "27e": 470, "27t20": 89, "28": [21, 24, 67, 94, 137, 138, 381, 410, 440, 444, 446, 448, 449, 450, 456, 458, 462, 466, 469, 470, 474, 475, 477, 481, 482, 493], "280": [67, 427, 440, 446, 449, 475, 553], "2800": [458, 477, 493], "2801": 419, "2802": 419, "2803": 419, "2804": 419, "2805": 419, "2808": 419, "2809": 419, "281": [449, 470], "2810": 419, "2811": 419, "28118133544922": 470, "2812": 419, "28120079": 470, "2815": 419, "2816": [419, 477], "2817": 419, "2818": 419, "2818047723094509": 479, "282": [137, 138], "2820": 419, "2822": [419, 477], "2823": 419, "2825456e": 473, "2827": 419, "2827988e": 473, "2828": 419, "2829": 419, "282e": 470, "283": [427, 449], "2832": 419, "283218": 441, "283487": 470, "2837": 419, "28382603": 473, "2838398": 482, "28385358839966657": 479, "2839": 419, "284": [440, 449, 470, 553, 571], "2841": 419, "2842": 419, "28429": 456, "2845": 419, "2846": [419, 456], "285": [427, 449], "2852": 477, "28551": 138, "285f": [83, 88], "286": [427, 449], "2861432787940619": 479, "286e": [450, 470], "287": [52, 53], "2872": 420, "28720322": 97, "2874": [420, 493], "28755283551095173": 479, "2878662980210884": 298, "288": 124, "2880470e": 473, "2885": 420, "288e": 444, "289": [427, 449], "28905": 483, "2891": 420, "28958": 450, "2896": 420, "2897": 420, "289e": 462, "28e": [102, 444, 454, 456, 471, 483], "29": [67, 138, 268, 387, 397, 410, 438, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "290": [428, 449, 457], "2900": 477, "2903": [420, 477], "2903e": 448, "2907": 420, "291": 427, "2912": 420, "29170324": 471, "291e": 493, "2922477": 97, "2924": 420, "2927": 420, "2929": 420, "293": 449, "2930": 470, "2931": 420, "2932": 420, "29355238360800506": 479, "2938": 420, "2939": 420, "2942": 394, "2943": 420, "2944": [395, 420], "2945": 420, "2947": 420, "2948": 420, "295": [427, 466], "2950": 420, "2951": 420, "2953": 456, "2956": 420, "29585273e": 483, "2959": 477, "295e": 470, "296": 427, "2965": 420, "2966": 420, "2967": 420, "297": 441, "2971e": 470, "2974": 420, "2976": 420, "2978e": 442, "298": [449, 456, 466, 470], "2981": 420, "2984": 420, "29882214027996945": 479, "299": [427, 449, 462, 470], "2990": 420, "2991": 420, "2992": 420, "2993": 420, "2995484265169": 463, "2996": 493, "2998": 420, "2999": [420, 470], "299940468335294": 456, "299995937905366": 456, "299e": 470, "299t": 53, "29t20": 465, "29th": 410, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 168, 178, 179, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 206, 228, 378, 383, 388, 391, 392, 393, 404, 412, 418, 431, 432, 433, 440, 450, 452, 453, 456, 475, 476, 493, 503, 506, 517, 518, 519, 531], "2degx2deg": 458, "2e": [193, 441, 443, 444, 458, 459, 465, 470, 472, 477], "2e3": [193, 475], "2e6": 483, "2f": [361, 441, 447, 479, 492, 569], "2fhl": [58, 71, 417, 429, 430, 470, 493, 502], "2hwc": [59, 72, 417, 423, 431, 470, 502], "2k": [102, 109], "2m": [238, 273], "2nd": [60, 397], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 470], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 102, 104, 105, 109, 110, 111, 115, 117, 123, 124, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 171, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 210, 212, 221, 228, 231, 239, 262, 268, 270, 272, 273, 281, 282, 283, 288, 297, 298, 319, 328, 349, 360, 365, 367, 369, 372, 373, 375, 376, 378, 383, 384, 386, 387, 388, 389, 391, 396, 397, 398, 403, 408, 409, 411, 412, 413, 415, 416, 421, 423, 425, 428, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 494, 495, 497, 500, 501, 504, 505, 509, 511, 513, 514, 516, 517, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 568, 569], "30": [24, 52, 67, 83, 96, 102, 112, 137, 148, 187, 297, 298, 379, 380, 385, 392, 399, 410, 412, 441, 442, 443, 446, 447, 450, 451, 456, 459, 462, 465, 466, 467, 470, 471, 472, 475, 477, 478, 479, 480, 482, 483, 493, 505, 511, 516, 517, 524, 525, 539, 542, 543, 544, 547], "300": [74, 87, 91, 282, 449, 451, 455, 458, 459, 462, 466, 470, 483], "3000": [382, 470, 519], "30000": 470, "3000000": 552, "30000000": 552, "3000020211954284": 456, "3000e": 442, "3001": 420, "30015e": 441, "3002": 420, "3003": 477, "3004625872247901": 455, "3005": 420, "3006": 493, "3006942": 97, "3007": 420, "301": [427, 449], "3011061699260256": 479, "3012": 420, "3013": 470, "301668796295": 470, "302": 449, "3020791585772495": 297, "30287": 450, "3028e": 477, "302e": 470, "303": [446, 449, 470], "3030": 420, "3032": 420, "3034": 470, "3035": 420, "3037": 420, "303754329532": 466, "3037632e": 473, "3038": [420, 493], "3039": 420, "304": [442, 463, 465, 466, 470, 479, 493, 533], "3041": 420, "3042": 420, "3043": 477, "3045": 420, "3046875": [471, 477], "3049664466089965": 298, "304_steadi": 442, "305": [67, 449, 466], "3051": 420, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 420, "3053": 420, "30535345877453707": 479, "3054": 420, "3054538213469855": 457, "30561": 138, "3058": 420, "3058422e": 473, "305e": 470, "306": [427, 568], "3060": 420, "306196370000000": 493, "3063": 420, "3069": 420, "306e": 470, "307": 449, "3070": 420, "3071": 470, "3072": 420, "3074": 420, "3075": 396, "3076": 420, "307e": 470, "308": [449, 456, 527], "3080": 420, "3081": 420, "3083": 420, "3085": 420, "3086": 420, "3088": 420, "3089": 420, "3091": 420, "3092": 420, "309851": 528, "30997": 493, "30a": 273, "30d00m00": 399, "30e": [442, 452, 473, 477], "30th": 384, "31": [137, 138, 381, 382, 395, 396, 408, 435, 440, 442, 444, 446, 447, 449, 450, 454, 457, 460, 465, 466, 470, 471, 474, 475, 477, 480, 484, 491, 493], "3100": 420, "3106": 420, "31067517": 470, "3107": [470, 493], "310e": 466, "311": [527, 569], "3110": 421, "3111": 421, "3112": 421, "3113": 421, "31139074e": 472, "3114": 421, "311489174710791e": 493, "3116": 421, "3117988e": 473, "31186857659616535": 479, "3119611261122878": 479, "312": [427, 466], "3122": 422, "3123": 422, "3124": 422, "3125": 422, "3126": 422, "3127": 422, "3129": 422, "313": [449, 455, 466], "3130": 422, "3131": [423, 477], "3135914081482271": 479, "3136": 423, "313714614138": 471, "3138": 423, "314": 432, "3140": 423, "3141": 423, "3145": 423, "3148": 423, "315": 470, "3152": 423, "3153": 423, "3155": 423, "315767542862533": 491, "3158": 423, "316": [449, 483, 484], "3162": 423, "316227": 470, "316227766016838": 474, "3165": 423, "3168": 423, "3169": 423, "317": [427, 449], "3173": 423, "3178": 423, "317a": 273, "317e": [442, 470], "318": [427, 440, 457, 461], "3180": 423, "3182": 423, "31834": 138, "3185": 423, "3189697265625": 446, "319": [428, 483], "3191": 423, "3195": 493, "3197": 423, "319725": 482, "3199": 423, "32": [83, 137, 187, 446, 450, 452, 474, 475, 493], "320": [102, 105, 109, 110, 121, 470, 471, 477, 505], "3202": 423, "3207": 423, "3208": 423, "32095": 493, "321": 460, "3211": 423, "3216": 423, "3217": 423, "3219": 423, "322": [440, 449, 466, 532], "3222": 423, "3228": 423, "3229": 456, "323": 449, "3230": 423, "3232943": 339, "3233356": 339, "32377509405904137": 96, "323779": 288, "3237948931463171": 479, "3238": 423, "3241": 423, "3243": 423, "3246": 423, "32465247": 478, "3254": 423, "3257": 423, "3258": 423, "325e": 447, "326": 427, "3262": 423, "32684": 493, "32684833": 482, "327": 456, "3272": 423, "3276": 423, "3277": 423, "3278": 423, "3279": 423, "3279955e": 473, "328": 456, "3281": 423, "3283": 423, "3284": 423, "32843": 493, "32847": 441, "3285": 423, "329": [96, 297, 298, 440, 465, 470, 472, 479, 481, 507], "3293": 423, "3299": 470, "329e": [446, 470], "33": [463, 469, 472, 475, 493, 507], "330": [428, 449, 477], "3301": 423, "33013e": 441, "3302": 423, "3302565e": 473, "3303": 423, "330376": 67, "3304": 423, "3305": 423, "330505": 482, "33055e": 441, "3306": 423, "3307": 423, "3308": 423, "3309": 423, "331": [440, 486], "3310": 423, "3310505827103": 466, "3314": 423, "33164865722698683": 479, "3319": 423, "3319831545301117": 297, "332": [67, 428], "3320": 423, "3323": [423, 471], "332525": 470, "3328": 423, "332e": [446, 450, 456], "332f": [30, 31, 32, 33], "333": [440, 553], "3330487": 97, "3331": 493, "3331761": 97, "3333": 423, "33333333": 372, "3333333333333344": 460, "3335": 423, "33368e": 441, "3337": 423, "3338": 423, "334": [124, 440, 483, 553], "3342": 423, "3343": 423, "3346": 423, "334662": 545, "3347": 423, "33484": 441, "3349": 423, "334e": 470, "335": [428, 440, 454, 481], "3353": 423, "3357": 423, "3358": 423, "335e": 444, "336": [460, 470], "3363": 423, "3364130e": 473, "336444e": 470, "336606": 441, "3368855e": 473, "3369": 423, "337": [428, 449], "3374": 423, "3377": 423, "33787": [96, 479], "33788": [96, 479], "33789": [96, 479], "3379": 423, "33790": 479, "33791": 479, "33792": 479, "33793": 479, "33794": 479, "33795": 479, "33796": 479, "33797": 479, "33798": 479, "33799": 479, "338": [428, 470], "33800": 479, "33800122": 97, "33801": 479, "3380311e": 473, "3381": 423, "339": [428, 440, 446, 460, 553], "3390": 423, "3392": 423, "3393": 423, "3395": 423, "3397": 423, "339835555384604": 479, "3398360": 473, "33983991887701287": 96, "3399": 423, "33e": 467, "34": [52, 53, 67, 411, 440, 441, 456, 465, 468, 471, 475, 477, 493], "34005": 441, "3402": 423, "3403": 423, "340391": 493, "3404": 423, "34047": 441, "3406": 423, "3409": [94, 423], "341": 441, "3413": 423, "3416": 423, "3418": 423, "342": [428, 440, 553], "3420": 423, "3423": 423, "3426": 423, "3428": 423, "3434": 423, "3438": 423, "3439": 423, "343e": 444, "344": 470, "344238": 493, "344255": 556, "3443842": 482, "3445": 423, "3446": 423, "3447": 423, "3449": 423, "344e": 67, "345": [289, 441, 477], "3453": 423, "3454": 423, "345692": 493, "3458": 423, "346": 477, "34613054105945": 457, "346488e": 470, "3466": 423, "3468": 423, "347": [428, 443], "3471": 423, "3474": 423, "348": [36, 37, 428, 446], "3480": 423, "3481e": 454, "3488": 423, "348e": [67, 470], "3491": [423, 450], "3493": 137, "349530550405035": 472, "349530725254468": 472, "34953073943366": 472, "34953075819191": 472, "34953077463306": 472, "34953079334042": 472, "349530807529028": 472, "349535814693404": 472, "349536723056637": 472, "349537158300407": 472, "349537804239922": 472, "34953807814367": 472, "34953910575007": 472, "34953932636892": 472, "349542158419318": 472, "349559366703698": 472, "34971209244579": 472, "349724940685938": 472, "3499075e": 473, "349e": 450, "34e": [470, 477], "35": [67, 389, 396, 408, 446, 465, 470, 472, 480, 482], "350": [460, 467], "350105": 456, "3502": 470, "35030398537787": 472, "3503706026275275": 479, "3504": 493, "35052105086856": 472, "350556388466543": 472, "350d": 460, "351": [428, 470, 493], "3514e": 492, "3515": 423, "352": [428, 470], "3521": 443, "3523": 423, "3529": 423, "3529411764705888": 460, "353": [24, 428, 440, 445, 446, 493], "3535": 425, "353592500058824e": 491, "3536": 441, "353e": 456, "354": 460, "3544": 423, "35569283": 473, "355804": 493, "3559": 423, "356": 493, "3561": 423, "3568": 423, "357": [470, 493], "35722435185": 470, "3575e": 462, "3576e": 443, "357728125404": 558, "35773088256": 559, "3577345674": 560, "358": [456, 470, 493], "3583": 456, "3584": 423, "359": [428, 456, 470, 493], "3590188e": 473, "3592": 423, "3599": 458, "359e": 493, "36": [67, 86, 143, 317, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "360": [386, 475, 495], "3600": [449, 458, 459, 475], "36014": 454, "36073833513766157": 479, "361": [67, 428], "3619e": 492, "362": [440, 452, 453], "36228879": 493, "36273": 493, "363": [440, 494], "363472509034498": 479, "3639946": 467, "364": [428, 440, 445], "365833": 550, "3659253e": 473, "366": 492, "36669663417038234": 479, "3669": 425, "367": [428, 460, 477], "3674884": 470, "368": 117, "36834038301420274": 479, "368346217294295": 96, "3684": 425, "368476": 525, "3689322e": 473, "369": 428, "3690": 493, "3699": 425, "36e": [469, 470], "37": [440, 441, 442, 447, 449, 454, 461, 466, 472, 483, 569], "370": [460, 470, 477], "37058": 138, "371": 428, "3710784e": 473, "3712": 425, "3713": 425, "3715810e": 473, "3718745": 97, "372": [35, 124, 493], "3720": 425, "3722": 425, "3725490196078436": 460, "3728": 425, "373": [440, 456, 553], "3733": 425, "3739292e": 473, "374": [440, 458, 460, 532], "3740": 425, "37455141": 493, "3748": 425, "375": [428, 475], "3750": 456, "37506": 493, "37517": 450, "3752": 425, "3759377929871826": 479, "376": 67, "3760": 425, "376014": 560, "3761": 425, "3765": 441, "3777": 425, "37773": 450, "3779": 493, "3783": 425, "3784": 137, "379": [428, 446], "3792": 477, "3796": 425, "3797": 425, "38": [22, 67, 441, 443, 470, 475, 477, 493, 552], "3802": 425, "3804": 425, "3806": 425, "381": 477, "3810": 425, "3812": [470, 493], "3812120e": 473, "3812160e": 473, "38143003": 97, "3817": 425, "3829": 493, "382e": 446, "383": [67, 428, 470, 475], "3833": 425, "3837": 425, "383e": 67, "3842": 425, "3846": 425, "3848912826152664e": 493, "3856": 425, "385e": 138, "3860": 425, "3862": 434, "387": [428, 493], "3872": 470, "3873": 425, "3874": 425, "3876": 425, "387834": 493, "388": 531, "388405": 493, "3885947175689592": 479, "3886270e": 473, "3887": 425, "389": 377, "3892": 425, "3895": 425, "3898": 425, "389e": 493, "39": [17, 18, 21, 22, 24, 25, 27, 59, 453, 469, 470, 475, 483, 531, 552], "390": 423, "3904": 425, "39042": 86, "3905": 425, "3906": 425, "391": [440, 468, 470], "3915": 425, "39151": 452, "3918": 425, "392": [428, 447], "392156862745098": 460, "39224": 450, "3925": 434, "393": [202, 203], "3933": 425, "3935": 443, "3936": 425, "394": 428, "3941": 425, "3945": [443, 470], "3947637541758": 466, "394765638937866": 491, "3948": 426, "395": 428, "3950": [397, 434], "395004": 493, "3956": 434, "3959": 426, "396": 428, "3962942e": 473, "3966": 426, "397": 446, "3970": 398, "39728": 493, "3975": 426, "3979": [426, 567], "397918129147546": [408, 567], "39791813": [408, 567], "398": [428, 454], "3981": 493, "3981075200000000": 493, "3983": 426, "3986": 426, "3987": 426, "3988": 426, "398e": 470, "399": [440, 486], "3990": 426, "39e": 470, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 143, 149, 156, 157, 159, 168, 276, 278, 378, 381, 382, 383, 387, 388, 391, 392, 393, 404, 412, 413, 414, 416, 417, 418, 419, 430, 431, 432, 440, 441, 442, 444, 446, 447, 450, 451, 452, 456, 457, 458, 459, 460, 461, 465, 466, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 491, 492, 503, 505, 506, 507, 512, 514, 515, 519, 564, 566], "3d33m15": 67, "3dataset": 455, "3e": [20, 124, 130, 456, 459, 462, 464, 467, 470, 477], "3e4": 483, "3e5": 483, "3e6": 552, "3e7": 552, "3f": [124, 457, 568, 569], "3fgl": [61, 67, 74, 223, 261, 395, 424, 427, 429, 430, 431, 440, 444, 470, 478, 493, 502, 521, 553], "3fgl_name": 71, "3fhl": [62, 75, 86, 126, 128, 132, 279, 392, 430, 431, 444, 450, 458, 460, 470, 475, 476, 477, 478, 483, 493, 502, 504], "3fhl_data_fermi": 455, "3fhl_dataset": [279, 455, 476], "3fhl_model": [279, 455, 477], "3g": [469, 470], "3hwc": [63, 76, 423, 434, 470, 502], "3ml": [390, 483], "3pc": [64, 69, 77, 470], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 101, 102, 105, 109, 110, 114, 116, 127, 132, 138, 140, 145, 148, 156, 168, 171, 187, 188, 189, 190, 191, 192, 197, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 233, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 272, 279, 280, 317, 359, 372, 373, 375, 376, 384, 386, 389, 392, 396, 397, 408, 411, 420, 422, 423, 424, 427, 429, 430, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 491, 492, 493, 495, 500, 501, 502, 516, 519, 520, 524, 525, 528, 533, 538, 551, 552, 560, 566, 567, 568, 569, 570], "40": [59, 109, 110, 379, 424, 443, 444, 446, 447, 454, 456, 465, 466, 475, 478, 482, 493, 516, 539, 542, 547, 568], "400": [132, 451, 456, 460, 470, 475, 493, 561], "4000": 434, "40000": [168, 492], "400056": 441, "40050506591797": 470, "40051": 452, "40051035": 470, "40071076": 97, "400x200": 460, "401": [440, 447, 456, 461], "40112": 493, "4013": 434, "4014": 434, "4015": 434, "4017": 434, "4018": 434, "401e": 450, "402": 148, "4022": 434, "40235": 454, "4024": 434, "4025": 434, "4026": 434, "402712": 470, "403": [428, 456, 477], "4035": 493, "4037": 434, "404": 295, "4043": 434, "4044": 434, "40481": 454, "405": 380, "4051": 434, "40525": 454, "4054": 434, "4058": 434, "406": 493, "40611": 493, "4067": 434, "407": 470, "4071": 434, "4073": 434, "4073799600000000": 493, "407420": 454, "4075": 434, "4076": 434, "4079": 434, "408": [446, 475], "4080": 434, "4080942e": 473, "40822469e": 478, "4083": 434, "4084": 434, "4088": 434, "4089": 434, "40919": 450, "4093": 434, "409416": 493, "4095": 434, "4098": 434, "40a": 59, "41": [67, 86, 94, 386, 449, 470, 471, 475, 483, 493], "410": 460, "41009347393684": 471, "4103": 434, "4105": 434, "4106": 434, "4107": 434, "4108": 434, "411": 493, "4110e": 470, "4112": [124, 434], "4113": 434, "4115": 434, "41176470588239": 460, "4119": 434, "411e": 444, "4120719e": 473, "412165": 456, "412779907405": 470, "413": 456, "414": 428, "4140541880588": 457, "41415047": 97, "4142135623730951": 117, "41449": 450, "414e": 450, "415": [428, 543], "4151e": 454, "415245": 454, "4155": [470, 493], "41584196": 463, "416": [67, 454, 470, 474], "4161e": 454, "417": 470, "418": [440, 553], "418007850646973": 408, "41866": 483, "419": 477, "4191": 437, "41924": 137, "4198250e": 473, "41995": 450, "419e": 470, "41e19": [19, 20], "42": [25, 27, 94, 148, 339, 386, 449, 456, 470, 473, 474, 475, 479, 482, 520, 523], "42050348": 471, "4208": 437, "4209": [437, 450], "421": [428, 460, 493, 566], "4210": 437, "4212": 437, "4212028e": 473, "4213": 437, "4215": 437, "4216": 437, "4217": 438, "4219": 437, "422": [39, 40, 440, 445], "4220": 454, "4221": 435, "4225498e": 473, "4225631e": 473, "42267": 456, "4226731": 456, "423": 446, "4231": [435, 437], "42361": 450, "42399798": 456, "423e": 124, "42400": 456, "4242": 437, "4243": 437, "4245": 437, "42463": 483, "424650": 471, "42474": 493, "425": 493, "4252": 437, "426": 470, "4264": 437, "4268": 435, "427": 447, "4275": [435, 437], "4277": 437, "428": [440, 477, 481], "4280": 437, "4281": 470, "4282": 437, "4288": 437, "429": 446, "4294": 437, "42e": [472, 477], "43": [272, 339, 386, 447, 456, 466, 471, 475, 493, 520], "430": 470, "43000": [52, 53], "4301": [435, 437], "43017": 452, "4303606e": 473, "4305": 437, "431": [133, 380, 460, 471], "431023787974766e": 491, "43113": 441, "43137254901962": 460, "4313847458879893": 479, "4319": 493, "43197": 450, "4324": [435, 437], "4326": 437, "432878": 470, "432e": 470, "433": 450, "4336": [435, 437], "43366": 561, "4338e": 442, "434": 470, "43416595": 467, "4344": 435, "4346": 437, "435": 428, "4350": 437, "4351637481047363": 479, "4352": 437, "4359": [435, 437], "435e": [446, 466], "435l": 470, "436": 428, "4360750e": 473, "4369": 437, "437": [470, 477], "4370": 437, "4373240195300975": 479, "437e": 466, "438": 477, "4380": [436, 437], "4381": [400, 438], "4382": 436, "4388813132807": 466, "439": 446, "4393": [436, 437], "4394": 436, "4395": 437, "4397": [436, 437], "439e": 470, "43e": 477, "44": [21, 50, 86, 339, 442, 449, 451, 465, 467, 475], "4402": 437, "44055555555555603": 94, "4406": 437, "4408": 438, "4409": 437, "4412": [436, 437], "4417": 437, "4418": 437, "4420073e": 473, "4420222e": 473, "4428": 437, "4428634e": 473, "443": 446, "4430": 437, "44319": 471, "4432": 438, "4435": [436, 437], "4444": 437, "444e": 455, "445": 450, "4450": 493, "44528685": 493, "4453": [436, 437], "44573": 94, "4458": 437, "4459": 437, "446": [477, 569], "4466": [437, 454], "4466832000000000": 493, "447": 428, "44742": 493, "44749e": 441, "447552": 441, "447e": [456, 470], "447l": 17, "448": 460, "4480056e": 473, "44802852": 493, "4481": 470, "4485": 438, "4486": [436, 437], "448e": 138, "4491": [399, 438], "4495": 437, "4497": 471, "4498": 137, "44e": 408, "45": [51, 54, 440, 445, 446, 449, 455, 467, 471, 475, 476, 478, 495, 520, 525, 526], "450": 477, "4500": [436, 437], "4501": 438, "4504": 437, "4506": 437, "4508": 437, "4509803921569": 460, "4510": [437, 454, 493], "4515": 469, "4517490659800822": 464, "4520": 436, "4521": 437, "4524": 436, "453": [442, 477], "454": 446, "4540": 438, "4545": 437, "4546": 438, "455": [428, 444], "45515263080596924": 443, "455348303684346": 466, "455870": 456, "455e": 67, "456": 428, "4561": 438, "456155": 535, "456200273342823": 466, "45646095": 467, "4567": 438, "457": [273, 428, 477], "457251": 493, "4574": [436, 438], "4575": 94, "4578": 436, "4579e": 441, "458": [460, 470], "4584": 438, "45856": 493, "4586649826004114": 297, "459": [428, 471, 477], "4593": 436, "45935": 493, "4595": 438, "4599": 438, "45\u00ba": 484, "46": [53, 67, 109, 110, 386, 470, 475], "460249999": 86, "4608": 438, "461": 428, "4615": 438, "46186956763267517": 443, "4619": 436, "462": [428, 446], "4620": [400, 438], "4620e": 470, "46225": 450, "4628": 438, "463": 493, "4631": 436, "4635": 438, "4638": 438, "4638e": 451, "464": 462, "4642048e": 473, "4647544e": 473, "465": [446, 470, 477], "4653": 436, "4657": [436, 438], "465784": 493, "4660": 438, "4664": 438, "4668": 438, "4669": 438, "4671": 438, "46711": 450, "4677": [436, 438], "468": [467, 470], "4681": 436, "4684": 443, "468666534363514": 466, "468805426856864e": 52, "468e": 67, "4697": 438, "46e": [83, 451, 456], "47": [67, 466, 470, 475, 493], "4703": 438, "470588235294144": 460, "4711": 493, "4712": 450, "4714": 438, "4721": 436, "4726": 438, "4728": 436, "4729": 438, "473": [428, 446], "4738": 438, "474": 428, "4740": 438, "4741": 438, "474515": 543, "474e": 470, "475": [428, 445, 477], "4750": 438, "4753": [436, 438], "475468": 441, "4755": 436, "4759": 438, "4770": 438, "4772": 436, "47797": 450, "477e": 470, "478": 428, "47802": 479, "47803": 479, "47804": 479, "47827": 479, "47828": 479, "47829": [82, 479, 485], "4783": 438, "4785": 438, "478917": 538, "47e": 470, "48": [33, 104, 123, 168, 411, 454, 455, 466, 475, 477, 483], "480": [443, 470, 477], "4802": 438, "4805": 438, "480554966147": 454, "48068": 450, "4808": 438, "480e": 470, "481": [377, 428], "4810": 438, "4814": [438, 493], "4817": 438, "48180882997916e": 491, "4819444e": 473, "482": 441, "48215685": 97, "4822": 438, "48248": 470, "4825": [470, 493], "4828": 438, "4829": 438, "483": [440, 445], "4834": 438, "4834488e": 473, "4835": 438, "4837": 438, "484": 428, "48442": 268, "4845": 438, "4847": 438, "4848653": 470, "4849": [438, 470, 493], "484e": 138, "485": 428, "4850": 438, "4851": 438, "4854": 438, "485p": [36, 37], "487": [428, 481, 491], "4875723e": 473, "4876": 436, "4879": 438, "4881": [247, 248], "4886": 438, "48871": 441, "488z": 27, "489e": 470, "48e": [470, 477, 492], "49": [53, 450, 454, 470, 477, 483, 491, 519], "490": 25, "4902": 438, "4904": 438, "4904078e": 473, "49078e": 441, "4913": 436, "49152": 483, "4917": 438, "493": 25, "4930435940405": 454, "4933657e": 473, "4936": [436, 438], "4937": [436, 438], "4940": 438, "49417615": 86, "4942": 438, "494e": 446, "4958277": 97, "496021": 482, "4963": 493, "4966": 493, "4968236e": 473, "4970": 438, "4971": 438, "4971704e": 473, "4973": 438, "4975": 438, "4978": 438, "498": [440, 488, 493], "498784": 470, "4989": 438, "498e": [470, 493], "499": [67, 470], "49919925926": [233, 562], "4992": 438, "4994": 438, "49972277488662115": 479, "4999833830074": 456, "4d": 391, "4e": [467, 470, 477, 552], "4f": [567, 568, 569], "4fgl": [65, 78, 262, 263, 395, 415, 417, 423, 425, 438, 440, 442, 455, 470, 476, 478, 502, 521, 553], "4th": [384, 410], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 102, 103, 105, 108, 109, 110, 117, 121, 124, 125, 127, 129, 131, 137, 138, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 168, 171, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 213, 214, 217, 220, 221, 223, 224, 225, 228, 229, 231, 233, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 273, 295, 299, 331, 362, 363, 367, 369, 372, 373, 376, 377, 379, 383, 384, 386, 387, 388, 389, 391, 395, 396, 397, 403, 408, 411, 413, 415, 416, 423, 425, 427, 428, 430, 431, 432, 436, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 495, 500, 501, 504, 511, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 529, 533, 534, 539, 541, 542, 543, 547, 548, 555, 556, 557, 558, 560, 566, 568, 569], "50": [87, 91, 94, 111, 115, 339, 379, 399, 441, 447, 448, 452, 454, 462, 465, 466, 467, 470, 471, 473, 475, 477, 478, 479, 482, 483, 485, 491, 492, 493, 516, 519, 527, 569], "500": [188, 189, 191, 197, 200, 201, 450, 456, 458, 459, 475, 482, 483, 493, 519, 524], "5000": [19, 20, 87, 91, 495, 519], "5000056568267741": 456, "5000e": 449, "50022222": 94, "500249": 470, "5004": 456, "5015": 438, "502": 428, "5029747": 448, "503": 428, "5030": 493, "503814": 447, "504": 28, "5040": 438, "5044": 438, "5049": 493, "505": [67, 470, 471], "505523195905": 454, "506": 428, "5066": 470, "507": 428, "5074834": 97, "5078068": 97, "50807568877": 470, "509e": 470, "50e": [449, 477], "51": [52, 53, 67, 454, 460, 491], "510": [428, 440, 469, 481], "5106": 493, "51095676": 467, "511": [67, 428], "51179": [373, 571], "512": 446, "5126": 67, "513": [408, 475], "51312": 456, "514231": 541, "5144": [94, 441], "514663": 533, "514854": 482, "51544": [449, 458, 459, 462], "5162628e": 473, "518": [428, 477], "5188338e": 473, "51910": 94, "5192420e": 473, "5194769e": 473, "51948705e": 478, "52": [53, 124, 168, 441, 443, 449, 450, 452, 454, 466, 470, 482, 485, 493], "5205": 483, "52074074074": 83, "521": 429, "523": [429, 475], "5230376e": 473, "52318414": 97, "523681640625": 446, "5237647004325865": 479, "52389101852": 470, "523a": [238, 273], "523b": 22, "523e": 447, "524": [429, 470, 477], "5248": 493, "524807800000000": 493, "52587": 450, "526": 429, "52607": 493, "527": [429, 483], "527e": 447, "528": [446, 477], "52826166": 470, "5283": [470, 493], "52839183495354": 466, "529": 429, "5292": 471, "529411764705883": 460, "5297030e": 473, "52e": [467, 491], "53": [28, 456, 480, 524, 533], "530": 429, "53025": 94, "531": [429, 460], "53213": 456, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 470, "53343": [408, 464], "53344": 464, "53345": 464, "53346": 464, "53347": 464, "53348": 464, "5345275e": 473, "53482e": 441, "535": [429, 470], "535058216604496": 273, "53566": 441, "53616": 238, "539": [273, 477], "5390438": 97, "539397": 470, "53945": 465, "53946": 463, "539e": 470, "53e": [408, 449], "54": [67, 443, 446, 470, 473, 523], "5400": 471, "5407363826067": 504, "5407363826070": 504, "541": 429, "5411": 441, "5427520e": 473, "54282": 450, "5438860e": 473, "544": [429, 470, 483], "545": 429, "54566271": 568, "545y": [39, 40], "546": 429, "5461745": 97, "54676837e": 472, "54682": [450, 470, 483, 493], "547": [429, 441, 470], "54721e": 441, "5477": 470, "54772": 470, "54892": 450, "548e": 470, "549": 429, "549007644529844e": 491, "549019607843138": 460, "54e": 477, "55": [39, 42, 87, 91, 206, 466, 467, 472, 476, 480, 524, 525, 526, 527], "550": [440, 445, 446], "55027": 138, "55045": 470, "551": [470, 531], "55197": [373, 571], "552": 470, "55275": 483, "553": [442, 470], "5531e": 442, "553337": 493, "5538": 493, "5538942e": 473, "553e": 450, "554": [67, 440, 481], "55410": 470, "5545130e": 473, "554e": 444, "556": [429, 446, 569], "5561760e": 473, "557": [429, 477], "55775": 470, "558": 429, "558338072878877": 491, "559": 429, "5594": 83, "56": [441, 447, 467, 475, 484, 528, 529, 530], "560": [37, 470], "5606985": 467, "5607778e": 473, "56093766": 97, "56141": 470, "562": 470, "5622482": 97, "56353481": 568, "563732": 462, "563e": [446, 456], "564": [288, 429, 446, 477], "564139576925786": 457, "5644": 471, "565": 429, "56506": 470, "565095": 441, "566e": 446, "56711": 493, "5686274509803928": 460, "56871": 470, "569": 429, "56922612": 568, "5692809e": 473, "56973": 493, "57": [33, 450, 452, 456, 467, 475, 531], "57011": 456, "571": 470, "57185": 504, "5719922e": 473, "571e": 470, "572": 447, "57233": 493, "57236": [450, 470, 483, 493], "572e": [444, 450], "573": [67, 446, 493], "57300957": 171, "5754970e": 473, "576": 477, "5760": 493, "57602": 470, "5763635e": 473, "5768262e": 473, "576e": 450, "577398": 483, "5779092e": 473, "578": [470, 568], "579": 470, "57944657408": 470, "57967": 470, "57e": 470, "58": [104, 123, 408, 411, 449, 454, 457, 466, 470, 474, 475, 477, 485, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536], "580": 569, "581": 447, "5819e": 448, "582": 429, "58332": 470, "5833e": 470, "5835918e": 473, "583e": 450, "584": [440, 468], "5842497e": 473, "584479": 557, "585": 470, "58540702": 97, "5867488e": 473, "58693695": 467, "58698": 470, "58752373464831": 466, "5882352941176467": 460, "588349": 523, "588e": 470, "58909": 466, "58926": 450, "5892966e": 473, "5895": 443, "58999": 233, "58e": [462, 470], "59": [83, 452, 462, 464, 470, 474, 481, 485, 491, 493, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "590": 446, "59000": [233, 562], "59001": 233, "59063": 470, "5908": 470, "590835686434463": 479, "591": [429, 470], "59100": [561, 562], "59123": [555, 556, 557], "5915030546513255": 463, "5915e": 470, "59200": 561, "59233": 478, "59235": [83, 482], "59240": 478, "5924e": 492, "59250": 478, "59254e": 441, "59265": 441, "593": 429, "59300": 467, "59344": 493, "59348": 493, "59365": 562, "594": 429, "59400008": 97, "59428": 470, "59451": 450, "5951631e": 473, "596": 477, "59696": 450, "596e": 470, "597774": 473, "59793": 470, "598": 493, "5985": 493, "5987726": 97, "599": [429, 460, 465, 477], "599625": 482, "59976": 470, "599999904632568": 470, "59d09m41": 470, "59e": [470, 477, 483], "5a": 58, "5e": [449, 459, 470, 477], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 102, 109, 111, 115, 124, 129, 138, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 157, 159, 160, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 233, 273, 360, 363, 376, 379, 384, 388, 389, 392, 397, 405, 408, 421, 423, 425, 431, 432, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 499, 516, 520, 526, 530, 550, 566, 568], "60": [67, 91, 150, 436, 447, 450, 470, 472, 483], "600": [447, 450, 455], "6000": 519, "6000000000000001": 478, "600661": 473, "60075": 473, "60090769e": 478, "600e": 446, "6018166e": 473, "601e": 470, "6024e": 492, "603": [477, 493], "6033": 441, "60350": 444, "603625": 473, "604": 446, "6046689e": 473, "6052e": 448, "60573": [558, 559, 560], "60603928": 478, "607843137254942": 460, "60e": 470, "61": [67, 418, 454, 470, 477, 483, 569], "610": 477, "61051": 483, "6105760e": 473, "611": [450, 568], "6116853": 470, "611e": 470, "6125": 485, "612a": 125, "612e": 450, "613114": 463, "6134e": 466, "613896": 529, "61422433": 97, "61453755944866": 457, "61489": 473, "615316": 493, "617835": 473, "6181862e": 473, "61862": 233, "619": 470, "6194453e": 473, "61975454954816": 491, "62": [452, 470, 484, 492], "620": 470, "620398": 473, "6205": 493, "62111": 450, "621499": 493, "6218742e": 473, "6219": 444, "622": [429, 444], "62258": 470, "6227766": 475, "62277660168379": 475, "6228e": 444, "623": [470, 493], "62320": 444, "623397": 473, "62341325": 475, "623413251903492": 475, "624": 477, "624122": 456, "624d": 24, "62503": 470, "62514628": 473, "6253652e": 473, "6259962e": 473, "6266": 493, "6267247": 493, "627450980392158": 460, "628": 429, "62842028": 471, "629": [440, 468], "63": [186, 187, 196, 199, 441, 446, 448, 471, 474, 484, 485, 491, 492, 514, 516, 517, 520], "630": [82, 477, 485, 491], "630709": 561, "6309576500000000": 493, "630e": 67, "631": [429, 454], "631155605": 458, "631159205": 458, "631170005": 458, "631173605": 458, "631177205": 458, "631180805": 458, "6318811e": 473, "632627": 493, "633": [85, 102, 105, 109, 110, 168, 447, 455, 474, 491, 492, 516], "63307": 83, "63308": [464, 492], "633083": 476, "63310241699219": 455, "63326": 450, "6333": 94, "63342": 493, "633600": 477, "635": [429, 440, 563], "63500212963": 470, "6354": 493, "63541": 482, "636688324856333": 466, "637x": 101, "638": 477, "639": 470, "6390": 441, "63902": 441, "6395e": 451, "6397": 493, "63e": 471, "64": [39, 67, 83, 124, 187, 411, 462, 470, 483], "640": 429, "6402822e": 473, "641": [429, 493], "64103": 482, "6413": 456, "6416": 466, "6417": 456, "6419578e": 473, "642": 493, "6423836025257211": 457, "6429005895278312": 479, "642e": 446, "643": [30, 31, 32, 33], "64323": 450, "64438": 483, "6444": 441, "645": 471, "6451": 456, "6464": 441, "647": 429, "647058823529452": 460, "6471115e": 473, "64794383e": 478, "648": 429, "648e": 67, "649": 429, "64987376": 97, "64e": 447, "65": [63, 396, 411, 413, 471], "650": 471, "6509": 441, "651": [470, 563], "651058": 493, "6514": 493, "652": 455, "6522806": 493, "652368617859867": 455, "653": [429, 443], "65357608e": 473, "654": [441, 470], "65412": 456, "654e": 470, "655": 450, "655283": 450, "6554088e": 473, "6556248e": 473, "6557": 450, "655e": [67, 447], "656": 568, "65603222222": 483, "65603794185": 470, "6561e": 454, "6577182894355391": 479, "658": 477, "658909145253801e": 493, "6589622747787678": 479, "659": [446, 450], "65e": 117, "66": [52, 53, 411, 414, 449, 455, 471, 472, 477, 480, 483, 491], "660": 429, "6604475": 456, "660e": 493, "660fals": 444, "661": 429, "66104": 441, "662": 470, "663": [446, 568], "663742400000000": 493, "664502403": 482, "664502405": 482, "664502408": 482, "664502409": 482, "664502414": 482, "664e": 450, "665": 486, "6652219e": 473, "6656409356335768": 457, "665737": 491, "66650390625": 443, "6666666666583865": 465, "6666666666666666": 557, "666666666666696": 460, "6678": 450, "668": [440, 486], "66813": 456, "66984341": 473, "669e": [138, 450], "66e": [454, 471], "67": [17, 411, 462, 470, 493], "670": 470, "6705024680435898": 297, "671616": 441, "6728": [470, 493], "673": [448, 458, 485, 555], "67304": 97, "67375": 441, "674067": 548, "67457342435522e": 493, "675": 446, "6768369882260035": 447, "6768e": 447, "677": 429, "6772235e": 473, "67759236e": 473, "678": [86, 457], "67824": 471, "6784": 568, "67861": 473, "678683717532289e": 447, "679": 429, "679478008080033e": 447, "6795e": 447, "67992517": 97, "67e21": 469, "68": [67, 83, 96, 149, 155, 157, 158, 159, 161, 228, 411, 441, 470, 472, 473, 475, 482, 493, 569], "680": 477, "6803": 493, "6812310184489": 466, "68125": 473, "6823": 441, "684": 168, "68542112": 97, "68628538586": 471, "687": 477, "687214": 474, "687500": 474, "687685": 470, "68e": [442, 454, 470], "69": [102, 438, 450, 462, 470, 471], "690": 67, "690557685186": 470, "6909290e": 473, "691": 470, "691299354164691": 457, "69138": 450, "691680": [102, 471, 477], "692": 450, "692e": 447, "69314486": 476, "693812": 491, "693940": 454, "6953125": 471, "69543812": 97, "6958e": 448, "6959369197218669": 479, "695e": 450, "697317": 483, "69735": 473, "697e": 444, "697fals": 444, "6985": 443, "6992": 456, "6e": [444, 470, 477], "6h": 484, "6th": 410, "7": [30, 31, 38, 52, 53, 67, 87, 91, 124, 130, 137, 168, 171, 198, 206, 231, 362, 363, 372, 376, 377, 384, 388, 389, 392, 408, 412, 413, 415, 416, 422, 423, 428, 429, 430, 432, 433, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 520, 524, 525, 561, 568, 569], "70": [67, 91, 102, 447, 456, 470, 471, 568], "700": [380, 459, 476], "70000000e": 478, "7000e": 478, "70016": 456, "7007": 456, "701": 516, "70181": 138, "702": [464, 470, 483, 492], "702e": 450, "703": 408, "70358483e": 478, "704": 477, "70428": 493, "70437": 473, "705": 493, "70546": 450, "70634e": 441, "706e": [455, 470], "707t": 282, "708": [446, 447], "709": 429, "7097381e": 473, "70e": 478, "71": [33, 447, 449, 477, 569], "710": 429, "71067811865478": 470, "7116851": 478, "711e": 450, "712": 457, "71220672": 471, "7123895e": 473, "712e": [464, 492], "713": [429, 470], "7132e": 493, "713338": 551, "714": 470, "715": 493, "716": [96, 297, 298, 475], "716062": 482, "71693826": [465, 479, 507], "717": 470, "71795506": 493, "7184": 493, "719": [429, 477], "7190994e": 473, "71944e": 441, "7195": 470, "719e": 470, "72": [415, 443, 470, 474, 493], "720": [459, 470], "7200": 462, "722": 477, "72217": 493, "722557505166": 470, "723": 450, "723154": 526, "723e": 470, "7240965e": 473, "725": 470, "725490196078432": 460, "727": 477, "72775": 493, "7284447e": 473, "729e": 450, "73": [441, 493], "7303": 493, "731": 429, "731589446928548e": 491, "732e": [67, 470], "733": [67, 429], "734": 493, "7350250533013533": 479, "7350380e": 473, "7351418e": 473, "735e": 470, "736": [440, 446, 481, 568, 569], "737": 446, "738": [429, 470], "7385727e": 473, "739": 429, "7395744e": 473, "739e": 67, "73e": [470, 491], "74": [441, 452, 493], "740": 429, "742": 477, "743e": [442, 470], "74427": 456, "74465974e": 473, "74479": 450, "745098039215687": 460, "74542e": 441, "746": [429, 468], "7471700e": 473, "7479085e": 473, "747e": 462, "748": 470, "748259": 454, "75": [67, 365, 442, 446, 493], "750": 569, "751643891117176": 491, "75267735": 493, "753": [429, 440, 447, 453], "7537086e": 473, "754": [429, 483], "75408483": 493, "7552356374945": 466, "7555": 474, "7559": 493, "756": 470, "7567": 441, "7580410e": 473, "759": 429, "7596682e": 473, "75e": [470, 492], "76": [457, 475], "760": [440, 491, 494], "7613": 408, "761c": 28, "762": 429, "762199399999986": 531, "763": 429, "7637308880733709": 479, "7638": 450, "763e": 450, "76419591747674": 466, "7647": 493, "764705882352942": 460, "76473": 450, "7652512e": 473, "766": [429, 450], "7660168382": 470, "766d": 482, "767": 429, "76739": 470, "768000": [102, 471], "768048": 97, "7681656e": 473, "7681e": 448, "76837444": 467, "7684028": 493, "7692170e": 473, "76e": 477, "770": 67, "771667": 485, "77174": 450, "7718272408581743": 297, "771e": 470, "772": [429, 441], "77206": 493, "77218": 450, "773": [101, 470], "7733e": [442, 470], "77351": 450, "773778": 491, "774": [429, 462], "7743835449219": 446, "774e": 470, "775": [67, 477], "7752246942468283": 456, "7755386e": 473, "7760": 493, "7763307219821931": 297, "7765957e": 473, "77678": 441, "7769775": 482, "777": 429, "7771617763704126": 297, "77751797": 97, "777e": [67, 444], "777l": 35, "778": [429, 446, 470], "77827941": 475, "778279410038923": 475, "779": [447, 470], "7796942": 493, "779e": 446, "77e": [449, 470], "78": [449, 475, 476, 484, 492], "780": [31, 124], "7800e": 446, "7804888e": 473, "78083": [137, 138], "780e": 124, "78188": 450, "78188096": 97, "782": 483, "7827941": 475, "78279410038923": 475, "782e": 462, "783": [429, 470, 493], "78332719": 456, "78333": 456, "783587001383003": 482, "783e": 456, "784": [430, 447], "7843137254901955": 460, "78499999999997": 527, "785": 527, "7853981633974483": 560, "787": [67, 168, 466], "787169465401243e": 464, "7875405607868806": 479, "7876233e": 473, "788": 470, "7887840e": 473, "788e": 470, "789": 429, "78910994": 97, "7894": 456, "78952750835169": 466, "78e": 477, "79": [443, 470], "790": 429, "791": 430, "7913e": 446, "7922": 441, "793": [430, 450], "793162": 546, "793e": 466, "79432823": 478, "79469899": 456, "79470": 456, "794e": 450, "796": [430, 477], "797": 430, "7972": 474, "798": 430, "798218": 441, "799": 446, "7990194e": 473, "7997221e": 473, "799999952316284": 470, "7c": 475, "7d": 470, "7e": [470, 477, 478], "7e955f": 411, "7t8dko1n": 478, "7ytn1frv": 454, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 102, 105, 109, 110, 111, 115, 127, 138, 142, 143, 192, 199, 231, 233, 299, 372, 376, 379, 380, 389, 412, 413, 416, 418, 419, 423, 424, 425, 428, 429, 430, 433, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 500, 502, 511, 516, 520, 524, 533, 544, 552, 568], "80": [171, 448, 449, 450, 471, 475, 483, 516, 543], "800932": 470, "801": [493, 516], "801668796295": 470, "802": [477, 493], "803": [446, 450, 531], "8031431e": 473, "8037638e": 473, "803921568627494": 460, "804": 477, "804492": 462, "80492": 138, "80571": 137, "8062607e": 473, "80683246": 473, "8071": 450, "807201": 493, "8075": [470, 493], "8075185": 470, "808": 466, "8084e": 454, "808687936570502e": 472, "80871364": 97, "8090746": 482, "809505": 470, "80982039": 473, "80e": 442, "81": [419, 442, 464, 533], "810": [430, 470], "810000": 462, "8100e": 442, "810e": 470, "811": 430, "8115337251905373e": 472, "812": 430, "812075194992371e": 472, "8122169596532167e": 472, "8122425483643125e": 472, "8122e": 472, "812358724314062e": 472, "8129257829574434e": 472, "812951371538087e": 472, "813": 430, "814": 430, "8150": 493, "8157971601581226e": 472, "816": 430, "8160964882165554": 297, "81699e": 441, "816e": 470, "817025": 558, "818151": 539, "818388e": 493, "81847286": 467, "818e": 444, "819": 470, "81e": 533, "82": [67, 411, 440, 454, 470, 492, 520], "820": 430, "8205513": 482, "820562952023891": 297, "8222980e": 473, "823": 446, "82352941176471": 460, "824": [133, 430, 477], "8241471833009617": 479, "824833": 536, "825": [430, 441, 457, 470], "8256": 493, "826": 430, "826414166666": 94, "827": 430, "8272": 495, "82739": 450, "827e": 138, "8290458e": 473, "8293": 493, "82946153": 493, "82e": 455, "83": [30, 67, 83, 85, 94, 102, 105, 109, 110, 168, 171, 186, 187, 196, 199, 446, 447, 448, 450, 455, 464, 471, 474, 475, 476, 484, 485, 491, 492, 511, 514, 516, 517, 520], "830": 430, "8300": 493, "831": 430, "832": 430, "83242471": 473, "833": [430, 447, 450], "833333333336": 467, "834": 430, "8341884287660133": 479, "8349780e": 473, "835": 430, "835e": [447, 456], "835fals": 444, "836": [430, 467, 470], "836028": 544, "836731": 470, "8369650e": 473, "837": [430, 477], "8377268e": 473, "838": 450, "8383396349722769": 297, "839891": 452, "84": [24, 411, 446, 448, 456, 470, 477, 520], "840": [430, 450], "841": 470, "84196311": 97, "842": [430, 470], "84233": 450, "842x": 139, "843": [59, 441, 467], "843137254902004": 460, "843863242310971e": 491, "843e": 67, "8441040e": 473, "844770648146": 94, "8449575657133206": 297, "845": 431, "84529": 470, "8455480e": 473, "845693": 441, "846": [450, 470, 568], "847": 430, "8475576e": 473, "8475650e": 473, "84e": 454, "85": [87, 91, 437, 456, 524, 525], "851": 430, "85157506": 493, "8515948e": 473, "85188496e": 473, "85202": 493, "85287": 483, "852e": 470, "854": 430, "854166666664": 467, "85416667": 465, "85469291": 97, "855": 430, "85527": 456, "85527359": 456, "8555500e": 473, "85624": 451, "85625": 451, "8568": 493, "856e": 470, "8570719e": 473, "85722435185": 470, "858": 430, "858e": 470, "859": [430, 446], "85900": 456, "859000": 554, "85900392": 456, "85925": 493, "8593054": 470, "859e": 450, "85e": 470, "86": [444, 446, 447, 450, 475, 493, 504], "860": 470, "861": 493, "86111111": 465, "861150": 444, "8613613e": 473, "86178": 137, "8620": 462, "8623": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "862745098039234": 460, "864": [430, 493], "865": [430, 450], "86676": 483, "8669": 441, "8672": 456, "86793518066406": 443, "868": [430, 440, 466, 468, 470], "86831929": 97, "8699": 441, "8699165e": 473, "87": [67, 456, 475], "870": [67, 430], "8704": 450, "871": 430, "872": [430, 450], "873": 447, "8733348": 482, "8736082200157": 457, "873659477745188": 479, "874": 443, "875": 430, "876": [440, 461, 477], "8769240e": 473, "876e": 450, "87710186": 97, "877563": 470, "878": [470, 477], "87897": 456, "87897418": 456, "8799800e": 473, "87e": 21, "88": [411, 433, 448, 456, 457, 470, 475, 493], "880e": 450, "881": [430, 441, 450], "88113384": 452, "8815212313941426": 479, "882": 67, "882352941176466": 460, "883": 430, "8834862e": 473, "883e": 67, "884": 430, "88470839": 478, "885": 430, "886": 470, "8865": 493, "88781": 450, "888": 430, "8885138e": 473, "889": 470, "8893600e": 473, "88e": [444, 470], "89": [33, 475], "8908866e": 473, "8909e": 466, "890e": 67, "892": 477, "89243456": 493, "8926": 493, "89287": 441, "893": 430, "894": 444, "8943121e": 473, "894424": 562, "89492144e": 472, "895": [466, 467], "8954039e": 473, "89595846": 478, "897": [440, 445, 494], "89709472": 493, "898": 430, "8986348363207728": 479, "89873": 456, "8989213": 456, "898e": [450, 470], "899": [67, 452], "899154": 452, "8999": 456, "899a": 273, "89e": 471, "8e": [444, 454, 457, 459, 477, 483, 552], "9": [16, 31, 33, 35, 67, 83, 84, 87, 90, 91, 104, 123, 137, 192, 231, 233, 329, 336, 369, 376, 377, 381, 389, 408, 414, 416, 427, 430, 432, 435, 437, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 519, 526, 530, 531, 532, 539, 542, 555, 563, 568], "90": [57, 67, 395, 449, 455, 456, 470, 475, 478, 495], "900": 470, "9002269877996247": 467, "900269": 473, "9023670e": 473, "90242058e": 471, "9032163": 86, "904": 493, "905": 470, "9050e": 466, "9053655e": 473, "9053906e": 473, "906": [430, 470], "90605275e": 483, "90685": 450, "907": 470, "9074812e": 473, "9077294": 482, "90e": [102, 447, 454, 471], "91": [449, 475, 480, 520], "911": 430, "911552434768802e": 464, "912": 470, "912525e": 493, "912779907405": 470, "913196574074": 464, "913e": 450, "914": 67, "914557": 530, "915": 470, "91507": [102, 471], "915171": 542, "91612243652344": 443, "9163195e": 473, "91719": 471, "918": 67, "918365": 470, "919": 430, "919e": 470, "91e": 477, "92": [138, 449, 450, 475, 482], "920": 446, "920199": 451, "9205875e": 473, "921": 447, "9215375e": 473, "92234009259": [408, 464], "924": 447, "9240e": 478, "92490": 450, "924e": 462, "925106": 456, "9269494e": 473, "9277492e": 473, "928": 470, "9280475e": 473, "929": [441, 447], "92960065298276": 491, "93": [67, 122, 124, 449, 450, 475, 482], "93026": 470, "9303": [470, 493], "931": 295, "93128e": 441, "932": 430, "93271046296": 464, "933": 430, "9332549000000": 493, "9343": 441, "935826709880043": 463, "93702": 483, "9382336444241555": 479, "938e": [456, 470], "939": [284, 290], "9391360e": 473, "93988308": 97, "93e": 470, "94": [449, 470, 475, 482, 491, 493], "9404": 462, "940e": 470, "940fals": 444, "94111838": 97, "941176470588236": 460, "94186555556": [408, 464], "943282347242818": 491, "9441e": 451, "9453950989269149": 479, "9462": 456, "946923": 268, "94722599": 456, "94723": 456, "947e": 450, "948683": 441, "9489822e": 473, "949": 477, "9499210e": 473, "94e": [456, 470], "95": [33, 67, 149, 155, 157, 158, 159, 161, 215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 449, 450, 456, 462, 470, 471, 472, 475, 476, 482, 524, 569], "950": 430, "9500979841335693": 297, "95024543e": 472, "950e": 446, "952": 67, "9529719e": 473, "953": 477, "953829": 447, "95421509259": 464, "95451985e": 124, "9546285068162436": 479, "9552300213415": 466, "95615": 441, "957": 67, "9580e": 448, "95883": 493, "959066126854": 466, "959198": 470, "959d": [52, 53], "96": [411, 442, 449, 471, 475, 533], "9606540e": 473, "960784313725491": 460, "9608912e": 473, "9619812963": 464, "966": 430, "96602": 451, "96719680": 452, "967546": 450, "9677107409819438": 297, "968": [446, 456], "96814": 493, "96833546296": [470, 483], "968488": 295, "969": 470, "9692e": 442, "96e": 444, "96r": 475, "97": [449, 470, 473, 479, 492], "97003": 493, "97054": 450, "970e": 470, "97116": 456, "973": 470, "9730e": 455, "97369425926": 464, "974e": 470, "975": 430, "97529": 137, "97596": 450, "976": 430, "97749": 456, "97749371": 456, "9776920e": 473, "977e": 462, "978": [440, 450, 453], "978395": 447, "979": [67, 430, 475], "97934": 450, "97978": 83, "97e": 470, "98": [83, 339, 443, 448, 449, 450, 454, 464, 466, 473, 491], "980": 67, "9803921568627443": 460, "98049": 450, "98149518519": 464, "9816452e": 473, "982075849517389e": 478, "98258": 450, "9833462074166": 470, "9834338e": 473, "98359211196148547": 456, "98429": 450, "9845": 441, "9847406e": 473, "984872": 527, "984e": 450, "985": [430, 444], "985502122122975": 479, "9868440049211211": 491, "9876": 441, "98772": 137, "988": [430, 440, 454, 461, 470, 477], "988409870698051e": 52, "9890": 493, "9892e": 462, "98e": 470, "99": [339, 449, 450, 451, 462, 492, 493], "9901e": 466, "991": 470, "9910796e": 473, "9912648e": 473, "9912712e": 473, "9924e": 466, "993": 443, "9931": 493, "994": 430, "994e": 470, "995": 477, "995029": 534, "9952623149688797": 491, "9969731e": 473, "997": 430, "9977859e": 473, "9978": 493, "998": 457, "99848e": 483, "999": [50, 158, 161, 440, 470, 481], "99919925926": 233, "99993896484375": 446, "9999912037958": 456, "999999": 470, "99999994": 86, "9999999995": 470, "9999999997835": 443, "999999999997": 458, "9999999999977": 470, "9999999999978": 465, "9999999999998": 470, "99999999999994": 470, "99999999999999": [449, 470], "99e": 470, "9e": [442, 444, 470, 552], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 122, 123, 124, 132, 137, 138, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 210, 212, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 281, 283, 291, 299, 308, 361, 362, 363, 365, 366, 373, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 410, 412, 416, 417, 418, 419, 420, 423, 425, 426, 429, 430, 431, 432, 434, 436, 437, 438, 441, 443, 448, 450, 454, 456, 457, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 490, 492, 493, 495, 503, 504, 505, 507, 508, 516, 517, 519, 520, 522, 524, 561, 562, 565, 566, 569], "AND": [476, 477], "And": [273, 372, 375, 390, 392, 398, 403, 443, 444, 446, 447, 454, 458, 460, 466, 471, 472, 475, 476, 478, 482, 484, 491, 492, 493], "As": [83, 299, 329, 372, 373, 375, 380, 384, 385, 386, 388, 390, 398, 399, 401, 408, 413, 432, 441, 442, 443, 446, 447, 448, 450, 451, 452, 456, 458, 459, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 478, 480, 483, 485, 491, 493, 507, 516, 569], "At": [257, 386, 389, 398, 399, 402, 416, 458, 475, 482, 512, 565], "But": [372, 377, 380, 386, 391, 399, 402, 408, 432, 446, 447, 472, 480, 482, 491, 567], "By": [19, 20, 26, 50, 65, 87, 91, 101, 102, 105, 109, 110, 121, 125, 129, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 165, 168, 175, 185, 187, 188, 189, 191, 197, 200, 201, 213, 214, 216, 217, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 242, 243, 244, 246, 247, 248, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 369, 372, 398, 399, 400, 417, 418, 420, 458, 459, 463, 465, 472, 475, 480, 492, 514, 518, 524, 525, 526, 570], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 105, 109, 110, 117, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 145, 146, 147, 153, 158, 161, 168, 173, 175, 178, 179, 181, 182, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 241, 242, 243, 244, 245, 246, 248, 249, 254, 255, 256, 258, 259, 261, 262, 263, 265, 269, 270, 282, 284, 288, 290, 296, 302, 317, 371, 372, 373, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 413, 414, 415, 417, 418, 419, 420, 423, 430, 434, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 460, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 487, 491, 492, 493, 495, 502, 503, 505, 507, 517, 519, 520, 525, 530, 562, 566, 567, 569, 570, 571], "IN": [92, 100, 241], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 119, 121, 122, 123, 124, 125, 127, 129, 132, 136, 137, 140, 145, 146, 147, 153, 156, 158, 161, 162, 164, 165, 168, 170, 171, 174, 175, 178, 179, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 206, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 280, 296, 299, 311, 312, 317, 358, 361, 365, 366, 367, 368, 372, 373, 374, 375, 377, 379, 380, 385, 386, 388, 389, 390, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 431, 432, 433, 441, 443, 444, 446, 448, 449, 451, 454, 456, 459, 462, 464, 465, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 493, 505, 507, 518, 520, 526, 528, 541, 567, 568, 569, 570], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 101, 103, 108, 124, 145, 164, 187, 189, 192, 195, 201, 209, 211, 269, 280, 312, 372, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 408, 413, 414, 415, 416, 417, 418, 419, 420, 423, 434, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 483, 484, 491, 492, 493, 503, 505, 507, 512, 515, 516, 517, 519, 520, 521, 524, 525, 530, 543, 562, 565, 566, 567, 568, 569, 570, 571], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 109, 110, 111, 113, 115, 122, 137, 145, 149, 156, 157, 158, 159, 161, 171, 174, 178, 179, 184, 188, 189, 191, 193, 196, 197, 200, 201, 203, 213, 214, 217, 220, 221, 223, 224, 225, 229, 233, 235, 236, 238, 242, 244, 246, 253, 257, 258, 260, 261, 262, 263, 266, 270, 282, 286, 288, 289, 307, 321, 326, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 407, 409, 413, 414, 415, 416, 420, 423, 425, 426, 427, 432, 434, 436, 437, 438, 441, 447, 452, 455, 457, 459, 462, 463, 467, 470, 471, 472, 474, 475, 476, 478, 480, 482, 483, 484, 485, 491, 492, 493, 495, 496, 503, 504, 506, 507, 511, 512, 514, 516, 520, 534, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551, 564, 565, 566, 567, 568, 569, 571], "Its": [145, 384, 398, 399, 423, 425, 460, 465, 480, 492, 509, 510, 511, 513], "NOT": 476, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 383, 393, 396, 397, 431, 433, 439, 460, 470, 472, 474, 475, 493], "Not": [105, 109, 110, 190, 196, 198, 380], "ON": [102, 105, 131, 175, 176, 177, 185, 370, 378, 425, 441, 442, 446, 449, 452, 456, 464, 465, 467, 472, 474, 480, 507, 516, 566, 568, 570], "OR": [102, 109, 471, 476, 477], "Of": [372, 375, 408, 454, 471, 475, 483, 567, 570], "On": [59, 163, 169, 170, 173, 282, 289, 295, 372, 373, 378, 380, 387, 388, 401, 403, 404, 405, 406, 427, 454, 455, 472, 487, 569], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 102, 105, 109, 110, 219, 241, 325, 372, 373, 378, 380, 381, 382, 383, 386, 388, 389, 390, 398, 437, 443, 447, 452, 464, 474, 475, 476, 491, 493, 516, 520, 543, 567, 569], "Ones": 299, "Or": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 373, 391, 392, 447, 454, 471, 475, 482, 483, 505], "Such": [384, 473, 511], "That": [16, 19, 20, 84, 90, 104, 123, 206, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 372, 373, 377, 386, 389, 392, 472, 493, 567], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 165, 169, 170, 174, 175, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 273, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 295, 299, 311, 317, 319, 320, 323, 339, 355, 356, 358, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 409, 412, 413, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 487, 491, 492, 493, 495, 496, 497, 498, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 526, 528, 529, 530, 533, 539, 541, 542, 543, 552, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572], "Their": 476, "Then": [67, 102, 107, 109, 375, 377, 382, 385, 387, 388, 389, 390, 396, 405, 443, 446, 454, 455, 458, 462, 464, 472, 476, 478, 480, 492], "There": [87, 91, 137, 372, 373, 377, 378, 379, 381, 386, 387, 388, 389, 390, 391, 392, 393, 396, 399, 402, 404, 405, 431, 456, 460, 463, 469, 470, 471, 472, 473, 474, 476, 477, 484, 495, 503, 504, 507, 520], "These": [77, 95, 193, 272, 372, 373, 377, 378, 383, 385, 386, 387, 388, 392, 393, 398, 415, 417, 418, 419, 423, 431, 437, 441, 455, 457, 458, 463, 466, 469, 471, 473, 475, 478, 479, 484, 487, 495, 512, 517, 519, 520, 568, 569, 570], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 104, 108, 121, 123, 125, 129, 187, 199, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 272, 282, 362, 363, 374, 375, 379, 380, 383, 384, 385, 387, 388, 393, 394, 395, 396, 397, 398, 402, 403, 405, 407, 408, 409, 413, 414, 415, 418, 419, 423, 425, 431, 432, 434, 437, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 487, 491, 493, 503, 504, 505, 508, 512, 514, 516, 517, 524, 565, 567, 568, 569], "With": [83, 372, 381, 382, 398, 419, 432, 480, 503, 569], "_": [102, 109, 127, 229, 248, 372, 386, 396, 398, 446, 449, 452, 469, 470, 472, 477, 480, 503, 516], "_0": [50, 51], "_1": [105, 110, 504], "_2": [105, 110], "__all__": 372, "__array__": 299, "__array_ufunc__": [448, 458, 485, 555], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 311, 378, 383, 400, 419], "__class__": [372, 396, 469, 501], "__dict__": [16, 84, 90, 104, 123, 372], "__enter__": 350, "__eq__": 425, "__exit__": 350, "__fields__": [16, 84, 90, 104, 123, 399], "__getitem__": [382, 383, 384], "__init__": [16, 84, 90, 104, 123, 196, 269, 372, 378, 384, 396, 434], "__int__": 317, "__len__": 382, "__main__": [252, 372, 480, 489, 567], "__name__": [372, 452, 464, 465, 466, 469, 489, 501, 567], "__neq__": 425, "__pydantic_extra__": [16, 84, 90, 104, 123], "__pydantic_fields_set__": [16, 84, 90, 104, 123], "__repr__": [372, 418, 432], "__str__": [372, 384, 399, 415], "__subclasses__": 469, "__version__": 407, "_basemodel__context": [16, 84, 90, 104, 123], "_build": [373, 402, 507], "_check_interv": 437, "_compute_flux_spati": 423, "_covari": [219, 241], "_data": 396, "_dom_class": [454, 462, 475, 491, 492], "_energy_t": 396, "_errn": [125, 126, 129, 130], "_errp": [125, 126, 129, 130], "_evaluate_timevar_sourc": 437, "_f_cash_root_cython": 294, "_factr": 472, "_fields_set": [16, 84, 90, 104, 123], "_i": 127, "_k": [102, 109, 503], "_l": 503, "_lat": 372, "_lon": 372, "_map": 365, "_model": 122, "_new_attribut": 372, "_old_attribut": 372, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 104, 123], "_phi": 372, "_prior": 400, "_propagate_error": 422, "_reco": 372, "_repr_html_": 372, "_row_index": 69, "_sample_coord_time_energi": 437, "_scan": 472, "_time_group": 396, "_time_t": 396, "_true": 372, "_type": [400, 480], "_types_namespac": [16, 84, 90, 104, 123], "_was_": [16, 84, 90, 104, 123], "_wc": 531, "_weight": 400, "a_": [105, 110, 148, 509, 512, 569], "a_off": 569, "a_on": 569, "a_scan": 480, "aa": [87, 91, 299, 398], "aaguasca": 434, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 117, 125, 139, 148, 201, 209, 211, 238, 272, 273, 282, 289, 469, 470], "abc": [18, 56, 99, 120, 167, 186, 191, 474], "abcmeta": 474, "abdalla2018": [516, 517, 566], "abeysekara": 59, "abil": [396, 480], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 382, 387, 390, 443, 462, 464, 465, 480, 487, 567], "about": [11, 13, 16, 84, 90, 104, 123, 143, 148, 228, 233, 329, 372, 375, 377, 381, 388, 389, 391, 392, 393, 397, 398, 400, 401, 402, 407, 408, 427, 428, 432, 433, 434, 442, 444, 450, 451, 452, 455, 456, 458, 470, 473, 475, 478, 483, 492, 493, 503, 504, 567, 570], "abov": [29, 44, 52, 53, 83, 121, 123, 124, 127, 131, 132, 137, 138, 163, 198, 361, 363, 372, 373, 378, 381, 382, 384, 386, 388, 389, 390, 391, 392, 396, 404, 405, 408, 441, 456, 458, 459, 460, 464, 467, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 491, 501, 503, 504, 511, 514, 520, 566, 567, 568, 569, 570], "abramowski": 148, "abruptli": [372, 397], "abs_path": 307, "absenc": [387, 452, 474, 476, 516, 568], "absolut": [82, 91, 106, 142, 143, 144, 145, 148, 150, 152, 155, 160, 188, 189, 191, 193, 197, 200, 201, 303, 329, 349, 353, 505], "absolute_tim": 571, "absopt": 390, "absorb": [270, 382, 395, 430, 533], "absorbedspectralmodel": [417, 430], "absorbt": 395, "absorpt": [221, 390, 420, 430, 440, 445, 487, 503, 505, 521, 553, 564], "abstract": [56, 57, 59, 99, 120, 159, 167, 172, 186, 188, 191, 200, 282, 383, 419, 519], "abstractsetintstr": [16, 84, 90, 104, 123], "acada": 398, "academ": [133, 295], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 105, 106, 110, 121, 122, 124, 163, 180, 185, 187, 188, 189, 191, 199, 200, 201, 219, 241, 283, 370, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 424, 428, 437, 441, 442, 447, 448, 449, 452, 456, 459, 471, 474, 475, 483, 503, 519, 525, 543, 568, 569], "acceptance_off": [105, 106, 110, 121, 122, 124, 163, 173, 384, 441, 443, 446, 449, 452, 503, 569], "acceptance_on": [121, 122, 124], "acceptang": 121, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 88, 91, 102, 156, 186, 187, 196, 199, 289, 307, 372, 380, 381, 382, 383, 385, 388, 396, 402, 404, 407, 412, 413, 420, 427, 428, 430, 431, 437, 438, 444, 446, 447, 448, 454, 470, 472, 473, 477, 478, 482, 485, 491, 492, 493, 502, 507, 518, 519, 520, 565], "accessor": 475, "accident": [483, 567], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 102, 105, 109, 110, 117, 122, 140, 146, 156, 163, 187, 193, 209, 211, 296, 361, 382, 383, 386, 387, 390, 396, 398, 417, 426, 438, 452, 464, 471, 474, 478, 479, 487, 503, 504, 507], "accordingli": [384, 398, 414, 420, 476], "account": [102, 105, 109, 110, 121, 122, 165, 181, 219, 241, 257, 281, 283, 289, 347, 380, 385, 388, 396, 398, 419, 436, 438, 440, 441, 443, 445, 446, 448, 452, 454, 460, 466, 467, 472, 474, 476, 487, 492, 503, 505, 564, 568, 569], "accur": [390, 433, 454, 472, 514], "accuraci": [386, 472, 507], "aceptance_off": 384, "acero": [390, 413, 415, 417, 420, 423, 425, 430, 432, 438], "achiev": [16, 84, 90, 104, 117, 123, 163, 362, 363, 372, 381, 382, 383, 384, 385, 386, 388, 395, 398, 420, 475, 478, 479, 517], "acknowledg": [375, 398, 409], "acquir": 408, "acquisit": 566, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 117, 372, 381, 384, 402, 457, 466, 477, 483, 503, 519, 528, 566], "act": [91, 388, 477, 530], "action": [163, 377, 382, 388, 398, 402, 423, 466], "activ": [91, 289, 375, 389, 403, 404, 406, 407, 408, 417, 434, 463, 507], "actual": [176, 347, 348, 349, 371, 372, 373, 377, 381, 383, 385, 387, 388, 396, 397, 399, 401, 449, 459, 462, 465, 471, 472, 474, 475, 476, 480, 483, 484, 492, 493, 514, 516, 566, 567, 569, 571], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 102, 104, 105, 109, 110, 113, 114, 116, 123, 124, 188, 189, 191, 196, 197, 200, 201, 372, 373, 375, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 396, 398, 412, 413, 414, 416, 417, 418, 420, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 448, 454, 455, 473, 474, 477, 478, 479, 480, 484, 503, 520, 570], "adapt": [117, 163, 206, 381, 382, 385, 386, 391, 392, 394, 395, 398, 401, 408, 413, 414, 416, 417, 418, 420, 421, 423, 426, 429, 430, 432, 434, 436, 437, 438, 471, 473, 475, 476, 514, 517], "adaptiveringbackgroundestim": [173, 378], "adaptiveringbackgroundmak": [166, 417, 517], "adass": 392, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 83, 84, 87, 88, 90, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 142, 143, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 161, 165, 188, 189, 191, 195, 197, 200, 201, 207, 219, 241, 257, 296, 341, 360, 369, 371, 372, 373, 375, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 398, 400, 401, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 449, 454, 455, 458, 462, 464, 467, 471, 473, 474, 475, 476, 478, 480, 482, 493, 497, 498, 507, 520, 535, 567, 570], "add_artist": [478, 524, 525], "add_cbar": [102, 105, 109, 110, 124, 142, 143, 145, 148, 149, 150, 155, 156, 157, 159, 188, 189, 191, 197, 200, 201, 360, 450, 451, 452, 454, 456, 462, 467, 469, 471, 473, 474, 475, 477, 478, 483, 484, 491, 492, 520, 523, 524, 525, 528, 529, 531], "add_column": [87, 91], "add_enabled_unit": [441, 449, 451, 454, 456, 462, 466, 482], "add_index": [87, 91], "add_loc": 372, "add_row": [87, 91], "add_subplot": 360, "addit": [16, 19, 20, 26, 43, 84, 87, 88, 90, 91, 102, 104, 105, 109, 110, 113, 121, 123, 125, 130, 160, 188, 189, 191, 194, 197, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 372, 375, 376, 377, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 396, 397, 398, 399, 401, 402, 403, 404, 405, 414, 415, 417, 419, 420, 423, 424, 431, 432, 434, 437, 438, 444, 448, 460, 467, 470, 471, 472, 475, 477, 478, 480, 482, 483, 492, 493, 503, 505, 507, 514, 519, 520, 564, 570], "addition": [130, 384, 471, 472, 475, 477, 478], "address": [381, 384, 385, 386, 388, 398, 480, 506], "adequ": 196, "adher": 375, "adjac": [140, 193, 423, 465, 475, 516], "adjust": [16, 67, 188, 189, 191, 197, 200, 201, 381, 383, 395, 447, 463, 471, 478, 479, 491, 507, 514], "admit": 392, "adonath": 378, "adopt": [37, 385, 388, 393, 448, 458, 459, 469], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 125, 148, 238, 272, 273, 282, 289], "adult": 372, "advanc": [384, 388, 389, 392, 400, 404, 473, 475, 507, 566, 567], "advantag": [380, 386, 389, 396, 423, 475, 480, 543, 567], "advanteg": 384, "advertis": 401, "advic": [372, 398], "advis": [373, 398, 472, 480, 487], "advoc": 372, "aeff": [16, 82, 87, 88, 105, 110, 148, 174, 182, 382, 384, 385, 419, 420, 443, 446, 447, 448, 451, 452, 454, 456, 465, 473, 474, 482, 484, 485, 491, 492, 509, 514, 516, 517, 566], "aeff2d": 147, "aeff_2d": [82, 87, 148, 482, 485], "aeff_3d": 473, "aeff_ev": 473, "aeff_new": 473, "aeff_perc": [174, 443, 446, 447, 456, 465, 474, 484, 516], "aegi": 221, "af": 368, "affect": [372, 380, 384, 386, 397, 414, 415, 426, 435, 442, 480], "affili": [386, 398, 434], "afjzwjv9": 474, "afmhot": [477, 493], "aforement": 398, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 102, 104, 105, 109, 123, 158, 161, 289, 311, 329, 353, 356, 372, 375, 377, 380, 381, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 408, 412, 419, 421, 422, 423, 425, 431, 433, 434, 435, 444, 454, 463, 465, 472, 475, 477, 482, 484, 485, 507, 567, 571], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 303, 372, 497], "again": [102, 105, 109, 110, 158, 375, 382, 384, 386, 388, 393, 399, 403, 418, 419, 422, 429, 434, 444, 446, 447, 454, 459, 460, 475, 478, 480, 483, 491, 493, 520, 567], "against": [16, 84, 90, 104, 123, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 199, 200, 201, 373, 375, 389, 395, 402, 470, 483, 491, 502, 505], "agent": 388, "agglom": 13, "aggreg": 399, "agil": 385, "agn": [133, 287, 386, 446, 463, 464, 466, 482], "agnost": 472, "ago": 379, "agre": [190, 193, 375, 377, 386, 398], "agreement": [372, 375, 393, 467], "aguasca": [425, 434, 435, 436, 437], "aharonian": 457, "ahead": [386, 412], "ahelp": 206, "aim": [381, 382, 398, 454, 458, 469, 479, 495, 566], "air": 482, "ait": [187, 188, 189, 489], "aitoff": 386, "aka": 493, "al": [26, 33, 59, 101, 133, 148, 221, 288, 289, 295, 382, 450, 457, 463, 495, 566], "albert": 566, "albert2007": 566, "alexi": [420, 423], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 117, 132, 163, 206, 282, 372, 378, 384, 385, 386, 391, 399, 415, 420, 428, 429, 430, 450, 463, 472, 484, 505, 519, 565, 569], "alia": [16, 56, 84, 90, 104, 123, 375, 493], "alias": [16, 56, 84, 90, 104, 123], "align": [87, 91, 100, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 157, 159, 160, 187, 188, 189, 191, 193, 197, 199, 200, 201, 372, 473, 476, 478], "alisha": 425, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 102, 103, 104, 105, 107, 108, 109, 110, 121, 122, 123, 124, 125, 129, 130, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 162, 168, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 279, 344, 345, 346, 347, 348, 349, 359, 368, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 446, 447, 448, 451, 452, 454, 456, 457, 458, 462, 464, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 497, 503, 505, 507, 516, 518, 519, 520, 521, 543, 564, 567, 568, 569], "all_quant": [122, 124], "allclos": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 188, 189, 190, 191, 193, 197, 198, 200, 201, 347], "alloc": [189, 197, 201], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 104, 117, 122, 123, 124, 131, 132, 158, 161, 187, 192, 194, 322, 372, 373, 375, 377, 378, 379, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 414, 416, 417, 418, 419, 420, 423, 425, 432, 433, 434, 437, 441, 446, 457, 466, 471, 472, 473, 474, 475, 476, 492, 503, 505, 507, 514, 519, 520, 564, 565, 567, 572], "allow_extra": 192, "allow_pickl": [16, 84, 90, 104, 123], "allowed_channel": [26, 469], "allski": [83, 475], "alma": 391, "almeida": 420, "almost": [371, 373, 375, 386, 483, 493], "alon": 377, "along": [68, 101, 122, 124, 128, 140, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 157, 159, 160, 188, 189, 191, 197, 199, 200, 201, 287, 288, 289, 310, 311, 321, 331, 332, 381, 382, 396, 434, 437, 451, 460, 470, 471, 473, 474, 477, 478, 504, 519, 520, 536, 566], "alpha": [21, 27, 28, 48, 102, 105, 109, 110, 121, 122, 124, 163, 185, 206, 224, 225, 234, 235, 236, 249, 283, 293, 296, 369, 370, 384, 395, 397, 423, 430, 441, 442, 443, 444, 446, 448, 449, 452, 454, 455, 459, 467, 470, 472, 480, 524, 533, 535, 537, 539, 541, 542, 543, 558, 559, 568, 569, 570], "alpha_": [105, 110], "alpha_1": [105, 110], "alpha_2": [105, 110], "alpha_norm": [221, 395, 442, 533], "alphabet": [389, 398, 413, 414, 415, 416, 417, 418, 419, 420, 423], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 206, 265, 266, 267, 269, 372, 378, 379, 380, 383, 384, 385, 386, 387, 389, 392, 393, 394, 396, 399, 401, 402, 432, 442, 444, 448, 450, 459, 467, 469, 470, 471, 475, 476, 477, 478, 482, 483, 484, 493, 495, 520, 531], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 117, 121, 122, 124, 125, 137, 139, 160, 165, 171, 186, 193, 195, 196, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 280, 299, 307, 312, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 423, 431, 432, 433, 437, 441, 442, 443, 446, 447, 448, 449, 450, 454, 456, 457, 458, 459, 460, 463, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 491, 492, 495, 503, 504, 505, 506, 507, 514, 516, 519, 520, 543, 546, 564, 566, 567, 568, 569, 571], "alt": [83, 85, 88, 94, 95, 372, 571], "alt_pnt": 91, "altaz": [83, 85, 94, 151, 372, 473, 571], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 279, 371, 372, 375, 377, 381, 405, 423, 442, 446, 448, 450, 457, 470, 472, 473, 475, 477, 482, 503, 504, 567], "although": [372, 385, 386, 387, 389, 392, 396, 472, 482, 529, 530, 564, 571], "altitud": 443, "alwai": [77, 83, 87, 91, 145, 193, 196, 203, 209, 211, 227, 372, 373, 375, 378, 379, 380, 382, 383, 384, 386, 389, 397, 398, 405, 412, 419, 434, 435, 437, 449, 450, 454, 462, 469, 472, 474, 475, 477, 479, 480, 487, 505, 519, 520], "am": 381, "ambigu": [386, 431], "amend": 375, "among": [82, 87, 91, 102, 105, 109, 110, 388, 392, 393, 395, 400, 420, 472, 566], "amount": [379, 386, 400, 507], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 256, 560], "ampl_2": [149, 473], "ampl_3": [149, 473], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 101, 125, 130, 132, 188, 189, 191, 200, 201, 206, 213, 220, 223, 225, 229, 236, 239, 246, 247, 248, 256, 258, 261, 262, 263, 273, 279, 291, 383, 384, 387, 395, 442, 443, 444, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 477, 478, 482, 483, 491, 492, 493, 505, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 537, 538, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 569], "amplitude_maximum_signific": 463, "amplitude_maximum_vari": 463, "amplitude_ref": 467, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 115, 122, 123, 124, 125, 126, 127, 129, 130, 132, 136, 137, 138, 143, 145, 146, 147, 148, 150, 153, 156, 158, 160, 161, 164, 168, 171, 173, 176, 178, 179, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 209, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 275, 282, 287, 289, 297, 299, 303, 317, 328, 332, 350, 356, 362, 363, 365, 368, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 408, 409, 412, 413, 416, 417, 418, 419, 420, 423, 425, 426, 427, 430, 431, 432, 434, 435, 437, 438, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 470, 472, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495, 497, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570], "anaconda": [389, 403, 404], "analog": [87, 91, 188, 189, 191, 197, 200, 201, 520], "analogi": 393, "analys": [82, 371, 372, 381, 382, 383, 384, 386, 390, 392, 394, 395, 400, 408, 409, 415, 416, 417, 419, 420, 430, 432, 435, 446, 447, 454, 465, 466, 469, 470, 476, 478, 482, 483, 491, 492, 495, 503, 567], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 102, 104, 105, 109, 110, 114, 116, 146, 147, 153, 158, 161, 170, 174, 371, 372, 373, 376, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 399, 401, 402, 403, 404, 405, 408, 409, 412, 413, 414, 416, 417, 418, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 440, 442, 444, 445, 450, 451, 452, 453, 457, 458, 460, 461, 462, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 492, 493, 495, 504, 505, 507, 508, 512, 514, 515, 516, 517, 519, 520, 546, 564, 566, 567, 569], "analysis3d": 433, "analysis_1": [440, 491, 494], "analysis_1d": 464, "analysis_2": [373, 440, 492, 494], "analysis_3d": [432, 440, 454, 461, 464], "analysis_joint": 454, "analysis_mwl": [440, 455, 461], "analysis_stack": 454, "analysisconfig": [15, 373, 447, 451, 452, 454, 464, 491], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 148, 149, 157, 159, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 385, 390, 438, 473, 478, 505, 526, 570], "analyz": [382, 484, 566], "andrea": 385, "andrew": 432, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 102, 105, 114, 116, 117, 121, 128, 132, 142, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 161, 164, 171, 172, 174, 176, 186, 187, 189, 194, 196, 199, 201, 202, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 267, 269, 272, 327, 359, 372, 378, 386, 388, 395, 399, 411, 413, 414, 415, 432, 441, 443, 446, 449, 455, 458, 459, 465, 470, 475, 476, 478, 479, 482, 483, 507, 512, 516, 519, 520, 524, 525, 526, 529, 530, 566], "angle_incr": 171, "angular": [23, 102, 105, 114, 116, 127, 146, 147, 153, 158, 161, 164, 189, 196, 199, 201, 220, 228, 231, 267, 303, 306, 372, 388, 436, 448, 459, 467, 512, 513, 566], "angular_extens": 41, "angular_s": 520, "angular_separ": [395, 436, 438, 478], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 104, 119, 123, 129, 147, 170, 188, 189, 191, 196, 197, 199, 200, 201, 299, 322, 357, 371, 372, 373, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 398, 399, 401, 404, 405, 406, 407, 408, 412, 413, 431, 432, 433, 438, 447, 456, 457, 460, 464, 467, 471, 474, 475, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 495, 504, 505, 517, 519, 520, 535, 567, 571], "ann": [23, 431], "anna": 372, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 434, 478, 495], "annoi": [372, 567], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 361, 399, 524], "announc": [372, 377, 379, 386, 388, 391, 393, 395, 397, 398, 401, 402], "annuli": [460, 520], "annulu": [126, 331, 520], "anonym": 375, "anoth": [19, 20, 26, 83, 86, 87, 91, 102, 105, 109, 110, 146, 147, 148, 153, 158, 160, 161, 190, 193, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 372, 386, 387, 388, 390, 392, 393, 396, 399, 403, 408, 417, 432, 467, 471, 475, 476, 478, 520, 567], "another_posit": 516, "answer": [472, 507], "anti": [475, 476], "anticip": 381, "anymor": 434, "anyon": [377, 379, 482], "anyth": [145, 388, 567], "anytim": [375, 414], "anywai": [375, 386], "anywher": [386, 389, 391, 503], "ap": [377, 389, 397], "apart": 387, "apertur": 566, "api": [227, 376, 378, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 397, 398, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 423, 427, 431, 432, 440, 443, 446, 447, 450, 456, 458, 465, 471, 475, 476, 477, 478, 481, 482, 483, 491, 493, 494, 503, 504, 505, 506, 514, 515, 519, 564, 565, 566, 567], "apj": [284, 290], "aplpi": 432, "apologis": [412, 413, 432], "app": [87, 91, 402, 408, 431], "appear": [87, 91, 372, 373, 380, 386, 399, 426, 437, 470], "append": [87, 91, 92, 100, 141, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 206, 241, 384, 385, 387, 418, 437, 443, 446, 448, 449, 454, 455, 456, 458, 465, 466, 467, 471, 472, 474, 477, 478, 479, 480, 516], "append_ax": [142, 143, 145, 148, 149, 150, 155, 157, 159, 201, 360], "appendix": [30, 132, 148, 238, 273, 291, 450], "appl": [404, 406, 408], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 105, 109, 110, 111, 114, 115, 116, 117, 121, 124, 125, 129, 132, 145, 146, 147, 153, 158, 160, 161, 165, 171, 174, 175, 188, 189, 191, 192, 196, 197, 199, 200, 201, 209, 211, 219, 227, 241, 257, 270, 280, 281, 282, 283, 311, 312, 357, 361, 369, 372, 378, 379, 382, 383, 385, 387, 390, 396, 397, 398, 420, 425, 430, 431, 432, 433, 437, 441, 446, 448, 458, 465, 466, 467, 471, 474, 475, 476, 477, 478, 480, 482, 485, 492, 493, 505, 507, 514, 552, 565, 568], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 372, 383, 398, 400, 419, 463, 472, 519, 566], "apply_async": [319, 320], "apply_edisp": 438, "apply_hysteresis_threshold": 476, "apply_irf": [257, 419], "apply_mask": 194, "apply_psf": [383, 416], "apply_standard_scal": 96, "apply_threshold_sensit": 121, "apply_union": 203, "approach": [87, 91, 132, 372, 378, 380, 384, 388, 393, 396, 397, 399, 437, 441, 446, 474, 487, 566, 569], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 187, 188, 189, 191, 200, 201, 299, 307, 373, 448, 452, 454, 475, 567], "approv": [378, 379, 380], "approx": [52, 53], "approxim": [101, 132, 174, 175, 187, 188, 189, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 281, 283, 310, 383, 386, 414, 441, 446, 472, 482, 505, 516, 525, 526, 529, 530, 566], "appveyor": 428, "apr": [394, 410], "april": [392, 399, 419], "apt": 405, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 174, 175, 176, 181, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 282, 287, 295, 299, 311, 317, 319, 331, 332, 347, 361, 363, 368, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 493, 495, 496, 497, 498, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 524, 525, 533, 543, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572], "arakelian": 288, "arang": [117, 387, 450, 465, 519], "arb": 480, "arbitrari": [194, 196, 197, 383, 395, 418, 431, 458, 471, 475, 480, 519, 520], "arbitrary_types_allow": [16, 84, 90, 104, 123, 399], "arbitrarytypemetadata": 399, "architectur": [404, 406], "archiv": [398, 485, 492], "arcsec": 171, "arctan": 386, "area": [82, 88, 105, 107, 147, 148, 163, 174, 175, 182, 189, 197, 199, 201, 372, 373, 383, 427, 429, 441, 446, 458, 467, 474, 484, 485, 512, 519, 520, 566], "areasc": [430, 432], "aren": [348, 372, 386, 391, 392, 403, 404, 406], "arf": [106, 107, 110, 192, 193, 196, 197, 446, 520], "arf_ob": 106, "arffil": 106, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 104, 109, 110, 123, 142, 143, 144, 148, 149, 150, 152, 155, 156, 157, 159, 160, 189, 190, 197, 214, 227, 239, 246, 247, 248, 322, 567], "arg_in_kwarg": 372, "argmax": 463, "argmin": 463, "argpars": [377, 567], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 101, 102, 104, 105, 108, 109, 110, 123, 124, 125, 127, 129, 132, 141, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 164, 174, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 280, 297, 299, 311, 317, 319, 320, 359, 360, 361, 365, 366, 367, 368, 369, 375, 378, 384, 387, 419, 420, 423, 425, 431, 437, 438, 450, 454, 459, 472, 474, 475, 478, 479, 492, 505, 507, 518, 519, 520, 543, 567], "aris": [377, 388], "arithmet": [214, 383, 433, 475, 476, 478, 535], "arjun": [430, 431], "arm": [33, 34, 38, 45, 427], "arm64": [404, 406], "armstrong": 431, "arnau": [425, 434, 435, 436, 437], "around": [56, 137, 164, 187, 189, 199, 201, 311, 386, 387, 448, 467, 469, 472, 476, 484, 493, 507, 516, 519, 520], "arpit": 430, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 101, 102, 109, 110, 117, 122, 124, 125, 126, 129, 130, 132, 137, 138, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 209, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 267, 268, 269, 270, 271, 280, 281, 283, 285, 295, 299, 310, 311, 312, 326, 327, 328, 332, 365, 366, 371, 372, 385, 386, 390, 396, 399, 408, 418, 431, 434, 436, 438, 448, 449, 458, 459, 467, 470, 471, 472, 473, 475, 477, 478, 480, 482, 484, 485, 493, 519, 520, 527, 552, 555, 568, 569], "array_lik": [102, 109, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 284, 290, 296], "array_shap": [436, 438], "arriba": [424, 427, 428], "arriv": [218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 377, 385, 417, 418, 419, 458, 566, 570], "arrow": 565, "arrowprop": 524, "arrowstyl": 524, "artefact": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "arthmet": 383, "articl": [101, 133, 139, 288, 295, 377, 443, 465], "artifact": [121, 189], "artifici": 458, "artist": [196, 219, 241, 524, 525], "arxiv": [64, 65, 174, 247, 248, 262, 263, 455, 469, 470, 474, 550, 551], "as_arrai": [87, 91], "as_artist": [196, 197, 478, 520, 524, 525], "as_energy_tru": [186, 187, 196, 199], "as_plot_cent": [190, 193, 198], "as_plot_edg": [190, 193, 198], "as_plot_label": [190, 193, 198], "as_plot_scal": 193, "as_plot_xerr": [190, 193, 198], "asanyarrai": 372, "ascii": [87, 91, 124, 372], "asimov": 480, "asinh": 450, "asinha": 82, "ask": [373, 375, 377, 379, 386, 388, 389, 392, 398, 407, 464, 493, 507, 508, 567], "asmooth": [117, 118, 391, 418, 429, 432], "asmoothestim": 393, "asmoothmapestim": [118, 393, 418, 420, 423, 450, 507], "aspect": [375, 398, 508, 567, 572], "assert": [190, 192, 193, 198, 347, 348, 349, 375, 383, 395, 475], "assert_allclos": 372, "assert_equ": 372, "assert_nam": [190, 192, 193, 198], "assert_quantity_allclos": [372, 427], "assess": [446, 448, 463], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 103, 108, 109, 187, 257, 267, 368, 372, 381, 384, 387, 399, 401, 443, 462, 464, 471, 475, 478, 480, 492, 493, 519], "assist": 388, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 470, 493], "assoc2": [74, 75, 78, 493], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 470, "assoc_prob_lr": 470, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 102, 105, 122, 131, 133, 134, 135, 146, 147, 158, 161, 178, 179, 184, 197, 268, 299, 378, 388, 396, 397, 398, 399, 400, 437, 438, 442, 443, 444, 446, 450, 455, 470, 471, 474, 475, 477, 478, 484, 493, 504, 505, 507, 520, 569], "association_catalog": [67, 470], "association_nam": [67, 470], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 101, 121, 122, 124, 132, 136, 139, 148, 160, 171, 185, 187, 188, 189, 191, 194, 198, 200, 201, 206, 263, 269, 272, 279, 326, 329, 372, 375, 384, 385, 387, 395, 396, 400, 408, 409, 441, 442, 443, 446, 448, 449, 452, 458, 459, 460, 462, 465, 469, 473, 475, 478, 480, 483, 497, 503, 505, 512, 564, 569], "assumpt": [72, 95, 102, 105, 109, 110, 117, 131, 139, 386, 396, 442, 512, 516, 568], "astri": 97, "astrisim": 385, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 125, 181, 188, 189, 191, 200, 201, 252, 270, 372, 373, 384, 391, 392, 396, 401, 415, 424, 428, 432, 434, 438, 448, 469, 473, 475, 482, 495, 496, 497, 499, 500, 501, 504, 566], "astro_dark_matt": [392, 440, 469, 481], "astromodel": 495, "astronom": [13, 386, 393, 431, 566], "astronomi": [11, 273, 371, 382, 386, 390, 402, 409, 430, 443, 446, 452, 456, 474, 482, 507, 516, 517, 564, 565, 566, 567, 568, 569, 571, 572], "astrophys": [6, 23, 303, 387, 507, 565, 566], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 102, 105, 109, 110, 114, 116, 117, 122, 124, 126, 128, 129, 132, 137, 138, 145, 147, 156, 158, 171, 185, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 232, 233, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 257, 258, 260, 261, 262, 263, 266, 268, 270, 271, 273, 282, 297, 298, 299, 329, 348, 349, 358, 362, 363, 367, 371, 373, 374, 375, 377, 378, 379, 383, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 408, 409, 411, 415, 416, 417, 418, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 493, 497, 499, 500, 501, 503, 504, 505, 507, 509, 511, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 568, 571], "astropy_healpix": 381, "astropy_help": [372, 413, 414, 415], "astropy_introduct": 414, "astropy_timeseri": 387, "astropy_vers": 372, "astropydeprecationwarn": 458, "astyp": [87, 91], "asymetr": [101, 446], "asymmetr": [121, 125, 126, 129, 130, 132, 390, 413, 419, 438, 446, 480, 491, 505, 525], "asymmetri": 473, "asymptot": [569, 570], "atmospher": [387, 404, 409, 482], "atnf": 431, "atol": [86, 100, 129, 193, 198, 347, 349, 372], "atol_ax": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 199, 200, 201], "atom": 388, "atproduction_gamma": 26, "atreye": [384, 387, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 431, 432, 433, 434, 435, 436, 437, 438], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 219, 227, 241, 257, 267, 383, 393, 436, 466, 472, 477, 478, 567], "attempt": [16, 84, 90, 104, 123, 375, 386, 389], "attenu": 442, "attr": 372, "attract": 392, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 283, 299, 382, 384, 394, 399, 400, 413, 414, 417, 418, 419, 420, 423, 425, 427, 429, 431, 436, 437, 438, 444, 448, 458, 472, 474, 475, 476, 478, 493, 503, 519, 520, 569], "attributeerror": 372, "attrribut": 475, "aug": [385, 388, 389, 391, 410], "august": [379, 385, 388, 391, 456], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401], "authoris": 398, "authorship": 376, "auto": [77, 188, 189, 191, 200, 201, 373, 375, 383, 392, 418, 432, 472, 567], "autodiff": 390, "autogener": 392, "autograd": [383, 390], "autom": [11, 380, 388, 398, 401, 402, 425, 472, 567], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 104, 112, 123, 125, 129, 132, 158, 161, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 371, 372, 373, 375, 379, 380, 382, 383, 389, 392, 394, 398, 401, 412, 413, 419, 448, 456, 458, 472, 475, 567, 571], "automatis": 506, "autopep8": 372, "autoscal": [209, 210, 211, 212], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 101, 102, 105, 109, 110, 121, 122, 124, 125, 129, 130, 132, 141, 162, 168, 174, 175, 193, 206, 209, 211, 215, 216, 220, 221, 228, 231, 243, 245, 254, 255, 259, 265, 267, 269, 273, 323, 360, 372, 375, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 399, 402, 403, 404, 405, 406, 407, 413, 417, 418, 419, 423, 426, 430, 432, 434, 437, 442, 446, 447, 450, 472, 474, 476, 478, 482, 483, 487, 491, 493, 495, 497, 498, 504, 506, 507, 509, 510, 511, 513, 521, 533, 565, 567, 569], "available_hdu": 88, "available_irf": 88, "available_method": [165, 174], "available_quant": [122, 124], "available_select": [168, 175], "available_stat_typ": 101, "averag": [19, 102, 105, 109, 110, 168, 175, 178, 179, 181, 182, 423, 442, 443, 446, 503, 566], "averageaz": [458, 459], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 121, 168, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 282, 372, 373, 378, 379, 380, 382, 386, 390, 391, 394, 395, 397, 398, 400, 423, 425, 434, 436, 437, 446, 476, 480, 504, 516, 567], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 281, 283], "awar": [372, 377, 384, 392, 398], "ax": [16, 19, 20, 26, 66, 67, 83, 101, 102, 105, 109, 110, 111, 112, 113, 115, 121, 122, 124, 126, 127, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 175, 178, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 281, 283, 359, 360, 364, 365, 366, 367, 368, 369, 372, 381, 391, 414, 418, 423, 429, 430, 431, 434, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 491, 492, 493, 503, 505, 507, 509, 514, 516, 517, 518, 519, 524, 525, 526, 530, 533, 561, 562, 566], "ax1": [441, 450, 452, 456, 467, 476, 477], "ax2": [441, 450, 452, 456, 467, 476, 477], "ax3": [450, 456], "ax_crab_3fhl": 493, "ax_ebl": 533, "ax_excess": [443, 446], "ax_model": 533, "ax_residu": [101, 109, 110, 443, 446, 447, 448, 467, 491], "ax_s": [447, 491], "ax_spati": [102, 105, 109, 110], "ax_spectr": [102, 105, 109, 110], "ax_spectrum": [101, 109, 110, 443, 446, 447, 448, 467], "ax_sqrt_t": [443, 446], "axcols1": 475, "axcols2": 475, "axel": [381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "axes0": [188, 189, 191, 197, 200, 201], "axes_loc": [142, 143, 145, 148, 149, 150, 155, 157, 159, 201, 360], "axes_nam": [187, 188, 189, 191, 196, 197, 199, 200, 201], "axesimag": [360, 361], "axesn": [188, 189, 191, 197, 200, 201], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 101, 102, 105, 109, 110, 111, 112, 113, 115, 117, 121, 122, 124, 125, 126, 128, 129, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 241, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 267, 268, 270, 271, 277, 281, 282, 283, 287, 288, 289, 310, 311, 321, 360, 365, 366, 367, 368, 378, 381, 394, 396, 415, 418, 419, 420, 423, 425, 430, 432, 433, 434, 437, 441, 443, 446, 447, 448, 449, 451, 452, 454, 456, 458, 459, 460, 462, 463, 465, 466, 470, 471, 473, 474, 475, 482, 483, 484, 491, 492, 493, 503, 505, 507, 511, 516, 519, 520, 562, 566], "axis0": 519, "axis1": 475, "axis2": 475, "axis_edg": 365, "axis_nam": [101, 102, 105, 109, 110, 122, 124, 133, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 194, 196, 197, 199, 200, 201, 460, 464, 465, 466, 471], "axis_new": [124, 140, 463, 465], "axis_origin": 463, "axis_rgb": 367, "axis_tru": 456, "axisymmetr": 438, "axvlin": [449, 469, 479, 480], "axvspan": [197, 467], "az": [83, 85, 88, 94, 95, 372, 571], "azimuth": 483, "azur": 419, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 104, 123, 148, 206, 339, 372, 373, 386, 395, 398, 446, 457, 469, 470, 472, 475, 476, 478, 483, 493, 499, 503, 520], "b1509": 470, "b2zcabi_": 474, "b_0": [524, 525], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 189, 311, 375, 382, 383, 386, 392, 446, 447, 449, 475, 478, 491, 567], "backend": [93, 101, 119, 125, 126, 129, 130, 132, 164, 205, 206, 207, 208, 279, 314, 319, 320, 371, 381, 383, 413, 432, 433, 437, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492, 564, 565], "backend_default": [126, 129, 132], "background": [16, 67, 82, 83, 88, 93, 102, 103, 105, 106, 108, 109, 110, 112, 113, 117, 121, 122, 124, 131, 142, 143, 144, 154, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 181, 221, 227, 267, 274, 281, 283, 291, 292, 293, 294, 296, 368, 372, 378, 381, 384, 385, 386, 388, 392, 393, 396, 404, 409, 412, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 453, 454, 456, 459, 460, 462, 464, 465, 466, 467, 470, 471, 472, 473, 475, 476, 480, 484, 485, 487, 492, 503, 505, 506, 519, 565, 566, 567, 569, 570], "background2d": [143, 144, 154, 419, 426, 434, 436, 438, 510], "background3d": [88, 142, 154, 181, 378, 419, 423, 431, 432, 433, 473, 482, 510], "background_estim": 391, "background_interp_missing_data": 168, "background_map": [267, 383], "background_min": 141, "background_model": [102, 105, 109, 110, 132, 384, 385, 392, 394, 419, 451, 492, 510], "background_oversampl": [168, 175, 474], "background_pad_offset": 168, "background_r": [391, 471], "backgroundconfig": 16, "backgroundestim": [387, 417], "backgroundevalu": 383, "backgroundirf": [142, 143], "backgroundirfmodel": 394, "backgroundmodel": [384, 394, 395, 416, 418, 419, 420, 423], "backgroundtempl": 383, "backport": [379, 397, 401], "backround": 381, "backscal": 197, "backward": [372, 377, 386, 395, 396, 397, 415, 505], "bad": [86, 372, 386], "badli": 402, "balanc": 503, "band": [19, 20, 26, 68, 83, 89, 119, 122, 124, 127, 146, 147, 150, 153, 158, 161, 186, 187, 188, 189, 191, 192, 195, 196, 197, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 378, 390, 391, 395, 396, 404, 412, 444, 446, 447, 455, 456, 457, 467, 469, 470, 478, 483, 485, 502, 503, 505, 565], "bandshdu": 475, "banner": 402, "bar": [15, 82, 87, 91, 102, 105, 109, 110, 117, 129, 132, 142, 143, 201, 206, 229, 289, 320, 366, 389, 423, 426, 427, 433, 438, 467, 480, 507, 540], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 283, 298, 307, 308, 311, 317, 319, 321, 346, 359, 367, 372, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 395, 400, 402, 404, 405, 412, 414, 415, 417, 419, 420, 423, 425, 428, 429, 430, 431, 432, 438, 442, 446, 448, 449, 451, 454, 455, 456, 457, 458, 460, 463, 467, 470, 473, 475, 476, 478, 479, 480, 482, 483, 492, 493, 495, 504, 505, 507, 517, 519, 531, 541, 565, 566, 568, 569], "base_dir": [82, 87, 307, 482, 484, 485, 495], "baselin": [82, 83, 234, 482], "basement": 414, "basemodel": [16, 84, 90, 104, 123, 399], "baseradi": 242, "bash": [404, 406, 567], "basi": [377, 378, 388, 391, 401, 425, 427, 467, 469], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 105, 110, 124, 233, 375, 378, 382, 383, 384, 385, 386, 388, 392, 396, 399, 408, 420, 430, 432, 440, 443, 446, 448, 461, 463, 464, 469, 470, 476, 487, 493, 495, 497, 498, 503, 504, 505, 515, 516, 519, 564, 566, 567], "basicconfig": [16, 456, 489], "bayesian": 390, "bayesian_block": 463, "bayesian_edg": 463, "baysian": 381, "bb": [87, 91, 398], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [143, 147, 148, 149, 158, 441, 449, 462, 466, 473, 482], "becam": 379, "becaus": [16, 84, 90, 104, 123, 188, 189, 191, 195, 197, 200, 201, 372, 373, 375, 377, 379, 383, 384, 386, 387, 391, 395, 396, 399, 402, 423, 425, 443, 444, 447, 460, 465, 467, 474, 475, 476, 477, 482, 483, 484, 491, 492, 493, 503, 507, 567, 570], "becom": [372, 380, 382, 383, 386, 391, 399, 458, 465, 478, 507, 567, 570], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 104, 121, 122, 123, 124, 160, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 299, 377, 378, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 403, 405, 419, 420, 423, 425, 426, 432, 433, 434, 435, 436, 437, 438, 442, 447, 457, 465, 466, 467, 475, 478, 479, 482, 484, 491, 504, 519, 552, 571], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 104, 122, 123, 188, 189, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 311, 367, 372, 373, 375, 377, 379, 380, 381, 382, 386, 387, 388, 390, 391, 397, 401, 402, 408, 426, 432, 442, 447, 449, 464, 465, 472, 475, 478, 484, 487, 491, 543, 567], "beforevalid": 90, "begin": [52, 87, 91, 102, 109, 122, 124, 132, 392, 395, 398, 446, 448, 475, 478, 524, 529, 530, 534, 550, 569], "behav": [372, 382, 437, 451, 570], "behavior": [16, 84, 87, 90, 91, 95, 104, 123, 396, 422, 426, 437, 484], "behaviour": [347, 372, 394, 395, 420, 425, 431, 438, 465, 476, 483, 503, 568], "being": [121, 131, 189, 372, 377, 380, 386, 393, 396, 402, 448, 457, 463, 476, 480, 496, 520, 567], "belief": 480, "believ": [407, 480], "belong": [86, 396, 419], "below": [52, 53, 87, 91, 187, 191, 198, 199, 361, 362, 363, 367, 369, 373, 375, 376, 381, 382, 386, 388, 389, 392, 395, 396, 398, 399, 400, 402, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 446, 450, 467, 470, 472, 474, 476, 478, 479, 480, 482, 483, 504, 507, 525, 569], "benchmark": [388, 398, 402], "benefit": 389, "benn": 388, "berg": 566, "berge2007": [386, 516, 517, 566], "bernet": 438, "besancon": 497, "besid": [121, 132, 386, 387, 396, 447, 448, 475, 483, 491, 492, 520], "best": [67, 71, 74, 75, 78, 80, 101, 122, 124, 125, 126, 129, 130, 137, 207, 208, 279, 281, 283, 365, 372, 375, 382, 385, 390, 398, 404, 406, 442, 444, 446, 447, 448, 451, 454, 457, 467, 470, 472, 480, 491, 505, 507, 509, 533, 539, 542, 543, 547, 569, 570, 571], "best_fit_model": 448, "beta": [27, 28, 48, 206, 234, 235, 236, 258, 395, 397, 419, 442, 444, 448, 455, 470, 472, 535, 541, 542, 543, 548, 558], "better": [372, 375, 377, 378, 379, 380, 381, 385, 386, 391, 392, 393, 396, 413, 430, 431, 454, 455, 458, 467, 472, 475, 476, 483, 503], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 105, 110, 119, 121, 122, 124, 126, 127, 129, 137, 138, 149, 155, 157, 158, 159, 161, 171, 185, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 213, 214, 217, 218, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 268, 270, 271, 273, 279, 296, 329, 362, 363, 370, 372, 373, 380, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 396, 397, 399, 400, 410, 420, 423, 426, 437, 441, 448, 450, 455, 457, 460, 463, 466, 467, 472, 474, 475, 476, 477, 480, 483, 484, 493, 503, 505, 512, 513, 516, 525, 526, 566, 569, 571], "bewar": [268, 443, 465], "bexcub": 192, "bexpcub": [187, 188, 189, 191, 200, 201, 475], "beyond": [192, 386, 396, 399, 419, 474, 495], "bfg": 472, "bgstat": 429, "bi": [430, 433], "bia": [96, 145, 146, 150, 174, 431, 437, 474, 480, 511], "bias": [448, 568], "bias_energi": 145, "bias_perc": 174, "bibliographi": 566, "biederbeck": [400, 438], "big": [379, 382, 389, 401, 433, 483, 568, 570], "bigger": 189, "biggest": 391, "billion": 372, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 102, 105, 108, 109, 110, 112, 117, 119, 121, 122, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 139, 140, 141, 145, 146, 147, 148, 150, 153, 156, 158, 160, 161, 168, 170, 171, 172, 174, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 275, 284, 290, 296, 365, 367, 370, 378, 383, 384, 385, 386, 388, 391, 392, 396, 403, 404, 414, 415, 417, 418, 420, 422, 423, 425, 428, 429, 430, 431, 432, 437, 438, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 503, 505, 507, 511, 514, 515, 565, 566, 567, 568, 570], "bin_cent": 467, "bin_edg": 467, "bin_volum": [192, 196, 199, 520], "bin_width": [190, 193, 198, 467], "binari": [199, 201, 380, 386, 389, 398, 402, 423], "binary_dil": [201, 476], "binary_erod": [201, 476], "binary_eros": [201, 423], "binary_structur": 199, "bind": 375, "binder": [380, 401, 431, 434, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "binlik": 124, "binned_likelihood": 125, "binneddataaxi": [414, 430], "binnedtimeseri": [124, 387], "bins_axi": 201, "binsiz": [16, 447, 451, 452, 454, 464, 491, 492], "binsize_irf": [16, 447, 451, 452, 454, 464, 491], "binsz": [102, 105, 109, 110, 111, 115, 147, 156, 158, 168, 171, 172, 176, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 388, 446, 456, 457, 458, 459, 462, 467, 469, 471, 473, 474, 475, 476, 478, 483, 484, 492, 514, 516, 517, 519, 520, 523, 525, 526, 527, 528], "binsz_irf": [102, 105, 109, 110, 113, 471, 474, 507], "binsz_irf_default": [102, 105, 109, 110, 474], "binsz_wc": [196, 197], "bintabl": [187, 188, 189, 191, 200, 201], "bintablehdu": [83, 86, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 192, 193, 199, 200, 201, 458, 475, 503], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 137, 373, 375, 379, 380, 386, 390, 391, 399, 467, 475, 520], "bitpix": 475, "bkg": [16, 82, 87, 88, 102, 106, 107, 109, 110, 142, 143, 144, 174, 181, 227, 394, 418, 420, 425, 441, 446, 447, 451, 452, 454, 455, 458, 459, 462, 467, 471, 473, 474, 477, 482, 484, 485, 491, 492, 503, 510, 566, 568, 569, 570], "bkg_": [102, 109], "bkg_2d": [87, 142], "bkg_3d": [82, 87, 143, 482, 485], "bkg_err": 467, "bkg_maker": [394, 443, 446, 448, 456, 465, 516], "bkg_model": [384, 394, 400, 454, 458, 459, 462, 477, 492, 527], "bkg_ob": 106, "bkg_sy": 131, "bkg_syst_fract": [131, 441], "bkg_syst_fraction_sensit": 121, "bkgfile": 106, "black": [109, 110, 361, 362, 369, 390, 432, 434, 441, 467, 469, 474, 479, 516], "blackground": 441, "blanch": [431, 432], "blanklin": [233, 408, 505, 520], "blazar": [295, 442], "blind": [434, 507], "bll": 493, "blob": 411, "block": [373, 375, 378, 385, 392, 402, 411, 431], "block_reduc": 432, "blue": [101, 102, 105, 109, 110, 362, 442, 446, 452, 454, 457, 479, 516], "blur": 33, "board": [381, 392], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 372, "boller": 463, "boni": [423, 426], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 121, 122, 123, 124, 125, 129, 130, 132, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 168, 175, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 282, 296, 299, 308, 311, 312, 329, 335, 338, 340, 341, 343, 369, 372, 386, 456, 470, 474, 475], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 122, 125, 126, 129, 130, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 206, 219, 241, 257, 388, 420, 454, 470, 475, 476, 477], "boost": 458, "bootstrap": [87, 91], "border": 91, "bose": 414, "bot": 378, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 145, 146, 147, 153, 158, 161, 185, 188, 189, 191, 193, 195, 196, 197, 199, 200, 201, 209, 211, 372, 377, 378, 383, 384, 385, 386, 387, 392, 397, 401, 413, 417, 419, 420, 423, 426, 447, 448, 458, 462, 471, 475, 476, 477, 479, 480, 504, 505, 507, 519, 520, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 569], "bother": 451, "bottom": [392, 394, 442, 458, 464, 466, 470], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 193, 196, 198, 206, 213, 214, 217, 218, 219, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 241, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 267, 268, 270, 271, 294, 381, 475, 480], "boundari": [193, 199, 269, 400, 428, 472, 478, 519], "boundary_mask": [199, 476], "boundary_typ": 193, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 372, 473], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 126, 127, 196, 199, 201, 331, 332, 381, 386, 390, 396, 430, 476, 478, 520], "bpl": [213, 395, 478], "bpwl_norm": 395, "bracket": [145, 206, 435, 437], "brake": 51, "branch": [372, 375, 379, 386, 397, 402, 411], "branchnam": 372, "bratio": 495, "break": [213, 258, 378, 386, 388, 397, 417, 418, 419, 534, 548], "brent": 450, "brentq": [19, 20, 26, 124, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 280], "breviti": [454, 507], "brief": 571, "briefli": [484, 485], "bright": [68, 126, 257, 272, 452, 464, 465, 476, 478, 501, 516], "brighter": 458, "brightest": 470, "brigitta": [389, 413, 415, 417, 419, 428, 429, 430, 431, 432, 433, 434], "bring": 377, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 188, 189, 191, 194, 197, 200, 201, 257, 311, 459, 473, 475, 519], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [213, 258, 398, 440, 521, 553], "brokenpowerlaw": 395, "brokenpowerlawspectralmodel": [252, 258, 395, 420, 478, 534], "brown": [133, 463], "brown2013": 133, "brows": [87, 91, 373, 408, 493], "browser": [87, 91, 375, 402, 408, 428, 431, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "bruno": [398, 415, 417, 420, 423, 426, 430, 431, 432, 434, 435, 436, 437, 438], "br\u00fcgge": [431, 432], "bsd": 398, "bst": [87, 91], "buchner": 423, "budget": 507, "buffer": 350, "bug": [372, 375, 378, 379, 397, 398, 401, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 435, 436], "bugfix": [379, 381, 397, 430, 431], "build": [16, 84, 90, 104, 123, 187, 221, 372, 378, 379, 380, 385, 386, 388, 392, 396, 397, 398, 399, 401, 419, 425, 434, 450, 454, 467, 474, 476, 504, 507, 567], "build_doc": [336, 373, 375, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 539, 542, 555], "built": [10, 175, 221, 339, 356, 371, 372, 373, 383, 384, 386, 388, 389, 391, 399, 402, 409, 432, 437, 470, 477, 483, 487, 503], "builtin": 493, "bullet": 377, "bump": [386, 430], "bunch": [103, 108, 373, 567], "bundl": [101, 102, 105, 109, 110, 381, 384, 402, 424, 432, 456, 471, 474, 503, 520, 565, 566], "bunit": [358, 432, 475], "bureaucrat": 377, "burkert": [17, 495], "burst": 463, "butterfli": [431, 472, 493], "button": [434, 475], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 104, 123], "byte": [16, 84, 87, 90, 91, 104, 123, 317, 350, 372], "bytearrai": [16, 84, 90, 104, 123, 317], "bytestr": [87, 91], "b\u00fchler": 411, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 194, 204, 223, 261, 284, 290, 299, 339, 371, 372, 389, 404, 405, 407, 424, 431, 446, 467, 469, 472, 480, 483, 495, 519, 538, 549, 567, 568, 570], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 101, "c_": 204, "c_0": [186, 187, 196, 199], "c_i": [186, 187, 196, 199], "c_n": [186, 187, 196, 199], "cach": [87, 88, 91, 100, 102, 105, 109, 110, 267, 307, 308, 381, 382, 384, 391, 394, 402, 416, 420, 423, 438], "cahil": 425, "cal_gen_92_002": [145, 193], "cal_gen_92_002_summari": 145, "calcul": [13, 15, 19, 20, 26, 96, 105, 110, 133, 134, 135, 174, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 253, 258, 260, 261, 262, 263, 266, 269, 270, 286, 288, 289, 296, 298, 321, 354, 362, 363, 382, 385, 413, 419, 423, 424, 425, 431, 436, 438, 441, 463, 467, 469, 480, 491, 492, 495, 507, 566, 570], "caldb": [82, 143, 145, 147, 148, 149, 158, 193, 425, 441, 449, 458, 459, 462, 466, 473, 482], "calendar": [397, 401], "calib_vers": [483, 493], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 101, 102, 104, 105, 109, 110, 123, 133, 134, 135, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 170, 186, 187, 196, 199, 206, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 311, 323, 344, 350, 358, 361, 369, 372, 373, 375, 377, 378, 381, 384, 385, 386, 387, 388, 390, 392, 394, 396, 398, 400, 402, 404, 408, 419, 423, 437, 446, 447, 456, 470, 471, 472, 474, 475, 478, 483, 485, 491, 492, 493, 503, 507, 516, 517, 518, 519, 520, 567, 568, 569, 570], "callabl": [16, 45, 84, 90, 104, 123, 275], "callback": [164, 567], "caller": [372, 383], "camera": [466, 473, 474], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 102, 104, 105, 108, 109, 110, 113, 117, 121, 122, 123, 124, 129, 130, 132, 137, 143, 148, 156, 158, 161, 165, 171, 174, 186, 187, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 201, 203, 206, 210, 212, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 231, 233, 235, 236, 238, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 280, 282, 287, 299, 311, 312, 317, 320, 329, 348, 350, 365, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 415, 417, 419, 420, 423, 425, 426, 430, 431, 432, 433, 434, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 493, 495, 497, 498, 503, 504, 505, 507, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 541, 543, 552, 562, 564, 565, 566, 567, 568, 569, 570], "candel": 221, "candid": [397, 425, 470], "candl": [273, 566], "cannot": [16, 67, 84, 87, 90, 91, 95, 104, 112, 122, 123, 124, 203, 290, 339, 369, 375, 385, 386, 437, 473, 477, 478, 505, 520], "cap": [51, 54], "capabl": [382, 483, 495], "capsiz": 480, "captur": [372, 388], "car": [102, 105, 109, 110, 168, 199, 200, 201, 219, 241, 386, 415, 456, 473, 474, 475, 492, 493], "card": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 145, 146, 147, 153, 158, 161, 188, 189, 191, 195, 197, 200, 201, 475], "care": [122, 124, 299, 372, 381, 388, 397, 443, 448, 454, 475, 567], "carefulli": [398, 458, 459, 480], "carina": [33, 38], "carlo": [390, 512], "carri": [387, 395, 397, 399, 423, 444, 492], "carr\u00e9": 199, "cartesian": [41, 46, 189, 200, 201, 302, 304, 436, 493, 519], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 145, 164, 176, 187, 189, 195, 196, 199, 201, 206, 209, 211, 231, 242, 265, 267, 269, 280, 290, 312, 329, 367, 372, 373, 375, 377, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 404, 412, 413, 416, 419, 425, 426, 431, 437, 438, 441, 443, 446, 447, 448, 449, 451, 452, 454, 458, 459, 462, 463, 464, 466, 467, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485, 487, 491, 493, 502, 505, 506, 507, 517, 520, 524, 525, 526, 529, 530, 534, 543, 550, 565, 567, 569], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [102, 105, 109, 110, 168, 285, 290, 372, 384, 423, 449, 451, 454, 462, 466, 471, 474, 477, 480, 491, 492, 503, 566], "cash1979": [566, 569], "cashcountsstatist": [408, 438, 567, 569], "cast": 91, "cat": [66, 67, 79, 380, 402, 430, 431, 444, 470, 478, 502, 566, 567], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 121, 125, 386, 392, 411, 415, 417, 419, 423, 424, 425, 428, 429, 430, 431, 432, 434, 438, 440, 442, 444, 450, 455, 471, 478, 481, 483, 487, 497, 531, 565, 566], "catalog_3fgl": 444, "catalog_3fhl": [444, 470], "catalog_3fhl_bright": 470, "catalog_4fgl": 470, "catalog_4fgl_roi": 470, "catalog_gammacat": [444, 470], "catalog_hgp": 470, "catalog_registri": [444, 470, 476], "catalogimageestim": 432, "catalogu": [78, 423, 430], "catch_warn": 507, "categori": [372, 383, 396, 423, 476, 478, 521], "caus": [379, 386, 432, 435, 507], "cautious": 457, "caveat": [206, 295, 438, 525], "cax": 473, "cb98": 48, "cbar": 360, "cbar_kw": 366, "cbarlabel": 366, "cc": [381, 386, 388, 391, 393, 395, 398, 400], "ccube": [187, 188, 189, 191, 192, 193, 199, 200, 201, 475], "cd": [372, 373, 375, 388, 404, 405, 406], "cdelt": [199, 201], "cdelt1": 475, "cdelt2": 475, "cdf": [321, 385, 458, 472], "cdot": [51, 52, 53, 54, 102, 109, 246, 261, 395, 478, 503, 524, 529, 530, 534, 537, 538, 545, 546, 548, 549, 550, 551, 556, 557, 558, 560, 568], "celesti": [475, 519, 524, 528, 571], "celfix": 531, "cell": [380, 408, 434, 455, 467, 475, 482, 483, 493], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 102, 105, 109, 110, 122, 124, 126, 127, 128, 132, 145, 146, 147, 148, 149, 150, 153, 157, 158, 159, 161, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 215, 216, 219, 220, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 267, 269, 301, 305, 331, 372, 373, 386, 388, 395, 396, 413, 414, 423, 425, 438, 441, 443, 446, 448, 449, 450, 451, 452, 454, 456, 458, 459, 460, 465, 466, 467, 469, 473, 474, 475, 476, 477, 478, 482, 483, 492, 493, 509, 510, 511, 512, 513, 514, 516, 517, 519, 520, 524, 525, 528], "center_coord": [186, 187, 192, 196, 199], "center_pix": [186, 187, 196, 199], "center_ski": 520, "center_skydir": [186, 187, 196, 199, 474, 475, 483, 484, 514, 516, 517], "centr": [469, 476, 495], "central": [384, 393, 444, 493], "cern": 495, "certain": [50, 83, 87, 91, 206, 287, 371, 386, 388, 390, 396, 441, 469, 474, 475, 483, 502, 520], "certainli": 375, "certif": 398, "certifi": 398, "cfa": [206, 472], "cff": 401, "cg": 499, "ch": 53, "chain": [164, 385, 388, 417, 474, 507, 517], "chainer": 390, "chakraborti": [429, 430], "challeng": [379, 381, 385, 430, 452, 454, 456, 482], "chanc": 377, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 104, 122, 123, 124, 187, 196, 199, 213, 214, 217, 221, 223, 224, 225, 229, 233, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 347, 357, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397, 398, 401, 402, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 429, 430, 431, 432, 433, 435, 439, 448, 449, 450, 456, 458, 459, 463, 464, 471, 472, 476, 478, 480, 482, 491, 503, 507, 514, 516, 520, 531, 539, 542, 567], "changelog": [372, 401, 424, 432], "channel": [19, 20, 26, 371, 374, 375, 389, 431, 459, 469, 475, 485, 495], "channel0": 495, "channel1": 495, "channel_registri": [19, 20, 26], "chapter": 469, "charact": [87, 91, 372, 477], "character": [289, 396, 458], "characterist": [21, 25, 27, 51, 52, 53, 54, 133, 287, 383, 437, 463, 566], "charg": [398, 543], "chatti": [372, 456], "cheat": 407, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 102, 105, 106, 109, 110, 122, 124, 145, 146, 147, 153, 158, 161, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 210, 212, 219, 241, 257, 295, 346, 348, 375, 388, 394, 398, 401, 402, 404, 405, 406, 409, 418, 423, 431, 444, 462, 473, 487, 495, 507, 511, 520, 564, 567, 568], "check_limit": [209, 210, 211, 212], "check_random_st": 372, "check_tutorials_setup": [441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "checker": [429, 432], "checklist": 402, "checkout": [372, 375, 414, 454, 458, 478], "checksum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 145, 146, 147, 153, 158, 161, 188, 189, 191, 195, 197, 200, 201, 207, 219, 241, 335, 338, 341, 438, 455, 483], "chen": 432, "cherenkov": [148, 385, 404, 409, 443, 446, 452, 464, 474, 482, 484, 516, 517, 566], "cherri": [372, 379, 386, 397], "chi": [286, 387, 568, 569, 570], "chi2": [101, 139, 384, 414, 446, 457, 466, 472, 503, 569], "chi2assym": 417, "child": 382, "children": [454, 462, 475, 491, 492], "chime": 375, "chisq": 286, "chisquar": 286, "chmod": 567, "choic": [385, 389, 391, 398, 446, 447, 449, 451, 472, 484, 491, 508, 564, 567], "choos": [45, 77, 186, 187, 190, 192, 193, 196, 199, 270, 313, 372, 384, 386, 388, 392, 404, 423, 444, 446, 450, 454, 456, 466, 471, 472, 474, 475, 477, 478, 479, 483, 492, 507, 567], "chose": [458, 483, 484, 569, 571], "chosen": [26, 145, 158, 161, 187, 188, 189, 197, 200, 201, 219, 228, 241, 372, 375, 387, 388, 391, 447, 465, 474, 475, 479, 480, 484, 491, 505, 515, 516, 520], "christoph": [377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 428, 429, 430, 431, 432, 433], "chrome": [87, 91], "chromei": 425, "chunk": [147, 158, 161], "chunk_siz": [147, 158, 161], "ci": [372, 375, 379, 398, 402, 417, 423, 425, 428, 434], "circl": [83, 176, 369, 373, 386, 425, 446, 456, 466, 469, 474, 476, 479, 482, 492, 493, 504, 514, 516, 517, 520], "circle_area": 373, "circleannulusskyregion": [254, 255, 516], "circledast": 503, "circlepixelregion": 386, "circleskyregion": [102, 105, 109, 110, 170, 171, 175, 199, 220, 373, 386, 441, 443, 446, 448, 449, 452, 454, 456, 458, 459, 465, 469, 471, 474, 476, 477, 492, 514, 516, 517, 520], "circular": [91, 102, 105, 175, 187, 189, 199, 383, 391, 393, 443, 448, 471, 479, 516, 520], "circumv": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "cirelli": [26, 495], "citat": 401, "cite": [375, 398], "cl": [16, 84, 90, 102, 104, 109, 123, 399], "clabel": 472, "clang": 408, "clarif": 377, "clarifi": [396, 437], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 281, 283, 307, 308, 311, 319, 321, 346, 359, 375, 378, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 400, 404, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 444, 446, 447, 448, 449, 450, 451, 452, 456, 458, 459, 462, 464, 467, 470, 471, 472, 473, 474, 475, 478, 480, 482, 483, 484, 491, 493, 498, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 543, 552, 564, 565, 566, 567, 572], "class1": 470, "class2": 470, "classic": [381, 390, 404, 413, 443, 446, 452, 456, 471, 474, 505, 507, 516, 517, 566, 569], "classifi": 484, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 399], "classproperti": 423, "classvar": [16, 84, 90, 104, 123], "claudio": [436, 438], "claus": [372, 398], "clean": [372, 373, 375, 380, 381, 386, 388, 390, 411, 413, 414, 415, 416, 417, 418, 419, 420, 423, 430, 431, 432, 433], "cleaner": 434, "cleanup": [379, 391, 402, 411, 416, 417, 422, 423, 424, 428, 429, 431], "clear": [92, 100, 195, 241, 372, 377, 379, 383, 386, 387, 391, 392, 393, 431, 457, 571], "clearer": 416, "clearli": [133, 372, 377, 378, 386, 389, 397], "cli": [11, 388, 433, 565], "click": [371, 388, 389, 408, 416, 431, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 567], "clip": [19, 20, 26, 186, 187, 190, 192, 193, 196, 198, 199, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 269, 270, 311, 416, 417, 450], "clockwis": [220, 228, 231, 524], "clone": [375, 405, 432], "close": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 269, 347, 348, 349, 381, 386, 401, 426, 437, 438, 472, 552], "closer": 493, "closest": [117, 121, 125, 129, 132, 187, 188, 189, 191, 197, 200, 201, 476, 505], "cloud": [402, 487], "cluster": [6, 96, 297, 298, 385, 437, 438, 440, 481, 487, 504, 507], "clutter": [454, 507], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 101, 124, 130, 132, 213, 217, 223, 225, 229, 236, 239, 246, 248, 257, 258, 261, 262, 263, 272, 357, 383, 395, 442, 443, 444, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 462, 466, 467, 469, 470, 472, 478, 480, 482, 483, 491, 493, 500, 501, 505, 507, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566], "cm2": [51, 54, 67, 107, 124, 138, 148, 201, 273, 357, 441, 442, 444, 446, 447, 449, 450, 454, 455, 456, 458, 459, 462, 464, 465, 466, 467, 469, 470, 471, 475, 477, 478, 480, 483, 491, 492, 493, 505, 520, 536, 539, 542, 547, 552], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 469], "cm5": 469, "cmap": [102, 105, 109, 110, 362, 363, 448, 454, 469, 475, 477, 483, 484, 491, 492, 516], "cmb": 543, "co": [53, 194, 397, 398, 441, 524, 525, 526], "coadd": [188, 189, 191, 197, 200, 201], "coars": 471, "coarser": [193, 198, 471], "codaci": 402, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 145, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 367, 375, 376, 377, 379, 380, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 405, 408, 411, 414, 415, 417, 418, 419, 420, 423, 425, 428, 429, 430, 431, 432, 434, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495, 507, 514, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 567], "codebas": [373, 389, 411, 430, 432], "codemeta": 425, "codespel": 423, "codestyl": 375, "coeffici": [127, 234, 238, 533], "coerce_numbers_to_str": 104, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 463, "col": [87, 91, 423], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 366, "collabor": [77, 362, 363, 377, 379, 381, 385, 425, 457, 483, 566], "colleagu": [375, 567], "collect": [195, 241, 372, 374, 399, 402, 430, 431, 447, 471, 477, 495, 504, 508, 512, 566, 571], "collis": 50, "colnam": [87, 91, 188, 189, 191, 197, 200, 201, 483, 493], "color": [101, 109, 110, 142, 143, 201, 361, 362, 363, 366, 369, 373, 441, 442, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 460, 464, 467, 469, 472, 474, 477, 479, 480, 507, 516, 520, 524, 525, 543], "colorbar": [124, 142, 143, 145, 148, 149, 150, 155, 156, 157, 159, 201, 360, 366, 472, 475], "colorblind": 507, "colorblind10": 507, "colormap": [361, 362, 363, 411, 424, 493], "colormap_hess": [393, 572], "colormap_milagro": 572, "colour": 434, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 103, 108, 122, 124, 127, 137, 142, 143, 145, 169, 188, 189, 190, 191, 192, 193, 197, 198, 200, 201, 268, 289, 297, 342, 343, 344, 345, 365, 366, 369, 370, 372, 385, 387, 396, 434, 437, 438, 441, 458, 459, 467, 470, 475, 478, 482, 504, 507], "column_nam": 473, "column_prefix": 193, "columnclass": [87, 91], "columnspac": 369, "com": [133, 139, 295, 326, 327, 339, 375, 392, 401, 402, 405], "combin": [99, 101, 102, 105, 109, 110, 140, 174, 182, 188, 189, 191, 196, 197, 200, 201, 214, 257, 372, 378, 382, 383, 384, 385, 386, 387, 392, 395, 404, 416, 431, 437, 444, 449, 454, 455, 462, 466, 471, 472, 473, 474, 475, 476, 478, 484, 492, 493, 495, 497, 507, 514, 519, 535, 565, 566], "combined_ev": 504, "combining_and_defin": [441, 449, 451, 454, 456, 462, 466, 482], "come": [69, 375, 378, 379, 380, 381, 382, 386, 387, 388, 389, 391, 392, 397, 399, 401, 402, 419, 420, 423, 432, 433, 437, 446, 454, 462, 478, 482, 491, 567], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 470], "command": [6, 13, 94, 101, 124, 149, 155, 157, 159, 371, 373, 375, 380, 381, 383, 388, 389, 402, 403, 404, 405, 406, 407, 413, 417, 428, 431, 432, 434, 458, 506, 565], "commensur": 201, "comment": [124, 372, 373, 377, 381, 385, 386, 388, 389, 391, 393, 395, 397, 398], "commit": [372, 375, 380, 386, 397, 398, 410, 411, 434], "committe": [377, 379, 397, 398], "commod": 398, "common": [95, 371, 372, 373, 375, 377, 378, 386, 388, 392, 393, 395, 396, 398, 405, 407, 408, 423, 425, 447, 448, 460, 470, 473, 476, 478, 491, 492, 495, 502, 505, 506, 520, 525, 567], "common_irf_head": 473, "commonli": [29, 83, 386, 390, 432, 460, 495, 564, 565, 567, 569, 572], "commun": [388, 394, 398, 401, 403, 409, 485], "comp": 470, "compact": [16, 84, 87, 90, 91, 104, 123], "compar": [87, 91, 125, 126, 129, 130, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 199, 200, 201, 206, 279, 372, 386, 389, 392, 420, 436, 437, 441, 442, 443, 446, 450, 454, 457, 460, 462, 465, 470, 472, 474, 480, 483, 491, 502, 566, 568], "comparison": [86, 87, 91, 100, 129, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 329, 428, 497], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 188, 189, 191, 200, 201, 227, 377, 379, 383, 386, 395, 397, 399, 400, 408, 411, 413, 415, 432, 438, 475, 519], "compil": [375, 424], "complain": 375, "complaint": 390, "complement": 392, "complementari": [101, 446], "complet": [13, 16, 84, 90, 104, 123, 329, 372, 378, 382, 383, 384, 385, 386, 389, 390, 392, 396, 397, 398, 405, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 428, 429, 430, 431, 432, 433, 454, 459, 472, 479, 487, 507, 512], "complex": [372, 373, 378, 382, 386, 387, 388, 394, 396, 408, 443, 446, 456, 459, 463, 466, 471, 475, 476, 478, 479, 483, 516], "complianc": [398, 434], "compliant": [188, 189, 191, 200, 201, 438, 566], "complic": [386, 520], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 102, 103, 105, 108, 109, 110, 129, 133, 160, 162, 196, 219, 241, 242, 257, 272, 383, 384, 385, 388, 394, 395, 413, 417, 419, 423, 431, 432, 442, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 462, 464, 465, 466, 470, 471, 477, 478, 482, 483, 491, 492, 495, 503, 505, 507, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566], "component_1": 383, "component_2": 383, "component_class": 470, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 378, 398], "composit": [57, 70, 80, 310, 398, 430], "compound": [196, 203, 214, 330, 334, 386, 395, 440, 442, 460, 521, 553], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 425], "compoundpixelregion": 334, "compoundskymodel": 383, "compoundskyregion": [203, 330, 334], "compoundsourcemodel": 383, "compoundspectralmodel": [252, 395, 437, 442, 478, 483, 533, 535, 539, 542, 544, 547, 552], "compress": 380, "compris": 484, "compromis": [372, 377, 385, 480], "compton": [242, 419, 543], "compulsori": 478, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 101, 102, 104, 105, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 174, 175, 177, 180, 181, 182, 183, 185, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 202, 206, 213, 214, 217, 219, 221, 223, 224, 225, 229, 233, 235, 236, 238, 241, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 272, 273, 279, 280, 281, 283, 286, 287, 288, 289, 294, 295, 298, 302, 303, 306, 372, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 400, 402, 404, 405, 409, 411, 413, 414, 415, 416, 419, 420, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 443, 448, 450, 454, 455, 459, 460, 463, 464, 465, 467, 469, 471, 474, 477, 478, 479, 480, 483, 484, 485, 491, 493, 495, 503, 505, 507, 512, 516, 543, 565, 566, 567, 568, 569, 570, 571], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 206, 385, 386, 503], "compute_chisq": 430, "compute_differential_jfactor": 23, "compute_errn": [281, 283, 434, 569], "compute_errp": [281, 283, 569], "compute_flux_doubl": 133, "compute_fpp": 134, "compute_fvar": [135, 288], "compute_jfactor": [23, 469], "compute_lightcurve_doublingtim": 463, "compute_lightcurve_fpp": 463, "compute_lightcurve_fvar": 463, "compute_lima_map": 419, "compute_npr": 385, "compute_upper_limit": [281, 283], "computedfieldinfo": [16, 84, 90, 104, 123], "con": [372, 388], "concaten": [83, 86, 92, 190, 193, 384, 388, 394, 437, 475], "concentr": 331, "concept": [16, 84, 90, 104, 123, 392, 393, 399, 409, 469, 475, 508], "conception": [385, 394], "concern": [375, 377, 386, 388, 389, 391, 393, 395, 398, 423, 433, 484, 569], "conclud": 381, "concret": [16, 84, 90, 104, 123, 389, 392], "conda": [371, 375, 379, 380, 389, 392, 397, 401, 402, 404, 405, 406, 407, 408, 413, 415, 431, 432, 567], "condit": [52, 53, 141, 193, 210, 212, 219, 241, 396, 400, 420, 441, 446, 449, 459, 470, 476, 477, 479, 484, 503, 512], "conduct": [434, 466], "cone": [91, 386, 447, 479, 491, 492, 507], "conesearch": 388, "conf": [87, 91, 372, 373, 402, 414, 429], "conf_1d": 464, "conf_3d": 464, "conf_max": [209, 211], "conf_min": [209, 211], "confid": [121, 206, 209, 211, 281, 283, 383, 390, 414, 419, 433, 566, 569], "confidence_opt": 206, "config": [15, 16, 84, 90, 104, 123, 371, 373, 378, 380, 381, 388, 389, 392, 399, 404, 406, 416, 417, 418, 423, 431, 447, 454, 491, 564], "config_dict": 491, "config_joint": 454, "config_paramet": [117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132], "config_stack": 454, "config_str": 16, "configdict": [16, 84, 90, 104, 123], "configpars": 429, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 104, 109, 110, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 319, 372, 373, 375, 381, 383, 387, 388, 392, 393, 399, 402, 408, 416, 418, 419, 423, 425, 434, 437, 438, 446, 448, 456, 458, 459, 482, 487, 506, 512, 566, 567], "confirm": 375, "conflict": [87, 91, 372, 375, 398], "confluenc": 485, "conform": [16, 84, 90, 104, 123, 475], "confus": [372, 373, 378, 391], "connect": [382, 446, 460, 462, 476, 492, 564], "consant": [188, 189, 191, 197, 200, 201], "consciou": 377, "consecut": [171, 329, 372, 397], "consensu": [377, 398], "consent": 372, "consequ": [398, 459, 520], "conserv": [503, 528], "consid": [19, 20, 59, 96, 168, 175, 178, 179, 181, 182, 189, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 279, 368, 377, 378, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 398, 400, 443, 446, 448, 454, 458, 459, 463, 473, 476, 504, 512, 570], "consider": [388, 413, 423, 431, 454], "consist": [74, 91, 95, 122, 124, 146, 147, 158, 161, 188, 189, 191, 200, 201, 228, 231, 372, 382, 383, 385, 386, 387, 392, 399, 416, 417, 418, 419, 420, 427, 431, 432, 434, 436, 437, 438, 447, 448, 449, 450, 457, 462, 466, 472, 474, 475, 478, 480, 491, 541, 543, 568], "consol": [372, 567], "consortium": [399, 482], "const": [215, 216, 217, 218, 395, 459, 478, 536, 554], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 395, "constant": [50, 51, 52, 53, 102, 109, 117, 148, 188, 189, 191, 197, 199, 200, 201, 215, 216, 217, 218, 220, 232, 234, 328, 385, 386, 391, 431, 440, 464, 483, 500, 503, 521, 532, 553, 563, 566, 570], "constant_model": 554, "constantmodel": 433, "constantnormspectralmodel": 395, "constantspatialmodel": [251, 395, 478, 483, 523], "constantspectralmodel": [252, 395, 459, 478, 536], "constanttemporalmodel": [264, 395, 416, 478, 554], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 471, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398, 442, 451, 455, 474, 480, 514], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 507], "construct": [16, 84, 90, 104, 123, 193, 235, 236, 337, 520, 566], "constructor": [186, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 437, 492, 518], "consult": 407, "consum": [472, 507], "contact": [374, 379, 381, 398, 407, 409, 412, 413, 414, 428, 431], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 122, 123, 124, 132, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 170, 173, 175, 180, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 287, 297, 298, 365, 367, 369, 370, 372, 375, 376, 378, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 398, 401, 402, 409, 413, 417, 418, 419, 420, 422, 423, 425, 426, 429, 430, 431, 432, 433, 437, 438, 441, 444, 446, 447, 448, 451, 454, 455, 458, 459, 462, 464, 465, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 495, 496, 498, 503, 504, 505, 507, 511, 515, 516, 519, 520, 521, 564, 566, 568, 569, 570], "containment_correct": [16, 102, 105, 175, 441, 446, 447, 448, 451, 452, 454, 456, 464, 465, 467, 471, 474, 491], "containment_fract": 96, "containment_radiu": [149, 155, 157, 158, 159, 161, 441, 471, 473, 476], "containment_radius_map": [158, 161], "contains_pix": [186, 187, 196, 199], "contains_wcs_pix": 196, "contamin": [67, 452, 470, 476, 516], "content": [84, 90, 104, 123, 124, 188, 189, 191, 197, 200, 201, 335, 338, 372, 375, 377, 381, 387, 392, 399, 402, 417, 426, 431, 443, 475, 476, 482, 484, 504, 507, 518, 519], "content_typ": [16, 84, 90, 104, 123], "context": [16, 84, 87, 90, 91, 104, 123, 210, 212, 219, 241, 319, 350, 372, 387, 398, 402, 438, 475, 497], "contigu": [193, 198, 423], "continu": [193, 379, 381, 382, 385, 386, 388, 389, 391, 392, 397, 408, 411, 412, 415, 423, 428, 429, 430, 432, 446, 459, 476, 519, 566], "continuous_upd": [454, 462, 475, 491, 492], "contour": [203, 206, 364, 381, 433], "contour_": 472, "contourf": 201, "contract": 398, "contrari": [373, 380], "contrast": [392, 566], "contrera": 433, "contribut": [100, 114, 116, 219, 227, 241, 257, 368, 372, 374, 381, 386, 394, 396, 402, 409, 412, 423, 425, 427, 474, 508, 543, 564, 567, 568], "contributes_to_stat": 100, "contributor": [372, 375, 392, 402, 410, 421, 422], "control": [83, 87, 91, 102, 105, 109, 110, 372, 385, 403, 405, 441, 469, 475, 480, 507, 569], "controversi": [372, 377, 378, 392], "conveni": [13, 122, 371, 372, 375, 382, 386, 394, 396, 403, 413, 415, 420, 423, 425, 430, 456, 469, 470, 471, 475, 476, 477, 478, 482, 484, 493, 502, 506, 565], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 187, 188, 189, 191, 199, 200, 201, 394, 396, 415, 416, 419, 420, 434, 471, 474, 475, 478, 503, 505, 512, 519, 569], "converg": [400, 414, 435, 446, 448, 454, 472, 503, 507, 514, 524], "convers": [84, 87, 90, 91, 104, 122, 123, 124, 377, 396, 399, 404, 406, 423, 436, 437, 438, 441, 520], "conversion_typ": [483, 493], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 101, 102, 105, 107, 109, 110, 122, 124, 127, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 171, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 208, 209, 210, 211, 212, 219, 233, 241, 279, 296, 299, 300, 304, 317, 333, 353, 355, 356, 373, 378, 386, 387, 396, 399, 402, 424, 436, 437, 438, 441, 452, 457, 465, 466, 471, 472, 476, 477, 482, 493, 505, 511, 516, 519, 569, 571], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 493, "convolut": [117, 121, 127, 132, 156, 189, 201, 371, 384, 390, 411, 418, 420, 429, 431, 432, 438, 452, 475, 503, 520], "convolution_method": 189, "convolv": [105, 111, 115, 132, 156, 189, 201, 383, 411, 420, 423, 432, 449, 450, 452, 475, 513, 543], "convolve_ful": 189, "convolve_wc": 189, "cookiecutt": 388, "coolwarm": [454, 483, 484, 492], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 243, 287, 383, 416, 459, 475, 476, 516, 519, 520, 527], "coord_to_idx": [186, 187, 190, 192, 193, 196, 198, 199, 475], "coord_to_pix": [186, 187, 190, 192, 193, 196, 198, 199, 475], "coordiant": 473, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 102, 103, 105, 108, 109, 110, 122, 124, 126, 127, 128, 133, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 171, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 219, 220, 228, 231, 233, 241, 243, 245, 254, 255, 257, 269, 287, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 321, 327, 331, 332, 348, 373, 377, 378, 379, 381, 385, 386, 391, 392, 395, 397, 398, 411, 413, 416, 418, 429, 431, 432, 434, 441, 443, 446, 448, 449, 452, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 492, 493, 503, 511, 516, 518, 519, 524, 525, 528, 565, 566, 571], "coordsi": 418, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 146, 147, 150, 153, 158, 161, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 299, 344, 372, 377, 380, 382, 386, 388, 394, 401, 402, 408, 423, 425, 432, 433, 434, 437, 442, 443, 446, 448, 449, 454, 456, 462, 465, 466, 470, 472, 474, 478, 480, 483, 507, 516, 520, 531, 567], "copy_data": [87, 91, 219, 227, 241, 257, 265, 267, 269], "copy_indic": [87, 91], "copy_ob": [82, 507], "copy_on_getitem": [87, 91], "copyright": 408, "core": [16, 53, 84, 90, 104, 123, 154, 371, 372, 379, 385, 386, 393, 397, 398, 409, 412, 429, 433, 437, 441, 448, 449, 451, 454, 456, 458, 460, 462, 466, 477, 482, 495, 505, 567], "corner": [386, 389, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "corr_coord": [158, 161], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 102, 103, 105, 147, 158, 161, 175, 180, 181, 194, 227, 243, 244, 269, 372, 384, 385, 397, 398, 399, 401, 415, 418, 420, 421, 422, 423, 426, 429, 430, 432, 434, 435, 436, 437, 438, 441, 442, 446, 447, 448, 449, 458, 462, 464, 470, 471, 472, 474, 476, 477, 478, 480, 484, 491, 493, 504, 505, 514, 527, 539, 542, 544, 547, 552], "correctli": [19, 20, 26, 77, 146, 147, 153, 158, 161, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 373, 375, 398, 399, 413, 415, 420, 425, 426, 435, 473, 474, 475, 476, 477, 480, 519, 525], "correl": [19, 20, 26, 121, 127, 204, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 253, 258, 260, 261, 262, 263, 266, 270, 390, 395, 396, 423, 433, 457, 460, 472, 476, 478, 480, 491, 505, 564], "correlate_off": 121, "correlation_radiu": [16, 121, 137, 138, 447, 451, 452, 454, 467, 484, 491, 505], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 84, 87, 89, 90, 91, 100, 102, 104, 105, 109, 110, 122, 123, 124, 125, 126, 127, 129, 130, 132, 145, 146, 147, 153, 156, 158, 160, 161, 162, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 213, 214, 217, 221, 223, 224, 225, 228, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 297, 365, 382, 383, 384, 385, 392, 393, 396, 398, 400, 417, 420, 443, 444, 446, 447, 448, 454, 458, 459, 464, 470, 472, 474, 475, 478, 479, 480, 482, 483, 484, 491, 493, 503, 504, 505, 507, 519, 520, 530, 533, 565, 566, 571], "cosimo": [420, 423, 425, 431, 432, 434, 437], "cosmic": [52, 221, 272, 390, 482], "cost": 566, "costom": 480, "costomprior": 480, "costum": 480, "coto": 431, "could": [16, 84, 90, 104, 123, 373, 375, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 402, 443, 446, 454, 456, 470, 482, 483, 491, 506], "count": [16, 83, 92, 100, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 136, 163, 165, 168, 169, 170, 175, 177, 181, 185, 188, 189, 191, 192, 193, 197, 200, 201, 210, 212, 219, 241, 281, 283, 284, 285, 290, 291, 294, 296, 321, 357, 359, 368, 370, 378, 380, 383, 384, 385, 387, 388, 392, 396, 414, 415, 418, 420, 423, 425, 426, 432, 433, 437, 438, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 460, 462, 464, 465, 466, 467, 471, 472, 474, 475, 476, 480, 484, 489, 491, 492, 493, 505, 507, 511, 514, 515, 516, 517, 520, 566, 567, 568, 570], "count_bkg": 467, "count_statist": 569, "counter": [220, 228, 231, 524], "counts_3d": 475, "counts_imag": [460, 471], "counts_min": 141, "counts_off": [102, 105, 106, 109, 110, 163, 169, 170, 173, 370, 384, 425, 436, 437, 442, 447, 448, 449, 452, 456, 467, 471, 503, 569], "counts_on": 414, "counts_rat": 471, "countspredictor": 383, "countsspectrum": [384, 387, 414, 415, 417, 419, 428], "countsstatist": [281, 283, 396, 419, 420, 423, 434], "coupl": [380, 386, 391, 402, 420, 432, 475], "cours": [372, 375, 379, 382, 389, 408, 447, 454, 471, 475, 483, 491, 567, 570], "cousin": [414, 420, 428, 430, 566], "cousins2007": [566, 569], "coutinho": [420, 423], "cov": [247, 248, 402], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [204, 365, 433], "covar_list": 204, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 125, 126, 129, 130, 205, 206, 207, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 283, 365, 390, 400, 419, 425, 433, 434, 437, 447, 491, 569], "covariance_data": [219, 227, 241, 257, 267], "covariance_opt": 206, "covariance_result": 207, "covariance_typ": 400, "covariancegaussianprior": 400, "covariancemixin": [214, 219, 257], "covarianceresult": [101, 206, 207, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492], "cover": [268, 372, 374, 386, 387, 388, 396, 443, 464, 465, 471, 475, 487, 493, 508], "coverag": [381, 387, 402, 411, 415, 423, 429, 432, 465, 472], "coveral": [402, 411], "cpu": [125, 126, 129, 132, 319, 320, 385], "cpython": 377, "crab": [67, 83, 109, 110, 130, 141, 206, 238, 273, 279, 380, 384, 392, 411, 417, 429, 431, 446, 447, 448, 455, 456, 464, 470, 471, 472, 476, 480, 483, 484, 485, 491, 492, 493, 505, 516, 520, 566], "crab_10gev_100tev_dataset": 455, "crab_3fhl": 493, "crab_3fhl_spec": 493, "crab_events_pass4": 484, "crab_fp": 447, "crab_fp_tabl": 447, "crab_hess_ecpl": 273, "crab_hess_fp": [122, 124, 140], "crab_magic_lp": 448, "crab_model": 472, "crab_posit": 516, "crab_spec": 455, "crab_spectrum": 472, "crabnebula": 464, "crabspectrum": 415, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 104, 105, 109, 110, 111, 112, 113, 115, 117, 122, 123, 124, 125, 126, 129, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 170, 171, 172, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 279, 299, 309, 330, 334, 350, 359, 361, 366, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 415, 416, 417, 420, 423, 425, 431, 432, 434, 435, 436, 437, 438, 441, 442, 444, 447, 448, 449, 454, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 469, 470, 472, 474, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 493, 495, 502, 503, 504, 507, 511, 514, 516, 517, 518, 519, 523, 525, 526, 527, 528, 533, 543, 552, 564, 565, 567, 572], "create_crab_spectral_model": [446, 448, 455], "create_fermi_isotropic_diffuse_model": [477, 483], "create_map_dataset_from_observ": [93, 108], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 126, 199, 381, 382, 386, 395, 398, 417, 423, 463, 478, 485], "creator": [104, 123, 375, 399, 447, 451, 452, 454, 478, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "creatormedadata": 399, "creatormetadata": [84, 90, 104, 123, 399], "credit": 408, "crimson": 448, "criteria": [15, 91, 425, 474, 479, 487], "criterion": [91, 132, 297, 441, 507], "critic": 480, "criticis": 363, "crop": [86, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201], "crop_width": [186, 187, 188, 189, 191, 196, 197, 199, 200, 201], "cross": [19, 378, 392, 495], "crowd": 470, "crpix": 199, "crpix1": 475, "crpix2": 475, "crucial": [399, 458, 459, 471], "cruft": 402, "crux": [33, 38], "crval1": 475, "crval2": 475, "cryptic": 383, "csh": 567, "csobsselect": 382, "css": [87, 91, 402], "cstat": [384, 417], "csv": 124, "ct": [357, 432], "cta": [82, 83, 89, 102, 105, 109, 110, 114, 116, 117, 121, 137, 138, 143, 147, 148, 149, 158, 168, 221, 272, 360, 365, 367, 372, 376, 379, 380, 381, 385, 388, 391, 392, 401, 404, 409, 412, 413, 423, 429, 430, 431, 432, 440, 441, 447, 449, 451, 454, 456, 458, 459, 462, 466, 467, 471, 473, 477, 479, 484, 485, 486, 487, 491, 495, 504, 505, 507, 509, 512, 565, 566, 571], "cta_data_analysi": [392, 440, 456, 461], "cta_dataset": 477, "cta_north": 97, "cta_sensist": 392, "cta_sensit": [440, 441, 445], "cta_simul": 412, "cta_south": [97, 441, 449, 458, 459, 462, 466], "cta_util": 432, "ctadata": 482, "ctao": [392, 398, 482, 507], "ctapip": [375, 379, 381, 388, 389, 391, 392, 393], "ctaspectrumobserv": 432, "ctobssim": [82, 385], "ctool": [382, 385, 388, 392, 541], "cts_sigma": 472, "ctselect": 382, "ctype1": 475, "ctype2": 475, "cube": [46, 102, 105, 132, 163, 181, 188, 189, 191, 197, 200, 201, 237, 257, 372, 383, 384, 385, 391, 392, 393, 395, 404, 411, 415, 416, 419, 424, 427, 428, 429, 430, 431, 432, 450, 451, 456, 460, 483, 493, 503, 512, 514, 519, 520, 566], "cubic": 475, "cumbersom": [382, 390], "cumsum": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 188, 189, 191, 197, 200, 201], "cumul": [100, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 188, 189, 191, 197, 200, 201, 321, 385, 446, 458, 477, 507], "cunit1": 475, "cunit2": 475, "curat": [402, 412], "curl": [67, 389, 403, 404, 406, 482], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 101, 102, 105, 109, 110, 124, 125, 129, 151, 174, 186, 187, 188, 189, 191, 197, 198, 199, 200, 201, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 350, 366, 372, 373, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 403, 404, 405, 406, 415, 433, 447, 469, 473, 474, 475, 477, 482, 484, 485, 491, 492, 496, 503, 504, 505, 520, 564, 566, 567], "curv": [15, 19, 20, 26, 73, 77, 83, 129, 133, 213, 214, 217, 221, 223, 224, 225, 229, 233, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 289, 364, 376, 383, 385, 388, 392, 396, 404, 413, 417, 419, 420, 424, 427, 428, 430, 432, 434, 437, 438, 440, 441, 463, 468, 487, 503, 504, 505, 506, 515, 516, 519, 521, 563, 565], "curve_fit": 365, "cuspi": 495, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 104, 123, 128, 381, 382, 383, 388, 390, 395, 399, 403, 417, 418, 420, 432, 441, 449, 451, 454, 456, 462, 466, 471, 473, 475, 482, 507, 552], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 478, "customis": [392, 473], "cut": [91, 121, 160, 174, 175, 382, 431, 437, 440, 441, 445, 449, 467, 471, 474, 475, 479, 482, 487, 492, 493, 503, 504, 515, 516, 519, 564], "cutoff": [223, 224, 225, 261, 262, 263, 279, 417, 437, 440, 449, 454, 521, 553], "cutout": [102, 105, 109, 110, 114, 116, 146, 147, 153, 158, 161, 164, 187, 189, 197, 199, 201, 267, 378, 384, 413, 418, 423, 429, 432, 451, 452, 454, 456, 460, 471, 474, 483, 492, 493, 503], "cutout2d": [102, 105, 146, 147, 153, 158, 161, 164, 199, 201, 267, 378], "cutout_and_mask_region": [201, 437], "cutout_info": 417, "cutout_mod": 164, "cutout_slic": 199, "cutout_width": 164, "cval": [188, 189, 191, 197, 200, 201], "cwd": 380, "cwt": [392, 417, 429, 432], "cxc": [206, 392, 472], "cyan": 369, "cycl": [369, 375, 376, 377, 389, 391, 405, 430, 434], "cycler": [369, 441], "cython": [375, 414, 424], "d": [19, 20, 23, 87, 89, 91, 192, 195, 198, 233, 238, 249, 268, 273, 339, 375, 390, 392, 425, 434, 444, 458, 459, 466, 475, 478, 479, 512, 519, 524, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 570], "dai": [87, 91, 122, 124, 198, 226, 230, 232, 249, 256, 375, 386, 392, 401, 402, 475, 560, 567], "daniel": [433, 436, 438], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 392, 400, 432, 437, 438, 440, 481, 487, 496, 519, 565], "dark_matter_spectra": 26, "darkbit": 495, "darkblu": 480, "darkgreen": 480, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 252, 373, 392, 432, 469, 495, 496], "darkmatterannihilationspectralmodel": [20, 252, 434, 469, 478], "darkmatterdecayspectralmodel": [252, 438, 469, 478], "darkorang": [446, 447], "darksusi": 495, "darwin": 408, "dash": [467, 469, 480], "dashboard": 402, "dat": [26, 87, 91, 219, 241, 447, 491, 495], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 122, 123, 124, 125, 126, 127, 128, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 169, 170, 174, 181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 284, 289, 290, 292, 293, 296, 297, 298, 307, 308, 311, 329, 335, 338, 342, 343, 351, 360, 361, 362, 363, 365, 366, 371, 373, 376, 379, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 395, 396, 398, 400, 401, 404, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 440, 441, 444, 449, 450, 451, 452, 456, 458, 459, 462, 466, 469, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 489, 494, 495, 502, 503, 505, 507, 509, 510, 511, 512, 513, 514, 516, 517, 519, 520, 526, 527, 539, 542, 544, 546, 547, 552, 564, 565, 566, 569, 570, 571], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [186, 187, 196, 199], "data_path": 484, "data_reduct": 388, "data_shap": [101, 102, 105, 109, 110, 186, 187, 196, 199, 471, 520], "data_shape_ax": [187, 196, 199], "data_shape_imag": 199, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 168, 297, 298, 388, 408, 448, 456, 458, 465, 467, 474, 479, 482, 484, 485, 489, 492, 504, 514, 516, 517], "data_storag": 504, "data_summari": 429, "dataaxi": 414, "databas": [378, 507], "dataclass": 372, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 136, 137, 138, 139, 141, 146, 147, 153, 158, 161, 163, 164, 165, 168, 169, 170, 173, 174, 175, 190, 195, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 319, 365, 368, 369, 375, 376, 378, 380, 385, 387, 388, 389, 391, 392, 396, 400, 401, 402, 404, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 446, 449, 450, 456, 457, 458, 460, 462, 467, 469, 470, 475, 478, 479, 481, 482, 483, 485, 487, 489, 493, 504, 505, 507, 512, 514, 515, 516, 517, 519, 527, 531, 533, 561, 562, 564, 565, 566, 567, 568, 569], "dataset1": [480, 503], "dataset1_prior": 480, "dataset2": [480, 503], "dataset2_prior": 480, "dataset_1": 505, "dataset_2": 505, "dataset_3fgl": 444, "dataset_3fhl": 444, "dataset_cta": 471, "dataset_empti": [443, 446, 448, 449, 456, 465, 471, 474, 484, 516], "dataset_energy_depend": 457, "dataset_fak": 449, "dataset_fp": 466, "dataset_gammacat": 444, "dataset_hawc": 455, "dataset_hess": [455, 472], "dataset_imag": [456, 471], "dataset_kwarg": [93, 108], "dataset_lc": 466, "dataset_mak": [446, 448, 456, 465, 474, 516], "dataset_nam": [108, 112, 129, 219, 227, 241, 394, 400, 454, 458, 459, 462, 471, 477, 492, 527], "dataset_on_off": [163, 169, 170, 173, 441, 446, 448, 449, 452, 456, 465, 474, 516, 517], "dataset_on_off1": 441, "dataset_onoff": 384, "dataset_simul": 448, "dataset_stack": [446, 454], "datasetmodel": [208, 241, 257, 394, 420, 458, 459, 462], "datasetread": 106, "datasets1": 369, "datasets2": 369, "datasets3": 369, "datasets_fil": [16, 447, 451, 452, 454, 491], "datasets_hess": 455, "datasets_in_phase_bin_3": 396, "datasets_mak": 474, "datasets_nam": [19, 20, 26, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 419, 455, 477, 491, 527], "datasets_read": [477, 483], "datasets_sl": 471, "datasetsconfig": 16, "datasetsmak": [166, 425, 437, 474, 479, 507], "datasetsmetadata": 399, "datasetwrit": 107, "datastor": [16, 89, 96, 168, 297, 298, 378, 382, 387, 404, 408, 414, 425, 426, 428, 429, 431, 437, 438, 443, 446, 447, 448, 451, 452, 454, 456, 458, 462, 465, 467, 474, 479, 484, 485, 489, 491, 507, 514, 516, 517, 567], "datastorecheck": 432, "datastoreindex": 382, "datastoreinmemori": 382, "datastoremak": [414, 425], "datastoremetadata": 399, "datastoreobserv": [169, 378, 382, 418, 431], "datastorexml": 382, "datasum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 145, 146, 147, 153, 158, 161, 188, 189, 191, 195, 197, 200, 201], "datat": [87, 91], "date": [87, 91, 104, 123, 353, 389, 397, 398, 399, 401, 409, 431, 447, 450, 451, 452, 454, 478, 485, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 571], "datefmt": [16, 447, 451, 452, 454, 491, 567], "dateref": 450, "datetim": [104, 123, 399], "datetime64": [87, 91], "datfix": 450, "daughter": 399, "david": [382, 387, 412, 432, 433], "dc": [454, 482], "dc1": [381, 392, 433, 458, 467, 473, 477, 482], "dc2": 381, "ddof": 463, "de": [19, 20, 26, 67, 100, 213, 214, 217, 221, 223, 224, 225, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 296, 398, 420, 423, 426, 469, 485, 566], "deabsorb": 442, "deactiv": 403, "dead": [83, 86, 88, 329, 382], "dead_tim": [83, 88, 329], "deadc": 382, "deadlin": [381, 385], "deadtim": [88, 90, 181, 449, 458, 462, 482], "deadtime_fract": [88, 90], "deal": [86, 372, 378, 387, 388, 449, 458, 465, 487, 507], "debanjan": 414, "debian": [389, 405, 427], "debug": [11, 372, 378, 383, 388, 434, 446, 475, 507, 567], "dec": [67, 83, 85, 87, 88, 91, 94, 137, 138, 171, 372, 373, 377, 381, 383, 385, 388, 389, 392, 410, 436, 441, 446, 448, 450, 452, 456, 459, 464, 465, 467, 470, 474, 476, 482, 483, 484, 485, 492, 493, 495, 507, 511, 516, 571], "dec_pnt": 485, "dec_tru": 385, "decad": [17, 18, 21, 22, 24, 25, 27, 112, 193, 275, 438, 458], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 226, 232, 249, 395, 458, 463, 466, 478, 495, 557], "decemb": 410, "decid": [372, 378, 381, 382, 383, 384, 386, 387, 391, 394, 395, 396, 401, 447, 479, 491, 571], "decim": [87, 91, 295], "decis": [372, 373], "declar": [15, 87, 91, 257, 351, 352, 375, 379, 380, 383, 388, 389, 395, 402, 419, 506], "decor": [351, 352, 372, 399, 567], "decorrel": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "decoupl": 69, "dedic": [375, 386, 387, 396, 398, 399, 402, 418, 419, 420, 438, 446, 447, 448, 454, 467, 472, 491, 492, 504], "deduc": [396, 438], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 270, 271, 454], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 265, 267, 269], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 282, 351, 352, 372, 373, 383, 384, 385, 386, 395, 396, 399, 400, 446, 454, 472, 478, 480, 489, 516, 567, 569], "def_unit": [441, 449, 451, 454, 456, 462, 466, 482], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 288, 289, 290, 295, 296, 297, 299, 310, 311, 312, 317, 319, 320, 326, 327, 328, 329, 331, 332, 335, 338, 340, 341, 343, 349, 354, 355, 359, 361, 362, 363, 365, 366, 368, 369, 372, 378, 384, 388, 389, 395, 398, 402, 408, 414, 416, 417, 418, 420, 423, 425, 431, 432, 434, 435, 436, 437, 438, 446, 447, 448, 450, 452, 454, 458, 459, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 483, 491, 492, 493, 503, 505, 507, 514, 517, 518, 519, 520, 524, 525, 526, 533, 539, 542, 543, 567, 571], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 355, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 430], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 400], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [142, 143, 148, 150, 155, 160, 473], "defer": [105, 110], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 101, 102, 103, 104, 105, 108, 109, 110, 114, 116, 121, 122, 123, 124, 125, 126, 128, 129, 132, 145, 146, 147, 149, 153, 156, 157, 158, 159, 161, 164, 165, 169, 174, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 282, 284, 290, 291, 311, 321, 326, 327, 328, 329, 332, 362, 363, 372, 373, 375, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 393, 394, 396, 397, 398, 399, 400, 403, 404, 405, 406, 413, 414, 417, 420, 423, 426, 430, 431, 436, 437, 438, 442, 447, 449, 450, 451, 452, 454, 455, 457, 460, 462, 463, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 491, 493, 503, 504, 505, 507, 509, 512, 516, 517, 519, 524, 526, 528, 529, 530, 533, 534, 537, 538, 540, 541, 543, 545, 546, 548, 549, 550, 551, 552, 562, 564, 565, 566, 567, 568, 569, 570], "definit": [83, 84, 86, 88, 90, 100, 102, 104, 105, 109, 110, 123, 165, 196, 282, 296, 310, 372, 381, 382, 386, 393, 394, 395, 396, 399, 415, 419, 420, 436, 438, 446, 448, 451, 460, 465, 473, 474, 491, 503, 505, 512, 513, 518, 520, 524, 525, 569], "deform": 520, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 102, 105, 109, 110, 112, 113, 114, 116, 117, 121, 126, 127, 132, 137, 138, 147, 149, 150, 155, 156, 157, 158, 159, 160, 161, 163, 171, 172, 174, 176, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 219, 220, 228, 231, 241, 245, 254, 255, 257, 297, 298, 331, 367, 372, 373, 383, 386, 388, 395, 396, 399, 408, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 491, 492, 493, 504, 505, 507, 509, 511, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531], "deg2": 485, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 112, 113, 119, 122, 124, 139, 187, 188, 189, 191, 194, 199, 200, 201, 219, 241, 245, 257, 268, 438, 441, 443, 447, 452, 457, 465, 470, 474, 475, 476, 482, 491, 505, 519, 520, 569, 570], "deil": [377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 411, 412, 413, 414, 415, 416, 417, 418, 424, 427, 428, 429, 430, 431, 432, 433], "deiml": 431, "dej2000": [470, 493], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 383], "delai": [393, 397], "deleg": 388, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 372, 383, 402, 403, 404, 406, 438, 477], "delete_interv": 86, "delimit": 124, "deliv": 388, "delta": [19, 20, 23, 87, 91, 121, 122, 127, 130, 132, 150, 198, 247, 248, 280, 295, 437, 442, 472, 480, 505, 512, 513, 525, 526, 528, 569], "delta_t": [119, 280, 457], "demonstr": [388, 413, 416, 417, 418, 419, 420, 425, 437, 438, 463, 464, 475, 477, 487, 519], "denot": [102, 109, 396, 503], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 101, 124, 150, 201, 325, 328, 365, 385, 452, 454, 469, 470, 480, 495, 497, 501, 511, 512, 513, 566], "dep": 437, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 102, 103, 108, 109, 119, 122, 124, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 175, 186, 187, 196, 199, 201, 219, 233, 241, 257, 299, 352, 372, 374, 375, 376, 378, 383, 384, 385, 386, 387, 390, 391, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 412, 416, 417, 420, 427, 429, 432, 433, 435, 437, 438, 440, 441, 445, 449, 451, 452, 461, 465, 470, 472, 473, 474, 475, 476, 477, 479, 480, 482, 483, 487, 503, 504, 507, 511, 512, 515, 516, 519, 533, 564], "deploy": 398, "deposit": 398, "deprec": [16, 83, 84, 85, 88, 90, 104, 123, 125, 126, 129, 209, 211, 414, 423, 436, 437, 438, 531], "deprecated_argument_funct": 372, "deprecated_argument_function_kwarg": 372, "deprecated_attribut": 372, "deprecated_funct": 372, "deprecated_renamed_argu": 372, "deprecatedparseprotocol": [16, 84, 90, 104, 123], "deprecation_polici": 397, "depriv": 514, "depth": [16, 84, 90, 104, 123, 339, 404, 409, 442, 463, 533], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 121, 125, 129, 132, 268, 372, 384, 385, 390, 393, 396, 450, 482, 484, 505, 519, 568, 569], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 124, 125, 127, 132, 157, 197, 206, 270, 291, 373, 375, 377, 378, 381, 382, 384, 385, 386, 388, 389, 391, 392, 395, 396, 397, 398, 409, 415, 423, 431, 432, 447, 450, 458, 459, 463, 472, 478, 480, 482, 484, 485, 491, 503, 507, 511, 520, 521, 566, 567, 568, 569], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 126, 206, 373, 377, 378, 386, 392, 397, 398, 409, 434, 438, 454, 462, 470, 472, 475, 482, 484, 491, 492, 507], "description_width": [454, 462, 475, 491, 492], "descriptionstyl": [454, 462, 475, 491, 492], "descriptor": [87, 88, 91, 102, 105, 109, 110, 267, 308, 373, 419], "desi": 485, "design": [377, 378, 381, 382, 385, 386, 388, 392, 394, 396, 397, 411, 431, 438], "desir": [16, 84, 87, 90, 91, 104, 123, 156, 186, 187, 196, 199, 282, 347, 348, 349, 475, 493, 520], "desktop": 409, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 102, 105, 109, 110, 124, 125, 146, 147, 153, 158, 161, 164, 187, 199, 201, 206, 209, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 267, 268, 269, 372, 373, 375, 377, 380, 381, 382, 385, 386, 387, 391, 392, 393, 397, 398, 401, 403, 407, 409, 410, 417, 421, 422, 440, 441, 442, 446, 448, 449, 450, 451, 456, 457, 458, 461, 462, 466, 471, 472, 474, 475, 476, 477, 478, 480, 482, 484, 485, 487, 492, 493, 503, 504, 506, 512, 516, 517, 519, 564, 565, 566, 567, 571], "detect": [59, 137, 138, 279, 362, 363, 373, 388, 391, 392, 394, 411, 417, 418, 419, 429, 431, 432, 438, 440, 453, 470, 482, 484, 487, 503, 519, 566, 569], "detect_t": 392, "detector": [83, 88, 103, 108, 150, 476, 484, 512, 566], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 112, 131, 149, 155, 157, 159, 171, 172, 174, 176, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 299, 321, 383, 387, 390, 398, 425, 437, 438, 441, 448, 451, 452, 457, 464, 474, 476, 497, 565], "determinist": 372, "deti": [83, 103, 108, 385, 482], "detx": [83, 103, 108, 385, 482], "dev": [11, 16, 82, 84, 90, 104, 123, 372, 374, 375, 388, 398, 401, 402, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 533, 561, 562], "dev942": [104, 123, 409, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "develop": [373, 377, 378, 380, 381, 382, 383, 385, 386, 388, 389, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 405, 409, 411, 424, 431, 432, 433, 482], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 125, 189, 201, 206, 282, 286, 472, 480], "devoid": [446, 510], "devop": 398, "devot": 487, "dex": 299, "df": [87, 91, 119, 139, 457, 472, 569], "diagnosi": 381, "diagnost": 388, "diagon": [145, 146, 147, 390, 400, 483], "diagram": 571, "dialog": [404, 406], "diamet": [187, 188, 189, 443], "diamond": 479, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 119, 122, 123, 124, 125, 126, 127, 129, 130, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 173, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 279, 280, 281, 282, 283, 287, 297, 311, 319, 320, 335, 338, 339, 340, 343, 353, 354, 355, 356, 359, 360, 361, 365, 366, 367, 368, 369, 372, 387, 389, 393, 396, 399, 416, 420, 423, 431, 447, 454, 464, 465, 470, 472, 475, 479, 491, 492, 519, 524, 533], "dict_kei": [442, 533], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 119, 122, 123, 124, 125, 126, 129, 130, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 173, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 281, 282, 283, 287, 309, 335, 338, 339, 340, 343, 353, 356, 366, 389, 391, 396, 399, 400, 446, 448, 454, 472, 473, 479, 480, 562], "dictionnari": 365, "did": [77, 379, 386, 391, 392, 393, 395, 398, 414, 441, 449, 451, 454, 456, 462, 466, 472, 480, 482], "didn": [83, 88, 379, 382, 386, 389, 495], "diff": [101, 102, 105, 109, 110, 372, 375, 380, 384, 454, 462, 492], "diff_flux": 469, "diff_flux_point": [101, 471], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 119, 121, 122, 124, 125, 126, 129, 130, 132, 137, 142, 143, 144, 145, 148, 150, 152, 155, 160, 170, 188, 189, 191, 194, 195, 196, 197, 199, 200, 201, 279, 280, 281, 283, 329, 333, 347, 348, 363, 372, 373, 375, 377, 378, 380, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 398, 400, 402, 404, 406, 415, 418, 420, 430, 433, 434, 435, 437, 441, 446, 447, 448, 451, 454, 457, 458, 459, 460, 463, 464, 466, 470, 471, 472, 474, 476, 477, 478, 479, 480, 483, 484, 487, 491, 493, 495, 503, 505, 507, 512, 519, 520, 525, 526, 565, 567, 568, 569], "different": 380, "differenti": [23, 79, 122, 124, 131, 188, 189, 191, 193, 197, 200, 201, 242, 257, 272, 273, 326, 378, 383, 390, 396, 430, 475, 478, 483, 493, 505, 566], "differential_flux": 124, "difficult": [383, 386, 402], "diffus": [68, 188, 189, 191, 197, 200, 201, 274, 372, 388, 391, 432, 433, 454, 458, 470, 475, 477, 478, 482, 564], "diffuse_cub": 478, "diffuse_galactic_fermi": 477, "diffuse_iem": [477, 483], "diffuse_iso": [477, 483], "diffuse_model": 274, "difrsp0": [483, 493], "difrsp1": [483, 493], "difrsp2": [483, 493], "difrsp3": [483, 493], "difrsp4": [483, 493], "digit": 372, "dilat": [201, 423], "dim": [155, 328, 428, 429, 456, 566], "dimens": [46, 53, 102, 105, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 170, 186, 187, 188, 189, 191, 192, 194, 196, 197, 199, 200, 201, 265, 266, 269, 299, 311, 365, 388, 420, 431, 433, 437, 472, 473, 475, 478, 487, 503, 519, 520, 525], "dimension": [31, 32, 37, 68, 87, 91, 186, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 228, 231, 275, 312, 325, 378, 386, 400, 404, 429, 450, 472, 473, 475, 478, 493, 511, 513, 519, 520, 565, 566], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 150, 262, 263, 298, 460, 478], "dimitri": [423, 425], "dipol": [51, 54], "dirac": 19, "direct": [91, 104, 160, 178, 179, 182, 184, 193, 220, 228, 231, 303, 306, 373, 378, 384, 386, 391, 393, 396, 399, 423, 440, 445, 449, 474, 487, 503, 504, 512, 513, 515, 516, 519, 524, 564, 565, 566], "directional_offset_bi": [441, 449], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 88, 90, 91, 104, 123, 136, 160, 175, 188, 189, 191, 197, 200, 201, 265, 267, 269, 372, 374, 375, 377, 379, 380, 383, 384, 385, 386, 390, 392, 399, 404, 406, 407, 411, 413, 414, 415, 417, 431, 438, 444, 446, 447, 449, 454, 455, 456, 459, 460, 462, 463, 465, 466, 470, 471, 472, 473, 475, 476, 477, 478, 479, 482, 483, 491, 492, 493, 495, 503, 507, 512, 516, 519, 543, 569], "directori": [11, 82, 87, 372, 388, 447, 457, 485, 491, 493, 504, 507, 567], "dirk": [414, 428, 430], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372, 423], "disable_unicode_literals_warn": 372, "disadvantag": 567, "disagr": 377, "disambigu": 377, "disc": [451, 452, 454, 459], "discard": [399, 470], "discard_on_copi": [87, 91], "discarded_ind": 470, "discarded_spati": 470, "discarded_t": 470, "disccus": 381, "discourag": 372, "discov": 567, "discrep": 446, "discret": [91, 295, 385, 472, 519], "discuss": [13, 59, 270, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 409, 431, 480, 485, 496, 571], "disjoint": 386, "disk": [82, 110, 147, 150, 189, 199, 201, 220, 231, 233, 350, 371, 372, 382, 383, 384, 388, 395, 396, 440, 441, 446, 454, 455, 475, 476, 477, 478, 518, 521, 526, 530, 532], "disk_inc": 386, "diskspatialmodel": [72, 251, 395, 416, 437, 477, 478, 524], "dismiss": 100, "disp": [511, 512], "dispatch": 383, "dispers": [82, 88, 102, 103, 105, 107, 108, 109, 110, 111, 113, 115, 145, 146, 147, 150, 168, 174, 175, 178, 179, 182, 372, 378, 383, 384, 385, 417, 419, 429, 430, 431, 433, 441, 443, 446, 447, 454, 458, 474, 484, 485, 491, 492, 503, 512, 515, 566], "displac": 303, "displai": [11, 15, 82, 87, 91, 117, 129, 132, 206, 287, 320, 365, 369, 372, 373, 402, 423, 426, 437, 438, 441, 443, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 462, 464, 466, 467, 470, 471, 472, 475, 477, 478, 482, 483, 485, 507, 567], "display_length": [87, 91], "disrupt": [412, 413], "dissolv": 416, "dist": [322, 402], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 126, 137, 138, 196, 242, 269, 295, 302, 328, 386, 429, 436, 448, 450, 460, 469, 470, 472, 501, 516, 543], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 469], "distance_max": [46, 47, 328, 470], "distance_min": [47, 328, 470], "distance_refer": 470, "distinct": [387, 388, 393, 484, 570], "distinguish": [281, 283, 396, 399, 441, 475], "distort": [386, 415], "distrib": [101, 446], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 101, 108, 139, 150, 185, 225, 236, 242, 281, 283, 321, 322, 326, 365, 368, 370, 371, 372, 376, 377, 380, 385, 390, 391, 394, 397, 398, 402, 405, 416, 425, 431, 437, 438, 441, 446, 448, 449, 452, 454, 458, 460, 462, 464, 472, 477, 480, 482, 493, 495, 507, 511, 512, 514, 520, 528, 543, 568, 569], "divers": 396, "divid": [187, 193, 198, 393, 396, 448, 458, 479, 484, 485], "divis": 193, "djangoproject": 392, "djuvsland": 438, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 174, 192, 193, 297, 298, 373, 378, 380, 381, 383, 392, 399, 404, 408, 414, 417, 419, 425, 434, 438, 443, 446, 447, 448, 451, 452, 454, 464, 465, 474, 476, 479, 489, 491, 492, 503, 507, 509, 510, 511, 513, 514, 516, 517, 565, 566], "dl4": [99, 101, 102, 105, 109, 110, 117, 121, 125, 129, 132, 153, 174, 378, 399, 404, 419, 466, 471, 472, 507, 565, 566], "dl5": [117, 121, 125, 129, 132, 399, 438, 466, 472, 565, 566], "dl6": [117, 121, 125, 129, 132, 565, 566], "dm": [19, 20, 26, 401, 419, 434, 469, 478], "dm_exampl": 495, "dmfitfunct": 495, "dmpipe": 495, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 469, 495], "dmsky": 495, "dn": [225, 236, 469], "dnde": [19, 20, 26, 67, 122, 123, 124, 131, 133, 134, 135, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 272, 396, 423, 444, 446, 447, 456, 460, 470, 471, 478, 483, 491, 493, 505], "dnde_cu": 273, "dnde_err": [122, 124, 505], "dnde_errn": [67, 122, 124, 470], "dnde_error": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "dnde_errp": [67, 122, 124, 470], "dnde_ref": [122, 124, 396], "dnde_scan_valu": [122, 124], "dnde_ul": [67, 122, 124, 470, 493], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 104, 123, 145, 156, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 323, 365, 373, 375, 377, 378, 379, 382, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 401, 402, 404, 406, 417, 442, 444, 446, 447, 449, 450, 451, 452, 454, 456, 457, 458, 462, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 482, 483, 491, 492, 493, 503, 507, 514, 519, 564, 567, 570, 571], "do_someth": 372, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 104, 123, 145, 187, 193, 196, 199, 206, 219, 241, 299, 336, 372, 373, 375, 377, 380, 386, 388, 389, 391, 392, 401, 408, 409, 411, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 520, 531, 533, 539, 542, 555, 561, 562, 566, 567, 571], "docker": [389, 402], "dockerfil": [380, 401, 402], "docstr": [372, 392, 398, 423, 424, 425, 427, 430, 436, 437, 438, 478], "doctest": [156, 360, 373], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 283, 307, 311, 321, 346, 359, 372, 374, 376, 377, 379, 380, 382, 386, 388, 389, 391, 393, 395, 397, 398, 402, 403, 408, 409, 410, 417, 419, 420, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 475, 477, 482, 484, 485, 507, 518, 519, 520, 567], "doe": [16, 84, 87, 90, 91, 104, 123, 125, 129, 148, 158, 161, 195, 233, 268, 279, 372, 373, 379, 380, 382, 384, 386, 387, 389, 391, 392, 395, 396, 398, 399, 414, 423, 434, 441, 442, 446, 449, 451, 454, 456, 457, 470, 472, 473, 474, 475, 476, 484, 495, 507, 516, 567], "doesn": [69, 372, 373, 377, 379, 380, 386, 389, 390, 392, 482, 483, 567], "dof": 569, "doi": [139, 398], "domain": [188, 189, 191, 197, 200, 201, 372, 386, 463], "domenico": 429, "dominguez": [221, 222, 395, 442, 533], "dominquez": 221, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 145, 371, 372, 375, 377, 379, 380, 389, 399, 402, 443, 446, 451, 456, 464, 476, 478, 565, 567, 570, 571], "donath": [381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 125, 146, 147, 153, 158, 161, 365, 372, 373, 375, 377, 378, 379, 383, 385, 386, 387, 388, 390, 391, 392, 395, 396, 398, 404, 408, 432, 437, 443, 449, 454, 455, 459, 460, 462, 466, 467, 471, 474, 475, 478, 479, 503, 507, 515, 516, 520, 552, 569, 571], "dos2unix": 372, "dot": [50, 51, 54, 109, 110, 188, 189, 191, 197, 200, 201, 437], "doubl": [27, 121, 133, 287, 398, 430, 438], "doubling_dict": 287, "down": [50, 51, 54, 132, 377, 379, 382, 386, 391, 415, 471, 483, 570], "downgrad": [187, 371], "download": [67, 94, 101, 124, 375, 380, 388, 389, 392, 399, 401, 403, 404, 406, 408, 412, 413, 415, 416, 423, 432, 433, 434, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567], "downsampl": [102, 105, 109, 110, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 414, 420, 429, 471], "downsampled_energi": 471, "downsampling_factor": [132, 456], "downward": [281, 283], "dozen": 372, "dpp": 398, "dr": [17, 18, 21, 22, 24, 25, 27, 526], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 150, 168, 263, 297, 298, 373, 380, 392, 408, 440, 443, 446, 447, 452, 454, 465, 474, 479, 489, 491, 492, 504, 507, 509, 510, 511, 513, 514, 516, 517, 521, 553], "dr2": [65, 263, 423, 440, 521, 553], "dr3": [65, 262, 440, 478, 521, 553], "dr4": [65, 438], "draft": [372, 376, 377, 400, 432], "drag": 375, "draw": [33, 189, 321, 385, 480], "drawback": [387, 391], "drawn": [321, 385], "drift": [85, 94, 95, 434], "drive": 388, "driven": [11, 15, 378, 388, 390, 392, 431, 487, 506], "drop": [52, 53, 102, 105, 109, 110, 122, 124, 129, 146, 147, 153, 158, 161, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 220, 227, 267, 357, 376, 377, 388, 389, 394, 413, 416, 417, 420, 423, 430, 433, 458, 475, 503], "ds9": [83, 187, 196, 199, 203, 219, 241, 372, 373, 386, 415, 476, 478, 520], "ds9parser": 386, "dss": 382, "dt": [87, 91], "dtime_t": 463, "dtype": [33, 38, 87, 91, 111, 115, 143, 145, 148, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 219, 241, 299, 372, 400, 448, 451, 460, 470, 471, 473, 474, 475, 482, 483, 493, 505], "duck": [16, 84, 90, 104, 123], "due": [59, 87, 91, 372, 400, 426, 440, 445, 446, 475, 480, 482, 487, 503, 505, 543, 564, 567], "dummi": [109, 110, 386, 451, 507], "dump": [16, 84, 90, 104, 123, 388], "dumps_kwarg": [16, 84, 90, 104, 123], "duplic": [87, 91, 100, 146, 372, 373, 375, 378, 392, 393, 396, 420, 423], "durat": [83, 86, 88, 94, 449, 458, 462, 465, 482, 504, 507], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 102, 104, 105, 109, 110, 123, 165, 279, 373, 380, 384, 388, 391, 392, 394, 397, 398, 399, 400, 401, 402, 417, 420, 437, 438, 447, 448, 458, 464, 465, 471, 474, 476, 480, 492, 503, 504, 566, 570], "dust": 221, "duti": 398, "dwarf": 495, "dx": [33, 303], "dy": [33, 303], "dynam": [369, 504], "dz": 303, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 104, 113, 123, 124, 137, 145, 146, 147, 148, 150, 181, 187, 188, 189, 191, 193, 195, 197, 199, 200, 201, 206, 209, 211, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 281, 283, 287, 299, 301, 305, 331, 339, 350, 361, 362, 367, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 408, 409, 411, 412, 413, 417, 423, 424, 425, 429, 431, 432, 433, 437, 440, 442, 443, 444, 446, 447, 448, 449, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 491, 492, 493, 495, 502, 503, 504, 505, 507, 511, 512, 517, 518, 519, 524, 525, 526, 533, 534, 536, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551, 561, 564, 566, 567, 568, 569, 570, 571, 572], "e2dnd": [19, 20, 26, 122, 123, 124, 131, 133, 134, 135, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 396, 423, 430, 441, 442, 444, 446, 447, 448, 455, 470, 493, 505, 507, 543], "e2dnde_err": [122, 124], "e2dnde_errn": [122, 124, 470], "e2dnde_errp": [122, 124, 470], "e2dnde_ref": [122, 124], "e2dnde_ul": [122, 124, 470], "e501": [19, 20, 125, 145, 181, 192, 193, 199, 221, 274, 369], "e_": [19, 20, 26, 50, 52, 53, 145, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 503, 509, 511, 512, 513, 534, 538, 546, 548, 549], "e_0": [223, 224, 225, 235, 236, 247, 248, 258, 261, 262, 263, 537, 538, 541, 543, 545, 548, 549, 550, 551], "e_b": 395, "e_cut": [67, 470], "e_cutoff": 543, "e_d": [247, 248], "e_edg": 420, "e_max": [67, 124, 396, 441, 446, 447, 448, 459, 464, 470, 471, 472, 475, 480, 493, 505], "e_min": [67, 124, 396, 441, 446, 447, 448, 459, 464, 470, 471, 472, 475, 480, 483, 493, 505], "e_peak": [225, 236], "e_reco": [111, 115, 145, 150, 467, 566], "e_ref": [67, 124, 396, 441, 446, 447, 464, 470, 491, 493, 505], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 444, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 456, "e_sn": [43, 44, 52], "e_tru": [111, 115, 150, 467, 483, 566], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 102, 105, 108, 109, 110, 114, 116, 117, 119, 121, 122, 124, 125, 129, 131, 132, 133, 134, 135, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 169, 170, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 206, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 297, 336, 361, 370, 372, 375, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 392, 393, 396, 398, 402, 403, 410, 417, 420, 431, 434, 437, 443, 449, 450, 452, 454, 455, 456, 458, 459, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 484, 485, 492, 496, 502, 503, 504, 507, 511, 512, 513, 519, 520, 527, 543, 544, 566, 567, 570, 571], "eager": 388, "earli": [386, 391, 392, 482], "earlier": [379, 398], "earth": [41, 88, 90, 272, 483], "earth_azimuth_angl": [483, 493], "earthloc": [83, 85, 88, 90, 94, 97, 309, 399], "easi": [372, 373, 378, 383, 386, 387, 388, 391, 392, 396, 399, 417, 423, 431, 475, 476, 483, 504, 564, 565, 567, 571], "easier": [372, 378, 383, 391, 396, 431, 434, 482], "easiest": 405, "easili": [87, 91, 124, 378, 383, 384, 388, 399, 404, 405, 464, 465, 472, 473, 475, 483, 493, 567], "ebel": 450, "ebl": [221, 222, 270, 390, 395, 417, 420, 430, 437, 440, 445, 478, 487, 503, 505, 521, 553, 564], "ebl_data_builtin": [442, 533], "ebl_dominguez11": [222, 533], "ebl_franceschini": [222, 270], "ebl_franceschini_2017": 222, "ebl_saldana": 222, "eblabsorbtionnormspectralmodel": 395, "eblabsorptionnormspectralmodel": [252, 395, 420, 442, 478, 533], "ebltabl": 442, "ebound": [145, 193, 520], "ebreak": [213, 258, 534, 548], "ec": [467, 478, 520], "eccentr": [220, 228, 231, 524, 525, 526], "echo": 567, "eco": 398, "ecosystem": 399, "ecpl": [67, 80, 223, 224, 225, 279, 395, 429, 444, 470, 478], "ecpl_norm": 539, "ecsv": [59, 63, 384], "ecut": [223, 261, 538, 549], "edelson": [288, 463], "edelson2002": 288, "edg": [102, 105, 109, 110, 117, 119, 121, 125, 128, 129, 132, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 157, 159, 160, 168, 169, 174, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 220, 365, 386, 396, 414, 420, 423, 441, 442, 446, 455, 456, 457, 458, 459, 463, 473, 474, 475, 476, 483, 484, 491, 514, 524], "edge_max": 524, "edge_min": 524, "edge_width": [220, 477, 524], "edgecolor": [369, 446, 448, 450, 456, 457, 460, 467, 469, 516, 524, 525, 526], "edges_max": [190, 192, 193, 198, 475], "edges_min": [190, 192, 193, 198, 475], "edisp": [16, 82, 87, 88, 96, 102, 105, 106, 109, 110, 111, 115, 145, 146, 147, 150, 154, 168, 174, 175, 178, 179, 257, 297, 298, 373, 382, 383, 384, 385, 388, 418, 420, 423, 429, 430, 431, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 462, 465, 466, 471, 474, 479, 482, 483, 484, 485, 491, 503, 511, 512, 566], "edisp2d": [147, 150, 373], "edisp3d": 473, "edisp_": 503, "edisp_2d": [82, 87, 150, 482, 485], "edisp_3d": 473, "edisp_ev": 473, "edisp_kernel": [145, 471, 511], "edisp_kernel_map": [146, 484], "edisp_map": [103, 108, 146, 147, 473, 511], "edisp_new": 473, "edispersionmap": 503, "edispkernel": [105, 111, 115, 146, 150, 178, 418, 511], "edispkernelmap": [102, 105, 106, 109, 110, 113, 147, 153, 154, 158, 161, 168, 175, 178, 419, 420, 450, 474, 483, 507, 511], "edispmap": [102, 103, 105, 108, 109, 110, 146, 153, 154, 158, 161, 168, 175, 178, 179, 384, 385, 393, 413, 416, 417, 418, 420, 423, 473, 511], "edit": [373, 375, 377, 379, 380, 381, 388, 392, 401, 402, 405, 491, 567], "editor": [373, 398, 447, 491, 567], "editori": 398, "edm": 472, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 125, 148, 187, 196, 199, 206, 219, 238, 241, 272, 273, 282, 289, 392, 472, 520], "eemin": 543, "eff": [148, 509, 512, 525, 526], "eff_area": 473, "effarea": 473, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 105, 107, 147, 148, 174, 175, 180, 182, 183, 196, 219, 241, 362, 363, 372, 377, 382, 383, 385, 386, 396, 427, 429, 446, 458, 460, 463, 464, 480, 484, 485, 487, 491, 512, 520, 525, 526, 566], "effective_area": [154, 385, 482], "effective_livetim": 474, "effective_times_src": 474, "effectivearea3d": 473, "effectiveareat": [384, 411, 423, 427], "effectiveareatable2d": [88, 147, 154, 160, 182, 378, 427, 473, 482, 509], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 105, 110, 377, 383, 384, 385, 386, 387, 394, 444, 479, 512, 517, 569], "effort": [379, 381, 388, 389, 391, 392, 395, 414, 503], "eflux": [19, 20, 26, 122, 123, 124, 133, 134, 135, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 396, 423, 460, 478, 505], "eflux_err": [122, 124, 396], "eflux_errn": [122, 124], "eflux_errp": [122, 124], "eflux_ref": [122, 124], "eflux_ul": [122, 124], "eg": [372, 442, 454, 462, 466, 471, 473, 477, 478], "egal": 482, "egg": 405, "einasto": [21, 495], "either": [67, 82, 87, 88, 91, 95, 110, 122, 124, 150, 165, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 233, 282, 299, 329, 361, 373, 375, 377, 379, 386, 388, 391, 394, 398, 404, 423, 437, 447, 454, 460, 466, 471, 472, 478, 480, 491, 503, 505, 507, 518, 520, 564, 567], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 469], "elabor": [398, 450], "elaps": [83, 381, 566], "electron": [50, 272, 482, 543], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 102, 105, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 194, 196, 197, 199, 200, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 365, 390, 437, 470, 475, 519], "elementtre": 482, "elev": 387, "elif": [372, 386, 399], "elli": [411, 424], "ellips": [220, 386, 520, 524], "ellipseannulusskyregion": [516, 520], "ellipseskyregion": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 443, 478, 516], "ellipsoid": 472, "ellipt": [520, 526], "elong": [413, 416, 417, 524, 525], "elpas": 437, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 122, 124, 132, 195, 372, 375, 386, 389, 396, 399, 400, 402, 404, 406, 479, 567, 569], "elsewher": [114, 116], "email": [373, 375, 398, 402], "emax": [129, 246, 273, 451, 457, 546], "emax_fit": 467, "embryon": 388, "emce": [381, 389, 413, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "emerg": 382, "emeri": 432, "emin": [129, 246, 273, 451, 457, 546], "emin_fit": 467, "emiss": [52, 68, 133, 378, 383, 387, 446, 452, 454, 455, 458, 477, 482, 483, 503, 517, 543, 564], "emit": [82, 209, 210, 211, 212, 358, 372, 413, 431, 442, 512], "emitt": 446, "emmanoulopoulo": 295, "emmanoulopoulos2010": 295, "emphasi": 472, "empir": 40, "emploi": 448, "empti": [92, 100, 102, 105, 109, 110, 137, 168, 188, 189, 191, 195, 197, 200, 201, 206, 241, 358, 380, 382, 414, 426, 454, 458, 459, 462, 466, 474, 475, 484, 496, 503, 516, 517, 520], "empty_dataset": 441, "empty_i": 466, "empty_map": [102, 105, 109, 110, 457, 474, 516], "emsembl": 93, "en": [34, 83, 87, 88, 91, 125, 181, 196, 206, 270, 299, 375, 392, 441, 449, 451, 454, 456, 462, 466, 472, 473, 476, 482, 504, 507, 518, 520], "enabl": [381, 384, 405, 414, 423, 432, 441, 449, 451, 454, 456, 462, 466, 482, 514], "encapsul": [199, 396, 518], "enclos": [201, 373, 443, 448, 472, 476], "enclosur": [82, 152, 448, 473], "encod": [16, 84, 87, 90, 91, 104, 123], "encompass": [187, 518, 520], "encount": [162, 404, 405, 406, 407, 448, 458, 466, 485, 555, 567], "encourag": [372, 377, 398, 401, 431], "end": [52, 53, 86, 87, 91, 92, 94, 100, 102, 109, 122, 124, 132, 193, 233, 241, 377, 379, 381, 383, 384, 386, 387, 388, 389, 391, 392, 395, 424, 434, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 569], "end_po": [126, 332, 460], "endswith": 372, "energet": 458, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 124, 125, 126, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 168, 170, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 200, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 367, 368, 372, 378, 381, 383, 384, 385, 386, 387, 388, 390, 391, 394, 396, 400, 404, 408, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 425, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 442, 443, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 458, 460, 461, 462, 464, 465, 466, 467, 470, 471, 474, 475, 484, 485, 487, 491, 492, 493, 502, 503, 504, 507, 512, 514, 515, 516, 518, 519, 520, 527, 533, 539, 542, 544, 547, 552, 562, 564, 565, 566, 568], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 115, 122, 124, 145, 146, 147, 150, 158, 160, 161, 168, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 396, 441, 443, 446, 448, 449, 450, 452, 456, 458, 459, 465, 466, 471, 473, 474, 475, 478, 483, 484, 492, 511, 514, 516, 517, 519, 520], "energy_axis_new": 471, "energy_axis_tru": [102, 105, 109, 110, 111, 112, 113, 115, 145, 146, 147, 148, 150, 155, 156, 158, 168, 373, 417, 441, 443, 446, 448, 449, 450, 452, 456, 458, 459, 462, 465, 466, 467, 471, 473, 474, 483, 484, 492, 511, 514, 516, 517], "energy_bin": 388, "energy_bin_per_decade_max": 112, "energy_bound": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 386, 423, 442, 444, 446, 448, 454, 455, 467, 469, 470, 472, 478, 483, 492, 493, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552], "energy_cent": 267, "energy_column": 396, "energy_depend": 457, "energy_dependent_estim": [440, 457, 461], "energy_edg": [16, 117, 119, 121, 125, 126, 129, 132, 137, 138, 141, 193, 319, 396, 442, 446, 447, 450, 451, 452, 454, 455, 456, 457, 460, 464, 465, 466, 467, 484, 491, 492, 505], "energy_estim": 484, "energy_flux": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 478, 493], "energy_flux_err": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "energy_flux_error": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "energy_index": 155, "energy_integr": 51, "energy_logspac": 391, "energy_mask": [186, 187, 196, 199, 419, 448, 454, 467, 471, 472, 476, 480], "energy_max": [19, 20, 26, 83, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 145, 186, 187, 193, 196, 199, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 267, 270, 275, 386, 388, 454, 459, 467, 469, 471, 474, 478, 493], "energy_min": [19, 20, 26, 52, 53, 83, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 145, 186, 187, 193, 196, 199, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 267, 270, 275, 386, 388, 454, 459, 467, 469, 471, 474, 478, 493], "energy_nam": [158, 161], "energy_nod": [395, 478], "energy_pow": [19, 20, 26, 124, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 277, 446, 454, 467, 472, 492, 493], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 102, 105, 109, 110, 423, 471, 476, 550, 551], "energy_range_fit": [102, 105, 109, 110, 471], "energy_range_saf": [102, 105, 109, 110, 471], "energy_range_tot": [102, 105, 109, 110, 476], "energy_reco": [372, 462], "energy_ref": [122, 124], "energy_resolut": 431, "energy_saf": 388, "energy_tru": [16, 96, 102, 105, 109, 110, 111, 115, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 168, 175, 178, 186, 187, 193, 196, 199, 297, 298, 372, 373, 385, 437, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 462, 464, 465, 466, 467, 471, 473, 474, 475, 476, 478, 479, 482, 483, 484, 491, 492, 511, 512, 514, 516, 517, 519, 520], "energy_true_axi": 145, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 415, "energydependentmorphologi": 457, "energydependentmorphologyestim": [438, 457], "energydependentmultigausspsf": [154, 411, 473, 482, 513], "energydependenttablepsf": [378, 393, 412, 423], "energydispers": [145, 146, 147, 150, 384, 418, 428, 431, 432], "energydispersion2d": [88, 145, 147, 154, 160, 178, 179, 373, 378, 423, 425, 430, 473, 482, 511], "energydispersion3d": 473, "energyoffsetarrai": 428, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 375, 399], "engin": [87, 91], "english": 507, "enhanc": [377, 381, 408], "enlarg": 517, "enough": [385, 387, 388, 446, 449, 452, 462, 464, 476, 514], "enrico": 388, "enrico_config": 388, "enrico_xml": 388, "enriqu": [380, 388, 392, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 431, 432, 433], "ensembl": 93, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 174, 194, 279, 372, 378, 383, 384, 395, 399, 405, 425, 441, 446, 465, 476, 514, 519, 528], "enter": [210, 212, 219, 241, 408], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 175, 443, 454, 457, 463], "entri": [43, 44, 87, 91, 94, 119, 122, 125, 126, 129, 130, 132, 206, 207, 219, 241, 279, 339, 372, 384, 392, 396, 399, 401, 404, 406, 423, 434, 443, 447, 470, 472, 475, 478, 479, 507, 508, 520], "entry_point": 424, "enum": [95, 151, 314, 315], "enumer": [446, 458, 470, 472, 477, 480], "env": [375, 389, 401, 403, 404, 406, 407, 432, 567], "envelop": [385, 472, 492], "environ": [11, 82, 337, 371, 372, 375, 379, 380, 384, 389, 392, 401, 402, 404, 405, 406, 407, 408, 412, 413, 415, 431, 432, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 567], "envis": 381, "envvar": 11, "eosc": 398, "episod": 133, "epoch": 355, "epsilon": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "epsilon_": [102, 109, 503], "epsilon_k": [102, 109, 503], "epsmch": 472, "eq": 101, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 395, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 117, 121, 125, 129, 132, 145, 193, 372, 382, 385, 433, 446, 464, 465, 476, 480, 503, 519, 570], "equat": [27, 262, 263, 288, 529, 530, 534, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551, 569, 570], "equatori": [95, 151, 187, 188, 189, 191, 194, 196, 199, 200, 201, 473], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 186, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 365, 373, 384, 385, 386, 395, 396, 437, 438, 446, 470, 474, 475, 476, 478, 482, 491, 503, 505, 507, 518, 519, 520, 567, 568, 569], "er": [26, 469], "era": 221, "ereco": [145, 473], "erf": [229, 524], "erg": [52, 53, 67, 441, 446, 470, 493, 500, 507], "erlangen": 391, "erod": 201, "eros": [199, 201], "err": 472, "errat": 372, "errn": [121, 125, 129, 130, 132, 206, 434, 569], "errn_2sigma": 569, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 101, 102, 104, 105, 109, 110, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 164, 190, 193, 198, 209, 211, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 281, 283, 287, 288, 289, 295, 350, 372, 373, 386, 387, 388, 390, 395, 396, 399, 400, 413, 417, 419, 421, 423, 424, 426, 430, 431, 434, 436, 437, 438, 442, 443, 444, 446, 447, 449, 451, 454, 455, 456, 457, 459, 462, 463, 464, 466, 467, 470, 478, 479, 480, 482, 491, 492, 493, 495, 503, 505, 507, 525, 543, 552, 564, 567], "error_callback": 164, "errorbar": [83, 101, 102, 105, 109, 110, 193, 197, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 441, 480], "errp": [121, 125, 129, 130, 132, 206, 434, 569], "errp_2sigma": 569, "escap": [372, 398], "especi": [87, 91, 133, 375, 379, 382, 386, 392, 393, 402, 423, 429, 443, 456, 465, 470, 475, 480, 482, 483], "essenti": [382, 384, 387, 417, 418, 419, 460, 475], "establish": [372, 385], "estim": [6, 19, 20, 26, 50, 72, 101, 105, 110, 112, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 163, 169, 170, 171, 177, 186, 187, 196, 199, 201, 206, 209, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 279, 286, 289, 293, 319, 365, 376, 378, 381, 385, 386, 387, 388, 391, 394, 400, 404, 413, 414, 417, 418, 419, 420, 423, 424, 425, 429, 430, 431, 432, 434, 437, 438, 440, 441, 442, 446, 448, 452, 454, 455, 456, 459, 461, 465, 466, 467, 468, 471, 472, 476, 480, 484, 487, 491, 492, 503, 507, 517, 519, 564, 565, 566, 568, 570], "estimate_best_fit": [125, 126, 129, 130], "estimate_count": [125, 126, 129, 130], "estimate_energy_depend": 119, "estimate_errn_errp": [125, 126, 129, 130], "estimate_excess_map": 121, "estimate_exposure_reco_energi": 121, "estimate_fit_input_map": 132, "estimate_flux_default": 132, "estimate_flux_map": 132, "estimate_flux_point": [125, 126, 129], "estimate_kernel": [121, 132], "estimate_map": 117, "estimate_mask_default": [121, 132], "estimate_min_e2dnd": 131, "estimate_min_excess": 131, "estimate_npr": [125, 126, 129, 130], "estimate_npred_excess": [125, 126, 129], "estimate_pad_width": 132, "estimate_scan": [125, 126, 129, 130], "estimate_t": [125, 126, 129, 130], "estimate_time_bin_flux": 129, "estimate_ul": [125, 126, 129, 130], "estimator_result": [139, 467], "et": [26, 33, 59, 101, 133, 148, 221, 288, 289, 295, 382, 450, 457, 463, 495, 566], "eta": [231, 232, 254, 526, 530, 557], "eta_": 50, "eta_b": 50, "eta_rang": [526, 530], "etc": [105, 110, 122, 372, 377, 378, 382, 383, 384, 387, 388, 392, 393, 396, 398, 399, 420, 447, 449, 454, 462, 464, 466, 467, 471, 475, 478, 480, 483, 491, 503, 516, 566], "etru": 473, "eu": 392, "euclidean": 297, "europ": 398, "ev": [473, 507, 543], "ev2": 473, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 102, 105, 108, 109, 110, 125, 129, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 175, 181, 196, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 312, 372, 377, 381, 387, 390, 391, 394, 395, 396, 400, 412, 413, 414, 416, 419, 423, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 458, 459, 467, 473, 478, 480, 482, 483, 503, 525, 526, 533, 566, 569], "evaluate_contain": [149, 157, 159, 425], "evaluate_direct": [149, 157, 159], "evaluate_energy_flux": [247, 248], "evaluate_error": [19, 20, 26, 124, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 390], "evaluate_geom": [215, 216, 220, 227, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269, 438, 478, 526], "evaluate_integr": [246, 247, 248], "evaluate_paramet": [149, 157, 159], "evaluation_bin_size_min": [215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269], "evaluation_radiu": [215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 267, 269, 383, 384, 395, 478], "evaluation_region": [215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 199, 210, 212, 372, 375, 377, 379, 380, 386, 389, 390, 398, 399, 415, 464, 467, 472, 474, 475, 476, 477, 478, 491, 503, 505, 529, 530, 567], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 103, 104, 108, 113, 121, 131, 147, 158, 161, 162, 169, 177, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 329, 372, 373, 376, 378, 382, 384, 386, 387, 388, 399, 404, 408, 415, 416, 417, 419, 423, 424, 425, 430, 431, 432, 433, 434, 437, 438, 440, 443, 446, 447, 448, 452, 454, 455, 461, 466, 474, 484, 487, 489, 491, 492, 503, 507, 515, 516, 517, 565, 566, 569], "event_3fhl": 493, "event_class": [84, 483, 493], "event_det_coord": [103, 108], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [385, 482, 483, 493, 504], "event_list": [83, 372, 373, 385], "event_list_meta": [103, 108, 418], "event_sampl": [440, 458, 461], "event_sampling_nrg_depend_model": [440, 459, 461], "event_typ": [104, 483, 493], "eventlist": [84, 88, 103, 108, 177, 188, 189, 191, 197, 200, 201, 372, 373, 378, 385, 386, 387, 399, 408, 413, 420, 425, 427, 428, 429, 431, 432, 458, 459, 467, 475, 482, 483, 493, 507, 516], "eventlistbas": 89, "eventlistdataset": 432, "eventlistlat": 504, "eventlistmetadata": [83, 399], "events2": 83, "events_": 458, "events_0001": 458, "events_1": 504, "events_2": 504, "events_3fhl": 493, "events_bkg": 385, "events_gc_3fhl": 493, "events_list": 385, "events_path": [82, 458], "events_src": 385, "events_tot": 385, "events_vela": 467, "eventu": [372, 377, 388, 391, 392, 408, 478], "ever": 570, "everi": [187, 189, 201, 269, 372, 375, 380, 381, 382, 384, 388, 397, 399, 402, 443, 446, 475, 492, 567], "everyon": 377, "everyth": [372, 390, 391, 507], "everywher": [372, 386, 391, 392, 412], "evid": [133, 470], "evolut": [50, 52, 53, 221, 378, 392, 440, 461, 487, 500, 501, 503, 504, 512, 515, 519, 521], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 221, 389, 392, 399, 459, 473], "evt_sampl": 458, "ex": [11, 475, 477, 478], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 390, 475, 483], "exactli": [117, 121, 125, 129, 132, 193, 367, 446, 448, 465, 467, 476, 480, 483, 503, 520], "exagger": 363, "examin": [398, 511], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 101, 102, 105, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 137, 138, 140, 141, 143, 145, 147, 148, 149, 150, 156, 158, 161, 168, 171, 173, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 206, 210, 212, 233, 239, 270, 273, 279, 282, 297, 298, 319, 323, 329, 339, 351, 352, 357, 360, 362, 363, 365, 367, 369, 372, 373, 375, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 398, 399, 400, 404, 405, 406, 408, 412, 414, 417, 420, 423, 424, 425, 428, 430, 431, 432, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 507, 509, 510, 511, 513, 518, 520, 521, 522, 532, 553, 561, 562, 563, 567, 569, 571, 572], "example_cub": 475, "example_cube_fgst": 475, "exce": 112, "except": [67, 69, 80, 87, 91, 102, 105, 109, 110, 164, 188, 189, 191, 197, 200, 201, 299, 369, 372, 383, 387, 391, 473, 477, 520], "excerpt": 485, "excess": [15, 67, 72, 102, 105, 109, 110, 118, 121, 122, 124, 125, 126, 129, 131, 134, 135, 139, 168, 281, 283, 288, 289, 370, 384, 387, 419, 420, 426, 431, 438, 441, 442, 446, 447, 449, 450, 451, 454, 456, 460, 462, 466, 467, 470, 471, 474, 476, 477, 484, 491, 492, 505, 507], "excess_estim": 484, "excess_estimator_integr": 484, "excess_integr": 484, "excess_map": [16, 447, 451, 452, 454, 491], "excess_map_estim": 467, "excess_matching_signific": [422, 432], "excess_min": 141, "excess_r": 471, "excessestim": 396, "excessmapconfig": 16, "excessmapestim": [118, 137, 138, 139, 396, 419, 420, 421, 423, 426, 436, 438, 452, 454, 467, 476, 484, 505], "excesspointsestim": 396, "excessprofileestim": [396, 420], "exchang": 386, "exclud": [16, 84, 90, 101, 102, 104, 105, 109, 110, 123, 128, 169, 171, 210, 212, 219, 241, 378, 435, 474, 476, 516, 517], "exclude_default": [16, 84, 90, 104, 123], "exclude_non": [16, 84, 90, 104, 123], "exclude_unset": [16, 84, 90, 104, 123], "exclus": [16, 83, 163, 165, 170, 171, 172, 173, 176, 187, 199, 378, 386, 388, 419, 421, 443, 451, 454, 474, 514, 516], "exclusion_mask": [163, 165, 170, 171, 172, 173, 176, 446, 452, 456, 474, 476, 492, 514, 516, 517], "exclusion_mask_2d": 474, "exclusion_mask_crab": [447, 491], "exclusion_radiu": 476, "exclusion_region": 446, "exclusionmask": 429, "execut": [11, 121, 125, 129, 130, 132, 372, 373, 375, 377, 379, 380, 381, 387, 388, 392, 402, 403, 404, 405, 406, 407, 408, 417, 425, 431, 440, 445, 453, 461, 468, 474, 475, 481, 483, 486, 487, 488, 490, 493, 494, 522, 532, 553, 563, 565], "exercis": [375, 388, 392, 398], "exhibit": 457, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 99, 100, 101, 102, 105, 107, 109, 110, 122, 124, 146, 147, 153, 158, 161, 173, 186, 187, 188, 189, 191, 192, 195, 196, 197, 199, 200, 201, 207, 219, 233, 241, 265, 266, 267, 269, 341, 356, 372, 375, 377, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 395, 396, 398, 399, 404, 405, 408, 409, 412, 416, 417, 431, 432, 434, 437, 450, 452, 471, 475, 476, 478, 479, 483, 504, 519, 520, 568], "exist_ok": [446, 447, 454, 455, 458, 491, 492], "exit": [11, 15, 87, 91, 210, 212, 219, 241, 413, 531, 567], "exot": 389, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 148, 226, 229, 236, 247, 248, 261, 373, 395, 466, 478, 525, 526, 533, 537, 538, 539, 540, 549, 550, 551, 555, 556, 557, 570], "expand": [129, 337, 382, 423], "expand_map": 129, "expans": [50, 52, 53], "expcutoffpowerlaw": 539, "expcutoffpowerlaw3fglspectralmodel": [252, 395, 444, 478, 538], "expcutoffpowerlawnormspectralmodel": [225, 252, 438, 478, 539], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 213, 214, 217, 221, 223, 224, 229, 235, 236, 238, 242, 244, 246, 247, 248, 252, 253, 258, 260, 261, 262, 263, 266, 270, 395, 444, 446, 454, 478, 537, 543], "expdecai": [226, 440, 521, 563], "expdecay_model": [458, 555], "expdecaytemporalmodel": [264, 395, 419, 423, 458, 466, 478, 555], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 108, 110, 122, 173, 178, 179, 184, 199, 281, 282, 283, 284, 286, 290, 296, 329, 372, 377, 385, 387, 388, 389, 392, 397, 399, 441, 443, 448, 449, 450, 452, 458, 459, 463, 464, 469, 472, 475, 476, 480, 483, 485, 503, 505, 568, 569, 570], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 446, 459], "experi": [375, 377, 381, 383, 387, 400, 402, 431, 495, 566, 571], "experienc": [381, 407], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 567], "expert": 392, "expertis": 389, "expfactor": [262, 263, 550, 551], "expir": 385, "explain": [87, 91, 372, 375, 377, 386, 389, 391, 392, 398, 402, 404, 406, 417, 423, 441, 446, 448, 469, 472, 476, 478, 507, 565, 567], "explan": [117, 121, 125, 129, 132, 377, 409, 463, 571], "explicit": [87, 91, 187, 189, 372, 388, 390, 396, 519, 571], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 299, 382, 394, 403, 413, 459, 477, 505, 519, 571], "explor": [188, 189, 191, 197, 200, 201, 380, 388, 408, 440, 446, 451, 454, 457, 460, 461, 463, 464, 465, 470, 471, 477, 484, 485, 491, 493, 503, 504, 505, 507, 515, 516, 519, 564], "explos": 52, "expomap": 385, "expon": [395, 478], "exponenti": [28, 30, 36, 39, 40, 77, 223, 224, 225, 226, 261, 262, 263, 373, 383, 417, 440, 454, 458, 466, 521, 553], "exponentialcutoffpowerlaw": 543, "export": [84, 87, 90, 91, 102, 104, 105, 122, 123, 124, 375, 396, 399, 404, 406, 417, 427, 434, 435, 438, 447, 478, 484, 485, 491], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 386, 387, 388, 391, 392, 436, 438, 475, 487, 505, 506, 565], "exposur": [16, 83, 88, 102, 105, 106, 108, 109, 110, 121, 132, 136, 146, 147, 153, 156, 158, 161, 163, 168, 175, 178, 179, 180, 182, 183, 184, 257, 291, 294, 296, 378, 381, 382, 383, 384, 385, 396, 415, 420, 428, 430, 431, 432, 434, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 462, 465, 466, 471, 474, 475, 476, 484, 491, 492, 503, 512, 515, 520, 569], "exposure_geom": 147, "exposure_hdu": [146, 147, 153, 158, 161], "exposure_hdu_band": [146, 147, 153, 158, 161], "exposure_hpx": 483, "exposure_map": [146, 147, 153, 158, 161, 178, 179, 184, 473], "exposure_max": 471, "exposure_min": 471, "exposure_tim": 385, "express": [121, 133, 281, 283, 383, 395, 396, 438, 452, 472, 473, 478, 480, 503, 519, 526, 568, 569, 570], "exptest": 429, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 163, 190, 193, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 241, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 282, 379, 383, 384, 385, 386, 392, 394, 395, 396, 399, 404, 416, 418, 423, 440, 445, 446, 450, 459, 464, 470, 475, 476, 477, 478, 483, 487, 503, 504, 515, 516, 564], "extended_archive_v18": 531, "extended_source_spectral_analysi": [440, 443, 445], "extens": [41, 83, 145, 188, 189, 191, 193, 200, 201, 215, 216, 219, 220, 228, 231, 241, 243, 245, 254, 255, 259, 265, 269, 374, 377, 378, 379, 380, 381, 383, 385, 387, 388, 389, 390, 391, 392, 402, 426, 457, 458, 459, 478, 567], "extent": [199, 219, 241, 386, 450, 478], "extern": [113, 373, 398, 424, 428, 429, 432, 482, 507], "extnam": 473, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 101, 104, 123, 186, 187, 192, 196, 197, 199, 205, 206, 208, 265, 266, 297, 371, 373, 379, 380, 386, 388, 389, 392, 398, 399, 428, 431, 432, 442, 475, 476, 507, 520], "extra_term": 296, "extract": [16, 84, 90, 100, 102, 104, 105, 109, 110, 122, 123, 124, 129, 146, 147, 153, 158, 161, 164, 169, 170, 175, 177, 185, 188, 189, 190, 191, 193, 198, 199, 200, 201, 267, 372, 382, 387, 396, 398, 399, 425, 426, 437, 438, 441, 443, 446, 447, 448, 449, 454, 455, 458, 459, 460, 462, 471, 475, 491, 503, 511, 516], "extragalact": [221, 442, 482], "extrapol": [101, 142, 143, 144, 168, 188, 189, 191, 197, 200, 201, 221, 270, 311, 312, 423, 428, 430, 431, 473, 475, 482, 483, 519], "extras_requir": 389, "extrem": [372, 399, 475, 526], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 132, 141, 195, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 298, 299, 326, 372, 375, 389, 394, 395, 400, 403, 404, 406, 425, 434, 441, 443, 446, 447, 449, 455, 456, 457, 458, 459, 465, 466, 467, 469, 470, 472, 474, 476, 478, 479, 480, 483, 484, 489, 491, 492, 493, 501, 516, 533, 543, 554, 555, 556, 557, 558, 559, 560, 567, 568, 569], "f0": [268, 561], "f06": 48, "f06b": [49, 497], "f06p": 49, "f1": [268, 561], "f2": [268, 561], "f4": [143, 148, 448, 471, 473, 475, 482, 483], "f8": [473, 483], "f_": [287, 289, 298, 503], "f_0": [246, 546], "f_dead": [83, 88], "f_i": 287, "f_max": 463, "f_max_err": 463, "f_mean": 463, "f_mean_err": 463, "f_min": 463, "f_min_err": 463, "f_pp": 288, "f_var": 288, "fabio": [385, 390, 413, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 430, 432, 434, 436, 437, 438], "face": [377, 380], "facecolor": [369, 442, 446, 448, 456, 457, 460, 467, 469, 524, 525, 526], "facil": 397, "fact": [19, 20, 97, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 398, 443, 520], "facto": 398, "factor": [19, 20, 23, 102, 103, 105, 108, 109, 110, 117, 121, 122, 146, 147, 149, 153, 155, 156, 157, 158, 159, 161, 168, 175, 181, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 204, 209, 210, 211, 212, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 271, 282, 372, 385, 387, 419, 441, 449, 451, 454, 456, 460, 462, 466, 471, 474, 478, 482, 503, 520, 533], "factor1": [19, 20, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269], "factor_max": [19, 20, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269], "factor_min": [19, 20, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269], "factori": [188, 189, 200, 201, 386, 391, 395, 518, 520], "factoris": [257, 395, 478, 564], "fail": [16, 84, 90, 104, 123, 206, 373, 375, 386, 401, 402, 426, 455, 483], "failur": [434, 437], "faint": 568, "fair": 398, "fair4r": 398, "fake": [102, 105, 109, 110, 384, 385, 415, 448, 449, 462, 466, 480], "fall": [77, 133, 171, 198, 219, 241, 372, 379, 381, 382, 389, 432, 433, 463], "fallback": 372, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 121, 122, 123, 124, 125, 129, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 175, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 282, 299, 312, 329, 335, 338, 340, 341, 369, 372, 386, 388, 395, 400, 431, 432, 438, 441, 442, 443, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 460, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 483, 491, 492, 493, 504, 507, 514, 516, 517, 531, 543, 552], "falsifi": 480, "famili": 398, "familiar": [389, 390, 475, 476, 493], "fanci": [372, 467], "far": [380, 385, 387, 389, 393, 396, 399, 408, 423, 458, 495], "fashion": [387, 392], "fast": [372, 386, 390, 472], "faster": [87, 91, 188, 189, 191, 197, 200, 201, 350, 438, 450], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 497, "favour": [377, 385, 400, 480], "favourit": 456, "fc": [478, 520], "fcluster": [297, 479], "fcluster_kwarg": [297, 479], "fcn": 472, "fdx": 372, "fe": 272, "feasibl": [386, 391, 449, 462, 471], "featur": [6, 13, 87, 91, 96, 117, 137, 297, 298, 362, 363, 372, 375, 379, 381, 382, 383, 384, 386, 388, 389, 394, 395, 396, 398, 399, 400, 405, 410, 413, 414, 415, 416, 417, 419, 420, 423, 427, 430, 431, 432, 433, 463, 475, 476, 478, 479, 505, 543], "feature_irf": 479, "features_irf": [96, 297, 298, 479], "feb": [378, 379, 389, 393, 408, 410], "februari": 410, "fed": 448, "feedback": [375, 377, 381, 386, 388, 389, 392, 393, 395, 401, 431, 473, 507], "feedstock": [401, 402], "feel": [382, 567], "feijen": [436, 437, 438], "feldman": [414, 420, 428, 430, 566], "feldman1998": [566, 569], "fellowship": 398, "felt": 372, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 125, 126, 128, 132, 188, 189, 191, 197, 198, 200, 201, 221, 272, 274, 279, 379, 380, 381, 382, 384, 385, 388, 389, 392, 402, 404, 409, 411, 412, 415, 417, 420, 424, 427, 428, 429, 430, 431, 432, 440, 442, 444, 450, 458, 460, 470, 475, 476, 477, 478, 486, 487, 493, 495, 503, 504, 507, 512, 519, 531, 541, 546, 564, 571], "fermi_3fhl": [83, 188, 189, 191, 197, 200, 201, 477, 483, 493], "fermi_3fhl_events_select": [83, 483], "fermi_3fhl_exposure_cube_hpx": 483, "fermi_3fhl_psf_gc": 483, "fermi_bkg_model": 477, "fermi_ct": 128, "fermi_dataset": [279, 477, 483], "fermi_lat": [392, 432, 440, 483, 486], "fermi_model": 483, "fermi_prof": 126, "fermi_ts_imag": 373, "fermilat": 442, "fermipi": [379, 381, 384, 388, 392, 396, 429, 431, 483, 495], "fermitool": 388, "fetch": [15, 372, 380, 411, 424, 491, 567], "few": [82, 83, 87, 88, 91, 371, 372, 373, 375, 377, 378, 379, 380, 382, 384, 386, 390, 392, 397, 401, 402, 408, 422, 433, 435, 438, 443, 447, 452, 454, 456, 470, 472, 475, 482, 491, 492, 516, 520, 572], "fewer": [386, 392], "ff": 398, "fft": 201, "fftconvolv": 201, "fgl": [198, 476], "fgst": [187, 188, 189, 191, 192, 193, 199, 200, 201, 475], "fhit": 484, "fhrea5x8": 442, "fidalgo": [382, 387, 412, 432, 433], "fiduci": 475, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 104, 123, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 157, 159, 160, 165, 227, 242, 301, 305, 359, 372, 386, 398, 399, 408, 413, 418, 425, 432, 446, 448, 452, 454, 456, 458, 473, 474, 476, 482, 483, 507, 509, 510, 511, 512, 513, 514, 516, 543, 566], "fieldinfo": [16, 84, 90, 104, 123], "fig": [201, 360, 441, 443, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 460, 464, 466, 467, 469, 472, 476, 480, 516, 517, 526, 530, 533, 565], "figsiz": [88, 102, 105, 109, 110, 127, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 188, 189, 191, 197, 200, 201, 360, 443, 446, 449, 450, 452, 454, 455, 456, 457, 463, 464, 465, 466, 467, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485, 516, 526, 530, 533], "figur": [88, 102, 105, 109, 110, 127, 142, 143, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 161, 188, 189, 191, 197, 200, 201, 350, 359, 360, 366, 372, 373, 377, 392, 402, 442, 446, 450, 454, 456, 457, 458, 460, 463, 464, 465, 469, 471, 472, 474, 475, 477, 478, 483, 484, 485, 567], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 169, 174, 188, 189, 191, 195, 197, 200, 201, 207, 219, 221, 233, 241, 265, 266, 267, 268, 269, 270, 307, 335, 338, 341, 371, 372, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 392, 393, 395, 396, 399, 400, 401, 402, 403, 404, 406, 408, 416, 417, 423, 425, 427, 429, 430, 431, 432, 434, 435, 437, 438, 440, 441, 445, 448, 449, 453, 454, 456, 458, 459, 461, 462, 466, 468, 470, 471, 474, 475, 476, 477, 478, 481, 484, 485, 486, 487, 488, 490, 493, 494, 495, 506, 507, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571], "file_dir": 307, "file_model": 458, "file_nam": 307, "filemod": [16, 447, 451, 452, 454, 491, 567], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 126, 128, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 188, 189, 191, 195, 197, 200, 201, 219, 221, 233, 241, 265, 266, 267, 268, 269, 270, 274, 276, 278, 279, 307, 338, 341, 351, 372, 373, 377, 420, 446, 447, 451, 452, 454, 455, 459, 460, 470, 471, 475, 476, 477, 478, 482, 483, 491, 492, 493, 504, 507, 509, 510, 511, 513, 531, 533, 561, 562, 567], "filename_1": 504, "filename_2": 504, "filename_arf": 107, "filename_bkg": 107, "filename_model": [100, 122, 279, 477, 483], "filename_rmf": 107, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 102, 104, 105, 108, 109, 110, 123, 145, 156, 187, 188, 189, 191, 197, 199, 200, 201, 270, 372, 380, 381, 385, 388, 392, 398, 401, 402, 417, 424, 431, 434, 443, 458, 459, 470, 473, 474, 476, 483, 492, 519], "fill_between": [19, 20, 26, 127, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 467], "fill_by_coord": [156, 188, 189, 191, 197, 200, 201, 475, 483, 519], "fill_by_idx": [188, 189, 191, 197, 200, 201, 519], "fill_by_pix": [188, 189, 191, 197, 200, 201, 519], "fill_ev": [188, 189, 191, 197, 200, 201, 426, 437, 448, 475, 483, 489], "fill_nan": 189, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 188, 189, 191, 197, 200, 201, 265, 266, 269, 270, 372, 473, 475, 483], "filled_t": [87, 91], "filter": [88, 89, 378, 382, 384, 386, 387, 432, 433, 436, 476, 479, 487, 492, 493], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [122, 124], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [466, 467], "final": [129, 282, 372, 373, 379, 380, 382, 385, 386, 388, 389, 391, 393, 395, 397, 398, 402, 404, 406, 417, 418, 419, 441, 442, 443, 444, 446, 454, 456, 458, 459, 464, 465, 467, 469, 471, 472, 474, 476, 479, 483, 487, 491, 492, 493, 503, 504, 505], "finalis": 376, "find": [19, 20, 26, 132, 137, 138, 145, 171, 172, 176, 203, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 291, 372, 377, 383, 385, 391, 401, 402, 403, 423, 425, 431, 432, 437, 438, 444, 446, 450, 470, 471, 475, 478, 482, 485, 493, 567, 569, 570], "find_peak": [138, 432, 450, 456], "find_peaks_in_flux_map": 450, "find_root": 423, "finder": [137, 171, 172, 423, 432, 450], "fine": [280, 312, 385, 452, 471, 483, 520, 567], "finer": [458, 471, 520], "fingertip": 371, "finish": [375, 379, 381, 401, 429, 431], "finit": [100, 102, 105, 109, 110, 146, 147, 153, 158, 174, 189, 197, 201, 267, 390], "fink": [221, 222, 442, 533], "fir": 543, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 102, 105, 109, 110, 122, 124, 126, 137, 145, 162, 171, 188, 189, 190, 193, 197, 198, 219, 241, 273, 332, 361, 372, 373, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 396, 397, 398, 402, 403, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 430, 432, 433, 434, 435, 437, 441, 443, 444, 446, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 487, 491, 492, 493, 504, 516, 519, 567], "firstli": [457, 458], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 165, 168, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 205, 207, 208, 209, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 267, 268, 269, 270, 279, 280, 281, 283, 284, 285, 290, 292, 296, 307, 308, 309, 354, 355, 358, 360, 365, 367, 371, 372, 373, 378, 382, 383, 384, 385, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 404, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 428, 430, 431, 432, 433, 435, 437, 438, 440, 441, 445, 449, 450, 452, 453, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 481, 482, 484, 485, 487, 489, 493, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 519, 524, 531, 533, 543, 561, 562, 565, 566, 571], "fit2": 477, "fit_covari": [447, 491], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [443, 446, 454, 455], "fit_prior": 480, "fit_rang": [16, 447, 451, 452, 454, 491], "fit_result": [206, 279, 447, 491], "fit_results_nul": 279, "fit_scipi": 472, "fit_sherpa": 472, "fit_stat_scan": 387, "fit_statist": 372, "fit_statistics_cython": 402, "fitconfig": 16, "fitmc": 390, "fitresult": [206, 425, 437, 472, 492], "fitsfixedwarn": [450, 531], "fitspectrum": 427, "fitstepresult": [205, 208], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 430, 431, 444], "five": 493, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 106, 107, 132, 140, 158, 160, 175, 206, 243, 244, 249, 269, 375, 377, 378, 379, 383, 384, 387, 389, 394, 396, 397, 398, 401, 402, 404, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 441, 448, 449, 451, 452, 454, 455, 458, 462, 465, 466, 472, 473, 474, 477, 478, 479, 491, 517, 519, 527, 544], "fixed_altaz": 85, "fixed_bin": 140, "fixed_icr": [85, 158, 441, 449, 458, 459, 462, 466], "fixed_offset": [96, 174, 423], "fixed_r_in": 163, "fixed_width": 163, "fixedpointinginfo": [88, 158, 181, 437, 438, 441, 449, 458, 459, 462, 466], "fk5": [520, 531], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 108, 122, 124, 125, 126, 129, 130, 186, 187, 188, 189, 191, 193, 194, 196, 197, 199, 200, 201, 205, 206, 207, 208, 443, 454, 458, 470, 478], "flake8": 375, "flare": [133, 287, 404, 417, 418, 440, 463, 464, 466, 468, 487, 503, 504, 505, 515, 516], "flask": 431, "flat": [124, 133, 150, 160, 186, 187, 192, 194, 196, 199, 202, 203, 243, 383, 396], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 186, 187, 194, 196, 199, 463], "fledg": 400, "flexibl": [82, 323, 372, 377, 381, 382, 383, 386, 388, 392, 393, 399, 475, 507, 564], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 102, 105, 109, 110, 113, 117, 121, 123, 124, 125, 127, 129, 130, 131, 132, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 163, 165, 174, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 202, 203, 206, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 286, 291, 299, 310, 317, 326, 328, 361, 362, 363, 474, 480, 482, 483, 567, 571], "float32": [186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 451, 456, 475], "float64": [87, 91, 111, 115, 145, 148, 372, 400, 473, 475, 505], "float64float64float64": 456, "float64float64float64float64float64float64float64float32bool": 444, "float64float64float64float64float64float64float64float64": 456, "float_a": [87, 91], "flow": [399, 565, 566], "fluctuat": [281, 283, 396, 449, 462, 480, 569], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 101, 102, 105, 109, 110, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 209, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 277, 286, 287, 288, 289, 295, 376, 384, 385, 387, 388, 390, 392, 393, 395, 404, 411, 414, 416, 417, 419, 423, 425, 429, 430, 431, 433, 438, 440, 445, 448, 450, 454, 456, 458, 459, 461, 463, 464, 465, 466, 467, 471, 475, 478, 483, 487, 501, 502, 503, 512, 519, 521, 528, 543, 564, 565, 569], "flux_err": [19, 20, 26, 122, 124, 132, 138, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 287, 288, 289, 295, 450, 463, 464], "flux_errn": [122, 124, 470], "flux_errp": [122, 124, 470], "flux_int_cu": 273, "flux_map": [122, 124, 396, 469], "flux_metadata_fits_kei": 123, "flux_per_omega": 478, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 101, 122, 124, 125, 384, 441, 444, 446, 447, 451, 452, 454, 456, 467, 470, 471, 491, 492, 493], "flux_point_dataset": 384, "flux_points_at_tim": 396, "flux_points_ctb_37b": 124, "flux_points_dataset": [446, 456, 467], "flux_points_dataset_no_ul": 446, "flux_points_fermi": 455, "flux_points_hawc": 455, "flux_points_hess": 455, "flux_points_intrins": 442, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 446, "flux_points_ob": 442, "flux_points_recomput": 124, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 101, "flux_profil": [440, 460, 461], "flux_profile_estim": 460, "flux_profile_fermi": 460, "flux_quant": [133, 134, 135, 463], "flux_ref": [122, 124, 396], "flux_sensit": [122, 124], "flux_ul": [122, 124, 132, 470], "fluxestim": [122, 124, 125, 393, 419, 421, 422, 423, 425, 438], "fluxmap": [121, 123, 124, 132, 138, 423, 438, 450, 505], "fluxmapestim": 396, "fluxmapsmetadata": 399, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 101, 122, 123, 125, 126, 129, 133, 134, 135, 140, 384, 387, 396, 399, 423, 430, 431, 437, 438, 441, 444, 455, 460, 463, 464, 470, 471, 493, 502, 503, 505, 507], "fluxpointdataset": [417, 446], "fluxpointestim": [387, 414, 420, 433], "fluxpointfit": 384, "fluxpointfitt": 432, "fluxpointprofil": 433, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 102, 105, 393, 396, 399, 413, 417, 438, 444, 446, 455, 456, 466, 467, 503], "fluxpointsdatasetmetadata": 399, "fluxpointsestim": [118, 126, 129, 319, 393, 394, 396, 404, 414, 419, 420, 423, 437, 438, 442, 446, 455, 456, 467, 491, 492], "fluxpointsetim": 396, "fluxpointsmetadata": 399, "fluxprofileestim": [118, 423, 436, 438, 460], "fly": 382, "fmt": [472, 480], "focu": [382, 392, 417, 430, 448, 567], "focus": [382, 398], "fold": [108, 396, 444, 455, 503, 505], "folder": [11, 82, 94, 101, 106, 110, 124, 336, 372, 373, 377, 380, 401, 403, 408, 413, 423, 426, 447, 454, 458, 482, 491, 492, 565, 567], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 102, 104, 106, 107, 109, 110, 122, 123, 124, 127, 132, 137, 139, 187, 188, 189, 191, 195, 200, 201, 206, 257, 273, 279, 362, 363, 365, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 415, 416, 417, 419, 420, 423, 425, 426, 432, 433, 437, 438, 441, 442, 443, 444, 446, 447, 449, 450, 451, 454, 455, 458, 459, 464, 465, 466, 467, 469, 470, 472, 474, 475, 476, 477, 478, 482, 487, 491, 493, 495, 497, 498, 503, 505, 507, 509, 511, 512, 516, 518, 519, 520, 521, 529, 530, 534, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551, 552, 565, 568, 569, 570, 572], "font": [188, 189, 191, 197, 200, 201, 373, 475], "fontsiz": [369, 467, 472], "foo": [87, 91], "footprint": [188, 189, 191, 197, 199, 200, 201, 527], "footprint_rectangle_sky_region": 199, "forbid": [16, 84, 90, 104, 123], "forbidden": 477, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 146, 147, 153, 156, 158, 161, 199, 201, 299, 377, 387, 413], "forecom": [372, 397], "foremost": 567, "forens": 388, "foreseen": [382, 397], "forev": 413, "forg": [371, 389, 401, 402, 404, 405, 408, 431, 482], "forget": [447, 457, 491], "forgot": 372, "forgotten": 372, "fork": 375, "form": [16, 84, 87, 90, 91, 102, 104, 123, 158, 161, 196, 311, 372, 378, 382, 387, 395, 397, 399, 409, 431, 476, 480, 504, 512, 525, 535, 565], "formal": [377, 400, 450], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 104, 105, 107, 109, 110, 122, 123, 124, 125, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 181, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 219, 227, 233, 241, 257, 267, 270, 307, 329, 353, 354, 361, 371, 373, 380, 381, 382, 383, 384, 386, 388, 396, 398, 399, 402, 411, 423, 425, 428, 432, 434, 435, 437, 438, 442, 444, 446, 447, 448, 450, 451, 452, 454, 456, 458, 459, 460, 463, 464, 466, 470, 473, 475, 476, 478, 482, 483, 484, 485, 491, 493, 495, 501, 503, 504, 505, 506, 509, 510, 511, 512, 513, 520, 561, 562, 566, 567, 568], "format_plot_xaxi": [190, 193, 198, 473], "format_plot_yaxi": [193, 473], "formatt": [361, 475], "formatwarn": 372, "former": [398, 414, 419, 443, 477, 565, 568], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 157, 247, 248, 296, 441, 568], "forum": 401, "forward": [19, 20, 26, 83, 87, 91, 102, 105, 109, 110, 126, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 170, 192, 196, 197, 198, 206, 213, 214, 217, 218, 221, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 297, 361, 366, 373, 379, 382, 396, 444, 455, 503, 505, 520], "forwardref": [16, 84, 90, 104, 123], "found": [19, 20, 26, 82, 86, 87, 91, 133, 171, 176, 195, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 287, 375, 376, 380, 387, 397, 398, 417, 420, 421, 422, 426, 452, 458, 463, 478, 480, 485, 504, 505, 516, 517], "four": [375, 383, 396, 464, 482, 483, 511, 513, 519, 566], "fov": [121, 142, 143, 165, 166, 180, 181, 183, 185, 227, 372, 378, 386, 428, 431, 432, 451, 473, 476, 477, 482, 492, 515, 566], "fov_": 372, "fov_align": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 473], "fov_background": [451, 491], "fov_bkg_mak": [474, 514], "fov_lat": [143, 473, 482, 512], "fov_lat_axi": 473, "fov_lon": [143, 473, 482, 512], "fov_lon_axi": 473, "fov_theta": 372, "fovalign": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 473], "fovbackground": [400, 419], "fovbackgroundmak": [166, 418, 423, 474, 491, 492], "fovbackgroundmodel": [15, 102, 108, 109, 112, 165, 237, 400, 420, 437, 438, 454, 455, 458, 459, 462, 471, 477, 491, 492, 514, 527], "fp": [122, 124, 140, 396, 491, 505, 507], "fp_dataset": [446, 471], "fp_dnde": 396, "fp_energy_flux": 396, "fpe": [319, 394, 396, 442, 446, 456, 467, 492], "fpe_no_ul": 446, "fpp": 288, "fpp_err": [288, 463], "fpp_tabl": 463, "fr": [398, 482], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 105, 110, 145, 148, 204, 225, 229, 246, 248, 261, 287, 289, 298, 395, 503, 511, 512, 524, 525, 526, 529, 530, 534, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551, 555, 556, 557, 559, 569, 570], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 121, 131, 135, 149, 155, 157, 158, 159, 161, 196, 202, 203, 213, 214, 217, 220, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 288, 289, 382, 387, 430, 438, 441, 449, 458, 462, 471, 473, 476, 482, 483, 484], "frame": [16, 83, 85, 91, 94, 95, 96, 102, 105, 109, 110, 111, 115, 126, 137, 158, 168, 171, 181, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269, 297, 298, 333, 348, 372, 373, 381, 383, 386, 396, 413, 414, 416, 417, 418, 443, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 471, 473, 474, 475, 476, 477, 478, 479, 483, 484, 485, 491, 492, 493, 511, 516, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531], "framework": [383, 385, 386, 388, 390, 391, 395, 413, 414, 420, 432, 467, 478, 497, 507], "franceschini": [221, 222, 270, 437, 442, 533], "franceschini17": [222, 442, 533], "franceschni": 533, "frd_ab": 222, "free": [50, 52, 53, 77, 102, 105, 109, 110, 125, 129, 130, 168, 206, 210, 212, 243, 244, 279, 377, 387, 413, 442, 447, 449, 451, 452, 454, 456, 457, 462, 464, 466, 471, 472, 474, 477, 478, 480, 483, 487, 491, 492, 495, 505, 514, 527, 543, 544, 567, 569, 570], "free_paramet": [210, 212, 279, 472, 477], "freedom": [119, 122, 124, 139, 398, 438, 457, 505, 569, 570], "freez": [19, 20, 26, 87, 91, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 387, 398, 413, 423, 438, 451, 462, 472, 478, 543], "freeze_al": [210, 212], "frenk": 495, "frequenc": [268, 282, 499], "frequent": [193, 372, 381, 390, 398, 463, 465, 466, 476, 507, 508, 567], "frequentist": 390, "fridai": 381, "friendli": [377, 399, 434, 447, 491, 507], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 174, 175, 177, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 286, 289, 297, 298, 299, 309, 317, 319, 321, 322, 326, 329, 330, 334, 339, 351, 352, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571], "from_align": [199, 423], "from_attribut": [16, 84, 90, 104, 123], "from_bound": [148, 150, 158, 187, 193, 199, 396, 455, 458, 459, 471, 473, 474, 475, 485, 519, 520], "from_covariance_matrix": 400, "from_default": 192, "from_diagonal_respons": [111, 115, 145, 146, 147, 450, 483], "from_dict": [19, 20, 26, 101, 102, 105, 109, 110, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 416, 423, 480], "from_dir": [82, 89, 96, 168, 297, 298, 408, 443, 446, 448, 456, 465, 467, 474, 479, 482, 485, 489, 492, 504, 507, 514, 516, 517], "from_edg": [147, 188, 189, 191, 193, 197, 200, 201, 449, 462, 466, 473, 483, 484], "from_edisp_kernel": 146, "from_energy_bound": [102, 105, 109, 110, 111, 115, 145, 147, 148, 156, 158, 168, 186, 187, 192, 193, 196, 199, 201, 373, 441, 443, 446, 448, 455, 456, 458, 459, 465, 467, 471, 473, 474, 478, 483, 484, 492, 511, 514, 516, 517, 520], "from_energy_edg": [145, 193, 367, 471, 473], "from_events_fil": [82, 458, 482], "from_factor_matrix": 204, "from_fil": [82, 504], "from_fits_head": 85, "from_gauss": [145, 146, 150, 156, 158, 161, 511], "from_gaussian": 420, "from_geom": [102, 105, 109, 110, 146, 147, 156, 158, 161, 188, 189, 191, 195, 197, 200, 201, 417, 436, 471, 475, 476, 520, 526], "from_gti": 198, "from_gti_bound": 198, "from_hdu": [187, 189, 201], "from_hdulist": [102, 105, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 475], "from_head": [84, 90, 104, 123, 187, 199, 399], "from_irf": 160, "from_log10": [235, 236, 541], "from_map": [122, 124], "from_map_dataset": [105, 110], "from_nam": [452, 456], "from_nod": 193, "from_orm": [16, 84, 90, 104, 123], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271], "from_parametr": [148, 509], "from_posit": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 459], "from_refer": 395, "from_region": [196, 220, 437, 516], "from_region_map": 270, "from_spatial_model": 156, "from_spectrum_dataset": [110, 441, 449], "from_stack": [83, 86, 92, 122, 124, 188, 189, 190, 191, 193, 197, 200, 201, 204, 210, 212, 437, 438, 504], "from_tabl": [124, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 190, 192, 193, 197, 198, 233, 434, 441], "from_table_hdu": [86, 192, 193], "from_time_bound": 198, "from_time_edg": [198, 463], "from_time_interv": 86, "from_wcs_til": 189, "from_yaml": [16, 219, 241, 383, 447], "fromnumer": 448, "front": [381, 401, 430], "frozen": [19, 20, 26, 101, 125, 129, 165, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 387, 395, 400, 415, 438, 442, 443, 444, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 462, 465, 466, 470, 471, 472, 476, 477, 478, 483, 491, 492, 493, 505, 514, 543, 552], "fr\u00f6se": 438, "ftol": 472, "ftool": 387, "fulfil": [399, 475], "full": [82, 125, 132, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 189, 207, 219, 241, 307, 368, 371, 372, 377, 381, 382, 385, 387, 388, 392, 398, 400, 403, 410, 413, 423, 425, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 507, 518, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565], "full_enclosur": [181, 473], "full_output": [19, 20, 26, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271], "fulli": [129, 186, 187, 196, 199, 268, 381, 382, 389, 393, 398, 402, 405, 415, 417, 425, 443, 463, 478, 482, 484, 485], "fun": [372, 375], "func": [17, 18, 21, 22, 24, 25, 27, 90, 188, 189, 191, 197, 200, 201, 275, 320, 324, 325, 365, 452, 454], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 90, 91, 100, 101, 102, 103, 105, 108, 109, 110, 117, 122, 129, 132, 133, 134, 135, 138, 148, 149, 150, 152, 153, 155, 157, 158, 159, 161, 188, 189, 191, 193, 197, 200, 201, 206, 207, 208, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 256, 257, 258, 260, 261, 262, 263, 266, 270, 275, 281, 282, 283, 291, 295, 312, 320, 321, 323, 324, 328, 329, 339, 357, 360, 361, 365, 367, 369, 371, 375, 378, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 395, 396, 397, 399, 400, 404, 408, 409, 411, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 441, 442, 446, 447, 448, 449, 450, 454, 456, 457, 458, 459, 460, 471, 472, 473, 474, 475, 476, 477, 478, 480, 485, 487, 491, 492, 493, 495, 496, 497, 502, 503, 504, 506, 507, 516, 518, 520, 525, 526, 528, 555, 564, 565, 566, 567, 568, 570, 572], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [385, 394, 399], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 117, 121, 125, 126, 129, 132, 194, 323, 372, 375, 376, 378, 381, 382, 385, 386, 389, 391, 392, 393, 394, 395, 418, 419, 420, 423, 425, 452, 458, 469, 470, 471, 475, 492, 493, 496, 497, 512, 567], "furthermor": 482, "futur": [103, 108, 125, 126, 129, 209, 211, 372, 377, 382, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 431, 454, 458, 475, 483, 496, 505, 564], "fvar": [135, 289, 387, 430], "fvar_err": [289, 463], "fvar_tabl": 463, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 113, 137, 187, 188, 189, 191, 193, 197, 199, 200, 201, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 287, 299, 339, 361, 367, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 398, 399, 401, 402, 404, 405, 406, 423, 425, 429, 431, 432, 433, 434, 437, 443, 444, 446, 447, 449, 456, 458, 460, 469, 470, 471, 472, 475, 476, 477, 478, 482, 483, 487, 493, 495, 499, 502, 503, 504, 505, 507, 512, 517, 518, 519, 526, 564, 566, 567, 569, 571, 572], "g0": [454, 483], "g28": 67, "g320": 470, "g_1": 148, "g_2": 148, "g_3": 148, "ga": 460, "gabriel": 432, "gadf": [83, 84, 85, 86, 88, 90, 95, 102, 104, 105, 109, 110, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 382, 385, 396, 399, 423, 425, 434, 437, 473, 475, 491, 503, 507, 520, 566], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 389, 431], "gal_diffus": 388, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 102, 105, 109, 110, 111, 115, 125, 126, 128, 158, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 220, 228, 231, 245, 254, 255, 306, 333, 372, 373, 383, 386, 392, 411, 413, 430, 442, 443, 446, 449, 450, 451, 454, 456, 457, 458, 460, 462, 466, 469, 470, 471, 475, 476, 477, 478, 482, 493, 495, 498, 502, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 566, 572], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 221, 288, 289, 411, 443], "galelli": [436, 438], "gallant": 431, "galleri": [402, 418, 420, 423, 434, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 508, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564], "gallery_jupyt": 521, "gallery_python": 521, "galprop": [187, 188, 189, 191, 200, 201], "galprop2": [187, 188, 189, 191, 200, 201], "gambit": 495, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 121, 125, 131, 157, 181, 188, 189, 191, 200, 201, 221, 223, 224, 225, 246, 247, 248, 270, 273, 326, 372, 378, 380, 383, 384, 385, 386, 396, 401, 402, 404, 408, 409, 414, 428, 429, 430, 431, 432, 441, 442, 444, 446, 447, 448, 452, 455, 456, 457, 458, 460, 470, 473, 475, 476, 479, 482, 484, 485, 491, 493, 495, 497, 498, 502, 503, 504, 507, 510, 512, 514, 516, 517, 526, 533, 537, 538, 545, 546, 564, 565, 566, 567, 568, 569, 572], "gamma1": [213, 534, 548], "gamma2": [213, 534, 548], "gamma_1": [258, 261, 262, 263, 395, 549, 550, 551], "gamma_2": [258, 261, 262, 263, 395, 549, 550, 551], "gamma_min": [131, 441], "gamma_min_sensit": 121, "gammacat": [55, 66, 430, 444], "gammalib": [372, 385], "gammamc_dif": 495, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 394, 395, 396, 400, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 486, 487, 489, 491, 492, 493, 496, 497, 499, 500, 501, 507, 508, 509, 510, 511, 513, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 568, 569, 572], "gammapy_analysis_config": 388, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 101, 102, 105, 109, 110, 114, 116, 117, 121, 122, 124, 126, 128, 130, 132, 137, 138, 140, 141, 143, 147, 148, 149, 150, 158, 168, 188, 189, 191, 197, 200, 201, 206, 222, 233, 270, 279, 297, 298, 351, 360, 365, 367, 372, 373, 375, 388, 404, 406, 408, 412, 413, 414, 423, 432, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 504, 505, 507, 509, 510, 511, 513, 514, 516, 517, 531, 561, 562], "gammapy_extra": 412, "gammapybaseconfig": 16, "gammapydeprecationwarn": [372, 539, 542], "gammmapi": [382, 389], "garcia": 432, "gather": [386, 392, 401], "gauss": [42, 51, 54, 102, 105, 127, 128, 149, 189, 201, 228, 229, 230, 231, 395, 429, 467, 475, 478, 493, 524, 525], "gauss_elong": 478, "gauss_temp": 478, "gaussian": [67, 68, 80, 81, 101, 117, 127, 145, 146, 150, 156, 158, 161, 189, 201, 228, 229, 230, 231, 232, 288, 289, 383, 391, 395, 400, 416, 420, 440, 442, 444, 446, 456, 458, 462, 463, 466, 470, 472, 473, 478, 480, 482, 493, 511, 513, 521, 532, 553, 563], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 117, "gaussian_compon": [67, 470], "gaussian_filt": [127, 201], "gaussian_model": 556, "gaussian_sigma": 472, "gaussianband2d": 431, "gaussianprior": [400, 442, 480], "gaussianspatialmodel": [80, 81, 114, 116, 251, 395, 416, 456, 457, 462, 478, 525], "gaussianspectralmodel": [252, 395, 478, 540], "gaussiantemporalmod": 423, "gaussiantemporalmodel": [264, 395, 419, 478, 556], "gb": [380, 382, 482, 484], "gc": [86, 102, 105, 109, 110, 114, 116, 117, 121, 126, 128, 132, 137, 138, 360, 365, 367, 375, 450, 451, 454, 456, 458, 460, 469, 471, 475, 477, 478, 482, 483, 493, 495, 504, 505], "gc_3fhl": 493, "gc_3fhl_cutout": 493, "gc_3fhl_smooth": 493, "gc_imag": 460, "gc_po": 483, "gc_sep": 477, "gca": 442, "gcc": 408, "ge": 90, "ge9b279717": [104, 123, 409, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "geminga": 59, "gen_gaussian_model": 557, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 102, 103, 104, 105, 108, 109, 110, 123, 147, 158, 161, 188, 189, 191, 192, 193, 197, 200, 201, 206, 218, 226, 230, 231, 232, 233, 234, 249, 256, 265, 266, 268, 270, 271, 282, 321, 323, 326, 327, 328, 329, 336, 373, 375, 381, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 402, 405, 408, 414, 418, 419, 420, 423, 425, 430, 434, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 503, 507, 512, 518, 520, 521, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 560, 561, 562, 563, 567, 569, 570], "generalconfig": 16, "generalis": [124, 391, 417, 473], "generalized_gaussian_model": 557, "generalizedgaussianspatialmodel": [251, 420, 478, 526], "generalizedgaussiantemporalmodel": [264, 425, 478, 557], "generalrandom": 415, "generatejsonschema": [16, 84, 90, 104, 123], "gengauss": [232, 478, 526], "geodeticloc": 94, "geolat": 443, "geom": [16, 23, 83, 102, 105, 109, 110, 111, 113, 115, 121, 122, 124, 126, 132, 146, 147, 156, 158, 161, 168, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 215, 216, 219, 220, 227, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 269, 383, 385, 387, 420, 423, 432, 438, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 483, 484, 491, 492, 493, 505, 514, 516, 517, 518, 519, 520, 523, 525, 526, 527, 528], "geom_24_energy_bin": 520, "geom_6_energy_bin": 520, "geom_edisp": [102, 105, 109, 110, 471], "geom_energi": 520, "geom_exposur": [102, 105, 109, 110, 436, 471], "geom_imag": [452, 456, 520], "geom_irf": 385, "geom_psf": [102, 105, 109, 110, 471], "geom_tru": 417, "geomconfig": 16, "geometri": [23, 83, 100, 102, 105, 109, 110, 113, 122, 124, 132, 146, 147, 153, 156, 158, 161, 165, 168, 170, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 215, 216, 219, 220, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 269, 368, 378, 384, 387, 388, 417, 423, 434, 446, 447, 448, 449, 451, 452, 454, 458, 459, 462, 471, 474, 483, 484, 503, 505, 507, 515, 519, 565, 566], "geomspac": [124, 400], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 102, 104, 106, 107, 109, 117, 121, 123, 125, 126, 129, 130, 132, 137, 140, 145, 146, 147, 153, 158, 161, 186, 187, 188, 189, 191, 192, 195, 196, 197, 199, 200, 201, 204, 210, 212, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 307, 323, 372, 373, 377, 378, 379, 380, 381, 382, 386, 387, 389, 396, 398, 399, 400, 402, 403, 405, 406, 408, 409, 412, 414, 429, 430, 431, 432, 441, 447, 449, 450, 454, 455, 456, 462, 465, 470, 471, 472, 473, 474, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492, 493, 495, 503, 507, 520, 566, 570], "get_altaz": [85, 94, 437], "get_bia": 145, "get_bias_energi": 145, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [188, 189, 191, 197, 200, 201, 474, 475, 483, 484, 519], "get_by_idx": [188, 189, 191, 197, 200, 201, 475, 519], "get_by_pix": [188, 189, 191, 197, 200, 201, 519], "get_cl": [444, 470, 476], "get_coord": [186, 187, 192, 196, 199, 416, 423, 432, 459, 475, 476, 516, 520], "get_dataset": [15, 447, 451, 452, 454, 464, 491, 507], "get_devel_vers": 375, "get_edges_fixed_bin": 140, "get_edges_min_t": 140, "get_edisp_kernel": [146, 147, 418, 423, 471, 483, 511], "get_events_meta_data": 385, "get_excess_map": [15, 491], "get_filenam": [106, 107], "get_flux_point": [15, 122, 124, 396, 418, 447, 491], "get_group_by_idx": 396, "get_hdu": 307, "get_icr": [85, 94, 437], "get_idx": [186, 187, 196, 199, 520], "get_image_by_coord": [188, 189, 191, 197, 200, 201, 475], "get_image_by_idx": [188, 189, 191, 197, 200, 201], "get_image_by_pix": [188, 189, 191, 197, 200, 201], "get_index_list": 187, "get_irfs_featur": [297, 298, 437, 479], "get_kernel": 117, "get_light_curv": 15, "get_mean": 145, "get_observ": [15, 82, 96, 297, 298, 414, 425, 443, 446, 447, 448, 451, 452, 454, 456, 458, 464, 465, 467, 474, 479, 484, 485, 489, 491, 492, 507, 514, 516, 517], "get_ogip_meta": 107, "get_pix": 199, "get_pointing_altaz": [88, 479], "get_pointing_icr": [88, 437, 456, 474, 492], "get_psf_kernel": [156, 158, 161, 438, 483], "get_random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 326, 327, 328, 329, 372], "get_rebinned_axi": 465, "get_resolut": 145, "get_respons": 430, "get_scal": 117, "get_scale_model": [125, 126, 129], "get_spectrum": [188, 189, 191, 197, 200, 201], "get_subcovari": 204, "get_transform": [450, 456, 524, 525], "get_valid_path": 106, "get_wcs_coord_and_weight": 196, "getattr": 400, "getitem": 430, "getlogg": [372, 452, 456, 464, 465, 466, 489], "getter": 373, "getting_start": 392, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 126, 132, 188, 189, 191, 193, 197, 200, 201, 444, 448, 450, 454, 455, 460, 462, 466, 467, 469, 470, 474, 475, 476, 477, 482, 483, 484, 493, 520, 543, 565, 566], "gev2": [19, 469], "gevgevgev1": 444, "gh": [372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402], "git": [86, 257, 372, 373, 375, 377, 379, 380, 398, 405, 434], "github": [373, 375, 376, 377, 378, 380, 381, 390, 392, 398, 401, 402, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 428, 429, 430, 431, 432, 433, 507], "giuliani": 385, "giunti": [413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 434, 437], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 101, 136, 287, 288, 372, 377, 381, 382, 386, 387, 388, 389, 392, 393, 398, 402, 413, 415, 417, 425, 438, 446, 447, 450, 457, 459, 463, 465, 470, 472, 473, 474, 475, 478, 482, 483, 491, 507, 512, 567, 568, 570, 571], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 119, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 174, 176, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 279, 281, 283, 289, 297, 299, 302, 303, 310, 317, 321, 324, 325, 333, 359, 360, 365, 369, 372, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 395, 396, 398, 400, 412, 417, 423, 431, 432, 437, 441, 442, 443, 444, 447, 450, 458, 459, 460, 462, 464, 465, 466, 469, 470, 471, 473, 474, 475, 476, 478, 482, 483, 491, 493, 503, 504, 505, 507, 511, 512, 516, 517, 519, 520, 526, 530, 533, 564, 566, 567, 568, 569], "glast": 483, "glat": [41, 67, 68, 83, 372, 446, 470, 475, 483], "glat_err": 470, "glat_pnt": [456, 482], "glimps": [484, 487], "gll_iem_v06_cutout": [188, 189, 191, 197, 200, 201], "gll_iem_v06_gc": [458, 475, 477, 478, 483], "gll_psc_v16": 61, "gll_psc_v20": 470, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 373, 471], "global": [16, 33, 42, 45, 46, 47, 100, 102, 103, 105, 108, 109, 110, 147, 158, 161, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 206, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 323, 326, 327, 328, 329, 372, 376, 378, 420, 437, 446, 456, 457, 467, 477, 480, 505, 565], "global_dataset": 474, "global_to_loc": 187, "glon": [41, 67, 68, 83, 372, 446, 470, 475, 483], "glon_pnt": [456, 482], "glossari": [392, 434, 503, 520], "glue": 507, "glueviz": 389, "go": [50, 87, 91, 375, 382, 392, 397, 434, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 495, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567], "goal": [377, 386, 400, 472], "goe": [41, 52, 362, 372, 391, 402, 460], "gogia": 430, "good": [82, 83, 86, 101, 124, 292, 296, 372, 377, 379, 380, 381, 382, 383, 386, 388, 389, 390, 392, 442, 446, 448, 449, 452, 462, 463, 465, 466, 469, 471, 472, 474, 476, 478, 483, 484, 487, 529, 530, 566, 571], "googl": [87, 91, 392, 401], "got": 482, "gov": [58, 60, 61, 62, 64, 65, 145, 193, 392, 401, 546], "gp": [82, 83, 89, 373, 382, 388, 451, 454, 456, 467, 482, 484], "gpl3": 372, "gps_baseline_110380": [82, 83, 482], "gradient": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "grai": [363, 516, 543], "grand": 372, "grant": [375, 398], "granular": 463, "grayify_colormap": 391, "grb": [463, 466], "great": [377, 386, 391, 429, 487], "greater": [165, 365], "green": [101, 109, 110, 431, 457, 479, 480], "grei": 467, "grep": 407, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 128, 149, 157, 159, 188, 189, 191, 193, 197, 200, 201, 215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 275, 365, 372, 383, 388, 415, 417, 472, 519, 520, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560], "gridsearch": [206, 472], "gridspec": 359, "gridspec_kw": [450, 456, 464, 466, 533], "ground": [95, 387, 482, 568], "group": [86, 87, 91, 92, 125, 126, 129, 130, 132, 146, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 297, 378, 387, 391, 392, 393, 396, 401, 404, 414, 417, 419, 423, 429, 432, 464, 466, 487, 505, 507, 521, 567], "group_1": 479, "group_2": 479, "group_bi": [87, 91, 396], "group_by_axi": 396, "group_by_label": [92, 479], "group_high_zenith": 479, "group_low_zenith": 479, "group_siz": [140, 465], "group_tabl": [86, 193, 198], "grouped_observ": 479, "grow": [380, 391, 431], "grown": 392, "gr\u00e9aux": 437, "gsfc": [58, 60, 61, 62, 64, 65, 145, 193, 392, 546], "gt": 473, "gtexpcube2": 483, "gti": [82, 83, 87, 88, 89, 100, 101, 102, 105, 109, 110, 122, 124, 126, 129, 162, 198, 257, 378, 381, 382, 385, 386, 387, 396, 415, 417, 418, 420, 433, 437, 438, 458, 465, 466, 471, 474, 482, 484, 485, 503, 566], "gti_1": 504, "gti_2": 504, "gti_t0": 466, "gtimetadata": 399, "gtmktime": [382, 483], "gtobsim": 385, "gtol": 472, "gtpsf": [146, 147, 153, 158, 161, 193, 450, 483], "gtselect": [382, 483], "guarante": [380, 395, 397], "guess": [124, 187, 189, 438], "guid": [375, 388, 390, 404, 405, 406, 409, 432, 487, 507, 522, 532, 553, 563], "guidelin": [372, 376, 409, 431], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 102, 105, 109, 110, 114, 116, 117, 121, 126, 128, 132, 137, 138, 150, 222, 270, 360, 365, 367, 373, 394, 432, 442, 446, 447, 450, 457, 458, 459, 460, 470, 471, 473, 475, 477, 478, 482, 483, 484, 489, 491, 492, 493, 504, 505, 507, 509, 510, 511, 513, 533], "h": [26, 67, 82, 86, 87, 91, 95, 127, 147, 188, 189, 191, 197, 200, 201, 282, 362, 392, 395, 404, 408, 409, 417, 432, 440, 441, 442, 443, 446, 447, 449, 455, 457, 464, 465, 466, 469, 473, 474, 475, 478, 482, 483, 484, 486, 487, 489, 491, 492, 502, 504, 507, 520, 555, 556, 566, 567], "h0": 457, "h05": [45, 49], "h1": 457, "h_0": [457, 569], "h_1": [457, 569], "h_i": 127, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 101, 102, 105, 109, 110, 121, 122, 124, 160, 182, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 209, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 268, 269, 270, 365, 367, 369, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 419, 420, 423, 425, 426, 432, 433, 434, 436, 437, 438, 442, 443, 446, 447, 448, 452, 457, 459, 464, 465, 467, 469, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 484, 485, 491, 492, 503, 504, 507, 512, 516, 517, 519, 520, 524, 525, 552, 564, 567, 569], "habilit": 296, "hack": 428, "had": [372, 378, 380, 398, 420, 426, 430, 431], "hadron": [272, 378, 383, 452, 471, 482, 503, 516], "hajlaoui": [420, 423], "hal": 398, "half": [158, 161, 193, 199, 269], "halo": 495, "halv": [133, 287, 438], "halving_coord": 463, "halving_err": 463, "hand": [170, 372, 375, 380, 383, 392, 398, 400, 435, 472, 487, 507], "handbook": [392, 487], "handi": 454, "handl": [3, 16, 84, 90, 104, 122, 123, 124, 195, 290, 371, 373, 376, 384, 385, 386, 388, 393, 395, 396, 399, 401, 404, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 446, 448, 454, 455, 456, 458, 471, 473, 475, 477, 478, 483, 484, 487, 492, 493, 503, 504, 507, 566], "handler_map": 369, "hanna": 438, "hap": 388, "happen": [82, 375, 377, 379, 380, 386, 390, 402, 447, 477, 487, 491, 492, 503, 507, 569], "happi": [375, 379, 392, 412, 413, 432], "hard": [372, 373, 395, 400, 418, 480], "harder": [379, 567], "hardli": 399, "harri": [427, 428], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 125, 148, 206, 238, 272, 273, 282, 289, 392, 472], "has_any_t": [122, 124], "has_energy_axi": [186, 187, 196, 199], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160], "has_single_spatial_bin": [146, 147, 153, 158, 161], "has_stat_profil": [122, 124], "has_success": [122, 124], "has_ul": [122, 124], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 372, "hasn": [377, 571], "hatch": 467, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 104, 107, 111, 115, 122, 123, 124, 125, 129, 137, 138, 145, 146, 147, 156, 158, 161, 168, 170, 182, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 299, 323, 329, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 417, 420, 423, 425, 426, 429, 431, 432, 433, 434, 435, 437, 438, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 465, 466, 467, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 487, 491, 492, 493, 495, 503, 504, 505, 507, 514, 518, 519, 520, 530, 541, 564, 567, 570, 571], "haven": 408, "hawc": [55, 59, 63, 72, 76, 97, 409, 417, 423, 431, 434, 435, 437, 440, 486, 487, 502, 503, 504, 515, 519, 566], "hawc19_flux_point": [124, 455, 507], "hawc_crab": [124, 455, 507], "hd": 67, "hdr": 399, "hdr_dict": 399, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 102, 105, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 307, 358, 373, 382, 411, 426, 428, 431, 434, 435, 458, 473, 475, 482, 484, 485, 503, 504, 507, 509, 510, 511, 513, 520, 562], "hdu1": 145, "hdu2": 145, "hdu_al": 458, "hdu_band": [122, 124, 146, 147, 153, 158, 161, 186, 187, 188, 189, 191, 192, 195, 196, 197, 199, 200, 201], "hdu_class": [82, 87, 307, 482, 484, 485], "hdu_class_uniqu": 87, "hdu_evt": 458, "hdu_filenam": 484, "hdu_gti": 458, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [146, 147, 149, 153, 157, 158, 159, 161, 188, 189, 200, 201], "hdu_loc": 87, "hdu_nam": 307, "hdu_ob": 82, "hdu_out": [188, 189], "hdu_region": [196, 197], "hdu_tabl": [82, 484], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 482, 484, 485], "hdu_type_uniqu": 87, "hduclas2": 473, "hduclas3": 473, "hduclas4": 473, "hduclasn": 473, "hduindext": [82, 307, 484], "hdulist": [102, 105, 107, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 458, 475, 503], "hduloc": [87, 102], "he": [272, 382, 387], "hea": 387, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 122, 123, 124, 145, 146, 147, 153, 158, 161, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 269, 309, 354, 355, 358, 377, 382, 385, 399, 417, 425, 427, 432, 434, 437, 448, 458, 459, 475, 482, 571], "healpi": [187, 371, 379, 381, 389, 403, 404, 406, 415, 423, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 518], "healpix": [13, 187, 188, 189, 191, 197, 200, 201, 371, 379, 381, 386, 423, 431, 475, 483, 519], "healpix_to_imag": 424, "heapsort": [87, 91], "heart": 569, "heasarc": [145, 193], "heatmap": [361, 366], "heavi": [432, 433], "heavier": 454, "heavili": 423, "hegra": [97, 273], "heidelberg": 372, "heidt": 463, "height": [16, 29, 87, 91, 94, 126, 332, 447, 451, 452, 454, 460, 464, 467, 469, 475, 476, 478, 491, 516, 520], "heighten": 463, "helen": 429, "hello": [408, 456], "help": [11, 87, 91, 284, 290, 372, 375, 377, 379, 386, 387, 388, 392, 398, 401, 402, 403, 408, 412, 413, 414, 431, 432, 434, 470, 474, 475, 477, 483, 485, 493, 507, 567], "helper": [13, 307, 312, 379, 381, 386, 387, 388, 391, 402, 408, 414, 415, 416, 417, 423, 425, 428, 430, 431, 437, 438, 460, 470, 476, 477, 516, 565, 572], "henc": [87, 91, 388, 451, 452, 505, 520, 569], "her": 401, "here": [13, 82, 83, 87, 91, 102, 109, 124, 139, 143, 148, 157, 206, 281, 283, 286, 360, 371, 372, 373, 374, 375, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 400, 402, 404, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 479, 480, 482, 483, 484, 487, 491, 492, 493, 497, 503, 507, 512, 514, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 571, 572], "hereaft": 458, "herebi": 480, "heritag": 398, "herm": [276, 278, 438], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 101, 109, 110, 125, 130, 140, 141, 148, 150, 168, 174, 206, 279, 297, 298, 373, 380, 381, 386, 388, 392, 401, 404, 408, 411, 413, 416, 427, 428, 431, 432, 440, 443, 444, 446, 447, 448, 452, 454, 456, 457, 465, 467, 469, 470, 471, 472, 474, 479, 480, 483, 485, 486, 489, 491, 492, 495, 504, 505, 507, 509, 510, 511, 513, 514, 516, 517], "hess2": [148, 509], "hess_dl3_dr1_obs_id_020136": [88, 150, 373, 509, 510, 511, 513], "hess_dl3_dr1_obs_id_023523": [83, 86, 504], "hess_dl3_dr1_obs_id_023526": 504, "hess_ecpl": [273, 446], "hess_pl": 273, "hessian": 505, "heterogen": [399, 444, 455], "hfm": 67, "hgp": [67, 80, 81, 121, 392, 417, 429, 431, 432, 502], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 470], "hi": [372, 430], "hi_bnd": 193, "hi_threshold": 145, "hidden": 383, "hide": [13, 377, 394], "hierarch": [13, 297, 339, 381, 383, 399, 438, 507, 519], "hierarchi": [297, 383, 416], "hierarchical_clust": [437, 479], "high": [6, 15, 58, 62, 63, 83, 145, 193, 322, 372, 376, 377, 378, 385, 386, 387, 392, 399, 415, 416, 417, 418, 419, 423, 431, 432, 440, 441, 444, 447, 450, 451, 454, 460, 462, 464, 469, 470, 471, 474, 476, 482, 483, 484, 485, 487, 492, 493, 494, 502, 505, 512, 519, 565, 566, 567, 568], "high_zenith": 479, "higher": [186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 232, 375, 378, 383, 388, 391, 393, 405, 444, 459, 463, 473, 475, 514, 520], "highest": [137, 174, 463, 474, 482, 493], "highli": 478, "highlight": 567, "him": 401, "hint": [399, 450, 505], "hire": [149, 392, 497, 499, 500, 501, 503, 504, 509, 510, 511, 513, 516, 520, 569, 572], "hist": [83, 109, 110, 197, 201, 365, 449, 480], "histogram": [83, 109, 110, 193, 197, 201, 365, 437, 467, 520, 566], "histori": [386, 398, 434], "hli": [385, 418, 419, 423, 434, 440, 445, 487, 506, 566], "hli_spectrum_analysi": 447, "hline": 524, "hoc": 386, "hold": [69, 82, 89, 92, 96, 100, 156, 227, 299, 381, 382, 384, 387, 567, 569], "home": [16, 336, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 533, 539, 542, 555, 561, 562], "homebrew": 389, "homework": 414, "homogen": [87, 91, 420], "honk": 377, "hood": [447, 487, 491], "hook": [375, 434], "hope": 377, "hopefulli": 379, "horizont": [85, 95, 151, 342, 473, 571], "host": 372, "hour": [67, 94, 375, 388, 402, 441, 470, 474, 475, 507], "hover": 373, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 104, 123, 124, 126, 128, 168, 189, 199, 201, 323, 329, 374, 377, 380, 384, 386, 388, 389, 391, 394, 395, 398, 399, 402, 403, 404, 408, 409, 412, 413, 414, 417, 418, 425, 427, 430, 431, 432, 437, 438, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 493, 497, 503, 505, 508, 512, 516, 518, 519, 533, 565, 567, 568, 569, 571, 572], "howev": [77, 87, 91, 101, 121, 288, 371, 372, 373, 375, 379, 382, 385, 386, 390, 398, 400, 405, 443, 452, 460, 467, 469, 470, 471, 472, 480, 484, 485, 487, 503, 507, 519, 520, 525, 541, 567], "howto": [392, 434, 435], "hpx": [187, 188, 189, 191, 200, 201, 386, 423, 475, 483], "hpx2wc": [188, 189], "hpx_map": [188, 189], "hpx_pixel": 386, "hpx_reg": 187, "hpxgeom": [122, 186, 188, 189, 418, 423, 434, 483, 518], "hpxmap": [189, 191, 518], "hpxndmap": [265, 423, 518], "hpxsparsemap": 417, "hpxtowcsmap": [188, 189], "hr": [458, 459, 462, 466], "hspace": 469, "hspec": [427, 428, 429], "hst": 221, "hstack": [87, 91, 385], "html": [26, 83, 87, 91, 125, 145, 181, 187, 193, 196, 199, 206, 219, 241, 270, 299, 326, 327, 372, 373, 375, 380, 392, 397, 398, 402, 410, 431, 441, 449, 451, 454, 456, 462, 466, 472, 473, 482, 504, 507, 510, 518, 520, 546], "htmlcov": 402, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 101, 104, 117, 123, 125, 133, 139, 145, 148, 174, 181, 187, 193, 196, 199, 206, 219, 238, 241, 247, 248, 262, 263, 270, 272, 273, 282, 288, 289, 295, 299, 326, 327, 339, 375, 389, 392, 397, 398, 401, 402, 403, 404, 405, 406, 410, 414, 431, 441, 446, 449, 451, 454, 455, 456, 462, 466, 469, 470, 472, 473, 474, 482, 485, 504, 507, 518, 520, 546, 550, 551, 567], "hubert": 432, "hue": 363, "huestart": 363, "huge": [402, 525], "hugovk": 413, "human": [353, 383, 402, 425, 447, 491], "hundr": 484, "hypercub": [475, 519, 520], "hypothes": [279, 437, 507, 569], "hypothesi": [122, 124, 125, 126, 129, 130, 279, 281, 283, 444, 450, 457, 505, 507, 566, 569], "hz": [329, 493], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 295, 296, 297, 299, 301, 305, 307, 310, 311, 312, 317, 319, 320, 323, 326, 327, 328, 329, 331, 332, 335, 338, 340, 341, 343, 347, 349, 350, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 493, 495, 496, 497, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572], "i0": [87, 91], "i1": [87, 91], "i4": 460, "i8": [475, 493], "i_0": [188, 189, 191, 197, 200, 201], "i_hpx": [188, 189, 191, 197, 200, 201], "i_lat": [188, 189, 191, 197, 200, 201], "i_lon": [188, 189, 191, 197, 200, 201], "i_n": [188, 189, 191, 197, 200, 201], "i_scan": 480, "iact": [82, 83, 85, 94, 168, 171, 175, 378, 381, 382, 383, 384, 386, 388, 392, 409, 414, 428, 430, 432, 444, 450, 452, 474, 475, 477, 482, 483, 485, 504, 509, 510, 511, 513, 564, 566], "iactbasicimageestim": [378, 431], "iau": [52, 411, 415], "iau2015": 52, "ic": 543, "ic5uqiq5": 442, "icon": 565, "icr": [83, 85, 88, 91, 94, 95, 96, 102, 105, 109, 110, 137, 158, 168, 171, 187, 188, 189, 191, 194, 196, 199, 200, 201, 215, 216, 220, 228, 231, 245, 254, 255, 297, 298, 333, 372, 373, 396, 416, 446, 447, 448, 449, 450, 452, 455, 456, 458, 459, 462, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 478, 479, 482, 483, 484, 485, 491, 492, 504, 507, 511, 516, 520, 524, 525, 526, 528, 529, 530], "icrc": 427, "id": [67, 80, 82, 83, 87, 88, 91, 92, 112, 385, 388, 408, 447, 449, 458, 460, 462, 467, 470, 478, 482, 483, 484, 485, 491, 504], "id_obs_vela": 467, "idea": [377, 380, 387, 391, 392, 393, 447, 473, 479, 483, 491], "ideal": [374, 375, 382, 386, 387, 396, 400, 401, 444, 483], "idempot": [16, 84, 90, 104, 123], "ident": [347, 375, 387, 434, 446, 448], "identif": [67, 378, 470], "identifi": [67, 88, 103, 108, 187, 257, 372, 382, 383, 385, 388, 397, 398, 402, 418, 450, 458, 463, 470, 471, 478, 482, 484, 506], "identified_object": 470, "idx": [83, 87, 91, 92, 100, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 241, 449, 458, 466, 470, 472, 475, 519], "idx1": 472, "idx2": 472, "idx_glob": 187, "idx_loc": 187, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398, 442, 477, 478, 503, 566], "iem": [477, 483], "iem_minus_iem": 475, "iem_plus_iem": 475, "iem_times_two": 475, "ignacio": 433, "ignasi": 427, "ignor": [11, 16, 84, 87, 90, 91, 101, 104, 123, 152, 162, 191, 209, 211, 227, 299, 311, 373, 425, 446, 460, 466, 467, 471, 476, 491, 507, 567], "ii": [204, 429], "ij": 204, "ilist": 187, "illustr": [109, 110, 373, 382, 384, 385, 386, 388, 391, 448, 450, 455, 460, 471, 474, 475, 477, 478, 483, 497, 503, 516, 517, 524, 525, 533, 565], "illustrate_colormap": 391, "iloc": [87, 91], "im": [361, 472], "imag": [102, 105, 109, 110, 117, 127, 128, 137, 147, 148, 149, 155, 157, 158, 159, 161, 163, 173, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 269, 291, 294, 336, 358, 360, 361, 362, 363, 367, 372, 380, 381, 383, 388, 389, 392, 393, 402, 404, 409, 411, 412, 413, 416, 417, 418, 424, 428, 429, 430, 431, 432, 440, 451, 452, 454, 460, 461, 474, 476, 478, 482, 492, 493, 503, 504, 505, 512, 515, 516, 517, 518, 519, 520, 564, 565, 566, 572], "image_analysi": [392, 412], "image_err": 128, "image_fitting_with_sherpa": [392, 433], "image_pip": 431, "image_profil": 430, "imagehdu": [188, 189, 200, 201], "imagenorm": [362, 363], "imageprofil": 128, "images_t": 456, "imagin": 567, "img": [360, 475], "iminuit": [206, 371, 389, 398, 423, 425, 432, 436, 437, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 564], "immut": 219, "impact": [379, 385, 389, 484], "imperfect": 474, "implement": [19, 20, 102, 105, 109, 110, 139, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 282, 288, 372, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 399, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 430, 431, 433, 434, 437, 438, 443, 451, 463, 465, 469, 470, 474, 475, 476, 495, 503, 505, 507, 512, 513, 514, 552, 564, 565, 566, 567, 568, 571], "implent": 372, "impli": [232, 372, 391, 503, 566], "implic": 394, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 512], "implicitli": 474, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 101, 102, 104, 105, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 126, 128, 130, 132, 137, 138, 140, 141, 143, 145, 147, 148, 149, 150, 156, 158, 168, 171, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 206, 210, 212, 213, 214, 217, 221, 223, 224, 225, 229, 233, 235, 236, 238, 239, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 273, 279, 282, 288, 289, 297, 298, 319, 329, 339, 351, 352, 357, 360, 362, 363, 365, 367, 373, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 408, 419, 429, 431, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 496, 497, 499, 500, 501, 503, 504, 505, 507, 509, 510, 511, 513, 514, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 568, 569, 571], "importantli": [396, 432, 443, 567], "importerror": [87, 91], "impos": [436, 441, 516], "improv": [108, 279, 374, 376, 377, 378, 380, 381, 382, 386, 387, 388, 389, 390, 391, 392, 397, 402, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 475, 482, 507, 517, 524], "imshow": [102, 105, 156, 189, 201, 360, 366, 430, 475, 493], "in2p3": [398, 482], "in_memori": [88, 507], "in_memory_gener": 92, "in_safe_data_rang": [102, 105, 109, 110], "inaccur": 372, "incex": [16, 84, 90, 104, 123], "incid": [378, 566], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 104, 123, 129, 156, 162, 164, 165, 171, 172, 176, 186, 187, 196, 199, 242, 307, 371, 372, 378, 380, 383, 384, 385, 386, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 413, 415, 420, 431, 436, 437, 438, 441, 455, 457, 458, 460, 466, 469, 470, 472, 474, 476, 477, 478, 482, 484, 495, 497, 503, 505, 506, 517, 519, 564, 568, 571], "include_irf": [83, 88, 504, 507], "include_ssc": 242, "inclus": [83, 196, 386], "incompat": [372, 397, 425], "incomplet": [372, 402, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "inconsist": [420, 426, 436, 437], "inconveni": [391, 432], "incorpor": [388, 392, 400, 566], "incorrect": [83, 372, 399, 407, 416, 434, 435, 474, 480], "incorrectli": [434, 476], "increas": [137, 163, 193, 198, 220, 228, 231, 372, 381, 399, 465, 474, 503, 524], "increment": [19, 20, 26, 117, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 386, 475, 519], "ind": [187, 199, 219, 241], "inde": [458, 525], "indefinit": 379, "indent": [16, 84, 90, 104, 123], "independ": [67, 125, 129, 139, 296, 310, 372, 378, 382, 383, 384, 385, 386, 387, 390, 393, 394, 395, 396, 398, 404, 413, 423, 441, 447, 464, 470, 475, 476, 477, 478, 484, 491, 492, 502, 507, 512, 566, 570], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 101, 102, 105, 109, 110, 121, 122, 124, 125, 126, 130, 131, 132, 136, 145, 146, 147, 153, 156, 158, 161, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 206, 210, 212, 213, 214, 217, 219, 221, 223, 224, 225, 229, 235, 236, 238, 239, 241, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 273, 282, 307, 321, 326, 375, 378, 381, 382, 383, 384, 387, 388, 395, 396, 397, 401, 404, 414, 428, 430, 431, 437, 438, 442, 443, 444, 446, 447, 449, 450, 451, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 472, 473, 477, 478, 482, 483, 484, 485, 491, 492, 493, 505, 507, 518, 519, 520, 523, 524, 525, 526, 528, 529, 530, 531, 533, 535, 537, 538, 539, 544, 545, 546, 554, 555, 556, 557, 558, 559, 560, 561, 562], "index1": [213, 258, 534, 548], "index2": [213, 258, 534, 548], "index_1": [261, 262, 263, 549, 550, 551], "index_2": [77, 261, 262, 263, 549, 550, 551], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 192, "index_error": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "index_mod": [87, 91], "index_scan": 480, "indexerror": [92, 100, 241], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 372, 434, 449, 459, 463, 474, 475, 479, 480, 484, 485, 507, 519, 520, 566], "indico": 381, "indirect": [469, 495], "individu": [87, 91, 108, 119, 127, 368, 378, 384, 385, 387, 392, 395, 396, 400, 443, 446, 449, 457, 460, 465, 470, 471, 472, 474, 477, 478, 493, 503, 507, 512, 566], "indiviud": 394, "indxschm": [188, 189, 200, 201], "ineffici": [87, 91, 375], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 231, 400, 480], "infer": [122, 124, 186, 187, 188, 189, 191, 199, 200, 201, 221, 373, 491, 519], "inferno": 475, "infil": 372, "infin": 480, "influenc": 480, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 149, 155, 157, 159, 281, 283, 307, 373, 387, 388, 392, 401, 407, 417, 418, 420, 427, 428, 431, 447, 451, 452, 454, 458, 465, 469, 470, 471, 475, 483, 484, 485, 487, 489, 491, 567], "info_dict": [102, 105, 109, 110, 281, 283, 365, 420, 438, 471], "info_t": [100, 443, 446, 447, 449, 454, 466, 471, 477, 507], "infodict": 365, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 145, 149, 155, 157, 159, 160, 163, 168, 169, 175, 194, 206, 213, 214, 215, 216, 217, 218, 220, 221, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 242, 243, 244, 245, 246, 248, 249, 254, 255, 256, 258, 261, 262, 263, 265, 266, 269, 270, 284, 290, 307, 323, 354, 355, 372, 376, 377, 382, 384, 385, 386, 387, 388, 395, 396, 399, 400, 402, 407, 408, 409, 417, 419, 420, 423, 425, 431, 437, 438, 442, 444, 447, 448, 455, 458, 459, 462, 463, 471, 472, 474, 475, 478, 482, 483, 484, 485, 491, 492, 493, 502, 503, 504, 505, 507, 520, 566, 567, 570], "infrar": 221, "infrastructur": [402, 423, 434, 437], "ingredi": [396, 469], "inherit": [87, 91, 282, 372, 382, 384, 387, 396, 399, 400, 418, 423, 430, 471, 473, 518, 519], "init": [19, 20, 26, 87, 91, 121, 126, 132, 165, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 311, 323, 384, 420, 435, 437, 438, 460, 470, 471, 493], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 104, 122, 123, 124, 132, 189, 192, 193, 219, 241, 243, 244, 299, 377, 382, 383, 384, 388, 425, 441, 449, 452, 454, 455, 457, 458, 459, 462, 467, 470, 471, 475, 478, 491, 492, 493, 502, 504, 552, 566], "initialis": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 323, 326, 327, 328, 329, 372, 394, 480], "inject": [449, 462], "inlin": [377, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 475, 476, 477, 478, 482, 483, 485, 491, 492, 493], "inner": [44, 52, 53, 126, 163, 173, 255, 452, 493, 530], "inner_height": [516, 520], "inner_width": [516, 520], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 102, 104, 105, 108, 117, 119, 121, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 138, 141, 146, 147, 149, 156, 157, 158, 159, 160, 161, 163, 165, 169, 171, 173, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 210, 212, 219, 233, 241, 268, 269, 270, 282, 299, 310, 320, 323, 342, 344, 365, 367, 378, 380, 382, 383, 384, 385, 386, 387, 388, 393, 408, 418, 423, 426, 433, 437, 449, 458, 459, 467, 475, 480, 505, 519, 520, 568], "input_map": [111, 115], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 437, "insensit": 195, "insert": [87, 91, 92, 100, 241, 398, 418, 570], "insert_row": [87, 91], "inset": 424, "insid": [50, 83, 102, 109, 114, 116, 145, 171, 187, 188, 189, 191, 196, 199, 200, 201, 219, 241, 257, 361, 365, 372, 373, 386, 388, 396, 423, 441, 446, 449, 451, 454, 456, 462, 466, 471, 474, 476, 477, 478, 482, 484, 504, 514, 516, 517, 520], "inside_geom": 476, "insight": 407, "inspect": [384, 388, 408, 446, 448, 454, 458, 459, 472, 475, 477, 482, 483], "inspir": [372, 396], "instal": [87, 91, 371, 372, 375, 379, 380, 381, 389, 401, 402, 403, 406, 408, 409, 412, 413, 423, 427, 430, 431, 432, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492, 493, 507, 567], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 104, 119, 123, 124, 125, 127, 129, 130, 160, 162, 170, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 317, 323, 359, 361, 362, 363, 366, 368, 372, 378, 383, 384, 387, 388, 394, 396, 399, 423, 444, 446, 449, 460, 470, 472, 474, 476, 477, 478, 493, 497, 507, 519, 520, 543], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 188, 189, 191, 193, 200, 201, 383, 388, 443, 447, 470, 471, 475, 478, 480, 491], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 102, 104, 105, 109, 110, 113, 123, 175, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 372, 373, 375, 377, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 403, 404, 406, 413, 416, 419, 420, 433, 437, 442, 448, 454, 458, 462, 464, 466, 467, 470, 471, 473, 474, 475, 478, 480, 504, 511, 512, 519, 520, 567], "instruct": [372, 381, 389, 401, 403, 404, 412, 423, 427, 431, 458, 482], "instrument": [6, 83, 95, 108, 148, 152, 153, 227, 372, 382, 383, 384, 385, 387, 392, 396, 404, 408, 417, 420, 432, 433, 434, 440, 443, 444, 446, 447, 450, 454, 461, 467, 471, 472, 473, 474, 477, 478, 479, 480, 482, 483, 485, 487, 491, 492, 503, 504, 505, 509, 511, 513, 564, 565, 566], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 102, 103, 104, 105, 108, 109, 110, 112, 117, 119, 123, 124, 125, 126, 129, 130, 132, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 171, 175, 176, 181, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 275, 277, 279, 281, 282, 283, 287, 288, 289, 295, 299, 310, 311, 317, 321, 323, 326, 327, 328, 329, 331, 332, 359, 365, 372, 386, 430, 452, 472, 497], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 213, 214, 217, 221, 223, 224, 225, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 512, 524], "int_flux": 469, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 132, 137, 138, 146, 147, 153, 158, 161, 164, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 210, 212, 219, 241, 299, 317, 323, 372, 378, 386, 452, 519], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 101, 102, 105, 109, 110, 122, 124, 127, 129, 136, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 163, 188, 189, 191, 193, 197, 200, 201, 202, 203, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 275, 310, 371, 379, 381, 383, 385, 386, 387, 389, 390, 392, 396, 398, 411, 413, 414, 418, 419, 423, 428, 429, 430, 431, 432, 433, 434, 437, 446, 448, 449, 451, 466, 469, 470, 471, 475, 476, 478, 493, 495, 503, 505, 511, 526, 546], "integral_error": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 390, 420], "integral_flux_imag": 424, "integrate_geom": [215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269, 423, 436, 438], "integrate_log_log": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160], "integrate_spectrum": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 414, 420], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 299, 382, 400, 473], "intens": [188, 189, 191, 197, 200, 201, 206, 232, 382, 475, 503], "intent": 377, "interact": [19, 20, 87, 91, 158, 161, 188, 189, 191, 197, 200, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 371, 372, 373, 381, 382, 383, 384, 388, 392, 395, 408, 417, 442, 454, 462, 472, 475, 477, 478, 487, 491, 492, 516, 519, 543, 567], "interchang": 519, "interest": [114, 116, 125, 129, 206, 279, 377, 385, 386, 390, 392, 402, 444, 454, 458, 460, 470, 471, 472, 474, 476, 479, 482, 483, 493, 504, 505, 543, 566, 569, 570], "interfac": [6, 11, 15, 19, 20, 87, 91, 204, 206, 209, 210, 211, 212, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 376, 377, 378, 382, 384, 385, 387, 389, 390, 391, 392, 413, 416, 418, 419, 420, 423, 427, 430, 431, 437, 440, 442, 447, 450, 451, 454, 462, 464, 472, 478, 482, 487, 492, 493, 494, 507, 518, 543, 564, 565, 566, 567], "intermedi": [199, 381, 388, 398, 408, 443, 465], "intern": [15, 19, 20, 26, 87, 91, 122, 124, 133, 134, 135, 165, 171, 196, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 275, 299, 311, 372, 384, 386, 388, 391, 396, 423, 425, 434, 437, 441, 447, 454, 463, 464, 471, 473, 475, 482, 485, 491, 503, 507, 562], "interp": [19, 20, 150, 188, 189, 191, 193, 197, 198, 200, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 312, 367, 395, 400, 436, 438, 449, 455, 459, 462, 466, 473, 474, 475, 478, 483, 484, 485, 519, 520, 543, 544], "interp1": 475, "interp1d": 312, "interp2": 475, "interp_by_coord": [188, 189, 191, 197, 200, 201, 269, 434, 475], "interp_by_pix": [188, 189, 191, 197, 200, 201, 265, 266, 475], "interp_kwarg": [68, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 221, 265, 266, 269, 270, 372, 473, 483], "interp_map": [188, 189, 191, 197, 200, 201], "interp_missing_data": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160], "interp_param": 372, "interp_scal": [101, 280, 312], "interp_to_geom": [188, 189, 191, 197, 200, 201, 420, 436, 475, 483, 507], "interp_weight": 187, "interpol": [6, 26, 94, 101, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 168, 187, 188, 189, 191, 193, 197, 198, 200, 201, 221, 233, 243, 244, 265, 266, 268, 269, 270, 280, 311, 312, 313, 371, 383, 384, 385, 413, 418, 423, 425, 428, 431, 433, 434, 435, 436, 437, 438, 446, 459, 473, 474, 478, 483, 484, 507, 515, 519, 552], "interpolatedunivariatesplin": 268, "interpret": [91, 102, 105, 127, 137, 138, 189, 193, 199, 200, 201, 317, 390, 400, 475, 505, 520], "intersect": [89, 171, 172, 176, 196, 386, 465], "interspers": 377, "interstellar": [45, 458], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 101, 103, 108, 124, 129, 169, 193, 198, 206, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 381, 382, 386, 387, 390, 396, 404, 417, 419, 420, 423, 432, 433, 438, 464, 466, 472, 475, 484, 492, 504, 519, 566, 569], "interval_edg": 198, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 242, 289, 383, 387], "intrinsic_model": 442, "intro_map": 432, "introduc": [19, 20, 188, 189, 191, 193, 197, 200, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 372, 379, 380, 382, 384, 385, 386, 387, 389, 392, 394, 397, 400, 414, 416, 417, 419, 420, 423, 425, 426, 430, 431, 432, 434, 437, 438, 457, 463, 474, 478, 520, 525, 567, 570], "introduct": [375, 393, 394, 395, 413, 417, 418, 419, 420, 444, 447, 478, 484, 485, 491, 492, 496], "introductori": 463, "introspect": 299, "intuit": [393, 570], "invalid": [358, 372, 386, 399, 400, 423, 448, 458, 485], "invalid_pixel": 476, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 199, 213, 214, 217, 221, 223, 224, 225, 229, 232, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 281, 282, 283, 321, 328, 385, 458, 476, 478, 480, 543], "inverse_al": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "inverse_cdf": 458, "inversecdf": 385, "inversecdfsampl": [385, 415], "inversecompton": [242, 543], "invert": [91, 187, 199, 493], "invest": 375, "investig": 457, "involv": [87, 91, 102, 105, 109, 110, 372, 377, 386, 388, 390, 394, 450, 567], "io": [13, 83, 86, 87, 91, 125, 181, 191, 196, 206, 270, 375, 381, 392, 402, 414, 417, 429, 433, 437, 458, 472, 473, 475, 482, 504, 507, 518, 520], "iop": [101, 288], "iopscienc": [101, 288], "ipix": 187, "ipynb": [380, 392, 414, 417, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "ipynb_to_galleri": 372, "ipython": [87, 91, 371, 372, 388, 389, 403, 407, 415, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492, 493, 506, 567], "ipython3": 405, "ipywidget": 475, "irap": 392, "irf": [6, 82, 88, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 174, 175, 177, 178, 179, 181, 183, 184, 187, 196, 199, 257, 298, 372, 373, 378, 382, 383, 384, 385, 388, 391, 392, 393, 394, 400, 404, 412, 414, 417, 419, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 442, 443, 444, 446, 447, 448, 449, 450, 451, 454, 458, 459, 462, 464, 466, 474, 476, 479, 480, 481, 483, 484, 485, 487, 491, 492, 503, 504, 507, 509, 510, 511, 513, 514, 519, 564, 565, 566], "irf_dict": 162, "irf_dl3_hdu_specif": 473, "irf_fil": [88, 143, 147, 148, 149, 158, 441, 449, 462, 466, 473, 482], "irf_filenam": [458, 459, 473, 482], "irf_map": [146, 147, 153, 158, 161], "irf_path": 458, "irfmap": [146, 147, 158, 161, 404, 420, 507], "irfmetadata": 399, "irfmodel": 383, "irfs1": 482, "irfs2": 482, "irfs_path": 82, "irfstack": [420, 429], "irregular": [187, 199, 519], "irrespect": [385, 454, 475, 519], "is_align": [187, 193, 198, 199], "is_all_point_sky_region": 196, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201], "is_allski": [186, 187, 196, 199], "is_bkg": 107, "is_contigu": [198, 475], "is_convertible_to_flux_sed_typ": [122, 124], "is_energy_axi": 193, "is_energy_depend": [215, 216, 218, 220, 226, 228, 230, 231, 232, 233, 234, 243, 245, 249, 254, 255, 256, 259, 265, 268, 269, 271, 436, 478], "is_fixed_rad_max": 160, "is_flat": [186, 187, 192, 196, 199], "is_hpx": [187, 196, 199], "is_imag": [186, 187, 196, 199], "is_mask": [188, 189, 191, 197, 200, 201], "is_norm": [19, 20, 101, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 400, 425, 438, 442, 443, 446, 447, 448, 449, 451, 454, 455, 462, 466, 470, 472, 478, 492, 493, 543, 552], "is_norm_spectral_model": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 423, 478], "is_nul": 475, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 423], "is_region": [187, 196, 199], "is_regular": [187, 196, 199], "is_ul": [67, 122, 124, 423, 438, 447, 470, 493], "is_unidimension": 192, "isf": [472, 569], "isinst": [372, 383, 386, 395, 399, 400], "ism": [52, 53, 543], "isn": [375, 379, 386, 388, 391, 402, 456, 567], "isnan": [475, 476], "iso": [88, 124, 198, 203, 437, 466, 477, 483, 519, 561], "iso_p8r2_source_v6_v06": [477, 483], "isol": [386, 403, 476], "isot": [353, 571], "isotherm": [22, 495], "isotrop": [47, 216, 274, 477], "issu": [19, 20, 26, 87, 91, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 372, 373, 375, 380, 381, 383, 384, 386, 389, 392, 397, 398, 399, 400, 401, 404, 405, 406, 413, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 456, 476, 482, 503, 507, 567, 568], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 195, 241, 392, 399], "iter": [87, 91, 92, 100, 122, 124, 132, 188, 189, 191, 192, 193, 195, 197, 198, 200, 201, 241, 375, 378, 380, 388, 424, 450, 466], "iter_by_axi": [122, 124, 188, 189, 191, 197, 200, 201], "iter_by_axis_data": 197, "iter_by_coord": 415, "iter_by_edg": [193, 198], "iter_by_imag": [188, 189, 191, 197, 200, 201, 432], "iter_by_image_data": [188, 189, 191, 197, 200, 201, 475], "iter_by_image_index": [188, 189, 191, 197, 200, 201], "iter_by_pix": 415, "iter_with_reshap": 192, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 472, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 102, 105, 109, 110, 122, 124, 164, 165, 174, 187, 193, 195, 213, 214, 217, 220, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 279, 372, 375, 378, 381, 382, 384, 387, 388, 389, 391, 396, 398, 399, 402, 405, 423, 437, 438, 443, 447, 448, 451, 458, 459, 463, 464, 465, 470, 472, 474, 475, 476, 477, 478, 480, 491, 493, 496, 512, 514, 516, 518, 519, 520, 566, 569], "itself": [87, 91, 371, 372, 387, 398, 443, 464, 465, 467, 480, 567], "ivoa": 438, "j": [19, 20, 23, 102, 109, 127, 139, 282, 373, 375, 503], "j0001": [470, 493], "j0002": [470, 493], "j0003": [470, 493], "j0006": 470, "j0007": 493, "j0008": [470, 493], "j0009": 493, "j0010": 470, "j0013": 470, "j0021": 470, "j0022": 470, "j0025": 470, "j0031": 470, "j0349": 470, "j0521": 446, "j0534": [470, 493], "j0633": 493, "j0835": [444, 493], "j0851": 470, "j1036": 470, "j1104": [470, 493], "j1506": 444, "j1507": 444, "j1513": 470, "j1514": 470, "j1555": 493, "j1653": 470, "j1713": 443, "j1731": 477, "j1732": 477, "j1741": 477, "j1744": 477, "j1745": 477, "j1746": 477, "j1747": 477, "j1748": 477, "j1753": 477, "j1800": 477, "j1801": 477, "j1802": 477, "j1809": 477, "j1811": 477, "j1824": 470, "j1825": 457, "j1843": 67, "j1844": 67, "j2028": 470, "j2158": 470, "j2347": 493, "j2350": 493, "j2351": 493, "j2352": 493, "j2356": 493, "j2357": [470, 493], "j2358": [470, 493], "j2359": [470, 493], "j_": 23, "jackson": [87, 91], "jacob": [413, 432], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 419], "jalel": [420, 423], "jan": [377, 378, 381, 384, 389, 393, 410], "jana": 438, "januari": [379, 381, 397], "jargon": 404, "jason": 413, "javascript": [87, 91], "jax": 390, "jbernet": 438, "jdimjobm": 454, "jean": [431, 432], "jeffrei": 480, "jeltema": 495, "jep": 377, "jet": 363, "jfact": 469, "jfact_decai": 469, "jfact_map": 469, "jfactor": [19, 20, 437], "jfactori": 469, "jj": 204, "jk": [102, 109, 503], "jkl": 503, "jl": 503, "jo": [87, 91], "job": [93, 125, 126, 129, 132, 164, 425], "johann": [416, 423, 427, 428, 429, 430, 431, 432], "john": [87, 91], "join": [374, 383, 384, 482], "joint": [100, 109, 110, 119, 130, 139, 141, 206, 279, 380, 381, 384, 388, 392, 394, 404, 413, 414, 416, 417, 432, 433, 440, 443, 444, 446, 447, 448, 450, 457, 461, 466, 471, 472, 474, 478, 479, 480, 483, 487, 491, 505, 507, 564, 565, 566], "joint_fit": 467, "joint_result": 467, "jointli": [479, 484], "jonathan": [427, 428], "jose": [423, 425, 431], "joshi": 423, "jos\u00e9": [380, 388, 392, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 431, 432, 433], "journal": 398, "jouvin": [413, 415, 416, 417, 420, 428, 429, 430, 431, 432], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 104, 123, 401, 425, 427, 431], "json_data": [16, 84, 90, 104, 123], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 104, 123], "json_schema_input_typ": 90, "jsonschema": [389, 416, 417], "jsrwt4ou": 474, "jsviewer": [87, 91, 456], "juan": 438, "jul": [378, 387, 389, 391, 410], "juli": [378, 381, 386, 388, 389, 391, 395, 397, 399, 465], "julia": 438, "julian": 571, "julien": [429, 430, 431], "jun": [386, 388, 389, 394, 395], "june": [386, 390, 410], "junior": [66, 392], "jupyt": [371, 379, 388, 389, 392, 403, 404, 406, 407, 409, 414, 429, 430, 431, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567], "jupyterlab": [371, 389, 392, 408, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "jupytext": 392, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 148, 347, 372, 373, 374, 375, 377, 380, 382, 386, 388, 389, 390, 392, 401, 402, 403, 405, 431, 433, 442, 446, 447, 449, 454, 456, 458, 463, 464, 465, 467, 471, 475, 483, 484, 491, 493, 504, 520, 567], "juypter": 388, "jyear": [87, 91], "k": [19, 33, 52, 53, 102, 109, 195, 217, 268, 323, 444, 446, 448, 470, 472, 475, 477, 483, 503, 520, 524, 536, 543, 554], "kai": [431, 432], "kaori": 415, "kaspi": [31, 39, 45], "katrin": [400, 436, 437, 438], "kb": 380, "keep": [13, 87, 91, 100, 122, 156, 188, 189, 191, 197, 200, 201, 206, 372, 373, 375, 377, 378, 379, 380, 386, 389, 390, 391, 392, 395, 396, 421, 431, 451, 452, 457, 462, 472, 477, 483], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [103, 108], "keepdim": [156, 158, 161, 188, 189, 191, 197, 200, 201, 412, 417, 474], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 102, 104, 105, 109, 110, 117, 123, 132, 139, 195, 206, 335, 340, 341, 358, 380, 382, 389, 394, 396, 399, 409, 432, 442, 471, 478, 533], "kept": [89, 102, 105, 109, 110, 122, 124, 125, 129, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 372, 378, 392, 396, 442, 505], "kernel": [102, 105, 109, 110, 117, 121, 127, 128, 132, 145, 146, 147, 156, 158, 161, 163, 168, 173, 175, 178, 189, 199, 201, 378, 399, 418, 419, 424, 429, 433, 434, 450, 452, 467, 474, 475, 476, 483, 493, 503, 507, 511], "kernel_width": [132, 450, 456], "kernelbackgroundestim": 419, "kernelbackgroundmapestim": 393, "kev": [107, 132, 193, 450, 471, 520], "keyboard": 408, "keyerror": [91, 195, 396], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 101, 102, 104, 105, 109, 110, 123, 124, 126, 127, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 206, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 280, 282, 311, 319, 320, 341, 353, 355, 356, 359, 360, 361, 365, 366, 367, 368, 369, 399, 419, 423, 426, 434, 435, 448, 458, 459, 471, 475, 484, 505, 520, 531], "kg": 52, "khelifi": [415, 417, 420, 423, 426, 430, 431, 432, 434, 435], "kh\u00e9lifi": [398, 434, 436, 437, 438], "kind": [87, 91, 270, 347, 383, 384, 385, 390, 391, 395, 398, 432], "kinet": 44, "king": [157, 416, 427, 428, 429, 430, 431, 432, 473, 513], "kirsti": [436, 437, 438], "kl": 503, "klepser": 427, "km": [32, 37], "km2": 482, "km2a": [57, 70], "know": [373, 375, 377, 381, 386, 388, 389, 396, 402, 414, 431, 432, 433, 456, 459, 469, 473, 474, 475, 482, 484, 485, 567], "knowledg": [400, 408, 444, 449, 455, 457, 460, 462, 464, 472, 474, 475, 477, 480], "known": [281, 283, 299, 385, 446, 450, 452, 457, 464, 474, 475, 476, 493, 507, 517, 567, 568, 569], "koenig": 282, "konig": 282, "konrad": 438, "kornecki": 438, "kovalev": 463, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 242, 299, 302, 469, 470, 501, 543], "kurt": 438, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 101, 102, 105, 109, 110, 124, 125, 126, 127, 129, 140, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 170, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 280, 311, 322, 347, 359, 360, 361, 364, 366, 367, 368, 369, 372, 383, 399, 400, 436, 444, 448, 458, 467, 474, 485, 555], "kwargs_ax": [365, 452, 454], "kwargs_background": [109, 110], "kwargs_colorbar": [142, 143, 145, 148, 149, 150, 155, 157, 159, 201, 360], "kwargs_count": [109, 110], "kwargs_excess": [109, 110], "kwargs_extens": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 457], "kwargs_fit": [109, 110, 365], "kwargs_fp": 101, "kwargs_hist": [365, 452, 454], "kwargs_list": 195, "kwargs_model": 101, "kwargs_npred_sign": [109, 110], "kwargs_point": [196, 219, 241, 448], "kwargs_posit": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 457], "kwargs_residu": [101, 109, 110], "kwargs_saf": [109, 110], "kwargs_spati": [102, 105, 109, 110, 454, 492], "kwargs_spectr": [102, 105, 109, 110, 454, 492], "kwargs_spectrum": [101, 109, 110], "l": [23, 26, 51, 54, 101, 102, 109, 110, 168, 369, 373, 386, 395, 398, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 462, 466, 467, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 491, 492, 493, 503, 507, 520, 543, 566, 568, 569, 570], "l06": [48, 497], "l_": [52, 53], "l_0": [51, 500, 524, 525], "l_snr": 44, "la": 429, "lab": [398, 408, 431], "label": [92, 190, 193, 198, 219, 241, 297, 360, 361, 366, 369, 372, 373, 376, 381, 385, 386, 401, 402, 423, 425, 434, 435, 437, 441, 442, 444, 446, 448, 452, 454, 455, 459, 460, 463, 464, 465, 467, 469, 472, 475, 478, 479, 480, 493, 500, 501, 509, 533, 539, 542, 543, 547], "label_axi": [190, 475], "label_axis2": 475, "labelcolor": 441, "labelmapaxi": [423, 437], "lack": [195, 387, 467], "lafferti": [411, 566], "lafferty1994": 566, "lai": 476, "lambda": [67, 224, 225, 282, 365, 470, 482, 537, 569], "lambda_": [224, 225, 279, 444, 446, 454, 537, 539], "lancast": 139, "land": 402, "langl": 19, "languag": [379, 391], "laplac": [231, 526], "lar": [388, 412, 413, 414, 430, 431, 432, 435, 437], "larg": [67, 87, 91, 188, 189, 191, 197, 200, 201, 265, 267, 269, 372, 375, 377, 378, 386, 392, 393, 413, 423, 432, 433, 438, 441, 446, 452, 465, 470, 476, 482, 483, 484, 493, 503, 505, 507, 508, 514, 520, 526, 564, 567, 572], "large_scale_compon": [67, 470], "larger": [27, 131, 146, 147, 153, 158, 161, 279, 288, 373, 380, 391, 437, 441, 443, 446, 471, 474, 475, 476, 480, 504, 520, 526, 568, 569], "largest": [102, 105, 109, 110, 201, 372], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 188, 189, 190, 191, 193, 197, 200, 201, 241, 329, 369, 379, 382, 384, 394, 398, 401, 402, 404, 406, 412, 413, 463, 514, 516], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 102, 105, 109, 111, 115, 121, 125, 126, 128, 132, 146, 147, 153, 158, 161, 164, 188, 189, 191, 194, 197, 199, 200, 201, 215, 216, 220, 227, 228, 231, 243, 245, 254, 255, 257, 259, 265, 267, 269, 274, 279, 301, 302, 305, 327, 372, 373, 380, 381, 382, 383, 384, 385, 391, 392, 395, 402, 404, 409, 412, 417, 430, 431, 432, 440, 444, 447, 450, 451, 452, 454, 456, 460, 464, 465, 470, 471, 473, 474, 475, 476, 477, 478, 479, 486, 487, 491, 492, 493, 495, 502, 503, 504, 505, 507, 512, 519, 520, 524, 525, 526, 527, 528, 529, 530, 564, 571], "lat_0": [220, 228, 231, 245, 254, 255, 269, 387, 395, 451, 454, 455, 457, 458, 459, 462, 464, 470, 471, 477, 478, 483, 491, 492, 524, 525, 526, 528, 529, 530, 531], "lat_0_err": 457, "lat_pnt": [301, 305], "lat_rang": 327, "lat_t": [301, 305], "later": [372, 377, 378, 379, 383, 384, 385, 388, 389, 390, 391, 392, 393, 411, 413, 423, 424, 426, 427, 433, 442, 446, 448, 454, 455, 471, 474, 475, 478, 483, 493, 503], "latest": [125, 181, 270, 299, 375, 379, 392, 397, 398, 405, 434, 441, 449, 451, 454, 455, 456, 462, 466, 472, 482, 504, 507, 520], "latex": [372, 373], "latex_inlin": 437, "latitud": [94, 186, 187, 188, 189, 194, 196, 199, 200, 201, 327, 359, 416, 460, 475, 478, 512, 519, 527], "latpol": 475, "latter": [175, 206, 383, 385, 387, 393, 396, 399, 417, 448, 449, 458, 459, 462, 476, 477, 514, 516, 566, 568], "launch": [431, 567], "laura": [420, 423, 425, 426, 432, 434, 436, 437, 438], "law": [27, 101, 122, 124, 126, 131, 136, 156, 158, 161, 213, 223, 224, 225, 246, 247, 248, 249, 258, 261, 262, 263, 272, 282, 326, 385, 411, 417, 431, 440, 442, 449, 451, 454, 458, 460, 462, 465, 466, 467, 477, 478, 480, 507, 521, 533, 553, 559], "law2": 546, "layer": [87, 91, 384, 391], "layout": [423, 454, 462, 475, 491, 492], "lazi": [88, 100, 102, 105, 109, 110, 267, 308, 431], "lazili": 102, "lazyfitsdata": 419, "lb9pl4ie": 474, "lc": [86, 129, 198, 385, 387], "lc_1d": [122, 124, 140, 463, 464, 465, 466], "lc_3d": 464, "lc_estim": 387, "lc_maker_1d": [464, 465, 466], "lc_maker_3d": 464, "lc_new": 465, "le": 90, "lea": 420, "lead": [121, 372, 381, 386, 391, 393, 395, 397, 398, 416, 480, 482, 484, 495, 567], "leak": [448, 516], "leakag": [282, 464], "learn": [143, 148, 372, 389, 392, 401, 404, 406, 408, 432, 444, 446, 450, 456, 457, 458, 460, 463, 470, 471, 472, 475, 478, 480, 482, 487, 493, 567], "least": [43, 44, 372, 375, 377, 381, 458, 463, 519], "leav": [377, 384, 386, 387, 389, 392, 401, 403, 477], "lefaucheur": [429, 430, 431], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 122, 124, 129, 132, 146, 148, 188, 189, 191, 197, 200, 201, 225, 229, 248, 261, 284, 290, 372, 380, 382, 386, 388, 391, 395, 408, 450, 456, 464, 466, 477, 505, 514, 517, 525, 526, 533, 534, 537, 538, 540, 541, 543, 545, 548, 549, 550, 551, 555, 556, 557, 559, 568, 569, 570], "legaci": [372, 431, 432], "legacy_altaz": 85, "legal": [87, 91], "legend": [369, 441, 442, 444, 446, 448, 454, 455, 459, 463, 464, 465, 467, 469, 472, 478, 479, 480, 483, 500, 501, 509, 533, 539, 542, 543, 547], "legend_kwarg": 369, "lemi\u00e8r": 431, "len": [83, 279, 369, 450, 457, 458, 459, 463, 465, 467, 470, 474, 477, 493, 507], "lenain": [431, 432], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 164, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 282, 311, 365, 398, 444, 446, 449, 456, 460, 470, 472, 475, 483, 493, 524], "lengthi": 475, "lennarz": [414, 428, 430], "leq": [524, 529, 530], "less": [77, 187, 189, 193, 233, 268, 290, 372, 377, 379, 390, 402, 431, 472, 478, 479, 480], "let": [67, 273, 372, 375, 377, 381, 386, 389, 404, 407, 431, 432, 433, 444, 447, 448, 449, 450, 454, 455, 456, 457, 458, 460, 466, 467, 470, 471, 472, 475, 476, 478, 480, 483, 491, 493, 567], "level": [6, 11, 15, 16, 83, 84, 90, 104, 121, 123, 206, 281, 283, 372, 373, 375, 376, 377, 383, 385, 387, 391, 392, 393, 396, 399, 404, 408, 415, 416, 417, 418, 419, 423, 431, 438, 440, 443, 444, 446, 447, 450, 451, 452, 454, 456, 458, 462, 463, 464, 465, 466, 467, 469, 472, 477, 479, 482, 483, 484, 485, 487, 489, 493, 494, 503, 504, 505, 512, 514, 515, 519, 564, 565, 566, 567, 571], "levelnam": 372, "levmar": [206, 472], "lf": 402, "lgpl": 372, "lgtm": 402, "lhaaso": [55, 57], "li": [117, 121, 171, 378, 441, 450, 452, 458, 566, 569], "lib": [336, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 539, 542, 555], "librari": [87, 91, 372, 377, 378, 382, 392, 398, 409, 443, 446, 458, 478, 482, 492, 495, 504, 507, 565, 567], "licenc": 398, "licens": [398, 408], "lie": [186, 187, 193, 196, 199], "life": [379, 472], "lifetim": [20, 438], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 129, 133, 221, 233, 289, 376, 383, 385, 388, 392, 396, 404, 417, 419, 420, 427, 430, 432, 437, 438, 440, 442, 463, 468, 487, 503, 504, 505, 506, 515, 516, 519, 521, 563, 565], "light_curv": [16, 233, 392, 432, 440, 447, 451, 452, 454, 464, 468, 491, 562], "light_curve_flar": [440, 465, 468], "light_curve_model": 562, "light_curve_simul": [440, 466, 468], "lightcrv_pksb1222": [233, 562], "lightcurv": [71, 73, 74, 75, 77, 78, 118, 124, 129, 133, 134, 135, 140, 197, 198, 233, 286, 287, 289, 381, 383, 388, 391, 393, 396, 404, 415, 417, 418, 419, 423, 429, 430, 431, 432, 434, 435, 437, 438, 440, 464, 465, 468, 487, 502, 507, 562], "lightcurve_at_energi": 396, "lightcurveconfig": 16, "lightcurveestim": [118, 387, 388, 393, 396, 404, 415, 417, 419, 420, 423, 431, 432, 437, 464, 465, 466, 507], "lightcurvetablemodel": [383, 385], "lightcurvetempl": 383, "lightcurvetemplatemodel": [436, 437], "lightcurvetemplatetemporalmodel": [264, 395, 434, 437, 459, 478, 562], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 137, 138, 152, 160, 188, 189, 191, 195, 197, 200, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 299, 319, 329, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 403, 404, 408, 414, 423, 425, 426, 430, 431, 433, 434, 436, 437, 441, 442, 444, 446, 447, 448, 449, 452, 459, 460, 463, 467, 469, 471, 472, 473, 475, 479, 480, 482, 483, 487, 491, 493, 495, 496, 503, 507, 512, 520, 530, 565, 567, 568, 569, 570], "likelhood": 384, "likelihood": [100, 101, 102, 105, 110, 121, 122, 123, 124, 126, 132, 280, 296, 372, 378, 381, 384, 385, 388, 390, 392, 393, 394, 396, 404, 411, 413, 414, 417, 424, 427, 430, 432, 433, 438, 444, 446, 447, 448, 450, 456, 460, 464, 465, 467, 471, 472, 474, 480, 483, 491, 492, 495, 503, 505, 507, 543, 565, 566, 568, 569], "likelihood_profil": [383, 413], "likelihood_typ": 418, "likewis": [189, 201], "lima": 117, "lima1983": [505, 566, 569], "lima_map": 452, "limamapestim": [393, 419], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 101, 112, 121, 122, 123, 124, 125, 126, 129, 130, 132, 145, 160, 163, 193, 210, 212, 246, 280, 281, 283, 319, 320, 359, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 395, 396, 400, 413, 419, 423, 430, 431, 432, 433, 438, 441, 446, 454, 457, 460, 464, 471, 472, 475, 476, 479, 483, 491, 503, 505, 507, 516, 525, 543, 552, 565, 566, 570], "lin": [19, 20, 193, 197, 198, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 280, 311, 312, 313, 400, 459, 473, 475, 485, 520, 543], "line": [6, 13, 46, 82, 83, 87, 91, 101, 102, 105, 109, 110, 149, 155, 157, 159, 196, 197, 219, 241, 331, 332, 369, 371, 373, 375, 378, 381, 383, 386, 388, 389, 396, 402, 403, 404, 406, 408, 417, 428, 431, 454, 472, 474, 478, 495, 507, 520, 565], "line2d": [196, 219, 241], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 142, 143, 144, 145, 148, 150, 152, 155, 160, 188, 189, 191, 197, 198, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 311, 372, 434, 440, 454, 459, 460, 462, 475, 478, 483, 491, 492, 521, 563], "linear_model": 558, "linearli": [198, 201, 475, 503], "linearsegmentedcolormap": [362, 363], "linearstretch": [362, 363], "lineartemporalmodel": [264, 478, 558], "lineno": 372, "liner": [268, 386], "linestyl": [441, 467, 469, 480, 501, 520, 524, 525], "linewidth": [369, 373], "linhoff": [435, 436, 437, 438], "link": [67, 69, 80, 101, 219, 221, 241, 279, 375, 377, 380, 381, 384, 392, 398, 402, 408, 409, 420, 423, 425, 429, 430, 431, 442, 443, 446, 447, 448, 449, 451, 454, 455, 462, 466, 470, 472, 478, 482, 492, 493, 507, 552, 564], "linkag": 297, "linkage_kwarg": 297, "linkcheck": 373, "linspac": [83, 147, 188, 189, 191, 197, 200, 201, 206, 458, 460, 467, 472, 473, 475, 480, 519, 524], "linux": [379, 389, 402, 405, 432, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 567], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 117, 119, 121, 122, 124, 125, 126, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 168, 169, 171, 172, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 320, 330, 331, 332, 334, 361, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 446, 449, 450, 455, 459, 460, 462, 463, 464, 466, 471, 472, 473, 474, 479, 480, 482, 483, 484, 485, 487, 492, 503, 507, 510, 519, 520, 564, 565, 566, 567], "list_format": [87, 91], "listen": 507, "listenv": 375, "listinfo": 401, "liter": [16, 84, 90, 104, 123, 317, 372], "literatur": [495, 497, 566], "littl": [87, 91, 391, 393, 399, 475, 483, 512, 516, 567], "live": [83, 86, 88, 372, 377, 380, 382, 393, 433, 436], "livetim": [67, 88, 89, 105, 106, 110, 158, 180, 182, 183, 378, 441, 443, 446, 447, 449, 456, 458, 459, 462, 466, 470, 471, 473, 475, 483, 484, 493, 503, 507], "livetime_fract": 89, "ljouvin": 378, "ll": [122, 124, 132, 375, 377, 389, 405, 441, 442, 443, 446, 448, 451, 452, 456, 463, 464, 465, 466, 467, 567, 569], "llvm": 408, "ln": [53, 472, 550], "lo": [23, 430], "lo_bnd": 193, "lo_threshold": 145, "load": [66, 67, 82, 83, 86, 87, 91, 100, 101, 102, 105, 109, 126, 128, 162, 168, 186, 187, 188, 189, 199, 307, 372, 426, 429, 431, 437, 447, 449, 451, 452, 458, 459, 462, 463, 466, 467, 476, 482, 483, 484, 485, 491, 493, 504], "load_cta_irf": [433, 437], "load_irf_dict_from_fil": [158, 437, 441, 449, 458, 459, 462, 466, 482], "loc": [87, 91, 201, 365, 467, 500, 501, 509, 533, 539, 542, 543, 547], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 137, 138, 173, 186, 187, 196, 197, 199, 372, 373, 375, 380, 386, 401, 402, 405, 409, 413, 423, 447, 450, 451, 452, 457, 458, 469, 474, 487, 491, 507], "local_dataset": 474, "local_dens": [17, 18, 21, 22, 24, 25, 27, 469], "local_to_glob": 187, "localfold": 11, "localis": 307, "localn": [16, 84, 90, 104, 123], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 133, 146, 147, 153, 158, 161, 199, 328, 380, 386, 390, 393, 398, 399, 404, 406, 437, 441, 449, 458, 459, 462, 466, 470, 484, 485, 504, 520, 567], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 102, 104, 122, 123, 124, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 193, 197, 201, 209, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 275, 284, 290, 310, 311, 313, 358, 367, 384, 388, 410, 427, 434, 438, 440, 442, 447, 449, 450, 451, 452, 454, 455, 456, 459, 462, 464, 465, 466, 469, 471, 472, 473, 474, 475, 478, 480, 483, 484, 489, 491, 492, 507, 509, 519, 520, 521, 544, 552, 553, 559, 566, 567, 568, 569, 570], "log10": 467, "log_": [235, 236, 478, 541], "log_2": 287, "log_en": 478, "log_level": 11, "log_parabola": 444, "log_parabola_norm": 395, "logarithm": [34, 475, 480, 541], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 430, "loggaussian": 383, "logger": [338, 341, 372, 456], "logic": [16, 84, 86, 90, 104, 123, 174, 396, 475, 476], "logical_and": [188, 189, 191, 197, 200, 201], "logical_or": [188, 189, 191, 197, 200, 201, 474], "loglog": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 310, 441, 469, 499, 500, 501], "lognorm": 469, "logo": 402, "logparabola": [383, 542], "logparabolanormspectralmodel": [236, 252, 395, 420, 478, 542], "logparabolaspectralmodel": [206, 235, 252, 395, 442, 444, 446, 448, 455, 470, 472, 478, 535, 541], "logscal": 417, "logspac": [147, 188, 189, 191, 197, 200, 201, 449, 462, 466, 467, 469, 475, 499, 500, 501, 520], "logspir": [33, 38], "lomb": [387, 431], "lon": [16, 47, 91, 94, 96, 102, 105, 109, 111, 115, 121, 126, 128, 132, 146, 147, 153, 158, 161, 164, 188, 189, 191, 194, 197, 199, 200, 201, 215, 216, 220, 227, 228, 231, 243, 245, 254, 255, 257, 259, 265, 267, 269, 301, 302, 305, 327, 372, 373, 383, 386, 391, 395, 416, 447, 451, 452, 454, 456, 460, 464, 465, 470, 471, 473, 474, 475, 478, 479, 483, 491, 492, 493, 505, 519, 520, 524, 525, 526, 527, 528, 529, 530], "lon_0": [220, 228, 231, 245, 254, 255, 269, 387, 395, 451, 454, 455, 457, 458, 459, 462, 464, 470, 471, 477, 478, 483, 491, 492, 524, 525, 526, 528, 529, 530, 531], "lon_0_err": 457, "lon_pnt": [301, 305], "lon_rang": 327, "lon_t": [301, 305], "long": [372, 375, 377, 379, 386, 388, 391, 392, 394, 397, 399, 425, 434, 442, 470, 487, 519], "longer": [288, 372, 378, 379, 386, 387, 389, 392, 405, 423, 426, 431, 432, 434, 437, 443, 449, 464], "longest": 192, "longitud": [68, 94, 186, 187, 188, 189, 194, 196, 199, 200, 201, 327, 359, 386, 460, 475, 478, 512, 519, 527], "lonpol": 475, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 102, 105, 109, 110, 124, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 329, 372, 374, 375, 377, 384, 386, 387, 389, 391, 392, 395, 408, 431, 443, 446, 447, 449, 450, 451, 452, 454, 456, 458, 460, 462, 464, 466, 467, 471, 473, 475, 478, 482, 483, 485, 487, 491, 493, 495, 504, 507, 567], "look_up": 429, "lookup": 194, "loop": [87, 91, 320, 385, 437, 446, 470, 475, 484, 491, 507], "lopez": [221, 431, 437, 533], "lopez21": [222, 442, 533], "lopez_2021": 222, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 372, "loss": [52, 566], "lost": [100, 102, 105, 109, 110, 507, 520], "lot": [82, 372, 375, 377, 378, 379, 380, 383, 385, 386, 388, 392, 402, 412, 414, 415, 423, 431, 432, 447, 456, 483, 491, 492, 517], "low": [87, 91, 145, 193, 322, 372, 373, 376, 381, 401, 429, 431, 440, 443, 446, 450, 456, 458, 471, 476, 477, 482, 483, 487, 491, 494, 503, 504, 505, 514, 515, 519, 564, 568], "low_zenith": 479, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 122, 124, 145, 174, 193, 195, 198, 213, 214, 217, 218, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 268, 270, 271, 372, 386, 391, 392, 399, 460, 474, 492], "lower_error": 124, "lowest": [391, 463], "lp": [235, 236, 395, 444, 470, 478, 535], "lp_norm": 542, "lss": 446, "lst": [379, 482], "lt": [372, 398, 425, 434, 529, 530], "ltcube": [187, 188, 189, 191, 200, 201, 475], "lts_author": 398, "luca": [413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 434, 437], "lui": 433, "luigi": 428, "luminos": [41, 46, 51, 52, 53, 54, 242], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 501], "lvtm": 466, "lw": [446, 448, 450, 456, 467, 472, 520, 524, 526], "ly": [423, 477], "lyne": 37, "l\u00e9a": [413, 415, 416, 417, 420, 428, 429, 430, 431, 432], "l\u00f3pez": 431, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 111, 115, 129, 186, 187, 188, 189, 191, 197, 199, 200, 201, 282, 296, 372, 373, 375, 386, 403, 404, 405, 406, 459, 469, 472, 473, 475, 478, 489, 512, 516, 518, 519, 520, 531, 567, 570], "m1": [404, 406], "m2": [102, 148, 168, 442, 447, 449, 451, 452, 454, 456, 462, 471, 473, 474, 482, 491, 492], "m_": [20, 50, 52, 53], "m_3fhl_gc": 475, "m_4d": 475, "m_allski": 475, "m_b": 568, "m_cube": 475, "m_ejecta": [52, 500], "m_gc": 475, "m_hpx": 475, "m_i": 568, "m_iem_10gev": 475, "m_iem_cutout": 475, "m_iem_gc": 475, "m_iem_interp": 475, "m_sub": 475, "m_sun": 500, "m_wc": [188, 189, 191, 197, 200, 201, 475], "ma": [87, 91, 117, 121, 441, 450, 452, 566, 569], "mac": [87, 91, 372, 379, 402, 430, 567], "machin": [375, 379, 380, 385, 389, 402, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 454], "maco": [389, 432], "macport": [389, 430, 432], "made": [168, 175, 196, 199, 210, 212, 219, 241, 299, 331, 332, 372, 375, 377, 388, 391, 393, 396, 397, 398, 423, 434, 435, 446, 450, 454, 455, 474, 482, 520, 531, 566], "madrid": 382, "magenta": [369, 457, 479], "magic": [97, 404, 409, 425, 431, 434, 448, 483, 566], "magic_ecpl": 273, "magic_lp": [273, 448], "magnet": [42, 50, 51, 54, 543], "magnetic_field": [50, 51, 54], "magnitud": [311, 458], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 101, 104, 123, 124, 125, 126, 129, 209, 211, 372, 373, 375, 380, 381, 385, 386, 388, 389, 397, 398, 402, 403, 405, 410, 411, 442, 451, 452, 458, 482, 506, 519, 526, 543, 564, 567, 571], "mail": [373, 375, 377, 379, 386, 388, 391, 393, 395, 398, 401, 407, 412, 413, 493, 567], "mailman": 401, "mailmap": [423, 434], "main": [91, 102, 109, 372, 375, 377, 378, 380, 384, 387, 388, 389, 392, 396, 398, 402, 413, 419, 423, 426, 431, 437, 447, 457, 458, 460, 462, 470, 473, 475, 476, 477, 489, 491, 492, 502, 504, 508, 567], "mainli": [372, 382, 383, 386, 393, 475], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 372, 374, 389, 391, 392, 393, 397, 402, 432, 474], "mainten": [372, 379, 398, 402, 414, 436], "major": [196, 220, 228, 231, 372, 376, 377, 381, 389, 397, 425, 431, 432, 524, 525, 526], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 101, 104, 123, 163, 164, 168, 169, 170, 171, 173, 174, 175, 178, 179, 184, 185, 187, 188, 189, 192, 193, 196, 198, 199, 200, 201, 268, 329, 331, 332, 343, 371, 373, 374, 377, 378, 379, 382, 384, 386, 388, 389, 390, 391, 392, 393, 396, 398, 399, 402, 408, 411, 412, 414, 417, 418, 423, 425, 428, 429, 430, 431, 434, 436, 442, 443, 446, 448, 449, 452, 454, 458, 462, 464, 473, 474, 475, 478, 482, 483, 484, 489, 493, 504, 507, 567, 568], "make_background": [168, 175], "make_background_fit": 165, "make_background_scal": 165, "make_base_catalog_galact": [431, 497], "make_concentric_annulus_sky_region": 460, "make_contour": 472, "make_count": [168, 169, 170, 175], "make_counts_off": [169, 170], "make_cub": 163, "make_dataset": 164, "make_default_fov_background_model": 165, "make_edisp": [168, 175], "make_edisp_kernel": [168, 175], "make_edisp_kernel_map": 473, "make_edisp_map": 147, "make_effective_livetime_map": 474, "make_exclusion_mask": 165, "make_exposur": [168, 175], "make_exposure_irf": [168, 175], "make_imag": 432, "make_lupton_rgb": 367, "make_map_background_irf": 426, "make_map_count": 378, "make_map_cutout": 378, "make_map_exposure_reco_energi": 378, "make_map_exposure_true_energi": [147, 378, 473], "make_map_fov_background": 378, "make_map_hadron_accept": 378, "make_map_ring_background": 378, "make_map_xxx": 378, "make_maps_off": 173, "make_mask_bkg_invalid": 174, "make_mask_energy_aeff_default": 174, "make_mask_energy_aeff_max": 174, "make_mask_energy_bkg_peak": 174, "make_mask_energy_edisp_bia": 174, "make_mask_offset_max": 174, "make_mean_edisp": 433, "make_mean_psf": 433, "make_meta_t": [168, 175], "make_model": 391, "make_more_random_stuff": 372, "make_observation_time_map": 474, "make_orthogonal_rectangle_sky_region": [126, 460], "make_path": [124, 455, 471], "make_pixel_region": 386, "make_psf": [158, 168, 175, 433], "make_psf_map": 473, "make_quant": 343, "make_random_stuff": 372, "make_region": 386, "make_sky_coord": 386, "make_some_random_stuff": 372, "make_theta_squared_t": [423, 485], "makefil": [402, 427], "maker": [6, 147, 158, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 378, 385, 387, 398, 417, 419, 420, 425, 434, 437, 438, 440, 441, 446, 448, 449, 452, 456, 458, 459, 462, 466, 467, 471, 473, 476, 481, 484, 485, 487, 503, 504, 517, 519, 566], "maker_fov": 492, "maker_safe_mask": [456, 462, 492], "mamba": [375, 403, 404, 425], "manag": [87, 91, 210, 212, 219, 241, 319, 350, 371, 372, 375, 380, 388, 389, 391, 394, 398, 399, 401, 423, 428, 430, 434, 438, 475, 477, 567], "manconi": 415, "mandatori": [174, 375, 385, 398, 459, 478], "mandatory_keyword": 473, "mani": [87, 91, 311, 372, 373, 375, 377, 379, 381, 384, 386, 387, 388, 389, 392, 393, 398, 402, 408, 414, 415, 420, 423, 429, 430, 431, 432, 433, 436, 437, 443, 446, 449, 457, 462, 463, 475, 485, 487, 495, 503, 505, 517, 520, 564, 565, 566, 567, 571], "manifest": 382, "manipul": [87, 91, 396, 399, 425, 480, 519], "manner": [436, 437], "manpow": [377, 389], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 379, 384, 394, 401, 458, 507, 515, 567, 568], "manuel": [424, 427, 428], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 216, 219, 220, 227, 228, 231, 233, 241, 243, 245, 254, 255, 257, 259, 265, 266, 267, 269, 270, 277, 282, 321, 359, 360, 365, 367, 369, 371, 372, 373, 375, 379, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 399, 404, 408, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 437, 438, 440, 441, 443, 446, 447, 448, 449, 453, 454, 457, 458, 459, 460, 461, 463, 464, 465, 466, 470, 471, 474, 478, 481, 482, 483, 484, 485, 487, 488, 491, 492, 495, 502, 503, 504, 506, 507, 511, 512, 513, 514, 515, 516, 517, 523, 525, 526, 527, 528, 531, 562, 564, 565, 566], "map_": [202, 203, 360, 367], "map_4d": 475, "map_analysi": 391, "map_cent": 269, "map_coord": [83, 147, 158, 161], "map_dataset": [384, 467], "map_dataset_empti": 467, "map_dataset_mak": 467, "map_dataset_on_off": 467, "map_edisp": [111, 115], "map_in": [188, 189, 191, 197, 200, 201], "map_out": [105, 110, 146, 147, 153, 158, 161, 188, 189, 191, 197, 200, 201], "map_select": [16, 447, 451, 452, 454, 491], "map_typ": [188, 189, 191, 197, 200, 201, 475, 519], "mapax": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 420, 423, 425, 475], "mapaxi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 115, 122, 124, 126, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 168, 178, 179, 184, 185, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 367, 373, 387, 396, 414, 415, 417, 420, 423, 433, 437, 441, 443, 446, 448, 449, 455, 456, 458, 459, 462, 465, 466, 467, 471, 473, 474, 475, 478, 483, 484, 485, 492, 511, 514, 516, 517, 519, 520], "mapcoord": [83, 147, 158, 161, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 243, 431, 432, 475, 520, 527], "mapdataset": [98, 99, 103, 105, 108, 109, 110, 112, 113, 114, 116, 117, 121, 126, 129, 132, 136, 137, 138, 139, 163, 164, 165, 168, 169, 173, 174, 227, 365, 368, 385, 387, 393, 394, 413, 414, 415, 416, 417, 418, 419, 420, 423, 437, 438, 450, 451, 455, 456, 457, 459, 460, 462, 464, 466, 467, 472, 474, 476, 477, 483, 491, 492, 505, 507, 514, 517, 566, 568, 569], "mapdataseteventsampl": [93, 108, 417, 418, 419, 426, 437, 458, 459], "mapdatasetmak": [158, 166, 175, 385, 417, 420, 423, 426, 434, 456, 458, 459, 462, 467, 473, 474, 484, 491, 492, 507, 514, 517], "mapdatasetmetadata": [102, 105, 399], "mapdatasetoff": 425, "mapdatasetonoff": [98, 102, 109, 110, 117, 121, 136, 163, 169, 173, 417, 418, 420, 423, 436, 437, 452, 467, 474, 503, 517, 568], "mapdatasetsampl": 385, "mapevalu": [383, 384, 416, 417, 420, 423, 434, 435, 436, 438], "mapeventsampl": [415, 416], "mapfit": [383, 384, 413, 432, 433], "mapgeom": [378, 433, 434], "mapmak": [168, 388, 413, 417, 432], "mapmakerob": [416, 417], "mappabl": 396, "mappanelplott": [393, 572], "mapper": 307, "mappingintstrani": [16, 84, 90, 104, 123], "maps_off": 173, "mar": [389, 410, 435], "march": [379, 381, 410, 412, 433], "marcocirelli": 26, "margin": [101, 105, 110, 114, 116, 187, 189, 199, 201, 219, 241, 257, 383, 476, 524, 566, 568], "marion": [413, 432], "mark": [91, 372, 383, 401], "marker": [101, 102, 105, 109, 110, 441, 443, 446, 448, 450, 456, 463, 464, 465, 466, 493], "markerfacecolor": [102, 105, 109, 110], "markers": [101, 102, 105, 109, 110, 480], "mask": [83, 87, 91, 99, 101, 102, 105, 109, 110, 121, 125, 126, 128, 129, 130, 132, 146, 147, 153, 158, 161, 163, 165, 170, 171, 172, 173, 174, 176, 186, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 210, 212, 219, 241, 257, 384, 400, 417, 419, 420, 421, 423, 426, 432, 434, 435, 436, 437, 440, 441, 443, 454, 456, 474, 477, 481, 484, 487, 503, 514, 516, 519, 566], "mask_1": 479, "mask_2": 479, "mask_bright": 470, "mask_contains_region": 201, "mask_data": 476, "mask_energi": [471, 476], "mask_fit": [101, 102, 105, 109, 110, 114, 116, 384, 417, 434, 448, 454, 467, 471, 472, 476, 480, 503], "mask_fit_imag": [102, 105, 109, 110], "mask_imag": [102, 105, 109, 110], "mask_map": [187, 199, 440, 476, 481], "mask_map_catalog": 476, "mask_nearest_posit": [188, 189, 191, 197, 200, 201], "mask_off": 467, "mask_roi": 470, "mask_saf": [101, 102, 105, 106, 109, 110, 174, 384, 417, 471, 474, 476, 503], "mask_safe_edisp": [102, 105, 109, 110], "mask_safe_imag": [102, 105, 109, 110, 146, 147, 153, 158, 161], "mask_safe_psf": [102, 105, 109, 110], "mask_spac": 471, "mask_valid": 101, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 385, 419, 438, 469, 495, 528], "massdm": [19, 20, 469], "master": [378, 379, 386, 401, 402, 411], "match": [87, 91, 108, 112, 186, 187, 189, 192, 193, 194, 196, 199, 201, 203, 281, 283, 372, 380, 431, 433, 438, 446, 449, 466, 483, 502, 519], "match_by_nam": 194, "math": [228, 371], "mathcal": [472, 503], "mathemat": [478, 480], "mathieu": [423, 426], "mathrm": [19, 20, 23, 102, 109, 148, 469, 472, 503, 568, 570], "mathworld": [326, 327], "matplotlib": [19, 20, 26, 66, 67, 83, 128, 142, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 188, 189, 191, 197, 200, 201, 204, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 350, 360, 361, 362, 365, 366, 367, 369, 371, 372, 373, 386, 389, 398, 405, 408, 415, 423, 425, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 499, 500, 501, 507, 509, 510, 511, 513, 516, 524, 526, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 571], "matric": 204, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 111, 115, 145, 146, 147, 150, 204, 205, 206, 210, 219, 241, 281, 283, 365, 389, 390, 400, 433, 434, 437, 472, 473, 503, 505, 511], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 386, 392, 400, 432, 437, 438, 440, 474, 481, 483, 487, 496, 519, 565, 567], "matthew": [379, 429, 431, 432], "matthia": [431, 432], "mattox": 450, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 102, 112, 125, 127, 129, 160, 164, 168, 170, 174, 201, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 327, 380, 388, 395, 400, 408, 419, 420, 421, 423, 425, 437, 442, 443, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 460, 462, 463, 464, 465, 467, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 483, 484, 491, 492, 495, 514, 516, 517, 524, 543, 546, 552, 569], "max_ag": [45, 497], "max_column": [87, 91], "max_energi": 463, "max_lin": [87, 91], "max_nit": 132, "max_offset": 388, "max_percentil": 83, "max_radiu": [156, 158, 161, 199, 483], "max_region_numb": [171, 516], "max_width": [87, 91], "maxcal": 206, "maxclust": 297, "maxfev": 472, "maxim": [45, 82, 91, 112, 132, 174, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 435, 436, 437, 438, 516], "maxima": [137, 210, 212], "maximilian": [423, 425, 426, 435, 436, 437, 438], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 122, 124, 125, 127, 129, 158, 161, 163, 171, 174, 180, 183, 187, 193, 198, 199, 209, 211, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 281, 283, 326, 328, 331, 369, 375, 378, 386, 425, 444, 450, 463, 474, 475, 480, 484, 492, 497, 505, 516, 543, 565, 566, 569], "maxmimum": 480, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372, 380, 382, 383, 394], "mb": [186, 187, 196, 199, 380, 404, 406, 440, 445, 453, 461, 468, 481, 482, 483, 485, 486, 488, 490, 494, 522, 532, 553, 563], "mbox": [102, 109], "mc": 390, "mc_id": [83, 382, 385, 425, 458, 482], "mcerp": 390, "mckee": [53, 438], "mcmc": [390, 392, 413, 418, 420, 543], "mcmc_sampl": [392, 415], "md": [375, 392, 398], "mdm": [26, 469], "mean": [42, 68, 87, 91, 96, 101, 102, 126, 128, 145, 146, 147, 150, 153, 158, 161, 229, 233, 268, 282, 286, 298, 317, 372, 373, 375, 377, 379, 385, 386, 388, 389, 395, 400, 405, 408, 420, 429, 446, 449, 459, 463, 472, 474, 478, 479, 480, 483, 484, 493, 525, 540, 567, 568], "meaning": 478, "meant": [378, 437, 441, 449, 451, 454, 456, 462, 466, 482], "measur": [27, 67, 101, 105, 110, 128, 193, 273, 281, 283, 286, 287, 288, 289, 292, 293, 295, 296, 378, 386, 391, 396, 402, 411, 416, 424, 430, 432, 442, 443, 446, 448, 449, 452, 455, 457, 460, 462, 463, 464, 465, 470, 483, 492, 493, 505, 512, 514, 517, 565, 566, 569, 570], "mechan": [380, 390, 396, 399], "media": 398, "median": [83, 158, 161, 408, 467, 479, 483], "median_zenith": 479, "medium": [45, 52, 372, 381], "meeseeksdev": 372, "meeseeksmachin": 372, "meet": [219, 241, 299, 378, 380, 392, 397, 402], "megabyt": [186, 187, 196, 199], "mem": [440, 445, 453, 461, 468, 481, 486, 488, 490, 494, 522, 532, 553, 563], "member": [83, 373, 377, 386, 398, 399, 431, 437, 482, 485], "memo": [145, 193], "memori": [87, 88, 91, 92, 100, 102, 103, 105, 108, 109, 110, 186, 187, 196, 199, 265, 267, 269, 350, 372, 382, 384, 385, 388, 394, 396, 417, 423, 438, 449, 462, 507, 566], "memoryobserv": 88, "mender": [436, 437, 438], "mention": [59, 140, 372, 373, 375, 379, 380, 384, 386, 389, 391, 392, 397, 398, 401, 402, 473, 477, 478, 495, 566], "mentor": [375, 392], "mere": 382, "merg": [67, 86, 87, 91, 190, 193, 219, 241, 339, 372, 375, 376, 377, 378, 385, 386, 387, 391, 392, 397, 398, 401, 402, 412, 413, 414, 415, 416, 417, 418, 419, 420, 428, 429, 430, 431, 432, 433], "merge_equ": 86, "mergesort": [87, 91], "mess": 373, "messag": [101, 205, 207, 208, 375, 386, 388, 395, 421, 436, 443, 444, 446, 447, 448, 454, 455, 456, 466, 467, 472, 483, 491, 492, 507, 567], "met": [86, 353, 437, 465, 566], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 102, 103, 105, 107, 108, 109, 110, 122, 124, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 175, 188, 189, 191, 197, 200, 201, 265, 266, 269, 270, 309, 353, 354, 355, 356, 382, 385, 386, 387, 396, 399, 419, 420, 431, 435, 437, 438, 458, 467, 475, 479, 482, 484, 504, 505, 562], "meta_t": [100, 101, 102, 105, 109, 110, 168, 175, 396, 399, 420, 443, 449, 474, 503], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 104, 106, 122, 123, 124, 142, 143, 144, 148, 149, 152, 155, 157, 159, 160, 188, 189, 191, 197, 200, 201, 354, 376, 378, 389, 438, 447, 451, 452, 454, 458, 478, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "metadata_fits_export_kei": [84, 90, 104, 123], "metadatabas": 399, "metadatabasemodel": 399, "metapackag": 389, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 283, 289, 297, 307, 311, 315, 319, 320, 321, 346, 359, 361, 371, 372, 375, 378, 381, 382, 383, 386, 387, 388, 390, 391, 392, 394, 396, 398, 399, 404, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 441, 443, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 465, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 502, 504, 506, 507, 511, 514, 516, 517, 518, 520, 541, 555, 564, 565, 566, 567, 569], "method_kwarg": [319, 320], "methoda": 415, "metric": 297, "mev": [74, 83, 142, 143, 144, 148, 441, 442, 449, 451, 454, 456, 462, 466, 467, 470, 473, 475, 478, 482, 483, 493, 552], "meval": 526, "mexico": 484, "meyer": [238, 273, 455, 566], "meyer2010": 566, "mgtime": 387, "michael": [436, 438], "mid": [426, 437, 482], "middl": [361, 388], "midli": 446, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 176, 193, 206, 372, 377, 383, 384, 386, 389, 391, 396, 398, 399, 404, 406, 413, 446, 465, 467, 471, 474, 476, 483, 484, 487, 493, 495, 503, 507, 514, 520, 567, 569], "migra": [102, 105, 109, 110, 147, 150, 179, 388, 458, 459, 473, 512], "migra_axi": [102, 105, 109, 110, 113, 147, 150, 458, 459, 473, 474], "migrad": [101, 206, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492], "migrad_opt": [206, 472], "migrat": [102, 105, 109, 110, 113, 150, 381, 416, 423, 432, 458, 474, 511, 512], "milagro": [97, 363], "mileston": [381, 401], "milki": [33, 38, 411, 497], "miller": [87, 91], "million": [372, 399], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 102, 125, 127, 129, 140, 168, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 287, 327, 387, 388, 395, 400, 408, 423, 431, 442, 447, 449, 451, 452, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 475, 478, 479, 480, 483, 491, 492, 495, 516, 543, 546, 552], "min_count": 165, "min_dist": [137, 138, 171, 450, 456, 516], "min_distance_input": [171, 516], "min_energi": 463, "min_npix": [146, 147, 153, 158, 161, 199, 201], "min_npred_background": 165, "min_signific": 387, "min_significance_lc": 387, "minaya": 433, "mind": [375, 392, 462, 472], "mini": 392, "miniconda": 403, "minim": [19, 20, 26, 112, 131, 188, 189, 191, 196, 197, 200, 201, 202, 206, 213, 214, 216, 217, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 242, 243, 244, 245, 246, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 279, 384, 387, 395, 399, 425, 435, 437, 441, 458, 471, 472, 480, 492, 507, 516, 517, 520, 565, 570], "minima": [210, 212, 480], "minimis": [466, 479], "minimmum": [146, 147, 153, 158, 161, 199, 201], "minimum": [19, 20, 26, 47, 83, 100, 121, 122, 124, 125, 127, 129, 131, 133, 137, 138, 140, 141, 163, 165, 171, 193, 196, 198, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 275, 280, 284, 287, 299, 326, 328, 331, 367, 389, 425, 431, 446, 450, 458, 472, 475, 480, 483, 505, 507, 516, 543, 570], "mino": [206, 472], "minor": [372, 377, 392, 395, 397, 422, 435, 525, 526], "minos_contour": [415, 433], "minu": [150, 467], "minuit": [101, 119, 206, 207, 208, 383, 390, 417, 432, 433, 437, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492], "minuit_opt": 472, "minut": [392, 402, 431, 446, 450, 452, 454, 456, 457, 458, 460, 465, 466, 469, 471, 472, 474, 477, 480, 491], "mireia": 434, "mirror": 185, "misc": [411, 424, 428, 429, 430], "miss": [82, 87, 91, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 372, 375, 380, 381, 382, 383, 386, 392, 393, 396, 421, 423, 425, 431, 436, 475], "mission": [83, 437, 566], "mistak": [377, 397], "mix": [371, 372, 388, 471, 475], "mixin": [87, 91], "mjd": [86, 94, 124, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 354, 356, 373, 436, 437, 450, 458, 459, 463, 464, 465, 466, 475, 478, 504, 555, 556, 557, 558, 559, 560, 561, 562, 571], "mjdref": [450, 475], "mjdreff": [94, 353, 356, 459], "mjdrefi": [94, 353, 356, 459], "mkdir": [388, 446, 447, 454, 455, 458, 491, 492], "mkn": [493, 566], "mkn_421_3fhl": 493, "mncontour": 206, "mnra": [133, 295], "mnt": 434, "mock": 457, "mock_dl4": 457, "mode": [16, 84, 85, 87, 90, 91, 94, 102, 104, 105, 109, 123, 127, 146, 147, 153, 158, 161, 164, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 267, 399, 418, 431, 434, 438, 466], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 136, 139, 142, 148, 149, 156, 157, 158, 159, 161, 165, 168, 181, 188, 189, 191, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 291, 294, 296, 368, 371, 372, 373, 376, 377, 378, 384, 385, 387, 388, 390, 392, 393, 396, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 444, 449, 450, 452, 457, 460, 462, 467, 473, 474, 475, 476, 481, 483, 484, 487, 495, 496, 502, 503, 505, 507, 508, 512, 514, 515, 519, 522, 532, 553, 563, 565, 566, 569, 570], "model1": [214, 533, 535, 539, 542, 544, 547], "model2": [214, 442, 466, 533, 535, 539, 542, 544, 547], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 447], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [478, 535], "model_best": 442, "model_best_joint": 446, "model_best_stack": 446, "model_bkg": 471, "model_computed_field": [16, 84, 90, 104, 123], "model_config": [16, 84, 90, 104, 123, 451, 491], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 104, 123], "model_copi": [16, 84, 90, 104, 123, 478], "model_dump": [16, 84, 90, 104, 123], "model_dump_json": [16, 84, 90, 104, 123], "model_extra": [16, 84, 90, 104, 123], "model_field": [16, 84, 90, 104, 123], "model_fields_set": [16, 84, 90, 104, 123], "model_fit": 466, "model_joint": 454, "model_json_schema": [16, 84, 90, 104, 123], "model_manag": [440, 477, 481], "model_nam": [102, 105, 109, 110, 219, 241, 368, 471], "model_parametrized_nam": [16, 84, 90, 104, 123], "model_plot": 457, "model_post_init": [16, 84, 90, 104, 123], "model_prior": 480, "model_read": 480, "model_rebuild": [16, 84, 90, 104, 123], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [449, 462, 466], "model_spectrum": 478, "model_str": 447, "model_typ": [219, 227, 239, 241, 257, 267, 279, 395, 477], "model_valid": [16, 84, 90, 104, 123], "model_validate_json": [16, 84, 90, 104, 123], "model_validate_str": [16, 84, 90, 104, 123], "model_weak": 480, "model_weak_prior": 480, "model_without_nam": 478, "modelbas": [227, 250, 257, 259, 260, 267, 271, 400], "modeldm": [19, 20], "modelevalu": 383, "modeling_2d": [440, 451, 453], "modelmetadata": 399, "modelmodel_dump": [16, 84, 90, 104, 123], "modelmodel_dump_json": [16, 84, 90, 104, 123], "models_3fhl": 477, "models_4fgl_roi": 470, "models_as_dict": [16, 84, 90, 104, 123], "models_diffus": 458, "models_fil": [16, 447, 451, 452, 454, 491], "models_fit": 462, "models_gc": 477, "models_gp": 482, "models_joint": 454, "models_or": 477, "models_read": 478, "models_select": 477, "models_stack": 454, "models_yaml": 478, "modelsmetadata": 399, "modern": [87, 91, 390], "modernis": [389, 417], "modest": [372, 525], "modif": [16, 84, 87, 90, 91, 104, 123, 372, 375, 394, 401, 434], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 102, 109, 124, 125, 126, 129, 132, 164, 206, 319, 344, 369, 382, 384, 388, 394, 398, 399, 418, 420, 421, 423, 425, 433, 436, 437, 442, 447, 459, 474, 476, 480, 484, 491, 505, 520, 571], "modul": [6, 256, 372, 373, 377, 381, 388, 393, 411, 413, 419, 431, 466, 470, 474, 477, 495, 496, 497, 498, 543, 560, 571], "modular": 378, "mohanti": 101, "mohrmann": [388, 412, 413, 414, 430, 431, 432, 435, 437, 566], "mohrmann2019": 566, "moment": [15, 51, 54, 86, 95, 257, 348, 378, 386, 388, 389, 392, 397, 398, 473, 475, 512], "moncar": [206, 472], "monitor": [385, 482, 507], "monkei": 372, "mono": 380, "monoton": 193, "mont": [390, 512], "montecarlo": [103, 108, 206], "month": [78, 375, 381, 386, 389, 391, 392, 397, 401, 405, 411, 412, 413, 414, 415, 424, 427, 428, 429, 430, 431, 432, 433], "monthli": [381, 399, 404, 433], "moor": 24, "morcuend": [433, 436, 438], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 101, 102, 105, 109, 110, 137, 145, 188, 189, 191, 200, 201, 213, 214, 215, 216, 217, 218, 220, 221, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 242, 243, 244, 245, 246, 248, 249, 254, 255, 256, 258, 261, 262, 263, 269, 270, 284, 290, 307, 347, 372, 373, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 417, 418, 419, 420, 423, 430, 432, 433, 437, 442, 443, 446, 448, 450, 452, 454, 458, 459, 463, 466, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 484, 485, 487, 493, 503, 504, 505, 507, 516, 517, 519, 520, 525, 564, 565, 567, 569, 571], "moreov": [388, 470, 474, 503], "morpholog": [119, 385, 440, 461, 487, 503, 519], "morphologi": [50, 52, 119, 383, 385, 395, 411, 428, 430, 443, 451, 457, 458, 459, 462, 470, 474, 521], "mosaic": 378, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 117, 124, 371, 372, 373, 375, 377, 378, 379, 380, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 423, 430, 431, 433, 434, 437, 438, 451, 452, 460, 464, 466, 470, 472, 473, 474, 475, 476, 482, 483, 487, 493, 495, 505, 506, 507, 512, 514, 520, 564, 566, 567, 570], "mostli": [56, 69, 299, 372, 373, 378, 379, 380, 381, 386, 388, 391, 392, 393, 396, 397, 399, 401, 402, 423, 431, 470, 474, 485, 493, 569, 571], "motion": [45, 303], "motiv": [174, 377, 379, 380, 386, 389, 391, 401, 478, 507], "move": [279, 377, 378, 379, 380, 383, 386, 391, 392, 393, 396, 401, 407, 413, 414, 416, 417, 418, 419, 423, 424, 428, 429, 431, 432, 433, 434, 449], "move_axi": 437, "movement": 398, "mpatch": 460, "mpg": 67, "mpi": 67, "mpl": 372, "mpl_check_plot": 372, "mpl_kwarg": [446, 456, 460], "mpl_normal": [362, 363], "mpl_plot_check": 372, "mpl_style": 431, "msg": [441, 449, 451, 454, 456, 462, 466, 482], "msh": [452, 470, 474], "msh15": 485, "mst": 482, "mu": [26, 281, 283, 284, 365, 400, 442, 469, 480, 511, 512, 569], "mu_": [284, 290, 568, 569, 570], "mu_background": 567, "mu_bkg": [105, 110, 281, 293, 296, 408, 567, 569], "mu_off": 569, "mu_on": [284, 290, 569], "mu_sig": [283, 293, 296, 568, 569], "mu_x": 569, "much": [189, 372, 378, 383, 386, 388, 391, 392, 416, 423, 449, 454, 460, 467, 480, 483, 493, 526], "mul": [26, 442, 469, 478, 533, 539, 542, 544, 547, 552], "mulitpli": 250, "multi": [87, 91, 187, 199, 381, 386, 400, 417, 420, 424, 431, 440, 444, 450, 461, 471, 472, 473, 478, 479, 483, 487, 503, 505, 507, 519, 564, 565, 566], "multidimension": [378, 388, 400, 438, 487, 512, 565], "multinorm": 390, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 101, 102, 105, 108, 109, 110, 112, 114, 116, 132, 137, 162, 188, 189, 191, 197, 200, 201, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 372, 373, 378, 381, 384, 385, 386, 388, 390, 393, 394, 396, 400, 404, 413, 420, 421, 423, 431, 437, 438, 448, 454, 470, 471, 474, 475, 476, 478, 483, 505, 519, 543, 552, 564, 565, 566, 567, 572], "multipli": [19, 20, 26, 124, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 231, 233, 235, 236, 238, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 277, 282, 291, 294, 299, 442, 467, 469, 478, 533, 569], "multiprocess": [13, 93, 125, 126, 129, 132, 164, 314, 319, 320, 417, 437, 438], "multithread": 13, "multivari": 390, "multivariategaussianprior": 400, "multiwavelength": 221, "muon": [88, 479], "muoneff": [88, 479], "mur": [26, 469], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 101, 102, 105, 106, 110, 111, 115, 124, 129, 132, 137, 138, 145, 156, 164, 168, 170, 175, 182, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 288, 289, 299, 317, 367, 372, 377, 383, 384, 387, 396, 397, 398, 399, 441, 446, 451, 471, 474, 476, 477, 478, 482, 483, 492, 493, 507, 519, 566], "mutablemap": 195, "mutablesequ": [92, 100, 241], "mutipl": 404, "mutltipl": 375, "mxa1vdhr": 474, "my": [372, 394, 395, 403, 458, 459, 471, 478], "my_custom_model": 478, "my_flux_map": 396, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 394, "mybind": [402, 431], "myconfig": [11, 567], "mycustomgaussianmodel": [395, 478], "mycustomprior": 480, "mycustomspectralmodel": [252, 478], "n": [19, 20, 51, 82, 87, 91, 122, 124, 186, 187, 188, 189, 191, 193, 194, 197, 199, 200, 201, 209, 211, 272, 279, 372, 375, 386, 389, 403, 405, 429, 462, 465, 469, 470, 472, 475, 477, 480, 482, 483, 484, 485, 490, 512, 519, 520, 522, 525, 526, 566, 568, 570], "n_": [102, 109, 284, 290, 503, 568, 569, 570], "n_0": [229, 540], "n_bad": 483, "n_bin": 471, "n_bkg": [281, 283, 569], "n_dof": [122, 124, 505], "n_event": [188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 385], "n_event_bunch": [103, 108], "n_events_bkg": 385, "n_fit_bin": [454, 466, 471, 477], "n_free_paramet": 279, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 500, 501], "n_job": [16, 93, 125, 126, 129, 132, 164, 319, 437, 447, 451, 452, 454, 460, 474, 491], "n_jobs_default": [93, 125, 126, 129, 132, 164], "n_model": [72, 76], "n_ob": [449, 458, 466], "n_observ": 567, "n_off": [105, 110, 283, 292, 293, 296, 568, 569], "n_off_posit": 448, "n_off_region": [176, 448], "n_on": [281, 283, 284, 290, 292, 293, 296, 408, 567, 568, 569], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 213, 214, 217, 218, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 268, 270, 271, 400, 561], "n_scale": 117, "n_sig": [281, 283, 467, 569], "n_sig_matching_signific": [281, 283], "n_sigma": [71, 74, 75, 78, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 279, 281, 283, 441, 460, 470, 471, 491, 493, 505], "n_sigma_sensit": [121, 122, 123, 124], "n_sigma_ul": [71, 74, 75, 78, 121, 122, 123, 124, 125, 126, 129, 130, 132, 460, 464, 470, 471, 491, 493, 505], "n_sourc": [45, 497], "n_spatial_ax": 192, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": 465, "nachiketa": [429, 430], "naima": [242, 371, 389, 390, 391, 392, 395, 414, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 507, 521, 552, 553], "naimamodel": [414, 417, 419], "naimaspectralmodel": [252, 395, 423, 478, 507, 543], "nakashima": 415, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 122, 123, 124, 125, 126, 129, 130, 132, 133, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 169, 178, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 297, 298, 320, 351, 352, 367, 373, 375, 378, 381, 382, 384, 385, 386, 387, 390, 391, 394, 395, 396, 398, 399, 400, 401, 413, 414, 415, 416, 417, 418, 419, 420, 423, 432, 434, 435, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 495, 505, 507, 511, 514, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 569], "name1": 472, "name2": 472, "name_err": [125, 126, 129, 130], "name_scan": [125, 126, 129, 130], "name_substr": [219, 241, 477], "name_ul": [125, 126, 129, 130], "namedtupl": 372, "nameerror": 372, "namespac": [6, 16, 84, 90, 104, 123, 372, 391, 393, 416, 419, 429, 478, 496, 571], "namibia": 485, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 102, 122, 124, 168, 186, 187, 188, 189, 191, 197, 200, 201, 209, 211, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 372, 395, 400, 442, 446, 447, 448, 451, 452, 454, 455, 460, 462, 464, 470, 471, 473, 474, 475, 476, 477, 478, 491, 492, 493, 543, 552], "nan_to_num": [100, 102, 105, 109, 110, 146, 147, 153, 158, 161, 189, 197, 201, 267], "nanograv": 507, "nansum": [188, 189, 191, 200, 201], "nasa": [58, 60, 61, 62, 64, 65, 145, 193, 392, 401, 546], "nativ": [87, 91, 194, 384, 389, 423, 475], "natur": [87, 91, 372, 378, 395, 398, 478, 541], "nauroi": [296, 566], "naurois2012": 566, "navarro": 495, "navi": 442, "navig": [431, 433], "naxi": 475, "naxis1": 475, "naxis2": 475, "naxis3": 475, "naxis4": 475, "nbin": [16, 111, 115, 126, 148, 150, 156, 158, 190, 193, 198, 201, 331, 332, 388, 441, 446, 447, 448, 451, 452, 454, 455, 456, 458, 459, 460, 464, 465, 467, 471, 473, 474, 475, 478, 483, 484, 485, 491, 511, 514, 516, 517, 520], "nbin_per_decad": 193, "nbstripout": 380, "nchunk": 282, "ncol": [142, 143, 188, 189, 191, 197, 200, 201, 365, 369, 443, 446, 450, 452, 454, 456, 467, 471, 472, 475, 476, 516, 533], "ncp": 463, "nd": [188, 189, 191, 197, 200, 201, 265, 266, 393, 475, 520], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 101, 117, 125, 129, 142, 143, 144, 145, 146, 149, 150, 152, 155, 156, 157, 158, 159, 161, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 209, 210, 211, 212, 219, 243, 244, 270, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 294, 295, 296, 299, 310, 311, 312, 321, 326, 328, 361, 365, 366, 372, 471, 475, 493, 519, 520], "nddata": [414, 417], "nddataarrai": [415, 429, 430], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 275], "ndim": [102, 109, 111, 115, 143, 145, 148, 187, 194, 199, 448, 451, 456, 460, 471, 473, 474, 475, 482, 483, 493, 505, 520], "ndimag": [201, 386], "ndmin": 299, "ne": 384, "nearest": [26, 132, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 188, 189, 191, 193, 197, 200, 201, 311, 425, 432, 434, 475, 505, 507, 519], "nearli": [372, 423, 443], "nebula": [50, 273, 279, 417, 446, 447, 448, 452, 455, 456, 457, 464, 472, 476, 478, 480, 483, 484, 485, 491, 492, 493, 498, 520, 566], "necess": [396, 480], "necessari": [16, 84, 90, 101, 104, 123, 375, 382, 387, 398, 425, 443, 446, 448, 449, 452, 458, 459, 462, 465, 466, 474, 475, 477, 478, 492, 503, 504, 507], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 387, 451], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 101, 102, 104, 105, 109, 110, 121, 123, 124, 146, 147, 158, 160, 161, 196, 272, 273, 299, 371, 372, 373, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 402, 403, 408, 412, 413, 414, 431, 433, 438, 442, 443, 447, 449, 450, 451, 452, 456, 458, 459, 463, 465, 466, 472, 473, 475, 476, 477, 478, 479, 482, 484, 491, 493, 503, 516, 518, 519, 567, 571], "need_upd": 423, "neg": [19, 20, 26, 87, 91, 122, 124, 125, 126, 129, 130, 132, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 269, 270, 281, 283, 373, 420, 438, 480, 505, 569, 570], "neglect": [127, 174, 441, 474, 505, 570], "neighbor": [149, 157, 159, 425, 432], "neighbour": [311, 528], "neither": [96, 174, 389, 397], "neldermead": 206, "nep": [377, 397], "neraest": 189, "nest": [15, 187, 188, 189, 242, 279, 299, 339, 437, 483, 518, 569], "nested_model": 242, "net": [26, 87, 91, 446, 507], "neutrino": 52, "neutron": 36, "never": [369, 371, 372, 375, 378, 382, 386, 394, 484], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 101, 102, 104, 105, 109, 110, 122, 123, 124, 125, 129, 132, 140, 142, 143, 144, 145, 148, 150, 152, 155, 160, 171, 172, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 219, 241, 257, 267, 299, 323, 350, 357, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 424, 427, 454, 463, 470, 471, 475, 477, 478, 504, 505, 507, 552, 566], "new_attribut": 372, "new_axi": 140, "new_dataset_nam": [219, 241], "new_datasets_nam": [19, 20, 26, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271], "new_ev": 507, "new_flux_map": 396, "new_funct": 372, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 552, "new_nam": [87, 91, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201], "new_ob": [88, 507], "new_observ": 92, "newaxi": 519, "newer": [389, 402, 413, 432], "newli": [417, 418, 419], "next": [87, 91, 102, 372, 373, 377, 388, 392, 393, 397, 400, 401, 429, 430, 441, 454, 457, 458, 460, 462, 470, 471, 474, 475, 478, 479, 480, 483], "nfcn": 472, "nfev": [101, 206, 207, 208, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492], "nfw": [25, 27, 495], "nfwprofil": 469, "ni": 372, "nice": [372, 377, 383, 389, 391, 399, 415, 423, 450, 454, 470, 567], "nicer": [372, 408, 493], "nieto": [420, 423, 425, 426, 434, 436, 437, 438], "nieva": 434, "night": [387, 465], "nightli": [404, 464], "nightwise_lc": 464, "nigro": [420, 423, 425, 431, 432, 434, 437], "niter": [122, 124, 132, 450], "nmcid": 426, "nn": 484, "noah": [400, 438], "node": [19, 20, 26, 158, 161, 190, 193, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 243, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 414, 472, 473, 475, 482, 483, 527, 544], "node_typ": [190, 193, 198, 458, 459, 473, 483], "noeth": [420, 421], "nois": [282, 288, 390, 566], "noisi": 482, "non": [16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 114, 116, 122, 123, 124, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 170, 174, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 267, 299, 362, 363, 365, 367, 378, 383, 386, 390, 392, 393, 399, 413, 417, 418, 419, 423, 431, 434, 435, 437, 438, 443, 483, 487, 503, 507, 518, 519, 543, 566], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 281, 282, 283, 296, 297, 299, 302, 307, 311, 319, 320, 321, 323, 326, 327, 328, 329, 338, 341, 347, 355, 359, 360, 361, 365, 366, 367, 368, 369, 372, 384, 386, 389, 396, 399, 400, 425, 436, 437, 442, 443, 444, 446, 447, 449, 450, 454, 455, 456, 458, 459, 460, 462, 465, 466, 467, 469, 470, 471, 474, 475, 477, 478, 480, 483, 491, 495, 503, 519, 524, 525, 526, 567], "nonetyp": [84, 90, 104, 123], "nonposit": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "nonposx": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 423], "nonstopmod": 373, "nonzero": 39, "nooverlaperror": 436, "noqa": [19, 20, 125, 145, 181, 192, 193, 199, 221, 274, 369], "nor": [96, 174, 382, 393, 397, 401], "norm": [19, 20, 26, 121, 122, 124, 125, 126, 129, 132, 138, 139, 165, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 271, 365, 383, 394, 396, 400, 417, 418, 420, 423, 438, 440, 446, 451, 452, 454, 455, 457, 458, 459, 460, 462, 465, 466, 467, 469, 470, 471, 472, 483, 491, 492, 493, 495, 505, 514, 521, 526, 532, 533, 540, 552, 553, 561, 569], "norm_0": [527, 544], "norm_1": [527, 544], "norm_2": [527, 544], "norm_3": [527, 544], "norm_4": 544, "norm_5": 544, "norm_err": [121, 122, 124, 126, 132, 138, 396, 460, 471, 505], "norm_errn": [122, 124, 470, 493, 505], "norm_errp": [122, 124, 470, 493, 505], "norm_max": [125, 126, 129], "norm_min": [125, 126, 129], "norm_n_valu": [125, 126, 129], "norm_only_chang": 435, "norm_paramet": [209, 210, 211, 212], "norm_prior": 400, "norm_scan": [122, 396, 446, 447, 505], "norm_sensit": [122, 124], "norm_ul": [122, 124, 396, 460, 470, 471, 493, 505], "norm_valu": [125, 126, 129], "norma": [33, 38], "normal": [42, 101, 102, 105, 109, 110, 125, 126, 127, 129, 136, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 165, 188, 189, 191, 197, 198, 200, 201, 227, 243, 244, 247, 267, 269, 272, 299, 362, 363, 372, 373, 377, 378, 382, 383, 386, 390, 396, 412, 416, 425, 442, 452, 458, 464, 465, 467, 474, 475, 476, 477, 478, 483, 492, 493, 519, 524, 525, 526, 529, 530, 531, 552, 566, 568, 569], "normalis": [67, 80, 121, 122, 124, 129, 142, 143, 144, 145, 148, 150, 152, 155, 156, 160, 165, 185, 188, 189, 191, 197, 200, 201, 243, 244, 257, 370, 447, 451, 452, 466, 476, 477, 478, 483, 491], "normed_templ": 478, "normspectralmodel": [219, 241, 395, 420, 436, 438, 478, 514], "north": [220, 228, 231, 524], "notat": [420, 509, 511, 517, 570], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 101, 102, 103, 104, 105, 108, 109, 110, 117, 121, 123, 124, 129, 132, 145, 150, 158, 160, 170, 181, 199, 203, 206, 209, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 288, 289, 299, 320, 347, 363, 369, 371, 374, 375, 377, 380, 385, 386, 389, 392, 396, 397, 398, 400, 401, 402, 405, 411, 413, 433, 435, 437, 441, 442, 443, 447, 448, 450, 451, 454, 457, 459, 463, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 503, 505, 507, 514, 519, 520, 529, 530, 541, 569, 570, 571], "notebook": [87, 91, 336, 375, 376, 381, 382, 386, 387, 388, 389, 390, 392, 402, 404, 405, 406, 409, 412, 413, 414, 415, 417, 418, 419, 421, 423, 425, 429, 430, 431, 432, 433, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 506, 507, 508, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567], "noth": [323, 389, 480], "notic": [378, 472, 487], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [379, 384, 389, 390, 392, 396, 410, 434], "novemb": [381, 410, 420, 421, 422, 423], "now": [16, 82, 84, 88, 90, 99, 104, 122, 123, 124, 198, 242, 372, 375, 377, 378, 379, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 446, 447, 448, 449, 451, 452, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 471, 472, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 504, 505, 516, 554, 558, 559, 560, 567, 569, 570, 571], "np": [83, 87, 91, 111, 115, 117, 124, 147, 188, 189, 191, 197, 200, 201, 206, 272, 372, 373, 383, 384, 387, 395, 396, 400, 434, 441, 449, 450, 458, 460, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 499, 500, 501, 505, 507, 514, 519, 520, 524, 525, 527, 552, 560], "npanel": 359, "npix": [187, 196, 199, 200, 201, 446, 456, 473, 483, 516, 520, 523, 527], "npix_max": 187, "npoint": [282, 472], "npred": [102, 105, 109, 110, 121, 122, 124, 125, 126, 129, 130, 132, 267, 285, 383, 384, 385, 394, 396, 411, 413, 420, 423, 429, 431, 458, 460, 470, 471, 480, 483, 503, 505, 569], "npred_background": [102, 105, 109, 110, 122, 124, 420, 448, 449, 460, 471, 505, 569], "npred_background_min": 141, "npred_excess": [121, 122, 124, 126, 132, 139, 452, 460, 467, 505], "npred_excess_err": [122, 124], "npred_excess_errn": [122, 124], "npred_excess_errp": [122, 124], "npred_excess_ref": [122, 124], "npred_excess_ul": [122, 124], "npred_min": 141, "npred_off": [105, 110, 569], "npred_sig": [102, 105, 109, 110, 384], "npred_sign": [102, 105, 109, 110, 368, 423, 437, 471, 569], "npred_signal_min": 141, "npred_sourc": 471, "nrow": [443, 446, 472, 533], "nside": [187, 188, 189, 434, 483, 518], "nside2resol": 189, "nside_til": [187, 189], "nsou": 450, "nstep": 387, "nu": [19, 26], "nu_e": [26, 469], "nu_mu": [26, 469], "nu_tau": [26, 469], "nuisanc": [446, 472, 566, 570], "null": [122, 124, 125, 126, 129, 130, 279, 281, 283, 447, 451, 452, 454, 457, 478, 491, 505, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 569], "null_valu": [130, 279, 460], "nullabl": [87, 91], "num": 83, "numba": 389, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 102, 103, 105, 108, 109, 110, 112, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 164, 165, 168, 171, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 271, 275, 279, 281, 282, 283, 295, 299, 317, 319, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 359, 365, 376, 377, 378, 381, 383, 384, 385, 386, 387, 391, 393, 396, 398, 399, 401, 408, 413, 423, 425, 426, 427, 432, 433, 434, 437, 438, 441, 442, 443, 446, 447, 448, 449, 451, 452, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 478, 479, 482, 483, 484, 485, 491, 492, 493, 497, 503, 505, 507, 514, 516, 519, 520, 566, 567, 568, 569, 570], "number_of_column": [87, 91], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 124, 193, 209, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 271, 299, 371, 372, 385, 390, 405, 423, 441, 449, 451, 454, 456, 462, 466, 475, 482], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 101, 111, 115, 117, 124, 125, 129, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 203, 204, 206, 209, 210, 212, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 268, 269, 281, 283, 299, 323, 328, 366, 371, 372, 373, 375, 379, 383, 385, 389, 390, 391, 398, 400, 408, 409, 416, 417, 420, 428, 429, 430, 432, 434, 435, 436, 438, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 491, 492, 493, 499, 500, 501, 505, 507, 519, 520, 524, 525, 527, 552, 560], "numpoint": [206, 472], "numpy121": 375, "nupeak_ob": 493, "nutshel": 571, "n\u00f6the": [423, 425, 426], "o": [67, 82, 87, 91, 101, 195, 372, 381, 386, 389, 393, 396, 403, 404, 406, 415, 423, 426, 429, 430, 431, 437, 441, 443, 446, 450, 456, 463, 464, 465, 466, 475, 479, 480, 482, 507, 566, 567], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 158, 168, 297, 298, 384, 385, 388, 389, 394, 408, 426, 427, 436, 441, 443, 446, 449, 450, 456, 458, 462, 465, 466, 467, 474, 479, 482, 483, 484, 485, 489, 492, 504, 507, 512, 514, 516, 517], "obei": 519, "obj": [16, 84, 90, 104, 123, 448], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 105, 109, 110, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 172, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 281, 283, 299, 303, 307, 308, 311, 319, 321, 323, 329, 332, 346, 347, 348, 349, 354, 359, 365, 367, 368, 369, 378, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 396, 398, 399, 404, 408, 414, 415, 417, 418, 419, 420, 423, 425, 430, 431, 432, 434, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 455, 457, 460, 462, 463, 464, 465, 466, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 485, 491, 492, 493, 497, 502, 503, 504, 505, 513, 516, 518, 519, 520, 564, 566, 567, 571], "obs2": 507, "obs_": 446, "obs_clust": [92, 479], "obs_col": 456, "obs_con": [16, 447, 451, 452, 454, 491], "obs_copi": 88, "obs_fil": [16, 447, 451, 452, 454, 491], "obs_filenam": 484, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 141, 206, 297, 298, 382, 384, 394, 399, 408, 443, 446, 447, 448, 449, 451, 452, 454, 455, 456, 458, 459, 464, 465, 466, 472, 474, 479, 482, 484, 485, 489, 491, 492, 516], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [88, 90, 104, 399], "obs_list": [431, 433], "obs_list_vela": 467, "obs_mod": 95, "obs_model": 442, "obs_muoneff": 479, "obs_po": [41, 302], "obs_tabl": [82, 91, 96, 297, 298, 425, 456, 458, 465, 474, 479, 482, 484, 485, 489, 492, 516], "obs_table_filenam": 82, "obs_tim": [16, 447, 451, 452, 454, 491], "obs_time_src": 474, "obs_zenith": 479, "obscor": 438, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 108, 109, 110, 112, 158, 163, 164, 165, 168, 169, 170, 171, 173, 174, 175, 178, 179, 180, 181, 183, 184, 185, 218, 221, 226, 230, 232, 233, 234, 249, 256, 268, 271, 284, 290, 296, 298, 307, 328, 376, 378, 384, 385, 386, 387, 388, 392, 394, 396, 399, 404, 413, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 440, 441, 443, 448, 449, 451, 452, 454, 455, 462, 463, 466, 467, 472, 480, 481, 482, 484, 485, 487, 489, 495, 503, 504, 507, 510, 512, 514, 516, 517, 543, 566, 567, 568, 569], "observation_clust": [440, 479, 481], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 432, "observationcta": 382, "observationeventsampl": 438, "observationfilt": [88, 382, 387, 412, 433], "observationlist": [382, 433], "observationmetadata": 399, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 438, "observationssummari": 417, "observationstat": [412, 417], "observationt": [82, 385, 386, 434, 479, 484, 492], "observationtablecheck": 432, "observationtablesummari": 429, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 385, 399, 401, 404, 424, 482, 484, 485, 502, 507], "observatory_earth_loc": [83, 88], "observatory_loc": [399, 425, 441, 449, 458, 459, 462, 466], "obsinfometadata": [90, 104], "obstim": [85, 94, 181, 571], "obtain": [85, 102, 105, 108, 110, 122, 124, 133, 287, 382, 387, 389, 390, 396, 433, 446, 447, 448, 452, 458, 459, 463, 465, 472, 475, 476, 480, 491, 493, 503, 507, 511, 512, 566, 568, 569], "obviou": [384, 391, 392, 393, 399], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 495], "occur": [188, 189, 191, 200, 201, 329, 372, 392, 393, 397, 483], "occurr": [92, 100, 192, 210, 212, 219, 241], "oct": [380, 382, 383, 387, 389, 392, 398], "octob": 381, "odd": [199, 201], "odd_npix": [199, 201], "odot": [28, 35, 39, 40, 52], "off": [102, 105, 107, 109, 110, 121, 122, 124, 163, 169, 170, 173, 176, 185, 283, 296, 369, 370, 375, 378, 384, 386, 387, 388, 417, 423, 425, 427, 437, 441, 442, 443, 447, 448, 452, 456, 464, 465, 467, 471, 472, 474, 480, 503, 516, 517, 566, 568, 569, 570], "off_2": [105, 110], "off_ev": 467, "off_patch": 467, "off_phas": [169, 467], "off_phase_rang": 467, "offdatabackgroundmak": 428, "offer": [122, 375, 383, 398, 399, 404, 405, 432, 448, 472, 474, 478, 507], "offici": [398, 508, 567], "offlin": [87, 91], "offset": [83, 96, 112, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 164, 168, 174, 175, 180, 183, 188, 189, 191, 193, 197, 200, 201, 372, 378, 386, 408, 417, 427, 429, 431, 436, 437, 438, 441, 448, 449, 451, 454, 455, 456, 462, 467, 473, 474, 479, 482, 485, 492, 504, 512, 514, 517], "offset2": 83, "offset_axi": [148, 150, 155, 160], "offset_band": 83, "offset_from_median": 83, "offset_index": 155, "offset_max": [16, 83, 164, 174, 180, 183, 447, 451, 452, 454, 456, 462, 467, 474, 491, 492, 514, 517], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 133, 273, 362, 363, 372, 377, 386, 387, 388, 390, 430, 441, 443, 447, 451, 452, 455, 456, 462, 471, 472, 474, 476, 491, 492, 503, 566], "ogip": [95, 106, 107, 110, 145, 190, 192, 193, 196, 197, 198, 384, 387, 430, 442, 446, 455, 503, 511, 520], "ogip_column": 197, "ogipdatasetread": 110, "ogipdatasetwrit": [110, 436, 438], "oiihyehg": 454, "ok": [372, 386, 472], "old": [192, 357, 372, 377, 380, 384, 388, 389, 414, 415, 430, 431, 432, 463], "old_attribut": 372, "older": [379, 389, 405, 430, 470], "oldest": 392, "olga": [428, 429], "olivera": [420, 423, 425, 426, 434, 436, 437, 438], "omega": [19, 20, 23, 256, 272, 524, 560], "omit": [132, 373, 454, 482, 567], "omp": 392, "on_circl": 516, "on_ellipse_annulu": 516, "on_ev": 467, "on_patch": 467, "on_phas": [169, 467], "on_phase_rang": 467, "on_posit": 185, "on_radii": 441, "on_radiu": [456, 467], "on_rectangl": 516, "on_region": [16, 102, 105, 171, 441, 443, 446, 447, 448, 449, 451, 452, 454, 456, 458, 459, 464, 465, 467, 471, 491, 516], "on_region_radiu": [441, 446, 449, 458, 459, 465], "onc": [87, 91, 102, 199, 372, 375, 377, 382, 383, 386, 387, 388, 392, 393, 394, 396, 397, 401, 402, 403, 448, 465, 467, 474, 477, 484, 487, 504, 507, 567], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 104, 105, 108, 109, 110, 112, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 168, 170, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 275, 279, 281, 282, 283, 307, 312, 328, 343, 359, 365, 366, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 402, 403, 404, 431, 434, 435, 437, 441, 443, 446, 447, 448, 451, 454, 458, 463, 464, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 491, 492, 493, 502, 503, 504, 505, 507, 512, 514, 516, 519, 520, 526, 564, 565, 567, 568, 569, 570, 571], "ones": [87, 91, 117, 121, 125, 129, 132, 145, 192, 376, 380, 384, 386, 389, 392, 400, 405, 408, 463, 466, 473, 475, 495, 514, 566, 567], "ones_lik": [467, 514], "ongo": [375, 378, 379, 402], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 121, 123, 124, 125, 129, 132, 139, 146, 147, 151, 153, 158, 161, 164, 170, 175, 186, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 209, 210, 212, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 267, 268, 269, 281, 283, 299, 319, 347, 369, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 405, 413, 415, 419, 423, 425, 426, 431, 435, 437, 438, 443, 444, 446, 447, 448, 451, 452, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 492, 495, 503, 505, 511, 514, 517, 520, 562, 566, 567, 568, 569], "onlin": [87, 91, 373, 377, 380, 392, 408], "onlinelibrari": 139, "onoff": [426, 503], "onserv": 93, "ontim": [181, 382, 458, 471], "onto": [105, 110, 188, 189, 191, 197, 199, 200, 201, 359, 378, 492, 503, 507, 519, 565], "oo": 398, "op": 388, "opac": 221, "open": [66, 87, 91, 373, 375, 377, 383, 386, 389, 391, 392, 396, 397, 398, 401, 403, 404, 406, 408, 409, 430, 447, 455, 475, 482, 484, 485, 491, 502, 566, 567], "openastronomi": 431, "oper": [87, 91, 187, 199, 214, 372, 378, 383, 386, 418, 420, 423, 432, 433, 437, 442, 471, 477, 478, 519, 520, 533, 535, 539, 542, 544, 547, 552], "opinion": [377, 567], "oppos": [463, 543, 567], "opposit": [188, 189], "opt": [88, 89, 470, 533, 543], "opt_method": 472, "optic": [221, 386, 442, 533], "optim": [19, 20, 26, 101, 130, 132, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 365, 371, 372, 381, 384, 385, 394, 396, 443, 444, 446, 447, 448, 449, 450, 454, 455, 456, 463, 467, 472, 480, 483, 491, 492], "optimis": [19, 20, 206, 207, 208, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 386, 388, 390, 432, 505, 564], "optimize_opt": [206, 454, 462, 472, 492], "optimize_result": [206, 207, 437], "optimizeresult": [101, 206, 207, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492], "optin": 398, "optinon": [109, 110], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 287, 288, 289, 295, 296, 297, 299, 310, 320, 323, 326, 327, 328, 329, 331, 332, 335, 340, 341, 343, 354, 355, 359, 360, 361, 366, 367, 368, 369, 372, 375, 377, 378, 380, 381, 383, 384, 386, 388, 390, 392, 395, 399, 402, 403, 404, 405, 406, 412, 413, 414, 417, 419, 420, 423, 425, 429, 431, 432, 433, 434, 436, 437, 438, 454, 462, 464, 466, 470, 471, 474, 475, 476, 478, 479, 482, 483, 491, 492, 503, 505, 507, 519, 520, 562, 567], "option_context": [87, 91], "optionali": 527, "optout": 398, "optpars": 377, "oral": 398, "orang": [373, 446, 454, 460, 464, 467, 469, 480, 516], "orchestr": [378, 382, 384, 388, 447, 491, 492], "orcid": 398, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 105, 124, 142, 143, 146, 147, 153, 158, 161, 164, 168, 175, 178, 179, 184, 186, 187, 188, 189, 191, 192, 196, 197, 198, 199, 200, 201, 267, 279, 299, 369, 373, 378, 383, 384, 386, 387, 388, 389, 396, 397, 398, 400, 413, 414, 415, 416, 417, 418, 419, 420, 423, 446, 447, 448, 450, 454, 455, 458, 467, 470, 472, 473, 474, 475, 478, 484, 491, 492, 493, 518, 519, 520, 567, 570], "ordereddict": [378, 389, 416], "ordinari": 493, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 101, 174, 206, 247, 248, 262, 263, 288, 299, 375, 380, 389, 392, 397, 398, 401, 403, 404, 406, 410, 429, 431, 441, 449, 451, 454, 455, 456, 462, 466, 469, 470, 472, 474, 482, 550, 551, 567], "organ": [376, 392, 397, 398, 423, 484, 485, 504, 519], "organis": [379, 388, 391, 398, 431], "orient": [143, 151, 152, 372, 383], "origin": [16, 41, 84, 87, 90, 91, 102, 104, 109, 123, 189, 201, 265, 267, 269, 382, 386, 398, 399, 429, 447, 451, 452, 454, 463, 465, 475, 478, 483, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 570, 571], "origini": [122, 124], "orthogon": 332, "oscar": [431, 432], "osx": 419, "ot": 401, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 102, 104, 105, 109, 110, 122, 123, 125, 129, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 170, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 210, 212, 267, 280, 299, 312, 342, 361, 366, 371, 375, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 403, 431, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 503, 504, 505, 507, 512, 514, 516, 520, 535, 564, 565, 567, 571], "other_id": 443, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 156, 195, 199, 201, 203, 209, 210, 211, 212, 219, 241, 299, 365, 385, 395, 398, 477, 478, 483, 534], "oup": [133, 295], "our": [372, 375, 381, 386, 388, 389, 391, 394, 395, 396, 398, 413, 414, 430, 441, 443, 446, 447, 448, 451, 452, 454, 455, 456, 459, 465, 466, 467, 475, 476, 480, 484, 491, 492, 567], "ourself": 493, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 101, 124, 188, 189, 191, 197, 200, 201, 241, 254, 255, 371, 372, 373, 375, 377, 380, 382, 384, 386, 388, 390, 391, 392, 397, 401, 408, 409, 411, 417, 431, 444, 448, 451, 452, 475, 476, 482, 483, 491, 493, 495, 496, 516, 529, 530, 564, 567, 571], "out_fold": 388, "outcom": [377, 386], "outdat": [389, 392], "outdir": [16, 82, 93, 447, 451, 452, 454, 491], "outer": [43, 44, 52, 53, 126, 163, 254, 530], "outer_height": [516, 520], "outer_width": [516, 520], "outfil": 372, "outflow": 198, "outlin": [102, 105, 109, 110, 215, 216, 220, 228, 231, 245, 254, 255, 269, 375, 377, 380, 381, 382, 383, 386, 392, 395], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 104, 123, 137, 138, 145, 150, 188, 189, 191, 197, 200, 201, 207, 219, 233, 241, 282, 328, 373, 380, 382, 385, 388, 389, 393, 396, 399, 412, 427, 433, 436, 437, 454, 458, 459, 462, 466, 474, 475, 491, 492, 505, 507, 567, 568], "output_map": [188, 189, 191, 197, 200, 201], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 102, 105, 109, 110, 114, 116, 145, 165, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 209, 211, 221, 270, 312, 360, 372, 386, 387, 388, 423, 452, 472, 474, 475, 476, 507, 514, 526, 552, 566], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 101, 102, 105, 109, 110, 125, 132, 133, 145, 146, 156, 158, 161, 168, 175, 178, 179, 181, 182, 188, 189, 191, 192, 193, 197, 199, 200, 201, 219, 241, 272, 281, 283, 287, 310, 311, 324, 363, 372, 373, 377, 380, 381, 382, 385, 386, 387, 392, 395, 399, 403, 405, 423, 443, 446, 454, 457, 458, 466, 470, 471, 474, 475, 478, 480, 492, 493, 505, 511, 568, 569], "overal": [380, 386, 446], "overcom": 476, "overestim": [505, 569], "overflow": [198, 448, 466, 555], "overkil": 466, "overlai": 447, "overlaid": [102, 105, 109, 110, 446, 447], "overlap": [86, 91, 114, 116, 129, 176, 193, 198, 369, 387, 446], "overlap_ok": 86, "overlin": [102, 109, 503], "overload": 423, "overplot": [470, 502], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 339, 383, 446, 448, 456, 460], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 196, 369], "oversampl": [103, 108, 156, 158, 161, 168, 175, 181, 187, 188, 189, 191, 196, 197, 200, 201, 216, 220, 228, 231, 232, 233, 243, 254, 255, 257, 259, 265, 269, 271, 275, 414, 474], "oversample_energy_factor": [103, 108, 459], "oversampling_factor": [189, 199, 215, 216, 220, 228, 231, 232, 233, 243, 245, 254, 255, 257, 259, 265, 269, 271], "overview": [6, 375, 402, 417, 418, 420, 423, 440, 467, 475, 478, 487, 493, 494, 507, 508, 521, 568], "overwrit": [11, 15, 16, 19, 20, 26, 82, 83, 88, 93, 100, 101, 102, 105, 107, 109, 110, 122, 124, 146, 147, 153, 158, 161, 186, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 207, 209, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 319, 341, 396, 432, 434, 446, 447, 454, 455, 458, 459, 460, 473, 475, 476, 477, 478, 482, 483, 489, 491, 492, 503, 520, 531, 567], "overwrite_templ": [207, 219, 241], "overwritten": [158, 161, 311], "owen": [411, 424], "own": [87, 91, 99, 122, 124, 195, 197, 375, 378, 388, 394, 398, 423, 441, 458, 478, 483, 492, 507, 519, 520], "p": [38, 51, 54, 87, 91, 109, 110, 128, 286, 296, 372, 423, 447, 457, 469, 472, 491, 507, 512, 513, 569], "p0_birth": 43, "p90": 48, "p_": [509, 511, 512, 513], "p_0": [51, 188, 191, 197, 200, 201, 499], "p_dot": [51, 54], "p_i": [188, 191, 197, 200, 201], "p_lat": [188, 191, 197, 200, 201], "p_lon": [188, 191, 197, 200, 201], "p_mean": 42, "p_n": [188, 191, 197, 200, 201], "p_stdv": 42, "p_valu": [281, 283, 472, 567, 569], "pace": [380, 381], "packag": [6, 11, 137, 299, 336, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 386, 389, 390, 392, 397, 398, 399, 401, 403, 404, 406, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420, 423, 426, 427, 428, 429, 430, 431, 432, 434, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 503, 506, 507, 508, 515, 520, 531, 539, 541, 542, 555, 567, 571], "pacman": 428, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 102, 105, 109, 110, 132, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 168, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 200, 201, 360, 420, 423], "pad_width": [102, 109, 132, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201], "pad_with": [188, 189, 191, 197, 200, 201], "page": [6, 87, 91, 206, 284, 290, 296, 373, 375, 377, 384, 386, 389, 392, 398, 401, 402, 404, 405, 409, 417, 418, 423, 426, 427, 430, 431, 432, 433, 472, 475, 485, 487, 505, 507, 518, 520, 568, 571], "pain": [372, 375, 379], "pair": [16, 84, 90, 102, 104, 105, 109, 110, 122, 123, 124, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 195, 196, 197, 199, 200, 201, 388, 442], "panda": [87, 91, 371, 389, 432, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "panel": [88, 101, 102, 105, 109, 110, 359, 426, 458, 472], "panel_fov": 359, "panni": 423, "papadopoulo": [423, 425], "paper": [57, 59, 63, 72, 74, 125, 174, 392, 398, 432, 463, 465, 470, 474, 484, 495], "papermil": 388, "par": [383, 395, 400, 442, 472, 480, 482], "par_000_amplitud": 472, "par_001_alpha": 472, "par_002_beta": 472, "par_00x_": 383, "par_1": [206, 472], "par_2": [206, 472], "par_alpha": [206, 472], "par_beta": [206, 472], "par_box": 91, "par_nam": [219, 227, 241, 257, 267], "par_to_v": 482, "par_typ": [219, 227, 241, 257, 267], "parabol": [280, 312, 472], "parabola": [235, 236, 440, 455, 472, 521, 553], "paragraph": 377, "parallel": [6, 93, 125, 126, 129, 132, 164, 314, 315, 316, 317, 318, 319, 320, 375, 389, 402, 425, 437, 438, 471], "parallel_backend": [93, 125, 126, 129, 132, 164, 319, 460], "parallelbackendenum": 314, "parallelmixin": [93, 125, 132, 164], "param": [16, 84, 90, 104, 123, 221, 270, 365, 388, 418, 472], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 472, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 308, 310, 311, 312, 313, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 381, 384, 385, 387, 388, 390, 391, 394, 396, 398, 409, 412, 413, 414, 415, 416, 417, 419, 420, 423, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 446, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 473, 474, 479, 480, 482, 483, 492, 493, 495, 503, 505, 506, 507, 514, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570], "parameter": 478, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 206, "parameterestim": [118, 419, 438], "parameteris": [509, 511], "parameters_list": [210, 212], "parameters_nam": [219, 241], "parameters_stat_sum": 400, "parameters_unique_nam": [19, 20, 26, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 472], "parametr": [16, 27, 84, 90, 101, 104, 123, 148, 149, 154, 157, 159, 235, 236, 254, 384, 388, 395, 413, 420, 423, 448, 450, 478, 482, 529, 530, 541], "parametricpsf": [149, 157, 423, 425], "parametris": [157, 395, 417, 511, 513, 524, 525, 526, 527, 534, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562], "parent": [16, 84, 90, 104, 117, 121, 123, 125, 129, 132, 199, 372, 382, 399, 465, 505, 543], "parenthes": [383, 389, 435, 437], "parfiv": [389, 416], "parnam": 480, "pars": [16, 84, 85, 90, 104, 123, 187, 196, 373, 386, 441, 449, 451, 454, 456, 462, 466, 476, 482, 567], "parse_arg": 567, "parse_fil": [16, 84, 90, 104, 123], "parse_obj": [16, 84, 90, 104, 123], "parse_raw": [16, 84, 90, 104, 123], "parseabl": 299, "parser": 567, "part": [101, 372, 375, 378, 381, 383, 385, 386, 387, 388, 390, 391, 392, 397, 398, 413, 417, 418, 419, 427, 432, 437, 438, 441, 443, 446, 454, 462, 470, 471, 475, 476, 492, 493, 507, 512, 516], "parti": 377, "partial": [91, 102, 105, 146, 147, 153, 158, 161, 164, 187, 199, 201, 267, 386, 390, 418, 432, 518], "partial_overlap": 91, "particip": [377, 381, 392], "particl": [19, 26, 242, 272, 419, 495, 543], "particle_distribut": [242, 543], "particular": [87, 91, 372, 378, 385, 387, 394, 396, 397, 399, 420, 423, 434, 435, 443, 446, 447, 448, 449, 451, 455, 458, 463, 465, 466, 472, 474, 477, 482, 484, 485, 491, 492, 504, 507, 514, 516, 520, 569], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [375, 381, 382, 386, 392, 393], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 105, 108, 109, 110, 123, 124, 127, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 173, 181, 186, 187, 188, 189, 191, 193, 195, 196, 197, 199, 200, 201, 204, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 280, 282, 299, 311, 319, 320, 321, 326, 327, 328, 329, 359, 360, 365, 367, 368, 372, 375, 382, 384, 385, 386, 387, 399, 419, 423, 425, 437, 438, 443, 444, 446, 447, 454, 455, 459, 463, 464, 465, 470, 471, 472, 473, 474, 475, 476, 478, 479, 482, 491, 492, 493, 507, 518, 519, 520, 524, 525, 567, 571], "pass4": 484, "passkwarg": 448, "past": [372, 377, 380, 388, 389, 392, 393, 395, 398, 400, 408, 429, 431, 432, 475, 567], "patch": [369, 372, 379, 398, 426, 435, 446, 448, 456, 460, 467], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 104, 106, 107, 110, 123, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 188, 189, 191, 196, 197, 200, 201, 207, 219, 233, 241, 268, 307, 336, 337, 338, 341, 372, 375, 407, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 505, 561, 562, 567], "path_effect": [196, 219, 241], "path_to_notebook": 372, "path_to_script": 372, "patheffect": [196, 219, 241], "pathlib": [16, 82, 83, 86, 87, 91, 145, 197, 207, 219, 241, 337, 446, 447, 454, 455, 458, 459, 482, 491, 492], "pathpatch": 460, "pattern": [372, 378, 386], "paula": 438, "paulakx": 438, "paz": [424, 427, 428], "pbar": 507, "pc": [46, 47, 50, 52, 500, 501], "pcolormesh": [83, 124, 142, 143, 145, 148, 149, 150, 155, 157, 159, 160, 430, 436, 472, 473], "pd": [87, 91], "pdf": [101, 145, 149, 174, 247, 248, 262, 263, 321, 365, 373, 455, 458, 469, 474, 497, 499, 500, 501, 503, 504, 509, 510, 511, 513, 516, 520, 550, 551, 569, 572], "pdf_in_safe_rang": 145, "pdf_matrix": 145, "pdf_threshold": [145, 146, 150], "pdflatex": 373, "peak": [68, 127, 137, 138, 145, 174, 225, 230, 232, 236, 425, 431, 438, 450, 463, 470, 474, 530], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 372, "peek": [83, 88, 102, 105, 109, 110, 127, 128, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 372, 384, 408, 420, 426, 430, 434, 443, 448, 454, 458, 459, 467, 471, 473, 482, 484, 485, 504, 507, 509, 510, 511, 513], "pend": 299, "peopl": [377, 379, 392, 398, 401, 402, 469, 495, 507, 567], "pep": 377, "pep8": 375, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 105, 109, 110, 112, 121, 122, 124, 125, 126, 129, 130, 137, 139, 140, 141, 158, 161, 193, 226, 233, 234, 275, 284, 290, 296, 372, 378, 384, 385, 388, 396, 398, 399, 411, 419, 423, 425, 438, 441, 449, 458, 462, 464, 466, 469, 474, 475, 479, 480, 484, 485, 503, 507, 510, 514, 566, 568], "per_decad": [193, 446, 448, 458, 459, 467, 471, 483, 511, 517], "percent": 131, "percentag": [145, 174, 474], "percentil": 83, "perfect": 145, "perfectli": [525, 567], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 104, 108, 123, 165, 173, 187, 199, 201, 216, 219, 220, 228, 231, 241, 243, 254, 255, 259, 265, 269, 281, 283, 335, 338, 365, 372, 373, 378, 381, 382, 383, 387, 388, 396, 399, 402, 404, 413, 420, 423, 425, 428, 432, 435, 437, 438, 441, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 459, 462, 464, 465, 466, 471, 472, 474, 475, 476, 477, 479, 484, 487, 491, 503, 507, 515, 516, 519, 525, 543, 565, 566, 567, 568], "perhap": 520, "period": [42, 51, 54, 193, 268, 379, 398, 431, 479, 499], "period_dot": 51, "periodogram": [282, 387, 432], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398], "perseu": [33, 38], "person": [372, 375, 377, 379, 380, 381, 385, 390, 393], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 431, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 493, "ph": 357, "pha": [106, 107, 110, 197, 384, 429, 432, 446, 455], "pha_": 471, "pha_meta": 106, "pha_ob": [106, 141, 206, 455, 472], "pha_obs23523": [109, 110, 130, 279, 480, 505], "pha_obs23592": 505, "phacountsspectrum": 415, "phacountsspectrumlist": 414, "phase": [50, 52, 53, 89, 166, 169, 268, 377, 382, 383, 386, 387, 389, 391, 396, 408, 413, 432, 434, 437, 440, 478, 496, 507, 521, 563], "phase_axi": 396, "phase_bkg_mak": 467, "phase_column_nam": [169, 467], "phase_curve_model": 561, "phase_filt": 89, "phase_max": 467, "phase_min": 467, "phase_model": 561, "phasebackgroundestim": 417, "phasebackgroundmak": [166, 417, 437, 467], "phasecurv": [268, 431, 561], "phasecurve_lsi_dc": 561, "phasecurvemodel": 395, "phasecurvetablemodel": [383, 385], "phasecurvetempl": 383, "phasogram": [268, 561], "phi": [19, 20, 26, 194, 213, 214, 217, 220, 221, 223, 224, 225, 228, 231, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 303, 395, 462, 477, 478, 483, 493, 512, 524, 525, 526, 528, 529, 530, 534, 536, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551], "phi_0": [213, 215, 216, 220, 223, 224, 225, 228, 231, 235, 236, 243, 245, 247, 248, 254, 255, 258, 259, 261, 262, 263, 265, 269, 395, 472, 534, 537, 538, 541, 545, 548, 549, 550, 551], "phi_ref": [268, 561], "philipp": [431, 432], "phone": 392, "photon": [44, 221, 242, 357, 387, 442, 449, 458, 462, 476, 478, 493, 512, 543, 566], "photutil": [137, 372, 386, 432], "php": 63, "physic": [125, 126, 129, 132, 319, 320, 371, 396, 400, 414, 447, 455, 475, 478, 480, 482, 491, 505, 507, 543, 566, 569, 570], "pi": [19, 20, 30, 31, 32, 37, 54, 229, 272, 395, 478, 501, 524, 525, 526, 529, 530, 540, 560], "pi4vtcr5": 478, "pick": [372, 379, 386, 397, 413, 493], "pictur": 373, "pie": 507, "piec": [372, 378, 386, 391, 400], "piecewis": [243, 244, 440, 478, 521, 532, 553], "piecewisebrokenpowerlawnormspectralmodel": 395, "piecewisebrokenpowerlawnormspectramodel": 395, "piecewisenormsectralmodel": 420, "piecewisenormspatialmodel": [251, 437, 478, 527], "piecewisenormspectralmodel": [252, 400, 420, 423, 436, 438, 478, 514, 544], "pig": [13, 372, 374, 375, 412, 413, 415, 416, 417, 419, 420, 431, 433, 434, 438], "pii": 139, "pillar": 388, "pin": 432, "pink": [109, 110], "pint": [467, 507], "pintor": [385, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 434, 436, 437, 438], "pip": [371, 375, 379, 389, 403, 404, 406, 413, 432, 482, 567], "pipe": [428, 429, 430], "pipelin": [385, 387, 419], "piron": 566, "piron2001": 566, "pivot": [19, 20, 26, 67, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 438, 470], "pivot_energi": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "pix": [186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 519], "pix_reg": 469, "pix_reg_rec": 469, "pix_to_coord": [186, 187, 190, 192, 193, 196, 198, 199, 438], "pix_to_idx": [186, 187, 190, 192, 193, 196, 198, 199], "pixcoord": 386, "pixel": [13, 83, 102, 105, 109, 110, 112, 113, 117, 127, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 171, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 216, 219, 220, 228, 231, 241, 243, 254, 255, 259, 265, 269, 383, 411, 415, 429, 432, 450, 452, 458, 460, 471, 474, 475, 483, 493, 503, 505, 517, 518, 519, 528], "pixel_area": 199, "pixel_scal": [117, 187, 199], "pixelregion": [386, 516], "pixilis": 475, "pixreg": 526, "pixregion": 201, "pk": [133, 418, 442, 463, 465, 466, 470, 479, 493, 533], "pks2155": [442, 465], "pks2155_hess_lc": [122, 124, 140, 463], "pl": [67, 80, 121, 126, 132, 165, 239, 246, 247, 248, 395, 444, 460, 470, 471, 478, 493], "pl_model": 559, "pl_spectrum": 480, "place": [83, 86, 87, 91, 92, 100, 102, 105, 109, 110, 137, 142, 143, 144, 145, 146, 147, 148, 152, 153, 158, 160, 161, 171, 176, 188, 189, 191, 197, 200, 201, 241, 267, 295, 345, 372, 373, 379, 380, 383, 384, 385, 386, 388, 391, 392, 393, 394, 397, 402, 416, 418, 446, 464, 475, 476, 478, 493, 503, 504, 565, 571], "placehold": 377, "plai": [392, 456], "plain": [389, 475], "plainseri": 90, "plan": [376, 377, 381, 382, 386, 388, 389, 392, 397, 401, 412, 429, 431, 432, 433, 564], "planar": [269, 383], "plane": [29, 67, 68, 125, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 392, 469, 470, 475, 482, 502, 517, 520, 525, 566, 572], "plate": [199, 475], "platform": [389, 398, 423], "plausibl": [399, 457], "pleas": [103, 108, 373, 375, 377, 379, 381, 407, 412, 413, 414, 423, 431, 433, 444, 446, 447, 448, 449, 451, 454, 458, 459, 463, 465, 466, 471, 491, 496, 507], "pleasant": 375, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 101, 102, 105, 109, 110, 124, 127, 128, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 188, 189, 190, 191, 193, 196, 197, 198, 200, 201, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 273, 277, 350, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 386, 387, 388, 390, 391, 393, 396, 408, 411, 414, 417, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 441, 443, 444, 448, 451, 452, 454, 455, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 476, 478, 479, 480, 482, 483, 484, 485, 491, 493, 497, 499, 500, 501, 503, 507, 509, 510, 511, 513, 516, 561, 562, 569, 571], "plot_absorb": [440, 533, 553], "plot_at_energi": [142, 143, 482], "plot_bia": [145, 150], "plot_broken_powerlaw": [440, 534, 553], "plot_compound": [440, 535, 553], "plot_const": [440, 523, 532], "plot_constant_spectr": [440, 536, 553], "plot_constant_tempor": [440, 554, 563], "plot_containment_radiu": [149, 155, 157, 159], "plot_containment_radius_vs_energi": [149, 155, 157, 158, 159, 161, 482, 483], "plot_contour_lin": 472, "plot_correl": [204, 472], "plot_count": [109, 110], "plot_dat": 571, "plot_disk": [440, 524, 532], "plot_distribut": [452, 454], "plot_energi": [83, 459], "plot_energy_depend": [142, 148, 482, 509], "plot_energy_offset": 83, "plot_err": 127, "plot_error": [19, 20, 26, 66, 67, 101, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 390, 442, 444, 446, 448, 454, 455, 457, 470, 472, 492], "plot_excess": [109, 110, 426], "plot_exp_cutoff_powerlaw": [440, 537, 553], "plot_exp_cutoff_powerlaw_3fgl": [440, 538, 553], "plot_exp_cutoff_powerlaw_norm_spectr": [440, 539, 553], "plot_expdecay_tempor": [440, 555, 563], "plot_extension_error": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269], "plot_fit": [101, 109, 110, 443, 446, 447, 448, 456, 467, 491], "plot_gauss": [440, 525, 532], "plot_gauss_spectr": [440, 540, 553], "plot_gaussian_tempor": [440, 556, 563], "plot_gen_gauss": [440, 526, 532], "plot_generalized_gaussian_tempor": [440, 557, 563], "plot_grid": [156, 188, 189, 191, 197, 200, 201, 215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 396, 425, 436, 454, 471, 473, 474, 475, 476, 478, 484], "plot_heatmap": 204, "plot_hist": [197, 520], "plot_imag": 83, "plot_interact": [188, 189, 191, 197, 200, 201, 215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 425, 432, 454, 462, 475, 491, 492], "plot_kernel": 156, "plot_kwarg": [446, 448, 456], "plot_linear_tempor": [440, 558, 563], "plot_logparabola": [440, 541, 553], "plot_logparabola_norm_spectr": [440, 542, 553], "plot_map_rgb": 437, "plot_mask": [109, 110, 189, 197, 201, 447, 516], "plot_matrix": [145, 471, 483], "plot_migr": 150, "plot_naima": [440, 543, 553], "plot_npred_sign": [437, 454, 456, 492], "plot_offset2_distribut": 83, "plot_offset_depend": [142, 148], "plot_panel": 359, "plot_phasogram": 268, "plot_piecewise_norm_spati": [440, 527, 532], "plot_piecewise_norm_spectr": [440, 544, 553], "plot_point": [440, 528, 532], "plot_posit": [219, 241, 477], "plot_position_error": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269], "plot_powerlaw": [440, 545, 553], "plot_powerlaw2": [440, 546, 553], "plot_powerlaw_norm_spectr": [440, 547, 553], "plot_powerlaw_tempor": [440, 559, 563], "plot_profil": 127, "plot_psf_vs_rad": [149, 155, 157, 158, 159, 161, 483], "plot_rad_max_vs_energi": [160, 448], "plot_region": [196, 197, 219, 241, 369, 448, 460, 477, 516, 520], "plot_residu": [101, 102, 105, 109, 110, 421, 423, 454, 492], "plot_residuals_spati": [102, 105, 109, 110, 454, 462, 492], "plot_residuals_spectr": [102, 105, 109, 110], "plot_rgb": 437, "plot_shel": [440, 529, 532], "plot_shell2": [440, 530, 532], "plot_sine_tempor": [440, 560, 563], "plot_smooth_broken_powerlaw": [440, 548, 553], "plot_spati": 423, "plot_spectrum": [101, 142, 454, 466, 471], "plot_spectrum_datasets_off_region": [420, 436, 437, 446, 448, 456, 516], "plot_stat": 446, "plot_super_exp_cutoff_powerlaw_3fgl": [440, 549, 553], "plot_super_exp_cutoff_powerlaw_4fgl": [440, 550, 553], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [440, 551, 553], "plot_templ": [440, 531, 532], "plot_template_phase_tempor": [440, 561, 563], "plot_template_spectr": [440, 552, 553], "plot_template_tempor": [440, 562, 563], "plot_theta_squared_t": 485, "plot_tim": 83, "plot_ts_profil": [124, 446, 447, 460, 464], "plotmixin": [109, 110], "plotter": 359, "plsuperexpcutoff3fgl": 430, "plsuperexpcutoff4fgl": 415, "plt": [19, 20, 26, 66, 67, 128, 142, 148, 149, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 360, 369, 372, 373, 408, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 499, 500, 501, 507, 509, 510, 511, 513, 516, 524, 526, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 220, 392, 398, 478], "pmf": 385, "png": [149, 380, 408, 497, 499, 500, 501, 503, 504, 509, 510, 511, 513, 516, 520, 569, 572], "po": [147, 199, 516], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 104, 105, 109, 110, 118, 122, 124, 125, 126, 129, 130, 131, 132, 134, 140, 147, 149, 152, 158, 160, 161, 171, 172, 174, 175, 176, 178, 179, 181, 182, 184, 185, 188, 189, 191, 196, 197, 200, 201, 206, 219, 241, 245, 257, 275, 279, 282, 288, 301, 305, 311, 317, 327, 364, 372, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 411, 414, 416, 417, 423, 425, 426, 428, 429, 430, 431, 433, 436, 437, 438, 440, 443, 445, 448, 449, 450, 454, 459, 460, 462, 464, 466, 467, 471, 472, 473, 474, 475, 478, 479, 483, 485, 487, 495, 496, 502, 503, 504, 507, 512, 515, 516, 519, 521, 525, 526, 532, 543, 564, 565, 566], "point_sourc": 383, "pointer": 380, "pointing_altaz": [399, 437], "pointing_galact": 91, "pointing_info": [85, 94, 441], "pointing_posit": [158, 449, 459, 462], "pointing_radec": [83, 91, 437, 482], "pointing_t": 94, "pointing_zen": 437, "pointinginfo": [85, 429], "pointinginfometadata": [90, 104], "pointingmetadata": 399, "pointingmod": 85, "pointlik": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 431, 516], "points_scal": 311, "pointskyregion": [170, 175, 196, 245, 426, 448, 459], "pointsourc": [383, 495], "pointspatialmodel": [19, 20, 72, 80, 132, 251, 395, 396, 416, 436, 450, 451, 454, 455, 458, 459, 464, 470, 471, 477, 478, 483, 491, 492, 528], "pointspreadfunct": 473, "poisson": [105, 110, 281, 282, 283, 284, 290, 292, 293, 296, 329, 384, 385, 414, 419, 444, 449, 452, 462, 566, 567, 569], "poissonian": [282, 463, 467, 566], "poissonlikelihoodfitt": 428, "polar": [51, 54, 300, 372], "pole": [51, 386, 475], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 189], "polici": 376, "pollut": 387, "polygon": [189, 203, 386], "polygonis": 386, "polygonpixelregion": 386, "polygonskyregion": [203, 386], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 238, 475], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [315, 319, 320], "pool_kwarg": [319, 320], "poolmethodenum": 315, "poon": 429, "poorli": [474, 514], "pop": [92, 100, 195, 241], "popitem": 195, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 373, 392, 430, 496, 498, 543, 565], "popular": 567, "port": 430, "pos_ob": 456, "pos_on": 185, "pos_target": [456, 467], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 102, 103, 104, 105, 108, 122, 123, 124, 125, 126, 129, 130, 132, 146, 147, 153, 156, 158, 161, 171, 174, 176, 185, 187, 188, 189, 191, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 212, 215, 216, 219, 220, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 267, 269, 279, 281, 283, 297, 298, 301, 302, 305, 306, 360, 372, 379, 383, 385, 386, 395, 396, 397, 398, 413, 415, 420, 423, 425, 438, 441, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 485, 493, 503, 504, 505, 507, 512, 513, 516, 517, 518, 520, 524, 525, 526, 528, 543, 569], "position_angl": 449, "position_error": [215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 417], "position_lonlat": [215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269], "position_off": 185, "positv": 434, "posixpath": [16, 336], "possibl": [33, 82, 87, 91, 151, 372, 373, 375, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 399, 402, 404, 414, 415, 423, 430, 432, 437, 442, 446, 450, 451, 452, 457, 460, 471, 472, 473, 474, 475, 483, 492, 493, 505, 507, 514, 519, 520, 543, 567, 568], "possibli": [87, 91, 122, 378, 382, 383, 385, 386, 390, 391, 392, 393, 399, 401, 423, 514], "post": [52, 381, 399], "poster": [375, 398, 402, 427], "posterior": [390, 480], "posteriori": 480, "postfix": 372, "potenti": [119, 380, 388, 457, 507], "potentiel": 398, "power": [19, 20, 26, 27, 101, 122, 124, 126, 131, 136, 156, 158, 161, 187, 209, 211, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 258, 260, 261, 262, 263, 266, 270, 272, 277, 282, 326, 383, 385, 411, 417, 429, 431, 440, 442, 449, 451, 454, 458, 460, 462, 465, 466, 467, 477, 478, 480, 507, 521, 533, 553, 559], "power_spectrum": 282, "power_spectrum_param": 282, "powerlaw": [174, 247, 249, 282, 383, 384, 388, 429, 431, 440, 443, 451, 459, 460, 470, 478, 480, 492, 521, 547, 563], "powerlaw2spectralmodel": [239, 247, 248, 252, 395, 444, 451, 478, 493, 546], "powerlaw_with_paramet": 282, "powerlawnormspectralmodel": [67, 227, 246, 248, 252, 267, 394, 395, 400, 420, 438, 454, 455, 458, 459, 462, 471, 477, 478, 483, 491, 514, 527, 547, 552], "powerlawspectr": 132, "powerlawspectralmodel": [70, 72, 76, 80, 101, 109, 110, 114, 116, 121, 124, 130, 132, 210, 212, 246, 247, 252, 273, 395, 396, 400, 442, 443, 444, 447, 449, 450, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 477, 478, 480, 482, 483, 491, 492, 493, 505, 523, 524, 525, 526, 528, 529, 530, 531, 533, 535, 544, 545, 554, 555, 556, 557, 558, 559, 560, 561, 562], "powerlawspectramodel": 400, "powerlawtemporalmodel": [264, 478, 559], "pppc4dm": 495, "pppc4dmid": 26, "pprint": [87, 91, 568], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [372, 382, 384, 386, 395, 396, 398, 400, 401, 417, 418], "practic": [385, 389, 393, 396, 397, 398, 399, 446, 471, 476, 478, 492, 503, 507, 516, 566], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 101, 104, 108, 123, 124, 299, 372, 375, 381, 392, 398, 399, 403, 404, 420, 432, 434, 447, 451, 452, 455, 457, 460, 463, 470, 472, 477, 480, 503, 509], "preced": [317, 386, 388, 398, 478], "precis": [132, 149, 155, 157, 159, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 372, 390, 397, 398, 459], "precision_factor": [158, 161, 188, 189, 191, 197, 200, 201], "precomput": [26, 101, 124, 471, 477], "pred": 503, "predefin": [425, 460, 464, 465, 491], "predic": 383, "predict": [101, 102, 105, 108, 109, 110, 121, 122, 124, 125, 126, 129, 130, 136, 165, 168, 174, 181, 245, 257, 285, 321, 368, 378, 383, 384, 385, 420, 437, 438, 442, 447, 449, 451, 452, 454, 456, 458, 460, 462, 471, 474, 480, 491, 492, 505, 507, 511, 514, 533, 566, 569], "prefer": [87, 91, 347, 372, 377, 379, 383, 391, 392, 398, 403, 404, 408, 460, 466, 475, 476, 480, 487, 567, 569], "prefix": [193, 383], "preliminari": [381, 392, 400, 428, 430, 438, 450, 473, 483], "prepar": [82, 168, 382, 383, 401, 447, 455, 474, 478, 483, 491, 515, 564], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 450, 463, 475, 543, 566], "present": [15, 70, 82, 83, 85, 91, 92, 100, 106, 110, 122, 124, 162, 190, 195, 219, 227, 241, 299, 372, 373, 375, 385, 388, 392, 396, 399, 402, 423, 443, 448, 451, 452, 463, 464, 465, 469, 473, 474, 475, 477, 503, 505, 508, 520, 567, 569], "preserv": [87, 91, 105, 188, 189, 191, 193, 197, 200, 201, 389, 471, 476], "preserve_count": [188, 189, 191, 197, 200, 201, 475], "press": 482, "pretti": [386, 392, 402, 408], "prevent": [189, 221, 299, 423, 454, 514], "preview": [375, 485], "previou": [74, 87, 91, 372, 375, 386, 392, 393, 397, 401, 414, 420, 438, 448, 457, 458, 475, 478, 479, 480, 493, 502], "previous": [279, 389, 419, 431, 432, 441, 446, 454, 455, 470, 474, 476], "primari": [26, 87, 91, 188, 189, 191, 192, 200, 201, 377, 398, 419, 434, 475], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 192, "primary_band": 475, "primary_hdu": 458, "primaryflux": [19, 20, 469, 495], "primaryhdu": [458, 475], "prime": 23, "primer": 390, "princip": 457, "principl": [398, 400, 446, 517], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 101, 102, 109, 111, 115, 121, 124, 126, 132, 137, 138, 143, 145, 148, 149, 155, 157, 159, 168, 171, 210, 212, 219, 233, 241, 273, 297, 298, 307, 339, 372, 373, 383, 384, 387, 396, 399, 407, 408, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 491, 492, 493, 505, 507, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 571], "print0": 372, "print_level": [454, 462, 472, 492], "print_stack": 372, "printout": [372, 430, 431, 471], "prior": [19, 20, 99, 101, 102, 109, 209, 210, 211, 212, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 376, 381, 404, 406, 438, 440, 442, 443, 446, 447, 448, 449, 451, 454, 455, 460, 462, 466, 470, 472, 478, 481, 487, 492, 493, 519, 552, 564], "prior_registri": 480, "prior_stat_sum": [209, 210, 211, 212, 400, 480], "priorfitstatist": 400, "priori": [396, 452, 476], "prioriti": [369, 381, 383, 384, 386, 398, 401], "priormodel": 400, "priorparamet": [250, 400, 480], "privat": [372, 375, 381, 395, 431, 484, 485], "pro": [372, 388], "probabl": [13, 101, 150, 372, 375, 378, 379, 380, 382, 385, 386, 390, 392, 394, 400, 402, 446, 449, 462, 472, 475, 478, 480, 483, 511, 512, 513, 566, 567, 569, 570], "probe": [132, 288, 478], "problem": [19, 20, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 295, 350, 380, 382, 386, 393, 400, 407, 435, 472], "problemat": [391, 396, 399, 465, 507], "proce": [375, 402, 404, 406, 434, 442, 443, 446, 447, 458, 462, 465, 476, 477, 483, 491, 492], "procedur": [385, 397, 402, 442, 450, 454], "proceed": [392, 398, 484], "process": [11, 83, 93, 125, 126, 129, 132, 164, 189, 201, 318, 319, 320, 329, 372, 373, 375, 377, 378, 380, 381, 382, 384, 385, 387, 388, 394, 397, 398, 399, 405, 409, 415, 420, 423, 425, 431, 438, 443, 446, 456, 458, 459, 470, 471, 474, 484, 489, 492, 497, 504, 506, 507, 565, 566, 567], "process_lots_of_data": 372, "processor": 392, "prod": 412, "prod3": 392, "prod3b": 482, "prod5": [458, 459], "produc": [15, 102, 105, 109, 110, 113, 122, 276, 278, 372, 373, 378, 387, 388, 396, 397, 399, 402, 417, 442, 443, 446, 448, 450, 455, 456, 457, 458, 462, 465, 467, 469, 472, 474, 480, 482, 492, 507, 510, 512, 566, 567], "product": [108, 188, 189, 191, 194, 197, 200, 201, 268, 378, 387, 388, 398, 399, 408, 423, 437, 438, 442, 444, 450, 459, 467, 471, 472, 474, 483, 485, 505, 512, 566], "prof_mak": 126, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 101, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 149, 155, 157, 158, 159, 161, 185, 189, 197, 206, 230, 232, 280, 296, 312, 331, 332, 384, 386, 390, 391, 398, 404, 406, 411, 413, 420, 423, 428, 430, 432, 433, 438, 440, 446, 447, 456, 461, 464, 466, 472, 480, 487, 495, 503, 505, 507, 519, 524, 566, 569], "profile_err": 127, "profile_high": 460, "profile_new": 460, "profuma": 495, "program": [372, 388], "programmat": 454, "progress": [15, 82, 117, 129, 132, 206, 320, 378, 381, 388, 389, 402, 423, 430, 431, 432, 438, 507], "progress_download": 507, "proj": [102, 105, 109, 110, 168, 187, 188, 189, 199, 200, 201, 446, 474, 475, 483, 492, 516], "project": [102, 109, 126, 165, 171, 187, 188, 189, 191, 196, 197, 199, 200, 201, 216, 219, 220, 228, 231, 241, 243, 254, 255, 259, 265, 269, 306, 332, 372, 373, 374, 375, 377, 379, 386, 388, 389, 392, 398, 415, 423, 431, 437, 447, 450, 452, 456, 460, 467, 473, 475, 476, 477, 482, 483, 489, 491, 492, 493, 495, 516, 519, 520, 529, 530, 565, 567], "projected_distance_axi": 126, "prompt": 567, "pronounc": 507, "pronunci": 507, "prop_cycl": 369, "propag": [19, 20, 26, 53, 127, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 287, 383, 390, 417, 437, 472], "proper": [45, 100, 387, 398, 436, 437, 448, 454, 507], "properli": [132, 181, 377, 387, 398, 435, 436, 446, 447, 472, 491, 503, 568], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 96, 122, 165, 199, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 289, 369, 372, 373, 383, 385, 395, 396, 399, 400, 420, 423, 425, 430, 431, 433, 436, 437, 446, 448, 456, 458, 460, 470, 476, 478, 479, 493, 504, 520, 566], "propos": [374, 376, 377, 378, 379, 381, 389, 397, 398, 400, 413, 416, 417, 419, 420, 431, 437], "proto": [16, 84, 90, 104, 123], "proton": [272, 543], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372, 377, 383, 385, 388, 389, 390, 392, 428, 430, 431, 438, 496], "proven": 388, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 113, 123, 129, 132, 145, 146, 164, 178, 179, 184, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 269, 282, 296, 299, 365, 372, 373, 382, 383, 385, 387, 388, 389, 392, 393, 396, 398, 399, 400, 401, 402, 403, 407, 409, 413, 416, 417, 418, 420, 423, 425, 434, 437, 441, 446, 448, 449, 450, 459, 462, 463, 470, 471, 472, 474, 475, 476, 478, 479, 483, 484, 485, 487, 492, 493, 495, 497, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 517, 518, 519, 520, 521, 528, 531, 543, 552, 564, 565, 566, 567, 569, 572], "proxi": 382, "prune": 375, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 375, "psf": [16, 82, 87, 88, 96, 102, 103, 105, 108, 109, 110, 112, 113, 147, 149, 154, 155, 156, 157, 158, 159, 161, 168, 175, 184, 199, 219, 241, 257, 297, 298, 372, 378, 382, 383, 384, 385, 388, 411, 413, 417, 418, 419, 420, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 437, 441, 443, 446, 447, 448, 450, 451, 452, 454, 456, 458, 459, 462, 464, 471, 474, 476, 479, 482, 484, 485, 491, 492, 503, 505, 507, 512, 515, 520, 566], "psf3d": [88, 149, 154, 157, 159, 184, 413, 431, 513], "psf68": 441, "psf_": 503, "psf_3gauss": [87, 149, 482, 513], "psf_assym": 473, "psf_kernel": [158, 483], "psf_kernel_map": [156, 483], "psf_king": [87, 157, 513], "psf_map": [103, 108, 158, 161], "psf_map_reco": [161, 484], "psf_mean": 483, "psf_new": 473, "psf_out": [158, 161], "psf_r95": 476, "psf_tabl": [82, 87, 155, 473, 485], "psf_theta": 372, "psf_valu": [149, 157, 159], "psfkernel": [105, 158, 161, 189, 201, 384, 393, 432, 513], "psfking": [154, 425, 513], "psfmap": [102, 103, 105, 108, 109, 110, 146, 147, 153, 154, 156, 161, 168, 175, 184, 384, 385, 393, 413, 416, 417, 419, 420, 432, 438, 450, 471, 483, 507, 513], "psfnd": 473, "psr": [467, 470, 493], "public": [6, 362, 363, 375, 377, 386, 391, 394, 397, 402, 427, 443, 455, 464, 465, 565, 572], "publicli": [482, 484, 485], "publish": [11, 389, 402, 446, 483], "pull": [373, 376, 377, 380, 381, 382, 383, 384, 385, 386, 392, 397, 398, 402, 410], "puls": 232, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 382, 392, 413, 415, 434, 437, 440, 452, 457, 468, 478, 487, 497, 498, 503, 504, 505, 507, 515, 519, 564], "pulsar_analysi": [392, 440, 467, 468], "pulsar_phas": 507, "pulsar_phase_comput": 507, "pulsarastronomi": 507, "pulsat": 256, "pulse_stat": 467, "punch": [436, 438], "pure": [372, 389, 391, 392, 516], "purpl": 520, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 323, 347, 376, 378, 384, 387, 391, 395, 397, 398, 431, 450, 471, 477, 478, 511], "push": [372, 375, 401, 434], "put": [193, 372, 373, 375, 377, 379, 380, 383, 392, 401, 402, 408, 414, 449, 458, 476, 483, 507, 567], "pwbpl": 395, "pwd": [375, 404, 406], "pwl": [19, 20, 26, 124, 210, 212, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 273, 383, 395, 400, 442, 444, 458, 478, 480, 505, 523, 524, 525, 526, 528, 529, 530, 531, 533, 535], "pwl2": 478, "pwl_decai": 458, "pwl_norm": [395, 478, 547], "pwn": [43, 470, 493, 500], "pwne": 457, "py": [16, 84, 90, 104, 123, 372, 373, 379, 386, 389, 391, 393, 401, 402, 408, 413, 415, 416, 424, 429, 433, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 507, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567], "py310": 375, "py35": 430, "pycharm": 414, "pydant": [16, 84, 90, 104, 123, 371, 417, 436, 438], "pydantic_cor": [16, 84, 90, 104, 123], "pydanticserializationerror": [16, 84, 90, 104, 123], "pydanticundefin": [16, 84, 90, 104, 123], "pydata": 425, "pyfact": [411, 429], "pyflak": 425, "pyirf": 438, "pyjok": 371, "pymc": 390, "pymotw": 567, "pypi": [389, 399, 401, 402, 404, 405], "pyplot": [19, 20, 26, 66, 67, 83, 128, 149, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 360, 365, 408, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 499, 500, 501, 507, 509, 510, 511, 513, 516, 524, 526, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560], "pyproject": 420, "pyregion": 386, "pytest": [372, 373, 375, 402, 431], "python": [11, 16, 84, 90, 104, 123, 137, 299, 340, 371, 375, 376, 377, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 398, 399, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 423, 425, 428, 429, 430, 431, 432, 433, 434, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495, 506, 507, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 567], "python3": [336, 405, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 539, 542, 555], "python_execut": [441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "python_vers": [441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "pytorch": 390, "pyx": [375, 402], "pyyaml": [371, 389, 412, 416], "q": [26, 83, 87, 91, 367, 469], "qtabl": [87, 91, 387], "quadrat": [475, 485, 493, 570], "qualiti": [197, 392, 431, 432, 437, 479, 492, 507, 565, 572], "quantifi": [438, 457, 463, 480], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 172, 173, 174, 176, 180, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 209, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 275, 281, 282, 283, 286, 287, 288, 289, 295, 298, 299, 301, 303, 305, 306, 311, 329, 331, 332, 343, 347, 372, 373, 378, 381, 383, 386, 387, 388, 390, 395, 396, 399, 400, 414, 416, 420, 423, 424, 432, 433, 434, 441, 448, 450, 458, 459, 460, 463, 470, 471, 473, 474, 475, 476, 478, 482, 484, 485, 493, 499, 500, 501, 503, 507, 520, 546, 555, 557, 566, 569, 571], "quantity_support": [473, 524], "quasar": 133, "quentin": [390, 394, 395, 415, 416, 417, 418, 419, 420, 423, 425, 426, 434, 435, 436, 437, 438], "queri": [388, 428, 470], "question": [339, 375, 377, 379, 380, 381, 383, 384, 385, 386, 389, 391, 396, 407, 412, 413, 431, 432, 433, 456, 493, 507, 508, 567], "questionnair": [379, 431], "quetin": 417, "quick": [83, 88, 102, 105, 109, 110, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 372, 375, 392, 402, 450, 451, 454, 456, 458, 466, 471, 473, 477, 482, 484, 485, 487, 493, 495, 504], "quickest": 373, "quickli": [372, 373, 375, 377, 388, 389, 392, 398, 402, 404, 430, 446, 454, 463, 484, 511, 567], "quicklook": 83, "quickplot": 189, "quicksort": [87, 91], "quickstart": 409, "quiescent": 533, "quit": [87, 91, 372, 400, 458], "quival": 383, "quot": [74, 273, 372, 373, 469], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 150, 185, 198, 300, 372, 373, 397, 402, 447, 455, 459, 472, 474, 491, 497, 512, 516, 524, 525, 526, 530, 533], "r68": [83, 112, 149, 158, 161], "r70": [67, 470], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 254, 255, 469, 526, 529, 530], "r_0": [30, 33, 38, 48, 220, 231, 254, 477, 524, 526, 530], "r_1": [39, 48], "r_eval": 231, "r_exp": [36, 48], "r_in": [44, 163, 173, 254, 452, 517], "r_m": 526, "r_out": 44, "r_out_max": 163, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 137, 138, 171, 372, 373, 385, 388, 441, 446, 448, 450, 452, 456, 459, 464, 465, 467, 470, 474, 476, 482, 483, 484, 485, 492, 493, 495, 507, 511, 571], "ra_pnt": 485, "ra_tru": [372, 385], "rad": [33, 83, 88, 102, 105, 109, 110, 112, 113, 149, 155, 157, 158, 159, 160, 161, 171, 184, 256, 388, 425, 437, 448, 471, 473, 474, 483, 512, 513, 516, 560], "rad_axi": [102, 105, 109, 110, 113, 155, 158, 161, 471, 473, 474, 507], "rad_di": [45, 497], "rad_index": 155, "rad_max": [82, 83, 87, 88, 154, 160, 177, 425, 434, 436, 437, 448], "rad_max_2d": [87, 160, 170, 175, 177, 448], "radec": [83, 94, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 157, 159, 160, 372, 373, 473, 475, 493], "radecsi": 531, "radesysa": 531, "radi": [242, 543], "radial": [28, 30, 35, 36, 39, 40, 45, 128, 185, 189, 325, 372, 383, 391, 396, 413, 428, 430, 438, 458, 460, 474, 482, 495, 497, 513, 516], "radian": [17, 18, 21, 22, 24, 25, 27, 194, 215, 216, 220, 228, 231, 243, 245, 254, 255, 257, 259, 265, 269], "radiat": [221, 507, 529, 530, 543], "radiative_model": [242, 543], "radii": [27, 469, 483, 525], "radio": [133, 386, 475], "radiobutton": [454, 462, 475, 491, 492], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 102, 105, 109, 110, 121, 126, 127, 149, 155, 157, 158, 159, 161, 163, 171, 173, 189, 199, 201, 202, 219, 220, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 267, 269, 297, 298, 331, 373, 386, 388, 395, 396, 413, 422, 423, 427, 437, 441, 443, 446, 447, 449, 450, 451, 452, 454, 456, 458, 459, 464, 465, 467, 469, 471, 473, 474, 476, 477, 478, 479, 482, 491, 492, 493, 500, 501, 514, 516, 517, 520, 524, 525, 526, 529, 530], "radius_inn": [52, 53], "radius_max": [331, 460], "radius_min": 331, "radius_reverse_shock": [50, 53, 500], "radmax": [425, 426, 437, 438], "radmax2d": [83, 88, 154, 177, 423, 448], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 121, 125, 126, 129, 131, 132, 133, 164, 221, 272, 273, 288, 289, 319, 320, 378, 383, 384, 386, 390, 401, 402, 404, 408, 409, 414, 430, 432, 437, 438, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 495, 497, 498, 502, 503, 504, 507, 510, 512, 514, 516, 517, 533, 564, 565, 566, 567, 568, 569, 572], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 104, 123, 190, 195, 219, 221, 241, 265, 266, 267, 269, 299, 350, 372, 386, 395, 396, 399, 400, 417, 434, 437, 438, 459], "raise_error": [16, 84, 90, 104, 123], "raj2000": [470, 493], "ran": 482, "random": [6, 33, 42, 45, 46, 47, 87, 91, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 322, 323, 324, 325, 326, 327, 328, 329, 375, 384, 385, 388, 415, 427, 431, 458, 478, 507, 568, 569, 571], "random_se": 384, "random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 322, 323, 326, 327, 328, 329, 372, 385, 449, 458, 459], "randomli": [46, 372], "randomnumb": 326, "randomst": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 323, 326, 327, 328, 329, 372], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 105, 109, 110, 125, 132, 145, 158, 160, 161, 174, 186, 187, 190, 192, 193, 196, 197, 199, 209, 211, 213, 214, 217, 218, 220, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 241, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 267, 268, 270, 271, 275, 312, 324, 326, 327, 328, 365, 372, 378, 384, 385, 387, 396, 414, 419, 420, 423, 431, 432, 434, 443, 446, 448, 449, 451, 454, 455, 457, 459, 463, 465, 466, 467, 470, 471, 472, 473, 475, 476, 478, 479, 480, 483, 484, 491, 492, 493, 503, 505, 507, 526, 536, 565, 569], "rangl": 19, "rapid": [133, 288, 378, 381, 396, 397], "rare": [371, 372, 391, 475], "raster": [95, 189], "rate": [44, 45, 83, 88, 142, 143, 174, 181, 282, 329, 385, 408, 432, 446, 448, 467, 474, 482, 483, 485, 497, 510, 566], "rather": [117, 121, 125, 129, 132, 377, 390, 393, 431, 434, 436, 438, 443, 472, 475, 493, 503, 525, 569], "ratio": [105, 110, 163, 187, 188, 189, 283, 296, 396, 441, 467, 482, 517, 566, 568, 569, 570, 572], "ravel": [187, 458], "raw": [122, 174, 493], "rc": [188, 189, 191, 197, 200, 201, 369, 475], "rc1": 401, "rc_context": [188, 189, 191, 197, 200, 201, 475], "rc_param": [188, 189, 191, 197, 200, 201, 475], "rcparam": 369, "rdbu": 491, "rdbu_r": [102, 105, 109, 110], "re": [87, 91, 96, 124, 125, 130, 165, 188, 189, 191, 197, 200, 201, 206, 297, 298, 365, 372, 373, 375, 377, 379, 380, 386, 387, 388, 390, 393, 394, 395, 396, 404, 406, 407, 411, 423, 425, 432, 444, 446, 447, 452, 454, 455, 456, 466, 472, 473, 477, 479, 483, 491, 493, 505, 507, 528, 567], "reach": [53, 131, 202, 377, 382, 385, 478], "reactiv": 434, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 105, 106, 109, 110, 114, 116, 117, 121, 122, 124, 126, 128, 130, 132, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 170, 188, 189, 191, 195, 196, 197, 200, 201, 206, 219, 221, 233, 241, 268, 269, 270, 274, 276, 278, 279, 335, 338, 358, 360, 365, 367, 372, 373, 375, 377, 382, 383, 384, 385, 388, 392, 394, 396, 398, 399, 400, 404, 406, 417, 420, 423, 431, 432, 434, 437, 438, 442, 446, 447, 448, 452, 454, 457, 458, 463, 471, 472, 473, 478, 480, 482, 483, 484, 487, 491, 493, 504, 505, 507, 509, 510, 511, 513, 531, 561, 562, 567, 570], "read_arf": 106, "read_bkg": 106, "read_builtin": [221, 442, 533], "read_covari": [219, 241], "read_dataset": 15, "read_lazi": 425, "read_model": 15, "read_pha": 106, "read_rmf": 106, "read_xspec_model": 270, "readabl": [353, 383, 425, 447, 491], "reader": [399, 441, 449, 451, 454, 456, 459, 462, 466, 482], "readi": [382, 399, 407, 566], "readili": 392, "readm": [375, 398], "readthedoc": [13, 125, 181, 196, 206, 270, 375, 392, 414, 429, 472, 473, 482, 504, 507, 518, 520], "real": [51, 372, 375, 402, 449, 450, 452, 459, 472, 476, 503], "realis": [372, 377, 386, 398], "realist": 400, "realiti": 442, "realiz": [378, 566], "realli": [372, 379, 386, 389, 449, 462, 472], "rearrang": 392, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372, 377, 378, 379, 380, 383, 384, 385, 387, 389, 391, 393, 398, 431, 442, 458, 472, 480, 484, 503, 567], "reassign": [19, 20, 26, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271], "rebas": [372, 386], "rebin": [124, 140, 387, 425, 438, 463, 465, 471], "rebuild": [16, 84, 90, 104, 123, 455], "recarrai": [87, 91, 149, 159], "receiv": [390, 392, 393, 395, 397], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 382, 386, 387, 388, 389, 392, 405, 412, 426, 432, 455, 482, 484], "recip": [374, 388, 409, 423, 467, 507, 508, 569], "reco": [102, 105, 109, 110, 145, 178, 372, 378, 387, 396, 433, 434, 441, 471, 474, 484, 566], "reco_exposur": 121, "reco_psf": [102, 105, 109, 110, 113, 474, 484], "recogn": [441, 449, 451, 454, 456, 458, 462, 466, 482], "recognis": [383, 567], "recognit": 398, "recommend": [92, 100, 101, 175, 219, 241, 280, 311, 312, 371, 372, 373, 375, 379, 381, 389, 398, 402, 403, 405, 408, 415, 432, 446, 447, 448, 457, 471, 472, 474, 478, 483, 491, 507, 514, 519, 520, 567, 568, 571], "recomput": [124, 396], "recompute_ul": 124, "recon_vers": [483, 493], "reconstruct": [83, 102, 103, 105, 108, 109, 110, 112, 113, 121, 131, 132, 136, 145, 146, 147, 150, 160, 161, 174, 181, 372, 378, 383, 385, 420, 435, 441, 443, 446, 449, 451, 452, 454, 458, 462, 466, 471, 474, 476, 480, 484, 503, 505, 511, 512, 513, 520, 566], "recopsfmap": [154, 434, 437], "record": [83, 88, 372, 377, 378, 398], "recov": 388, "rectangl": [216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 332, 386, 460, 516], "rectangleskyregion": [199, 215, 216, 269, 331, 332, 386, 443, 469, 476, 516, 520], "rectangular": [460, 516, 520], "recurr": 387, "recurs": [339, 399], "red": [101, 282, 288, 362, 441, 442, 446, 449, 452, 454, 457, 469, 479, 480, 524, 525], "redesign": 381, "redistribut": 511, "redo": 467, "redshift": [19, 20, 221, 395, 493, 533], "redshift_scan": 442, "reduc": [6, 11, 15, 100, 102, 105, 109, 110, 156, 158, 161, 166, 176, 188, 189, 191, 193, 197, 200, 201, 378, 379, 381, 383, 384, 388, 391, 393, 398, 399, 404, 411, 416, 423, 432, 438, 440, 442, 443, 444, 447, 448, 449, 454, 455, 458, 462, 464, 465, 466, 476, 479, 481, 484, 487, 503, 507, 512, 517, 519, 520, 525, 526, 564, 565, 566, 567], "reduce_data": 388, "reduce_over_ax": [188, 189, 191, 197, 200, 201, 451, 474, 484], "reduct": [6, 11, 164, 378, 384, 385, 388, 392, 393, 394, 399, 404, 417, 419, 437, 440, 452, 456, 457, 460, 467, 471, 473, 476, 477, 479, 481, 487, 503, 504, 507, 514, 516, 517, 519, 565, 566], "ref": [83, 94, 102, 109, 121, 126, 132, 187, 196, 199, 219, 241, 396, 456, 460, 470, 471, 473, 475, 483, 493, 520, 555, 556, 557, 558, 559, 560, 566, 567], "ref_templ": [16, 84, 90, 104, 123], "refactor": [372, 384, 386, 387, 388, 395, 413, 414, 415, 417, 418, 419, 420, 423, 425, 427, 429, 431], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 101, 102, 104, 105, 106, 109, 110, 112, 113, 122, 123, 124, 125, 127, 132, 133, 150, 164, 165, 168, 171, 172, 175, 176, 177, 180, 181, 183, 198, 199, 200, 201, 206, 213, 214, 217, 218, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 268, 270, 271, 273, 282, 284, 288, 289, 290, 295, 296, 326, 327, 353, 354, 355, 356, 372, 373, 378, 380, 383, 384, 386, 388, 390, 395, 396, 397, 398, 399, 402, 409, 423, 430, 431, 442, 443, 444, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 474, 475, 477, 478, 480, 482, 483, 484, 491, 492, 493, 496, 503, 505, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 537, 538, 539, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 569, 571], "referenc": [372, 566], "reference_flux": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "reference_map": 475, "reference_model": [122, 124, 441, 442, 455], "reference_model_default": [122, 124], "reference_spectral_model": [122, 124], "reference_tim": [86, 88, 102, 105, 109, 110, 192, 198, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 436, 437, 459, 463, 466, 474, 475, 562], "reflect": [166, 170, 171, 172, 176, 185, 381, 386, 388, 391, 393, 404, 416, 423, 425, 428, 429, 432, 442, 443, 446, 447, 448, 456, 465, 476, 515, 566], "reflected_bkg_mak": 474, "reflectedbgestim": 388, "reflectedregion": 442, "reflectedregionsbackgroundmak": [166, 171, 417, 443, 446, 448, 456, 465, 474], "reflectedregionsfind": [170, 176, 415, 516], "refpix": [199, 200, 201], "refresh": [87, 91], "refus": 372, "reg": [102, 105, 109, 110, 476, 478], "reg_dataset": 471, "regard": [396, 399, 446], "regardless": [87, 91], "regeard": [435, 436, 437, 438], "regi": [378, 383, 384, 388], "region": [6, 27, 83, 91, 100, 102, 105, 107, 109, 110, 114, 116, 121, 122, 124, 126, 128, 131, 133, 146, 147, 153, 158, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 187, 188, 189, 191, 196, 197, 199, 200, 201, 203, 206, 215, 216, 219, 220, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 267, 269, 270, 272, 283, 296, 330, 331, 332, 333, 334, 368, 369, 371, 373, 376, 378, 379, 387, 388, 389, 391, 394, 396, 404, 415, 416, 417, 419, 423, 425, 426, 428, 429, 431, 432, 434, 436, 437, 442, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 475, 478, 480, 482, 483, 484, 485, 491, 492, 493, 502, 503, 504, 505, 507, 514, 515, 517, 518, 519, 524, 525, 543, 565, 566, 568, 569, 570], "region_coord": 196, "region_ev": 467, "region_find": [170, 448], "region_io": 196, "region_map": [197, 201, 520], "region_map_1": 520, "region_map_2": 520, "region_mask": [83, 187, 199, 386, 446, 452, 456, 471, 474, 476, 492, 514, 516, 517], "region_nd_map": 197, "region_new": 333, "region_pix": 478, "region_weight": 199, "regionfind": [171, 172, 176], "regiongeom": [102, 105, 109, 110, 122, 126, 168, 175, 177, 178, 179, 181, 182, 197, 216, 220, 228, 231, 243, 254, 255, 257, 259, 265, 269, 386, 387, 394, 404, 419, 420, 423, 441, 443, 446, 448, 449, 456, 460, 465, 466, 467, 470, 471, 474, 483, 493, 503, 516, 519], "regionndmap": [26, 106, 109, 110, 131, 169, 170, 175, 177, 188, 189, 191, 196, 200, 201, 216, 220, 228, 231, 233, 243, 254, 255, 259, 265, 266, 269, 369, 386, 404, 419, 420, 423, 426, 434, 437, 459, 483, 503, 562], "regions_ds9": 476, "regionsfind": [170, 171, 176, 425], "regist": 478, "registri": [55, 98, 118, 154, 166, 237, 239, 251, 252, 264, 393, 400, 416, 419, 420, 423, 432, 470, 478], "regress": 375, "regul": 398, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 187, 195, 199, 381, 400, 425, 437, 462, 475, 476], "regulargridinterpol": [270, 311, 372], "regularis": 400, "regularli": [400, 485], "reichardt": 427, "reimplement": 383, "rej_sampl": 385, "reject": [376, 377, 385], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 105, 106, 110, 132, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 198, 199, 200, 201, 254, 273, 287, 329, 387, 398, 423, 463, 466, 484, 530, 569], "rel_reduction_of_f_": 472, "relat": [11, 13, 67, 83, 85, 204, 288, 378, 380, 383, 385, 386, 389, 391, 392, 393, 398, 402, 419, 420, 432, 438, 458, 471, 478, 482, 497, 564, 569], "relative_variability_amplitud": 463, "relative_variability_error": 463, "relative_variability_signific": 463, "relativist": 543, "releas": [11, 51, 65, 95, 374, 376, 377, 379, 380, 386, 389, 390, 399, 403, 404, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 443, 446, 447, 455, 464, 465, 482, 484, 485, 491, 492, 495, 507, 509, 510, 511, 513], "relev": [122, 281, 283, 355, 372, 378, 387, 392, 396, 401, 446, 447, 450, 464, 465, 466, 477, 479, 482, 484, 485, 491, 492, 503, 504, 571], "reli": [122, 372, 377, 378, 382, 383, 387, 391, 396, 397, 415, 420, 423, 434, 444, 454, 476, 495, 569], "reliabl": [375, 405, 452, 472, 476, 568], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 377, 378, 379, 380, 385, 389, 398, 413, 432, 448, 477, 513], "remark": 448, "rememb": [372, 386, 472, 487, 567], "remi": [394, 395, 415, 416, 417, 418, 419, 420, 423, 434, 435, 436, 437, 438], "remind": [193, 398, 456, 571], "remnant": [28, 52, 443, 457, 478, 498], "remot": 375, "remov": [13, 87, 91, 92, 96, 100, 125, 126, 129, 158, 161, 173, 186, 187, 192, 195, 196, 199, 201, 209, 211, 241, 298, 375, 379, 380, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 446, 452, 467, 471, 476, 479, 482, 496, 507, 516], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 375, 382, 383, 391, 392, 395, 411, 414, 416, 417, 418, 419, 423, 433, 434, 437, 567], "rename_ax": [186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 434], "rename_column": [87, 91, 124], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 350, 372, 380, 431], "renorm": [452, 514], "renormalis": 173, "reoptim": [125, 129, 130, 206, 413, 442, 460, 464, 472, 480, 491], "reorder_ax": [188, 189, 191, 197, 200, 201, 437], "reorgan": 423, "reorganis": 392, "repeat": [373, 454, 484], "repl": 372, "replac": [15, 16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 123, 146, 147, 153, 158, 186, 187, 189, 192, 196, 197, 199, 201, 267, 279, 372, 382, 383, 386, 390, 393, 399, 405, 414, 415, 417, 419, 420, 437, 438, 458, 467], "replace_axi": [186, 187, 196, 199], "replace_column": [87, 91], "repo": [373, 380, 401, 402, 411, 424], "report": [87, 375, 388, 401, 402, 411, 425, 426, 431], "repositori": [87, 91, 372, 375, 377, 380, 382, 398, 401, 423, 432, 458, 485], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 187, 189, 191, 193, 194, 196, 198, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 268, 269, 299, 307, 317, 372, 383, 384, 385, 386, 390, 393, 394, 395, 396, 413, 437, 442, 459, 460, 470, 472, 474, 475, 476, 478, 483, 493, 502, 503, 505, 509, 510, 511, 513, 519, 564, 565, 566, 571], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 104, 123, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 372, 386, 399, 413, 415, 437, 444, 470, 475, 478, 519], "reprocess": 378, "reproduc": [94, 101, 124, 373, 388, 389, 390, 392, 398, 399, 403, 405, 432, 474], "reproject": [174, 188, 189, 191, 197, 200, 201, 368, 372, 378, 386, 389, 396, 417, 424, 432, 434, 438, 475, 476], "reproject_by_imag": [188, 189, 191, 197, 200, 201, 438], "reproject_to_geom": [188, 189, 191, 197, 200, 201, 434], "request": [85, 122, 124, 373, 376, 377, 379, 380, 381, 382, 383, 384, 386, 392, 396, 397, 398, 400, 402, 410, 458, 476, 505], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 102, 104, 105, 109, 110, 111, 115, 123, 124, 127, 132, 142, 143, 149, 157, 165, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 202, 299, 347, 351, 352, 370, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 398, 400, 401, 403, 405, 411, 416, 417, 418, 419, 424, 425, 427, 428, 429, 430, 433, 434, 435, 442, 443, 448, 452, 455, 463, 465, 466, 467, 471, 473, 475, 476, 478, 482, 492, 505, 507, 520], "require_ev": 82, "required_ax": [142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 473], "required_hdu": 426, "required_irf": [16, 82, 447, 448, 451, 452, 454, 491], "required_nam": [190, 192, 193, 198], "required_paramet": [149, 157, 159], "rerun": 387, "resampl": [102, 105, 109, 110, 124, 140, 141, 146, 186, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 201, 367, 423, 425, 463, 507], "resample_axi": [124, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 367, 420, 463, 465], "resample_energy_axi": [102, 105, 109, 110, 146, 420, 425, 471], "resample_energy_edg": [446, 507], "resampled_energy_edg": 141, "resampled_map": [188, 189, 191, 197, 200, 201], "rescal": 474, "research": [388, 398], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 227, 267, 373, 420], "reset_data_cach": [102, 105, 109, 110], "reset_to_default": 227, "reshap": [188, 189, 191, 197, 200, 201, 441, 459, 473, 475], "resid": [394, 478], "residu": [72, 101, 102, 105, 109, 110, 165, 383, 384, 388, 415, 420, 426, 433, 452, 471, 472, 483, 503, 516, 566], "resolut": [52, 145, 146, 150, 187, 199, 381, 383, 385, 386, 431, 437, 470, 483], "resolv": [16, 84, 90, 104, 123, 373, 375, 382, 386, 387, 394, 395, 407, 413, 432], "resort": 451, "resourc": [431, 487], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 104, 106, 123, 124, 133, 187, 189, 199, 201, 280, 382, 387, 398, 400, 420, 450, 452, 466, 475, 476, 484, 505, 520, 570], "respond": 398, "respons": [6, 108, 145, 146, 147, 150, 152, 153, 171, 372, 378, 379, 381, 383, 384, 385, 387, 388, 396, 398, 404, 430, 431, 432, 433, 443, 446, 447, 448, 449, 462, 466, 473, 474, 477, 482, 485, 487, 491, 492, 503, 504, 509, 511, 513, 565, 566], "rest": [26, 375, 389, 391, 470, 502], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 477], "restore_statu": [210, 212, 219, 241, 480], "restore_valu": [210, 212, 219, 241], "restrict": [87, 91, 386, 454, 471, 476], "restructur": [373, 387, 388, 389, 391, 393, 399, 402, 417, 423, 424, 425, 426, 428, 437], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 101, 102, 104, 105, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 137, 139, 150, 156, 158, 161, 174, 178, 179, 184, 186, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 205, 206, 207, 208, 219, 241, 269, 279, 282, 299, 365, 371, 372, 373, 375, 377, 379, 381, 382, 383, 384, 385, 388, 390, 391, 394, 398, 400, 405, 408, 415, 423, 425, 426, 431, 433, 437, 438, 442, 444, 446, 448, 449, 454, 456, 458, 459, 462, 463, 465, 466, 467, 470, 471, 472, 475, 476, 479, 480, 483, 484, 485, 491, 492, 502, 505, 520, 555, 566, 568, 569], "result1": 442, "result2": 477, "result_ecpl": 444, "result_joint": [443, 446, 454], "result_list": 365, "result_log_parabola": 444, "result_minuit": 472, "result_pwl": 444, "result_scipi": 472, "result_stack": 446, "results_joint": 455, "results_prior": 480, "results_simplex": 472, "results_t": 457, "retain": [470, 520], "retriev": [87, 91, 396, 398, 443, 444, 446, 475, 478, 479, 484, 492, 504, 519, 520], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 301, 303, 305, 306, 310, 312, 317, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 342, 343, 344, 353, 354, 355, 356, 357, 360, 362, 363, 365, 367, 368, 378, 382, 383, 384, 385, 386, 387, 395, 396, 399, 400, 416, 417, 420, 423, 426, 432, 434, 446, 448, 456, 460, 465, 466, 470, 471, 472, 474, 475, 476, 478, 480, 493, 497, 519, 520, 552, 569], "return_delta": 329, "return_diff": 329, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [388, 420, 438], "reval": 526, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 192, 241, 475, 500], "review": [375, 380, 381, 382, 385, 386, 388, 389, 391, 392, 393, 395, 396, 398, 400, 433, 434, 519], "revis": 392, "revisit": 221, "rework": 418, "rewrit": [378, 381, 388, 418, 428, 429, 431, 432, 433, 567], "rewritten": [430, 433], "rf": 469, "rgb": [367, 369, 437, 441, 446], "rglob": [82, 458, 482], "rhe": 177, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [372, 388], "rid": 378, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 122, 124, 132, 148, 225, 229, 248, 261, 284, 290, 360, 372, 386, 395, 398, 450, 456, 458, 464, 466, 482, 524, 525, 526, 533, 534, 537, 538, 540, 541, 545, 548, 549, 550, 551, 555, 556, 557, 559, 567, 568, 569, 570], "rightarrow": [530, 570], "rigid": 377, "ring": [105, 121, 163, 166, 173, 187, 188, 189, 378, 381, 388, 391, 404, 413, 417, 419, 429, 430, 431, 432, 440, 453, 457, 476, 487, 503, 506, 515, 518, 519, 566], "ring2dkernel": [163, 173], "ring_background": [440, 452, 453], "ring_bkg_mak": 517, "ring_mak": 452, "ringbackgroundestim": [378, 431], "ringbackgroundmak": [163, 166, 417, 452, 474, 517], "rise": [133, 232, 463, 557], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 398], "rm": [145, 146, 150, 395, 448, 472, 509, 511, 512, 513, 526, 555, 556, 557, 558, 559, 560], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [106, 107, 110, 145, 146, 147, 429, 446], "rmf_ob": 106, "rmffile": 106, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 282, 321, 323, 326, 327, 328, 329, 372], "rnltdq5a": 449, "roadmap": [376, 379, 388, 397, 412, 433], "roberta": [431, 432], "robust": [372, 432], "roi": [67, 388, 470, 485, 566], "roi_max": 388, "role": [431, 474], "rolf": 411, "rolk": 566, "rolke2005": [566, 569], "roll": 483, "room": 382, "root": [19, 20, 26, 122, 123, 132, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 291, 294, 372, 390, 423, 450, 495, 505, 567, 569], "rosillo": 434, "rotang": 459, "rotat": [51, 54, 171, 172, 176, 181, 220, 228, 231, 459, 516, 524, 525], "rough": [72, 388], "roughli": [117, 375, 380, 386, 388, 391, 392, 430, 452], "round": [87, 91, 188, 189, 191, 193, 197, 200, 201, 446, 519], "round_to_edg": [186, 187, 196, 199], "round_trip": [16, 84, 90, 104, 123], "routin": 411, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 137, 145, 307, 343, 366, 387, 396, 399, 434, 437, 446, 449, 459, 460, 470, 472, 475, 482, 484, 485, 493, 502], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 470], "row_label": 366, "row_specifi": [83, 87, 91], "royalblu": 467, "rpovid": 387, "rspec": [67, 470], "rst": [375, 377, 392, 398, 401, 402, 418, 423], "rtd": 432, "rtol": [132, 347, 372], "rtol_ax": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 196, 197, 199, 200, 201], "rtol_wc": 199, "ruben": 431, "rub\u00e9n": 431, "ruiz": [380, 388, 392, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 431, 432, 433], "rule": [87, 91, 257, 275, 310, 398, 475, 519], "run": [16, 82, 83, 84, 88, 90, 93, 101, 103, 104, 108, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 137, 138, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 196, 199, 206, 319, 320, 346, 365, 371, 372, 373, 379, 380, 382, 385, 387, 388, 389, 392, 394, 396, 400, 401, 402, 403, 408, 414, 415, 418, 419, 430, 432, 433, 437, 441, 442, 443, 444, 449, 450, 451, 452, 454, 455, 456, 458, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 492, 493, 503, 504, 505, 507, 512, 514, 516, 517, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "run_fit": [15, 447, 451, 491], "run_id": [483, 493], "run_multiprocess": 507, "runner": [16, 336, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 533, 539, 542, 555, 561, 562], "runtim": [381, 399], "runtimewarn": [448, 458, 485, 555], "rx": 443, "rxj": 443, "rxj1713_2016_250gev": 531, "r\u00e9gi": [378, 381, 382, 386, 387, 389, 391, 393, 394, 395, 396, 397, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "r\u00e9my": [390, 423, 425, 426, 434], "s0167947313003204": 139, "s180": 288, "s2": 268, "s3": 268, "s_0": 507, "s_1": 507, "safari": [87, 91], "safe": [99, 101, 102, 105, 109, 110, 146, 147, 153, 158, 161, 166, 174, 372, 384, 386, 398, 417, 419, 420, 434, 435, 436, 437, 443, 446, 471, 476, 492, 503, 565], "safe_mask": [16, 102, 109, 447, 451, 452, 454, 491], "safe_mask_mak": [164, 443, 467, 474, 514, 516, 517], "safe_mask_mask": [446, 448, 456, 465, 474], "safemask": 484, "safemask_mak": 484, "safemaskconfig": 16, "safemaskmak": [164, 166, 393, 417, 418, 423, 425, 426, 438, 443, 446, 448, 456, 462, 465, 467, 474, 476, 484, 491, 492, 514, 515, 516, 517], "safeti": 398, "sagittariu": [33, 38], "saha": 431, "sai": [74, 377, 391, 567], "said": [372, 377, 379, 484, 485, 567], "sake": [458, 472], "saldana": [221, 222, 437, 442, 533], "saldana21": 533, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 91, 95, 100, 102, 105, 106, 109, 110, 121, 132, 137, 138, 149, 150, 156, 157, 158, 159, 161, 162, 164, 185, 186, 187, 188, 189, 191, 192, 195, 196, 197, 199, 200, 201, 273, 282, 288, 365, 372, 375, 380, 382, 384, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 404, 405, 415, 416, 420, 423, 437, 444, 447, 448, 449, 454, 455, 458, 462, 464, 467, 470, 471, 475, 476, 477, 478, 479, 480, 483, 484, 487, 491, 503, 504, 505, 511, 519, 520, 567], "sampl": [47, 93, 103, 108, 132, 147, 149, 155, 157, 158, 159, 161, 188, 189, 191, 197, 199, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 280, 282, 312, 321, 326, 327, 328, 329, 376, 384, 386, 387, 390, 392, 404, 411, 413, 415, 416, 419, 425, 432, 434, 437, 438, 440, 448, 461, 463, 471, 472, 487, 503, 504, 507, 512, 515, 519], "sample_axi": 321, "sample_background": [103, 108, 417], "sample_coord": [147, 158, 161, 188, 189, 191, 197, 200, 201, 417, 419, 434], "sample_edisp": [103, 108], "sample_powerlaw": 391, "sample_psf": [103, 108], "sample_sourc": [103, 108], "sample_spher": [427, 571], "sample_tim": [218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 423, 434], "sampler": [103, 321, 381, 385, 419, 423, 458], "sampler_kwarg": 93, "saniti": 431, "satisfi": [141, 165, 187, 188, 189, 299, 477, 507], "save": [15, 19, 20, 26, 83, 100, 132, 203, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 372, 380, 388, 396, 400, 442, 454, 455, 458, 472, 476, 477, 484, 504], "savefig": [350, 408], "savez": 203, "saw": 409, "sbpl": [258, 395, 478], "sc": [87, 91], "scalar": [87, 91, 156, 187, 188, 189, 191, 197, 200, 201, 299, 391, 425, 436, 438, 475, 519], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 104, 105, 110, 117, 123, 125, 126, 129, 149, 165, 193, 197, 198, 199, 201, 209, 211, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 268, 269, 270, 277, 280, 298, 311, 312, 313, 329, 353, 354, 355, 365, 373, 381, 386, 387, 390, 395, 418, 423, 424, 432, 435, 436, 437, 447, 450, 459, 460, 463, 464, 465, 466, 469, 470, 473, 474, 475, 478, 479, 480, 482, 491, 493, 495, 533, 554, 555, 556, 557, 558, 559, 560, 561, 562], "scale10": [19, 20, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 400, 543], "scale_method": [19, 20, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 400, 543], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 469], "scaled_featur": 298, "scaled_features_irf": [297, 298, 479], "scaledregulargridinterpol": [68, 221, 418, 433], "scalespectralmodel": [125, 126, 129, 252, 395, 478], "scan": [19, 20, 95, 122, 124, 125, 126, 129, 130, 206, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 387, 396, 423, 460, 465, 480, 505, 507], "scan_max": [19, 20, 125, 129, 132, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 442, 465, 472], "scan_min": [19, 20, 125, 129, 132, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 442, 472], "scan_n_sigma": [19, 20, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 472], "scan_n_valu": [19, 20, 125, 129, 130, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 442, 472, 480], "scan_prior": 480, "scan_valu": [19, 20, 206, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 460, 472], "scargl": [387, 431, 463], "scatter": [219, 241, 393, 450, 456, 524, 525], "scenario": [87, 91, 377, 384, 394, 404, 475, 478, 496, 568], "scengin": [87, 91], "schedul": 381, "schema": [15, 16, 84, 90, 104, 123, 388, 391], "schema_gener": [16, 84, 90, 104, 123], "schema_json": [16, 84, 90, 104, 123], "scheme": [16, 84, 90, 101, 104, 106, 107, 123, 187, 188, 189, 198, 233, 372, 378, 382, 384, 387, 394, 395, 396, 397, 399, 416, 423, 434, 438, 459, 473, 475, 478, 507, 512, 518, 519, 521], "school": 398, "scienc": [139, 188, 189, 191, 200, 201, 379, 381, 385, 388, 389, 392, 398, 409, 431, 432, 449, 455, 466, 475, 478, 479, 482, 483, 487, 495, 507, 541, 566, 567], "sciencedirect": 139, "scientif": [373, 379, 395, 398, 405], "scikit": [137, 372, 386, 389, 392, 432, 476], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 201, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 297, 311, 352, 365, 371, 372, 375, 381, 386, 389, 390, 392, 398, 409, 413, 414, 415, 416, 428, 429, 430, 433, 435, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 564, 569], "scipy_mvn": 204, "scipy_opt": 472, "scitool": 546, "sclx8qj8": 474, "scope": [385, 386, 387, 388, 391, 399, 496], "scratch": [148, 372, 382, 386, 402, 454, 476], "screen": [87, 91, 475, 493], "script": [6, 87, 91, 124, 335, 336, 337, 338, 339, 340, 341, 373, 378, 379, 381, 383, 386, 388, 391, 392, 398, 401, 402, 412, 413, 414, 415, 423, 424, 428, 431, 432, 433, 434, 438, 440, 446, 450, 452, 454, 455, 456, 457, 458, 460, 465, 466, 469, 470, 471, 472, 474, 477, 480, 483, 488, 491, 506, 507, 567], "scriptabl": 399, "scutum": [33, 38], "sdist": 402, "seaborn": 507, "search": [87, 91, 281, 283, 336, 372, 373, 408, 431, 432, 447, 450, 456, 457, 469, 470, 479, 491, 492, 493, 495, 507, 567], "season": 392, "sebastian": 423, "sec": [54, 83, 94, 100, 129, 329], "second": [42, 58, 83, 86, 87, 88, 91, 145, 268, 329, 332, 349, 353, 356, 361, 373, 380, 382, 384, 386, 390, 396, 398, 402, 417, 436, 446, 447, 450, 452, 454, 456, 457, 458, 459, 460, 465, 466, 469, 471, 472, 474, 475, 477, 480, 482, 487, 491, 502, 568, 571], "secpl": [261, 262, 263, 395, 478], "section": [19, 87, 91, 282, 284, 290, 372, 373, 375, 377, 386, 388, 389, 391, 395, 398, 402, 420, 433, 449, 454, 458, 459, 462, 466, 470, 472, 476, 477, 478, 493, 496, 507, 520, 565, 567, 571], "secur": 476, "sed": [118, 121, 122, 123, 124, 126, 132, 197, 221, 371, 388, 390, 396, 404, 411, 430, 444, 460, 470, 471, 491, 493, 505], "sed_fit": [440, 444, 445], "sed_fitting_gammacat_fermi": 392, "sed_typ": [19, 20, 26, 122, 123, 124, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 423, 441, 442, 444, 446, 447, 448, 455, 456, 460, 464, 466, 470, 493, 505, 507, 543], "sed_type_init": [71, 74, 75, 78, 122, 123, 124], "sed_type_plot_default": [122, 124], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 501], "sedov_taylor_end": [52, 53, 501], "seds_20230803": 64, "sedtypeenum": 123, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 105, 109, 110, 117, 119, 121, 124, 125, 126, 129, 131, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 164, 171, 173, 181, 186, 187, 189, 191, 193, 194, 196, 199, 201, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 274, 284, 290, 292, 293, 296, 299, 307, 323, 339, 362, 363, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 430, 431, 432, 433, 434, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 487, 491, 492, 493, 495, 503, 504, 507, 517, 518, 520, 546, 550, 551, 564, 566, 567, 568, 569, 571], "seed": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 147, 158, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 242, 249, 256, 268, 271, 282, 321, 322, 323, 326, 327, 328, 329, 372, 431, 458, 543], "seed_photon_field": [242, 543], "seem": [372, 379, 380, 383, 389, 393, 495], "seen": [372, 386, 393, 443, 450, 455, 465, 475, 478, 483], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 102, 105, 109, 110, 121, 168, 175, 188, 189, 190, 191, 193, 198, 200, 201, 210, 212, 219, 241, 257, 267, 279, 368, 369, 382, 384, 385, 386, 387, 388, 392, 394, 396, 399, 404, 406, 412, 415, 423, 427, 441, 446, 448, 449, 451, 452, 454, 455, 457, 458, 459, 462, 466, 467, 471, 472, 474, 475, 476, 479, 482, 484, 485, 487, 493, 505, 507, 511, 512, 516, 565, 567], "select_energi": [83, 504], "select_from_geom": [219, 241], "select_map_mask": 413, "select_mask": [83, 219, 241, 423, 477], "select_nested_model": 437, "select_obs_id": [91, 456], "select_observ": [91, 96, 388, 465, 479, 492, 507], "select_offset": [83, 458, 485, 504], "select_paramet": [83, 89, 467, 504], "select_phas": 382, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 219, 241, 386, 415, 423, 458, 459, 467, 477, 493, 504], "select_row_subset": 83, "select_sky_box": 386, "select_sky_circl": [91, 386], "select_tim": [83, 86, 88, 92, 100, 382, 396, 417, 459, 465, 504], "select_time_rang": 91, "selected_energi": 504, "selected_ev": 83, "selected_id": 504, "selected_obs_t": [91, 479, 492], "selected_offset": 504, "selected_region": 504, "selected_tim": 504, "selection_al": [117, 132], "selection_mask": [219, 241, 477], "selection_opt": [16, 117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132, 423, 442, 446, 447, 451, 452, 454, 455, 456, 460, 464, 465, 466, 467, 476, 484, 491], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [454, 462, 475, 491, 492], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 104, 122, 123, 124, 196, 197, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 257, 258, 260, 261, 262, 263, 266, 270, 372, 373, 383, 384, 386, 389, 395, 396, 399, 400, 419, 475, 478], "semant": [386, 397], "semi": 220, "semiaxi": [220, 228, 231, 524, 525, 526], "semilogi": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 441, 459], "semimajor": 470, "semiminor": 470, "semver": 397, "send": 401, "sens": [372, 379, 382, 386, 388, 391, 392, 393, 452], "sensibl": 479, "sensit": [118, 121, 122, 123, 124, 131, 273, 385, 392, 418, 420, 430, 431, 437, 438, 440, 445, 462, 482, 487, 495, 503, 512, 515, 519], "sensitivity_estim": 441, "sensitivity_t": 441, "sensitivityestim": [118, 412, 418, 441], "sent": 377, "sentenc": [377, 392, 398], "sep": [196, 381, 389, 395, 409, 410, 478], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 187, 196, 199, 295, 361, 372, 373, 378, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 419, 423, 429, 431, 432, 436, 437, 449, 452, 454, 456, 462, 466, 470, 477, 478, 479, 496, 504, 512, 513, 524, 525, 529, 530, 543, 566], "septemb": [381, 389, 391, 392, 397], "sequenc": [87, 91, 92, 100, 102, 109, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 210, 219, 241, 299, 402], "sequenti": [378, 446, 492], "seri": [87, 91, 124, 282, 287, 329, 381, 386, 387, 423, 463], "serial": [16, 84, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 123, 378, 383, 387, 388, 393, 396, 416, 419, 423, 425, 432, 434, 435, 436, 437, 438, 475, 478, 480, 495], "serialis": [20, 102, 105, 109, 110, 213, 214, 217, 219, 221, 223, 224, 225, 227, 229, 233, 235, 236, 238, 240, 241, 242, 244, 246, 247, 248, 250, 253, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 384, 386, 388, 391, 393, 394, 395, 415, 417, 419, 423, 428, 431, 433, 434, 436, 437, 438, 480, 491, 507, 520, 562], "serializ": [16, 84, 90, 104, 123], "serialize_as_ani": [16, 84, 90, 104, 123], "serialize_method": [87, 91], "serializiaton": 384, "serilis": [26, 215, 216, 218, 220, 226, 228, 230, 231, 232, 234, 243, 245, 249, 254, 255, 256, 257, 259, 266, 269, 271], "sersic": 395, "sersic2d": 395, "sersicspatialmodel": 395, "serv": [87, 91, 372, 377, 384, 388, 396, 402, 425, 469, 511], "server": [394, 404, 406, 487], "servic": 431, "session": [388, 398, 506], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 119, 121, 122, 123, 124, 125, 126, 128, 129, 132, 139, 145, 147, 158, 161, 164, 165, 168, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 268, 269, 270, 279, 319, 321, 372, 373, 378, 381, 382, 384, 385, 387, 388, 389, 390, 392, 396, 397, 398, 399, 400, 402, 404, 406, 419, 425, 427, 429, 431, 434, 437, 438, 441, 442, 443, 446, 448, 449, 450, 451, 454, 456, 457, 458, 459, 460, 464, 465, 467, 470, 471, 472, 474, 476, 478, 479, 480, 482, 484, 485, 487, 492, 495, 503, 504, 507, 516, 518, 519, 520, 543, 564, 567, 570, 571], "set_by_coord": [188, 189, 191, 197, 200, 201, 475, 519], "set_by_idx": [188, 189, 191, 197, 200, 201, 475, 519], "set_by_pix": [188, 189, 191, 197, 200, 201, 519], "set_log": 16, "set_model": [15, 394, 447, 451, 464, 491], "set_models_paramet": 394, "set_parameter_factor": [210, 212], "set_parameters_bound": [219, 241], "set_prior": [241, 400], "set_prop_cycl": 441, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 204, "set_titl": [442, 443, 446, 450, 452, 456, 467, 469, 472, 473, 474, 477, 516, 526, 530, 533], "set_unit": [444, 507], "set_xlabel": [441, 442, 443, 446, 449, 467, 472, 479, 480], "set_xlim": [444, 446, 447, 455, 467, 509, 533], "set_xscal": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "set_xtick": [526, 530], "set_ylabel": [441, 442, 443, 446, 460, 467, 469, 472, 479, 533], "set_ylim": [441, 444, 446, 447, 448, 464, 467, 509, 533], "set_yscal": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 460, 469, 509], "set_ytick": [526, 530], "setdefault": 195, "seterr": 372, "setlevel": 456, "setter": [373, 400, 417, 423, 471], "settl": [398, 571], "setup": [13, 374, 375, 376, 379, 384, 385, 389, 392, 400, 429, 433, 487, 567], "setuptool": [424, 567], "sever": [87, 91, 170, 377, 378, 379, 386, 387, 388, 391, 396, 399, 417, 418, 419, 423, 426, 435, 436, 437, 449, 455, 470, 482, 483, 484, 507, 567, 569], "seyfert": 288, "sf": [295, 569], "sgr": 493, "shade": [189, 197, 201, 472, 565], "shall": 375, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 101, 102, 105, 109, 110, 111, 115, 121, 122, 126, 127, 132, 136, 137, 138, 143, 145, 148, 186, 187, 188, 189, 191, 192, 194, 196, 197, 199, 200, 201, 204, 231, 280, 299, 312, 328, 383, 386, 390, 421, 436, 444, 446, 448, 451, 456, 459, 460, 463, 465, 470, 471, 473, 474, 475, 476, 478, 482, 483, 493, 505, 519, 520, 521, 526, 530], "shape_ax": [187, 199], "share": [188, 189, 191, 195, 197, 200, 201, 372, 377, 384, 387, 391, 394, 405, 423, 425, 437, 454, 455, 476, 477, 507, 567], "sharp": [232, 362, 363, 524], "she": [382, 387], "shear": 386, "sheet": [407, 507], "shell": [52, 53, 80, 254, 255, 383, 388, 395, 404, 406, 440, 478, 521, 530, 532, 567], "shell2": [254, 440, 478, 521, 532], "shell2d": 52, "shell2spatialmodel": [251, 255, 478, 530], "shellspatialmodel": [80, 251, 254, 395, 423, 478, 529], "sherpa": [107, 110, 145, 192, 193, 196, 197, 206, 284, 290, 371, 372, 381, 389, 390, 392, 393, 403, 404, 406, 413, 427, 428, 429, 430, 432, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 520, 541, 568], "sherpa_opt": 472, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 269, 408], "shim": 379, "shini": 357, "ship": [379, 380, 389, 412, 430, 449, 462, 467, 478, 507], "shock": [50, 52, 53, 500], "short": [372, 373, 376, 377, 381, 386, 389, 392, 395, 398, 420, 463, 465, 483, 507, 508, 566, 569, 572], "short_observ": 465, "shortcut": [82, 408, 425], "shorten": 423, "shorter": [288, 372, 373, 386, 392, 397, 420, 449, 465, 478, 567], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 102, 104, 105, 108, 109, 110, 112, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 140, 146, 147, 150, 156, 158, 161, 173, 178, 179, 184, 186, 187, 188, 189, 191, 193, 195, 196, 197, 199, 200, 201, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 299, 347, 361, 362, 363, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 397, 398, 399, 401, 402, 404, 406, 407, 408, 413, 415, 437, 448, 454, 457, 458, 459, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 484, 503, 505, 507, 512, 514, 519, 567, 568, 570, 571], "shoulder": 272, "shouldn": [83, 372, 375], "show": [11, 82, 87, 91, 126, 127, 128, 149, 168, 233, 369, 372, 373, 375, 384, 386, 387, 391, 392, 400, 402, 412, 413, 417, 425, 430, 431, 432, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492, 493, 499, 500, 501, 507, 509, 510, 511, 513, 514, 516, 518, 524, 533, 565, 567, 569, 572], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 456], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 507, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 480, "shower": [427, 482, 512], "shown": [19, 20, 26, 83, 156, 196, 197, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 367, 372, 379, 389, 390, 391, 399, 400, 402, 417, 419, 443, 446, 454, 456, 457, 458, 459, 463, 466, 467, 474, 477, 478, 479, 480, 482, 492, 504], "showwarn": 372, "si": [83, 187, 196, 199, 219, 241, 272, 520], "side": [199, 201, 281, 283, 372, 386], "sider": 571, "sidereal_tim": 373, "siejkowski": 432, "sig": [365, 568, 569, 570], "sight": 495, "sigma": [19, 20, 30, 32, 48, 49, 121, 122, 123, 124, 125, 129, 130, 132, 137, 138, 145, 146, 150, 156, 157, 158, 161, 204, 206, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 279, 281, 283, 289, 395, 400, 442, 456, 457, 462, 463, 464, 472, 476, 478, 480, 491, 505, 511, 525, 540, 556, 569], "sigma1": 31, "sigma2": 31, "sigma_": [204, 525], "sigma_1": [31, 49, 149, 473], "sigma_10tev": [395, 478], "sigma_1tev": [395, 478], "sigma_2": [31, 49, 149, 473], "sigma_3": [149, 473], "sigma_err": 457, "sigma_gauss": 231, "sigma_laplac": 231, "sigma_m": 525, "sigma_nod": 478, "sigma_to_t": 569, "sigmav": 495, "sign": [209, 211, 281, 283, 375, 398, 419, 434, 505, 569], "signal": [83, 102, 105, 108, 109, 110, 173, 201, 256, 281, 283, 296, 396, 441, 446, 447, 452, 455, 464, 476, 491, 495, 510, 514, 516, 566, 568, 569, 570], "signif_avg": 493, "signific": [77, 117, 121, 122, 123, 124, 131, 132, 139, 140, 279, 281, 283, 287, 362, 363, 370, 377, 378, 379, 380, 387, 388, 392, 393, 396, 398, 419, 420, 428, 431, 432, 437, 438, 440, 441, 446, 447, 453, 454, 455, 456, 457, 463, 464, 467, 470, 472, 484, 487, 491, 493, 503, 505, 507, 512, 519, 565, 566, 567], "significance_lima": 419, "significance_map": [452, 454], "significance_map_off": 452, "significance_mask": 476, "significance_mask_inv": 476, "significancemapestim": 419, "significantli": [423, 442, 458, 482, 566], "signoff": 375, "silent": 434, "silicon": [404, 406], "silvia": 415, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 363, 372, 375, 384, 385, 386, 387, 388, 391, 392, 393, 396, 423, 437, 448, 463, 475, 479, 480, 493, 503, 511, 567], "similarli": [378, 380, 396, 399, 423, 470, 472, 473, 475, 476, 478, 520], "simlat": 282, "simon": [436, 437, 438], "simpifi": 381, "simpl": [50, 52, 137, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 272, 372, 373, 384, 385, 386, 387, 388, 391, 396, 399, 400, 413, 423, 427, 431, 432, 437, 441, 443, 444, 446, 447, 448, 449, 451, 454, 463, 467, 472, 475, 476, 479, 485, 491, 492, 493, 497, 507, 565, 566, 567], "simple_norm": 201, "simple_rebin_lc": 387, "simplefilt": 507, "simpler": [176, 380, 385, 386, 394], "simplest": [441, 446, 463], "simplex": [206, 472], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 165, 206, 210, 212, 372, 386, 387, 396, 405, 434, 437, 441, 442, 443, 456, 471, 476, 477, 478, 493, 520, 567, 569], "simplic": [455, 458, 465, 472, 478, 480, 483], "simplif": [383, 395, 434], "simplifi": [132, 195, 379, 381, 383, 390, 396, 413, 416, 417, 418, 420, 423, 427, 434, 442, 444, 450, 512, 570], "simu": [462, 466, 480], "simul": [45, 82, 83, 88, 93, 102, 105, 108, 109, 110, 112, 147, 158, 161, 282, 329, 382, 385, 388, 392, 399, 400, 404, 411, 415, 417, 419, 425, 428, 430, 431, 432, 437, 438, 440, 445, 451, 454, 456, 461, 467, 468, 477, 480, 482, 487, 497, 503, 505, 512, 515, 564, 565], "simulate_3d": [392, 432, 440, 461, 462], "simulate_dataset": [413, 417, 418], "simulate_observ": 93, "simulated_d": 448, "simulated_data": 93, "simulated_model": 448, "simultan": [400, 466, 471, 478, 480, 503], "sin": [524, 525, 526, 560], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 83, 87, 88, 91, 125, 126, 129, 189, 199, 209, 211, 347, 372, 373, 378, 382, 386, 388, 389, 390, 391, 392, 396, 398, 399, 400, 402, 423, 433, 434, 435, 436, 437, 438, 442, 448, 452, 454, 466, 471, 477, 478, 480, 482, 484, 539, 542, 568, 571], "sine": [256, 383, 440, 521, 563], "sine_model": 560, "sinetemporalmodel": [264, 478, 560], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 121, 125, 126, 129, 132, 146, 147, 158, 160, 161, 164, 168, 170, 175, 178, 179, 184, 186, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 219, 241, 372, 378, 379, 382, 384, 385, 386, 387, 388, 389, 393, 394, 399, 400, 404, 411, 413, 418, 419, 431, 437, 438, 441, 446, 448, 450, 451, 452, 464, 466, 470, 471, 474, 475, 477, 480, 484, 485, 491, 493, 503, 505, 517, 519, 520, 564, 566], "singleobscubemak": 378, "singleobsimagemak": 378, "singleton": 323, "sinha": [384, 387, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 431, 432, 433, 434, 435, 436, 437, 438], "sink": 389, "sinu": [256, 478], "sinusoid": [256, 560], "sipocz": [389, 413, 415, 417, 419, 428, 429, 430, 431, 432, 433], "sip\u0151cz": 434, "sit": 375, "site": [336, 402, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 539, 542, 555, 567], "situat": [386, 387, 389, 512], "six": [391, 397], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 102, 103, 105, 108, 109, 110, 112, 113, 114, 116, 127, 132, 142, 143, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 161, 163, 164, 170, 171, 172, 175, 176, 177, 185, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 213, 214, 216, 217, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 321, 322, 326, 327, 328, 329, 360, 372, 380, 383, 385, 386, 404, 406, 436, 438, 441, 448, 452, 454, 458, 465, 467, 470, 474, 475, 476, 478, 482, 483, 484, 485, 493, 503, 518, 524, 525, 571], "skeleton": 388, "sketch": 388, "skill": [375, 408], "skimag": 432, "skip": [82, 156, 360, 373, 375, 384, 386, 392, 430, 477], "skip_miss": [82, 431], "sklearn": 372, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 102, 105, 108, 109, 110, 117, 137, 146, 147, 158, 161, 181, 187, 188, 189, 191, 196, 197, 199, 200, 201, 219, 241, 257, 269, 272, 274, 301, 305, 306, 330, 332, 334, 359, 371, 372, 373, 385, 391, 404, 413, 415, 429, 430, 432, 442, 446, 447, 449, 450, 452, 462, 466, 467, 470, 475, 478, 482, 483, 487, 489, 491, 492, 493, 495, 502, 503, 504, 507, 512, 513, 516, 518, 520, 524, 525, 529, 530, 531, 565, 566], "sky_circl": [91, 96, 465, 479, 492], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 114, 116, 387, 442, 464, 465, 470, 477, 478, 492, 535], "sky_model_pntpwl": 458, "sky_reg": 469, "sky_reg_rec": 469, "sky_region": 89, "skycood": 383, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 102, 105, 109, 110, 122, 124, 126, 128, 146, 147, 153, 158, 161, 171, 172, 174, 176, 178, 179, 181, 182, 184, 185, 187, 188, 189, 191, 194, 196, 197, 199, 200, 201, 202, 215, 216, 219, 220, 228, 231, 241, 243, 245, 254, 255, 257, 259, 265, 267, 269, 297, 298, 331, 332, 348, 368, 373, 383, 386, 396, 399, 441, 443, 446, 448, 449, 452, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 492, 493, 507, 511, 516, 518, 520, 528], "skycoord_from_t": 386, "skycoord_to_pixel_scale_angl": 386, "skycoordconfig": 16, "skycub": [378, 391, 429, 430, 431, 432], "skydiffusecub": [383, 395, 414, 419, 420, 432], "skydiffusemap": [383, 414], "skydir": [16, 83, 102, 105, 109, 110, 111, 115, 147, 158, 168, 186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 446, 447, 448, 451, 452, 454, 456, 457, 458, 459, 462, 464, 467, 469, 471, 473, 474, 475, 476, 478, 483, 484, 491, 492, 514, 516, 517, 518, 520, 525, 526, 527, 528], "skydirfunct": 495, "skydisk": 414, "skydiskelong": 383, "skyellips": [413, 414, 415, 416], "skygaussian": 413, "skygaussianelong": 383, "skyimag": [378, 391, 429, 430, 431, 432], "skyimagelist": 429, "skymap": [188, 189, 191, 197, 200, 201, 386, 428, 429, 459], "skymap_band": [459, 562], "skymap_region": 459, "skymask": 430, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 102, 105, 109, 110, 114, 116, 122, 124, 130, 132, 165, 206, 219, 237, 241, 274, 279, 383, 384, 385, 387, 393, 395, 396, 413, 417, 418, 419, 423, 432, 438, 442, 443, 444, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 462, 464, 465, 466, 467, 470, 471, 472, 477, 480, 483, 491, 492, 502, 503, 505, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564], "skypointsourc": 416, "skyregion": [100, 102, 105, 109, 110, 126, 146, 147, 153, 158, 161, 171, 172, 176, 191, 196, 197, 201, 219, 241, 330, 333, 386, 443, 458, 460, 476, 478, 511, 516, 520], "skyspatialmodel": [383, 432], "slack": [374, 375, 379, 395, 401, 407, 412, 413, 567], "slew": 95, "slice": [83, 87, 91, 100, 102, 105, 109, 110, 119, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 267, 269, 291, 378, 420, 457, 460, 471, 482, 519], "slice_by_coord": [122, 124, 438], "slice_by_energi": [100, 102, 105, 109, 110, 122, 124, 267, 420, 471], "slice_by_idx": [102, 105, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 420, 432, 434, 460, 475, 483], "slice_by_tim": [122, 124], "sliced_ax": 192, "sliced_geom": [186, 187, 196, 199], "slide": [381, 450, 470], "slider": 475, "sliderstyl": [454, 462, 475, 491, 492], "slightli": [117, 193], "slope": [27, 414], "slow": [87, 91, 206, 379, 388, 447, 472, 491, 492], "slower": [87, 91, 189, 372, 380, 390], "slowest": 402, "small": [363, 372, 378, 380, 386, 388, 389, 392, 394, 399, 402, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 464, 465, 475, 480, 482, 483, 484, 485, 525, 529, 530, 566, 567], "smaller": [27, 147, 158, 161, 176, 187, 188, 189, 191, 197, 200, 201, 365, 375, 413, 432, 458, 463, 465, 472, 475, 480, 525], "smallest": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 253, 258, 260, 261, 262, 263, 266, 270, 450], "smooth": [102, 105, 109, 110, 117, 127, 128, 137, 189, 201, 220, 258, 364, 367, 423, 428, 429, 430, 432, 433, 440, 452, 454, 456, 460, 462, 467, 471, 474, 475, 477, 483, 491, 492, 493, 521, 524, 553], "smooth_kernel": [102, 105], "smooth_radiu": [102, 105], "smoothbrokenpowerlawspectralmodel": [213, 252, 395, 418, 419, 478, 548], "sn": [45, 50, 52, 53], "sn_rate": [45, 497], "snippet": [373, 392, 507], "snr": [44, 50, 53, 67, 483, 500, 501], "snr_model": 501, "snrcat": [427, 470], "snrtruelovemcke": [50, 500, 501], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 101, 105, 110, 121, 125, 127, 129, 130, 132, 141, 146, 147, 153, 158, 161, 185, 188, 189, 191, 193, 197, 200, 201, 206, 209, 211, 231, 269, 279, 347, 355, 362, 363, 372, 373, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 403, 404, 406, 408, 413, 415, 423, 433, 435, 436, 443, 446, 448, 450, 451, 456, 457, 458, 462, 464, 469, 470, 472, 475, 476, 478, 480, 482, 483, 484, 487, 492, 507, 514, 516, 520, 526, 530, 567, 568, 569, 570], "social": 398, "soft": 288, "softwar": [188, 189, 191, 200, 201, 386, 387, 389, 398, 399, 402, 475, 507], "solar": 52, "sole": [382, 398], "solid": [186, 187, 196, 199, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269, 272, 388, 411, 413, 414, 415, 432, 452, 474, 475, 482, 510, 516, 566], "solid_angl": [186, 187, 196, 199, 475, 520], "solut": [19, 20, 26, 52, 145, 213, 214, 217, 221, 223, 224, 225, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 268, 270, 373, 375, 377, 379, 380, 385, 386, 388, 389, 390, 392, 394, 396, 400, 405, 503, 505, 507, 570], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 375, 380, 382, 383, 384, 385, 425, 507], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 104, 123, 174, 195, 299, 307, 375, 377, 378, 379, 380, 381, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 411, 413, 415, 423, 424, 426, 428, 430, 431, 432, 437, 441, 443, 444, 446, 448, 450, 451, 452, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 477, 478, 480, 482, 483, 492, 493, 495, 496, 503, 504, 507, 512, 517, 519, 566, 567, 568, 569, 571], "some_class": 372, "some_map": 156, "some_map_convolv": 156, "somehow": [380, 386, 391], "someon": [375, 377, 392], "someth": [87, 91, 372, 373, 374, 375, 377, 380, 386, 389, 390, 392, 402, 404, 406, 449, 470, 520, 567], "sometim": [19, 20, 83, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 350, 372, 375, 379, 386, 392, 402, 404, 472, 566, 571], "somewhat": [389, 482], "somewher": [375, 389, 402], "soon": [375, 386, 402], "sort": [82, 83, 87, 91, 101, 137, 335, 340, 341, 372, 389, 414, 493], "sort_kei": [335, 340, 341], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 377, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 402, 404, 409, 411, 413, 417, 418, 423, 424, 429, 430, 431, 432, 437, 438, 440, 442, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 481, 483, 484, 485, 487, 489, 491, 492, 495, 496, 501, 503, 504, 505, 507, 512, 515, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569], "source1": 478, "source2": 478, "source_1": [383, 388], "source_2": 383, "source_42": 388, "source_fermi_3fgl": 444, "source_fermi_3fhl": 444, "source_gammacat": 444, "source_irf_model": 383, "source_librari": 482, "source_model": 546, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 470, 493], "source_name_alia": 56, "source_name_kei": 56, "source_po": [452, 456, 474], "source_population_model": [392, 417], "source_posit": [441, 457, 479], "sourcebackground": 383, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 386, 423, 470, 476, 493, 502], "sourcecatalog1lhaaso": [55, 70, 470], "sourcecatalog2fhl": [55, 71, 470, 502], "sourcecatalog2hwc": [55, 72, 470, 502], "sourcecatalog2pc": [55, 470], "sourcecatalog3fgl": [55, 74, 444, 470, 502], "sourcecatalog3fhl": [55, 75, 444, 470, 477, 493], "sourcecatalog3hwc": [55, 76, 470, 502], "sourcecatalog3pc": [55, 470], "sourcecatalog4fgl": [55, 78, 425, 442, 470, 502], "sourcecataloggammacat": [55, 79, 444, 470], "sourcecataloghgp": [55, 80, 81, 470, 502], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 470, 502], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 412, 470], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 383, "sources_flux_map": 450, "sourcetempl": 383, "south": [458, 459], "south_z20_50h": [82, 143, 147, 148, 149, 158, 441, 449, 462, 466, 473, 482], "south_z40_50h": 482, "southern": 482, "space": [87, 91, 102, 105, 109, 110, 198, 201, 265, 266, 282, 310, 328, 371, 372, 382, 388, 394, 467, 471, 472, 475, 519, 543, 552], "span": 479, "spars": [187, 188, 189, 191, 196, 199, 200, 201, 414, 423, 431, 459, 475], "sparsif": 396, "sparsifi": [188, 189, 191, 200, 201], "spatail": 132, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 102, 105, 109, 110, 112, 122, 124, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 170, 186, 187, 188, 189, 191, 192, 194, 196, 197, 199, 200, 201, 210, 212, 215, 216, 219, 220, 227, 228, 231, 241, 243, 245, 251, 254, 255, 257, 259, 265, 267, 269, 279, 365, 367, 372, 378, 381, 384, 385, 386, 388, 390, 391, 396, 404, 412, 413, 415, 416, 417, 418, 420, 423, 431, 432, 434, 437, 438, 440, 442, 444, 447, 449, 451, 454, 455, 457, 458, 459, 460, 462, 466, 467, 470, 471, 474, 477, 481, 483, 487, 491, 495, 496, 503, 505, 507, 508, 518, 519, 532, 564, 565, 566], "spatial_bin_s": 112, "spatial_bin_size_min": 112, "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 114, 116, 132, 220, 227, 257, 267, 279, 387, 417, 442, 450, 454, 456, 457, 458, 459, 462, 464, 465, 470, 471, 477, 478, 483, 492, 523, 524, 525, 526, 527, 528, 529, 530, 531], "spatial_model_point": 458, "spatial_model_registri": 478, "spatial_par": 395, "spatial_typ": 395, "spatial_width": 112, "spatial_width_max": 112, "spatialbackground": 383, "spatialcircleconfig": 16, "spatialconst": 383, "spatialgaussian": 383, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 215, 216, 220, 227, 228, 231, 243, 245, 254, 255, 257, 265, 267, 269, 383, 395, 417, 432, 436, 470, 478, 492, 495, 502, 521, 564], "spatialtempl": 383, "spatiamodel": 156, "speak": 472, "spec": [80, 110, 372, 386, 428, 454, 459, 470, 482, 492], "spec_model_tru": 467, "special": [87, 91, 231, 372, 382, 384, 386, 387, 395, 398, 399, 412, 451, 458, 470, 471, 477, 478], "specialis": [386, 392], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 85, 86, 87, 91, 94, 102, 105, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 164, 178, 179, 184, 188, 189, 190, 191, 193, 197, 198, 199, 200, 201, 206, 233, 267, 279, 361, 371, 372, 373, 375, 377, 382, 384, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 402, 404, 405, 417, 420, 423, 425, 434, 435, 437, 442, 443, 446, 448, 449, 452, 454, 455, 460, 462, 466, 467, 471, 472, 473, 475, 476, 479, 480, 485, 487, 493, 503, 504, 505, 507, 509, 510, 511, 513, 518, 519, 520, 571], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 101, 102, 104, 105, 109, 110, 117, 119, 122, 123, 124, 125, 127, 129, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 174, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 219, 233, 241, 279, 299, 301, 305, 310, 359, 382, 389, 394, 397, 405, 416, 419, 423, 442, 448, 451, 454, 457, 458, 460, 462, 471, 472, 473, 474, 475, 477, 478, 482, 492, 503, 505, 518], "spectra": [26, 109, 110, 125, 130, 141, 206, 252, 272, 279, 378, 381, 383, 385, 387, 391, 395, 411, 415, 428, 432, 442, 443, 448, 449, 455, 459, 464, 466, 467, 471, 472, 474, 478, 480, 495, 503, 505, 507, 566], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 101, 102, 105, 109, 110, 117, 121, 122, 124, 125, 126, 129, 131, 132, 136, 156, 158, 161, 165, 210, 212, 213, 214, 217, 219, 221, 223, 224, 225, 227, 229, 233, 235, 236, 238, 239, 241, 242, 244, 246, 247, 248, 252, 253, 257, 258, 260, 261, 262, 263, 266, 267, 268, 270, 272, 273, 288, 326, 378, 381, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 396, 404, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 445, 449, 451, 454, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 472, 474, 476, 477, 480, 481, 482, 483, 491, 492, 495, 496, 502, 503, 504, 505, 506, 507, 508, 514, 515, 516, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568], "spectral_analysi": [440, 445, 446], "spectral_analysis_hli": [440, 445, 447], "spectral_analysis_rad_max": [440, 445, 448], "spectral_cub": 424, "spectral_index": [19, 20, 26, 52, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270], "spectral_index_error": [19, 20, 26, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 437], "spectral_irf_model": 383, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 109, 110, 114, 116, 121, 130, 132, 136, 165, 206, 219, 227, 239, 241, 257, 267, 279, 387, 390, 394, 395, 396, 400, 420, 442, 443, 444, 446, 448, 449, 450, 454, 455, 456, 457, 458, 459, 462, 464, 465, 466, 467, 470, 471, 472, 477, 478, 480, 483, 492, 493, 505, 514, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "spectral_model1": 466, "spectral_model2": 466, "spectral_model_pwl": 458, "spectral_model_registri": 478, "spectral_par": 395, "spectral_point": 388, "spectral_typ": 395, "spectralbackground": 383, "spectralbackgroundmodel": 384, "spectralcompoundmodel": 383, "spectralconst": 383, "spectralevalu": 383, "spectralexponentialcutoffpowerlaw3fgl": 391, "spectralgaussian": [383, 415], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 101, 117, 121, 122, 124, 126, 131, 136, 156, 158, 161, 165, 213, 214, 217, 219, 221, 223, 224, 225, 227, 229, 235, 236, 238, 241, 242, 244, 246, 247, 248, 253, 257, 258, 261, 262, 263, 266, 267, 270, 272, 383, 384, 387, 390, 396, 420, 423, 430, 437, 470, 478, 492, 493, 502, 521, 564], "spectralregion": 386, "spectraltempl": 383, "spectrum": [19, 20, 26, 72, 76, 98, 100, 101, 102, 105, 106, 109, 110, 117, 122, 124, 126, 129, 131, 133, 156, 158, 161, 166, 170, 174, 175, 188, 189, 191, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 272, 273, 282, 288, 369, 378, 383, 384, 387, 388, 391, 392, 393, 404, 414, 415, 416, 417, 419, 423, 425, 428, 429, 430, 431, 432, 434, 436, 440, 441, 443, 444, 445, 447, 454, 455, 458, 459, 460, 466, 469, 470, 471, 476, 478, 482, 483, 487, 491, 493, 495, 503, 507, 512, 515, 520, 534, 537, 538, 540, 541, 545, 546, 548, 549, 550, 551, 564, 567], "spectrum_analysi": 446, "spectrum_dataset": [141, 384, 467, 471], "spectrum_dataset_1": 384, "spectrum_dataset_2": 384, "spectrum_dataset_empti": [467, 474], "spectrum_dataset_mak": [467, 474], "spectrum_dataset_on_off": 467, "spectrum_fitting_with_sherpa": 392, "spectrum_mak": 441, "spectrum_simul": [392, 440, 445, 449], "spectrumanalysisiact": [388, 416, 430], "spectrumdataset": [98, 99, 100, 102, 105, 110, 129, 131, 141, 169, 170, 174, 175, 227, 393, 414, 415, 416, 417, 418, 419, 420, 423, 426, 441, 443, 446, 448, 449, 456, 465, 466, 467, 472, 474, 480, 503, 516, 568], "spectrumdatasetmak": [166, 417, 423, 441, 443, 446, 448, 449, 456, 465, 466, 467, 474, 516], "spectrumdatasetonoff": [98, 105, 106, 107, 109, 130, 131, 141, 169, 170, 206, 279, 369, 387, 414, 415, 416, 418, 419, 435, 436, 437, 441, 442, 443, 446, 447, 449, 455, 456, 464, 467, 471, 472, 474, 480, 505, 568], "spectrumdatasetonoffstack": 416, "spectrumdatasetsonoff": 384, "spectrumenergygroup": 431, "spectrumevalu": 419, "spectrumextract": [387, 414, 417, 430], "spectrumfit": [414, 430, 431, 432], "spectrumobserv": [384, 414, 430], "spectrumobservationlist": [414, 429], "spectrumobservationstack": 429, "spectrumonoffdataset": 387, "spectrumresult": 414, "spectrumsimul": [415, 429, 432], "spectrumstack": 431, "spectrumstat": 415, "specutil": 386, "speed": [132, 299, 375, 405, 415, 417, 425, 431, 432, 472], "spell": [377, 507], "spend": [385, 392], "spent": [379, 474], "sphere": [47, 327, 411, 413, 519, 524, 525, 528], "spherepointpick": 327, "spheric": [47, 372, 413, 519, 565], "sphericalcircleskyregion": [391, 467, 493], "sphinx": [375, 379, 392, 402, 414, 418, 425, 431, 432, 434, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "sphinx_gallery_conf": 402, "sphinx_gallery_thumbnail_numb": [373, 442, 446, 448, 450, 452, 457, 460, 473, 533], "spill": 474, "spin": [50, 51, 54, 415, 499], "spir": [413, 432], "spiral": [33, 34, 38, 45, 427], "spiralarm": [33, 38, 45, 431, 497], "spiralarm_index": [33, 34, 38], "spirit": 398, "split": [19, 20, 87, 91, 92, 114, 116, 122, 124, 188, 189, 191, 197, 200, 201, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 378, 380, 382, 384, 386, 387, 391, 393, 395, 404, 420, 438, 465, 478, 496, 572], "split_by_axi": [188, 189, 191, 197, 200, 201], "split_template_model": [114, 116], "sporad": 399, "spot": 372, "spread": [82, 88, 149, 158, 161, 372, 394, 420, 441, 450, 473, 512, 566], "spring": [382, 433], "sprint": [380, 381, 385, 388, 389, 390, 391, 393], "spuriou": 137, "sqrt": [19, 20, 30, 31, 32, 67, 101, 102, 105, 109, 110, 117, 122, 124, 127, 132, 188, 189, 191, 193, 197, 200, 201, 204, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 280, 289, 311, 312, 313, 384, 443, 446, 450, 454, 460, 462, 463, 467, 470, 472, 474, 475, 477, 483, 491, 492, 493, 505, 525, 526, 529, 530, 540, 569], "sqrt_space": [391, 417], "sqrt_t": [117, 121, 122, 124, 132, 137, 141, 281, 283, 365, 396, 408, 420, 443, 446, 447, 450, 452, 454, 456, 467, 470, 471, 476, 484, 491, 493, 505, 567, 569], "sqrt_ts_min": [141, 446], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 121, 122, 123, 124, 126, 132, 460, 464, 470, 471, 491, 493], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 102, 105, 122, 123, 145, 146, 147, 153, 158, 161, 164, 185, 199, 201, 267, 286, 387, 390, 420, 476, 480, 495, 505, 519, 567, 568, 569, 570], "squash": [147, 186, 187, 190, 192, 193, 196, 198, 199, 437, 441, 452, 471, 475], "squeez": [441, 473], "sr": [142, 143, 144, 155, 186, 187, 196, 199, 216, 269, 272, 441, 449, 451, 454, 456, 462, 466, 470, 471, 473, 475, 478, 482, 483, 512, 523, 531], "src": [385, 442, 457, 503], "src_above_bkg": 457, "src_event": [458, 459], "src_posit": [458, 459], "srcmap": [187, 188, 189, 191, 200, 201, 475], "ssc": [58, 60, 61, 62, 64, 65, 242, 392, 546], "ssc_model": 242, "st": [53, 472, 483], "stabil": [19, 20, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 397, 462], "stabl": [11, 87, 91, 196, 206, 299, 379, 380, 381, 388, 389, 392, 397, 401, 402, 403, 405, 417, 418, 419, 425, 430, 432, 434, 472, 504], "stack": [16, 83, 86, 92, 100, 101, 102, 104, 105, 109, 110, 121, 122, 124, 146, 147, 153, 158, 161, 164, 188, 189, 190, 191, 196, 197, 200, 201, 204, 210, 212, 267, 342, 372, 384, 387, 388, 394, 399, 413, 416, 417, 420, 423, 428, 429, 434, 435, 437, 442, 443, 447, 451, 455, 456, 464, 467, 471, 472, 474, 479, 480, 491, 492, 504, 505, 514, 517, 566], "stack_dataset": [164, 467, 474], "stack_reduc": [100, 141, 206, 416, 443, 446, 448, 454, 455, 456, 467, 471, 472, 505], "stacked_dataset": [456, 457], "stacked_fit": 446, "stacked_on_off": 452, "stackedobscubemak": 378, "stackedobsimagemak": 378, "stackoverflow": 339, "stage": [375, 388, 452, 454, 466, 471, 503, 566], "stai": 384, "stand": 377, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 189, 201, 206, 273, 282, 298, 354, 355, 372, 373, 375, 377, 381, 383, 384, 385, 388, 390, 396, 398, 399, 408, 415, 416, 432, 438, 441, 442, 447, 449, 452, 455, 457, 459, 462, 465, 466, 469, 472, 475, 478, 479, 480, 482, 485, 487, 491, 503, 506, 511, 519, 565, 566, 567], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 297, 479], "standardis": [344, 345, 357, 431], "standardise_unit": [344, 358], "standpoint": 372, "stapel": 438, "star": [36, 40, 221], "starmap": [315, 319, 320], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 129, 137, 198, 218, 219, 226, 230, 232, 233, 234, 241, 249, 256, 268, 271, 372, 373, 375, 377, 379, 380, 381, 382, 385, 386, 388, 389, 397, 398, 400, 401, 402, 406, 407, 408, 409, 411, 416, 425, 428, 429, 430, 431, 432, 437, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 454, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 475, 478, 482, 483, 487, 491, 493, 494, 507, 511, 565], "start_po": [126, 332, 460], "startswith": 372, "stat": [6, 100, 101, 105, 110, 122, 124, 125, 126, 129, 130, 132, 206, 207, 209, 211, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 365, 372, 384, 392, 400, 402, 408, 415, 417, 418, 419, 420, 423, 429, 432, 433, 434, 438, 443, 444, 446, 447, 448, 454, 455, 456, 457, 460, 463, 467, 472, 480, 483, 491, 492, 505, 567, 568, 569], "stat_arrai": [99, 101, 102, 105, 109, 110, 400], "stat_contour": 206, "stat_kwarg": 101, "stat_max": [281, 283], "stat_nul": [122, 124, 125, 126, 129, 130, 132, 281, 283, 438, 450, 460, 505], "stat_per_bin": 384, "stat_profil": [206, 442, 472, 480, 507], "stat_scan": [101, 122, 124, 125, 126, 129, 130, 132, 206, 280, 442, 446, 472, 480, 505], "stat_sum": [99, 100, 101, 102, 105, 109, 110, 400, 436, 437, 454, 466, 471, 477, 507], "stat_surfac": [206, 420, 507], "stat_typ": [101, 102, 105, 109, 110, 418, 446, 454, 466, 471, 477], "state": [16, 45, 47, 198, 206, 372, 378, 382, 384, 388, 392, 394, 396, 442, 447, 491, 512, 533], "stateless": 399, "statement": [372, 375, 379, 436, 438, 496], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 108, 117, 121, 122, 124, 125, 126, 129, 130, 132, 149, 157, 168, 174, 175, 187, 188, 189, 191, 197, 198, 200, 201, 213, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 246, 247, 248, 249, 254, 255, 256, 258, 261, 262, 263, 268, 270, 271, 369, 380, 383, 402, 414, 431], "staticmethod": [383, 395, 400, 478, 480], "statist": [6, 19, 20, 26, 79, 99, 100, 101, 102, 105, 109, 110, 121, 122, 124, 125, 126, 129, 130, 132, 138, 141, 168, 206, 208, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 253, 258, 260, 261, 262, 263, 266, 270, 279, 280, 281, 283, 284, 285, 290, 296, 384, 387, 390, 391, 392, 394, 400, 414, 418, 419, 420, 423, 425, 437, 438, 441, 442, 447, 449, 450, 451, 452, 454, 456, 460, 462, 463, 464, 466, 467, 471, 472, 474, 480, 491, 492, 503, 505, 507, 514, 517, 565, 566], "statu": [19, 20, 26, 122, 124, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 372, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 433, 438, 477, 478], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 282, 298, 449, 463, 483], "stddev": 68, "stderr": 372, "stdout": [307, 372], "steadi": 442, "steep": 449, "stefan": [427, 438], "step": [19, 20, 26, 121, 125, 129, 130, 132, 206, 207, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 372, 375, 378, 379, 382, 383, 384, 386, 387, 388, 390, 393, 397, 400, 401, 402, 408, 425, 432, 433, 437, 441, 446, 448, 451, 454, 456, 457, 458, 459, 465, 466, 471, 472, 474, 478, 480, 491, 492, 493, 507, 515, 520], "stepprior": 400, "stepsiz": 163, "steradian": 196, "stewart": [132, 291, 450, 566], "stewart2009": [132, 566, 569], "stick": [375, 395, 413, 432, 472, 566], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 379, 380, 382, 385, 386, 389, 391, 392, 393, 396, 397, 399, 401, 402, 430, 431, 432, 478, 480, 493, 505, 529, 530, 567], "stipul": 398, "stone": [372, 392], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 129, 132, 198, 218, 219, 226, 230, 232, 233, 234, 241, 249, 256, 268, 271, 382, 408, 437, 447, 451, 452, 454, 465, 467, 472, 483, 491], "storag": [82, 507], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 122, 123, 124, 127, 129, 156, 169, 170, 188, 189, 191, 197, 200, 201, 206, 207, 209, 211, 219, 241, 355, 372, 375, 378, 380, 381, 382, 384, 385, 388, 390, 394, 396, 398, 399, 402, 420, 423, 424, 443, 448, 449, 458, 459, 463, 467, 471, 472, 473, 474, 475, 476, 479, 482, 483, 484, 485, 493, 503, 504, 507, 512, 513, 514, 519, 520, 543, 564, 565, 567, 571], "store_per_ob": 388, "store_trac": [206, 472], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 119, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 165, 168, 169, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 299, 311, 320, 335, 336, 337, 341, 354, 355, 357, 361, 365, 366, 368, 386, 399, 446, 448, 474, 478, 484], "str3": [87, 91], "straight": [373, 404, 507], "straightforward": [402, 570], "strang": 372, "strategi": [372, 379, 386, 437, 472, 570], "stream": 372, "streil": [400, 436, 437, 438], "strength": [51, 54, 400, 543], "stretch": [188, 189, 191, 197, 200, 201, 362, 363, 367, 450, 454, 460, 462, 474, 475, 477, 483, 491, 492, 493], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 104, 105, 123, 146, 147, 153, 158, 161, 164, 193, 199, 201, 267], "strict_bound": 193, "strictli": [16, 84, 90, 104, 123, 193], "strike": 503, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 104, 122, 123, 124, 125, 126, 129, 132, 149, 155, 157, 159, 164, 187, 188, 189, 191, 193, 194, 196, 197, 199, 200, 201, 209, 211, 219, 241, 299, 317, 361, 372, 385, 386, 389, 391, 398, 399, 411, 415, 423, 425, 447, 470, 476, 478, 491, 519, 520], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 385, 392, 446, 480], "stronger": 480, "strongli": [288, 387, 389, 398, 423, 451, 472, 480], "structur": [87, 91, 199, 295, 376, 377, 378, 381, 383, 385, 388, 392, 395, 398, 399, 410, 416, 417, 419, 423, 426, 438, 440, 460, 471, 474, 475, 476, 478, 487, 494, 495, 502, 504, 508, 519, 520, 567], "stuck": 567, "student": 375, "studi": [46, 272, 295, 385, 388, 396, 405, 432, 443, 444, 455, 456, 457, 460, 462, 465, 466, 472, 475, 478, 482, 497, 507, 516, 568], "stuff": [373, 402, 507], "stuff1": 372, "stuff2": 372, "style": [87, 91, 101, 188, 189, 191, 197, 200, 201, 369, 375, 381, 398, 427, 429, 454, 462, 473, 475, 491, 492, 507, 520], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 114, 116, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 188, 189, 190, 191, 193, 197, 198, 200, 201, 204, 372, 375, 379, 381, 382, 386, 391, 392, 393, 394, 399, 402, 411, 413, 417, 419, 420, 428, 430, 431, 456, 458, 474, 476, 478, 484, 485, 503, 506, 507, 515, 565, 567, 571], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 299, 386, 429, 432, 478, 480], "subcompon": [67, 80], "subfold": [380, 423], "submit": [377, 398], "submodul": [380, 413, 414, 419, 475, 493, 505], "subok": 299, "subpackag": [393, 399, 416, 423, 427], "subplot": [66, 67, 188, 189, 191, 197, 200, 201, 441, 443, 444, 446, 447, 448, 449, 450, 452, 454, 455, 456, 460, 464, 466, 467, 469, 472, 473, 475, 476, 477, 479, 480, 507, 509, 516, 526, 530, 533], "subplot_kw": [450, 452, 456, 467, 476, 516], "subplots_adjust": 469, "subsect": [392, 475], "subsequ": [287, 381], "subset": [82, 83, 87, 91, 125, 129, 132, 242, 399, 427, 428, 456, 467, 477, 482, 484, 506, 565], "subspac": 386, "substanti": [87, 91], "substitut": 568, "substr": [219, 241], "subtract": 448, "succed": 401, "succeed": 122, "success": [16, 84, 90, 101, 104, 122, 123, 124, 125, 126, 129, 130, 132, 205, 206, 207, 208, 400, 423, 443, 444, 446, 447, 448, 450, 454, 455, 456, 460, 464, 467, 472, 477, 483, 491, 492, 531], "successfulli": [101, 443, 444, 446, 447, 448, 454, 455, 456, 466, 467, 472, 483, 491, 492], "sudo": 405, "suffer": [389, 467], "suffic": 466, "suffici": [375, 378, 385, 398, 437], "suffix": [101, 122, 373, 383, 395, 401, 478, 519, 521], "suggest": [375, 377, 379, 382, 386, 392, 394, 396, 400, 450, 458, 459, 507, 567], "suit": [189, 372, 520], "suitabl": 189, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 102, 105, 109, 110, 124, 125, 126, 128, 129, 130, 132, 139, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 188, 189, 191, 197, 200, 201, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 272, 281, 283, 285, 368, 372, 382, 383, 385, 394, 396, 400, 414, 438, 454, 458, 467, 469, 471, 480, 483, 491, 492, 493, 503, 513, 566, 568], "sum_": 503, "sum_band": [188, 189], "sum_i": 127, "sum_j": 503, "sum_k": 503, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [188, 189, 191, 197, 200, 201, 360, 432, 452, 454, 460, 467, 471, 474, 476, 477, 483, 492], "sum_over_energy_group": [121, 125, 132, 456, 460], "summar": [381, 495], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 283, 307, 311, 321, 346, 359, 373, 375, 392, 410, 443, 447, 465, 466, 471, 482, 491, 507], "summaris": [372, 377, 379, 392], "summat": [281, 283, 378], "summer": 380, "sun": 41, "sunpi": [389, 392, 393], "super": [187, 189, 261, 262, 263, 440, 448, 458, 485, 521, 553, 555], "superexpcutoffpowerlaw3fglspectralmodel": [252, 395, 478, 549], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 252, 478, 550], "superexpcutoffpowerlaw4fglspectralmodel": [252, 395, 478, 551], "superflu": [382, 467], "supernova": [28, 52, 443, 457, 478, 497, 498], "superpixel": 187, "supersed": [187, 188, 189, 199, 200, 201], "supervisor": 388, "suppli": [19, 20, 26, 87, 91, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 442, 466], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 102, 105, 109, 110, 113, 124, 140, 151, 156, 187, 188, 189, 190, 191, 193, 198, 199, 200, 201, 206, 219, 241, 371, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 405, 409, 412, 413, 415, 416, 417, 418, 419, 420, 423, 425, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 447, 449, 451, 454, 456, 462, 466, 469, 470, 471, 475, 480, 482, 483, 484, 485, 491, 506, 512, 519, 520, 562, 564, 565, 567], "suppos": [233, 268, 377, 384, 566, 568], "suppress": [145, 146, 150, 507], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372, 375, 377, 388, 401, 446, 464, 475, 507, 567], "surfac": [28, 30, 35, 36, 39, 40, 45, 206, 257, 272, 325, 391, 420, 472, 478, 497], "surface_brightness_err": 470, "surprisingli": 386, "surround": [52, 317, 372], "survei": [63, 67, 125, 221, 379, 382, 392, 408, 440, 482, 487, 488, 497, 502, 507, 566], "survey_map": [440, 488, 489], "suspect": 569, "suss": [381, 398], "svg": 372, "swap": 187, "swept": 52, "swh": 398, "swhid": 398, "switch": [279, 372, 379, 382, 425, 429], "switcher": 401, "sy": [372, 407], "syllabl": 507, "symbol": 476, "symmetr": [102, 105, 109, 110, 121, 130, 132, 176, 185, 189, 228, 372, 383, 413, 425, 428, 444, 466, 474, 480, 482, 495, 505, 513, 524, 525, 569], "symmetri": [189, 413], "sync": 432, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 398, "synchrotron": [242, 419, 543], "syntact": [87, 91], "syntax": [16, 87, 91, 373, 388, 391, 417, 434, 567], "synthesi": [497, 498], "synthet": 411, "system": [11, 83, 87, 91, 143, 151, 152, 187, 188, 189, 191, 194, 196, 199, 200, 201, 219, 241, 372, 378, 383, 385, 389, 392, 393, 397, 398, 400, 405, 413, 431, 437, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 518, 519, 565, 567, 571], "systemat": [383, 396, 398, 399, 420, 446, 464, 474, 505, 566, 568], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 104, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130, 132, 139, 140, 145, 185, 198, 219, 233, 241, 279, 281, 282, 283, 297, 344, 348, 371, 372, 373, 375, 377, 379, 380, 382, 384, 386, 388, 389, 390, 391, 392, 395, 396, 397, 399, 402, 403, 404, 406, 408, 420, 424, 427, 428, 429, 432, 437, 441, 442, 443, 446, 451, 454, 456, 457, 460, 462, 463, 464, 467, 469, 470, 472, 474, 475, 476, 478, 479, 480, 482, 483, 495, 499, 500, 501, 503, 505, 507, 516, 554, 555, 556, 557, 558, 559, 560, 565, 566, 567, 570, 571], "t0": [226, 249, 458, 465, 466, 555, 559], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 287, 512, 555, 556, 557, 558, 559, 560, 568], "t_0": 559, "t_b": 568, "t_decai": [232, 557], "t_delta": [103, 108, 198, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271], "t_i": 287, "t_j": 503, "t_live": [83, 88], "t_max": [218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 385, 396], "t_min": [218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 385, 396], "t_observ": [83, 88], "t_r": 233, "t_ref": [226, 230, 232, 233, 234, 249, 256, 268, 436, 437, 458, 459, 466, 478, 555, 556, 557, 558, 559, 560, 561, 562], "t_rise": [232, 557], "t_start": [86, 504], "t_stop": [52, 86, 504], "ta": 282, "ta2": 282, "ta3": 282, "tab": [145, 377, 454, 460, 464, 480, 516], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 457, "table_class": [87, 91], "table_compon": [67, 470], "table_filenam": 26, "table_from_row_data": 437, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 470], "table_model": [270, 395], "table_oth": 342, "tableau": 507, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [383, 433], "tablepsf": [393, 411, 413], "tablepsfcheck": 429, "tabul": 495, "tabular": [478, 552], "tackl": 381, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 173, 174, 175, 188, 189, 191, 197, 200, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 397, 400, 401, 420, 434, 473, 478, 480, 526, 530], "tail": [482, 567], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 105, 109, 110, 121, 143, 163, 165, 197, 199, 206, 219, 241, 257, 347, 370, 372, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 396, 402, 418, 419, 420, 423, 425, 433, 434, 436, 437, 438, 441, 443, 446, 448, 449, 458, 459, 460, 466, 467, 472, 474, 475, 476, 478, 479, 480, 482, 492, 493, 504, 507, 520, 536, 568, 569, 570], "taken": [15, 27, 87, 91, 102, 105, 109, 110, 122, 124, 148, 156, 175, 181, 183, 197, 198, 201, 206, 290, 373, 377, 381, 385, 436, 442, 446, 454, 455, 467, 473, 476, 477, 482, 493, 503, 505, 516, 517, 569], "talk": [375, 377, 379, 389, 398], "tan": [189, 196, 386, 415, 446, 475, 483, 516], "tandem": 495, "tangent": [171, 216, 220, 228, 231, 243, 254, 255, 259, 265, 269], "tangenti": [187, 520], "tar": [402, 482], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 102, 105, 109, 110, 113, 117, 121, 123, 132, 146, 147, 158, 161, 178, 179, 183, 184, 188, 189, 191, 193, 197, 200, 201, 378, 379, 385, 398, 401, 429, 443, 448, 456, 465, 474, 476, 492], "target_nam": 516, "target_posit": [171, 443, 446, 448, 456, 464, 465, 492], "target_radec": 88, "targetmetadata": [90, 123], "task": [320, 392, 396, 398, 399, 401, 402, 433, 447, 450, 474, 475, 483, 487, 491, 507, 515, 565, 567, 571], "task_nam": 320, "tast": 567, "tau": [26, 51, 54, 400, 469, 533], "tau_0": 51, "taul": [26, 469], "taur": [26, 469], "taylor": [52, 53], "tb00058": 139, "tbl": [87, 91], "tctypn": 458, "tcunin": 458, "tdelta_precis": 295, "team": [377, 381, 389, 392, 394, 398, 410, 431], "technic": [374, 375, 377, 385, 392, 394, 396, 398, 402, 451], "techniqu": [378, 387, 388, 390, 443, 446, 454, 457, 474, 476, 514, 517, 565], "tediou": 470, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 104, 148, 385, 386, 399, 404, 408, 409, 458, 464, 467, 479, 482, 483, 485], "tell": 448, "temp": [427, 459], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 104, 105, 110, 114, 116, 123, 165, 173, 187, 188, 189, 191, 192, 193, 199, 200, 201, 207, 219, 233, 241, 265, 266, 267, 268, 269, 270, 276, 278, 291, 294, 377, 383, 384, 388, 395, 420, 434, 437, 438, 440, 449, 450, 452, 459, 475, 476, 477, 478, 495, 516, 519, 521, 532, 539, 542, 547, 553, 561], "template_diffus": [477, 483], "template_model": 458, "templatelightcurvetemporalmodel": 434, "templatend": [265, 266, 478], "templatendspatialmodel": [251, 478], "templatendspectralmodel": [26, 252, 425, 436, 478], "templatenpredmodel": [237, 423], "templatephasecurvetemporalmodel": [264, 434, 478, 561], "templatespatialmodel": [67, 251, 394, 395, 420, 434, 435, 437, 438, 458, 477, 478, 483, 531], "templatespectralmodel": [219, 241, 252, 274, 395, 478, 483, 503, 539, 542, 547, 552], "templatetemporalmodel": 434, "tempo2": [467, 507], "tempor": [210, 212, 218, 219, 226, 230, 232, 233, 234, 241, 249, 256, 257, 264, 268, 271, 287, 383, 385, 395, 396, 416, 418, 419, 420, 425, 434, 436, 437, 438, 440, 442, 444, 447, 449, 454, 455, 456, 458, 461, 462, 463, 470, 471, 477, 483, 487, 491, 503, 504, 507, 508, 512, 515, 519, 563, 564, 566], "temporal_model": [257, 385, 458, 459, 466, 478, 554, 555, 556, 557, 558, 559, 560, 561, 562], "temporal_model1": 466, "temporal_model2": 466, "temporal_model_map": 459, "temporal_model_registri": 478, "temporal_typ": 395, "temporalbackground": 383, "temporalmodel": [218, 226, 230, 232, 233, 234, 249, 256, 257, 268, 383, 396, 419, 434, 436, 437, 521], "temporari": 487, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383], "ten": [378, 392], "tend": [372, 526], "tension": 463, "tensorflow": [390, 392], "tent": 401, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 234, 292, 296, 375, 377, 379, 381, 382, 386, 389, 392, 397, 399, 421, 425, 434, 442, 450, 472, 473, 567, 569, 570], "termin": [87, 91, 101, 388, 403, 404, 405, 406, 407, 443, 444, 446, 447, 448, 454, 455, 456, 467, 472, 483, 491, 492, 567], "terrestri": 571, "terrier": [378, 381, 382, 383, 384, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 399, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "test": [6, 94, 101, 114, 116, 119, 121, 122, 124, 125, 126, 129, 130, 132, 138, 156, 158, 161, 188, 189, 191, 197, 200, 201, 233, 279, 280, 281, 283, 286, 329, 346, 347, 348, 349, 350, 351, 352, 373, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 397, 400, 401, 402, 412, 414, 415, 417, 419, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 437, 443, 449, 450, 459, 462, 464, 465, 466, 471, 473, 505, 507, 511, 517, 561, 562, 566, 569], "test2": 466, "test_aeff3d": 473, "test_edisp": 473, "test_events_with_gti": 504, "test_gti": 504, "test_person_txt": 372, "test_plot": 372, "test_psf": 473, "test_someth": 372, "test_using_data_fil": 351, "test_using_scipi": 352, "testcod": 373, "testoutput": 373, "testpar": 400, "teststatisticnest": 437, "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 101, 102, 105, 109, 110, 111, 115, 117, 122, 124, 125, 137, 138, 142, 143, 145, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 168, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 257, 258, 260, 261, 262, 263, 266, 270, 272, 273, 297, 298, 319, 367, 373, 383, 395, 396, 399, 400, 408, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 501, 504, 505, 511, 512, 514, 516, 517, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565], "tevcat": [424, 470], "tevcat_nam": 71, "tevpi": 411, "tevtevtev1": 456, "tex": 373, "texliv": 373, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 105, 110, 122, 124, 132, 254, 255, 298, 335, 341, 361, 373, 380, 388, 398, 402, 447, 467, 473, 482, 491, 493, 524, 525, 526, 529, 530, 534, 550, 557, 567, 569], "textcolor": 361, "textkw": 361, "th": 193, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 131, 146, 147, 149, 150, 153, 157, 158, 159, 161, 165, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 279, 288, 350, 365, 372, 375, 377, 378, 379, 382, 385, 386, 387, 390, 391, 396, 398, 399, 402, 431, 434, 435, 436, 438, 441, 443, 454, 455, 458, 463, 464, 465, 472, 474, 476, 479, 480, 503, 520, 525, 526, 567, 569], "thank": [396, 417, 418, 423, 425, 474, 507], "thaw": 477, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 104, 108, 112, 123, 129, 133, 162, 268, 287, 319, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 402, 409, 420, 423, 425, 437, 438, 443, 444, 448, 469, 471, 472, 476, 477, 478, 479, 480, 482, 485, 495, 504, 505, 507, 512, 519, 520, 565, 566, 567, 568, 569, 571], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 104, 123, 210, 212, 219, 241, 299, 372, 373, 375, 377, 379, 380, 386, 388, 391, 398, 399, 401, 402, 408, 415, 431, 443, 444, 446, 449, 451, 454, 455, 457, 459, 464, 470, 471, 472, 475, 476, 478, 480, 482, 484, 487, 492, 504, 507, 516, 567, 569], "theme": [425, 432], "themselv": [87, 91, 388, 474, 476, 514], "theorem": [279, 505, 569], "theoret": 480, "therefor": [105, 378, 382, 385, 386, 387, 391, 393, 395, 405, 423, 443, 464, 467, 472, 475, 476, 479, 480, 493, 505, 569, 570], "thereof": 383, "thermal": [19, 543, 566], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 149, 155, 157, 159, 163, 171, 185, 194, 300, 303, 372, 420, 448, 483, 493, 524, 525, 529, 530], "theta2": [175, 185, 370, 431], "theta2_axi": 485, "theta2_max": 370, "theta2_min": 370, "theta2_t": 485, "theta_0": [33, 38], "theta_squared_axi": [185, 485], "thew": 470, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 102, 103, 104, 105, 108, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 168, 170, 171, 172, 174, 176, 178, 179, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 209, 211, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 279, 281, 283, 289, 299, 307, 317, 320, 323, 328, 329, 347, 350, 357, 359, 361, 362, 363, 367, 369, 371, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495, 496, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571], "thick": 369, "thin": [56, 311], "thing": [372, 375, 377, 380, 386, 387, 388, 389, 392, 396, 402, 411, 430, 448, 451, 466, 467, 476, 483], "think": [377, 389, 390, 392], "third": [62, 63, 87, 91, 373, 423, 470, 472, 475, 487, 493, 502], "thoma": [398, 431], "thorough": [475, 495], "those": [15, 83, 174, 188, 189, 191, 197, 200, 201, 206, 210, 212, 219, 241, 307, 361, 372, 375, 377, 379, 381, 386, 388, 391, 392, 393, 394, 395, 397, 402, 403, 404, 406, 407, 417, 420, 464, 472, 475, 476, 477, 479, 487, 493, 505, 507, 516, 571], "though": [15, 375, 380, 386, 387, 388, 390, 392, 447, 478, 491], "thought": [377, 386], "three": [87, 91, 156, 282, 372, 381, 384, 386, 398, 456, 458, 463, 464, 475, 480, 487, 512, 519, 566], "threshold": [67, 102, 109, 117, 122, 123, 124, 132, 137, 138, 145, 146, 150, 163, 174, 198, 279, 361, 362, 363, 386, 413, 419, 420, 441, 446, 448, 450, 456, 460, 464, 470, 471, 472, 474, 476, 482, 491, 503, 505], "threshold_alpha": 163, "through": [41, 87, 91, 298, 299, 369, 375, 377, 385, 386, 392, 396, 397, 405, 409, 423, 434, 442, 459, 463, 472, 474, 475, 476, 477, 483, 484, 507, 512, 519, 566, 569], "throughout": [13, 379, 381, 382, 386, 388, 430, 470], "throught": 460, "thrown": 478, "thu": [372, 379, 386, 389, 390, 392, 427, 441, 442, 451, 452, 456, 458, 564, 570], "thumbnail": 423, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 189, 381, 466], "tibaldo": 428, "tick": [436, 437], "tick_param": 441, "ticker": 361, "tight_layout": [472, 480, 526, 530], "tightli": 391, "tikonov": 400, "tild": [187, 199], "tile": [187, 189], "tilt": [247, 267, 383, 394, 395, 400, 412, 418, 451, 454, 455, 458, 459, 462, 471, 478, 483, 491, 492, 514, 520, 527, 547, 552], "tilt_prior": 400, "tim": 438, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 101, 102, 103, 104, 105, 108, 109, 110, 122, 123, 124, 129, 132, 133, 140, 164, 170, 181, 183, 188, 189, 190, 191, 192, 197, 198, 200, 201, 206, 209, 211, 218, 221, 226, 230, 232, 233, 234, 249, 256, 257, 268, 271, 282, 287, 295, 329, 349, 353, 354, 355, 356, 372, 373, 375, 377, 378, 379, 380, 382, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 404, 408, 412, 413, 416, 417, 418, 420, 423, 427, 429, 430, 431, 432, 433, 434, 436, 437, 438, 442, 446, 448, 449, 450, 452, 454, 456, 457, 459, 460, 464, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 491, 492, 493, 499, 500, 501, 503, 504, 505, 507, 512, 515, 520, 525, 526, 533, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570], "time_axi": [188, 189, 191, 192, 197, 200, 201, 282, 459, 475, 520], "time_bin": 387, "time_bin_end": 387, "time_bin_s": 387, "time_bin_start": 387, "time_bound": 198, "time_box": 91, "time_column": 396, "time_delta": [86, 198, 353, 356], "time_edg": [198, 463, 475], "time_filt": 89, "time_format": [124, 198, 437, 466], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 129, 447, 451, 452, 454, 459, 464, 465, 491], "time_map_axi": [198, 475], "time_map_axis_contigu": 475, "time_max": [100, 122, 124, 198, 386, 387, 388, 459, 464, 470, 475], "time_mid": [198, 463], "time_min": [100, 122, 124, 198, 386, 387, 388, 459, 464, 470, 475], "time_rang": [91, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 459, 554, 555, 556, 557, 558, 559, 560, 561, 562], "time_ref": [83, 85, 86, 91, 94, 192], "time_ref_default": 86, "time_ref_from_dict": 571, "time_relative_to_ref": 571, "time_seri": 282, "time_start": [85, 86, 91, 387], "time_step": 387, "time_stop": [85, 86, 91, 387], "time_sum": [86, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271], "timedelta": [87, 91, 94, 198, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 329, 353, 356, 571], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [377, 379, 431], "timemapaxi": [124, 140, 190, 192, 423, 438, 463, 465, 466], "timerangeconfig": 16, "timeref": 458, "timescal": [133, 226, 288, 397, 463], "timeseri": 387, "timesi": [94, 435, 437, 458], "timestamp": 372, "timeunit": 458, "timmer": 282, "timmer1995": 282, "tini": [456, 482], "tip": 507, "titl": [377, 460, 469], "tiziani": 429, "tke": 483, "tm": [87, 91], "tmax": 387, "tmid": [88, 437, 456, 474, 479, 492], "tmin": 387, "to_2d": [143, 485], "to_3d": [142, 436, 438], "to_bands_hdu": [186, 187, 196, 199], "to_binsz": [187, 196, 199, 423], "to_binsz_wc": 196, "to_contigu": [198, 475], "to_counts_hdulist": 107, "to_cub": [186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 420, 452, 520], "to_dict": [19, 20, 26, 99, 101, 102, 105, 109, 110, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 399, 480], "to_edisp_kernel": [150, 511], "to_edisp_kernel_map": [147, 423, 511], "to_energy_dependent_table_psf": 431, "to_even_npix": 199, "to_fits_head": 85, "to_fram": 194, "to_gti": [198, 438], "to_hdu": [188, 189, 200, 201], "to_hdulist": [102, 105, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 188, 189, 195, 196, 197, 200, 201, 475], "to_head": [84, 90, 104, 123, 187, 190, 192, 193, 198, 199, 399], "to_html": 372, "to_imag": [102, 105, 109, 110, 145, 146, 156, 158, 161, 186, 187, 196, 199, 394, 417, 418, 441, 452, 456, 471, 483, 517, 520], "to_json": [16, 84, 90, 104, 123], "to_map": [122, 124], "to_map_dataset": [105, 110], "to_mask": [102, 105, 109, 110, 469], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 423, 470], "to_node_typ": 193, "to_nsid": [187, 189], "to_odd_npix": 199, "to_panda": [87, 91], "to_parameters_t": [219, 241, 442, 443, 446, 447, 448, 451, 454, 472, 492], "to_pixel": [386, 446, 456, 469, 474, 478, 516, 524, 525, 526], "to_polygon": 386, "to_psf3d": [149, 157, 159], "to_python": [16, 84, 90, 104, 123], "to_region": [215, 216, 219, 220, 228, 231, 241, 245, 254, 255, 269, 386, 417, 478, 524, 525, 526], "to_region_map_dataset": [102, 105, 109, 110, 471], "to_region_nd_map": [146, 147, 153, 158, 161, 189, 197, 201, 420, 423, 483], "to_region_nd_map_histogram": [201, 437], "to_sed_typ": 396, "to_sherpa": [417, 431, 432], "to_spectrum": 423, "to_spectrum_dataset": [100, 102, 105, 109, 110, 394, 416, 418, 467, 471, 480], "to_st": 437, "to_str": [437, 441], "to_swap": [187, 188, 189], "to_tabl": [101, 124, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 192, 193, 197, 210, 212, 233, 423, 442, 444, 446, 447, 456, 460, 462, 464, 466, 470, 478, 493, 505], "to_table_hdu": [83, 86, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 192, 193, 475], "to_table_psf": 429, "to_template_sky_model": [219, 241], "to_template_spectral_model": [219, 241, 395], "to_unit": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 188, 189, 191, 197, 200, 201], "to_wc": [188, 189], "to_wcs_geom": [187, 196, 520], "to_wcs_til": [187, 189], "to_yaml": [16, 84, 90, 104, 123, 219, 241, 383, 399, 478, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "tob": 447, "todai": 398, "todo": [13, 79, 87, 91, 99, 156, 270, 373, 396, 414, 482, 497, 498, 571], "tof": 155, "togeth": [100, 102, 105, 109, 110, 125, 129, 219, 241, 369, 372, 385, 389, 392, 403, 415, 442, 452, 454, 455, 460, 465, 471, 472, 474, 477, 478, 479, 480, 485, 492, 503, 504, 567], "tol": 472, "toler": [86, 100, 129, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 349, 472], "tolist": 472, "tomato": 442, "toml": 420, "ton": [288, 482], "too": [372, 377, 378, 422, 423, 436, 437, 438, 472, 476], "took": 397, "tool": [6, 13, 188, 189, 191, 200, 201, 371, 375, 379, 381, 383, 385, 388, 389, 392, 398, 409, 417, 428, 431, 432, 457, 460, 466, 471, 472, 475, 479, 482, 483, 495, 507, 541, 565, 566], "toolbox": [388, 428], "top": [109, 110, 359, 368, 372, 377, 388, 392, 394, 405, 431, 448, 450, 456, 460, 463, 464, 466, 470, 474, 493, 507, 520, 565, 567, 571], "top_five_ts_3fhl": 493, "tophat2dkernel": 121, "topic": [377, 381, 392, 400, 493], "total": [51, 67, 99, 101, 102, 105, 109, 110, 125, 126, 129, 130, 136, 168, 183, 187, 207, 218, 226, 230, 232, 233, 234, 249, 256, 268, 271, 296, 380, 396, 400, 404, 406, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 480, 481, 483, 486, 488, 490, 491, 492, 493, 494, 497, 503, 507, 512, 522, 532, 543, 553, 563, 566], "total_jfact": 469, "total_jfact_decai": 469, "total_model": 383, "total_obstim": 474, "total_stat": [207, 208, 442, 472, 568], "touch": [86, 412], "tour": 487, "toward": [317, 379, 386, 392, 433], "tox": [336, 373, 375, 434, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 531, 539, 542, 555], "tqdm": 507, "trace": [206, 207, 208, 420, 472], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372], "track": [85, 94, 372, 381, 387, 398, 425, 477], "tracker": [375, 386], "tradition": [478, 568], "train": 397, "traitlet": [388, 399], "traittyp": 399, "transfer": 399, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 156, 190, 192, 193, 198, 199, 219, 241, 301, 305, 328, 333, 372, 386, 388, 396, 400, 411, 413, 429, 432, 450, 456, 474, 480, 519, 524, 525, 571], "transit": [27, 362, 363, 379, 412, 413, 431, 484], "transit_map": 484, "transit_numb": 484, "transitsmap_crab": 484, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 505], "transpar": 387, "transport": 475, "transpos": 432, "trapezoid": [142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 275, 310], "trapz": 310, "trapz_loglog": 418, "trash": 414, "travi": [417, 419, 423], "treat": [95, 404, 436, 437, 446, 458, 570], "treatment": [423, 446, 454, 566], "trend": 458, "tri": [77, 380, 386], "tributor": 398, "tricki": 386, "trigger": [350, 372, 401, 484], "trim": [102, 105, 146, 147, 153, 158, 161, 164, 199, 201, 267], "tripl": 149, "trivial": 379, "troubl": 567, "troubleshoot": [404, 405, 406], "trough": 463, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 121, 122, 123, 124, 125, 129, 130, 132, 136, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 164, 168, 174, 175, 178, 179, 181, 182, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 206, 207, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 296, 299, 307, 308, 311, 329, 341, 343, 360, 365, 369, 372, 378, 385, 386, 387, 388, 395, 396, 399, 414, 418, 419, 430, 432, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 483, 484, 489, 491, 492, 493, 497, 503, 505, 507, 512, 517, 519, 520, 523, 524, 525, 528, 529, 531, 552, 566, 569, 571], "truelov": 53, "truncat": [132, 317, 423], "truncation_valu": [284, 290], "trust": [16, 84, 90, 104, 123], "trustworthi": 400, "truth": 480, "try": [16, 77, 84, 90, 104, 123, 188, 189, 191, 197, 200, 201, 372, 373, 382, 386, 392, 401, 402, 408, 413, 444, 446, 448, 458, 459, 464, 470, 472, 475, 493, 567], "ts2": 282, "ts3": 282, "ts_image_estim": 456, "ts_scan": [122, 124], "ts_threshold": [140, 279], "ts_threshold_ul": [467, 505], "ts_to_sigma": [457, 569], "tsimageestim": 431, "tsmap_est": 365, "tsmapestim": [118, 139, 365, 393, 396, 418, 419, 421, 423, 437, 450, 456, 507], "tstart": [88, 91, 385, 387, 449, 458, 462, 465, 466, 482], "tstop": [88, 385, 387, 449, 458, 462, 465, 482], "tt": [86, 94, 354, 355, 398, 459, 465, 571], "tth_sec3": 193, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 123, 127, 132, 142, 143, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 161, 164, 169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 267, 270, 281, 283, 286, 311, 321, 328, 372, 475, 519], "turn": [83, 88, 373, 375, 386, 482, 564], "tutori": [82, 99, 119, 129, 131, 173, 372, 375, 376, 381, 384, 385, 386, 387, 388, 389, 390, 393, 402, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 507, 508, 510, 519, 564, 567], "tutorials_jupyt": [401, 487], "tutorials_python": 487, "tweak": [388, 423, 475], "twice": [121, 519, 570], "twinx": 441, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 101, 102, 105, 109, 110, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 157, 159, 160, 164, 169, 171, 187, 188, 189, 190, 191, 193, 196, 197, 199, 200, 201, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 329, 339, 361, 366, 369, 371, 372, 373, 375, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 396, 397, 398, 400, 401, 402, 404, 425, 431, 433, 437, 447, 448, 454, 455, 457, 460, 466, 470, 471, 472, 473, 475, 476, 478, 479, 480, 482, 484, 491, 492, 497, 503, 504, 505, 507, 516, 519, 520, 535, 569, 570], "txt": [124, 397, 399, 477, 483], "tyler": 425, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 101, 102, 104, 113, 121, 122, 123, 124, 126, 132, 162, 168, 186, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 299, 329, 378, 381, 382, 383, 384, 386, 387, 388, 391, 395, 396, 398, 400, 402, 403, 408, 416, 423, 429, 430, 431, 437, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 491, 492, 493, 495, 505, 507, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567], "typeerror": [16, 84, 90, 104, 123, 299, 386, 396, 400], "typic": [122, 378, 381, 383, 390, 394, 395, 396, 397, 399, 404, 405, 443, 448, 452, 460, 462, 464, 465, 470, 471, 473, 476, 478, 479, 495, 502, 503, 504, 512, 516, 565, 566], "typing_extens": [16, 84, 90, 104, 123], "typo": [372, 409, 435, 436], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 102, 105, 109, 110, 114, 116, 117, 122, 124, 126, 128, 132, 137, 138, 145, 147, 156, 186, 187, 188, 189, 191, 192, 196, 197, 198, 199, 200, 201, 213, 214, 217, 221, 223, 224, 225, 229, 233, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 272, 273, 282, 297, 298, 299, 319, 367, 372, 375, 379, 380, 381, 387, 388, 389, 390, 395, 396, 399, 400, 412, 413, 414, 431, 432, 433, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 497, 504, 505, 507, 509, 514, 516, 517, 520, 524, 526, 527, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561], "u03c3": 457, "u18": [33, 38], "uc": [87, 91], "ufunc": [188, 189, 191, 197, 200, 201, 448], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 125, 148, 238, 272, 273, 282, 289], "ul": [67, 121, 122, 124, 125, 126, 129, 130, 132, 280, 455, 460, 466, 470], "ultim": 372, "un": [384, 398, 420, 477], "unambigu": 478, "unbehaun": 438, "unbin": [384, 385, 432], "unboundlocalerror": 372, "uncertaint": 390, "uncertainti": [52, 102, 105, 109, 110, 281, 283, 376, 389, 430, 444, 446, 467, 472, 480, 492, 565, 566, 568], "unchang": [102, 105, 109, 110, 114, 116, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 186, 187, 188, 189, 191, 192, 196, 197, 199, 200, 201, 431], "unclear": [372, 382, 383, 389, 399], "uncom": [388, 482], "undefin": 570, "under": [72, 91, 139, 372, 376, 381, 389, 398, 432, 433, 442, 447, 487, 491, 503, 569, 570], "underestim": 505, "underflow": 198, "underli": [87, 91, 196, 385, 444, 470, 475, 480, 493, 495, 504, 516, 519], "underscor": 372, "understand": [388, 409, 417, 418, 443, 446, 447, 448, 451, 458, 459, 463, 465, 466, 475, 476, 477, 482, 491, 492, 567], "undertak": 392, "unexpect": 484, "unfold": 566, "unfreez": [19, 20, 26, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 543], "unfreeze_al": [210, 212, 477], "unfrozen": 514, "unheard": 567, "uni": 400, "uni_prior_stat_sum": 480, "unicod": [87, 91, 372], "unid": 67, "unidimension": 192, "unif": 417, "unifi": [87, 91, 376, 381, 386, 412, 415, 417, 418, 419, 420, 423, 432, 433, 566], "uniform": [156, 206, 328, 372, 381, 383, 384, 394, 396, 400, 414, 415, 419, 423, 443, 475, 480, 565], "uniform_filt": [127, 201], "uniformli": [385, 505], "uniformprior": [400, 480], "uninstal": 371, "union": [84, 86, 89, 90, 102, 104, 105, 123, 196, 334, 386, 387, 398, 399, 415, 503], "uniqu": [87, 91, 100, 145, 187, 188, 189, 190, 191, 197, 199, 200, 201, 210, 212, 219, 227, 241, 257, 267, 365, 382, 383, 384, 385, 395, 398, 418, 447, 471, 478, 484, 520, 564], "unique_id": 478, "unique_paramet": [210, 212], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 101, 102, 105, 107, 109, 110, 111, 114, 115, 116, 117, 122, 124, 126, 128, 132, 137, 138, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 168, 171, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 209, 211, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 282, 297, 298, 299, 329, 343, 344, 345, 347, 356, 357, 358, 361, 362, 363, 367, 373, 381, 383, 386, 388, 390, 395, 396, 400, 412, 413, 415, 423, 425, 431, 432, 434, 435, 436, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 497, 499, 500, 501, 504, 505, 507, 509, 511, 512, 514, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566], "unit_string_format": [437, 441], "unitbas": 299, "uniti": [127, 190, 269, 435, 526], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 227, 267], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [441, 449, 451, 454, 456, 462, 466, 482], "univers": [188, 189, 191, 197, 200, 201, 566], "univsers": 20, "unknown": [101, 283, 450, 472, 566, 568, 569], "unless": [90, 93, 95, 125, 126, 129, 132, 164, 299, 371, 378, 397, 399, 473], "unlik": [87, 91, 279, 379, 390], "unmaintain": 413, "unmask": [87, 91], "unnam": [87, 91, 194], "unnecessari": [423, 434, 454], "unneed": 437, "unphys": 570, "unrealist": 372, "unrel": 571, "unreli": 482, "unsaf": 372, "unstabl": [372, 482], "unsupport": 389, "untar": 482, "until": [372, 375, 379, 386, 397, 430], "unus": [388, 415, 417], "unusu": 377, "unweight": [105, 110], "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 101, 126, 128, 132, 149, 155, 157, 159, 196, 299, 372, 373, 376, 377, 379, 380, 381, 384, 386, 388, 389, 390, 392, 394, 398, 400, 402, 403, 404, 406, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 423, 427, 429, 430, 431, 432, 433, 446, 447, 454, 457, 458, 480, 482, 483, 520, 567], "upcast": 299, "upcom": [380, 381], "updat": [15, 16, 84, 87, 90, 91, 103, 104, 108, 123, 195, 209, 211, 219, 241, 269, 279, 319, 339, 372, 375, 377, 378, 379, 380, 381, 384, 389, 394, 396, 398, 399, 401, 402, 404, 405, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 429, 430, 431, 432, 434, 437, 438, 475, 478, 518, 519, 571], "update_config": 15, "update_forward_ref": [16, 84, 90, 104, 123], "update_from_dict": [209, 211], "update_link_label": [219, 241], "update_parameters_from_t": [219, 241], "upgrad": [187, 371, 397, 405], "upload": [389, 401, 482], "upon": [102, 105, 109, 110, 381, 451, 477, 482, 503], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 101, 121, 122, 123, 124, 125, 126, 129, 130, 132, 145, 193, 198, 206, 213, 214, 217, 218, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 242, 244, 246, 247, 248, 249, 253, 256, 258, 260, 261, 262, 263, 266, 268, 270, 271, 280, 281, 283, 399, 408, 419, 423, 430, 431, 432, 438, 446, 460, 464, 471, 474, 491, 503, 505], "upper_error": 124, "upsampl": [158, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 414, 434], "upsample_geom": 158, "upstream": [372, 375], "upward": [281, 283], "url": 380, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 275, 280, 282, 284, 295, 297, 299, 307, 310, 311, 312, 319, 320, 323, 328, 329, 336, 339, 355, 356, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 454, 455, 456, 459, 460, 462, 463, 465, 466, 467, 469, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 493, 495, 496, 497, 507, 509, 510, 511, 513, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 571, 572], "usabl": 372, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 104, 119, 123, 129, 131, 173, 186, 187, 196, 199, 323, 378, 382, 383, 385, 387, 391, 396, 416, 437, 438, 470, 474, 476, 477, 567], "use_cach": 242, "use_center_as_plot_label": 193, "use_enum_valu": [16, 84, 90, 104, 123], "use_evaluation_region": [219, 241], "use_fft": 201, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [168, 175, 178, 179, 181, 182, 423, 443], "useless": 482, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 372, 373, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 409, 416, 423, 424, 430, 431, 432, 434, 447, 457, 458, 459, 471, 473, 475, 476, 477, 478, 479, 487, 491, 504, 505, 506, 507, 512, 516, 519, 522, 528, 532, 553, 563, 564, 567], "userdataset": 384, "usernam": 375, "userwarn": [446, 448, 455, 456, 460, 483], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 567, "usual": [29, 82, 83, 122, 137, 142, 143, 144, 156, 197, 307, 372, 373, 375, 377, 378, 379, 380, 386, 387, 392, 398, 402, 437, 441, 442, 443, 444, 446, 448, 449, 451, 452, 456, 458, 459, 462, 463, 464, 465, 466, 469, 471, 476, 479, 484, 492, 495, 503, 507, 509, 510, 511, 513, 516, 520, 525, 564, 566, 567, 568], "ut1": 571, "utc": [86, 88, 104, 123, 353, 458, 464, 465, 475, 478, 554, 555, 556, 557, 558, 559, 560, 561, 562, 571], "utf": [87, 91], "utf8": [16, 84, 90, 104, 123], "util": [6, 90, 96, 104, 111, 114, 115, 116, 123, 124, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 177, 178, 179, 180, 181, 182, 183, 184, 185, 278, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 372, 381, 383, 384, 385, 386, 396, 411, 414, 415, 416, 417, 424, 425, 428, 429, 430, 431, 432, 433, 437, 438, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 495, 496, 507, 566], "utilis": [83, 138, 373, 441, 446, 450, 457, 463, 475, 479, 492, 504, 507, 514], "v": [26, 31, 32, 37, 87, 91, 149, 155, 157, 158, 159, 161, 170, 177, 195, 268, 279, 303, 375, 380, 387, 388, 399, 400, 401, 402, 425, 441, 464, 469, 479, 491], "v0": [95, 379, 380, 383, 384, 386, 389, 391, 392, 397, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 432, 433, 434, 458, 459, 473, 477], "v1": [13, 16, 83, 84, 88, 90, 104, 123, 372, 379, 381, 383, 388, 389, 390, 391, 397, 398, 401, 404, 406, 417, 418, 419, 425, 430, 434, 435, 436, 437, 438, 539, 542], "v2": [398, 399, 423, 431, 438, 482], "v3": 415, "v_0": [37, 49], "v_glat": 306, "v_glon": 306, "va": 524, "vagu": 377, "vain": 375, "val": [87, 91, 188, 189, 191, 197, 200, 201, 210, 212, 475, 519], "valfmt": 361, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 106, 122, 123, 126, 139, 160, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 299, 317, 371, 372, 381, 385, 388, 389, 398, 417, 425, 434, 443, 446, 472, 474, 475, 478, 483, 505, 507, 512, 566], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "validate_al": 399, "validate_assign": [16, 84, 90, 104, 123, 399], "validate_default": [16, 84, 90, 104, 123], "validate_earth_loc": 90, "validate_loc": 399, "validate_scalar": 90, "validate_zenith_angl": 399, "validationerror": [16, 84, 90, 104, 123, 399], "valle": 38, "valleespir": 497, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 104, 105, 109, 110, 112, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 164, 168, 174, 175, 177, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 283, 284, 286, 287, 288, 299, 303, 311, 312, 326, 329, 339, 343, 358, 361, 362, 363, 373, 375, 378, 383, 384, 386, 388, 390, 392, 395, 396, 399, 414, 417, 423, 434, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 482, 483, 484, 485, 491, 492, 493, 495, 499, 500, 501, 505, 507, 511, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 570], "value_rang": 91, "value_scan": 280, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 219, 241, 372, 386, 399], "values_equ": [87, 91], "values_err": 467, "values_scal": [142, 143, 144, 197, 201, 233, 265, 269, 270, 311, 435, 437, 459, 473], "vanilla": [87, 91], "var": [289, 404, 406], "vari": [68, 103, 108, 129, 156, 206, 311, 339, 384, 386, 387, 397, 417, 420, 440, 442, 451, 456, 457, 459, 468, 474, 478, 480, 483, 487, 503, 505, 512, 515, 564], "variability_amplitud": 463, "variability_amplitude_100": 463, "variability_amplitude_error": 463, "variability_amplitude_signific": 463, "variability_estim": [440, 463, 468], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 104, 123, 133, 201, 281, 283, 286, 287, 288, 289, 295, 310, 337, 372, 373, 375, 385, 387, 388, 402, 404, 406, 412, 413, 429, 430, 431, 437, 438, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492, 493, 512, 567, 568, 569], "varianc": [96, 134, 135, 288, 289, 298, 387, 438, 479, 514], "variant": 402, "variat": [133, 234, 288, 378, 388, 441, 463, 473, 474, 517, 569], "varieti": [383, 565], "variou": [119, 125, 126, 129, 130, 132, 138, 372, 378, 382, 384, 387, 396, 399, 402, 404, 423, 424, 438, 442, 444, 447, 450, 455, 457, 464, 472, 491, 503, 507, 565, 571], "vast": [389, 425], "vaughan": [289, 463], "vaughan2003": 289, "ve": [372, 373, 375, 567], "vector": [186, 187, 188, 189, 191, 196, 197, 199, 200, 201, 475, 511, 519], "vega": 432, "vel": 467, "vel_di": [45, 497], "vela": [66, 411, 444, 467, 493], "veloc": [31, 32, 37, 45, 49, 303, 306], "ver": 475, "verbos": [11, 82, 373, 395, 567, 569], "veri": [63, 87, 91, 137, 206, 362, 371, 372, 373, 374, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 402, 433, 441, 442, 449, 463, 470, 472, 475, 480, 483, 493, 503, 507, 520, 529, 530, 564, 566, 567, 568], "verif": [100, 219, 241, 335, 338, 455, 483], "verifi": [210, 212, 231, 279, 372, 385, 470, 507], "verifywarn": 507, "verita": [97, 404, 409, 483], "versa": 187, "version": [11, 78, 83, 85, 87, 88, 91, 124, 125, 126, 129, 176, 209, 211, 371, 373, 375, 376, 379, 380, 381, 382, 386, 389, 392, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 416, 417, 422, 424, 425, 427, 430, 431, 432, 434, 435, 437, 438, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 505, 567], "versu": [142, 148, 279, 281, 283, 482, 501], "vert": 248, "vertex": 386, "vhe": [443, 495], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 103, 108, 189, 194, 204, 371, 373, 375, 380, 384, 386, 387, 388, 389, 390, 391, 393, 395, 398, 399, 400, 401, 402, 404, 405, 412, 420, 428, 430, 431, 432, 436, 437, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 489, 491, 492, 493, 507, 511, 516, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 567, 571], "viabil": 399, "vice": 187, "victor": 427, "view": [83, 87, 91, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 157, 159, 160, 165, 188, 189, 191, 195, 197, 200, 201, 227, 301, 305, 359, 372, 386, 413, 418, 423, 425, 432, 433, 446, 448, 452, 454, 458, 471, 473, 474, 476, 482, 483, 507, 509, 510, 511, 512, 513, 514, 516, 566], "vika": 423, "vin\u00edciu": 430, "viridi": [448, 469], "virtual": [375, 402, 404, 405, 406, 567], "visibl": [87, 91, 362, 363, 380, 423, 441, 458, 484, 492, 493, 566], "vision": 377, "visit": 459, "visual": [6, 189, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 386, 418, 419, 437, 438, 446, 448, 452, 454, 456, 459, 472, 473, 479, 485, 492, 493, 507, 516, 521, 524, 565], "visualis": [369, 384, 386, 393, 419, 434, 448, 450, 473, 478, 480, 482, 507], "vline": [501, 524, 525], "vmax": [102, 105, 109, 110, 362, 363, 451, 454, 456, 462, 471, 475, 476, 483, 484, 491, 492, 516], "vmin": [102, 105, 109, 110, 362, 363, 450, 454, 462, 471, 475, 476, 483, 484, 491, 492, 516], "volum": [27, 192, 196, 199], "vorokh": [428, 429], "voruganti": [430, 431], "vstack": [83, 86, 385], "vuillaum": [398, 431], "vx": [303, 306, 397], "vy": [303, 306], "vz": [303, 306], "w": [26, 31, 49, 86, 185, 198, 296, 373, 397, 450, 452, 460, 469, 474, 478, 480, 516, 568, 570], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 102, 104, 117, 123, 125, 126, 129, 132, 164, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 365, 372, 375, 377, 378, 379, 380, 381, 382, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 402, 412, 415, 416, 417, 418, 419, 420, 427, 431, 432, 433, 434, 435, 436, 437, 442, 444, 446, 452, 454, 456, 474, 480, 482, 483, 484, 485, 493, 567], "wagner": 463, "wai": [33, 38, 83, 87, 91, 193, 282, 323, 329, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 392, 393, 396, 398, 404, 405, 406, 408, 411, 415, 431, 432, 444, 446, 448, 451, 454, 463, 470, 471, 472, 474, 475, 476, 477, 479, 482, 483, 484, 485, 487, 497, 504, 506, 507, 511, 520, 565, 567, 569], "wait": [372, 401, 402], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 104, 107, 123, 145, 171, 196, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 372, 374, 375, 377, 378, 379, 382, 386, 387, 388, 390, 391, 392, 402, 403, 404, 405, 406, 408, 409, 412, 432, 443, 446, 447, 448, 449, 451, 458, 459, 462, 464, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 491, 492, 493, 511, 564, 567, 568, 569, 570, 571], "ward": 297, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 104, 123, 189, 209, 210, 211, 212, 265, 266, 267, 269, 358, 397, 402, 414, 431, 436, 437, 438, 441, 449, 450, 451, 454, 455, 456, 458, 459, 462, 466, 467, 482, 483, 507, 531, 539, 542, 567], "warn_miss": 87, "warn_with_traceback": 372, "wasn": [379, 432], "watch": [483, 571], "water": [404, 484], "watson": 413, "wavelength": 391, "wavelet": [411, 429], "wc": [13, 16, 83, 102, 105, 109, 126, 163, 171, 172, 176, 187, 188, 189, 191, 196, 197, 199, 200, 201, 216, 219, 220, 228, 231, 241, 243, 254, 255, 259, 265, 269, 332, 367, 372, 378, 386, 391, 413, 414, 415, 417, 423, 431, 432, 436, 438, 446, 447, 450, 451, 452, 454, 456, 460, 464, 467, 469, 471, 473, 474, 476, 477, 478, 483, 491, 492, 493, 516, 519, 524, 525, 526, 531], "wcda": [57, 70], "wcs_geom": [196, 219, 241, 475, 520], "wcs_geom_3d": 475, "wcs_geom_cel": 475, "wcs_map": [200, 201, 365], "wcs_tile": [187, 189], "wcsax": [102, 105, 109, 110, 189, 196, 197, 201, 219, 241, 367, 369, 454, 475, 493, 523, 527, 528, 529], "wcsconfig": 16, "wcsgeom": [23, 83, 102, 105, 109, 110, 111, 113, 115, 121, 122, 132, 147, 156, 158, 168, 181, 182, 186, 187, 196, 200, 201, 215, 216, 220, 228, 231, 243, 245, 254, 255, 259, 265, 269, 373, 378, 386, 413, 416, 417, 418, 423, 436, 438, 446, 451, 456, 458, 459, 460, 462, 467, 469, 471, 473, 474, 475, 476, 478, 483, 484, 492, 493, 503, 505, 514, 516, 517, 520, 523, 525, 526, 527, 528], "wcslib": 372, "wcsmap": [188, 189, 191, 201, 434], "wcsndmap": [102, 105, 111, 115, 117, 132, 137, 156, 158, 161, 163, 165, 170, 171, 172, 173, 176, 181, 182, 187, 188, 189, 191, 197, 199, 200, 202, 203, 219, 241, 257, 265, 359, 365, 367, 378, 416, 417, 418, 420, 423, 425, 432, 434, 437, 438, 450, 451, 460, 469, 471, 474, 475, 483, 493, 503, 505, 513, 516], "wcsprm": 531, "wcsshape": 475, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 101, 132, 170, 196, 199, 209, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 273, 347, 372, 373, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 419, 423, 425, 430, 431, 432, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 489, 491, 492, 493, 504, 511, 512, 514, 516, 519, 530, 533, 543, 564, 567, 568, 569, 570, 571], "weak": [391, 480], "weaker": 279, "weakli": 476, "web": [87, 91, 380, 398, 401, 402, 408, 409, 423, 431, 470], "webpag": [374, 380, 392, 398, 401, 431, 434], "wedg": 386, "week": [375, 380, 390, 392, 397, 401], "weekli": [378, 381, 385, 386, 464], "wegen": [431, 432], "weigh": [158, 161, 480], "weight": [67, 105, 110, 146, 147, 153, 156, 158, 161, 187, 188, 189, 191, 196, 197, 199, 200, 201, 250, 267, 400, 433, 437, 457, 480, 503, 519], "weighted_chi2_paramet": 457, "weighted_kernel": 156, "welcom": [377, 386, 483], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 105, 110, 114, 116, 121, 122, 130, 187, 191, 193, 197, 199, 209, 213, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 362, 363, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 431, 432, 433, 437, 438, 442, 443, 449, 452, 457, 459, 464, 466, 471, 472, 473, 474, 475, 476, 478, 482, 483, 487, 491, 492, 493, 503, 504, 505, 516, 519, 520, 564, 565, 567, 569], "went": 412, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 133, 287, 372, 377, 378, 379, 380, 385, 387, 388, 389, 390, 391, 392, 393, 395, 397, 400, 402, 412, 415, 416, 417, 418, 419, 420, 423, 426, 431, 432, 435, 455, 467, 476, 480, 482, 570], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 273, 329, 373, 378, 386, 389, 391, 392, 399, 402, 410, 460, 469, 470, 472, 482, 483, 487, 492, 495, 503, 520, 552, 567, 568, 571], "whatev": [386, 388, 389, 567], "whatsnew": 401, "wheel": 389, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 121, 122, 123, 124, 136, 146, 147, 153, 158, 160, 161, 171, 174, 188, 189, 191, 193, 195, 197, 200, 201, 206, 207, 213, 214, 217, 219, 221, 223, 224, 225, 229, 233, 235, 236, 238, 241, 242, 244, 246, 247, 248, 250, 253, 258, 260, 261, 262, 263, 266, 269, 270, 311, 371, 372, 373, 375, 377, 378, 379, 382, 384, 386, 387, 389, 392, 397, 398, 399, 400, 405, 417, 425, 426, 431, 433, 436, 437, 438, 442, 448, 452, 456, 459, 460, 464, 465, 467, 470, 472, 474, 475, 478, 479, 482, 483, 503, 505, 507, 512, 514, 518, 519, 566, 568, 569, 570, 571], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 104, 122, 123, 124, 127, 132, 145, 146, 147, 153, 158, 161, 163, 174, 186, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 202, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 284, 287, 290, 291, 299, 336, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 404, 406, 408, 414, 426, 432, 441, 446, 451, 458, 459, 470, 474, 475, 476, 478, 480, 482, 483, 484, 493, 495, 503, 504, 507, 512, 519, 524, 525, 526, 529, 530, 533, 566, 567, 568, 569, 570, 571], "wherea": [378, 386, 389, 567], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 102, 104, 105, 107, 109, 110, 122, 123, 124, 125, 132, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 159, 160, 174, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 209, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 282, 299, 308, 335, 338, 340, 341, 369, 377, 379, 386, 389, 391, 392, 399, 437, 449, 462, 474, 475, 493, 519, 568, 569], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 107, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 168, 169, 174, 175, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 206, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 231, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 273, 279, 281, 282, 283, 287, 288, 289, 295, 297, 311, 321, 331, 332, 350, 359, 361, 366, 368, 371, 373, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 407, 409, 413, 414, 415, 417, 418, 419, 420, 423, 426, 432, 434, 437, 441, 442, 443, 446, 449, 450, 451, 452, 454, 457, 458, 459, 460, 463, 464, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 491, 492, 493, 497, 498, 503, 504, 505, 507, 509, 510, 511, 513, 514, 516, 518, 519, 520, 521, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570], "whichev": [187, 188, 189], "while": [87, 91, 105, 188, 189, 191, 193, 197, 200, 201, 372, 375, 377, 378, 379, 381, 384, 385, 387, 391, 393, 394, 396, 397, 398, 401, 402, 404, 441, 446, 448, 451, 459, 466, 467, 471, 473, 474, 475, 477, 478, 503, 505, 507, 518, 520, 567], "whilst": [373, 479, 487], "whippl": 97, "whirlwind": 487, "white": [288, 361, 362, 456, 467, 472, 477, 495, 520], "whitespac": 317, "who": [398, 469, 495], "whole": [95, 117, 165, 168, 175, 178, 179, 181, 182, 187, 188, 189, 191, 200, 201, 242, 272, 281, 283, 372, 378, 384, 387, 398, 443, 446, 454, 459, 464, 467, 471, 478, 483, 485, 564], "whose": [398, 402, 459, 513, 525], "why": [372, 373, 377, 379, 386, 472, 520], "wide": [379, 398, 399, 413, 432, 444, 455, 566], "wider": [465, 476, 514], "widget": [188, 189, 191, 197, 200, 201, 454, 462, 475, 491, 492], "width": [16, 27, 68, 83, 87, 91, 102, 105, 109, 110, 111, 112, 114, 115, 116, 117, 127, 132, 145, 146, 147, 150, 153, 156, 158, 161, 163, 168, 173, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 216, 219, 220, 228, 230, 231, 241, 243, 254, 255, 257, 259, 265, 267, 269, 362, 363, 388, 395, 433, 447, 448, 451, 452, 454, 456, 457, 458, 459, 460, 462, 464, 467, 469, 470, 471, 473, 474, 475, 476, 478, 483, 484, 491, 492, 493, 514, 516, 517, 518, 519, 520, 524, 525, 526, 528, 529, 530], "width_err": 470, "width_error": 68, "width_min": 196, "width_pix": [187, 188, 189], "widthconfig": 16, "wiki": [34, 83, 88, 423, 482], "wikipedia": [34, 83, 88, 328, 386, 390], "wilei": 139, "wilk": [279, 505, 569], "willing": 375, "wind": [50, 452, 457, 478, 498], "window": [112, 371, 372, 379, 389, 402, 403, 404, 406, 412, 428, 432, 450, 470, 566, 567, 569], "wise": [19, 20, 26, 87, 91, 137, 138, 189, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 400, 425, 452, 454, 503], "wish": [196, 375, 390, 457, 472], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [382, 383, 384, 387, 394, 396], "withdrawn": [376, 377, 382, 383, 384, 387, 394, 396], "within": [125, 128, 137, 187, 201, 218, 219, 220, 226, 230, 231, 232, 233, 234, 241, 249, 254, 256, 257, 268, 271, 371, 372, 373, 377, 381, 386, 388, 389, 390, 391, 392, 395, 397, 398, 400, 402, 403, 404, 406, 426, 429, 431, 435, 437, 447, 448, 454, 457, 464, 465, 466, 470, 473, 474, 475, 478, 479, 483, 487, 493, 503, 506, 507, 566], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 129, 148, 186, 187, 192, 196, 199, 369, 372, 375, 377, 380, 382, 386, 387, 388, 389, 391, 396, 402, 413, 414, 418, 447, 450, 454, 455, 469, 474, 475, 476, 491, 507, 518, 519, 520, 562, 567, 569], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 469], "wlhsvo_u": 474, "wo": 467, "wobbl": [95, 466, 482], "wobbleregionfind": 425, "wobbleregionsfind": 448, "wolfram": [326, 327], "women": 428, "won": [87, 91, 117, 121, 125, 129, 132, 344, 397, 454, 475, 482, 570], "wong": 415, "wood": [379, 429, 431, 432], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 507], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 124, 198, 336, 371, 372, 373, 375, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 424, 427, 428, 429, 430, 431, 432, 433, 434, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493, 503, 507, 517, 519, 531, 533, 539, 542, 555, 561, 562, 567], "workaround": 389, "workflow": [375, 380, 381, 388, 393, 397, 402, 417, 447, 452, 487, 491, 492, 508], "workshop": 381, "workspac": 375, "world": [83, 199, 219, 241, 372, 378, 456, 493, 519], "worst": 375, "worth": [372, 495], "would": [16, 84, 87, 90, 91, 95, 104, 123, 188, 189, 191, 197, 200, 201, 372, 375, 378, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 414, 423, 444, 446, 449, 450, 462, 472, 475, 476, 478, 480, 483, 520], "wouldn": 386, "wp": [401, 482], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 193, 253, 307, 386, 416], "wrap_at": 383, "wrap_coord": 193, "wrapper": [56, 242, 253, 311, 386, 387, 414, 417, 495, 507], "write": [11, 15, 16, 26, 82, 83, 86, 87, 88, 91, 100, 101, 102, 105, 107, 109, 110, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 188, 189, 191, 195, 197, 200, 201, 207, 219, 233, 241, 265, 266, 267, 268, 269, 341, 350, 373, 375, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 394, 395, 396, 398, 399, 400, 402, 408, 411, 417, 420, 425, 427, 430, 431, 432, 433, 438, 441, 446, 454, 455, 458, 460, 473, 477, 478, 482, 483, 489, 491, 492, 507, 512, 568, 570], "write_arf": 107, "write_bkg": 107, "write_covari": [15, 100, 207, 219, 241], "write_dataset": 15, "write_ds9": 478, "write_model": 15, "write_pha": 107, "write_rmf": 107, "writeabl": 400, "writer": [87, 91, 392, 399], "writeto": [86, 142, 143, 144, 148, 149, 150, 152, 155, 157, 159, 160, 458], "written": [83, 88, 100, 101, 102, 105, 107, 109, 110, 122, 124, 146, 147, 153, 158, 161, 188, 189, 191, 195, 197, 200, 201, 203, 372, 373, 375, 377, 381, 382, 392, 398, 400, 435, 441, 459, 477, 480, 495, 503, 504, 507, 520, 566, 571], "wrong": [372, 421, 435, 436, 437], "wrote": 398, "wrt": [83, 158, 161, 372, 390, 466, 562], "wstat": [105, 110, 292, 293, 384, 411, 429, 430, 442, 446, 447, 449, 452, 456, 467, 471, 480, 503, 566], "wstatcountsstatist": [467, 569], "wt": [26, 469], "wun": 415, "www": [26, 67, 87, 91, 139, 392, 482, 507], "wyatt": [411, 566], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 102, 109, 127, 137, 138, 139, 143, 193, 197, 198, 206, 209, 211, 213, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 261, 262, 263, 268, 269, 282, 288, 289, 291, 302, 303, 304, 306, 310, 312, 317, 326, 361, 364, 365, 372, 373, 377, 379, 380, 381, 386, 397, 401, 444, 449, 450, 456, 459, 463, 467, 470, 472, 473, 475, 480, 483, 493, 501, 507, 524, 525, 567, 569], "x27": 473, "x86_64": [441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "x_": 127, "x_0": [188, 189, 191, 197, 200, 201], "x_1": 311, "x_2": 311, "x_3": 311, "x_bkg": 467, "x_edg": 128, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [188, 189, 191, 197, 200, 201], "x_j": 127, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [127, 324, 326, 460], "x_min": [127, 324, 326, 460], "x_n": [188, 189, 191, 197, 200, 201], "x_r_0": 231, "x_ref": [127, 460], "x_sigma": 228, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [206, 472], "xarg": 372, "xaxi": 507, "xerr": [441, 480], "xf": 482, "xfail": 372, "xlabel": [373, 437, 452, 466, 480, 483, 499, 500, 501, 524, 561], "xlim": [359, 454, 480, 483, 501], "xmax": [17, 18, 21, 22, 24, 25, 27, 197, 400], "xmin": [17, 18, 21, 22, 24, 25, 27, 197, 400], "xml": [381, 382, 383, 416, 430, 432, 482, 495], "xmltodict": [424, 482], "xref": 127, "xspec": [221, 270, 296, 430, 442, 568], "xunit": [448, 533], "xviii": 392, "xx": [383, 398], "xxx": [87, 91, 377, 398], "xxx_by_coord": 475, "xxxx": 507, "xy": [446, 456, 460, 524], "xy_posit": [33, 34, 38], "xytext": 524, "xyz": 401, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 137, 138, 143, 193, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 302, 303, 304, 306, 310, 312, 364, 372, 386, 397, 437, 441, 450, 456, 459, 472, 480, 501, 507], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [206, 472], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 279, 335, 338, 340, 341, 371, 380, 381, 383, 384, 385, 388, 389, 394, 399, 400, 402, 403, 415, 416, 417, 420, 425, 434, 438, 441, 443, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 492, 493, 506, 564, 565, 566, 567], "yaml_str": [219, 241, 447], "yaxi": [444, 507], "ye": 402, "year": [45, 61, 65, 78, 372, 377, 379, 380, 382, 389, 392, 393, 397, 399, 402, 429, 431, 432, 455, 457, 470, 482, 499, 500, 501, 502], "yearli": [405, 430], "yellow": 362, "yerr": 467, "yet": [89, 371, 372, 375, 377, 379, 386, 389, 392, 393, 439, 444, 447, 491, 571], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 188, 189, 191, 197, 200, 201, 336, 379, 385, 386, 391, 393, 395, 400, 476, 568, 569, 570], "yk04": [45, 48], "yk04b": 48, "ylabel": [373, 466, 480, 483, 499, 500, 501, 524, 561], "ylim": [359, 442, 452, 480, 483, 499, 501, 540, 549, 550, 551], "ymax": [524, 525], "ymin": [524, 525], "yml": [375, 389, 401, 402, 403, 404, 406, 431], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 101, 104, 107, 123, 124, 137, 143, 145, 148, 171, 188, 189, 191, 197, 200, 201, 206, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 272, 279, 371, 372, 373, 374, 375, 377, 379, 382, 386, 389, 390, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 423, 431, 432, 433, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 456, 458, 459, 462, 465, 466, 467, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492, 493, 503, 504, 507, 510, 514, 518, 541, 564, 567, 568, 569, 570, 571], "your": [16, 19, 20, 26, 84, 90, 99, 104, 123, 213, 214, 217, 221, 223, 224, 225, 229, 235, 236, 238, 242, 244, 246, 247, 248, 253, 258, 260, 261, 262, 263, 266, 270, 371, 372, 373, 375, 377, 379, 402, 403, 404, 405, 406, 408, 409, 412, 413, 414, 417, 418, 423, 432, 433, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 502, 507, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 569], "yourself": [567, 568], "yr": [45, 52, 53, 497, 499, 500, 501], "yscale": [452, 559], "yt": 372, "yu": 415, "yunit": [446, 448, 469, 470, 483, 544], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 431, "yy": 398, "yyyi": 398, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 302, 303, 306, 397, 398, 469, 497, 533], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 427, "zanin": [431, 432], "zd": 83, "zen": 479, "zen_pnt": 479, "zenith": [441, 455, 479, 482, 483, 484, 512], "zenith_angl": [83, 399, 483, 493], "zenodo": [398, 425], "zero": [52, 53, 67, 87, 91, 100, 102, 105, 109, 110, 132, 137, 145, 146, 147, 150, 153, 158, 174, 188, 189, 191, 197, 200, 201, 245, 267, 269, 270, 311, 317, 329, 372, 416, 419, 434, 470, 474, 475, 480, 570], "zhao": [27, 438], "zhen": 139, "zip": [387, 400, 401, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 501, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "zl": [26, 469], "zone": 467, "zsh": 373, "zt": [26, 469], "z\u00e9": 430, "\u00e0": 429, "\u0261\u00e6m\u0259pa\u026a": 507, "\u03b3": [133, 495, 566], "\u03c3": 457}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 447, 459, 485, 491], "0": [381, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "1": [377, 381, 400, 410, 411, 418, 419, 421, 426, 434, 435, 436, 437, 438, 439, 480], "10": [386, 410, 412], "10th": 434, "11": [387, 410, 413], "12": [388, 410, 414], "12th": 425, "13": [389, 410, 415, 424, 427], "13th": 437, "14": [390, 410, 416], "14th": 435, "15": [410, 417], "16": [391, 410, 418], "16th": 426, "17": [410, 419], "18": [392, 410, 420, 421, 422], "19": [393, 410, 423], "19th": 422, "1d": [447, 449, 455, 464, 465, 487], "1dc": 482, "2": [378, 379, 400, 410, 422, 424, 436, 438, 480, 546], "20": [394, 410, 425, 426, 428], "2014": 411, "2015": [424, 427], "2016": [428, 429], "2017": 430, "2018": [431, 432, 433], "2019": [412, 413, 414, 415, 416, 417], "2020": [418, 419, 420, 421, 422], "2021": 423, "2022": [425, 426, 434], "2023": [435, 436, 437], "2024": 438, "21": 395, "22": [396, 429], "22nd": 423, "23": [397, 432], "24": 398, "25": [399, 411], "26": [400, 415], "28": [412, 430, 431], "29": [413, 433], "29th": 438, "2d": [451, 487], "3": [379, 400, 410, 417, 427, 439], "30": [414, 416], "32": 372, "3955": 400, "3d": [454, 455, 462, 464, 487], "3fgl": [538, 549], "3fhl": 455, "4": [380, 410, 428], "4122": 400, "4fgl": [550, 551], "4th": 420, "5": [381, 410, 429], "6": [382, 410, 430], "64": 372, "6th": [421, 436], "7": [379, 383, 410, 431], "8": [384, 410, 432], "9": [385, 410, 433], "A": 446, "As": 513, "In": 373, "ON": [443, 448, 455], "On": 449, "The": [378, 402, 455, 457, 472, 480, 504, 516], "To": [372, 373, 392, 507], "about": 480, "abov": 457, "absolute_tim": 353, "absorpt": [395, 442, 533], "abstract": [377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "accept": 375, "access": [471, 475, 484, 504], "accessor": 519, "account": 442, "action": [372, 392], "ad": 475, "adapt": 450, "adaptiveringbackgroundmak": 163, "add": [383, 477], "add_colorbar": 360, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [395, 400, 513, 565], "aeff_2d": 509, "against": 448, "aim": 477, "alia": 395, "all": 465, "along": 399, "altern": [380, 383, 385, 386, 387, 388, 389, 390, 392, 393, 396, 399], "amplitud": [400, 480], "an": [372, 441, 458, 459, 471, 476], "anaconda": 405, "analysi": [0, 11, 15, 378, 381, 441, 443, 446, 447, 448, 449, 454, 455, 456, 464, 467, 487, 491, 503, 506, 565], "analysisconfig": 16, "angl": [509, 510, 511, 513], "angular": 520, "annihil": 469, "annotate_heatmap": 361, "api": [6, 372, 373, 394, 396, 399, 400, 434, 437, 438, 487, 492], "apply_edisp": [111, 115], "approach": [387, 443, 444, 447, 449, 450, 451, 452, 455, 458, 459, 460, 462, 463, 464, 465, 466, 472, 476, 477, 479, 491, 492], "apr": [419, 424, 428, 430], "arbitrari": 399, "area": [473, 482, 509], "argument": [372, 386], "arm": 497, "asmoothmapestim": 117, "assert": 372, "assert_quantity_allclos": 347, "assert_skycoord_allclos": 348, "assert_time_allclos": 349, "assess": [454, 472], "assign": [465, 477], "astro": [1, 498], "astronomi": 387, "astrophys": [1, 496, 497, 498], "astropi": [372, 397], "asymmetr": 473, "attribut": [372, 373, 383], "aug": [411, 427], "author": 398, "authorship": 398, "avail": 470, "ax": [475, 520], "axi": [372, 512], "backend_default": 314, "background": [383, 387, 391, 394, 400, 452, 457, 458, 474, 477, 482, 483, 491, 510, 514, 515, 516, 517, 568], "background2d": 142, "background3d": 143, "backgroundirf": 144, "backgroundirfmodel": 383, "backgroundmodel": 383, "backport": 372, "base": [396, 399, 518], "basic": [456, 475], "bayesian": 463, "between": 394, "bin": [387, 441, 457, 520], "binder": 402, "bit": 372, "bkg_2d": 510, "bkg_3d": 510, "block": 463, "boundari": 476, "branch": 401, "break": 372, "broken": [373, 534, 548], "brokenpowerlawspectralmodel": 213, "bsd": 372, "bug": [425, 434, 437, 438], "bugfix": 401, "build": [373, 375, 402, 464, 465], "built": 564, "bundl": 372, "burkertprofil": 17, "butterfli": 492, "call": 383, "candid": [401, 450], "caplog": 372, "cartesian": 300, "case": [378, 382, 400, 570], "casebattacharya1998": 28, "cash": [284, 568, 569], "cash_sum_cython": 285, "cashcountsstatist": 281, "catalog": [2, 470, 476, 477, 493, 502], "catalog_registri": 55, "caveat": 568, "cell": 372, "certif": 375, "cff": 398, "chain": [446, 448], "chang": [372, 393, 434, 437, 438], "changelog": 392, "character": 463, "check": [11, 372, 373, 407, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "checker": 346, "chi": 457, "choos": 373, "citat": 398, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 372, 373, 382, 383, 396, 399, 492, 513, 569], "clean": 391, "cli": 567, "click": 372, "clobber": 372, "clumpi": 495, "cluster": [13, 479], "code": [372, 373, 378, 381, 402], "codemeta": 398, "collect": 398, "colormap": 572, "colormap_hess": 362, "colormap_milagro": 363, "combin": [477, 504], "command": [11, 372, 567], "compar": [448, 464], "compound": [478, 535], "compound_region_to_region": 330, "compoundspectralmodel": 214, "comput": [440, 441, 445, 446, 447, 452, 453, 456, 461, 468, 472, 481, 486, 488, 490, 492, 494, 522, 532, 553, 563], "compute_chisq": 286, "compute_flux_doubl": 287, "compute_fpp": 288, "compute_fvar": 289, "compute_lightcurve_doublingtim": 133, "compute_lightcurve_fpp": 134, "compute_lightcurve_fvar": 135, "conda": 403, "confer": 398, "confid": 472, "config": [11, 451, 452, 567], "configur": [447, 454, 460, 464, 491, 565], "constant": [523, 536, 554], "constantfluxspatialmodel": 215, "constantspatialmodel": 216, "constantspectralmodel": 217, "constanttemporalmodel": 218, "contain": 399, "containment_radiu": 202, "containment_region": 203, "content": [471, 520], "context": [443, 444, 446, 447, 448, 449, 450, 451, 452, 455, 457, 458, 460, 462, 463, 464, 465, 466, 476, 479, 480, 491, 492], "contigu": 475, "continu": 402, "contour": 472, "contribut": [375, 398, 477], "contributor": [398, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "conveni": 384, "convent": 372, "convers": 372, "convert": 372, "coordin": [13, 372, 383, 510, 520], "correl": 452, "count": [477, 483, 503, 569], "covari": [204, 472], "covarianceresult": 205, "creat": [443, 446, 451, 452, 459, 471, 473, 475, 476, 492, 520], "create_cosmic_ray_spectral_model": 272, "create_crab_spectral_model": 273, "create_fermi_isotropic_diffuse_model": 274, "create_map_dataset_from_observ": 112, "create_map_dataset_geom": 113, "creation": [443, 447, 465], "cstat": 290, "cta": [382, 482], "cube": [378, 475, 487], "cumul": 443, "current": 397, "curv": [387, 464, 465, 466, 561, 562], "custom": [478, 480, 564], "cut": [444, 448], "cutoff": [537, 538, 539, 549, 550, 551], "cutout": 475, "cycl": 397, "cython": [397, 402], "d_sun_to_galactic_cent": 299, "dark": [469, 495], "darkmatt": 1, "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 372, 378, 380, 381, 387, 399, 402, 442, 443, 446, 447, 448, 454, 455, 457, 460, 464, 465, 467, 471, 474, 475, 484, 487, 491, 492, 493, 504, 515, 567, 568], "dataflow": 399, "dataset": [4, 11, 99, 100, 372, 381, 384, 393, 394, 399, 441, 443, 447, 448, 451, 452, 454, 455, 459, 464, 465, 466, 471, 472, 474, 476, 477, 480, 484, 491, 492, 503, 506], "dataset_registri": 98, "datasetmodel": 219, "datasetsmak": 164, "datastor": [82, 482, 492, 504], "dco": [375, 398], "deal": 373, "dec": 417, "decai": 469, "decemb": 436, "decis": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "default": 383, "defin": [441, 443, 446, 448, 456, 458, 459, 464, 465, 476, 492, 520], "definit": [398, 464, 515], "depend": [371, 389, 395, 425, 448, 457, 459, 478], "deprec": [372, 397], "deriv": 570, "detail": [379, 454], "detect": [393, 450, 456, 512], "detector": 510, "develop": [372, 374, 375, 379], "diagram": 382, "differ": [455, 475, 571], "diffus": 483, "dilat": 476, "direct": 448, "discuss": 387, "disk": [447, 459, 491, 492, 524], "diskspatialmodel": 220, "dispers": [473, 482, 483, 511], "dissolv": 391, "distribut": [389, 485, 497], "dl3": [3, 455, 485, 504, 512, 515], "dl4": [473, 503, 505, 515, 519, 564], "dl5": [505, 564], "dl6": 505, "dmprofil": 18, "do": 372, "doc": 402, "docstr": 373, "document": [373, 375, 381, 392, 438], "doubl": 463, "download": [11, 402], "downsampl": 520, "dr1": [485, 551], "dr2": 551, "dr3": 550, "draw": 322, "driven": 567, "drop": 379, "due": 442, "durat": 474, "e": 485, "each": 457, "earli": 375, "earth_location_from_dict": 309, "ebl": [442, 533], "ebl_data_builtin": 222, "eblabsorptionnormspectralmodel": 221, "edg": 505, "edisp": 473, "edisp_2d": 511, "edispkernel": 145, "edispkernelmap": [146, 512], "edispmap": 147, "effect": [473, 474, 482, 509], "effectiveareatable2d": 148, "einastoprofil": 21, "elaps": 571, "empti": 471, "encourag": 480, "end": 372, "energi": [395, 441, 448, 457, 459, 473, 476, 478, 482, 483, 505, 509, 510, 511, 513], "energydependentmorphologyestim": 119, "energydependentmultigausspsf": 149, "energydispersion2d": 150, "environ": 403, "eros": 476, "error": [472, 569], "estim": [5, 120, 390, 393, 396, 399, 447, 450, 457, 460, 463, 464, 474, 505, 515, 516, 569], "estimate_exposure_reco_energi": 136, "estimator_registri": 118, "evalu": [383, 384, 385], "event": [381, 385, 458, 459, 467, 475, 482, 483, 485, 493, 504, 512], "eventlist": [83, 504], "eventlistmetadata": 84, "evolut": 459, "exampl": [402, 480, 502, 503, 504, 505, 506, 512, 514, 515, 516, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 564, 568], "excess": [396, 443, 452, 463, 569], "excessmapestim": 121, "exclus": [446, 447, 452, 476, 491], "execut": 567, "exemplari": 400, "exercis": [441, 444, 446, 449, 454, 456, 458, 459, 466, 482, 483, 484, 485, 493], "exist": 378, "expcutoffpowerlaw3fglspectralmodel": 223, "expcutoffpowerlawnormspectralmodel": 224, "expcutoffpowerlawspectralmodel": 225, "expdecai": 555, "expdecaytemporalmodel": 226, "expect": 512, "explor": [443, 447, 456, 487], "exponenti": [29, 444, 537, 538, 539, 549, 550, 551], "expos": 383, "exposur": [473, 483], "extend": [443, 458], "extens": [373, 442], "extern": 372, "extra": 402, "extract": [452, 464, 465, 466], "extrapol": 372, "f_cash_root_cython": 291, "factor": 469, "factori": 475, "factoris": 512, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 400, "featur": [14, 397, 401, 434, 437, 438], "feb": [418, 431], "februari": 438, "fermi": [455, 483], "fermist": 495, "file": [373, 398, 447, 451, 452, 455, 482, 491, 504, 520], "fill": [475, 520], "filter": 465, "final": [377, 401, 447, 570], "find_peak": 137, "find_peaks_in_flux_map": 138, "finder": 516, "first": [401, 447], "fit": [10, 13, 206, 381, 387, 442, 443, 444, 446, 447, 448, 451, 454, 455, 456, 462, 466, 472, 476, 480, 483, 491, 492, 520, 564, 568, 569, 570], "fitresult": 207, "fix": [372, 425, 434, 437, 438], "fixedpointinginfo": 85, "fixtur": 372, "flare": 465, "float": 372, "flux": [396, 400, 441, 442, 444, 446, 447, 455, 460, 469, 470, 491, 492, 493, 505], "fluxestim": 396, "fluxmap": [122, 396], "fluxmetadata": 123, "fluxpoint": 124, "fluxpointscollect": 396, "fluxpointsdataset": [101, 384, 471], "fluxpointsestim": [125, 505], "fluxprofileestim": 126, "fold": 383, "folder": 402, "follow": 393, "format": [372, 571], "formula": 570, "forward": 383, "found": 567, "fov": [474, 514], "fov_to_ski": 301, "fovalign": 151, "fovbackgroundmak": [165, 514], "fovbackgroundmodel": 227, "fraction": 463, "freez": [397, 401, 477], "from": [372, 465, 475, 476, 477, 520], "from_yaml": 335, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 372, 373, 482, 509, 510, 511, 512, 513, 569, 571], "further": [387, 442, 568], "galact": [302, 483], "galactocentr": 497, "galleri": [372, 373, 521], "gamlik": 495, "gamma": [387, 469], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 372, 375, 378, 381, 389, 391, 392, 393, 397, 398, 399, 401, 402, 408, 409, 473, 482, 483, 484, 485, 495, 498, 502, 503, 504, 505, 506, 512, 514, 515, 516, 519, 564, 565, 571], "gaussian": [525, 526, 540, 556, 557], "gaussianspatialmodel": 228, "gaussianspectralmodel": 229, "gaussiantemporalmodel": 230, "gener": [372, 378, 382, 387, 398, 399, 505, 526, 557], "generalist": 396, "generalizedgaussianspatialmodel": 231, "generalizedgaussiantemporalmodel": 232, "geom": 186, "geometri": [443, 456, 464, 465, 475, 476, 491, 492, 518, 520], "get": [375, 392, 404, 442, 451, 452, 475, 496, 497, 498, 504, 519], "get_combined_significance_map": 139, "get_images_path": 336, "get_irfs_featur": 96, "get_random_st": 323, "get_rebinned_axi": 140, "get_wstat_gof_term": 292, "get_wstat_mu_bkg": 293, "github": 372, "given": 477, "global": 394, "glossari": 566, "good": 570, "gpl": 372, "group": 479, "gti": [86, 504], "guid": [374, 508], "guidelin": [373, 377, 378, 392], "h": 485, "halv": 463, "handl": [372, 381, 382, 383, 394, 398, 474, 571], "have": [380, 382, 387, 388, 396], "hawc": [455, 484], "hduindext": 87, "hduloc": 307, "healpix": 518, "help": 407, "helper": 384, "hess": 455, "hgp": 470, "hierarch": 479, "hierarchi": 399, "hierarchical_clust": 297, "high": [0, 5, 381, 388, 491, 506], "hli": 447, "how": [372, 373, 375, 392, 401, 475, 507], "hpxgeom": 187, "hpxmap": 188, "hpxndmap": [189, 519], "hstack_column": 342, "i": [372, 375, 377, 460], "idea": 382, "imag": [373, 378, 386, 391, 450, 456, 475, 487], "imageprofil": 127, "imageprofileestim": 128, "implement": [382, 383, 392, 398, 400, 478, 480], "import": [372, 462], "improv": [383, 395, 425, 434, 437, 438], "inbuilt": 473, "includ": [373, 480], "index": [475, 480, 504], "info": [11, 372], "inform": [398, 470, 480, 511], "input": [372, 399, 450], "inspect": 492, "instal": [392, 404, 405, 407], "instrument": [7, 455, 512], "integr": [13, 402, 441], "integrate_spectrum": 275, "interact": 394, "interest": 457, "interfac": [0, 381, 383, 388, 491, 506, 519], "interpol": [13, 372, 475], "interpolate_profil": 312, "interpolation_scal": 313, "interv": 465, "intrins": 442, "introduc": [383, 391, 393, 395, 396, 460], "introduct": [383, 386, 387, 389, 390, 392, 396, 398, 399, 441, 446, 448, 456, 467, 469, 470, 471, 474, 475, 482, 483, 487, 493, 495, 497, 498, 568], "inversecdfsampl": 321, "ipython": 408, "irf": [7, 152, 381, 399, 441, 471, 473, 482, 512], "irf_registri": 154, "irfmap": 153, "isothermalprofil": 22, "isotrop": 483, "issu": 407, "iter": 475, "j": 469, "jan": 412, "jfactori": 23, "joint": [454, 455, 503], "json": 398, "jul": 415, "june": [426, 437], "jupyt": [372, 408], "kernel": 473, "labelmapaxi": [190, 475], "lat": [455, 483], "law": [444, 534, 537, 538, 539, 545, 546, 547, 548, 549, 550, 551], "lazi": 384, "lazyfitsdata": 308, "lc": 464, "let": 459, "level": [0, 5, 378, 381, 388, 491, 492, 506], "li": 467, "licens": 372, "light": [387, 464, 465, 466, 562], "lightcurv": [387, 458, 463, 466, 470], "lightcurveestim": [129, 505], "lightcurvetemplatetemporalmodel": 233, "like": 458, "likelihood": 570, "limit": 382, "line": [11, 372, 567], "linear": 558, "lineartemporalmodel": 234, "link": 373, "list": [383, 384, 385, 386, 387, 388, 389, 458, 465, 470, 475, 476, 477, 478, 493, 504], "literatur": 448, "livetim": 474, "load": [384, 441, 442, 444, 446, 448, 470, 477], "load_irf_dict_from_fil": [162, 512], "locat": 372, "log": [11, 372, 444, 541, 542], "logparabolanormspectralmodel": 235, "logparabolaspectralmodel": 236, "logspir": 34, "long": 398, "loop": [443, 474, 492], "lorimer2006": 35, "low": [378, 492], "lt": 397, "ma": 467, "mai": [414, 425], "maintain": [379, 398], "mainten": 381, "major": 401, "make": [372, 375, 401, 456, 459, 467, 492], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 331, "make_counts_rad_max": 177, "make_edisp_kernel_map": 178, "make_edisp_map": 179, "make_effective_livetime_map": 180, "make_map_background_irf": 181, "make_map_exposure_true_energi": 182, "make_observation_time_map": 183, "make_orthogonal_rectangle_sky_region": 332, "make_path": 337, "make_psf_map": 184, "make_theta_squared_t": 185, "maker": [8, 167, 393, 399, 443, 465, 474, 491, 492, 514, 515, 516], "maker_registri": 166, "mamba": 405, "manag": [381, 405], "manual": [476, 479], "map": [9, 191, 195, 378, 381, 382, 450, 451, 452, 455, 456, 462, 467, 469, 473, 475, 476, 477, 489, 493, 505, 518, 519, 520], "mapax": 192, "mapaxi": 193, "mapcoord": [194, 519], "mapdataset": [102, 384, 454, 458, 471, 484, 503], "mapdataseteventsampl": [103, 385], "mapdatasetmak": [168, 515], "mapdatasetmetadata": 104, "mapdatasetonoff": [105, 384], "mappanelplott": 359, "mar": 413, "march": 435, "mask": [386, 446, 447, 452, 471, 476, 491], "materi": 398, "matter": [469, 495], "measur": 568, "meet": 381, "messag": 372, "met": 571, "metadata": [398, 399], "method": [373, 384, 385, 400, 463, 475, 505, 519], "method_default": 315, "method_kwargs_default": 316, "meyercrabspectralmodel": 238, "miniconda": 405, "minor": 393, "mission": 571, "model": [10, 239, 241, 381, 383, 391, 394, 395, 399, 400, 442, 443, 446, 447, 448, 451, 454, 455, 456, 458, 459, 464, 465, 466, 469, 470, 471, 472, 477, 478, 480, 482, 491, 492, 493, 497, 498, 499, 500, 501, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 568], "model_registri": 237, "modelbas": 240, "modif": 476, "modifi": [372, 475, 478], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 457, "morphologi": 478, "motion_since_birth": 303, "motiv": 400, "mpl_plot_check": 350, "multi": 455, "multipl": [458, 477, 480, 503], "multiprocessing_manag": 319, "n_jobs_default": 317, "naima": 543, "naimaspectralmodel": 242, "name": [372, 383, 512], "nebula": 500, "new": [372, 383, 387, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 465], "next": [444, 446, 447, 450, 456, 464, 482, 484, 485, 491, 493], "nfwprofil": 25, "night": 464, "non": [372, 475, 520], "norm": [395, 478, 527, 539, 542, 544, 547], "norm_bounds_cython": 294, "normal": [324, 491], "notat": 569, "note": [372, 410, 446, 568], "notebook": [11, 372, 380, 408], "nov": [420, 421, 422, 423, 429, 433], "novemb": 434, "now": 387, "nuisanc": 400, "number": [372, 397, 512], "numpi": 397, "o": 460, "object": [372, 373, 382, 394, 451, 452, 458, 459, 470, 479], "observ": [3, 88, 92, 381, 382, 442, 446, 447, 456, 458, 459, 464, 465, 474, 479, 491, 492], "observationeventsampl": 108, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [441, 457, 466, 479], "off": [444, 446, 449, 455], "offset": [509, 510, 511, 513], "ogipdatasetread": 106, "ogipdatasetwrit": 107, "old": 402, "onto": 475, "open": 467, "oper": [475, 476], "optimizeresult": 208, "option": [371, 389, 472], "org": 402, "organ": [378, 387], "origin": [372, 375], "other": [372, 373, 382, 402, 405, 495], "outlin": 400, "outlook": [384, 385, 386, 388, 389, 391, 392, 393, 396], "output": 372, "over": 467, "overview": [392, 404, 457, 482, 514, 516, 517], "overwrit": 372, "own": 567, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 391, 393, 402, 405, 425, 487, 495, 496, 565], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 572, "paper": 381, "parabola": [444, 541, 542], "parallel": [13, 384], "paramet": [209, 210, 383, 395, 400, 447, 457, 472, 477, 478, 491], "parameterestim": 130, "parametr": 383, "parametricpsf": 159, "pdf": 325, "perform": [385, 443, 482, 492], "person": 398, "perspect": 379, "phase": [467, 561], "phasebackgroundmak": 169, "phasogram": 467, "piecewis": [527, 544], "piecewisenormspatialmodel": 243, "piecewisenormspectralmodel": 244, "pig": [376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "pip": 405, "pixel": [372, 386, 476], "plan": 379, "plot": [14, 372, 442, 446, 447, 450, 456, 457, 460, 475, 477, 492, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 572], "plot_contour_lin": 364, "plot_distribut": 365, "plot_heatmap": 366, "plot_map_rgb": 367, "plot_npred_sign": 368, "plot_spectrum_datasets_off_region": 369, "plot_theta_squared_t": 370, "png": 373, "point": [400, 441, 442, 444, 446, 447, 455, 456, 458, 463, 470, 482, 491, 492, 493, 505, 513, 528], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 245, "poisson": 568, "polar": 304, "polici": 398, "pool_kwargs_default": 318, "popul": [1, 497], "posit": [400, 480, 511], "possibl": 398, "post": 401, "power": [444, 534, 537, 538, 539, 545, 546, 547, 548, 549, 550, 551], "powerlaw": [444, 559], "powerlaw2spectralmodel": 246, "powerlawnormspectralmodel": 247, "powerlawspectralmodel": 248, "powerlawtemporalmodel": 249, "precis": 385, "predict": 503, "prepar": [387, 397, 441, 443, 459, 492], "prerequisit": [443, 444, 446, 447, 448, 449, 451, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 472, 476, 477, 480, 491, 492], "pretti": 470, "primaryflux": 26, "print": 470, "prior": [250, 400, 480], "priorparamet": [211, 212], "produc": 484, "product": [469, 473], "profil": [442, 460, 469, 570], "project": [381, 402], "propag": 399, "propos": [380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 443, 444, 447, 449, 450, 451, 452, 455, 458, 459, 460, 462, 463, 464, 465, 466, 472, 476, 477, 479, 491, 492], "psf": [473, 483, 513], "psf3d": 155, "psf_tabl": 513, "psfkernel": 156, "psfking": 157, "psfmap": [158, 473, 512], "public": 398, "pull": [372, 375, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "pulsar": [51, 467, 499, 500], "purpos": 377, "pwn": 50, "pydant": 399, "python": [372, 373, 379, 397, 408], "qualiti": [381, 402, 446, 448, 454, 472], "quantiti": [479, 505], "radial": 510, "radial_distribut": 48, "radmax2d": 160, "rai": [387, 469], "random": [13, 372], "rang": [474, 515], "read": [450, 455, 459, 460, 475, 476, 477, 520], "read_hermes_cub": [276, 278], "read_yaml": 338, "recommend": [404, 406], "reconstruct": 510, "recopsfmap": 161, "recursive_merge_dict": 339, "redshift": 442, "reduc": [4, 451, 452, 471, 491, 492], "reduct": [8, 381, 387, 443, 446, 447, 448, 454, 464, 465, 474, 484, 491, 492, 515, 567], "refer": [6, 392, 566, 567, 568], "reflect": [474, 516], "reflectedregionsbackgroundmak": [170, 516], "reflectedregionsfind": 171, "region": [13, 383, 386, 441, 443, 446, 448, 474, 476, 477, 516, 520], "region_to_fram": 333, "regiongeom": [196, 520], "regionndmap": [197, 519, 520], "regions_to_compound_region": 334, "regionsfind": 172, "relat": 520, "releas": [372, 381, 397, 398, 401, 402, 410], "remark": 377, "remnant": 501, "remov": [372, 477], "renam": 372, "repositori": 402, "repr": 372, "represent": [395, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "request": [372, 375, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "requir": [371, 372, 389, 399], "requires_data": 351, "requires_depend": 352, "resampl": 471, "resample_energy_edg": 141, "residu": [446, 448, 454, 492], "resolv": [393, 467], "respons": [7, 512], "restructur": 392, "result": [387, 396, 441, 443, 447, 450, 457, 460, 464, 570], "return": [372, 373], "review": 377, "ring": [452, 474, 517], "ringbackgroundmak": 173, "rmf": 511, "road": 382, "roadmap": 381, "rotat": 386, "rst": 373, "run": [11, 375, 446, 447, 448, 457, 459, 460, 464, 491, 567], "run_multiprocess": 320, "safe": [474, 515], "safemaskmak": 174, "sampl": [385, 458, 459], "sample_powerlaw": 326, "sample_spher": 327, "sample_sphere_dist": 328, "sample_tim": 329, "sampler": 459, "save": [447, 491, 492], "scale": 571, "scale_plot_flux": 277, "scaledregulargridinterpol": 311, "scalespectralmodel": 253, "scenario": 382, "schedul": 397, "scheme": [383, 398], "script": [11, 13, 372, 408, 487, 489], "section": 392, "select": [443, 447, 456, 464, 465, 470, 477, 491, 492, 504], "select_nested_model": 279, "sensit": 441, "sensitivityestim": 131, "sep": [416, 432], "serial": [384, 399, 455], "serialis": [400, 447, 460, 473, 477, 478, 483, 503], "seril": 383, "set": [375, 447, 475, 491], "setup": [380, 402, 404, 406, 407, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 491, 492, 493], "sever": 372, "share": 478, "shell": 529, "shell2": 530, "shell2spatialmodel": 254, "shellspatialmodel": 255, "shorter": 395, "should": 372, "show": [456, 457, 479], "signal": 457, "signific": [443, 450, 452, 476, 569], "simplepulsar": 54, "simplifi": 395, "simul": [381, 384, 448, 449, 458, 459, 462, 466], "sine": 560, "sinetemporalmodel": 256, "singl": [373, 449], "size": 520, "skip": 372, "sky": [9, 383, 386, 456, 458, 476, 511, 519], "sky_to_fov": 305, "skycoord": 519, "skymodel": [257, 478], "slice": 475, "small": 375, "smooth": [450, 548], "smoothbrokenpowerlawspectralmodel": 258, "snr": 52, "snrtruelovemcke": 53, "solut": 399, "some": [372, 382, 476], "sourc": [1, 2, 441, 443, 446, 450, 456, 457, 458, 459, 466, 470, 476, 480, 482, 493, 497, 498, 499, 500, 502], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": [62, 502], "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": [66, 502], "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 383, "sourcemodel": 383, "spatial": [383, 395, 456, 469, 475, 478, 497, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531], "spatial_model_registri": 251, "spatialirfmodel": 383, "spatialmodel": 259, "special": 570, "specif": [383, 392, 470], "spectra": 469, "spectral": [395, 400, 442, 443, 444, 446, 447, 448, 455, 456, 469, 478, 487, 493, 521, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552], "spectral_model_registri": 252, "spectralirfmodel": 383, "spectralmodel": 260, "spectrum": [442, 446, 448, 449, 456, 467, 474, 492], "spectrumdataset": [109, 384, 471], "spectrumdatasetmak": [175, 515], "spectrumdatasetonoff": [110, 384, 503], "sphinx": [372, 373], "spiral": 497, "split_dataset": [114, 116], "spread": [482, 513], "squar": [457, 485], "stack": [446, 452, 454, 503], "standard_scal": 298, "standardise_unit": 357, "start": [392, 404, 496, 497, 498, 504, 519], "stat": [12, 442], "stat_contour": 472, "stat_profile_ul_scipi": 280, "stat_surfac": 472, "statist": [12, 446, 476, 568, 569], "statu": [377, 382, 391, 397], "step": [447, 482, 484, 485, 565], "store": [387, 447, 511], "str": 372, "structur": [391, 393, 425, 493, 565], "structure_funct": 295, "studi": 387, "style": 378, "sub": [475, 496], "subclass": 400, "subpackag": 378, "subset": 470, "suggest": 398, "summari": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 454, 483], "super": [549, 550, 551], "superexpcutoffpowerlaw3fglspectralmodel": 261, "superexpcutoffpowerlaw4fgldr3spectralmodel": 262, "superexpcutoffpowerlaw4fglspectralmodel": 263, "supernova": 501, "support": [372, 379, 397, 398, 400, 473, 503], "survei": [489, 572], "symmetr": 510, "systemat": 400, "t": [450, 569], "tabl": [13, 457, 470, 504], "table_row_to_dict": 343, "table_standardise_units_copi": 344, "table_standardise_units_inplac": 345, "tag": 395, "target": 446, "task": [383, 384, 385, 386, 387, 388, 389], "templat": [458, 531, 552], "templatendspatialmodel": 265, "templatendspectralmodel": 266, "templatenpredmodel": 267, "templatephasecurvetemporalmodel": 268, "templatespatialmodel": 269, "templatespectralmodel": 270, "tempor": [459, 466, 478, 521, 554, 555, 556, 557, 558, 559, 560, 561, 562], "temporal_model_registri": 264, "temporalmodel": 271, "term": 398, "terminologi": 382, "test": [13, 372, 375, 457, 467], "text": 372, "theta": 485, "thi": 375, "thumbnail": 373, "time": [13, 381, 387, 440, 445, 453, 458, 461, 463, 465, 466, 468, 481, 486, 487, 488, 490, 494, 522, 532, 553, 563, 571], "time_ref_from_dict": 354, "time_ref_to_dict": 355, "time_relative_to_ref": 356, "timemapaxi": [198, 475], "timmerkonig_lightcurve_simul": 282, "to_yaml": 340, "tool": [11, 372, 567], "tooltip": 373, "touch": 375, "trapz_loglog": 310, "troubleshoot": [407, 567], "true": [509, 511, 513], "tsmapestim": 132, "tutori": [373, 380, 392, 404, 457, 482, 487, 495], "two": 477, "type": [372, 399, 503], "uncertainti": 390, "underli": 520, "unfold": 400, "unfreez": 477, "unif": 396, "unifi": [383, 396], "unit": [13, 372], "unit_from_fits_image_hdu": 358, "unix": 372, "unreleas": 439, "up": [375, 391, 393], "upsampl": 520, "us": [372, 382, 400, 405, 408, 447, 457, 458, 464, 471, 472, 473, 475, 491, 492, 498, 502, 503, 504, 505, 506, 512, 514, 515, 516, 519, 538, 549, 550, 551, 564], "user": [379, 508], "util": [4, 5, 8, 10, 13, 391, 565, 569, 571], "valid": 399, "valleespir": 38, "valu": [372, 400, 457, 475, 480], "vari": 466, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 458, 463], "varianc": 463, "variou": 479, "veloc": 497, "velocity_distribut": 49, "velocity_glon_glat": 306, "venv": 403, "version": [372, 397, 401, 410, 462], "virtual": 403, "visual": [14, 393, 475, 520, 572], "volum": 520, "warn": 372, "wc": [475, 520], "wcsgeom": 199, "wcsmap": 200, "wcsndmap": [201, 519], "we": [380, 387, 388, 396, 484], "webpag": 402, "what": [372, 375, 377, 380, 382, 387, 388, 396, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 444, 446, 447, 450, 456, 464, 491, 493], "where": 372, "which": 372, "wind": 500, "wise": 464, "without": 480, "wobbleregionsfind": 176, "work": 504, "workflow": 565, "write": [372, 377, 447, 459, 475, 476, 504, 520, 567], "write_yaml": 341, "wstat": [296, 568, 569, 570], "wstatcountsstatist": 283, "yaml": [395, 447, 491, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562], "your": [407, 447, 567], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})